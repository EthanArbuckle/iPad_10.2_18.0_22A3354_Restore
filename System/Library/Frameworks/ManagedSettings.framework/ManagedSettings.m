uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

id sub_1B7658064()
{
  void *v0;

  return objc_msgSend(v0, sel_processIdentifier);
}

uint64_t sub_1B7658074@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_1B76DB8B8();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t static Logger.agent.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7658074(&qword_1ED53AE70, (uint64_t)qword_1ED53AE58, a1);
}

uint64_t static Logger.subscription.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7658074(&qword_1ED53AFB0, (uint64_t)qword_1ED53AF98, a1);
}

unint64_t sub_1B7658114()
{
  unint64_t result;

  result = qword_1ED53B748;
  if (!qword_1ED53B748)
  {
    result = MEMORY[0x1BCCA94E8](&unk_1B76DFA28, &type metadata for Feature.FeatureFlags);
    atomic_store(result, (unint64_t *)&qword_1ED53B748);
  }
  return result;
}

const char *sub_1B7658158()
{
  return "ManagedSettings";
}

const char *sub_1B765816C()
{
  return "FamilyControls";
}

uint64_t static Feature.isManagedSettingsEnabled.getter()
{
  char v0;
  _QWORD v2[5];

  swift_beginAccess();
  if (byte_1ED53B740 == 2)
  {
    v2[3] = &type metadata for Feature.FeatureFlags;
    v2[4] = sub_1B7658114();
    v0 = sub_1B76DB894();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
  }
  else
  {
    v0 = byte_1ED53B740 & 1;
  }
  return v0 & 1;
}

uint64_t dispatch thunk of XPCConnectable.processIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

unint64_t static ManagedSettingsService.name.getter()
{
  return 0xD00000000000001ELL;
}

unint64_t static ManagedSettingsPublisherService.name.getter()
{
  return 0xD000000000000028;
}

id static ManagedSettingsPublisherService.clientInterface.getter()
{
  return sub_1B7658258(&qword_1ED53AF90, (id *)&qword_1ED53AF88);
}

id sub_1B7658258(_QWORD *a1, id *a2)
{
  if (*a1 != -1)
    swift_once();
  return *a2;
}

id static ManagedSettingsPublisherService.agentInterface.getter()
{
  return sub_1B7658258(&qword_1ED53AF78, (id *)&qword_1ED53AF80);
}

ManagedSettings::AccountSettings::Name_optional __swiftcall AccountSettings.Name.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  ManagedSettings::AccountSettings::Name_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1B76DBE70();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

void *static AccountSettings.Name.allCases.getter()
{
  return &unk_1E6CAD590;
}

unint64_t AccountSettings.Name.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000014;
  else
    return 0xD000000000000018;
}

uint64_t sub_1B7658358(char *a1, char *a2)
{
  return sub_1B76A2728(*a1, *a2);
}

uint64_t sub_1B7658364()
{
  return sub_1B76D8C80();
}

uint64_t sub_1B765836C()
{
  sub_1B76DBB1C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76583CC()
{
  return sub_1B76DA3DC();
}

ManagedSettings::AccountSettings::Name_optional sub_1B76583D4(Swift::String *a1)
{
  return AccountSettings.Name.init(rawValue:)(*a1);
}

void sub_1B76583E0(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD000000000000014;
  else
    v2 = 0xD000000000000018;
  v3 = 0x80000001B76E1210;
  if (*v1)
    v3 = 0x80000001B76E1230;
  *a1 = v2;
  a1[1] = v3;
}

void sub_1B7658424(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6CAD608;
}

uint64_t AccountSettings.denyiCloudLogout.getter()
{
  return sub_1B765A148(&qword_1EF1770A0, (uint64_t)&byte_1EF1770A8);
}

uint64_t sub_1B7658450@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF1770A0, (uint64_t)&byte_1EF1770A8, a2);
}

uint64_t sub_1B765846C(unsigned __int8 *a1)
{
  return AccountSettings.denyiCloudLogout.setter(*a1);
}

uint64_t AccountSettings.denyiCloudLogout.setter(unsigned __int8 a1)
{
  return sub_1B765A2F4(a1, &qword_1EF1770A0, (uint64_t)&byte_1EF1770A8);
}

uint64_t sub_1B76584AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  unsigned __int8 v39;

  v36 = a2;
  v37 = a3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  v12 = off_1EF1775A8;
  if (off_1EF1775A8)
  {
    v14 = *(_QWORD *)(a1 + 8);
    v13 = *(_QWORD *)(a1 + 16);
    v15 = *(unsigned __int8 *)(a1 + 66);
    if (a5)
    {
      v16 = a5;
    }
    else
    {
      a4 = *((_QWORD *)off_1EF1775A8 + 2);
      v16 = *((_QWORD *)off_1EF1775A8 + 3);
      swift_bridgeObjectRetain();
    }
    v18 = (void *)*((_QWORD *)v12 + 5);
    swift_retain();
    swift_bridgeObjectRetain();
    objc_msgSend(v18, sel_lock);
    swift_beginAccess();
    v19 = *((_QWORD *)v12 + 4);
    if (*(_QWORD *)(v19 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20 = sub_1B76606E0(a4, v16);
      if ((v21 & 1) != 0)
      {
        v22 = v20;
        v23 = v14;
        v24 = *(_QWORD *)(v19 + 56);
        v25 = sub_1B76DB888();
        HIDWORD(v34) = v15;
        v26 = v25;
        v35 = a4;
        v27 = *(_QWORD *)(v25 - 8);
        v28 = v24 + *(_QWORD *)(v27 + 72) * v22;
        v14 = v23;
        (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v11, v28, v25);
        v29 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56);
        a4 = v35;
        v30 = v26;
        v15 = HIDWORD(v34);
        v29(v11, 0, 1, v30);
      }
      else
      {
        v32 = sub_1B76DB888();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v11, 1, 1, v32);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v31 = sub_1B76DB888();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v11, 1, 1, v31);
    }
    objc_msgSend(*((id *)v12 + 5), sel_unlock);
    if (qword_1ED53B6B8 != -1)
      swift_once();
    v17 = sub_1B76968F0(v14, v13, (uint64_t)v11, a4, v16, v36, v37, v15);
    swift_bridgeObjectRelease();
    sub_1B765DE88((uint64_t)v11, &qword_1EF1774C0);
    swift_release();
  }
  else
  {
    v17 = 0;
  }
  v38 = _sSb15ManagedSettingsE5value4fromSbSgSo8NSObjectCSg_tFZ_0(v17);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1775A0);
  if (swift_dynamicCast())
    return v39;
  else
    return 2;
}

uint64_t sub_1B7658794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B7658AE0(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD))sub_1B7675660, &qword_1EF177590, &qword_1ED53B430);
}

double sub_1B76587B0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  double result;
  uint64_t v39;
  int v40;
  uint64_t v41;
  _OWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45[6];

  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  MEMORY[0x1E0C80A78](v12, v13);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  v16 = off_1EF1775A8;
  if (off_1EF1775A8)
  {
    v17 = *(_QWORD *)(a1 + 56);
    v43 = *(_QWORD *)(a1 + 48);
    v44 = v17;
    v18 = *(unsigned __int8 *)(a1 + 106);
    if (a5)
    {
      v19 = a5;
    }
    else
    {
      a4 = *((_QWORD *)off_1EF1775A8 + 2);
      v19 = *((_QWORD *)off_1EF1775A8 + 3);
      swift_bridgeObjectRetain();
    }
    v21 = (void *)*((_QWORD *)v16 + 5);
    swift_retain();
    swift_bridgeObjectRetain();
    objc_msgSend(v21, sel_lock);
    swift_beginAccess();
    v22 = *((_QWORD *)v16 + 4);
    if (*(_QWORD *)(v22 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v23 = sub_1B76606E0(a4, v19);
      if ((v24 & 1) != 0)
      {
        v25 = v23;
        v41 = a4;
        v26 = a3;
        v27 = *(_QWORD *)(v22 + 56);
        v28 = sub_1B76DB888();
        v40 = v18;
        v29 = v28;
        v42 = a6;
        v30 = a2;
        v31 = *(_QWORD *)(v28 - 8);
        v32 = v27 + *(_QWORD *)(v31 + 72) * v25;
        a3 = v26;
        a4 = v41;
        (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v15, v32, v28);
        v33 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56);
        a2 = v30;
        a6 = v42;
        v34 = v29;
        v18 = v40;
        v33(v15, 0, 1, v34);
      }
      else
      {
        v36 = sub_1B76DB888();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v15, 1, 1, v36);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v35 = sub_1B76DB888();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v15, 1, 1, v35);
    }
    v37 = v43;
    objc_msgSend(*((id *)v16 + 5), sel_unlock);
    if (qword_1ED53B6B8 != -1)
      swift_once();
    v20 = sub_1B76968F0(v37, v44, (uint64_t)v15, a4, v19, a2, a3, v18);
    swift_bridgeObjectRelease();
    sub_1B765DE88((uint64_t)v15, &qword_1EF1774C0);
    swift_release();
  }
  else
  {
    v20 = 0;
  }
  static Application.value(from:)(v20, v45);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177570);
  if ((swift_dynamicCast() & 1) == 0)
  {
    result = 0.0;
    *a6 = xmmword_1B76DC6E0;
    a6[1] = 0u;
    a6[2] = 0u;
  }
  return result;
}

uint64_t sub_1B7658AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B7658AE0(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD))sub_1B76763B4, &qword_1EF177580, &qword_1EF177588);
}

uint64_t sub_1B7658AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD), uint64_t *a7, uint64_t *a8)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  uint64_t (*v28)(_QWORD);
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v48 = a4;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  MEMORY[0x1E0C80A78](v15, v16);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  v19 = off_1EF1775A8;
  if (off_1EF1775A8)
  {
    v20 = *(_QWORD *)(a1 + 8);
    v46 = *(_QWORD *)(a1 + 16);
    v47 = v20;
    v45 = *(unsigned __int8 *)(a1 + 66);
    if (a5)
    {
      v21 = a5;
    }
    else
    {
      v21 = *((_QWORD *)off_1EF1775A8 + 3);
      v48 = *((_QWORD *)off_1EF1775A8 + 2);
      swift_bridgeObjectRetain();
    }
    v23 = (void *)*((_QWORD *)v19 + 5);
    swift_retain();
    swift_bridgeObjectRetain();
    objc_msgSend(v23, sel_lock);
    swift_beginAccess();
    v24 = *((_QWORD *)v19 + 4);
    if (*(_QWORD *)(v24 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v25 = sub_1B76606E0(v48, v21);
      if ((v26 & 1) != 0)
      {
        v27 = v25;
        v42 = a2;
        v28 = a6;
        v29 = a8;
        v30 = *(_QWORD *)(v24 + 56);
        v31 = sub_1B76DB888();
        v43 = a3;
        v44 = a7;
        v32 = v31;
        v33 = *(_QWORD *)(v31 - 8);
        v34 = v30 + *(_QWORD *)(v33 + 72) * v27;
        a8 = v29;
        a6 = v28;
        a2 = v42;
        (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v18, v34, v31);
        v35 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56);
        v36 = v32;
        a3 = v43;
        a7 = v44;
        v35(v18, 0, 1, v36);
      }
      else
      {
        v38 = sub_1B76DB888();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v18, 1, 1, v38);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v37 = sub_1B76DB888();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v18, 1, 1, v37);
    }
    v39 = v45;
    objc_msgSend(*((id *)v19 + 5), sel_unlock);
    if (qword_1ED53B6B8 != -1)
      swift_once();
    v22 = sub_1B76968F0(v47, v46, (uint64_t)v18, v48, v21, a2, a3, v39);
    swift_bridgeObjectRelease();
    sub_1B765DE88((uint64_t)v18, &qword_1EF1774C0);
    swift_release();
  }
  else
  {
    v22 = 0;
  }
  v49 = a6(v22);

  __swift_instantiateConcreteTypeFromMangledName(a7);
  __swift_instantiateConcreteTypeFromMangledName(a8);
  if (swift_dynamicCast())
    return v50;
  else
    return 0;
}

uint64_t sub_1B7658DF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _BYTE *a6@<X8>)
{
  return sub_1B7658EC0(a1, a2, a3, a4, a5, (void (*)(_QWORD *__return_ptr, _QWORD))static GameCenterSettings.OtherPlayerTypes.value(from:), &qword_1EF177578, (uint64_t)&type metadata for GameCenterSettings.OtherPlayerTypes, a6, 3);
}

uint64_t sub_1B7658E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B7658AE0(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD))sub_1B765ABA0, &qword_1EF177560, &qword_1EF177568);
}

uint64_t sub_1B7658E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B7658AE0(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD))sub_1B765B6A4, &qword_1EF177548, &qword_1EF177550);
}

uint64_t sub_1B7658E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B7658AE0(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD))sub_1B765C1A8, &qword_1EF177528, &qword_1EF177530);
}

uint64_t sub_1B7658E84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _BYTE *a6@<X8>)
{
  return sub_1B7658EC0(a1, a2, a3, a4, a5, (void (*)(_QWORD *__return_ptr, _QWORD))static UserSettings.SharingPolicy.value(from:), &qword_1EF177520, (uint64_t)&type metadata for UserSettings.SharingPolicy, a6, 3);
}

uint64_t sub_1B7658EC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void (*a6)(_QWORD *__return_ptr, _QWORD)@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X7>, _BYTE *a9@<X8>, char a10)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(_QWORD *__return_ptr, _QWORD);
  _BYTE *v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v50 = a8;
  v51 = a4;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  MEMORY[0x1E0C80A78](v17, v18);
  v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  v21 = off_1EF1775A8;
  if (off_1EF1775A8)
  {
    v22 = *(_QWORD *)(a1 + 8);
    v48 = *(_QWORD *)(a1 + 16);
    v49 = v22;
    v47 = *(unsigned __int8 *)(a1 + 66);
    if (a5)
    {
      v23 = a5;
    }
    else
    {
      v23 = *((_QWORD *)off_1EF1775A8 + 3);
      v51 = *((_QWORD *)off_1EF1775A8 + 2);
      swift_bridgeObjectRetain();
    }
    v25 = (void *)*((_QWORD *)v21 + 5);
    swift_retain();
    swift_bridgeObjectRetain();
    objc_msgSend(v25, sel_lock);
    swift_beginAccess();
    v26 = *((_QWORD *)v21 + 4);
    if (*(_QWORD *)(v26 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v27 = sub_1B76606E0(v51, v23);
      if ((v28 & 1) != 0)
      {
        v29 = v27;
        v44 = a2;
        v30 = a3;
        v31 = a7;
        v32 = *(_QWORD *)(v26 + 56);
        v33 = sub_1B76DB888();
        v45 = a6;
        v46 = a9;
        v34 = v33;
        v35 = *(_QWORD *)(v33 - 8);
        v36 = v32 + *(_QWORD *)(v35 + 72) * v29;
        a7 = v31;
        a3 = v30;
        a2 = v44;
        (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v20, v36, v33);
        v37 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56);
        v38 = v34;
        a6 = v45;
        a9 = v46;
        v37(v20, 0, 1, v38);
      }
      else
      {
        v40 = sub_1B76DB888();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v20, 1, 1, v40);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v39 = sub_1B76DB888();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v20, 1, 1, v39);
    }
    v41 = v47;
    objc_msgSend(*((id *)v21 + 5), sel_unlock);
    if (qword_1ED53B6B8 != -1)
      swift_once();
    v24 = sub_1B76968F0(v49, v48, (uint64_t)v20, v51, v23, a2, a3, v41);
    swift_bridgeObjectRelease();
    sub_1B765DE88((uint64_t)v20, &qword_1EF1774C0);
    swift_release();
  }
  else
  {
    v24 = 0;
  }
  a6(&v52, v24);

  __swift_instantiateConcreteTypeFromMangledName(a7);
  result = swift_dynamicCast();
  if ((result & 1) == 0)
    *a9 = a10;
  return result;
}

uint64_t sub_1B76591C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return sub_1B765921C(a1, a2, a3, a4, a5, (void (*)(_QWORD *__return_ptr, _QWORD))sub_1B765CB50, &qword_1EF177510, &qword_1EF177518, a6);
}

uint64_t sub_1B76591E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B7658AE0(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD))sub_1B7675B20, &qword_1EF177500, &qword_1EF177508);
}

uint64_t sub_1B7659200@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return sub_1B765921C(a1, a2, a3, a4, a5, (void (*)(_QWORD *__return_ptr, _QWORD))sub_1B765CFD8, &qword_1EF1774E8, &qword_1EF1774F0, a6);
}

uint64_t sub_1B765921C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void (*a6)(_QWORD *__return_ptr, _QWORD)@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(_QWORD *__return_ptr, _QWORD);
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51[3];

  v49 = a2;
  v50 = a4;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  MEMORY[0x1E0C80A78](v16, v17);
  v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  v20 = off_1EF1775A8;
  if (off_1EF1775A8)
  {
    v21 = *(_QWORD *)(a1 + 24);
    v47 = *(_QWORD *)(a1 + 32);
    v48 = v21;
    v46 = *(unsigned __int8 *)(a1 + 82);
    if (a5)
    {
      v22 = a5;
    }
    else
    {
      v22 = *((_QWORD *)off_1EF1775A8 + 3);
      v50 = *((_QWORD *)off_1EF1775A8 + 2);
      swift_bridgeObjectRetain();
    }
    v24 = (void *)*((_QWORD *)v20 + 5);
    swift_retain();
    swift_bridgeObjectRetain();
    objc_msgSend(v24, sel_lock);
    swift_beginAccess();
    v25 = *((_QWORD *)v20 + 4);
    if (*(_QWORD *)(v25 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v26 = sub_1B76606E0(v50, v22);
      if ((v27 & 1) != 0)
      {
        v28 = v26;
        v43 = a3;
        v29 = a7;
        v30 = *(_QWORD *)(v25 + 56);
        v31 = sub_1B76DB888();
        v44 = a9;
        v45 = a8;
        v32 = v31;
        v33 = a6;
        v34 = *(_QWORD *)(v31 - 8);
        v35 = v30 + *(_QWORD *)(v34 + 72) * v28;
        a7 = v29;
        a3 = v43;
        (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v19, v35, v31);
        v36 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56);
        a6 = v33;
        v37 = v32;
        a9 = v44;
        a8 = v45;
        v36(v19, 0, 1, v37);
      }
      else
      {
        v39 = sub_1B76DB888();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v19, 1, 1, v39);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v38 = sub_1B76DB888();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v19, 1, 1, v38);
    }
    v40 = v46;
    objc_msgSend(*((id *)v20 + 5), sel_unlock);
    if (qword_1ED53B6B8 != -1)
      swift_once();
    v23 = sub_1B76968F0(v48, v47, (uint64_t)v19, v50, v22, v49, a3, v40);
    swift_bridgeObjectRelease();
    sub_1B765DE88((uint64_t)v19, &qword_1EF1774C0);
    swift_release();
  }
  else
  {
    v23 = 0;
  }
  a6(v51, v23);

  __swift_instantiateConcreteTypeFromMangledName(a7);
  __swift_instantiateConcreteTypeFromMangledName(a8);
  result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
    *(_QWORD *)a9 = 0;
    *(_QWORD *)(a9 + 8) = 0;
    *(_BYTE *)(a9 + 16) = -1;
  }
  return result;
}

uint64_t sub_1B7659530@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return sub_1B76598B0(a1, a2, a3, a4, a5, (void (*)(_QWORD *__return_ptr, _QWORD))static UserSafetySettings.ScanningPolicy.value(from:), &qword_1EF1774E0, (uint64_t)&type metadata for UserSafetySettings.ScanningPolicy, a6);
}

uint64_t sub_1B765954C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _BYTE *a6@<X8>)
{
  return sub_1B7658EC0(a1, a2, a3, a4, a5, (void (*)(_QWORD *__return_ptr, _QWORD))static SafariSettings.CookiePolicy.value(from:), &qword_1EF1774D8, (uint64_t)&type metadata for SafariSettings.CookiePolicy, a6, 4);
}

double sub_1B7659588@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  _OWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double result;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  MEMORY[0x1E0C80A78](v12, v13);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  v16 = off_1EF1775A8;
  if (off_1EF1775A8)
  {
    v17 = *(_QWORD *)(a1 + 24);
    v44 = *(_QWORD *)(a1 + 16);
    v45 = v17;
    v18 = *(unsigned __int8 *)(a1 + 74);
    if (a5)
    {
      v19 = a5;
    }
    else
    {
      a4 = *((_QWORD *)off_1EF1775A8 + 2);
      v19 = *((_QWORD *)off_1EF1775A8 + 3);
      swift_bridgeObjectRetain();
    }
    v21 = (void *)*((_QWORD *)v16 + 5);
    swift_retain();
    swift_bridgeObjectRetain();
    objc_msgSend(v21, sel_lock);
    swift_beginAccess();
    v22 = *((_QWORD *)v16 + 4);
    if (*(_QWORD *)(v22 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v23 = sub_1B76606E0(a4, v19);
      if ((v24 & 1) != 0)
      {
        v25 = v23;
        v42 = a4;
        v26 = a6;
        v27 = a3;
        v28 = *(_QWORD *)(v22 + 56);
        v29 = sub_1B76DB888();
        v41 = v18;
        v30 = v29;
        v43 = a2;
        v31 = *(_QWORD *)(v29 - 8);
        v32 = v28 + *(_QWORD *)(v31 + 72) * v25;
        a3 = v27;
        a6 = v26;
        a4 = v42;
        (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v15, v32, v29);
        v33 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56);
        a2 = v43;
        v34 = v30;
        v18 = v41;
        v33(v15, 0, 1, v34);
      }
      else
      {
        v36 = sub_1B76DB888();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v15, 1, 1, v36);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v35 = sub_1B76DB888();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v15, 1, 1, v35);
    }
    v37 = v44;
    objc_msgSend(*((id *)v16 + 5), sel_unlock);
    if (qword_1ED53B6B8 != -1)
      swift_once();
    v20 = sub_1B76968F0(v37, v45, (uint64_t)v15, a4, v19, a2, a3, v18);
    swift_bridgeObjectRelease();
    sub_1B765DE88((uint64_t)v15, &qword_1EF1774C0);
    swift_release();
  }
  else
  {
    v20 = 0;
  }
  v46 = static Data.value(from:)(v20);
  v47 = v38;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774D0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    result = 0.0;
    *a6 = xmmword_1B76DC6F0;
  }
  return result;
}

uint64_t sub_1B7659894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return sub_1B76598B0(a1, a2, a3, a4, a5, (void (*)(_QWORD *__return_ptr, _QWORD))static WebContentSettings.FilterPolicy.value(from:), &qword_1EF1774C8, (uint64_t)&type metadata for WebContentSettings.FilterPolicy, a6);
}

uint64_t sub_1B76598B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void (*a6)(_QWORD *__return_ptr, _QWORD)@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(_QWORD *__return_ptr, _QWORD);
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[3];

  v48 = a2;
  v49 = a4;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  MEMORY[0x1E0C80A78](v16, v17);
  v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  v20 = off_1EF1775A8;
  if (off_1EF1775A8)
  {
    v21 = *(_QWORD *)(a1 + 24);
    v46 = *(_QWORD *)(a1 + 32);
    v47 = v21;
    v45 = *(unsigned __int8 *)(a1 + 82);
    if (a5)
    {
      v22 = a5;
    }
    else
    {
      v22 = *((_QWORD *)off_1EF1775A8 + 3);
      v49 = *((_QWORD *)off_1EF1775A8 + 2);
      swift_bridgeObjectRetain();
    }
    v24 = (void *)*((_QWORD *)v20 + 5);
    swift_retain();
    swift_bridgeObjectRetain();
    objc_msgSend(v24, sel_lock);
    swift_beginAccess();
    v25 = *((_QWORD *)v20 + 4);
    if (*(_QWORD *)(v25 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v26 = sub_1B76606E0(v49, v22);
      if ((v27 & 1) != 0)
      {
        v28 = v26;
        v42 = a3;
        v29 = a7;
        v30 = *(_QWORD *)(v25 + 56);
        v31 = sub_1B76DB888();
        v43 = a9;
        v44 = a8;
        v32 = v31;
        v33 = a6;
        v34 = *(_QWORD *)(v31 - 8);
        v35 = v30 + *(_QWORD *)(v34 + 72) * v28;
        a7 = v29;
        a3 = v42;
        (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v19, v35, v31);
        v36 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56);
        a6 = v33;
        a9 = v43;
        v36(v19, 0, 1, v32);
      }
      else
      {
        v38 = sub_1B76DB888();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v19, 1, 1, v38);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v37 = sub_1B76DB888();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v19, 1, 1, v37);
    }
    v39 = v45;
    objc_msgSend(*((id *)v20 + 5), sel_unlock);
    if (qword_1ED53B6B8 != -1)
      swift_once();
    v23 = sub_1B76968F0(v47, v46, (uint64_t)v19, v49, v22, v48, a3, v39);
    swift_bridgeObjectRelease();
    sub_1B765DE88((uint64_t)v19, &qword_1EF1774C0);
    swift_release();
  }
  else
  {
    v23 = 0;
  }
  a6(v50, v23);

  __swift_instantiateConcreteTypeFromMangledName(a7);
  result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
    *(_QWORD *)a9 = 0;
    *(_QWORD *)(a9 + 8) = 0;
    *(_BYTE *)(a9 + 16) = -1;
  }
  return result;
}

uint64_t sub_1B7659BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B7658AE0(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD))sub_1B7676918, &qword_1EF1774B0, &qword_1EF1774B8);
}

uint64_t (*AccountSettings.denyiCloudLogout.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF1770A0 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF1770A8, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B7659C84;
}

uint64_t sub_1B7659C84(uint64_t a1)
{
  return AccountSettings.denyiCloudLogout.setter(*(_BYTE *)(a1 + 8));
}

uint64_t AccountSettings.effectiveDenyiCloudLogout.getter()
{
  return sub_1B765A568(&qword_1EF1770A0, &byte_1EF1770A8);
}

uint64_t sub_1B7659CC4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char v7;

  if (qword_1EF1771A8 != -1)
    swift_once();
  swift_beginAccess();
  if (!qword_1EF1778A8)
    return *(unsigned __int8 *)a1;
  v2 = a1[1];
  v3 = a1[2];
  swift_retain();
  v4 = sub_1B7667778(v2, v3);
  swift_release();
  if (!v4)
    return *(unsigned __int8 *)a1;
  v5 = v4;
  _sSb15ManagedSettingsE5value4fromSbSgSo8NSObjectCSg_tFZ_0(v4);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1775A0);
  if ((swift_dynamicCast() & 1) != 0)
    return v7 & 1;
  else
    return *(unsigned __int8 *)a1;
}

uint64_t sub_1B7659DBC(uint64_t a1)
{
  return sub_1B7659DF4(a1, (void (*)(void *))sub_1B7675660, &qword_1EF177590, &qword_1ED53B430);
}

uint64_t sub_1B7659DD8(uint64_t a1)
{
  return sub_1B7659DF4(a1, (void (*)(void *))sub_1B76763B4, &qword_1EF177580, &qword_1EF177588);
}

uint64_t sub_1B7659DF4(uint64_t a1, void (*a2)(void *), uint64_t *a3, uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v13;

  if (qword_1EF1771A8 != -1)
    swift_once();
  swift_beginAccess();
  if (!qword_1EF1778A8)
    return swift_bridgeObjectRetain();
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  swift_retain();
  v10 = sub_1B7667778(v8, v9);
  swift_release();
  if (!v10)
    return swift_bridgeObjectRetain();
  v11 = v10;
  a2(v10);

  __swift_instantiateConcreteTypeFromMangledName(a3);
  __swift_instantiateConcreteTypeFromMangledName(a4);
  if ((swift_dynamicCast() & 1) != 0)
    return v13;
  else
    return swift_bridgeObjectRetain();
}

uint64_t sub_1B7659F0C(uint64_t a1)
{
  return sub_1B7659DF4(a1, (void (*)(void *))sub_1B765ABA0, &qword_1EF177560, &qword_1EF177568);
}

uint64_t sub_1B7659F28(uint64_t a1)
{
  return sub_1B7659DF4(a1, (void (*)(void *))sub_1B765B6A4, &qword_1EF177548, &qword_1EF177550);
}

uint64_t sub_1B7659F44(uint64_t a1)
{
  return sub_1B7659DF4(a1, (void (*)(void *))sub_1B765C1A8, &qword_1EF177528, &qword_1EF177530);
}

uint64_t sub_1B7659F60(uint64_t a1)
{
  return sub_1B7659DF4(a1, (void (*)(void *))sub_1B7675B20, &qword_1EF177500, &qword_1EF177508);
}

uint64_t sub_1B7659F7C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  __int128 v11;

  if (qword_1EF1771A8 != -1)
    swift_once();
  swift_beginAccess();
  if (!qword_1EF1778A8)
    goto LABEL_7;
  v4 = a1[2];
  v5 = a1[3];
  swift_retain();
  v6 = sub_1B7667778(v4, v5);
  swift_release();
  if (!v6)
    goto LABEL_7;
  v7 = v6;
  static Data.value(from:)(v6);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774D0);
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    *(_OWORD *)a2 = v11;
  }
  else
  {
LABEL_7:
    v9 = *a1;
    v10 = a1[1];
    *(_QWORD *)a2 = *a1;
    *(_QWORD *)(a2 + 8) = v10;
    return sub_1B765DDFC(v9, v10);
  }
  return result;
}

uint64_t sub_1B765A088(uint64_t a1)
{
  return sub_1B7659DF4(a1, (void (*)(void *))sub_1B7676918, &qword_1EF1774B0, &qword_1EF1774B8);
}

uint64_t sub_1B765A0A4()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF1770D8 = result;
  unk_1EF1770E0 = &off_1E6CB07B8;
  byte_1EF1770C0 = 0;
  byte_1EF1770A8 = 0;
  qword_1EF1770B0 = 0xD000000000000018;
  unk_1EF1770B8 = 0x80000001B76E1210;
  word_1EF1770E8 = 256;
  byte_1EF1770EA = 0;
  qword_1EF1770F0 = 0;
  byte_1EF1770F8 = 1;
  return result;
}

uint64_t static AccountSettings.denyiCloudLogout.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B765A628(&qword_1EF1770A0, (uint64_t)&byte_1EF1770A8, a1);
}

uint64_t AccountSettings.lockAccounts.getter()
{
  return sub_1B765A148(&qword_1EF177100, (uint64_t)&byte_1EF177108);
}

uint64_t sub_1B765A148(_QWORD *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *v2;
  v4 = v2[1];
  v7 = v2[2];
  v6 = v2[3];
  if (*a1 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_1B76584AC(a2, v5, v4, v7, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1B765A1D4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF177100, (uint64_t)&byte_1EF177108, a2);
}

uint64_t sub_1B765A1F0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X3>, uint64_t a3@<X4>, _BYTE *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t result;

  v7 = *a1;
  v6 = a1[1];
  v9 = a1[2];
  v8 = a1[3];
  v10 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = sub_1B76584AC(a3, v7, v6, v9, v8);
  swift_bridgeObjectRelease_n();
  result = swift_bridgeObjectRelease_n();
  *a4 = v11;
  return result;
}

uint64_t sub_1B765A2B4(unsigned __int8 *a1)
{
  return AccountSettings.lockAccounts.setter(*a1);
}

uint64_t AccountSettings.lockAccounts.setter(unsigned __int8 a1)
{
  return sub_1B765A2F4(a1, &qword_1EF177100, (uint64_t)&byte_1EF177108);
}

uint64_t sub_1B765A2F4(unsigned __int8 a1, _QWORD *a2, uint64_t a3)
{
  uint64_t *v3;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v17[4];
  _BYTE v18[8];
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;

  v5 = a1;
  if (*a2 != -1)
    swift_once();
  sub_1B765A668(a3, (uint64_t)v18);
  v7 = *v3;
  v6 = v3[1];
  v9 = v3[2];
  v8 = v3[3];
  if (v5 == 2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = 0;
  }
  else
  {
    v11 = v5 & 1;
    v12 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = objc_msgSend(v12, sel_initWithBool_, v11);
  }
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    v13 = v19;
    v14 = v20;
    v17[0] = v7;
    v17[1] = v6;
    v17[2] = v9;
    v17[3] = v8;
    v15 = v21;
    swift_retain();
    sub_1B765ED7C(v10, v13, v14, v17, v15);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  return sub_1B765DE88((uint64_t)v18, &qword_1EF177448);
}

uint64_t (*AccountSettings.lockAccounts.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177100 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF177108, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B765A528;
}

uint64_t sub_1B765A528(uint64_t a1)
{
  return AccountSettings.lockAccounts.setter(*(_BYTE *)(a1 + 8));
}

uint64_t AccountSettings.effectiveLockAccounts.getter()
{
  return sub_1B765A568(&qword_1EF177100, &byte_1EF177108);
}

uint64_t sub_1B765A568(_QWORD *a1, _QWORD *a2)
{
  if (*a1 != -1)
    swift_once();
  return sub_1B7659CC4(a2);
}

uint64_t sub_1B765A5A0()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF177138 = result;
  unk_1EF177140 = &off_1E6CB07B8;
  byte_1EF177120 = 0;
  byte_1EF177108 = 0;
  qword_1EF177110 = 0xD000000000000014;
  unk_1EF177118 = 0x80000001B76E1230;
  word_1EF177148 = 257;
  byte_1EF17714A = 0;
  qword_1EF177150 = 0;
  byte_1EF177158 = 1;
  return result;
}

uint64_t static AccountSettings.lockAccounts.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B765A628(&qword_1EF177100, (uint64_t)&byte_1EF177108, a1);
}

uint64_t sub_1B765A628@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1)
    swift_once();
  return sub_1B765A668(a2, a3);
}

uint64_t sub_1B765A668(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177448);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1BCCA94D0]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_1B765A6F4()
{
  unint64_t result;

  result = qword_1EF177450;
  if (!qword_1EF177450)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for AccountSettings.Name, &type metadata for AccountSettings.Name);
    atomic_store(result, (unint64_t *)&qword_1EF177450);
  }
  return result;
}

unint64_t sub_1B765A73C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF177458;
  if (!qword_1EF177458)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF177460);
    result = MEMORY[0x1BCCA94E8](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF177458);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1BCCA94DC](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for AirDropSettings(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for AirDropSettings()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for AirDropSettings(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for AirDropSettings(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_QWORD *assignWithTake for AirDropSettings(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AirDropSettings(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AirDropSettings(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountSettings()
{
  return &type metadata for AccountSettings;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for AccountSettings.Name(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AccountSettings.Name(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B765AA9C + 4 * byte_1B76DC705[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B765AAD0 + 4 * byte_1B76DC700[v4]))();
}

uint64_t sub_1B765AAD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B765AAD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B765AAE0);
  return result;
}

uint64_t sub_1B765AAEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B765AAF4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B765AAF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B765AB00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B765AB0C(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1B765AB18(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for AccountSettings.Name()
{
  return &type metadata for AccountSettings.Name;
}

void type metadata accessor for Name(uint64_t a1)
{
  sub_1B765AB5C(a1, &qword_1EF177468);
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
  sub_1B765AB5C(a1, &qword_1ED53B000);
}

void sub_1B765AB5C(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_1B765ABA0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  __int128 *v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v73;
  id v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  __int128 *v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  __int128 v89;
  __int128 v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD v93[3];
  uint64_t v94;
  void *v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98;
  _OWORD v99[2];
  uint64_t v100;
  uint64_t v101;

  v2 = sub_1B76DB7BC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return 0;
  objc_opt_self();
  if (!swift_dynamicCastObjCClass())
  {
    if (qword_1EF177220 != -1)
      swift_once();
    v64 = sub_1B76DB8B8();
    __swift_project_value_buffer(v64, (uint64_t)qword_1EF177E18);
    v65 = a1;
    v66 = sub_1B76DB8A0();
    v67 = sub_1B76DBC90();
    if (os_log_type_enabled(v66, v67))
    {
      v68 = (uint8_t *)swift_slowAlloc();
      v69 = swift_slowAlloc();
      *(_QWORD *)&v99[0] = v69;
      *(_DWORD *)v68 = 136446210;
      v93[0] = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774F8);
      v70 = sub_1B76DBD14();
      v93[0] = sub_1B7669B50(v70, v71, (uint64_t *)v99);
      sub_1B76DBD38();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B7656000, v66, v67, "Persistable value %{public}s not decodable to Dictionary", v68, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v69, -1, -1);
      MEMORY[0x1BCCA9590](v68, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  v84 = v3;
  v85 = v2;
  v83 = a1;
  sub_1B76DBD08();
  sub_1B76DB7B0();
  if (v98)
  {
    v82 = &v90;
    v86 = MEMORY[0x1E0DEE9E0];
    *((_QWORD *)&v7 + 1) = 1;
    v81 = xmmword_1B76DC6E0;
    *(_QWORD *)&v7 = 136446210;
    v87 = v7;
    while (1)
    {
      sub_1B765DF30(&v97, &v96);
      sub_1B765DF40((uint64_t)&v96, (uint64_t)v93);
      sub_1B765DF7C(0, &qword_1ED53B5E8);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v12 = (void *)v89;
        *(_QWORD *)&v89 = 7955819;
        *((_QWORD *)&v89 + 1) = 0xE300000000000000;
        v13 = objc_msgSend(v12, sel___swift_objectForKeyedSubscript_, sub_1B76DBEE8());
        swift_unknownObjectRelease();
        if (v13)
        {
          sub_1B76DBD50();
          swift_unknownObjectRelease();
        }
        else
        {
          v90 = 0u;
          v89 = 0u;
        }
        sub_1B765DE40((uint64_t)&v89, (uint64_t)v93);
        if (!v94)
          goto LABEL_23;
        sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
        if ((swift_dynamicCast() & 1) != 0)
        {
          v14 = v95;
          *(_QWORD *)&v89 = 0x65756C6176;
          *((_QWORD *)&v89 + 1) = 0xE500000000000000;
          v15 = objc_msgSend(v12, sel___swift_objectForKeyedSubscript_, sub_1B76DBEE8());
          swift_unknownObjectRelease();
          if (v15)
          {
            sub_1B76DBD50();
            swift_unknownObjectRelease();
          }
          else
          {
            v90 = 0u;
            v89 = 0u;
          }
          sub_1B765DE40((uint64_t)&v89, (uint64_t)v93);
          if (!v94)
          {

LABEL_23:
            sub_1B765DE88((uint64_t)v93, &qword_1ED53B7A0);
            goto LABEL_24;
          }
          if ((swift_dynamicCast() & 1) != 0)
          {
            v16 = v95;
            v17 = v14;
            static Application.value(from:)(v14, v93);

            __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177570);
            if ((swift_dynamicCast() & 1) != 0)
            {
              v78 = v17;
              v18 = *((_QWORD *)&v90 + 1);
              v19 = v91;
              v20 = v92;
              v80 = v89;
              v99[0] = v89;
              v88 = *((_QWORD *)&v89 + 1);
              v79 = v90;
              v99[1] = v90;
              v100 = v91;
              v101 = v92;
              v21 = v16;
              v22 = v16;
              v23 = v21;
              static ScreenTimeSettings.ShieldPolicy.value(from:)(v22, v93);

              __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177540);
              if ((swift_dynamicCast() & 1) != 0)
              {
                v74 = v23;
                v76 = v18;
                v75 = v19;
                v77 = v20;
                v34 = v89;
                if (v89 == 5)
                {
                  v35 = v76;
                  v36 = v75;
                  v37 = v77;
                  sub_1B765E080(v80, v88, v79, v76, v75, v77, (void (*)(uint64_t, uint64_t))sub_1B765DF08);
                  v38 = v86;
                  swift_bridgeObjectRetain();
                  v73 = sub_1B76605D0((uint64_t *)v99);
                  v40 = v39;
                  swift_bridgeObjectRelease();
                  if ((v40 & 1) != 0)
                  {
                    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                    v93[0] = v38;
                    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                    {
                      sub_1B767DD44();
                      v38 = v93[0];
                    }
                    v42 = v73;
                    v43 = *(_QWORD *)(v38 + 48) + 48 * v73;
                    v44 = *(_QWORD *)(v43 + 16);
                    v45 = *(_QWORD *)(v43 + 24);
                    swift_bridgeObjectRelease();
                    sub_1B765DF1C(v44, v45);
                    swift_bridgeObjectRelease();
                    v86 = v38;
                    sub_1B7693A34(v42, v38);
                    swift_bridgeObjectRelease();
                    v46 = v80;
                    v47 = v88;
                    v48 = v79;
                    v49 = v79;
                    v35 = v76;
                    v50 = v76;
                    v36 = v75;
                    v51 = v75;
                    v37 = v77;
                  }
                  else
                  {
                    v46 = v80;
                    v47 = v88;
                    v48 = v79;
                    v49 = v79;
                    v50 = v35;
                    v51 = v36;
                  }
                  sub_1B765E02C(v46, v47, v49, v50, v51, v37, (void (*)(uint64_t, uint64_t))sub_1B765DF1C);

                  v58 = v80;
                  v59 = v88;
                  v60 = v48;
                  v61 = v35;
                  v62 = v36;
                  v63 = v37;
                }
                else
                {
                  v52 = v88;
                  swift_bridgeObjectRetain();
                  v53 = v79;
                  sub_1B765DF08(v79, v76);
                  swift_bridgeObjectRetain();
                  v54 = v86;
                  v55 = swift_isUniquelyReferenced_nonNull_native();
                  v93[0] = v54;
                  sub_1B7694408(v34, (uint64_t)v99, v55);
                  v86 = v93[0];
                  swift_bridgeObjectRelease();
                  v56 = v80;
                  v57 = v75;
                  sub_1B765E02C(v80, v52, v53, v76, v75, v77, (void (*)(uint64_t, uint64_t))sub_1B765DF1C);

                  v58 = v56;
                  v59 = v52;
                  v60 = v53;
                  v61 = v76;
                  v62 = v57;
                  v63 = v77;
                }
                sub_1B765E02C(v58, v59, v60, v61, v62, v63, (void (*)(uint64_t, uint64_t))sub_1B765DF1C);
                goto LABEL_6;
              }
              LOBYTE(v89) = 5;

              v24 = v80;
              v25 = v88;
              v26 = v79;
              v27 = v18;
              v28 = v19;
              v29 = v20;
            }
            else
            {
              v89 = v81;
              v33 = v82;
              *v82 = 0u;
              v33[1] = 0u;

              v25 = *((_QWORD *)&v89 + 1);
              v24 = v89;
              v27 = *((_QWORD *)&v90 + 1);
              v26 = v90;
              v28 = v91;
              v29 = v92;
            }
            sub_1B765E02C(v24, v25, v26, v27, v28, v29, (void (*)(uint64_t, uint64_t))sub_1B765DF1C);
          }
          else
          {

          }
        }
        else
        {

        }
      }
LABEL_24:
      if (qword_1EF177220 != -1)
        swift_once();
      v30 = sub_1B76DB8B8();
      __swift_project_value_buffer(v30, (uint64_t)qword_1EF177E18);
      sub_1B765DF40((uint64_t)&v96, (uint64_t)v93);
      v31 = sub_1B76DB8A0();
      v32 = sub_1B76DBC90();
      if (os_log_type_enabled(v31, v32))
      {
        v8 = swift_slowAlloc();
        v9 = swift_slowAlloc();
        v95 = (void *)v9;
        *(_DWORD *)v8 = v87;
        sub_1B765DF40((uint64_t)v93, (uint64_t)&v89);
        v88 = MEMORY[0x1E0DEE9B8] + 8;
        v10 = sub_1B76DBB10();
        *(_QWORD *)(v8 + 4) = sub_1B7669B50(v10, v11, (uint64_t *)&v95);
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v93);
        _os_log_impl(&dword_1B7656000, v31, v32, "Unable to decode dictionary element %{public}s", (uint8_t *)v8, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCA9590](v9, -1, -1);
        MEMORY[0x1BCCA9590](v8, -1, -1);

      }
      else
      {

        __swift_destroy_boxed_opaque_existential_0((uint64_t)v93);
      }
LABEL_6:
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v96);
      sub_1B76DB7B0();
      if (!v98)
        goto LABEL_45;
    }
  }
  v86 = MEMORY[0x1E0DEE9E0];
LABEL_45:
  (*(void (**)(char *, uint64_t))(v84 + 8))(v6, v85);

  return v86;
}

uint64_t sub_1B765B6A4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  __int128 *v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v73;
  id v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  __int128 *v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  __int128 v89;
  __int128 v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD v93[3];
  uint64_t v94;
  void *v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98;
  _OWORD v99[2];
  uint64_t v100;
  uint64_t v101;

  v2 = sub_1B76DB7BC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return 0;
  objc_opt_self();
  if (!swift_dynamicCastObjCClass())
  {
    if (qword_1EF177220 != -1)
      swift_once();
    v64 = sub_1B76DB8B8();
    __swift_project_value_buffer(v64, (uint64_t)qword_1EF177E18);
    v65 = a1;
    v66 = sub_1B76DB8A0();
    v67 = sub_1B76DBC90();
    if (os_log_type_enabled(v66, v67))
    {
      v68 = (uint8_t *)swift_slowAlloc();
      v69 = swift_slowAlloc();
      *(_QWORD *)&v99[0] = v69;
      *(_DWORD *)v68 = 136446210;
      v93[0] = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774F8);
      v70 = sub_1B76DBD14();
      v93[0] = sub_1B7669B50(v70, v71, (uint64_t *)v99);
      sub_1B76DBD38();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B7656000, v66, v67, "Persistable value %{public}s not decodable to Dictionary", v68, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v69, -1, -1);
      MEMORY[0x1BCCA9590](v68, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  v84 = v3;
  v85 = v2;
  v83 = a1;
  sub_1B76DBD08();
  sub_1B76DB7B0();
  if (v98)
  {
    v82 = &v90;
    v86 = MEMORY[0x1E0DEE9E0];
    *((_QWORD *)&v7 + 1) = 1;
    v81 = xmmword_1B76DC6E0;
    *(_QWORD *)&v7 = 136446210;
    v87 = v7;
    while (1)
    {
      sub_1B765DF30(&v97, &v96);
      sub_1B765DF40((uint64_t)&v96, (uint64_t)v93);
      sub_1B765DF7C(0, &qword_1ED53B5E8);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v12 = (void *)v89;
        *(_QWORD *)&v89 = 7955819;
        *((_QWORD *)&v89 + 1) = 0xE300000000000000;
        v13 = objc_msgSend(v12, sel___swift_objectForKeyedSubscript_, sub_1B76DBEE8());
        swift_unknownObjectRelease();
        if (v13)
        {
          sub_1B76DBD50();
          swift_unknownObjectRelease();
        }
        else
        {
          v90 = 0u;
          v89 = 0u;
        }
        sub_1B765DE40((uint64_t)&v89, (uint64_t)v93);
        if (!v94)
          goto LABEL_23;
        sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
        if ((swift_dynamicCast() & 1) != 0)
        {
          v14 = v95;
          *(_QWORD *)&v89 = 0x65756C6176;
          *((_QWORD *)&v89 + 1) = 0xE500000000000000;
          v15 = objc_msgSend(v12, sel___swift_objectForKeyedSubscript_, sub_1B76DBEE8());
          swift_unknownObjectRelease();
          if (v15)
          {
            sub_1B76DBD50();
            swift_unknownObjectRelease();
          }
          else
          {
            v90 = 0u;
            v89 = 0u;
          }
          sub_1B765DE40((uint64_t)&v89, (uint64_t)v93);
          if (!v94)
          {

LABEL_23:
            sub_1B765DE88((uint64_t)v93, &qword_1ED53B7A0);
            goto LABEL_24;
          }
          if ((swift_dynamicCast() & 1) != 0)
          {
            v16 = v95;
            v17 = v14;
            static ActivityCategory.value(from:)(v14, v93);

            __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177558);
            if ((swift_dynamicCast() & 1) != 0)
            {
              v78 = v17;
              v18 = *((_QWORD *)&v90 + 1);
              v19 = v91;
              v20 = v92;
              v80 = v89;
              v99[0] = v89;
              v88 = *((_QWORD *)&v89 + 1);
              v79 = v90;
              v99[1] = v90;
              v100 = v91;
              v101 = v92;
              v21 = v16;
              v22 = v16;
              v23 = v21;
              static ScreenTimeSettings.ShieldPolicy.value(from:)(v22, v93);

              __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177540);
              if ((swift_dynamicCast() & 1) != 0)
              {
                v74 = v23;
                v76 = v18;
                v75 = v19;
                v77 = v20;
                v34 = v89;
                if (v89 == 5)
                {
                  v35 = v76;
                  v36 = v75;
                  v37 = v77;
                  sub_1B765E080(v80, v88, v79, v76, v75, v77, (void (*)(uint64_t, uint64_t))sub_1B765E0D4);
                  v38 = v86;
                  swift_bridgeObjectRetain();
                  v73 = sub_1B7660830((uint64_t *)v99);
                  v40 = v39;
                  swift_bridgeObjectRelease();
                  if ((v40 & 1) != 0)
                  {
                    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                    v93[0] = v38;
                    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                    {
                      sub_1B767DD58();
                      v38 = v93[0];
                    }
                    v42 = v73;
                    v43 = *(_QWORD *)(v38 + 48) + 48 * v73;
                    v44 = *(_QWORD *)(v43 + 16);
                    v45 = *(_QWORD *)(v43 + 24);
                    swift_bridgeObjectRelease();
                    sub_1B765DF1C(v44, v45);
                    swift_bridgeObjectRelease();
                    v86 = v38;
                    sub_1B7693A48(v42, v38);
                    swift_bridgeObjectRelease();
                    v46 = v80;
                    v47 = v88;
                    v48 = v79;
                    v49 = v79;
                    v35 = v76;
                    v50 = v76;
                    v36 = v75;
                    v51 = v75;
                    v37 = v77;
                  }
                  else
                  {
                    v46 = v80;
                    v47 = v88;
                    v48 = v79;
                    v49 = v79;
                    v50 = v35;
                    v51 = v36;
                  }
                  sub_1B765E02C(v46, v47, v49, v50, v51, v37, (void (*)(uint64_t, uint64_t))sub_1B765E0D8);

                  v58 = v80;
                  v59 = v88;
                  v60 = v48;
                  v61 = v35;
                  v62 = v36;
                  v63 = v37;
                }
                else
                {
                  v52 = v88;
                  swift_bridgeObjectRetain();
                  v53 = v79;
                  sub_1B765DF08(v79, v76);
                  swift_bridgeObjectRetain();
                  v54 = v86;
                  v55 = swift_isUniquelyReferenced_nonNull_native();
                  v93[0] = v54;
                  sub_1B7694554(v34, (uint64_t)v99, v55);
                  v86 = v93[0];
                  swift_bridgeObjectRelease();
                  v56 = v80;
                  v57 = v75;
                  sub_1B765E02C(v80, v52, v53, v76, v75, v77, (void (*)(uint64_t, uint64_t))sub_1B765E0D8);

                  v58 = v56;
                  v59 = v52;
                  v60 = v53;
                  v61 = v76;
                  v62 = v57;
                  v63 = v77;
                }
                sub_1B765E02C(v58, v59, v60, v61, v62, v63, (void (*)(uint64_t, uint64_t))sub_1B765E0D8);
                goto LABEL_6;
              }
              LOBYTE(v89) = 5;

              v24 = v80;
              v25 = v88;
              v26 = v79;
              v27 = v18;
              v28 = v19;
              v29 = v20;
            }
            else
            {
              v89 = v81;
              v33 = v82;
              *v82 = 0u;
              v33[1] = 0u;

              v25 = *((_QWORD *)&v89 + 1);
              v24 = v89;
              v27 = *((_QWORD *)&v90 + 1);
              v26 = v90;
              v28 = v91;
              v29 = v92;
            }
            sub_1B765E02C(v24, v25, v26, v27, v28, v29, (void (*)(uint64_t, uint64_t))sub_1B765E0D8);
          }
          else
          {

          }
        }
        else
        {

        }
      }
LABEL_24:
      if (qword_1EF177220 != -1)
        swift_once();
      v30 = sub_1B76DB8B8();
      __swift_project_value_buffer(v30, (uint64_t)qword_1EF177E18);
      sub_1B765DF40((uint64_t)&v96, (uint64_t)v93);
      v31 = sub_1B76DB8A0();
      v32 = sub_1B76DBC90();
      if (os_log_type_enabled(v31, v32))
      {
        v8 = swift_slowAlloc();
        v9 = swift_slowAlloc();
        v95 = (void *)v9;
        *(_DWORD *)v8 = v87;
        sub_1B765DF40((uint64_t)v93, (uint64_t)&v89);
        v88 = MEMORY[0x1E0DEE9B8] + 8;
        v10 = sub_1B76DBB10();
        *(_QWORD *)(v8 + 4) = sub_1B7669B50(v10, v11, (uint64_t *)&v95);
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v93);
        _os_log_impl(&dword_1B7656000, v31, v32, "Unable to decode dictionary element %{public}s", (uint8_t *)v8, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCA9590](v9, -1, -1);
        MEMORY[0x1BCCA9590](v8, -1, -1);

      }
      else
      {

        __swift_destroy_boxed_opaque_existential_0((uint64_t)v93);
      }
LABEL_6:
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v96);
      sub_1B76DB7B0();
      if (!v98)
        goto LABEL_45;
    }
  }
  v86 = MEMORY[0x1E0DEE9E0];
LABEL_45:
  (*(void (**)(char *, uint64_t))(v84 + 8))(v6, v85);

  return v86;
}

uint64_t sub_1B765C1A8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  __int128 *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v60;
  unint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  __int128 v66;
  __int128 *v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  __int128 v74;
  __int128 v75;
  void *v76;
  _QWORD v77[3];
  uint64_t v78;
  _OWORD v79[2];
  __int128 v80;
  uint64_t v81;

  v2 = sub_1B76DB7BC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return 0;
  objc_opt_self();
  if (!swift_dynamicCastObjCClass())
  {
    if (qword_1EF177220 != -1)
      swift_once();
    v51 = sub_1B76DB8B8();
    __swift_project_value_buffer(v51, (uint64_t)qword_1EF177E18);
    v52 = a1;
    v53 = sub_1B76DB8A0();
    v54 = sub_1B76DBC90();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = (uint8_t *)swift_slowAlloc();
      v56 = swift_slowAlloc();
      *(_QWORD *)&v80 = v56;
      *(_DWORD *)v55 = 136446210;
      *(_QWORD *)&v79[0] = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774F8);
      v57 = sub_1B76DBD14();
      *(_QWORD *)&v79[0] = sub_1B7669B50(v57, v58, (uint64_t *)&v80);
      sub_1B76DBD38();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B7656000, v53, v54, "Persistable value %{public}s not decodable to Dictionary", v55, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v56, -1, -1);
      MEMORY[0x1BCCA9590](v55, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  v69 = v3;
  v70 = v2;
  v68 = a1;
  sub_1B76DBD08();
  sub_1B76DB7B0();
  if (v81)
  {
    v71 = MEMORY[0x1E0DEE9E0];
    v67 = &v75;
    *((_QWORD *)&v7 + 1) = 1;
    v66 = xmmword_1B76DC6E0;
    *(_QWORD *)&v7 = 136446210;
    v72 = v7;
    while (1)
    {
      sub_1B765DF30(&v80, v79);
      sub_1B765DF40((uint64_t)v79, (uint64_t)v77);
      sub_1B765DF7C(0, &qword_1ED53B5E8);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v12 = (void *)v74;
        *(_QWORD *)&v74 = 7955819;
        *((_QWORD *)&v74 + 1) = 0xE300000000000000;
        v13 = objc_msgSend(v12, sel___swift_objectForKeyedSubscript_, sub_1B76DBEE8());
        swift_unknownObjectRelease();
        if (v13)
        {
          sub_1B76DBD50();
          swift_unknownObjectRelease();
        }
        else
        {
          v74 = 0u;
          v75 = 0u;
        }
        sub_1B765DE40((uint64_t)&v74, (uint64_t)v77);
        if (!v78)
          goto LABEL_23;
        sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
        if ((swift_dynamicCast() & 1) != 0)
        {
          v14 = v76;
          *(_QWORD *)&v74 = 0x65756C6176;
          *((_QWORD *)&v74 + 1) = 0xE500000000000000;
          v15 = objc_msgSend(v12, sel___swift_objectForKeyedSubscript_, sub_1B76DBEE8());
          swift_unknownObjectRelease();
          if (v15)
          {
            sub_1B76DBD50();
            swift_unknownObjectRelease();
          }
          else
          {
            v74 = 0u;
            v75 = 0u;
          }
          sub_1B765DE40((uint64_t)&v74, (uint64_t)v77);
          if (!v78)
          {

LABEL_23:
            sub_1B765DE88((uint64_t)v77, &qword_1ED53B7A0);
            goto LABEL_24;
          }
          if ((swift_dynamicCast() & 1) != 0)
          {
            v16 = v76;
            v17 = v14;
            static WebDomain.value(from:)(v14, v77);

            __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177538);
            if ((swift_dynamicCast() & 1) != 0)
            {
              v65 = v17;
              v18 = *((_QWORD *)&v74 + 1);
              v73 = v74;
              v19 = *((_QWORD *)&v75 + 1);
              v20 = v75;
              v21 = v16;
              v22 = v16;
              v23 = v21;
              static ScreenTimeSettings.ShieldPolicy.value(from:)(v22, v77);

              __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177540);
              if ((swift_dynamicCast() & 1) != 0)
              {
                v62 = v23;
                v63 = v18;
                v64 = v20;
                if (v74 == 5)
                {
                  v32 = v73;
                  v33 = v63;
                  v34 = v64;
                  sub_1B765DFF0(v73, v63, v64, v19);
                  v35 = v71;
                  swift_bridgeObjectRetain();
                  v61 = sub_1B76608DC(v32, v33, v34, v19);
                  LOBYTE(v32) = v36;
                  swift_bridgeObjectRelease();
                  if ((v32 & 1) != 0)
                  {
                    v60 = v19;
                    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                    v77[0] = v35;
                    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                    {
                      sub_1B767DF58();
                      v35 = v77[0];
                    }
                    v38 = v61;
                    v39 = *(_QWORD *)(v35 + 48) + 32 * v61;
                    v40 = *(_QWORD *)(v39 + 16);
                    v41 = *(_QWORD *)(v39 + 24);
                    swift_bridgeObjectRelease();
                    sub_1B765DF1C(v40, v41);
                    v71 = v35;
                    sub_1B7693D78(v38, v35);
                    swift_bridgeObjectRelease();
                    v42 = v73;
                    v43 = v73;
                    v33 = v63;
                    v44 = v63;
                    v34 = v64;
                    v45 = v64;
                    v19 = v60;
                  }
                  else
                  {
                    v42 = v73;
                    v43 = v73;
                    v44 = v33;
                    v45 = v34;
                  }
                  sub_1B765DFB4(v43, v44, v45, v19);

                  sub_1B765DFB4(v42, v33, v34, v19);
                }
                else
                {
                  LODWORD(v61) = v74;
                  v46 = v63;
                  swift_bridgeObjectRetain();
                  v47 = v19;
                  sub_1B765DF08(v64, v19);
                  v48 = v71;
                  v49 = swift_isUniquelyReferenced_nonNull_native();
                  v77[0] = v48;
                  v50 = v64;
                  sub_1B76946A0(v61, v73, v46, v64, v47, v49);
                  v71 = v77[0];
                  swift_bridgeObjectRelease();
                  sub_1B765DFB4(v73, v46, v50, v47);

                  sub_1B765DFB4(v73, v46, v50, v47);
                }
                goto LABEL_6;
              }
              LOBYTE(v74) = 5;

              v24 = v73;
              v25 = v18;
              v26 = v20;
              v27 = v19;
            }
            else
            {
              v74 = v66;
              v31 = v67;
              *(_QWORD *)v67 = 0;
              *((_QWORD *)v31 + 1) = 0;

              v25 = *((_QWORD *)&v74 + 1);
              v24 = v74;
              v27 = *((_QWORD *)&v75 + 1);
              v26 = v75;
            }
            sub_1B765DFB4(v24, v25, v26, v27);
          }
          else
          {

          }
        }
        else
        {

        }
      }
LABEL_24:
      if (qword_1EF177220 != -1)
        swift_once();
      v28 = sub_1B76DB8B8();
      __swift_project_value_buffer(v28, (uint64_t)qword_1EF177E18);
      sub_1B765DF40((uint64_t)v79, (uint64_t)v77);
      v29 = sub_1B76DB8A0();
      v30 = sub_1B76DBC90();
      if (os_log_type_enabled(v29, v30))
      {
        v8 = swift_slowAlloc();
        v9 = swift_slowAlloc();
        v76 = (void *)v9;
        *(_DWORD *)v8 = v72;
        sub_1B765DF40((uint64_t)v77, (uint64_t)&v74);
        v73 = MEMORY[0x1E0DEE9B8] + 8;
        v10 = sub_1B76DBB10();
        *(_QWORD *)(v8 + 4) = sub_1B7669B50(v10, v11, (uint64_t *)&v76);
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v77);
        _os_log_impl(&dword_1B7656000, v29, v30, "Unable to decode dictionary element %{public}s", (uint8_t *)v8, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCA9590](v9, -1, -1);
        MEMORY[0x1BCCA9590](v8, -1, -1);

      }
      else
      {

        __swift_destroy_boxed_opaque_existential_0((uint64_t)v77);
      }
LABEL_6:
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v79);
      sub_1B76DB7B0();
      if (!v81)
        goto LABEL_44;
    }
  }
  v71 = MEMORY[0x1E0DEE9E0];
LABEL_44:
  (*(void (**)(char *, uint64_t))(v69 + 8))(v6, v70);

  return v71;
}

void sub_1B765CB50(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  char v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;

  if (!a1)
  {
LABEL_20:
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    v19 = -1;
    goto LABEL_21;
  }
  objc_opt_self();
  v4 = swift_dynamicCastObjCClass();
  if (!v4)
  {
    if (qword_1EF177220 != -1)
      swift_once();
    v8 = sub_1B76DB8B8();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EF177E18);
    v9 = a1;
    v10 = sub_1B76DB8A0();
    v11 = sub_1B76DBC90();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v28 = v13;
      *(_DWORD *)v12 = 136446210;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774F8);
      v14 = sub_1B76DBD14();
      *(_QWORD *)&v26 = sub_1B7669B50(v14, v15, &v28);
      sub_1B76DBD38();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B7656000, v10, v11, "Persistable value %{public}s not decodable to ShieldSettings.ActivityCategoryPolicy", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v13, -1, -1);
      MEMORY[0x1BCCA9590](v12, -1, -1);

    }
    else
    {

    }
    goto LABEL_20;
  }
  v5 = (void *)v4;
  v28 = 0x6974697669746361;
  v29 = 0xEA00000000007365;
  v6 = a1;
  v7 = objc_msgSend(v5, sel___swift_objectForKeyedSubscript_, sub_1B76DBEE8());
  swift_unknownObjectRelease();
  if (v7)
  {
    sub_1B76DBD50();
    swift_unknownObjectRelease();
  }
  else
  {
    v26 = 0u;
    v27 = 0u;
  }
  sub_1B765DE40((uint64_t)&v26, (uint64_t)&v28);
  if (v30)
  {
    sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
    if (swift_dynamicCast())
      v16 = v25;
    else
      v16 = 0;
  }
  else
  {
    sub_1B765DE88((uint64_t)&v28, &qword_1ED53B7A0);
    v16 = 0;
  }
  v17 = sub_1B7675660(v16);

  if (!v17)
  {

    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    v19 = 2;
LABEL_21:
    *(_BYTE *)(a2 + 16) = v19;
    return;
  }
  v28 = 0x69726F6765746163;
  v29 = 0xEA00000000007365;
  v18 = objc_msgSend(v5, sel___swift_objectForKeyedSubscript_, sub_1B76DBEE8());
  swift_unknownObjectRelease();
  if (v18)
  {
    sub_1B76DBD50();
    swift_unknownObjectRelease();
  }
  else
  {
    v26 = 0u;
    v27 = 0u;
  }
  sub_1B765DE40((uint64_t)&v26, (uint64_t)&v28);
  if (v30)
  {
    sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
    if (swift_dynamicCast())
      v20 = v25;
    else
      v20 = 0;
  }
  else
  {
    sub_1B765DE88((uint64_t)&v28, &qword_1ED53B7A0);
    v20 = 0;
  }
  v21 = sub_1B7675EF4(v20);

  if (!v21)
  {
    v24 = sub_1B765D430(v17, (void (*)(uint64_t, unint64_t))sub_1B765DF08, (void (*)(uint64_t *, uint64_t, unint64_t))sub_1B76817BC, (void (*)(uint64_t, unint64_t))sub_1B765DF1C);
    swift_bridgeObjectRelease();

    *(_QWORD *)a2 = v24;
    *(_QWORD *)(a2 + 8) = 0;
    v19 = 1;
    goto LABEL_21;
  }
  v22 = sub_1B765D430(v21, (void (*)(uint64_t, unint64_t))sub_1B765E0D4, (void (*)(uint64_t *, uint64_t, unint64_t))sub_1B7681810, (void (*)(uint64_t, unint64_t))sub_1B765E0D8);
  swift_bridgeObjectRelease();
  v23 = sub_1B765D430(v17, (void (*)(uint64_t, unint64_t))sub_1B765DF08, (void (*)(uint64_t *, uint64_t, unint64_t))sub_1B76817BC, (void (*)(uint64_t, unint64_t))sub_1B765DF1C);
  swift_bridgeObjectRelease();

  *(_QWORD *)a2 = v22;
  *(_QWORD *)(a2 + 8) = v23;
  *(_BYTE *)(a2 + 16) = 0;
}

void sub_1B765CFD8(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  char v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;

  if (!a1)
  {
LABEL_20:
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    v19 = -1;
    goto LABEL_21;
  }
  objc_opt_self();
  v4 = swift_dynamicCastObjCClass();
  if (!v4)
  {
    if (qword_1EF177220 != -1)
      swift_once();
    v8 = sub_1B76DB8B8();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EF177E18);
    v9 = a1;
    v10 = sub_1B76DB8A0();
    v11 = sub_1B76DBC90();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v28 = v13;
      *(_DWORD *)v12 = 136446210;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774F8);
      v14 = sub_1B76DBD14();
      *(_QWORD *)&v26 = sub_1B7669B50(v14, v15, &v28);
      sub_1B76DBD38();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B7656000, v10, v11, "Persistable value %{public}s not decodable to ShieldSettings.ActivityCategoryPolicy", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v13, -1, -1);
      MEMORY[0x1BCCA9590](v12, -1, -1);

    }
    else
    {

    }
    goto LABEL_20;
  }
  v5 = (void *)v4;
  v28 = 0x6974697669746361;
  v29 = 0xEA00000000007365;
  v6 = a1;
  v7 = objc_msgSend(v5, sel___swift_objectForKeyedSubscript_, sub_1B76DBEE8());
  swift_unknownObjectRelease();
  if (v7)
  {
    sub_1B76DBD50();
    swift_unknownObjectRelease();
  }
  else
  {
    v26 = 0u;
    v27 = 0u;
  }
  sub_1B765DE40((uint64_t)&v26, (uint64_t)&v28);
  if (v30)
  {
    sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
    if (swift_dynamicCast())
      v16 = v25;
    else
      v16 = 0;
  }
  else
  {
    sub_1B765DE88((uint64_t)&v28, &qword_1ED53B7A0);
    v16 = 0;
  }
  v17 = sub_1B7675B20(v16);

  if (!v17)
  {

    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    v19 = 2;
LABEL_21:
    *(_BYTE *)(a2 + 16) = v19;
    return;
  }
  v28 = 0x69726F6765746163;
  v29 = 0xEA00000000007365;
  v18 = objc_msgSend(v5, sel___swift_objectForKeyedSubscript_, sub_1B76DBEE8());
  swift_unknownObjectRelease();
  if (v18)
  {
    sub_1B76DBD50();
    swift_unknownObjectRelease();
  }
  else
  {
    v26 = 0u;
    v27 = 0u;
  }
  sub_1B765DE40((uint64_t)&v26, (uint64_t)&v28);
  if (v30)
  {
    sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
    if (swift_dynamicCast())
      v20 = v25;
    else
      v20 = 0;
  }
  else
  {
    sub_1B765DE88((uint64_t)&v28, &qword_1ED53B7A0);
    v20 = 0;
  }
  v21 = sub_1B7675EF4(v20);

  if (!v21)
  {
    v24 = sub_1B765D680(v17);
    swift_bridgeObjectRelease();

    *(_QWORD *)a2 = v24;
    *(_QWORD *)(a2 + 8) = 0;
    v19 = 1;
    goto LABEL_21;
  }
  v22 = sub_1B765D430(v21, (void (*)(uint64_t, unint64_t))sub_1B765E0D4, (void (*)(uint64_t *, uint64_t, unint64_t))sub_1B7681810, (void (*)(uint64_t, unint64_t))sub_1B765E0D8);
  swift_bridgeObjectRelease();
  v23 = sub_1B765D680(v17);
  swift_bridgeObjectRelease();

  *(_QWORD *)a2 = v22;
  *(_QWORD *)(a2 + 8) = v23;
  *(_BYTE *)(a2 + 16) = 0;
}

uint64_t sub_1B765D430(uint64_t a1, void (*a2)(uint64_t, unint64_t), void (*a3)(uint64_t *, uint64_t, unint64_t), void (*a4)(uint64_t, unint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v21;
  int64_t v22;
  uint64_t v23[2];
  uint64_t v24;

  v24 = MEMORY[0x1E0DEE9E8];
  v21 = a1 + 56;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 56);
  v22 = (unint64_t)(v6 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (v8)
  {
    v11 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v12 = v11 | (v10 << 6);
LABEL_24:
    v16 = *(_QWORD *)(a1 + 48) + 48 * v12;
    v17 = *(_QWORD *)(v16 + 24);
    if (v17 >> 60 != 15)
    {
      v18 = *(_QWORD *)(v16 + 16);
      swift_bridgeObjectRetain();
      a2(v18, v17);
      swift_bridgeObjectRetain();
      a2(v18, v17);
      a3(v23, v18, v17);
      sub_1B765DEC4(v23[0], v23[1]);
      swift_bridgeObjectRelease();
      a4(v18, v17);
      result = swift_bridgeObjectRelease();
    }
  }
  v13 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v13 >= v22)
    goto LABEL_26;
  v14 = *(_QWORD *)(v21 + 8 * v13);
  ++v10;
  if (v14)
    goto LABEL_23;
  v10 = v13 + 1;
  if (v13 + 1 >= v22)
    goto LABEL_26;
  v14 = *(_QWORD *)(v21 + 8 * v10);
  if (v14)
    goto LABEL_23;
  v10 = v13 + 2;
  if (v13 + 2 >= v22)
    goto LABEL_26;
  v14 = *(_QWORD *)(v21 + 8 * v10);
  if (v14)
    goto LABEL_23;
  v10 = v13 + 3;
  if (v13 + 3 >= v22)
    goto LABEL_26;
  v14 = *(_QWORD *)(v21 + 8 * v10);
  if (v14)
    goto LABEL_23;
  v10 = v13 + 4;
  if (v13 + 4 >= v22)
    goto LABEL_26;
  v14 = *(_QWORD *)(v21 + 8 * v10);
  if (v14)
  {
LABEL_23:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v10 << 6);
    goto LABEL_24;
  }
  v15 = v13 + 5;
  if (v15 >= v22)
  {
LABEL_26:
    swift_release();
    return v24;
  }
  v14 = *(_QWORD *)(v21 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v22)
      goto LABEL_26;
    v14 = *(_QWORD *)(v21 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_23;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1B765D680(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17[2];
  uint64_t v18;

  v18 = MEMORY[0x1E0DEE9E8];
  v2 = a1 + 56;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (v5)
  {
    v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v10 = v9 | (v8 << 6);
LABEL_24:
    v14 = *(_QWORD *)(a1 + 48) + 32 * v10;
    v15 = *(_QWORD *)(v14 + 24);
    if (v15 >> 60 != 15)
    {
      v16 = *(_QWORD *)(v14 + 16);
      swift_bridgeObjectRetain();
      sub_1B765DF08(v16, v15);
      sub_1B765DF08(v16, v15);
      sub_1B7681864(v17, v16, v15);
      sub_1B765DEC4(v17[0], v17[1]);
      swift_bridgeObjectRelease();
      result = sub_1B765DF1C(v16, v15);
    }
  }
  v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v11 >= v6)
    goto LABEL_26;
  v12 = *(_QWORD *)(v2 + 8 * v11);
  ++v8;
  if (v12)
    goto LABEL_23;
  v8 = v11 + 1;
  if (v11 + 1 >= v6)
    goto LABEL_26;
  v12 = *(_QWORD *)(v2 + 8 * v8);
  if (v12)
    goto LABEL_23;
  v8 = v11 + 2;
  if (v11 + 2 >= v6)
    goto LABEL_26;
  v12 = *(_QWORD *)(v2 + 8 * v8);
  if (v12)
    goto LABEL_23;
  v8 = v11 + 3;
  if (v11 + 3 >= v6)
    goto LABEL_26;
  v12 = *(_QWORD *)(v2 + 8 * v8);
  if (v12)
    goto LABEL_23;
  v8 = v11 + 4;
  if (v11 + 4 >= v6)
    goto LABEL_26;
  v12 = *(_QWORD *)(v2 + 8 * v8);
  if (v12)
  {
LABEL_23:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
    goto LABEL_24;
  }
  v13 = v11 + 5;
  if (v13 >= v6)
  {
LABEL_26:
    swift_release();
    return v18;
  }
  v12 = *(_QWORD *)(v2 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v6)
      goto LABEL_26;
    v12 = *(_QWORD *)(v2 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_23;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1B765D868(uint64_t a1, uint64_t a2)
{
  return sub_1B765DC30(a1, a2, MEMORY[0x1E0DEA950]);
}

uint64_t sub_1B765D87C(uint64_t a1, uint64_t a2)
{
  return sub_1B765DC30(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1940]);
}

uint64_t sub_1B765D894(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_1B76DBABC();
  *a2 = 0;
  return result;
}

uint64_t sub_1B765D908(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_1B76DBAC8();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1B765D984@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1B76DBAD4();
  v2 = sub_1B76DBAB0();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1B765D9CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1B76DBAD4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B765D9F4()
{
  sub_1B765DAD0(&qword_1ED53AFF0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1B76DCAF0);
  sub_1B765DAD0(&qword_1EF1774A8, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1B76DC8EC);
  return sub_1B76DBE64();
}

uint64_t sub_1B765DA78()
{
  return sub_1B765DAD0(&qword_1EF177470, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)"yJ]/Ш");
}

uint64_t sub_1B765DAA4()
{
  return sub_1B765DAD0(&qword_1EF177478, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1B76DC884);
}

uint64_t sub_1B765DAD0(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1BCCA94E8](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B765DB10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1B76DBAB0();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1B765DB54()
{
  sub_1B765DAD0(&qword_1EF177498, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_1B76DCA60);
  sub_1B765DAD0(&qword_1EF1774A0, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_1B76DCA00);
  return sub_1B76DBE64();
}

uint64_t sub_1B765DBD8()
{
  return sub_1B765DAD0(&qword_1EF177480, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_1B76DC9C4);
}

uint64_t sub_1B765DC04()
{
  return sub_1B765DAD0(&qword_1EF177488, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_1B76DC998);
}

uint64_t sub_1B765DC30(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1B76DBAD4();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1B765DC6C()
{
  sub_1B76DBAD4();
  sub_1B76DBB1C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B765DCAC()
{
  uint64_t v0;

  sub_1B76DBAD4();
  sub_1B76DBF54();
  sub_1B76DBB1C();
  v0 = sub_1B76DBF78();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1B765DD1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1B76DBAD4();
  v2 = v1;
  if (v0 == sub_1B76DBAD4() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1B76DBED0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1B765DDA4()
{
  return sub_1B765DAD0(&qword_1EF177490, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_1B76DCA34);
}

uint64_t sub_1B765DDD0()
{
  return sub_1B765DAD0(&qword_1ED53AFF8, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1B76DC920);
}

uint64_t sub_1B765DDFC(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_1B765DE40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B7A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B765DE88(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1B765DEC4(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1B765DF08(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1B765DDFC(a1, a2);
  return a1;
}

uint64_t sub_1B765DF1C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1B765DEC4(a1, a2);
  return a1;
}

_OWORD *sub_1B765DF30(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1B765DF40(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1B765DF7C(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1B765DFB4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    return sub_1B765DF1C(a3, a4);
  }
  return result;
}

uint64_t sub_1B765DFF0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    return sub_1B765DF08(a3, a4);
  }
  return result;
}

uint64_t sub_1B765E02C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t))
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    a7(a3, a4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B765E080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t))
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    a7(a3, a4);
    return swift_bridgeObjectRetain();
  }
  return result;
}

void *sub_1B765E0E4()
{
  void *result;

  type metadata accessor for Persistence();
  swift_allocObject();
  result = (void *)sub_1B765E7C4();
  off_1EF1775A8 = result;
  return result;
}

uint64_t static Persistence.shared.getter()
{
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  return swift_retain();
}

uint64_t static Persistence.shared.setter(void *a1)
{
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  off_1EF1775A8 = a1;
  return swift_release();
}

uint64_t (*static Persistence.shared.modify())()
{
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t sub_1B765E26C(uint64_t a1)
{
  return sub_1B765E694(a1, 493, (unint64_t *)&qword_1EF1775B0);
}

unint64_t sub_1B765E27C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t result;
  char v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD v25[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1775F0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78]();
  v5 = (_QWORD *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1775F8);
  v6 = sub_1B76DBE4C();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (char *)v5 + *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1B76638C0(v12, (uint64_t)v5, &qword_1EF1775F0);
    v14 = *v5;
    v15 = v5[1];
    result = sub_1B76606E0(*v5, v15);
    if ((v17 & 1) != 0)
      break;
    v18 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v19 = (uint64_t *)(v7[6] + 16 * result);
    *v19 = v14;
    v19[1] = v15;
    v20 = v7[7];
    v21 = sub_1B76DB888();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v18, v9, v21);
    v22 = v7[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_11;
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1B765E41C(uint64_t a1)
{
  return sub_1B765E554(a1, &qword_1ED53B080);
}

unint64_t sub_1B765E428(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B448);
  v2 = sub_1B76DBE4C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1B76638C0(v6, (uint64_t)&v13, &qword_1ED53B438);
    v7 = v13;
    result = sub_1B7660744(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_1B765DF30(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1B765E554(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  void **v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_1B76DBE4C();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (void **)(a1 + 48);
  while (1)
  {
    v6 = (uint64_t)*(v5 - 2);
    v7 = (uint64_t)*(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain();
    v9 = v8;
    result = sub_1B76606E0(v6, v7);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v3[6] + 16 * result);
    *v12 = v6;
    v12[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v9;
    v13 = v3[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v3[2] = v15;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t static Persistence.directoryAttributes.getter()
{
  return sub_1B765E784(&qword_1EF177168);
}

unint64_t sub_1B765E684(uint64_t a1)
{
  return sub_1B765E694(a1, 420, qword_1ED53B250);
}

unint64_t sub_1B765E694(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t inited;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  unint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B088);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B76DCB60;
  v6 = (void *)*MEMORY[0x1E0CB2A98];
  v7 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0CB2A98];
  *(_QWORD *)(inited + 40) = 0x656C69626F6DLL;
  *(_QWORD *)(inited + 48) = 0xE600000000000000;
  v8 = (void *)*MEMORY[0x1E0CB2A58];
  *(_QWORD *)(inited + 64) = v7;
  *(_QWORD *)(inited + 72) = v8;
  *(_QWORD *)(inited + 80) = 0x656C69626F6DLL;
  *(_QWORD *)(inited + 88) = 0xE600000000000000;
  v9 = (void *)*MEMORY[0x1E0CB2AA8];
  *(_QWORD *)(inited + 104) = v7;
  *(_QWORD *)(inited + 112) = v9;
  *(_QWORD *)(inited + 144) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(inited + 120) = a2;
  v10 = v6;
  v11 = v8;
  v12 = v9;
  result = sub_1B765E428(inited);
  *a3 = result;
  return result;
}

uint64_t static Persistence.fileAttributes.getter()
{
  return sub_1B765E784(&qword_1ED53B078);
}

uint64_t sub_1B765E784(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t static Persistence.maximumSettingsFileSize.getter()
{
  return 0x20000;
}

uint64_t sub_1B765E7C4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  SecTaskRef v3;
  SecTaskRef v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _QWORD v16[5];

  v1 = v0;
  *(_QWORD *)(v0 + 32) = sub_1B765E27C(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)(v0 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3740]), sel_init);
  swift_beginAccess();
  if (byte_1ED53B740 == 2)
  {
    v16[3] = &type metadata for Feature.FeatureFlags;
    v16[4] = sub_1B7658114();
    v2 = sub_1B76DB894();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
    if ((v2 & 1) == 0)
      goto LABEL_15;
  }
  else if ((byte_1ED53B740 & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();

    type metadata accessor for Persistence();
    swift_deallocPartialClassInstance();
    return 0;
  }
  v3 = SecTaskCreateFromSelf((CFAllocatorRef)*MEMORY[0x1E0C9AE00]);
  if (!v3)
    goto LABEL_15;
  v4 = v3;
  if ((sub_1B76BDE54() & 1) != 0)
  {
    v5 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
    v6 = objc_msgSend(v5, sel_processName);

  }
  else
  {
    v7 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
    v6 = objc_msgSend(v7, sel_bundleIdentifier);

    if (!v6)
    {
      if (qword_1EF177220 != -1)
        swift_once();
      v11 = sub_1B76DB8B8();
      __swift_project_value_buffer(v11, (uint64_t)qword_1EF177E18);
      v12 = sub_1B76DB8A0();
      v13 = sub_1B76DBC90();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v14 = 0;
        _os_log_impl(&dword_1B7656000, v12, v13, "Unable to retrieve process bundle identifier", v14, 2u);
        MEMORY[0x1BCCA9590](v14, -1, -1);
      }

      goto LABEL_15;
    }
  }
  v8 = sub_1B76DBAD4();
  v10 = v9;

  *(_QWORD *)(v1 + 16) = v8;
  *(_QWORD *)(v1 + 24) = v10;
  return v1;
}

uint64_t sub_1B765EA44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  _QWORD v7[5];

  *(_QWORD *)(v2 + 32) = sub_1B765E27C(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)(v2 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3740]), sel_init);
  swift_beginAccess();
  if (byte_1ED53B740 != 2)
  {
    if ((byte_1ED53B740 & 1) == 0)
      goto LABEL_3;
LABEL_5:
    *(_QWORD *)(v2 + 16) = a1;
    *(_QWORD *)(v2 + 24) = a2;
    return v2;
  }
  v7[3] = &type metadata for Feature.FeatureFlags;
  v7[4] = sub_1B7658114();
  v5 = sub_1B76DB894();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
  if ((v5 & 1) != 0)
    goto LABEL_5;
LABEL_3:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  type metadata accessor for Persistence();
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t sub_1B765EB38(uint64_t a1, uint64_t a2)
{
  void *v4;

  if (qword_1EF177160 != -1)
    swift_once();
  type metadata accessor for Persistence();
  swift_allocObject();
  swift_bridgeObjectRetain();
  v4 = (void *)sub_1B765EA44(a1, a2);
  swift_beginAccess();
  off_1EF1775A8 = v4;
  return swift_release();
}

uint64_t type metadata accessor for Persistence()
{
  return objc_opt_self();
}

uint64_t sub_1B765EC08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1B76DB888();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v14);
  v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(a1, 1, v12) == 1)
  {
    sub_1B765DE88(a1, &qword_1EF1774C0);
    sub_1B76930D4(a2, a3, (uint64_t)v11);
    swift_bridgeObjectRelease();
    return sub_1B765DE88((uint64_t)v11, &qword_1EF1774C0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v16, a1, v12);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v20 = *v4;
    *v4 = 0x8000000000000000;
    sub_1B7694014((uint64_t)v16, a2, a3, isUniquelyReferenced_nonNull_native);
    *v4 = v20;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1B765ED7C(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  void *v48;
  uint64_t v49;

  v6 = v5;
  v47 = a5;
  v48 = a1;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  v12 = MEMORY[0x1E0C80A78](v10, v11);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v12, v15);
  v18 = (char *)&v42 - v17;
  MEMORY[0x1E0C80A78](v16, v19);
  v21 = (char *)&v42 - v20;
  v22 = *a4;
  v45 = a4[1];
  v46 = v22;
  if (a4[3])
  {
    v23 = a4[2];
    v24 = a4[3];
  }
  else
  {
    v23 = *(_QWORD *)(v6 + 16);
    v24 = *(_QWORD *)(v6 + 24);
    swift_bridgeObjectRetain();
  }
  v25 = *(void **)(v6 + 40);
  swift_bridgeObjectRetain();
  objc_msgSend(v25, sel_lock);
  swift_beginAccess();
  v26 = *(_QWORD *)(v6 + 32);
  v27 = *(_QWORD *)(v26 + 16);
  v49 = v23;
  if (v27)
  {
    v44 = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28 = sub_1B76606E0(v23, v24);
    if ((v29 & 1) != 0)
    {
      v30 = v28;
      v42 = a3;
      v31 = *(_QWORD *)(v26 + 56);
      v32 = sub_1B76DB888();
      v43 = v18;
      v33 = v14;
      v34 = *(_QWORD *)(v32 - 8);
      v35 = v31 + *(_QWORD *)(v34 + 72) * v30;
      a3 = v42;
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v21, v35, v32);
      v36 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56);
      v14 = v33;
      v18 = v43;
      v36(v21, 0, 1, v32);
    }
    else
    {
      v38 = sub_1B76DB888();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v21, 1, 1, v38);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a2 = v44;
  }
  else
  {
    v37 = sub_1B76DB888();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v21, 1, 1, v37);
  }
  objc_msgSend(*(id *)(v6 + 40), sel_unlock);
  if (qword_1ED53B6B8 != -1)
    swift_once();
  v39 = a3;
  v40 = v49;
  sub_1B7697D30(v48, a2, v39, (uint64_t)v21, v49, v24, v46, v45, (uint64_t)v18, v47 & 1);
  objc_msgSend(*(id *)(v6 + 40), sel_lock);
  sub_1B76638C0((uint64_t)v18, (uint64_t)v14, &qword_1EF1774C0);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1B765EC08((uint64_t)v14, v40, v24);
  swift_endAccess();
  objc_msgSend(*(id *)(v6 + 40), sel_unlock);
  swift_bridgeObjectRelease();
  sub_1B765DE88((uint64_t)v18, &qword_1EF1774C0);
  return sub_1B765DE88((uint64_t)v21, &qword_1EF1774C0);
}

uint64_t sub_1B765F098(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  v6 = MEMORY[0x1E0C80A78](v4, v5);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v6, v9);
  v12 = (char *)&v33 - v11;
  MEMORY[0x1E0C80A78](v10, v13);
  v15 = (char *)&v33 - v14;
  v16 = *a1;
  v36 = a1[1];
  if (a1[3])
  {
    v17 = a1[2];
    v18 = a1[3];
  }
  else
  {
    v17 = *(_QWORD *)(v2 + 16);
    v18 = *(_QWORD *)(v2 + 24);
    swift_bridgeObjectRetain();
  }
  v19 = *(void **)(v2 + 40);
  swift_bridgeObjectRetain();
  objc_msgSend(v19, sel_lock);
  swift_beginAccess();
  v20 = *(_QWORD *)(v2 + 32);
  if (*(_QWORD *)(v20 + 16))
  {
    v35 = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = sub_1B76606E0(v17, v18);
    if ((v22 & 1) != 0)
    {
      v23 = v21;
      v33 = v12;
      v24 = v17;
      v25 = *(_QWORD *)(v20 + 56);
      v26 = sub_1B76DB888();
      v34 = v8;
      v27 = *(_QWORD *)(v26 - 8);
      v28 = v25 + *(_QWORD *)(v27 + 72) * v23;
      v17 = v24;
      v12 = v33;
      (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v15, v28, v26);
      v29 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56);
      v8 = v34;
      v29(v15, 0, 1, v26);
    }
    else
    {
      v31 = sub_1B76DB888();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v15, 1, 1, v31);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v16 = v35;
  }
  else
  {
    v30 = sub_1B76DB888();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v15, 1, 1, v30);
  }
  objc_msgSend(*(id *)(v2 + 40), sel_unlock);
  if (qword_1ED53B6B8 != -1)
    swift_once();
  sub_1B7699EEC((uint64_t)v15, v17, v18, v16, v36, (uint64_t)v12);
  objc_msgSend(*(id *)(v2 + 40), sel_lock);
  sub_1B76638C0((uint64_t)v12, (uint64_t)v8, &qword_1EF1774C0);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1B765EC08((uint64_t)v8, v17, v18);
  swift_endAccess();
  objc_msgSend(*(id *)(v2 + 40), sel_unlock);
  swift_bridgeObjectRelease();
  sub_1B765DE88((uint64_t)v12, &qword_1EF1774C0);
  return sub_1B765DE88((uint64_t)v15, &qword_1EF1774C0);
}

uint64_t sub_1B765F384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t result;
  int64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  unint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  v10 = MEMORY[0x1E0C80A78](v8, v9);
  v51 = (uint64_t)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10, v12);
  v15 = (char *)&v50 - v14;
  MEMORY[0x1E0C80A78](v13, v16);
  v18 = (char *)&v50 - v17;
  if (a3)
  {
    v19 = a3;
  }
  else
  {
    a2 = *(_QWORD *)(v4 + 16);
    v19 = *(_QWORD *)(v4 + 24);
    swift_bridgeObjectRetain();
  }
  v20 = *(void **)(v4 + 40);
  swift_bridgeObjectRetain();
  objc_msgSend(v20, sel_lock);
  swift_beginAccess();
  v21 = *(_QWORD *)(v4 + 32);
  v22 = *(_QWORD *)(v21 + 16);
  v53 = v15;
  v54 = a2;
  v52 = v18;
  v50 = v4 + 32;
  if (v22)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23 = sub_1B76606E0(a2, v19);
    if ((v24 & 1) != 0)
    {
      v25 = v23;
      v26 = *(_QWORD *)(v21 + 56);
      v27 = sub_1B76DB888();
      v28 = *(_QWORD *)(v27 - 8);
      (*(void (**)(char *, unint64_t, uint64_t))(v28 + 16))(v18, v26 + *(_QWORD *)(v28 + 72) * v25, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v18, 0, 1, v27);
    }
    else
    {
      v30 = sub_1B76DB888();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v18, 1, 1, v30);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v29 = sub_1B76DB888();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v18, 1, 1, v29);
  }
  objc_msgSend(*(id *)(v4 + 40), sel_unlock, v50);
  v56 = MEMORY[0x1E0DEE9E8];
  v31 = a1 + 56;
  v32 = 1 << *(_BYTE *)(a1 + 32);
  v33 = -1;
  if (v32 < 64)
    v33 = ~(-1 << v32);
  v34 = v33 & *(_QWORD *)(a1 + 56);
  v35 = (unint64_t)(v32 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v37 = 0;
  while (1)
  {
    if (v34)
    {
      v38 = __clz(__rbit64(v34));
      v34 &= v34 - 1;
      v39 = v38 | (v37 << 6);
      goto LABEL_14;
    }
    v43 = v37 + 1;
    if (__OFADD__(v37, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    if (v43 >= v35)
      goto LABEL_34;
    v44 = *(_QWORD *)(v31 + 8 * v43);
    ++v37;
    if (v44)
      goto LABEL_33;
    v37 = v43 + 1;
    if (v43 + 1 >= v35)
      goto LABEL_34;
    v44 = *(_QWORD *)(v31 + 8 * v37);
    if (v44)
      goto LABEL_33;
    v37 = v43 + 2;
    if (v43 + 2 >= v35)
      goto LABEL_34;
    v44 = *(_QWORD *)(v31 + 8 * v37);
    if (v44)
      goto LABEL_33;
    v37 = v43 + 3;
    if (v43 + 3 >= v35)
      goto LABEL_34;
    v44 = *(_QWORD *)(v31 + 8 * v37);
    if (v44)
      goto LABEL_33;
    v37 = v43 + 4;
    if (v43 + 4 >= v35)
      goto LABEL_34;
    v44 = *(_QWORD *)(v31 + 8 * v37);
    if (v44)
      goto LABEL_33;
    v45 = v43 + 5;
    if (v45 >= v35)
    {
LABEL_34:
      swift_release();
      v31 = v56;
      if (qword_1ED53B6B8 == -1)
      {
LABEL_35:
        v47 = (uint64_t)v52;
        v46 = (uint64_t)v53;
        v48 = v54;
        sub_1B769ACEC(v31, (uint64_t)v52, v54, v19, (uint64_t)v53);
        swift_bridgeObjectRelease();
        objc_msgSend(*(id *)(v4 + 40), sel_lock);
        v49 = v51;
        sub_1B76638C0(v46, v51, &qword_1EF1774C0);
        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_1B765EC08(v49, v48, v19);
        swift_endAccess();
        objc_msgSend(*(id *)(v4 + 40), sel_unlock);
        swift_bridgeObjectRelease();
        sub_1B765DE88(v46, &qword_1EF1774C0);
        return sub_1B765DE88(v47, &qword_1EF1774C0);
      }
LABEL_37:
      swift_once();
      goto LABEL_35;
    }
    v44 = *(_QWORD *)(v31 + 8 * v45);
    if (!v44)
      break;
    v37 = v45;
LABEL_33:
    v34 = (v44 - 1) & v44;
    v39 = __clz(__rbit64(v44)) + (v37 << 6);
LABEL_14:
    v40 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v39);
    v41 = *v40;
    v42 = v40[1];
    swift_bridgeObjectRetain_n();
    sub_1B76801E4(&v55, v41, v42);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  while (1)
  {
    v37 = v45 + 1;
    if (__OFADD__(v45, 1))
      break;
    if (v37 >= v35)
      goto LABEL_34;
    v44 = *(_QWORD *)(v31 + 8 * v37);
    ++v45;
    if (v44)
      goto LABEL_33;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B765F7E4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  v8 = MEMORY[0x1E0C80A78](v6, v7);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v8, v11);
  v14 = (char *)&v38 - v13;
  MEMORY[0x1E0C80A78](v12, v15);
  v17 = (char *)&v38 - v16;
  v18 = *a2;
  v41 = a2[1];
  v42 = v18;
  if (a2[3])
  {
    v19 = a2[2];
    v20 = a2[3];
  }
  else
  {
    v19 = *(_QWORD *)(v3 + 16);
    v20 = *(_QWORD *)(v3 + 24);
    swift_bridgeObjectRetain();
  }
  v21 = *(void **)(v3 + 40);
  swift_bridgeObjectRetain();
  objc_msgSend(v21, sel_lock);
  swift_beginAccess();
  v22 = *(_QWORD *)(v3 + 32);
  v23 = *(_QWORD *)(v22 + 16);
  v43 = v19;
  if (v23)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24 = sub_1B76606E0(v19, v20);
    if ((v25 & 1) != 0)
    {
      v26 = v24;
      v39 = a1;
      v27 = *(_QWORD *)(v22 + 56);
      v28 = sub_1B76DB888();
      v40 = v14;
      v29 = v10;
      v30 = *(_QWORD *)(v28 - 8);
      v31 = v27 + *(_QWORD *)(v30 + 72) * v26;
      a1 = v39;
      (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v17, v31, v28);
      v32 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56);
      v10 = v29;
      v14 = v40;
      v32(v17, 0, 1, v28);
    }
    else
    {
      v34 = sub_1B76DB888();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v17, 1, 1, v34);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v33 = sub_1B76DB888();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v17, 1, 1, v33);
  }
  objc_msgSend(*(id *)(v3 + 40), sel_unlock);
  if (qword_1ED53B6B8 != -1)
    swift_once();
  v35 = a1;
  v36 = v43;
  sub_1B769CF4C(v35, (uint64_t)v17, v43, v20, v42, v41, (uint64_t)v14);
  objc_msgSend(*(id *)(v3 + 40), sel_lock);
  sub_1B76638C0((uint64_t)v14, (uint64_t)v10, &qword_1EF1774C0);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1B765EC08((uint64_t)v10, v36, v20);
  swift_endAccess();
  objc_msgSend(*(id *)(v3 + 40), sel_unlock);
  swift_bridgeObjectRelease();
  sub_1B765DE88((uint64_t)v14, &qword_1EF1774C0);
  return sub_1B765DE88((uint64_t)v17, &qword_1EF1774C0);
}

uint64_t static Persistence.settings(from:)()
{
  return sub_1B7662D14();
}

uint64_t static Persistence.data(from:)(uint64_t a1)
{
  if ((sub_1B76628CC(a1) & 1) != 0)
    return 0;
  else
    return sub_1B76DB810();
}

unint64_t static Persistence.read(from:)(uint64_t a1)
{
  return sub_1B7663470(a1);
}

void *static Persistence.data(from:)()
{
  return sub_1B7663718();
}

uint64_t static Persistence.write(_:to:)()
{
  void *v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;

  v1 = sub_1B7663718();
  if (v0)
  {

    result = sub_1B76DBE28();
    __break(1u);
  }
  else
  {
    v3 = (uint64_t)v1;
    v4 = v2;
    sub_1B765DDFC((uint64_t)v1, v2);
    sub_1B76DB840();
    sub_1B765DEC4(v3, v4);
    return sub_1B765DEC4(v3, v4);
  }
  return result;
}

unint64_t static Persistence.properties(from:)()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v5;
  uint64_t v6;
  id v7[5];

  v7[4] = *(id *)MEMORY[0x1E0C80C00];
  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_1B76DB81C();
  v7[0] = 0;
  v2 = objc_msgSend(v0, sel_propertyListWithData_options_format_error_, v1, 0, 0, v7);

  if (v2)
  {
    v3 = v7[0];
    sub_1B76DBD50();
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53AFE8);
    if (swift_dynamicCast())
      return v6;
    else
      return sub_1B765E554(MEMORY[0x1E0DEE9D8], &qword_1ED53B080);
  }
  else
  {
    v5 = v7[0];
    sub_1B76DB7A4();

    return swift_willThrow();
  }
}

void *static Persistence.propertyData(from:)()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v0 = (void *)objc_opt_self();
  sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
  v1 = (void *)sub_1B76DBA14();
  v6[0] = 0;
  v2 = objc_msgSend(v0, sel_dataWithPropertyList_format_options_error_, v1, 200, 0, v6);

  v3 = v6[0];
  if (v2)
  {
    v4 = (void *)sub_1B76DB828();

  }
  else
  {
    v4 = v3;
    sub_1B76DB7A4();

    swift_willThrow();
  }
  return v4;
}

id static Persistence.dataVersion(from:)(uint64_t a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  unint64_t v12;
  char v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17[5];

  v2 = (id)a1;
  v17[4] = *(id *)MEMORY[0x1E0C80C00];
  if ((sub_1B76628CC(a1) & 1) == 0)
  {
    v3 = sub_1B76DB810();
    if (v1)
      return v2;
    v6 = v3;
    v7 = v4;
    v8 = (void *)objc_opt_self();
    v9 = (void *)sub_1B76DB81C();
    v17[0] = 0;
    v10 = objc_msgSend(v8, sel_propertyListWithData_options_format_error_, v9, 0, 0, v17);

    if (!v10)
    {
      v2 = v17[0];
      sub_1B76DB7A4();

      swift_willThrow();
      sub_1B765DEC4(v6, v7);
      return v2;
    }
    v11 = v17[0];
    sub_1B76DBD50();
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53AFE8);
    if ((swift_dynamicCast() & 1) != 0)
    {
      if (*(_QWORD *)(v16 + 16))
      {
        v12 = sub_1B76606E0(0x6E6F6973726576, 0xE700000000000000);
        if ((v13 & 1) != 0)
        {
          v14 = *(id *)(*(_QWORD *)(v16 + 56) + 8 * v12);
          swift_bridgeObjectRelease();
          objc_opt_self();
          v15 = (void *)swift_dynamicCastObjCClass();
          if (v15)
          {
            v2 = objc_msgSend(v15, sel_integerValue);

            sub_1B765DEC4(v6, v7);
            return v2;
          }
          sub_1B765DEC4(v6, v7);

          return 0;
        }
      }
      swift_bridgeObjectRelease();
    }
    sub_1B765DEC4(v6, v7);
  }
  return 0;
}

uint64_t static Persistence.write(dataVersion:to:)(uint64_t a1)
{
  uint64_t inited;
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void *v11;
  id v12[9];

  v12[8] = *(id *)MEMORY[0x1E0C80C00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1775B8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B76DCB70;
  *(_QWORD *)(inited + 32) = 0x6E6F6973726576;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  *(_QWORD *)(inited + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, a1);
  sub_1B765E554(inited, &qword_1EF1775D8);
  v3 = (void *)objc_opt_self();
  sub_1B765DF7C(0, &qword_1EF1775C0);
  v4 = (void *)sub_1B76DBA14();
  swift_bridgeObjectRelease();
  v12[0] = 0;
  v5 = objc_msgSend(v3, sel_dataWithPropertyList_format_options_error_, v4, 200, 0, v12);

  v6 = v12[0];
  if (v5)
  {
    v7 = sub_1B76DB828();
    v9 = v8;

    sub_1B76DB840();
    return sub_1B765DEC4(v7, v9);
  }
  else
  {
    v11 = v6;
    sub_1B76DB7A4();

    return swift_willThrow();
  }
}

id static Persistence.createDirectory(at:)()
{
  id v0;
  void *v1;
  void *v2;
  unsigned int v3;
  id v5;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v1 = (void *)sub_1B76DB7D4();
  if (qword_1EF177168 != -1)
    swift_once();
  type metadata accessor for FileAttributeKey(0);
  sub_1B765DAD0(&qword_1ED53AFF0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1B76DCAF0);
  v2 = (void *)sub_1B76DBA14();
  v6[0] = 0;
  v3 = objc_msgSend(v0, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v1, 1, v2, v6);

  if (v3)
    return v6[0];
  v5 = v6[0];
  sub_1B76DB7A4();

  return (id)swift_willThrow();
}

id static Persistence.setFileAttributes(of:)()
{
  id v0;
  void *v1;
  void *v2;
  unsigned int v3;
  id v5;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  if (qword_1ED53B078 != -1)
    swift_once();
  type metadata accessor for FileAttributeKey(0);
  sub_1B765DAD0(&qword_1ED53AFF0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1B76DCAF0);
  v1 = (void *)sub_1B76DBA14();
  sub_1B76DB7E0();
  v2 = (void *)sub_1B76DBAB0();
  swift_bridgeObjectRelease();
  v6[0] = 0;
  v3 = objc_msgSend(v0, sel_setAttributes_ofItemAtPath_error_, v1, v2, v6);

  if (v3)
    return v6[0];
  v5 = v6[0];
  sub_1B76DB7A4();

  return (id)swift_willThrow();
}

uint64_t Persistence.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t Persistence.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

unint64_t sub_1B76605D0(uint64_t *a1)
{
  return sub_1B766084C(a1, (void (*)(_BYTE *))Application.hash(into:), (void (*)(uint64_t, unint64_t))sub_1B765DF1C, (void (*)(uint64_t, unint64_t))sub_1B765DF08);
}

void sub_1B76605EC(char a1)
{
  sub_1B76DBF54();
  __asm { BR              X10 }
}

uint64_t sub_1B7660644()
{
  uint64_t v0;
  uint64_t v1;

  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  v1 = sub_1B76DBF78();
  return sub_1B76609D0(v0, v1);
}

unint64_t sub_1B76606E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B76DBF54();
  sub_1B76DBB1C();
  v4 = sub_1B76DBF78();
  return sub_1B7660BF0(a1, a2, v4);
}

unint64_t sub_1B7660744(uint64_t a1)
{
  uint64_t v2;

  sub_1B76DBAD4();
  sub_1B76DBF54();
  sub_1B76DBB1C();
  v2 = sub_1B76DBF78();
  swift_bridgeObjectRelease();
  return sub_1B7660CD0(a1, v2);
}

unint64_t sub_1B76607C4(uint64_t a1)
{
  uint64_t v2;

  sub_1B76DB8D0();
  sub_1B765DAD0(&qword_1EF1775C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95660], MEMORY[0x1E0C95670]);
  v2 = sub_1B76DBA74();
  return sub_1B7660E44(a1, v2);
}

unint64_t sub_1B7660830(uint64_t *a1)
{
  return sub_1B766084C(a1, (void (*)(_BYTE *))ActivityCategory.hash(into:), (void (*)(uint64_t, unint64_t))sub_1B765E0D8, (void (*)(uint64_t, unint64_t))sub_1B765E0D4);
}

unint64_t sub_1B766084C(uint64_t *a1, void (*a2)(_BYTE *), void (*a3)(uint64_t, unint64_t), void (*a4)(uint64_t, unint64_t))
{
  __int128 v8;
  uint64_t v9;
  _BYTE v11[72];
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v8 = *((_OWORD *)a1 + 1);
  v12 = *(_OWORD *)a1;
  v13 = v8;
  v14 = *((_OWORD *)a1 + 2);
  sub_1B76DBF54();
  a2(v11);
  v9 = sub_1B76DBF78();
  return sub_1B7660F84(a1, v9, a3, a4);
}

unint64_t sub_1B76608DC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;

  sub_1B76DBF54();
  sub_1B76DBF6C();
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1B76DBB1C();
    swift_bridgeObjectRelease();
  }
  sub_1B76DBF6C();
  if (a4 >> 60 != 15)
  {
    sub_1B765DDFC(a3, a4);
    sub_1B76DB834();
    sub_1B765DF1C(a3, a4);
  }
  v8 = sub_1B76DBF78();
  return sub_1B7661CF4(a1, a2, a3, a4, v8);
}

uint64_t sub_1B76609D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_1B7660BF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1B76DBED0() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1B76DBED0() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1B7660CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_1B76DBAD4();
    v8 = v7;
    if (v6 == sub_1B76DBAD4() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_1B76DBED0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_1B76DBAD4();
          v15 = v14;
          if (v13 == sub_1B76DBAD4() && v15 == v16)
            break;
          v18 = sub_1B76DBED0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1B7660E44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t);
  char v15;
  _QWORD v17[2];

  v3 = v2;
  v17[1] = a1;
  v5 = sub_1B76DB8D0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = -1 << *(_BYTE *)(v3 + 32);
  v11 = a2 & ~v10;
  if (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v6 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v14(v9, *(_QWORD *)(v3 + 48) + v13 * v11, v5);
      sub_1B765DAD0(&qword_1EF1775D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95660], MEMORY[0x1E0C95678]);
      v15 = sub_1B76DBAA4();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      if ((v15 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  return v11;
}

unint64_t sub_1B7660F84(uint64_t *a1, uint64_t a2, void (*a3)(uint64_t, unint64_t), void (*a4)(uint64_t, unint64_t))
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v5 = -1 << *(_BYTE *)(v4 + 32);
  v6 = a2 & ~v5;
  v27 = v4 + 64;
  if (((*(_QWORD *)(v4 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v8 = v4;
    v26 = ~v5;
    v9 = a1[1];
    v24 = a1[3];
    v25 = *a1;
    v22 = a1[2];
    v20 = a1[4];
    v21 = a1[5];
    do
    {
      v10 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 48 * v6);
      v11 = v10[1];
      v12 = v10[2];
      v14 = v10[3];
      v13 = v10[4];
      v15 = v10[5];
      if (v11)
      {
        if (!v9)
          goto LABEL_4;
        v16 = *v10 == v25 && v11 == v9;
        if (!v16 && (sub_1B76DBED0() & 1) == 0)
          goto LABEL_4;
      }
      else if (v9)
      {
        goto LABEL_4;
      }
      if (v14 >> 60 != 15)
      {
        if (v24 >> 60 != 15)
          __asm { BR              X8 }
LABEL_23:
        a4(v12, v14);
        a4(v22, v24);
        a3(v12, v14);
        a3(v22, v24);
        goto LABEL_4;
      }
      if (v24 >> 60 != 15)
        goto LABEL_23;
      swift_bridgeObjectRetain();
      a4(v12, v14);
      swift_bridgeObjectRetain();
      if (v15)
      {
        if (v21)
        {
          if (v13 == v20 && v15 == v21)
          {
            swift_bridgeObjectRelease();
            a3(v12, v14);
            swift_bridgeObjectRelease();
            return v6;
          }
          v18 = sub_1B76DBED0();
          swift_bridgeObjectRelease();
          a3(v12, v14);
          swift_bridgeObjectRelease();
          if ((v18 & 1) != 0)
            return v6;
        }
        else
        {
          swift_bridgeObjectRelease();
          a3(v12, v14);
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        a3(v12, v14);
        swift_bridgeObjectRelease();
        if (!v21)
          return v6;
      }
LABEL_4:
      v6 = (v6 + 1) & v26;
    }
    while (((*(_QWORD *)(v27 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  return v6;
}

unint64_t sub_1B7661CF4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v17;
  uint64_t v19;

  v6 = -1 << *(_BYTE *)(v5 + 32);
  v7 = a5 & ~v6;
  if (((*(_QWORD *)(v5 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    v19 = ~v6;
    v17 = a4 >> 60;
    do
    {
      v11 = (_QWORD *)(*(_QWORD *)(v5 + 48) + 32 * v7);
      v13 = v11[1];
      v12 = v11[2];
      v14 = v11[3];
      if (v13)
      {
        if (a2)
        {
          v15 = *v11 == a1 && v13 == a2;
          if (v15 || (sub_1B76DBED0() & 1) != 0)
          {
LABEL_15:
            if (v14 >> 60 == 15)
            {
              if (v17 > 0xE)
                return v7;
            }
            else if (v17 <= 0xE)
            {
              __asm { BR              X8 }
            }
            sub_1B765DF08(v12, v14);
            sub_1B765DF08(a3, a4);
            sub_1B765DF1C(v12, v14);
            sub_1B765DF1C(a3, a4);
          }
        }
      }
      else if (!a2)
      {
        goto LABEL_15;
      }
      v7 = (v7 + 1) & v19;
    }
    while (((*(_QWORD *)(v5 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return v7;
}

uint64_t sub_1B76628CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  unint64_t v14;
  char v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[4];
  __int128 v32;
  __int128 v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v2 = sub_1B76DB804();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_1B76DB7E0();
  v8 = (void *)sub_1B76DBAB0();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v32 = 0;
  v9 = objc_msgSend(v7, sel_attributesOfItemAtPath_error_, v8, &v32);

  v10 = (void *)v32;
  if (v9)
  {
    type metadata accessor for FileAttributeKey(0);
    sub_1B765DAD0(&qword_1ED53AFF0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1B76DCAF0);
    v11 = sub_1B76DBA2C();
    v12 = v10;

    if (*(_QWORD *)(v11 + 16))
    {
      v13 = (id)*MEMORY[0x1E0CB2AF0];
      v14 = sub_1B7660744((uint64_t)v13);
      if ((v15 & 1) != 0)
      {
        sub_1B765DF40(*(_QWORD *)(v11 + 56) + 32 * v14, (uint64_t)&v32);
      }
      else
      {
        v32 = 0u;
        v33 = 0u;
      }

    }
    else
    {
      v32 = 0u;
      v33 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = (id)v32;
    v17 = (void *)sub_1B76DB7A4();

    swift_willThrow();
    v32 = 0u;
    v33 = 0u;
  }
  sub_1B76638C0((uint64_t)&v32, (uint64_t)v31, &qword_1ED53B7A0);
  if (!v31[3])
  {
    sub_1B765DE88((uint64_t)v31, &qword_1ED53B7A0);
LABEL_18:
    sub_1B765DE88((uint64_t)&v32, &qword_1ED53B7A0);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_18;
  v18 = v30;
  if (v30 <= 0x20000)
    goto LABEL_18;
  if (qword_1EF177220 != -1)
    swift_once();
  v19 = sub_1B76DB8B8();
  __swift_project_value_buffer(v19, (uint64_t)qword_1EF177E18);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, a1, v2);
  v20 = sub_1B76DB8A0();
  v21 = sub_1B76DBC90();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v29 = swift_slowAlloc();
    v31[0] = v29;
    *(_DWORD *)v22 = 136446466;
    v28 = v22 + 4;
    sub_1B765DAD0(&qword_1EF1775E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v23 = sub_1B76DBEAC();
    v30 = sub_1B7669B50(v23, v24, v31);
    sub_1B76DBD38();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    *(_WORD *)(v22 + 12) = 2050;
    v30 = v18;
    sub_1B76DBD38();
    _os_log_impl(&dword_1B7656000, v20, v21, "Settings file %{public}s too large to read: %{public}ld", (uint8_t *)v22, 0x16u);
    v25 = 1;
    v26 = v29;
    swift_arrayDestroy();
    MEMORY[0x1BCCA9590](v26, -1, -1);
    MEMORY[0x1BCCA9590](v22, -1, -1);

    sub_1B765DE88((uint64_t)&v32, &qword_1ED53B7A0);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    sub_1B765DE88((uint64_t)&v32, &qword_1ED53B7A0);
    return 1;
  }
  return v25;
}

uint64_t sub_1B7662D14()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  _QWORD *v4;
  unint64_t v5;
  char v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  char isUniquelyReferenced_nonNull_native;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  char v31;
  id v32;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  id v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  id v57;
  _OWORD v58[2];
  id v59[5];

  v59[4] = *(id *)MEMORY[0x1E0C80C00];
  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_1B76DB81C();
  v59[0] = 0;
  v2 = objc_msgSend(v0, sel_propertyListWithData_options_format_error_, v1, 0, 0, v59);

  if (!v2)
  {
    v32 = v59[0];
    sub_1B76DB7A4();

    return swift_willThrow();
  }
  v3 = v59[0];
  sub_1B76DBD50();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53AFE8);
  if ((swift_dynamicCast() & 1) == 0)
    return sub_1B765E554(MEMORY[0x1E0DEE9D8], &qword_1ED53B080);
  v4 = *(_QWORD **)&v58[0];
  v57 = *(id *)&v58[0];
  if (!*(_QWORD *)(*(_QWORD *)&v58[0] + 16))
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return sub_1B765E554(MEMORY[0x1E0DEE9D8], &qword_1ED53B080);
  }
  swift_bridgeObjectRetain();
  v5 = sub_1B76606E0(0x6E6F6973726576, 0xE700000000000000);
  if ((v6 & 1) == 0
    || (v7 = *(void **)(*(_QWORD *)(*(_QWORD *)&v58[0] + 56) + 8 * v5),
        objc_opt_self(),
        (v8 = swift_dynamicCastObjCClass()) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  v9 = (void *)v8;
  v10 = v7;
  if (objc_msgSend(v9, sel_integerValue) != (id)1)
    goto LABEL_32;
  if (qword_1ED53B140 == -1)
  {
    if (!*(_QWORD *)(*(_QWORD *)&v58[0] + 16))
    {
LABEL_21:
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
  }
  else
  {
    swift_once();
    if (!*(_QWORD *)(*(_QWORD *)&v58[0] + 16))
      goto LABEL_21;
  }
  v11 = qword_1ED53B0F8;
  v12 = qword_1ED53B0F0;
  swift_bridgeObjectRetain();
  v13 = sub_1B76606E0(v12, v11);
  if ((v14 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  v55 = v10;
  v15 = *(id *)(*(_QWORD *)(*(_QWORD *)&v58[0] + 56) + 8 * v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1EF177430 != -1)
    swift_once();
  v16 = *(_QWORD *)algn_1EF179A90;
  v53 = qword_1EF179A88;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1775E8);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1B76DCB70;
  v54 = sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
  *(_QWORD *)(v17 + 56) = v54;
  *(_QWORD *)(v17 + 32) = v15;
  v18 = objc_allocWithZone(MEMORY[0x1E0C99D20]);
  v19 = v15;
  swift_bridgeObjectRetain();
  v20 = (void *)sub_1B76DBB64();
  swift_bridgeObjectRelease();
  v21 = objc_msgSend(v18, sel_initWithArray_, v20);

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v59[0] = v4;
  sub_1B7694150((uint64_t)v21, v53, v16, isUniquelyReferenced_nonNull_native);
  v23 = v59[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1ED53B248 != -1)
    swift_once();
  v25 = qword_1ED53B028;
  v24 = *(_QWORD *)algn_1ED53B030;
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1B76DCB70;
  *(_QWORD *)(v26 + 56) = v54;
  *(_QWORD *)(v26 + 32) = v19;
  v27 = objc_allocWithZone(MEMORY[0x1E0C99D20]);
  v28 = v19;
  swift_bridgeObjectRetain();
  v29 = (void *)sub_1B76DBB64();
  swift_bridgeObjectRelease();
  v30 = objc_msgSend(v27, sel_initWithArray_, v29);

  v31 = swift_isUniquelyReferenced_nonNull_native();
  v59[0] = v23;
  sub_1B7694150((uint64_t)v30, v25, v24, v31);
  v4 = v59[0];
  v57 = v59[0];

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = v55;
LABEL_22:
  if (qword_1EF177288 == -1)
  {
    if (!v4[2])
      goto LABEL_33;
  }
  else
  {
    swift_once();
    if (!v4[2])
      goto LABEL_33;
  }
  v34 = qword_1EF1783D0;
  v35 = qword_1EF1783C8;
  swift_bridgeObjectRetain();
  v36 = sub_1B76606E0(v35, v34);
  if ((v37 & 1) == 0)
  {
LABEL_32:
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  v38 = *(id *)(v4[7] + 8 * v36);
  swift_bridgeObjectRelease();
  objc_opt_self();
  v39 = swift_dynamicCastObjCClass();
  if (v39)
  {
    v40 = (void *)v39;
    if (qword_1EF177410 != -1)
      swift_once();
    v41 = qword_1EF179940;
    v42 = unk_1EF179948;
    v43 = v38;
    swift_bridgeObjectRetain();
    v44 = swift_isUniquelyReferenced_nonNull_native();
    v59[0] = v4;
    sub_1B7694150((uint64_t)v40, v41, v42, v44);
    v57 = v59[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1EF177408 != -1)
      swift_once();
    v46 = qword_1EF1798E8;
    v45 = unk_1EF1798F0;
    swift_bridgeObjectRetain();
    if (objc_msgSend(v40, sel_firstObject))
    {
      sub_1B76DBD50();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v58, 0, sizeof(v58));
    }
    sub_1B765DE40((uint64_t)v58, (uint64_t)v59);
    if (v59[3])
    {
      sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v48 = swift_isUniquelyReferenced_nonNull_native();
        v59[0] = v57;
        sub_1B7694150(v56, v46, v45, v48);
        v57 = v59[0];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_41:
        v50 = qword_1EF1783C8;
        v51 = qword_1EF1783D0;
        swift_bridgeObjectRetain();
        v52 = (void *)sub_1B7693204(v50, v51);

        swift_bridgeObjectRelease();
        goto LABEL_33;
      }
    }
    else
    {
      sub_1B765DE88((uint64_t)v59, &qword_1ED53B7A0);
    }
    v49 = (void *)sub_1B7693204(v46, v45);
    swift_bridgeObjectRelease();

    goto LABEL_41;
  }

LABEL_33:
  v47 = (void *)sub_1B7693204(0x6E6F6973726576, 0xE700000000000000);

  return (uint64_t)v57;
}

unint64_t sub_1B7663470(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v4 = sub_1B76DB804();
  MEMORY[0x1E0C80A78](v4, v5);
  if ((sub_1B76628CC(a1) & 1) != 0)
    return sub_1B765E554(MEMORY[0x1E0DEE9D8], &qword_1ED53B080);
  v6 = sub_1B76DB810();
  if (!v1)
  {
    v8 = v6;
    v9 = v7;
    v2 = sub_1B7662D14();
    sub_1B765DEC4(v8, v9);
  }
  return v2;
}

void *sub_1B7663718()
{
  id v0;
  id v1;
  char isUniquelyReferenced_nonNull_native;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v9[2];

  v9[1] = *(id *)MEMORY[0x1E0C80C00];
  v0 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
  swift_bridgeObjectRetain();
  v1 = objc_msgSend(v0, sel_initWithInteger_, 2);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1B7694150((uint64_t)v1, 0x6E6F6973726576, 0xE700000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  v3 = (void *)objc_opt_self();
  sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
  v4 = (void *)sub_1B76DBA14();
  swift_bridgeObjectRelease();
  v9[0] = 0;
  v5 = objc_msgSend(v3, sel_dataWithPropertyList_format_options_error_, v4, 200, 0, v9);

  v6 = v9[0];
  if (v5)
  {
    v7 = (void *)sub_1B76DB828();

  }
  else
  {
    v7 = v6;
    sub_1B76DB7A4();

    swift_willThrow();
  }
  return v7;
}

uint64_t method lookup function for Persistence()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of static Persistence.reinit(defaultContainer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t sub_1B76638C0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t Application.bundleIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Application.token.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  *a1 = v2;
  a1[1] = v3;
  return sub_1B765DF08(v2, v3);
}

uint64_t Application.localizedDisplayName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

double Application.init(bundleIdentifier:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  double result;

  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  result = 0.0;
  *(_OWORD *)(a3 + 16) = xmmword_1B76DC6F0;
  *(_QWORD *)(a3 + 32) = 0;
  *(_QWORD *)(a3 + 40) = 0;
  return result;
}

__n128 Application.init(token:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  result = *a1;
  a2[1] = *a1;
  a2[2].n128_u64[0] = 0;
  a2[2].n128_u64[1] = 0;
  return result;
}

__n128 Application.init(bundleIdentifier:token:localizedDisplayName:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, __n128 *a6@<X8>)
{
  __n128 result;

  a6->n128_u64[0] = a1;
  a6->n128_u64[1] = a2;
  result = *a3;
  a6[1] = *a3;
  a6[2].n128_u64[0] = a4;
  a6[2].n128_u64[1] = a5;
  return result;
}

void Application.init()(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0xF000000000000000;
  a1[4] = 0;
  a1[5] = 0;
}

void static Application.none.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0xF000000000000000;
  a1[4] = 0;
  a1[5] = 0;
}

uint64_t Application.hash(into:)()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = v0[2];
  v2 = v0[3];
  v3 = v0[5];
  if (v0[1])
  {
    sub_1B76DBF6C();
    swift_bridgeObjectRetain();
    sub_1B76DBB1C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B76DBF6C();
  }
  if (v2 >> 60 == 15)
  {
    sub_1B76DBF6C();
    if (v3)
    {
LABEL_6:
      sub_1B76DBF6C();
      swift_bridgeObjectRetain();
      sub_1B76DBB1C();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1B76DBF6C();
    sub_1B765DDFC(v1, v2);
    sub_1B76DB834();
    sub_1B765DF1C(v1, v2);
    if (v3)
      goto LABEL_6;
  }
  return sub_1B76DBF6C();
}

uint64_t Application.hashValue.getter()
{
  sub_1B76DBF54();
  Application.hash(into:)();
  return sub_1B76DBF78();
}

uint64_t sub_1B7663B38()
{
  sub_1B76DBF54();
  Application.hash(into:)();
  return sub_1B76DBF78();
}

uint64_t sub_1B7663B8C()
{
  sub_1B76DBF54();
  Application.hash(into:)();
  return sub_1B76DBF78();
}

ManagedSettings::ApplicationSettings::Name_optional __swiftcall ApplicationSettings.Name.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ManagedSettings::ApplicationSettings::Name_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1B76DBE70();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static ApplicationSettings.Name.allCases.getter()
{
  return &unk_1E6CAC5B8;
}

uint64_t ApplicationSettings.Name.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1B7663C70 + 4 * byte_1B76DCBD0[*v0]))(0xD00000000000001FLL, 0x80000001B76E1300);
}

uint64_t sub_1B7663C70(uint64_t a1)
{
  return a1 - 7;
}

void sub_1B7663CC4(char *a1)
{
  sub_1B76A1DB0(*a1);
}

void sub_1B7663CD0()
{
  char *v0;

  sub_1B76D8D04(*v0);
}

void sub_1B7663CD8(uint64_t a1)
{
  char *v1;

  sub_1B76D9B40(a1, *v1);
}

void sub_1B7663CE0(uint64_t a1)
{
  char *v1;

  sub_1B76D9E64(a1, *v1);
}

ManagedSettings::ApplicationSettings::Name_optional sub_1B7663CE8(Swift::String *a1)
{
  return ApplicationSettings.Name.init(rawValue:)(*a1);
}

uint64_t sub_1B7663CF4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ApplicationSettings.Name.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1B7663D18(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6CAC5B8;
}

uint64_t ApplicationSettings.blockedApplications.getter()
{
  return sub_1B7664808(&qword_1EF177170, (uint64_t)&xmmword_1EF177600);
}

uint64_t ApplicationSettings.blockedApplications.setter(uint64_t a1)
{
  sub_1B7666210(a1, &qword_1EF177170, (uint64_t)&xmmword_1EF177600);
  return swift_bridgeObjectRelease();
}

void (*ApplicationSettings.blockedApplications.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x98uLL);
  *a1 = v3;
  v4 = v3 + 17;
  v3[18] = v1;
  v5 = *v1;
  v6 = v1[1];
  v8 = v1[2];
  v7 = v1[3];
  if (qword_1EF177170 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = sub_1B7658794((uint64_t)&xmmword_1EF177600, v5, v6, v8, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v4 = v9;
  return sub_1B7663E40;
}

void sub_1B7663E40(uint64_t *a1, char a2)
{
  sub_1B7664A60(a1, a2, (uint64_t)&xmmword_1EF177600);
}

uint64_t ApplicationSettings.effectiveBlockedApplications.getter()
{
  return sub_1B7664D38(&qword_1EF177170, (uint64_t)&xmmword_1EF177600);
}

double sub_1B7663E68()
{
  double result;
  __int128 v1;
  _OWORD v2[3];
  __int128 v3;
  char v4;
  _BYTE v5[24];
  uint64_t v6;
  _UNKNOWN **v7;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED53B380);
  v7 = &off_1E6CB05D8;
  v5[0] = 1;
  *(_QWORD *)&v1 = MEMORY[0x1E0DEE9E8];
  *((_QWORD *)&v1 + 1) = 0xD00000000000001FLL;
  *(_QWORD *)&v2[0] = 0x80000001B76E1300;
  sub_1B76638C0((uint64_t)v5, (uint64_t)v2 + 8, &qword_1ED53B410);
  LOWORD(v3) = 257;
  BYTE2(v3) = 0;
  *((_QWORD *)&v3 + 1) = 50;
  v4 = 0;
  sub_1B765DE88((uint64_t)v5, &qword_1ED53B410);
  xmmword_1EF177620 = v2[1];
  unk_1EF177630 = v2[2];
  xmmword_1EF177640 = v3;
  byte_1EF177650 = v4;
  result = *(double *)&v1;
  xmmword_1EF177600 = v1;
  *(_OWORD *)algn_1EF177610 = v2[0];
  return result;
}

uint64_t static ApplicationSettings.blockedApplications.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7664E5C(&qword_1EF177170, (uint64_t)&xmmword_1EF177600, a1);
}

uint64_t ApplicationSettings.denyAppClips.getter()
{
  return sub_1B765A148(&qword_1EF177178, (uint64_t)&byte_1EF177658);
}

uint64_t ApplicationSettings.denyAppClips.setter(unsigned __int8 a1)
{
  return sub_1B766413C(a1, &qword_1EF177178, (uint64_t)&byte_1EF177658);
}

uint64_t (*ApplicationSettings.denyAppClips.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177178 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF177658, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B766403C;
}

uint64_t sub_1B766403C(uint64_t a1)
{
  return ApplicationSettings.denyAppClips.setter(*(_BYTE *)(a1 + 8));
}

uint64_t ApplicationSettings.effectiveDenyAppClips.getter()
{
  return sub_1B765A568(&qword_1EF177178, &byte_1EF177658);
}

uint64_t sub_1B766407C()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF177688 = result;
  unk_1EF177690 = &off_1E6CB07B8;
  byte_1EF177670 = 0;
  byte_1EF177658 = 0;
  qword_1EF177660 = 0xD000000000000018;
  unk_1EF177668 = 0x80000001B76E1320;
  word_1EF177698 = 256;
  byte_1EF17769A = 0;
  qword_1EF1776A0 = 0;
  byte_1EF1776A8 = 1;
  return result;
}

uint64_t static ApplicationSettings.denyAppClips.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7664440(&qword_1EF177178, (uint64_t)&byte_1EF177658, a1);
}

uint64_t ApplicationSettings.denyAppInstallation.getter()
{
  return sub_1B765A148(&qword_1EF177180, (uint64_t)&byte_1EF1776B0);
}

uint64_t ApplicationSettings.denyAppInstallation.setter(unsigned __int8 a1)
{
  return sub_1B766413C(a1, &qword_1EF177180, (uint64_t)&byte_1EF1776B0);
}

uint64_t sub_1B766413C(unsigned __int8 a1, _QWORD *a2, uint64_t a3)
{
  uint64_t *v3;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v17[4];
  _BYTE v18[8];
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;

  v5 = a1;
  if (*a2 != -1)
    swift_once();
  sub_1B76638C0(a3, (uint64_t)v18, &qword_1EF177448);
  v7 = *v3;
  v6 = v3[1];
  v9 = v3[2];
  v8 = v3[3];
  if (v5 == 2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = 0;
  }
  else
  {
    v11 = v5 & 1;
    v12 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = objc_msgSend(v12, sel_initWithBool_, v11);
  }
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    v13 = v19;
    v14 = v20;
    v17[0] = v7;
    v17[1] = v6;
    v17[2] = v9;
    v17[3] = v8;
    v15 = v21;
    swift_retain();
    sub_1B765ED7C(v10, v13, v14, v17, v15);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  return sub_1B765DE88((uint64_t)v18, &qword_1EF177448);
}

uint64_t (*ApplicationSettings.denyAppInstallation.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177180 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF1776B0, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B7664378;
}

uint64_t sub_1B7664378(uint64_t a1)
{
  return ApplicationSettings.denyAppInstallation.setter(*(_BYTE *)(a1 + 8));
}

uint64_t ApplicationSettings.effectiveDenyAppInstallation.getter()
{
  return sub_1B765A568(&qword_1EF177180, &byte_1EF1776B0);
}

uint64_t sub_1B76643B8()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF1776E0 = result;
  unk_1EF1776E8 = &off_1E6CB07B8;
  byte_1EF1776C8 = 0;
  byte_1EF1776B0 = 0;
  qword_1EF1776B8 = 0xD00000000000001FLL;
  unk_1EF1776C0 = 0x80000001B76E1340;
  word_1EF1776F0 = 257;
  byte_1EF1776F2 = 0;
  qword_1EF1776F8 = 0;
  byte_1EF177700 = 1;
  return result;
}

uint64_t static ApplicationSettings.denyAppInstallation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7664440(&qword_1EF177180, (uint64_t)&byte_1EF1776B0, a1);
}

uint64_t sub_1B7664440@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1)
    swift_once();
  return sub_1B76638C0(a2, a3, &qword_1EF177448);
}

uint64_t ApplicationSettings.denyAppRemoval.getter()
{
  return sub_1B765A148(&qword_1EF177188, (uint64_t)&byte_1EF177708);
}

uint64_t ApplicationSettings.denyAppRemoval.setter(unsigned __int8 a1)
{
  return sub_1B766413C(a1, &qword_1EF177188, (uint64_t)&byte_1EF177708);
}

uint64_t (*ApplicationSettings.denyAppRemoval.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177188 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF177708, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B7664574;
}

uint64_t sub_1B7664574(uint64_t a1)
{
  return ApplicationSettings.denyAppRemoval.setter(*(_BYTE *)(a1 + 8));
}

uint64_t ApplicationSettings.effectiveDenyAppRemoval.getter()
{
  return sub_1B765A568(&qword_1EF177188, &byte_1EF177708);
}

uint64_t sub_1B76645B4()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF177738 = result;
  unk_1EF177740 = &off_1E6CB07B8;
  byte_1EF177720 = 0;
  byte_1EF177708 = 0;
  qword_1EF177710 = 0xD00000000000001ALL;
  unk_1EF177718 = 0x80000001B76E1360;
  word_1EF177748 = 257;
  byte_1EF17774A = 0;
  qword_1EF177750 = 0;
  byte_1EF177758 = 1;
  return result;
}

uint64_t static ApplicationSettings.denyAppRemoval.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7664440(&qword_1EF177188, (uint64_t)&byte_1EF177708, a1);
}

uint64_t ApplicationSettings.denyBackgroundAppRefresh.getter()
{
  return sub_1B765A148(&qword_1EF177190, (uint64_t)&byte_1EF177760);
}

uint64_t ApplicationSettings.denyBackgroundAppRefresh.setter(unsigned __int8 a1)
{
  return sub_1B766413C(a1, &qword_1EF177190, (uint64_t)&byte_1EF177760);
}

uint64_t (*ApplicationSettings.denyBackgroundAppRefresh.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177190 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF177760, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B7664724;
}

uint64_t sub_1B7664724(uint64_t a1)
{
  return ApplicationSettings.denyBackgroundAppRefresh.setter(*(_BYTE *)(a1 + 8));
}

uint64_t ApplicationSettings.effectiveDenyBackgroundAppRefresh.getter()
{
  return sub_1B765A568(&qword_1EF177190, &byte_1EF177760);
}

uint64_t sub_1B7664764()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF177790 = result;
  unk_1EF177798 = &off_1E6CB07B8;
  byte_1EF177778 = 0;
  byte_1EF177760 = 0;
  qword_1EF177768 = 0xD000000000000024;
  unk_1EF177770 = 0x80000001B76E1380;
  word_1EF1777A0 = 256;
  byte_1EF1777A2 = 0;
  qword_1EF1777A8 = 0;
  byte_1EF1777B0 = 1;
  return result;
}

uint64_t static ApplicationSettings.denyBackgroundAppRefresh.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7664440(&qword_1EF177190, (uint64_t)&byte_1EF177760, a1);
}

uint64_t ApplicationSettings.unremovableApplications.getter()
{
  return sub_1B7664808(&qword_1EF177198, (uint64_t)&xmmword_1EF1777B8);
}

uint64_t sub_1B7664808(_QWORD *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *v2;
  v4 = v2[1];
  v7 = v2[2];
  v6 = v2[3];
  if (*a1 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_1B7658794(a2, v5, v4, v7, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1B7664894@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X3>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v7 = *a1;
  v6 = a1[1];
  v9 = a1[2];
  v8 = a1[3];
  v10 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = sub_1B7658794(a3, v7, v6, v9, v8);
  swift_bridgeObjectRelease_n();
  result = swift_bridgeObjectRelease_n();
  *a4 = v11;
  return result;
}

uint64_t ApplicationSettings.unremovableApplications.setter(uint64_t a1)
{
  sub_1B7666210(a1, &qword_1EF177198, (uint64_t)&xmmword_1EF1777B8);
  return swift_bridgeObjectRelease();
}

void (*ApplicationSettings.unremovableApplications.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x98uLL);
  *a1 = v3;
  v4 = v3 + 17;
  v3[18] = v1;
  v5 = *v1;
  v6 = v1[1];
  v8 = v1[2];
  v7 = v1[3];
  if (qword_1EF177198 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = sub_1B7658794((uint64_t)&xmmword_1EF1777B8, v5, v6, v8, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v4 = v9;
  return sub_1B7664A54;
}

void sub_1B7664A54(uint64_t *a1, char a2)
{
  sub_1B7664A60(a1, a2, (uint64_t)&xmmword_1EF1777B8);
}

void sub_1B7664A60(uint64_t *a1, char a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = *a1;
  v5 = *(_QWORD *)(*a1 + 136);
  v6 = *(uint64_t **)(*a1 + 144);
  sub_1B76638C0(a3, *a1, &qword_1ED53B420);
  v8 = *v6;
  v7 = v6[1];
  v10 = v6[2];
  v9 = v6[3];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v5)
    {
      swift_bridgeObjectRetain();
      v11 = (void *)sub_1B7665574(v5, (void (*)(uint64_t, unint64_t))sub_1B765DF08, 0xD000000000000010, 0x80000001B76E2790, (void (*)(uint64_t, unint64_t))sub_1B765DF1C);
    }
    else
    {
      v11 = 0;
    }
    if (qword_1EF177160 != -1)
      swift_once();
    swift_beginAccess();
    if (off_1EF1775A8)
    {
      v13 = *(_QWORD *)(v4 + 8);
      v14 = *(_QWORD *)(v4 + 16);
      v19 = v8;
      v20 = v7;
      v21 = v10;
      v22 = v9;
      v15 = *(unsigned __int8 *)(v4 + 66);
      swift_retain();
      sub_1B765ED7C(v11, v13, v14, &v19, v15);
      swift_release();
    }
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    sub_1B765DE88(v4, &qword_1ED53B420);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v5)
    {
      swift_bridgeObjectRetain();
      v12 = (void *)sub_1B7665574(v5, (void (*)(uint64_t, unint64_t))sub_1B765DF08, 0xD000000000000010, 0x80000001B76E2790, (void (*)(uint64_t, unint64_t))sub_1B765DF1C);
      swift_bridgeObjectRelease();
    }
    else
    {
      v12 = 0;
    }
    if (qword_1EF177160 != -1)
      swift_once();
    swift_beginAccess();
    if (off_1EF1775A8)
    {
      v16 = *(_QWORD *)(v4 + 8);
      v17 = *(_QWORD *)(v4 + 16);
      v19 = v8;
      v20 = v7;
      v21 = v10;
      v22 = v9;
      v18 = *(unsigned __int8 *)(v4 + 66);
      swift_retain();
      sub_1B765ED7C(v12, v16, v17, &v19, v18);
      swift_release();
    }
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    sub_1B765DE88(v4, &qword_1ED53B420);
  }
  swift_bridgeObjectRelease();
  free((void *)v4);
}

uint64_t ApplicationSettings.effectiveUnremovableApplications.getter()
{
  return sub_1B7664D38(&qword_1EF177198, (uint64_t)&xmmword_1EF1777B8);
}

uint64_t sub_1B7664D38(_QWORD *a1, uint64_t a2)
{
  if (*a1 != -1)
    swift_once();
  return sub_1B7659DBC(a2);
}

double sub_1B7664D70()
{
  double result;
  __int128 v1;
  _OWORD v2[3];
  __int128 v3;
  char v4;
  _BYTE v5[24];
  uint64_t v6;
  _UNKNOWN **v7;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED53B380);
  v7 = &off_1E6CB05D8;
  v5[0] = 1;
  *(_QWORD *)&v1 = MEMORY[0x1E0DEE9E8];
  *((_QWORD *)&v1 + 1) = 0xD000000000000023;
  *(_QWORD *)&v2[0] = 0x80000001B76E13B0;
  sub_1B76638C0((uint64_t)v5, (uint64_t)v2 + 8, &qword_1ED53B410);
  LOWORD(v3) = 256;
  BYTE2(v3) = 0;
  *((_QWORD *)&v3 + 1) = 0x7FFFFFFFFFFFFFFFLL;
  v4 = 0;
  sub_1B765DE88((uint64_t)v5, &qword_1ED53B410);
  xmmword_1EF1777D8 = v2[1];
  unk_1EF1777E8 = v2[2];
  xmmword_1EF1777F8 = v3;
  byte_1EF177808 = v4;
  result = *(double *)&v1;
  xmmword_1EF1777B8 = v1;
  unk_1EF1777C8 = v2[0];
  return result;
}

uint64_t static ApplicationSettings.unremovableApplications.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7664E5C(&qword_1EF177198, (uint64_t)&xmmword_1EF1777B8, a1);
}

uint64_t sub_1B7664E5C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1)
    swift_once();
  return sub_1B76638C0(a2, a3, &qword_1ED53B420);
}

__n128 sub_1B7664EA8@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  result = *a1;
  a2[1] = *a1;
  a2[2].n128_u64[0] = 0;
  a2[2].n128_u64[1] = 0;
  return result;
}

uint64_t sub_1B7664EBC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  *a1 = v2;
  a1[1] = v3;
  return sub_1B765DF08(v2, v3);
}

id sub_1B7664EC8(uint64_t a1)
{
  int64_t v1;
  uint64_t v3;
  int v4;
  id v5;
  void *v6;
  id v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1B7665D88(0, v1, 0);
    v3 = sub_1B7665F10(a1);
    if (v3 < 0 || v3 >= 1 << *(_BYTE *)(a1 + 32))
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a1 + 56 + (((unint64_t)v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    {
      if (*(_DWORD *)(a1 + 36) == v4)
        __asm { BR              X9 }
LABEL_10:
      __break(1u);
      JUMPOUT(0x1B7665160);
    }
    __break(1u);
    goto LABEL_10;
  }
  v5 = objc_allocWithZone(MEMORY[0x1E0C99D20]);
  v6 = (void *)sub_1B76DBB64();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_initWithArray_, v6);

  return v7;
}

uint64_t sub_1B7665174(uint64_t a1)
{
  return sub_1B7665574(a1, (void (*)(uint64_t, unint64_t))sub_1B765DF08, 0xD000000000000010, 0x80000001B76E2790, (void (*)(uint64_t, unint64_t))sub_1B765DF1C);
}

uint64_t sub_1B76651A0(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  int64_t v5;
  int v6;
  int v7;
  char v8;
  char v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = a1;
    v32 = MEMORY[0x1E0DEE9D8];
    sub_1B7665D88(0, v1, 0);
    v3 = v32;
    result = sub_1B7665F10(v2);
    v5 = result;
    v7 = v6;
    v9 = v8 & 1;
    v28 = v2 + 56;
    v27 = v2;
    while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(_BYTE *)(v2 + 32))
    {
      if (((*(_QWORD *)(v28 + (((unint64_t)v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
        goto LABEL_17;
      if (*(_DWORD *)(v2 + 36) != v7)
        goto LABEL_18;
      v29 = v9;
      v10 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 32 * v5);
      v11 = v10[1];
      v12 = v10[2];
      v13 = v10[3];
      v14 = objc_allocWithZone(MEMORY[0x1E0C99E08]);
      swift_bridgeObjectRetain();
      sub_1B765DF08(v12, v13);
      v15 = objc_msgSend(v14, sel_init);
      if (v11)
      {
        v16 = (void *)sub_1B76DBAB0();
        *(_QWORD *)&v30 = 0x6E69616D6F64;
        *((_QWORD *)&v30 + 1) = 0xE600000000000000;
        objc_msgSend(v15, sel___swift_setObject_forKeyedSubscript_, v16, sub_1B76DBEE8());

        swift_unknownObjectRelease();
      }
      if (v13 >> 60 != 15)
      {
        sub_1B765DF7C(0, &qword_1ED53B5E8);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177830);
        v17 = swift_allocObject();
        *(_OWORD *)(v17 + 16) = xmmword_1B76DCB70;
        *(_QWORD *)(v17 + 32) = 1635017060;
        *(_QWORD *)(v17 + 40) = 0xE400000000000000;
        *(_QWORD *)(v17 + 88) = MEMORY[0x1E0CB0338];
        *(_QWORD *)(v17 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v17 + 64) = v12;
        *(_QWORD *)(v17 + 72) = v13;
        sub_1B765DF08(v12, v13);
        sub_1B765DDFC(v12, v13);
        v18 = (void *)sub_1B76DBC78();
        v19 = (void *)sub_1B76DBC6C();

        *(_QWORD *)&v30 = 0x6E656B6F74;
        *((_QWORD *)&v30 + 1) = 0xE500000000000000;
        objc_msgSend(v15, sel___swift_setObject_forKeyedSubscript_, v19, sub_1B76DBEE8());
        sub_1B765DF1C(v12, v13);

        swift_unknownObjectRelease();
      }
      v31 = sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
      swift_bridgeObjectRelease();
      sub_1B765DF1C(v12, v13);
      *(_QWORD *)&v30 = v15;
      v32 = v3;
      v21 = *(_QWORD *)(v3 + 16);
      v20 = *(_QWORD *)(v3 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_1B7665D88(v20 > 1, v21 + 1, 1);
        v3 = v32;
      }
      *(_QWORD *)(v3 + 16) = v21 + 1;
      sub_1B765DF30(&v30, (_OWORD *)(v3 + 32 * v21 + 32));
      v2 = v27;
      result = sub_1B7665FB0(v5, v7, v29 & 1, v27);
      v5 = result;
      v7 = v22;
      v9 = v23 & 1;
      if (!--v1)
      {
        sub_1B7666B58(result, v22, v9);
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
  }
  else
  {
LABEL_15:
    v24 = objc_allocWithZone(MEMORY[0x1E0C99D20]);
    v25 = (void *)sub_1B76DBB64();
    swift_bridgeObjectRelease();
    v26 = objc_msgSend(v24, sel_initWithArray_, v25);

    return (uint64_t)v26;
  }
  return result;
}

uint64_t sub_1B7665548(uint64_t a1)
{
  return sub_1B7665574(a1, (void (*)(uint64_t, unint64_t))sub_1B765E0D4, 0x696669746E656469, 0xEA00000000007265, (void (*)(uint64_t, unint64_t))sub_1B765E0D8);
}

uint64_t sub_1B7665574(uint64_t a1, void (*a2)(uint64_t, unint64_t), uint64_t a3, uint64_t a4, void (*a5)(uint64_t, unint64_t))
{
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  int64_t v9;
  int v10;
  int v11;
  char v12;
  char v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char v27;
  id v28;
  void *v29;
  id v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  char v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;

  *(_QWORD *)&v31 = a3;
  *((_QWORD *)&v31 + 1) = a4;
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v6 = a1;
    v40 = MEMORY[0x1E0DEE9D8];
    sub_1B7665D88(0, v5, 0);
    v7 = v40;
    result = sub_1B7665F10(v6);
    v9 = result;
    v11 = v10;
    v13 = v12 & 1;
    v33 = v6 + 56;
    v32 = v6;
    while ((v9 & 0x8000000000000000) == 0 && v9 < 1 << *(_BYTE *)(v6 + 32))
    {
      if (((*(_QWORD *)(v33 + (((unint64_t)v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_17;
      if (*(_DWORD *)(v6 + 36) != v11)
        goto LABEL_18;
      v36 = v13;
      v37 = v7;
      v14 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 48 * v9);
      v15 = v14[1];
      v16 = v14[2];
      v17 = v14[3];
      v18 = objc_allocWithZone(MEMORY[0x1E0C99E08]);
      swift_bridgeObjectRetain();
      a2(v16, v17);
      swift_bridgeObjectRetain();
      v19 = objc_msgSend(v18, sel_init);
      if (v15)
      {
        v20 = (void *)sub_1B76DBAB0();
        v38 = v31;
        objc_msgSend(v19, sel___swift_setObject_forKeyedSubscript_, v20, sub_1B76DBEE8());

        swift_unknownObjectRelease();
      }
      if (v17 >> 60 != 15)
      {
        sub_1B765DF7C(0, &qword_1ED53B5E8);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177830);
        v21 = swift_allocObject();
        *(_OWORD *)(v21 + 16) = xmmword_1B76DCB70;
        *(_QWORD *)(v21 + 32) = 1635017060;
        *(_QWORD *)(v21 + 40) = 0xE400000000000000;
        *(_QWORD *)(v21 + 88) = MEMORY[0x1E0CB0338];
        *(_QWORD *)(v21 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v21 + 64) = v16;
        *(_QWORD *)(v21 + 72) = v17;
        a2(v16, v17);
        sub_1B765DDFC(v16, v17);
        v22 = (void *)sub_1B76DBC78();
        v23 = (void *)sub_1B76DBC6C();

        *(_QWORD *)&v38 = 0x6E656B6F74;
        *((_QWORD *)&v38 + 1) = 0xE500000000000000;
        objc_msgSend(v19, sel___swift_setObject_forKeyedSubscript_, v23, sub_1B76DBEE8());
        a5(v16, v17);

        swift_unknownObjectRelease();
      }
      v39 = sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
      swift_bridgeObjectRelease();
      a5(v16, v17);
      swift_bridgeObjectRelease();
      *(_QWORD *)&v38 = v19;
      v7 = v37;
      v40 = v37;
      v25 = *(_QWORD *)(v37 + 16);
      v24 = *(_QWORD *)(v37 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_1B7665D88(v24 > 1, v25 + 1, 1);
        v7 = v40;
      }
      *(_QWORD *)(v7 + 16) = v25 + 1;
      sub_1B765DF30(&v38, (_OWORD *)(v7 + 32 * v25 + 32));
      v6 = v32;
      result = sub_1B7665FB0(v9, v11, v36 & 1, v32);
      v9 = result;
      v11 = v26;
      v13 = v27 & 1;
      if (!--v5)
      {
        sub_1B7666B58(result, v26, v13);
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
  }
  else
  {
LABEL_15:
    v28 = objc_allocWithZone(MEMORY[0x1E0C99D20]);
    v29 = (void *)sub_1B76DBB64();
    swift_bridgeObjectRelease();
    v30 = objc_msgSend(v28, sel_initWithArray_, v29);

    return (uint64_t)v30;
  }
  return result;
}

uint64_t sub_1B7665948(uint64_t a1)
{
  int64_t v1;
  uint64_t v3;
  uint64_t result;
  int64_t v5;
  int v6;
  int v7;
  char v8;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  void *v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  id v20;
  void *v21;
  id v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v25 = MEMORY[0x1E0DEE9D8];
    sub_1B7665D88(0, v1, 0);
    v3 = v25;
    result = sub_1B7665F10(a1);
    v5 = result;
    v7 = v6;
    v9 = v8 & 1;
    while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(_BYTE *)(a1 + 32))
    {
      if (((*(_QWORD *)(a1 + 56 + (((unint64_t)v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
        goto LABEL_13;
      if (*(_DWORD *)(a1 + 36) != v7)
        goto LABEL_14;
      v10 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v5);
      v11 = *v10;
      v12 = v10[1];
      v13 = objc_allocWithZone(MEMORY[0x1E0C99D50]);
      sub_1B765DDFC(v11, v12);
      v14 = (void *)sub_1B76DB81C();
      v15 = objc_msgSend(v13, sel_initWithData_, v14);

      v24 = sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
      sub_1B765DEC4(v11, v12);
      *(_QWORD *)&v23 = v15;
      v25 = v3;
      v17 = *(_QWORD *)(v3 + 16);
      v16 = *(_QWORD *)(v3 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1B7665D88(v16 > 1, v17 + 1, 1);
        v3 = v25;
      }
      *(_QWORD *)(v3 + 16) = v17 + 1;
      sub_1B765DF30(&v23, (_OWORD *)(v3 + 32 * v17 + 32));
      result = sub_1B7665FB0(v5, v7, v9 & 1, a1);
      v5 = result;
      v7 = v18;
      v9 = v19 & 1;
      if (!--v1)
      {
        sub_1B7666B58(result, v18, v19 & 1);
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  else
  {
LABEL_11:
    v20 = objc_allocWithZone(MEMORY[0x1E0C99D20]);
    v21 = (void *)sub_1B76DBB64();
    swift_bridgeObjectRelease();
    v22 = objc_msgSend(v20, sel_initWithArray_, v21);

    return (uint64_t)v22;
  }
  return result;
}

uint64_t sub_1B7665B70(uint64_t a1)
{
  int64_t v1;
  uint64_t v3;
  uint64_t result;
  int64_t v5;
  int v6;
  int v7;
  char v8;
  char v9;
  id v10;
  void *v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  id v17;
  void *v18;
  id v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v22 = MEMORY[0x1E0DEE9D8];
    sub_1B7665D88(0, v1, 0);
    v3 = v22;
    result = sub_1B7665F10(a1);
    v5 = result;
    v7 = v6;
    v9 = v8 & 1;
    while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(_BYTE *)(a1 + 32))
    {
      if (((*(_QWORD *)(a1 + 56 + (((unint64_t)v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
        goto LABEL_13;
      if (*(_DWORD *)(a1 + 36) != v7)
        goto LABEL_14;
      v10 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
      swift_bridgeObjectRetain();
      v11 = (void *)sub_1B76DBAB0();
      v12 = objc_msgSend(v10, sel_initWithString_, v11);

      v21 = sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
      swift_bridgeObjectRelease();
      *(_QWORD *)&v20 = v12;
      v22 = v3;
      v14 = *(_QWORD *)(v3 + 16);
      v13 = *(_QWORD *)(v3 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1B7665D88(v13 > 1, v14 + 1, 1);
        v3 = v22;
      }
      *(_QWORD *)(v3 + 16) = v14 + 1;
      sub_1B765DF30(&v20, (_OWORD *)(v3 + 32 * v14 + 32));
      result = sub_1B7665FB0(v5, v7, v9 & 1, a1);
      v5 = result;
      v7 = v15;
      v9 = v16 & 1;
      if (!--v1)
      {
        sub_1B7666B58(result, v15, v16 & 1);
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  else
  {
LABEL_11:
    v17 = objc_allocWithZone(MEMORY[0x1E0C99D20]);
    v18 = (void *)sub_1B76DBB64();
    swift_bridgeObjectRelease();
    v19 = objc_msgSend(v17, sel_initWithArray_, v18);

    return (uint64_t)v19;
  }
  return result;
}

uint64_t sub_1B7665D88(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1B7665DA4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1B7665DA4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1775E8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1B76DBE58();
  __break(1u);
  return result;
}

uint64_t sub_1B7665F10(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

int64_t sub_1B7665FB0(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t _s15ManagedSettings11ApplicationV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t result;
  char v15;
  char v16;

  v3 = a1[1];
  v4 = a1[2];
  v6 = a1[3];
  v5 = a1[4];
  v7 = a1[5];
  v8 = a2[1];
  v9 = a2[2];
  v11 = a2[3];
  v10 = a2[4];
  v12 = a2[5];
  if (!v3)
  {
    if (v8)
      return 0;
    goto LABEL_8;
  }
  if (!v8)
    return 0;
  if (*a1 == *a2 && v3 == v8 || (v13 = sub_1B76DBED0(), result = 0, (v13 & 1) != 0))
  {
LABEL_8:
    if (v6 >> 60 == 15)
    {
      if (v11 >> 60 == 15)
      {
LABEL_14:
        if (v7)
        {
          if (v12 && (v5 == v10 && v7 == v12 || (sub_1B76DBED0() & 1) != 0))
            return 1;
        }
        else if (!v12)
        {
          return 1;
        }
        return 0;
      }
    }
    else if (v11 >> 60 != 15)
    {
      sub_1B765DF08(v4, v6);
      sub_1B765DF08(v9, v11);
      sub_1B766B5F0(v4, v6);
      v16 = v15;
      sub_1B765DF1C(v9, v11);
      sub_1B765DF1C(v4, v6);
      if ((v16 & 1) == 0)
        return 0;
      goto LABEL_14;
    }
    sub_1B765DF08(v4, v6);
    sub_1B765DF08(v9, v11);
    sub_1B765DF1C(v4, v6);
    sub_1B765DF1C(v9, v11);
    return 0;
  }
  return result;
}

uint64_t sub_1B7666210(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v15[4];
  _BYTE v16[8];
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;

  if (*a2 != -1)
    swift_once();
  sub_1B76638C0(a3, (uint64_t)v16, &qword_1ED53B420);
  v7 = *v3;
  v6 = v3[1];
  v9 = v3[2];
  v8 = v3[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (a1)
  {
    swift_bridgeObjectRetain();
    v10 = (void *)sub_1B7665574(a1, (void (*)(uint64_t, unint64_t))sub_1B765DF08, 0xD000000000000010, 0x80000001B76E2790, (void (*)(uint64_t, unint64_t))sub_1B765DF1C);
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
  }
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    v11 = v17;
    v12 = v18;
    v15[0] = v7;
    v15[1] = v6;
    v15[2] = v9;
    v15[3] = v8;
    v13 = v19;
    swift_retain();
    sub_1B765ED7C(v10, v11, v12, v15, v13);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  return sub_1B765DE88((uint64_t)v16, &qword_1ED53B420);
}

unint64_t sub_1B76663AC()
{
  unint64_t result;

  result = qword_1ED53B378;
  if (!qword_1ED53B378)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for Application, &type metadata for Application);
    atomic_store(result, (unint64_t *)&qword_1ED53B378);
  }
  return result;
}

unint64_t sub_1B76663F4()
{
  unint64_t result;

  result = qword_1EF177810;
  if (!qword_1EF177810)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for ApplicationSettings.Name, &type metadata for ApplicationSettings.Name);
    atomic_store(result, (unint64_t *)&qword_1EF177810);
  }
  return result;
}

unint64_t sub_1B766643C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF177818;
  if (!qword_1EF177818)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF177820);
    result = MEMORY[0x1BCCA94E8](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF177818);
  }
  return result;
}

uint64_t sub_1B7666488@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B7664894(a1, &qword_1EF177170, (uint64_t)&xmmword_1EF177600, a2);
}

uint64_t sub_1B76664B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &qword_1EF177170, (uint64_t)&xmmword_1EF177600);
}

uint64_t sub_1B76664D0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF177178, (uint64_t)&byte_1EF177658, a2);
}

uint64_t sub_1B76664FC(unsigned __int8 *a1)
{
  return ApplicationSettings.denyAppClips.setter(*a1);
}

uint64_t sub_1B7666520@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF177180, (uint64_t)&byte_1EF1776B0, a2);
}

uint64_t sub_1B766654C(unsigned __int8 *a1)
{
  return ApplicationSettings.denyAppInstallation.setter(*a1);
}

uint64_t sub_1B7666570@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF177188, (uint64_t)&byte_1EF177708, a2);
}

uint64_t sub_1B766659C(unsigned __int8 *a1)
{
  return ApplicationSettings.denyAppRemoval.setter(*a1);
}

uint64_t sub_1B76665C0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF177190, (uint64_t)&byte_1EF177760, a2);
}

uint64_t sub_1B76665EC(unsigned __int8 *a1)
{
  return ApplicationSettings.denyBackgroundAppRefresh.setter(*a1);
}

uint64_t sub_1B7666610@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B7664894(a1, &qword_1EF177198, (uint64_t)&xmmword_1EF1777B8, a2);
}

uint64_t sub_1B766663C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &qword_1EF177198, (uint64_t)&xmmword_1EF1777B8);
}

uint64_t keypath_setTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6)
{
  uint64_t v8;

  v8 = swift_bridgeObjectRetain();
  sub_1B7666210(v8, a5, a6);
  return swift_bridgeObjectRelease();
}

uint64_t destroy for Application(uint64_t a1)
{
  unint64_t v2;

  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >> 60 != 15)
    sub_1B765DEC4(*(_QWORD *)(a1 + 16), v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Application(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  _OWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2 + 2;
  v6 = a2[3];
  swift_bridgeObjectRetain();
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *v5;
  }
  else
  {
    v7 = *(_QWORD *)v5;
    sub_1B765DDFC(v7, v6);
    *(_QWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 24) = v6;
  }
  v8 = a2[5];
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for Application(_QWORD *a1, _QWORD *a2)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2 + 2;
  v5 = a2[3];
  if (a1[3] >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      v7 = *v4;
      sub_1B765DDFC(*v4, a2[3]);
      v8 = a1[2];
      v9 = a1[3];
      a1[2] = v7;
      a1[3] = v5;
      sub_1B765DEC4(v8, v9);
      goto LABEL_8;
    }
    sub_1B765DE88((uint64_t)(a1 + 2), &qword_1EF177828);
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 1) = *(_OWORD *)v4;
    goto LABEL_8;
  }
  v6 = *v4;
  sub_1B765DDFC(*v4, a2[3]);
  a1[2] = v6;
  a1[3] = v5;
LABEL_8:
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *assignWithTake for Application(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2 + 2;
  v6 = a1[3];
  if (v6 >> 60 != 15)
  {
    v7 = a2[3];
    if (v7 >> 60 != 15)
    {
      v8 = a1[2];
      a1[2] = *v5;
      a1[3] = v7;
      sub_1B765DEC4(v8, v6);
      goto LABEL_6;
    }
    sub_1B765DE88((uint64_t)(a1 + 2), &qword_1EF177828);
  }
  *((_OWORD *)a1 + 1) = *(_OWORD *)v5;
LABEL_6:
  v9 = a2[5];
  a1[4] = a2[4];
  a1[5] = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Application(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Application(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for Application()
{
  return &type metadata for Application;
}

ValueMetadata *type metadata accessor for ApplicationSettings()
{
  return &type metadata for ApplicationSettings;
}

uint64_t getEnumTagSinglePayload for ApplicationSettings.Name(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ApplicationSettings.Name(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1B7666AD0 + 4 * byte_1B76DCBDB[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1B7666B04 + 4 * byte_1B76DCBD6[v4]))();
}

uint64_t sub_1B7666B04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B7666B0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B7666B14);
  return result;
}

uint64_t sub_1B7666B20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B7666B28);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1B7666B2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B7666B34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1B7666B40(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ApplicationSettings.Name()
{
  return &type metadata for ApplicationSettings.Name;
}

uint64_t sub_1B7666B58(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t NotificationSettings.Name.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1B76DBE70();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void *static NotificationSettings.Name.allCases.getter()
{
  return &unk_1E6CAC750;
}

unint64_t NotificationSettings.Name.rawValue.getter()
{
  return 0xD000000000000023;
}

uint64_t sub_1B7666BE8()
{
  return 1;
}

uint64_t sub_1B7666BF0()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  return sub_1B76DBF78();
}

uint64_t sub_1B7666C44()
{
  return sub_1B76DBB1C();
}

uint64_t sub_1B7666C60()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  return sub_1B76DBF78();
}

uint64_t sub_1B7666CB0@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1B76DBE70();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1B7666D00(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000023;
  a1[1] = 0x80000001B76E13E0;
}

void sub_1B7666D20(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6CAC878;
}

uint64_t NotificationSettings.lockDriverDoNotDisturb.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v0;
  v1 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  if (qword_1EF1771A0 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = sub_1B76584AC((uint64_t)&byte_1EF177838, v2, v1, v4, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1B7666DC4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  v7 = qword_1EF1771A0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_1B76584AC((uint64_t)&byte_1EF177838, v4, v3, v6, v5);
  swift_bridgeObjectRelease_n();
  result = swift_bridgeObjectRelease_n();
  *a2 = v8;
  return result;
}

uint64_t NotificationSettings.lockDriverDoNotDisturb.setter(unsigned __int8 a1)
{
  uint64_t *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v14[4];
  _BYTE v15[8];
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;

  v2 = a1;
  if (qword_1EF1771A0 != -1)
    swift_once();
  sub_1B765A668((uint64_t)&byte_1EF177838, (uint64_t)v15);
  v4 = *v1;
  v3 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (v2 == 2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = 0;
  }
  else
  {
    v8 = v2 & 1;
    v9 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = objc_msgSend(v9, sel_initWithBool_, v8);
  }
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    v10 = v16;
    v11 = v17;
    v14[0] = v4;
    v14[1] = v3;
    v14[2] = v6;
    v14[3] = v5;
    v12 = v18;
    swift_retain();
    sub_1B765ED7C(v7, v10, v11, v14, v12);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  return sub_1B76671D4((uint64_t)v15);
}

uint64_t (*NotificationSettings.lockDriverDoNotDisturb.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF1771A0 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF177838, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B76670B4;
}

uint64_t sub_1B76670B4(uint64_t a1)
{
  return NotificationSettings.lockDriverDoNotDisturb.setter(*(_BYTE *)(a1 + 8));
}

uint64_t NotificationSettings.effectiveLockDriverDoNotDisturb.getter()
{
  if (qword_1EF1771A0 != -1)
    swift_once();
  return sub_1B7659CC4(&byte_1EF177838);
}

uint64_t sub_1B7667118()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF177868 = result;
  unk_1EF177870 = &off_1E6CB07B8;
  byte_1EF177850 = 0;
  byte_1EF177838 = 0;
  qword_1EF177840 = 0xD000000000000023;
  unk_1EF177848 = 0x80000001B76E13E0;
  word_1EF177878 = 256;
  byte_1EF17787A = 0;
  qword_1EF177880 = 0;
  byte_1EF177888 = 1;
  return result;
}

uint64_t static NotificationSettings.lockDriverDoNotDisturb.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EF1771A0 != -1)
    swift_once();
  return sub_1B765A668((uint64_t)&byte_1EF177838, a1);
}

uint64_t sub_1B76671D4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177448);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1B7667218()
{
  unint64_t result;

  result = qword_1EF177890;
  if (!qword_1EF177890)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for NotificationSettings.Name, &type metadata for NotificationSettings.Name);
    atomic_store(result, (unint64_t *)&qword_1EF177890);
  }
  return result;
}

unint64_t sub_1B7667260()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF177898;
  if (!qword_1EF177898)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1778A0);
    result = MEMORY[0x1BCCA94E8](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF177898);
  }
  return result;
}

uint64_t sub_1B76672B0(unsigned __int8 *a1)
{
  return NotificationSettings.lockDriverDoNotDisturb.setter(*a1);
}

ValueMetadata *type metadata accessor for NotificationSettings()
{
  return &type metadata for NotificationSettings;
}

uint64_t getEnumTagSinglePayload for NotificationSettings.Name(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for NotificationSettings.Name(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B7667378 + 4 * asc_1B76DCDB0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B7667398 + 4 * byte_1B76DCDB5[v4]))();
}

_BYTE *sub_1B7667378(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B7667398(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B76673A0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B76673A8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B76673B0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B76673B8(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1B76673C4()
{
  return 0;
}

ValueMetadata *type metadata accessor for NotificationSettings.Name()
{
  return &type metadata for NotificationSettings.Name;
}

uint64_t sub_1B76673DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  uint64_t result;
  _QWORD v17[5];

  v0 = sub_1B76DB7C8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0, v2);
  v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B76DB804();
  v6 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x1E0C80A78](v5, v7);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8, v11);
  v13 = (char *)v17 - v12;
  type metadata accessor for EffectivePersistence();
  v14 = swift_allocObject();
  swift_beginAccess();
  if (byte_1ED53B740 != 2)
  {
    if ((byte_1ED53B740 & 1) == 0)
      goto LABEL_3;
LABEL_5:
    Locations.effectiveSettingsDirectory.getter((uint64_t)v10);
    v17[0] = 0xD000000000000017;
    v17[1] = 0x80000001B76E2800;
    (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v4, *MEMORY[0x1E0CAFD68], v0);
    sub_1B76680BC();
    sub_1B76DB7F8();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
    result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(v14 + OBJC_IVAR____TtC15ManagedSettings20EffectivePersistence_effectiveSettingsURL, v13, v5);
    goto LABEL_6;
  }
  v17[3] = &type metadata for Feature.FeatureFlags;
  v17[4] = sub_1B7658114();
  v15 = sub_1B76DB894();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
  if ((v15 & 1) != 0)
    goto LABEL_5;
LABEL_3:
  result = swift_deallocPartialClassInstance();
  v14 = 0;
LABEL_6:
  qword_1EF1778A8 = v14;
  return result;
}

uint64_t static EffectivePersistence.shared.getter()
{
  if (qword_1EF1771A8 != -1)
    swift_once();
  swift_beginAccess();
  return swift_retain();
}

uint64_t static EffectivePersistence.shared.setter(uint64_t a1)
{
  if (qword_1EF1771A8 != -1)
    swift_once();
  swift_beginAccess();
  qword_1EF1778A8 = a1;
  return swift_release();
}

uint64_t (*static EffectivePersistence.shared.modify())()
{
  if (qword_1EF1771A8 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t EffectivePersistence.effectiveSettingsURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15ManagedSettings20EffectivePersistence_effectiveSettingsURL;
  v4 = sub_1B76DB804();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void *sub_1B7667778(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  void *v21;
  id v22;
  uint64_t v26;

  v3 = sub_1B76DB804();
  MEMORY[0x1E0C80A78](v3, v4);
  v5 = sub_1B76DB72C();
  MEMORY[0x1E0C80A78](v5, v6);
  if ((sub_1B76628CC(v2 + OBJC_IVAR____TtC15ManagedSettings20EffectivePersistence_effectiveSettingsURL) & 1) != 0)
  {
    v7 = sub_1B765E41C(MEMORY[0x1E0DEE9D8]);
  }
  else
  {
    v8 = sub_1B76DB810();
    v10 = v9;
    v7 = sub_1B7662D14();
    sub_1B765DEC4(v8, v10);
  }
  if (qword_1ED53C0C0 != -1)
    swift_once();
  v11 = sub_1B76DB8B8();
  __swift_project_value_buffer(v11, (uint64_t)qword_1ED53B750);
  swift_bridgeObjectRetain_n();
  v12 = sub_1B76DB8A0();
  v13 = sub_1B76DBC84();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v26 = v15;
    *(_DWORD *)v14 = 136446210;
    sub_1B7668080();
    swift_bridgeObjectRetain();
    v16 = sub_1B76DBA38();
    v18 = v17;
    swift_bridgeObjectRelease();
    sub_1B7669B50(v16, v18, &v26);
    sub_1B76DBD38();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B7656000, v12, v13, "effective settings = %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCA9590](v15, -1, -1);
    MEMORY[0x1BCCA9590](v14, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (*(_QWORD *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    v19 = sub_1B76606E0(a1, a2);
    if ((v20 & 1) != 0)
    {
      v21 = *(void **)(*(_QWORD *)(v7 + 56) + 8 * v19);
      v22 = v21;
    }
    else
    {
      v21 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v21 = 0;
  }
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t EffectivePersistence.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC15ManagedSettings20EffectivePersistence_effectiveSettingsURL;
  v2 = sub_1B76DB804();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t EffectivePersistence.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC15ManagedSettings20EffectivePersistence_effectiveSettingsURL;
  v2 = sub_1B76DB804();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1B7667F7C()
{
  return type metadata accessor for EffectivePersistence();
}

uint64_t type metadata accessor for EffectivePersistence()
{
  uint64_t result;

  result = qword_1EF1778B0;
  if (!qword_1EF1778B0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1B7667FC0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B76DB804();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for EffectivePersistence()
{
  return swift_lookUpClassMethod();
}

unint64_t sub_1B7668038()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED53B370;
  if (!qword_1ED53B370)
  {
    v1 = sub_1B76DB72C();
    result = MEMORY[0x1BCCA94E8](MEMORY[0x1E0CADE18], v1);
    atomic_store(result, (unint64_t *)&qword_1ED53B370);
  }
  return result;
}

unint64_t sub_1B7668080()
{
  unint64_t result;

  result = qword_1ED53B440;
  if (!qword_1ED53B440)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED53B440);
  }
  return result;
}

unint64_t sub_1B76680BC()
{
  unint64_t result;

  result = qword_1ED53AFE0;
  if (!qword_1ED53AFE0)
  {
    result = MEMORY[0x1BCCA94E8](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED53AFE0);
  }
  return result;
}

uint64_t sub_1B7668100(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v3 = v2;
  v6 = sub_1B76DBCCC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  sub_1B76DBCD8();

  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  sub_1B7668538();
  swift_retain();
  v13 = sub_1B76DB9CC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  *(_QWORD *)(v3 + 24) = v13;
  return swift_release();
}

uint64_t sub_1B7668220(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint8_t *v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t (*v23)(void);
  uint64_t v24;
  uint64_t v25;

  v4 = sub_1B76DB750();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED53C0C0 != -1)
    swift_once();
  v9 = sub_1B76DB8B8();
  __swift_project_value_buffer(v9, (uint64_t)qword_1ED53B750);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  v10 = sub_1B76DB8A0();
  v11 = sub_1B76DBC84();
  if (os_log_type_enabled(v10, v11))
  {
    v23 = a2;
    v12 = (uint8_t *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    v25 = v22;
    *(_DWORD *)v12 = 136446210;
    v20 = v12 + 4;
    v21 = v12;
    v13 = (void *)sub_1B76DB744();
    v14 = sub_1B76DBAD4();
    v16 = v15;

    v24 = sub_1B7669B50(v14, v16, &v25);
    sub_1B76DBD38();
    a2 = v23;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    v17 = v21;
    _os_log_impl(&dword_1B7656000, v10, v11, "Received notification %{public}s", v21, 0xCu);
    v18 = v22;
    swift_arrayDestroy();
    MEMORY[0x1BCCA9590](v18, -1, -1);
    MEMORY[0x1BCCA9590](v17, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }

  return a2();
}

uint64_t sub_1B7668448()
{
  uint64_t v0;

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NotificationCenterReceiver()
{
  return objc_opt_self();
}

id sub_1B7668494()
{
  uint64_t v0;

  return *(id *)(*(_QWORD *)v0 + 16);
}

uint64_t sub_1B76684A0(uint64_t a1, uint64_t a2)
{
  return sub_1B7668100(a1, a2);
}

uint64_t sub_1B76684C0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;

  v1 = *v0;
  if (*(_QWORD *)(*v0 + 24))
  {
    swift_retain();
    sub_1B76DB93C();
    swift_release();
    *(_QWORD *)(v1 + 24) = 0;
    return swift_release();
  }
  return result;
}

uint64_t sub_1B766850C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B7668530(uint64_t a1)
{
  uint64_t v1;

  return sub_1B7668220(a1, *(uint64_t (**)(void))(v1 + 16));
}

unint64_t sub_1B7668538()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED53B0B8;
  if (!qword_1ED53B0B8)
  {
    v1 = sub_1B76DBCCC();
    result = MEMORY[0x1BCCA94E8](MEMORY[0x1E0CB1F20], v1);
    atomic_store(result, (unint64_t *)&qword_1ED53B0B8);
  }
  return result;
}

void sub_1B7668580(uint64_t a1)
{
  sub_1B76685A8(a1, (void **)&protocolRef__TtP15ManagedSettings25ShieldActionExtensionHost_, &qword_1EF1778C0);
}

void sub_1B7668594(uint64_t a1)
{
  sub_1B76685A8(a1, (void **)&protocolRef__TtP15ManagedSettings27ShieldActionExtensionVendor_, &qword_1EF1778C8);
}

void sub_1B76685A8(uint64_t a1, void **a2, _QWORD *a3)
{
  void *v4;
  void *v5;
  id v6;
  id v7;

  v4 = *a2;
  v5 = (void *)objc_opt_self();
  v6 = v4;
  v7 = objc_msgSend(v5, sel_interfaceWithProtocol_, v6);

  *a3 = v7;
}

id sub_1B7668648(uint64_t a1, uint64_t a2, _QWORD *a3, id *a4)
{
  if (*a3 != -1)
    swift_once();
  return *a4;
}

BOOL sub_1B7668684(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t _s15ManagedSettings15CombineOperatorV4BoolO9hashValueSivg_0()
{
  sub_1B76DBF54();
  sub_1B76DBF60();
  return sub_1B76DBF78();
}

uint64_t sub_1B76686E0()
{
  return sub_1B76DBF60();
}

uint64_t sub_1B7668708()
{
  sub_1B76DBF54();
  sub_1B76DBF60();
  return sub_1B76DBF78();
}

void *sub_1B7668758()
{
  char *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v1 = OBJC_IVAR____TtC15ManagedSettings28ShieldActionExtensionContext____lazy_storage___shieldActionDelegate;
  v2 = *(void **)&v0[OBJC_IVAR____TtC15ManagedSettings28ShieldActionExtensionContext____lazy_storage___shieldActionDelegate];
  v3 = v2;
  if (v2 == (void *)1)
  {
    if (objc_msgSend(v0, sel__principalObject))
    {
      type metadata accessor for ShieldActionDelegate();
      v3 = (void *)swift_dynamicCastClass();
      if (!v3)
        swift_unknownObjectRelease();
    }
    else
    {
      v3 = 0;
    }
    v4 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v3;
    v5 = v3;
    sub_1B7668F50(v4);
  }
  sub_1B7668F60(v2);
  return v3;
}

void sub_1B766881C(unsigned __int8 *a1, void (*a2)(id, _QWORD))
{
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, *a1);
  a2(v3, 0);

}

void sub_1B7668888(void *a1, int a2, uint64_t a3, void *a4, void *aBlock, void (*a6)(uint64_t, uint64_t, unint64_t, id, void *))
{
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;

  v10 = _Block_copy(aBlock);
  v11 = a4;
  v15 = a1;
  v12 = sub_1B76DB828();
  v14 = v13;

  _Block_copy(v10);
  a6(a3, v12, v14, v15, v10);
  _Block_release(v10);
  _Block_release(v10);
  sub_1B765DEC4(v12, v14);

}

id sub_1B7668984(uint64_t a1)
{
  char *v1;
  void *v2;
  id v3;
  objc_super v5;

  *(_QWORD *)&v1[OBJC_IVAR____TtC15ManagedSettings28ShieldActionExtensionContext____lazy_storage___shieldActionDelegate] = 1;
  if (a1)
  {
    v2 = (void *)sub_1B76DBB64();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = 0;
  }
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ShieldActionExtensionContext();
  v3 = objc_msgSendSuper2(&v5, sel_initWithInputItems_, v2);

  if (v3)
  return v3;
}

id sub_1B7668A60(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  objc_class *v14;
  id v15;
  id v16;
  objc_super v18;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ManagedSettings28ShieldActionExtensionContext____lazy_storage___shieldActionDelegate] = 1;
  if (a1)
  {
    v10 = (void *)sub_1B76DBB64();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
  }
  sub_1B7668F70(a2, (uint64_t)v9);
  v11 = sub_1B76DB888();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11) != 1)
  {
    v13 = (void *)sub_1B76DB870();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
  }
  v14 = (objc_class *)type metadata accessor for ShieldActionExtensionContext();
  v18.receiver = v3;
  v18.super_class = v14;
  v15 = objc_msgSendSuper2(&v18, sel_initWithInputItems_contextUUID_, v10, v13);

  v16 = v15;
  sub_1B7668FB8(a2);
  if (v16)

  return v16;
}

id sub_1B7668C98(uint64_t a1, void *a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  objc_class *v16;
  id v17;
  id v18;
  objc_super v20;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC15ManagedSettings28ShieldActionExtensionContext____lazy_storage___shieldActionDelegate] = 1;
  if (a1)
  {
    v12 = (void *)sub_1B76DBB64();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = 0;
  }
  sub_1B7668F70(a3, (uint64_t)v11);
  v13 = sub_1B76DB888();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1)
  {
    v15 = (void *)sub_1B76DB870();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
  }
  v16 = (objc_class *)type metadata accessor for ShieldActionExtensionContext();
  v20.receiver = v4;
  v20.super_class = v16;
  v17 = objc_msgSendSuper2(&v20, sel_initWithInputItems_listenerEndpoint_contextUUID_, v12, a2, v15);

  v18 = v17;
  sub_1B7668FB8(a3);
  if (v18)

  return v18;
}

id sub_1B7668EF0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ShieldActionExtensionContext();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ShieldActionExtensionContext()
{
  return objc_opt_self();
}

void sub_1B7668F50(id a1)
{
  if (a1 != (id)1)

}

id sub_1B7668F60(id result)
{
  if (result != (id)1)
    return result;
  return result;
}

uint64_t sub_1B7668F70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B7668FB8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1B7668FF8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void (**a5)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v9;
  _QWORD *v10;
  char v11;
  void *v12;
  _BYTE *v13;
  void *v14;
  uint64_t v15;
  void (*v16)(char *, _QWORD *, uint64_t (*)(), uint64_t);
  void *v17;
  _BYTE *v18;
  void *v19;
  _QWORD *v20;
  _QWORD v21[2];
  char v22;

  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a5;
  _Block_copy(a5);
  v10 = sub_1B7668758();
  if (!v10)
  {
    sub_1B76695E8();
    v12 = (void *)swift_allocError();
    *v13 = 0;
    v14 = (void *)sub_1B76DB798();
    ((void (**)(_QWORD, _QWORD, void *))a5)[2](a5, 0, v14);

LABEL_8:
    swift_release();
    return;
  }
  v20 = v10;
  if (a1 == 1)
  {
    v11 = 0;
    goto LABEL_7;
  }
  if (a1 == 2)
  {
    v11 = 1;
LABEL_7:
    v22 = v11;
    v21[0] = a2;
    v21[1] = a3;
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = sub_1B766977C;
    *(_QWORD *)(v15 + 24) = v9;
    v16 = *(void (**)(char *, _QWORD *, uint64_t (*)(), uint64_t))((*MEMORY[0x1E0DEEDD8] & *v20)
                                                                                     + 0x50);
    sub_1B765DDFC(a2, a3);
    swift_retain();
    v16(&v22, v21, sub_1B7669790, v15);
    swift_release();

    sub_1B765DEC4(a2, a3);
    goto LABEL_8;
  }
  sub_1B76695E8();
  v17 = (void *)swift_allocError();
  *v18 = 1;
  v19 = (void *)sub_1B76DB798();
  ((void (**)(_QWORD, _QWORD, void *))a5)[2](a5, 0, v19);

  swift_release();
}

void sub_1B76691E4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void (**a5)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v9;
  _QWORD *v10;
  char v11;
  void *v12;
  _BYTE *v13;
  void *v14;
  uint64_t v15;
  void (*v16)(char *, _QWORD *, void (*)(unsigned __int8 *), uint64_t);
  void *v17;
  _BYTE *v18;
  void *v19;
  _QWORD *v20;
  _QWORD v21[2];
  char v22;

  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a5;
  _Block_copy(a5);
  v10 = sub_1B7668758();
  if (!v10)
  {
    sub_1B76695E8();
    v12 = (void *)swift_allocError();
    *v13 = 0;
    v14 = (void *)sub_1B76DB798();
    ((void (**)(_QWORD, _QWORD, void *))a5)[2](a5, 0, v14);

LABEL_8:
    swift_release();
    return;
  }
  v20 = v10;
  if (a1 == 1)
  {
    v11 = 0;
    goto LABEL_7;
  }
  if (a1 == 2)
  {
    v11 = 1;
LABEL_7:
    v22 = v11;
    v21[0] = a2;
    v21[1] = a3;
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = sub_1B766977C;
    *(_QWORD *)(v15 + 24) = v9;
    v16 = *(void (**)(char *, _QWORD *, void (*)(unsigned __int8 *), uint64_t))((*MEMORY[0x1E0DEEDD8] & *v20) + 0x58);
    sub_1B765DDFC(a2, a3);
    swift_retain();
    v16(&v22, v21, sub_1B7669650, v15);
    swift_release();

    sub_1B765DEC4(a2, a3);
    goto LABEL_8;
  }
  sub_1B76695E8();
  v17 = (void *)swift_allocError();
  *v18 = 1;
  v19 = (void *)sub_1B76DB798();
  ((void (**)(_QWORD, _QWORD, void *))a5)[2](a5, 0, v19);

  swift_release();
}

void sub_1B76693D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void (**a5)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v9;
  _QWORD *v10;
  char v11;
  void *v12;
  _BYTE *v13;
  void *v14;
  uint64_t v15;
  void (*v16)(char *, _QWORD *, uint64_t (*)(), uint64_t);
  void *v17;
  _BYTE *v18;
  void *v19;
  _QWORD *v20;
  _QWORD v21[2];
  char v22;

  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a5;
  _Block_copy(a5);
  v10 = sub_1B7668758();
  if (!v10)
  {
    sub_1B76695E8();
    v12 = (void *)swift_allocError();
    *v13 = 0;
    v14 = (void *)sub_1B76DB798();
    ((void (**)(_QWORD, _QWORD, void *))a5)[2](a5, 0, v14);

LABEL_8:
    swift_release();
    return;
  }
  v20 = v10;
  if (a1 == 1)
  {
    v11 = 0;
    goto LABEL_7;
  }
  if (a1 == 2)
  {
    v11 = 1;
LABEL_7:
    v22 = v11;
    v21[0] = a2;
    v21[1] = a3;
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = sub_1B76695E0;
    *(_QWORD *)(v15 + 24) = v9;
    v16 = *(void (**)(char *, _QWORD *, uint64_t (*)(), uint64_t))((*MEMORY[0x1E0DEEDD8] & *v20)
                                                                                     + 0x60);
    sub_1B765DDFC(a2, a3);
    swift_retain();
    v16(&v22, v21, sub_1B7669790, v15);
    swift_release();

    sub_1B765DEC4(a2, a3);
    goto LABEL_8;
  }
  sub_1B76695E8();
  v17 = (void *)swift_allocError();
  *v18 = 1;
  v19 = (void *)sub_1B76DB798();
  ((void (**)(_QWORD, _QWORD, void *))a5)[2](a5, 0, v19);

  swift_release();
}

uint64_t sub_1B76695BC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1B76695E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1B76D6B70(a1, a2, *(_QWORD *)(v2 + 16));
}

unint64_t sub_1B76695E8()
{
  unint64_t result;

  result = qword_1EF1778D8;
  if (!qword_1EF1778D8)
  {
    result = MEMORY[0x1BCCA94E8](&unk_1B76DCFF4, &type metadata for ShieldActionExtensionContext.ExtensionError);
    atomic_store(result, (unint64_t *)&qword_1EF1778D8);
  }
  return result;
}

uint64_t sub_1B766962C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1B7669650(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_1B766881C(a1, *(void (**)(id, _QWORD))(v1 + 16));
}

uint64_t storeEnumTagSinglePayload for ShieldActionExtensionContext.ExtensionError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B76696B4 + 4 * byte_1B76DCF55[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B76696E8 + 4 * byte_1B76DCF50[v4]))();
}

uint64_t sub_1B76696E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76696F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B76696F8);
  return result;
}

uint64_t sub_1B7669704(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B766970CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B7669710(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B7669718(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ShieldActionExtensionContext.ExtensionError()
{
  return &type metadata for ShieldActionExtensionContext.ExtensionError;
}

unint64_t sub_1B7669738()
{
  unint64_t result;

  result = qword_1EF1778E0;
  if (!qword_1EF1778E0)
  {
    result = MEMORY[0x1BCCA94E8](&unk_1B76DCFCC, &type metadata for ShieldActionExtensionContext.ExtensionError);
    atomic_store(result, (unint64_t *)&qword_1EF1778E0);
  }
  return result;
}

ManagedSettings::OverrideSettingsResponse_optional __swiftcall OverrideSettingsResponse.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (ManagedSettings::OverrideSettingsResponse_optional)rawValue;
}

uint64_t OverrideSettingsResponse.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

_QWORD *sub_1B76697B8@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

void sub_1B76697D8(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t sub_1B766982C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t (*a5)(uint64_t *))
{
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  if (qword_1EF177218 != -1)
    swift_once();
  v10 = sub_1B76DB8B8();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EF177E00);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v11 = sub_1B76DB8A0();
  v12 = sub_1B76DBCA8();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    v16 = v14;
    *(_DWORD *)v13 = 136446466;
    swift_bridgeObjectRetain();
    sub_1B7669B50(a1, a2, &v16);
    sub_1B76DBD38();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v13 + 12) = 2082;
    swift_bridgeObjectRetain();
    sub_1B7669B50(a3, a4, &v16);
    sub_1B76DBD38();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1B7656000, v11, v12, "Ask to override unremovability of application with bundle identifier: %{public}s team identifier: %{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCA9590](v14, -1, -1);
    MEMORY[0x1BCCA9590](v13, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  LOBYTE(v16) = 0;
  return a5(&v16);
}

id OverrideSettingsHandler.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id OverrideSettingsHandler.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OverrideSettingsHandler();
  return objc_msgSendSuper2(&v2, sel_init);
}

id OverrideSettingsHandler.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OverrideSettingsHandler();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1B7669B18()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **v0) + 0x58))();
}

uint64_t sub_1B7669B50(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_1B7669C20(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1B765DF40((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1B765DF40((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_1B7669C20(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1B76DBD44();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1B7669DD8(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_1B76DBDD4();
  if (!v8)
  {
    sub_1B76DBE1C();
    __break(1u);
LABEL_17:
    result = sub_1B76DBE58();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_1B7669DD8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1B7669E6C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1B766A044(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1B766A044(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1B7669E6C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1B7669FE0(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_1B76DBDBC();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_1B76DBE1C();
      __break(1u);
LABEL_10:
      v2 = sub_1B76DBB34();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_1B76DBE58();
    __break(1u);
LABEL_14:
    result = sub_1B76DBE1C();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

_QWORD *sub_1B7669FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF177960);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1B766A044(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF177960);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1B76DBE58();
  __break(1u);
  return result;
}

void sub_1B766A190(void *a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;

  if (qword_1EF177218 != -1)
    swift_once();
  v2 = sub_1B76DB8B8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EF177E00);
  v12 = a1;
  v3 = sub_1B76DB8A0();
  v4 = sub_1B76DBC84();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v13 = v6;
    *(_DWORD *)v5 = 136446210;
    v7 = v12;
    v8 = objc_msgSend(v7, sel_description);
    v9 = sub_1B76DBAD4();
    v11 = v10;

    sub_1B7669B50(v9, v11, &v13);
    sub_1B76DBD38();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B7656000, v3, v4, "Beginning request for context: %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCA9590](v6, -1, -1);
    MEMORY[0x1BCCA9590](v5, -1, -1);

  }
  else
  {

  }
}

uint64_t type metadata accessor for OverrideSettingsHandler()
{
  return objc_opt_self();
}

unint64_t sub_1B766A3A4()
{
  unint64_t result;

  result = qword_1EF1778F0;
  if (!qword_1EF1778F0)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for OverrideSettingsResponse, &type metadata for OverrideSettingsResponse);
    atomic_store(result, (unint64_t *)&qword_1EF1778F0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for OverrideSettingsResponse(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B766A434 + 4 * byte_1B76DD045[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B766A468 + 4 * byte_1B76DD040[v4]))();
}

uint64_t sub_1B766A468(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B766A470(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B766A478);
  return result;
}

uint64_t sub_1B766A484(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B766A48CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B766A490(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B766A498(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OverrideSettingsResponse()
{
  return &type metadata for OverrideSettingsResponse;
}

uint64_t dispatch thunk of OverrideSettingsHandling.askToOverrideUnremovabilityOfApplication(bundleIdentifier:teamIdentifier:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8))();
}

uint64_t method lookup function for OverrideSettingsHandler()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of OverrideSettingsHandler.beginRequest(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x50))();
}

uint64_t dispatch thunk of OverrideSettingsHandler.askToOverrideUnremovabilityOfApplication(bundleIdentifier:teamIdentifier:completionHandler:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t MessagesSettings.Name.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1B76DBE70();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void *static MessagesSettings.Name.allCases.getter()
{
  return &unk_1E6CAE0B8;
}

unint64_t MessagesSettings.Name.rawValue.getter()
{
  return 0xD000000000000015;
}

uint64_t sub_1B766A57C()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  return sub_1B76DBF78();
}

uint64_t sub_1B766A5D0()
{
  return sub_1B76DBB1C();
}

uint64_t sub_1B766A5EC()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  return sub_1B76DBF78();
}

uint64_t sub_1B766A63C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1B76DBE70();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1B766A68C(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000015;
  a1[1] = 0x80000001B76E1410;
}

void sub_1B766A6AC(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6CAE1E0;
}

uint64_t MessagesSettings.denyiMessage.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v0;
  v1 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  if (qword_1EF1771C0 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = sub_1B76584AC((uint64_t)&byte_1EF1779D0, v2, v1, v4, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1B766A750@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  v7 = qword_1EF1771C0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_1B76584AC((uint64_t)&byte_1EF1779D0, v4, v3, v6, v5);
  swift_bridgeObjectRelease_n();
  result = swift_bridgeObjectRelease_n();
  *a2 = v8;
  return result;
}

uint64_t MessagesSettings.denyiMessage.setter(unsigned __int8 a1)
{
  uint64_t *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v14[4];
  _BYTE v15[8];
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;

  v2 = a1;
  if (qword_1EF1771C0 != -1)
    swift_once();
  sub_1B765A668((uint64_t)&byte_1EF1779D0, (uint64_t)v15);
  v4 = *v1;
  v3 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (v2 == 2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = 0;
  }
  else
  {
    v8 = v2 & 1;
    v9 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = objc_msgSend(v9, sel_initWithBool_, v8);
  }
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    v10 = v16;
    v11 = v17;
    v14[0] = v4;
    v14[1] = v3;
    v14[2] = v6;
    v14[3] = v5;
    v12 = v18;
    swift_retain();
    sub_1B765ED7C(v7, v10, v11, v14, v12);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  return sub_1B76671D4((uint64_t)v15);
}

uint64_t (*MessagesSettings.denyiMessage.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF1771C0 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF1779D0, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B766AA40;
}

uint64_t sub_1B766AA40(uint64_t a1)
{
  return MessagesSettings.denyiMessage.setter(*(_BYTE *)(a1 + 8));
}

uint64_t MessagesSettings.effectiveDenyiMessage.getter()
{
  if (qword_1EF1771C0 != -1)
    swift_once();
  return sub_1B7659CC4(&byte_1EF1779D0);
}

uint64_t sub_1B766AAA4()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF177A00 = result;
  unk_1EF177A08 = &off_1E6CB07B8;
  byte_1EF1779E8 = 0;
  byte_1EF1779D0 = 0;
  qword_1EF1779D8 = 0xD000000000000015;
  unk_1EF1779E0 = 0x80000001B76E1410;
  word_1EF177A10 = 256;
  byte_1EF177A12 = 0;
  qword_1EF177A18 = 0;
  byte_1EF177A20 = 1;
  return result;
}

uint64_t static MessagesSettings.denyiMessage.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EF1771C0 != -1)
    swift_once();
  return sub_1B765A668((uint64_t)&byte_1EF1779D0, a1);
}

unint64_t sub_1B766AB64()
{
  unint64_t result;

  result = qword_1EF177A28;
  if (!qword_1EF177A28)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for MessagesSettings.Name, &type metadata for MessagesSettings.Name);
    atomic_store(result, (unint64_t *)&qword_1EF177A28);
  }
  return result;
}

unint64_t sub_1B766ABAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF177A30;
  if (!qword_1EF177A30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF177A38);
    result = MEMORY[0x1BCCA94E8](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF177A30);
  }
  return result;
}

uint64_t sub_1B766ABFC(unsigned __int8 *a1)
{
  return MessagesSettings.denyiMessage.setter(*a1);
}

ValueMetadata *type metadata accessor for MessagesSettings()
{
  return &type metadata for MessagesSettings;
}

uint64_t storeEnumTagSinglePayload for MessagesSettings.Name(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B766AC70 + 4 * byte_1B76DD180[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B766AC90 + 4 * byte_1B76DD185[v4]))();
}

_BYTE *sub_1B766AC70(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B766AC90(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B766AC98(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B766ACA0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B766ACA8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B766ACB0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MessagesSettings.Name()
{
  return &type metadata for MessagesSettings.Name;
}

uint64_t dispatch thunk of Locatable.internalSettingsRootDirectory.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of Locatable.internalSettingsDirectory(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of Locatable.internalSettingsPath(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of Locatable.internalSettingsDirectoryForProcess.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of Locatable.internalSettingsPathForProcess.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of Locatable.applicationSettingsDirectory(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of Locatable.applicationSettingsPath(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of Locatable.applicationSettingsDirectoryForProcess.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of Locatable.applicationSettingsPathForProcess.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of Locatable.effectiveSettingsDirectory.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of Locatable.effectiveSettingsPath.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of Locatable.persistenceRecordStoreDirectory.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of Locatable.persistenceRecordStorePath.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of Locatable.dataVersionDirectory.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of Locatable.dataVersionPath.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t Token.init(data:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t Token.data.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_1B765DDFC(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

void static Token.== infix(_:_:)(uint64_t *a1)
{
  sub_1B766B5F0(*a1, a1[1]);
}

uint64_t Token.hash(into:)()
{
  uint64_t *v0;
  unint64_t v1;
  uint64_t v2;

  v2 = *v0;
  v1 = v0[1];
  sub_1B765DDFC(v2, v1);
  sub_1B76DB834();
  return sub_1B765DEC4(v2, v1);
}

uint64_t sub_1B766ADDC(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1B76DBED0();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t _s15ManagedSettings15CombineOperatorV12SingleObjectO9hashValueSivg_0()
{
  sub_1B76DBF54();
  sub_1B76DBF60();
  return sub_1B76DBF78();
}

uint64_t sub_1B766AE90()
{
  return sub_1B76DBF60();
}

uint64_t sub_1B766AEB4()
{
  sub_1B76DBF54();
  sub_1B76DBF60();
  return sub_1B76DBF78();
}

uint64_t sub_1B766AEF0()
{
  return 1635017060;
}

uint64_t sub_1B766AF00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B766ADDC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B766AF2C()
{
  return 0;
}

uint64_t sub_1B766AF38@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B7666BE8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1B766AF64(uint64_t a1)
{
  MEMORY[0x1BCCA94E8](&unk_1B76DD4E8, a1);
  return sub_1B76DBFA8();
}

uint64_t sub_1B766AF98(uint64_t a1)
{
  MEMORY[0x1BCCA94E8](&unk_1B76DD4E8, a1);
  return sub_1B76DBFB4();
}

uint64_t Token.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for Token.CodingKeys(255, *(_QWORD *)(a2 + 16), a3, a4);
  MEMORY[0x1BCCA94E8](&unk_1B76DD4E8, v6);
  v7 = sub_1B76DBEA0();
  v14 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)&v13 - v9;
  v11 = *v4;
  v13 = v4[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B76DBF9C();
  v15 = v11;
  v16 = v13;
  sub_1B766B898();
  sub_1B76DBE94();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v10, v7);
}

uint64_t Token.hashValue.getter()
{
  sub_1B76DBF54();
  Token.hash(into:)();
  return sub_1B76DBF78();
}

uint64_t Token.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _OWORD *v13;
  __int128 v15;
  _OWORD *v16;

  v16 = a5;
  v7 = type metadata accessor for Token.CodingKeys(255, a2, a3, a4);
  MEMORY[0x1BCCA94E8](&unk_1B76DD4E8, v7);
  v8 = sub_1B76DBE88();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)&v15 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B76DBF90();
  if (!v5)
  {
    v13 = v16;
    sub_1B766B8DC();
    sub_1B76DBE7C();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    *v13 = v15;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_1B766B294@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  return Token.init(from:)(a1, *(_QWORD *)(a2 + 16), a3, a4, a5);
}

uint64_t sub_1B766B2AC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Token.encode(to:)(a1, a2, a3, a4);
}

uint64_t sub_1B766B2CC()
{
  sub_1B76DBF54();
  Token.hash(into:)();
  return sub_1B76DBF78();
}

uint64_t Token.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v1 = sub_1B76DB858();
  MEMORY[0x1E0C80A78](v1, v2);
  v3 = sub_1B76DBB04();
  MEMORY[0x1E0C80A78](v3, v4);
  v5 = *(_QWORD *)(v0 + 8);
  sub_1B76DBAF8();
  result = sub_1B76DBAE0();
  if (!v7)
    __asm { BR              X10 }
  return result;
}

double ActivityCategory.init(identifier:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  double result;

  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  result = 0.0;
  *(_OWORD *)(a3 + 16) = xmmword_1B76DC6F0;
  *(_QWORD *)(a3 + 32) = 0;
  *(_QWORD *)(a3 + 40) = 0;
  return result;
}

double sub_1B766B598@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  double result;

  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  result = 0.0;
  *(_OWORD *)(a3 + 16) = xmmword_1B76DC6F0;
  *(_QWORD *)(a3 + 32) = 0;
  *(_QWORD *)(a3 + 40) = 0;
  return result;
}

double Application.init(identifier:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  double result;

  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  result = 0.0;
  *(_OWORD *)(a3 + 16) = xmmword_1B76DC6F0;
  *(_QWORD *)(a3 + 32) = 0;
  *(_QWORD *)(a3 + 40) = 0;
  return result;
}

double WebDomain.init(identifier:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  double result;

  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  result = 0.0;
  *(_OWORD *)(a3 + 16) = xmmword_1B76DC6F0;
  return result;
}

double sub_1B766B5DC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  double result;

  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  result = 0.0;
  *(_OWORD *)(a3 + 16) = xmmword_1B76DC6F0;
  return result;
}

void sub_1B766B5F0(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1B766B63C()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_1B766B670 + *((int *)qword_1B766B848 + (v0 >> 62))))();
}

uint64_t sub_1B766B680@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (v1 == BYTE6(v2))
  {
    if (v1 >= 1)
      __asm { BR              X10 }
    v3 = 1;
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

uint64_t type metadata accessor for Token.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Token.CodingKeys);
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_1B766B898()
{
  unint64_t result;

  result = qword_1EF177A40;
  if (!qword_1EF177A40)
  {
    result = MEMORY[0x1BCCA94E8](MEMORY[0x1E0CB0350], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1EF177A40);
  }
  return result;
}

unint64_t sub_1B766B8DC()
{
  unint64_t result;

  result = qword_1EF177A48;
  if (!qword_1EF177A48)
  {
    result = MEMORY[0x1BCCA94E8](MEMORY[0x1E0CB0378], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1EF177A48);
  }
  return result;
}

void sub_1B766B920()
{
  JUMPOUT(0x1BCCA94E8);
}

uint64_t sub_1B766B930()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t *sub_1B766B938(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  sub_1B765DDFC(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t sub_1B766B974(uint64_t a1)
{
  return sub_1B765DEC4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t *sub_1B766B980(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  sub_1B765DDFC(*a2, v4);
  v5 = *a1;
  v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_1B765DEC4(v5, v6);
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t *sub_1B766B9D0(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_1B765DEC4(v3, v4);
  return a1;
}

uint64_t sub_1B766BA08(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 13);
  v3 = (((*(_QWORD *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

uint64_t sub_1B766BA5C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)result = a2 - 13;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

uint64_t type metadata accessor for Token(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Token);
}

uint64_t dispatch thunk of TokenInitializable.init(token:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of TokenInitializable.init(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of TokenInitializable.token.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1B766BACC()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1B766BAD4(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B766BB14 + 4 * byte_1B76DD2B0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B766BB34 + 4 * byte_1B76DD2B5[v4]))();
}

_BYTE *sub_1B766BB14(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B766BB34(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B766BB3C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B766BB44(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B766BB4C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B766BB54(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_1B766BB60()
{
  JUMPOUT(0x1BCCA94E8);
}

void sub_1B766BB70()
{
  JUMPOUT(0x1BCCA94E8);
}

void sub_1B766BB80()
{
  JUMPOUT(0x1BCCA94E8);
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1BCCA947C](a1, v6, a5);
}

ManagedSettings::FaceTimeSettings::Name_optional __swiftcall FaceTimeSettings.Name.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  ManagedSettings::FaceTimeSettings::Name_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1B76DBE70();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

void *static FaceTimeSettings.Name.allCases.getter()
{
  return &unk_1E6CADD48;
}

unint64_t FaceTimeSettings.Name.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000016;
  else
    return 0xD000000000000015;
}

uint64_t sub_1B766BC68(char *a1, char *a2)
{
  return sub_1B76A105C(*a1, *a2);
}

uint64_t sub_1B766BC74()
{
  return sub_1B76D8DE0();
}

uint64_t sub_1B766BC7C()
{
  sub_1B76DBB1C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B766BCD8()
{
  return sub_1B76DA5D4();
}

ManagedSettings::FaceTimeSettings::Name_optional sub_1B766BCE0(Swift::String *a1)
{
  return FaceTimeSettings.Name.init(rawValue:)(*a1);
}

void sub_1B766BCEC(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 0xD000000000000015;
  if (*v1)
    v2 = 0xD000000000000016;
  v3 = 0x80000001B76E1450;
  if (!*v1)
    v3 = 0x80000001B76E1430;
  *a1 = v2;
  a1[1] = v3;
}

void sub_1B766BD2C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6CADE50;
}

uint64_t FaceTimeSettings.denyFaceTime.getter()
{
  return sub_1B765A148(&qword_1EF1771C8, (uint64_t)&byte_1EF177AD8);
}

uint64_t FaceTimeSettings.denyFaceTime.setter(unsigned __int8 a1)
{
  return sub_1B766BF24(a1, &qword_1EF1771C8, (uint64_t)&byte_1EF177AD8);
}

uint64_t (*FaceTimeSettings.denyFaceTime.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF1771C8 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF177AD8, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B766BE24;
}

uint64_t sub_1B766BE24(uint64_t a1)
{
  return FaceTimeSettings.denyFaceTime.setter(*(_BYTE *)(a1 + 8));
}

uint64_t FaceTimeSettings.effectiveDenyFaceTime.getter()
{
  return sub_1B765A568(&qword_1EF1771C8, &byte_1EF177AD8);
}

uint64_t sub_1B766BE64()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF177B08 = result;
  unk_1EF177B10 = &off_1E6CB07B8;
  byte_1EF177AF0 = 0;
  byte_1EF177AD8 = 0;
  qword_1EF177AE0 = 0xD000000000000015;
  unk_1EF177AE8 = 0x80000001B76E1430;
  word_1EF177B18 = 256;
  byte_1EF177B1A = 0;
  qword_1EF177B20 = 0;
  byte_1EF177B28 = 1;
  return result;
}

uint64_t static FaceTimeSettings.denyFaceTime.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B765A628(&qword_1EF1771C8, (uint64_t)&byte_1EF177AD8, a1);
}

uint64_t FaceTimeSettings.denySharePlay.getter()
{
  return sub_1B765A148(&qword_1EF1771D0, (uint64_t)&byte_1EF177B30);
}

uint64_t FaceTimeSettings.denySharePlay.setter(unsigned __int8 a1)
{
  return sub_1B766BF24(a1, &qword_1EF1771D0, (uint64_t)&byte_1EF177B30);
}

uint64_t sub_1B766BF24(unsigned __int8 a1, _QWORD *a2, uint64_t a3)
{
  uint64_t *v3;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v17[4];
  _BYTE v18[8];
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;

  v5 = a1;
  if (*a2 != -1)
    swift_once();
  sub_1B765A668(a3, (uint64_t)v18);
  v7 = *v3;
  v6 = v3[1];
  v9 = v3[2];
  v8 = v3[3];
  if (v5 == 2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = 0;
  }
  else
  {
    v11 = v5 & 1;
    v12 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = objc_msgSend(v12, sel_initWithBool_, v11);
  }
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    v13 = v19;
    v14 = v20;
    v17[0] = v7;
    v17[1] = v6;
    v17[2] = v9;
    v17[3] = v8;
    v15 = v21;
    swift_retain();
    sub_1B765ED7C(v10, v13, v14, v17, v15);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  return sub_1B76671D4((uint64_t)v18);
}

uint64_t (*FaceTimeSettings.denySharePlay.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF1771D0 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF177B30, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B766C150;
}

uint64_t sub_1B766C150(uint64_t a1)
{
  return FaceTimeSettings.denySharePlay.setter(*(_BYTE *)(a1 + 8));
}

uint64_t FaceTimeSettings.effectiveDenySharePlay.getter()
{
  return sub_1B765A568(&qword_1EF1771D0, &byte_1EF177B30);
}

uint64_t sub_1B766C190()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF177B60 = result;
  unk_1EF177B68 = &off_1E6CB07B8;
  byte_1EF177B48 = 0;
  byte_1EF177B30 = 0;
  qword_1EF177B38 = 0xD000000000000016;
  unk_1EF177B40 = 0x80000001B76E1450;
  word_1EF177B70 = 256;
  byte_1EF177B72 = 0;
  qword_1EF177B78 = 0;
  byte_1EF177B80 = 1;
  return result;
}

uint64_t static FaceTimeSettings.denySharePlay.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B765A628(&qword_1EF1771D0, (uint64_t)&byte_1EF177B30, a1);
}

unint64_t sub_1B766C21C()
{
  unint64_t result;

  result = qword_1EF177B88;
  if (!qword_1EF177B88)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for FaceTimeSettings.Name, &type metadata for FaceTimeSettings.Name);
    atomic_store(result, (unint64_t *)&qword_1EF177B88);
  }
  return result;
}

unint64_t sub_1B766C264()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF177B90;
  if (!qword_1EF177B90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF177B98);
    result = MEMORY[0x1BCCA94E8](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF177B90);
  }
  return result;
}

uint64_t sub_1B766C2B0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF1771C8, (uint64_t)&byte_1EF177AD8, a2);
}

uint64_t sub_1B766C2DC(unsigned __int8 *a1)
{
  return FaceTimeSettings.denyFaceTime.setter(*a1);
}

uint64_t sub_1B766C300@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF1771D0, (uint64_t)&byte_1EF177B30, a2);
}

uint64_t sub_1B766C32C(unsigned __int8 *a1)
{
  return FaceTimeSettings.denySharePlay.setter(*a1);
}

ValueMetadata *type metadata accessor for FaceTimeSettings()
{
  return &type metadata for FaceTimeSettings;
}

uint64_t storeEnumTagSinglePayload for FaceTimeSettings.Name(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B766C3AC + 4 * byte_1B76DD545[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B766C3E0 + 4 * byte_1B76DD540[v4]))();
}

uint64_t sub_1B766C3E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B766C3E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B766C3F0);
  return result;
}

uint64_t sub_1B766C3FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B766C404);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B766C408(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B766C410(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FaceTimeSettings.Name()
{
  return &type metadata for FaceTimeSettings.Name;
}

uint64_t sub_1B766C430()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSString *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53AFB8);
  MEMORY[0x1E0C80A78](v0, v1);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B76DB7C8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1B76DB804();
  __swift_allocate_value_buffer(v9, qword_1EF177BA0);
  __swift_project_value_buffer(v9, (uint64_t)qword_1EF177BA0);
  v10 = NSHomeDirectory();
  v11 = sub_1B76DBAD4();
  v13 = v12;

  if (v11 == 0x6F6F722F7261762FLL && v13 == 0xE900000000000074 || (sub_1B76DBED0() & 1) != 0)
    swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x1E0CAFD60], v4);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v3, 1, 1, v9);
  return sub_1B76DB7EC();
}

uint64_t sub_1B766C60C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53AFB8);
  MEMORY[0x1E0C80A78](v0, v1);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1B76DB7C8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1B76DB804();
  __swift_allocate_value_buffer(v9, qword_1ED53AF60);
  __swift_project_value_buffer(v9, (uint64_t)qword_1ED53AF60);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x1E0CAFD60], v4);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v3, 1, 1, v9);
  return sub_1B76DB7EC();
}

uint64_t Locations.internalSettingsRootDirectory.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  void (*v23)(char *, uint64_t);
  _QWORD v25[4];

  v25[1] = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53AFB8);
  MEMORY[0x1E0C80A78](v1, v2);
  v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B76DB7C8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1B76DB804();
  v11 = *(_QWORD *)(v10 - 8);
  v13 = MEMORY[0x1E0C80A78](v10, v12);
  v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13, v16);
  v18 = (char *)v25 - v17;
  if (qword_1ED53AE48 != -1)
    swift_once();
  v19 = __swift_project_value_buffer(v10, (uint64_t)qword_1ED53AF60);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v20(v15, v19, v10);
  v21 = *MEMORY[0x1E0CAFD60];
  v25[0] = v6;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  v22(v9, v21, v5);
  v20(v4, (uint64_t)v15, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v4, 0, 1, v10);
  sub_1B76DB7EC();
  v23 = *(void (**)(char *, uint64_t))(v11 + 8);
  v23(v15, v10);
  v25[2] = 0xD000000000000019;
  v25[3] = 0x80000001B76E2C10;
  v22(v9, v21, v5);
  sub_1B76680BC();
  sub_1B76DB7F8();
  (*(void (**)(char *, uint64_t))(v25[0] + 8))(v9, v5);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v23)(v18, v10);
}

uint64_t Locations.internalSettingsDirectory(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD v15[2];

  v4 = sub_1B76DB7C8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1B76DB804();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v11);
  v13 = (char *)v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  Locations.internalSettingsRootDirectory.getter((uint64_t)v13);
  v15[0] = a1;
  v15[1] = a2;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x1E0CAFD60], v4);
  sub_1B76680BC();
  sub_1B76DB7F8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t Locations.internalSettingsPath(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, _QWORD, uint64_t);
  void (*v20)(char *, uint64_t);
  void (*v21)(char *, uint64_t);
  _QWORD v23[2];
  _QWORD v24[2];

  v23[1] = a3;
  v5 = sub_1B76DB7C8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1B76DB804();
  v11 = *(_QWORD *)(v10 - 8);
  v13 = MEMORY[0x1E0C80A78](v10, v12);
  v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13, v16);
  v18 = (char *)v23 - v17;
  Locations.internalSettingsRootDirectory.getter((uint64_t)v15);
  v24[0] = a1;
  v24[1] = a2;
  v19 = *(void (**)(char *, _QWORD, uint64_t))(v6 + 104);
  v19(v9, *MEMORY[0x1E0CAFD60], v5);
  sub_1B76680BC();
  sub_1B76DB7F8();
  v20 = *(void (**)(char *, uint64_t))(v6 + 8);
  v20(v9, v5);
  v21 = *(void (**)(char *, uint64_t))(v11 + 8);
  v21(v15, v10);
  strcpy((char *)v24, "Settings.plist");
  HIBYTE(v24[1]) = -18;
  v19(v9, *MEMORY[0x1E0CAFD68], v5);
  sub_1B76DB7F8();
  v20(v9, v5);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v21)(v18, v10);
}

uint64_t Locations.internalSettingsDirectoryForProcess.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[2];

  v0 = sub_1B76DB7C8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0, v2);
  v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B76DB804();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v11 = objc_msgSend(v10, sel_processName);

  v12 = sub_1B76DBAD4();
  v14 = v13;

  Locations.internalSettingsRootDirectory.getter((uint64_t)v9);
  v16[0] = v12;
  v16[1] = v14;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v4, *MEMORY[0x1E0CAFD60], v0);
  sub_1B76680BC();
  sub_1B76DB7F8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  return swift_bridgeObjectRelease();
}

uint64_t Locations.internalSettingsPathForProcess.getter@<X0>(uint64_t a1@<X8>)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v3 = objc_msgSend(v2, sel_processName);

  v4 = sub_1B76DBAD4();
  v6 = v5;

  Locations.internalSettingsPath(for:)(v4, v6, a1);
  return swift_bridgeObjectRelease();
}

uint64_t Locations.applicationSettingsDirectory(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  _QWORD v20[4];

  v20[1] = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53AFB8);
  MEMORY[0x1E0C80A78](v3, v4);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1B76DB7C8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1B76DB804();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v14);
  v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *MEMORY[0x1E0CAFD60];
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 104);
  v18(v11, v17, v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v6, a1, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v6, 0, 1, v12);
  sub_1B76DB7EC();
  v20[2] = 0xD000000000000019;
  v20[3] = 0x80000001B76E2C10;
  v18(v11, v17, v7);
  sub_1B76680BC();
  sub_1B76DB7F8();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
}

uint64_t Locations.applicationSettingsPath(for:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v13[16];

  v2 = sub_1B76DB7C8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1B76DB804();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = &v13[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Locations.applicationSettingsDirectory(for:)(a1, (uint64_t)v11);
  strcpy(v13, "Settings.plist");
  v13[15] = -18;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, *MEMORY[0x1E0CAFD68], v2);
  sub_1B76680BC();
  sub_1B76DB7F8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t Locations.applicationSettingsDirectoryForProcess.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EF1771D8 != -1)
    swift_once();
  v2 = sub_1B76DB804();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EF177BA0);
  return Locations.applicationSettingsDirectory(for:)(v3, a1);
}

uint64_t Locations.applicationSettingsPathForProcess.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  char v17[16];

  v0 = sub_1B76DB7C8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0, v2);
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_1B76DB804();
  v6 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x1E0C80A78](v5, v7);
  v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8, v11);
  v13 = &v17[-v12];
  if (qword_1EF1771D8 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v5, (uint64_t)qword_1EF177BA0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v13, v14, v5);
  Locations.applicationSettingsDirectory(for:)((uint64_t)v13, (uint64_t)v10);
  strcpy(v17, "Settings.plist");
  v17[15] = -18;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v4, *MEMORY[0x1E0CAFD68], v0);
  sub_1B76680BC();
  sub_1B76DB7F8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  swift_bridgeObjectRelease();
  v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v15(v10, v5);
  return ((uint64_t (*)(char *, uint64_t))v15)(v13, v5);
}

uint64_t Locations.effectiveSettingsDirectory.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  void (*v12)(char *, uint64_t);
  _QWORD v14[2];
  unint64_t v15;
  unint64_t v16;

  v14[1] = a1;
  v1 = sub_1B76DB7C8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1, v3);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1B76DB804();
  v14[0] = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED53AE48 != -1)
    swift_once();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED53AF60);
  v15 = 0x7972617262694CLL;
  v16 = 0xE700000000000000;
  v10 = *MEMORY[0x1E0CAFD60];
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v11(v5, v10, v1);
  sub_1B76680BC();
  sub_1B76DB7F8();
  v12 = *(void (**)(char *, uint64_t))(v2 + 8);
  v12(v5, v1);
  swift_bridgeObjectRelease();
  v15 = 0xD000000000000019;
  v16 = 0x80000001B76E2C10;
  v11(v5, v10, v1);
  sub_1B76DB7F8();
  v12(v5, v1);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v14[0] + 8))(v9, v6);
}

uint64_t Locations.effectiveSettingsPath.getter()
{
  return sub_1B766D7D0(0xD000000000000017, 0x80000001B76E2800, MEMORY[0x1E0CAFD68]);
}

uint64_t Locations.persistenceRecordStoreDirectory.getter()
{
  return sub_1B766D7D0(0x7364726F636552, 0xE700000000000000, MEMORY[0x1E0CAFD60]);
}

uint64_t Locations.persistenceRecordStorePath.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, _QWORD, uint64_t);
  void (*v16)(char *, uint64_t);
  void (*v17)(char *, uint64_t);
  _QWORD v19[2];
  unint64_t v20;
  unint64_t v21;

  v19[1] = a1;
  v1 = sub_1B76DB7C8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1, v3);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1B76DB804();
  v7 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x1E0C80A78](v6, v8);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9, v12);
  v14 = (char *)v19 - v13;
  Locations.effectiveSettingsDirectory.getter((uint64_t)v11);
  v20 = 0x7364726F636552;
  v21 = 0xE700000000000000;
  v15 = *(void (**)(char *, _QWORD, uint64_t))(v2 + 104);
  v15(v5, *MEMORY[0x1E0CAFD60], v1);
  sub_1B76680BC();
  sub_1B76DB7F8();
  v16 = *(void (**)(char *, uint64_t))(v2 + 8);
  v16(v5, v1);
  swift_bridgeObjectRelease();
  v17 = *(void (**)(char *, uint64_t))(v7 + 8);
  v17(v11, v6);
  v20 = 0xD000000000000014;
  v21 = 0x80000001B76E2C30;
  v15(v5, *MEMORY[0x1E0CAFD68], v1);
  sub_1B76DB7F8();
  v16(v5, v1);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v17)(v14, v6);
}

uint64_t Locations.dataVersionDirectory.getter@<X0>(uint64_t a1@<X8>)
{
  return Locations.effectiveSettingsDirectory.getter(a1);
}

uint64_t Locations.dataVersionPath.getter()
{
  return sub_1B766D7D0(0xD000000000000011, 0x80000001B76E2C50, MEMORY[0x1E0CAFD68]);
}

uint64_t sub_1B766D7D0(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD v17[2];

  v6 = sub_1B76DB7C8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1B76DB804();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v13);
  v15 = (char *)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  Locations.effectiveSettingsDirectory.getter((uint64_t)v15);
  v17[0] = a1;
  v17[1] = a2;
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v10, *a3, v6);
  sub_1B76680BC();
  sub_1B76DB7F8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
}

uint64_t sub_1B766D8FC@<X0>(uint64_t a1@<X8>)
{
  return Locations.internalSettingsRootDirectory.getter(a1);
}

uint64_t sub_1B766D910(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD v15[2];

  v4 = sub_1B76DB7C8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1B76DB804();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v11);
  v13 = (char *)v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  Locations.internalSettingsRootDirectory.getter((uint64_t)v13);
  v15[0] = a1;
  v15[1] = a2;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x1E0CAFD60], v4);
  sub_1B76680BC();
  sub_1B76DB7F8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_1B766DA38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return Locations.internalSettingsPath(for:)(a1, a2, a3);
}

uint64_t sub_1B766DA4C()
{
  return Locations.internalSettingsDirectoryForProcess.getter();
}

uint64_t sub_1B766DA60@<X0>(uint64_t a1@<X8>)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v3 = objc_msgSend(v2, sel_processName);

  v4 = sub_1B76DBAD4();
  v6 = v5;

  Locations.internalSettingsPath(for:)(v4, v6, a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B766DAEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return Locations.applicationSettingsDirectory(for:)(a1, a2);
}

uint64_t sub_1B766DB00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v13[16];

  v2 = sub_1B76DB7C8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1B76DB804();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = &v13[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Locations.applicationSettingsDirectory(for:)(a1, (uint64_t)v11);
  strcpy(v13, "Settings.plist");
  v13[15] = -18;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, *MEMORY[0x1E0CAFD68], v2);
  sub_1B76680BC();
  sub_1B76DB7F8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_1B766DC48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EF1771D8 != -1)
    swift_once();
  v2 = sub_1B76DB804();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EF177BA0);
  return Locations.applicationSettingsDirectory(for:)(v3, a1);
}

uint64_t sub_1B766DCA8()
{
  return Locations.applicationSettingsPathForProcess.getter();
}

uint64_t sub_1B766DCBC@<X0>(uint64_t a1@<X8>)
{
  return Locations.effectiveSettingsDirectory.getter(a1);
}

uint64_t sub_1B766DCD0()
{
  return Locations.effectiveSettingsPath.getter();
}

uint64_t sub_1B766DCE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  v0 = sub_1B76DB7C8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0, v2);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B76DB804();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  Locations.effectiveSettingsDirectory.getter((uint64_t)v9);
  v11[0] = 0x7364726F636552;
  v11[1] = 0xE700000000000000;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v4, *MEMORY[0x1E0CAFD60], v0);
  sub_1B76680BC();
  sub_1B76DB7F8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1B766DE18@<X0>(uint64_t a1@<X8>)
{
  return Locations.persistenceRecordStorePath.getter(a1);
}

uint64_t sub_1B766DE2C()
{
  return Locations.dataVersionPath.getter();
}

ValueMetadata *type metadata accessor for Locations()
{
  return &type metadata for Locations;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

ManagedSettings::AppStoreSettings::Name_optional __swiftcall AppStoreSettings.Name.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ManagedSettings::AppStoreSettings::Name_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1B76DBE70();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static AppStoreSettings.Name.allCases.getter()
{
  return &unk_1E6CADBB8;
}

uint64_t AppStoreSettings.Name.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1B766DF28 + 4 * byte_1B76DD680[*v0]))(0xD000000000000024, 0x80000001B76E1470);
}

uint64_t sub_1B766DF28(uint64_t a1)
{
  return a1 - 9;
}

void sub_1B766DF7C(char *a1)
{
  sub_1B76A11F4(*a1);
}

void sub_1B766DF88()
{
  char *v0;

  sub_1B76D8E60(*v0);
}

void sub_1B766DF90(uint64_t a1)
{
  char *v1;

  sub_1B76D97E0(a1, *v1);
}

void sub_1B766DF98(uint64_t a1)
{
  char *v1;

  sub_1B76DA45C(a1, *v1);
}

ManagedSettings::AppStoreSettings::Name_optional sub_1B766DFA0(Swift::String *a1)
{
  return AppStoreSettings.Name.init(rawValue:)(*a1);
}

uint64_t sub_1B766DFAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = AppStoreSettings.Name.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1B766DFD0(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6CADBB8;
}

uint64_t AppStoreSettings.denyAppStoreAppInstallation.getter()
{
  return sub_1B765A148(&qword_1EF1771E0, (uint64_t)&byte_1EF177BB8);
}

uint64_t AppStoreSettings.denyAppStoreAppInstallation.setter(unsigned __int8 a1)
{
  return sub_1B766413C(a1, &qword_1EF1771E0, (uint64_t)&byte_1EF177BB8);
}

uint64_t (*AppStoreSettings.denyAppStoreAppInstallation.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF1771E0 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF177BB8, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B766E0C8;
}

uint64_t sub_1B766E0C8(uint64_t a1)
{
  return AppStoreSettings.denyAppStoreAppInstallation.setter(*(_BYTE *)(a1 + 8));
}

uint64_t AppStoreSettings.effectiveDenyAppStoreAppInstallation.getter()
{
  return sub_1B765A568(&qword_1EF1771E0, &byte_1EF177BB8);
}

uint64_t sub_1B766E108()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF177BE8 = result;
  unk_1EF177BF0 = &off_1E6CB07B8;
  byte_1EF177BD0 = 0;
  byte_1EF177BB8 = 0;
  qword_1EF177BC0 = 0xD000000000000024;
  unk_1EF177BC8 = 0x80000001B76E1470;
  word_1EF177BF8 = 256;
  byte_1EF177BFA = 0;
  qword_1EF177C00 = 0;
  byte_1EF177C08 = 1;
  return result;
}

uint64_t static AppStoreSettings.denyAppStoreAppInstallation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7664440(&qword_1EF1771E0, (uint64_t)&byte_1EF177BB8, a1);
}

uint64_t AppStoreSettings.denyInAppPurchases.getter()
{
  return sub_1B765A148(&qword_1EF1771E8, (uint64_t)&byte_1EF177C10);
}

uint64_t AppStoreSettings.denyInAppPurchases.setter(unsigned __int8 a1)
{
  return sub_1B766413C(a1, &qword_1EF1771E8, (uint64_t)&byte_1EF177C10);
}

uint64_t (*AppStoreSettings.denyInAppPurchases.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF1771E8 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF177C10, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B766E278;
}

uint64_t sub_1B766E278(uint64_t a1)
{
  return AppStoreSettings.denyInAppPurchases.setter(*(_BYTE *)(a1 + 8));
}

uint64_t AppStoreSettings.effectiveDenyInAppPurchases.getter()
{
  return sub_1B765A568(&qword_1EF1771E8, &byte_1EF177C10);
}

uint64_t sub_1B766E2B8()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF177C40 = result;
  unk_1EF177C48 = &off_1E6CB07B8;
  byte_1EF177C28 = 0;
  byte_1EF177C10 = 0;
  qword_1EF177C18 = 0xD00000000000001BLL;
  unk_1EF177C20 = 0x80000001B76E14A0;
  word_1EF177C50 = 257;
  byte_1EF177C52 = 0;
  qword_1EF177C58 = 0;
  byte_1EF177C60 = 1;
  return result;
}

uint64_t static AppStoreSettings.denyInAppPurchases.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7664440(&qword_1EF1771E8, (uint64_t)&byte_1EF177C10, a1);
}

uint64_t AppStoreSettings.denyMarketplaceAppInstallation.getter()
{
  return sub_1B765A148(&qword_1EF1771F0, (uint64_t)&byte_1EF177C68);
}

uint64_t AppStoreSettings.denyMarketplaceAppInstallation.setter(unsigned __int8 a1)
{
  return sub_1B766413C(a1, &qword_1EF1771F0, (uint64_t)&byte_1EF177C68);
}

uint64_t (*AppStoreSettings.denyMarketplaceAppInstallation.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF1771F0 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF177C68, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B766E428;
}

uint64_t sub_1B766E428(uint64_t a1)
{
  return AppStoreSettings.denyMarketplaceAppInstallation.setter(*(_BYTE *)(a1 + 8));
}

uint64_t AppStoreSettings.effectiveDenyMarketplaceAppInstallation.getter()
{
  return sub_1B765A568(&qword_1EF1771F0, &byte_1EF177C68);
}

uint64_t sub_1B766E468()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF177C98 = result;
  unk_1EF177CA0 = &off_1E6CB07B8;
  byte_1EF177C80 = 0;
  byte_1EF177C68 = 0;
  qword_1EF177C70 = 0xD000000000000027;
  unk_1EF177C78 = 0x80000001B76E14C0;
  word_1EF177CA8 = 256;
  byte_1EF177CAA = 0;
  qword_1EF177CB0 = 0;
  byte_1EF177CB8 = 1;
  return result;
}

uint64_t static AppStoreSettings.denyMarketplaceAppInstallation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7664440(&qword_1EF1771F0, (uint64_t)&byte_1EF177C68, a1);
}

uint64_t AppStoreSettings.denyWebDistributionAppInstallation.getter()
{
  return sub_1B765A148(&qword_1EF1771F8, (uint64_t)&byte_1EF177CC0);
}

uint64_t AppStoreSettings.denyWebDistributionAppInstallation.setter(unsigned __int8 a1)
{
  return sub_1B766413C(a1, &qword_1EF1771F8, (uint64_t)&byte_1EF177CC0);
}

uint64_t (*AppStoreSettings.denyWebDistributionAppInstallation.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF1771F8 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF177CC0, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B766E5D8;
}

uint64_t sub_1B766E5D8(uint64_t a1)
{
  return AppStoreSettings.denyWebDistributionAppInstallation.setter(*(_BYTE *)(a1 + 8));
}

uint64_t AppStoreSettings.effectiveDenyWebDistributionAppInstallation.getter()
{
  return sub_1B765A568(&qword_1EF1771F8, &byte_1EF177CC0);
}

uint64_t sub_1B766E618()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF177CF0 = result;
  unk_1EF177CF8 = &off_1E6CB07B8;
  byte_1EF177CD8 = 0;
  byte_1EF177CC0 = 0;
  qword_1EF177CC8 = 0xD00000000000002BLL;
  unk_1EF177CD0 = 0x80000001B76E14F0;
  word_1EF177D00 = 256;
  byte_1EF177D02 = 0;
  qword_1EF177D08 = 0;
  byte_1EF177D10 = 1;
  return result;
}

uint64_t static AppStoreSettings.denyWebDistributionAppInstallation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7664440(&qword_1EF1771F8, (uint64_t)&byte_1EF177CC0, a1);
}

uint64_t AppStoreSettings.maximumRating.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v0;
  v1 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  if (qword_1EF177200 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = sub_1B766E9A8((uint64_t)&xmmword_1EF177D18, v2, v1, v4, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1B766E73C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  v7 = qword_1EF177200;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_1B766E9A8((uint64_t)&xmmword_1EF177D18, v4, v3, v6, v5);
  v10 = v9;
  swift_bridgeObjectRelease_n();
  result = swift_bridgeObjectRelease_n();
  *(_QWORD *)a2 = v8;
  *(_BYTE *)(a2 + 8) = v10 & 1;
  return result;
}

uint64_t AppStoreSettings.maximumRating.setter(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v17[4];
  _BYTE v18[8];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;

  if (qword_1EF177200 != -1)
    swift_once();
  sub_1B76638C0((uint64_t)&xmmword_1EF177D18, (uint64_t)v18, &qword_1ED53AE50);
  v6 = *v2;
  v5 = v2[1];
  v8 = v2[2];
  v7 = v2[3];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = 0;
  }
  else
  {
    v9 = v19;
    if (v19 <= a1)
      v9 = a1;
    if (v20 >= v9)
      v10 = v9;
    else
      v10 = v20;
    v11 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = objc_msgSend(v11, sel_initWithInteger_, v10);
  }
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    v13 = v21;
    v14 = v22;
    v17[0] = v6;
    v17[1] = v5;
    v17[2] = v8;
    v17[3] = v7;
    v15 = v23;
    swift_retain();
    sub_1B765ED7C(v12, v13, v14, v17, v15);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  return sub_1B765DE88((uint64_t)v18, &qword_1ED53AE50);
}

uint64_t sub_1B766E9A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  id v49;
  char v50;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  v14 = off_1EF1775A8;
  if (!off_1EF1775A8)
    return 0;
  v15 = *(_QWORD *)(a1 + 32);
  v45 = *(_QWORD *)(a1 + 24);
  v46 = v15;
  v16 = *(unsigned __int8 *)(a1 + 82);
  if (a5)
  {
    v17 = a5;
  }
  else
  {
    a4 = *((_QWORD *)off_1EF1775A8 + 2);
    v17 = *((_QWORD *)off_1EF1775A8 + 3);
    swift_bridgeObjectRetain();
  }
  v18 = (void *)*((_QWORD *)v14 + 5);
  swift_retain();
  swift_bridgeObjectRetain();
  objc_msgSend(v18, sel_lock);
  swift_beginAccess();
  v19 = *((_QWORD *)v14 + 4);
  if (*(_QWORD *)(v19 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = sub_1B76606E0(a4, v17);
    if ((v21 & 1) != 0)
    {
      v22 = v20;
      v43 = a4;
      v23 = a3;
      v24 = *(_QWORD *)(v19 + 56);
      v25 = sub_1B76DB888();
      v42 = v16;
      v26 = v25;
      v44 = a1;
      v27 = a2;
      v28 = *(_QWORD *)(v25 - 8);
      v29 = v24 + *(_QWORD *)(v28 + 72) * v22;
      a3 = v23;
      a4 = v43;
      (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v13, v29, v25);
      v30 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56);
      a2 = v27;
      a1 = v44;
      v31 = v26;
      v16 = v42;
      v30(v13, 0, 1, v31);
    }
    else
    {
      v33 = sub_1B76DB888();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v13, 1, 1, v33);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v32 = sub_1B76DB888();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v13, 1, 1, v32);
  }
  v34 = v45;
  objc_msgSend(*((id *)v14 + 5), sel_unlock);
  if (qword_1ED53B6B8 != -1)
    swift_once();
  v35 = sub_1B76968F0(v34, v46, (uint64_t)v13, a4, v17, a2, a3, v16);
  swift_bridgeObjectRelease();
  sub_1B765DE88((uint64_t)v13, &qword_1EF1774C0);
  swift_release();
  if (!v35)
    return 0;
  v36 = v35;
  v49 = sub_1B768A39C(v35);
  v50 = v37 & 1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177DC8);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v48 = 0;
    v38 = v47;

    v39 = *(_QWORD *)(a1 + 8);
    if (v38 > v39)
      v39 = v38;
    if (*(_QWORD *)(a1 + 16) >= v39)
      return v39;
    else
      return *(_QWORD *)(a1 + 16);
  }
  else
  {
    v47 = 0;
    v48 = 1;

    return 0;
  }
}

uint64_t (*AppStoreSettings.maximumRating.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177200 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B766E9A8((uint64_t)&xmmword_1EF177D18, v3, v4, v6, v5);
  v9 = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)a1 = v7;
  *(_BYTE *)(a1 + 8) = v9 & 1;
  return sub_1B766EDB8;
}

uint64_t sub_1B766EDB8(uint64_t a1)
{
  return AppStoreSettings.maximumRating.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t AppStoreSettings.effectiveMaximumRating.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v6;

  if (qword_1EF177200 != -1)
    swift_once();
  if (qword_1EF1771A8 != -1)
    swift_once();
  swift_beginAccess();
  if (!qword_1EF1778A8)
    return xmmword_1EF177D18;
  v0 = qword_1EF177D30;
  v1 = qword_1EF177D38;
  swift_retain();
  v2 = sub_1B7667778(v0, v1);
  swift_release();
  if (!v2)
    return xmmword_1EF177D18;
  v3 = v2;
  sub_1B768A39C(v2);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177DC8);
  if ((swift_dynamicCast() & 1) == 0)
  {

    return xmmword_1EF177D18;
  }

  v4 = *((_QWORD *)&xmmword_1EF177D18 + 1);
  if (v6 > *((uint64_t *)&xmmword_1EF177D18 + 1))
    v4 = v6;
  if (*(uint64_t *)algn_1EF177D28 >= v4)
    return v4;
  else
    return *(_QWORD *)algn_1EF177D28;
}

double sub_1B766EF44()
{
  double result;

  qword_1EF177D58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B018);
  unk_1EF177D60 = &off_1E6CB0650;
  byte_1EF177D40 = 0;
  *(_QWORD *)&result = 1000;
  xmmword_1EF177D18 = xmmword_1B76DD7B0;
  *(_OWORD *)algn_1EF177D28 = xmmword_1B76DD7C0;
  qword_1EF177D38 = 0x80000001B76E1520;
  word_1EF177D68 = 257;
  byte_1EF177D6A = 0;
  return result;
}

uint64_t static AppStoreSettings.maximumRating.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EF177200 != -1)
    swift_once();
  return sub_1B76638C0((uint64_t)&xmmword_1EF177D18, a1, &qword_1ED53AE50);
}

uint64_t AppStoreSettings.requirePasswordForPurchases.getter()
{
  return sub_1B765A148(&qword_1EF177208, (uint64_t)&byte_1EF177D70);
}

uint64_t AppStoreSettings.requirePasswordForPurchases.setter(unsigned __int8 a1)
{
  return sub_1B766413C(a1, &qword_1EF177208, (uint64_t)&byte_1EF177D70);
}

uint64_t (*AppStoreSettings.requirePasswordForPurchases.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177208 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF177D70, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B766F0F0;
}

uint64_t sub_1B766F0F0(uint64_t a1)
{
  return AppStoreSettings.requirePasswordForPurchases.setter(*(_BYTE *)(a1 + 8));
}

uint64_t AppStoreSettings.effectiveRequirePasswordForPurchases.getter()
{
  return sub_1B765A568(&qword_1EF177208, &byte_1EF177D70);
}

uint64_t sub_1B766F130()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF177DA0 = result;
  unk_1EF177DA8 = &off_1E6CB07B8;
  byte_1EF177D88 = 0;
  byte_1EF177D70 = 0;
  qword_1EF177D78 = 0xD000000000000024;
  unk_1EF177D80 = 0x80000001B76E1540;
  word_1EF177DB0 = 257;
  byte_1EF177DB2 = 0;
  qword_1EF177DB8 = 0;
  byte_1EF177DC0 = 1;
  return result;
}

uint64_t static AppStoreSettings.requirePasswordForPurchases.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7664440(&qword_1EF177208, (uint64_t)&byte_1EF177D70, a1);
}

unint64_t sub_1B766F1BC()
{
  unint64_t result;

  result = qword_1EF177DD0;
  if (!qword_1EF177DD0)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for AppStoreSettings.Name, &type metadata for AppStoreSettings.Name);
    atomic_store(result, (unint64_t *)&qword_1EF177DD0);
  }
  return result;
}

unint64_t sub_1B766F204()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF177DD8;
  if (!qword_1EF177DD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF177DE0);
    result = MEMORY[0x1BCCA94E8](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF177DD8);
  }
  return result;
}

uint64_t sub_1B766F250@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF1771E0, (uint64_t)&byte_1EF177BB8, a2);
}

uint64_t sub_1B766F27C(unsigned __int8 *a1)
{
  return AppStoreSettings.denyAppStoreAppInstallation.setter(*a1);
}

uint64_t sub_1B766F2A0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF1771E8, (uint64_t)&byte_1EF177C10, a2);
}

uint64_t sub_1B766F2CC(unsigned __int8 *a1)
{
  return AppStoreSettings.denyInAppPurchases.setter(*a1);
}

uint64_t sub_1B766F2F0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF1771F0, (uint64_t)&byte_1EF177C68, a2);
}

uint64_t sub_1B766F31C(unsigned __int8 *a1)
{
  return AppStoreSettings.denyMarketplaceAppInstallation.setter(*a1);
}

uint64_t sub_1B766F340@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF1771F8, (uint64_t)&byte_1EF177CC0, a2);
}

uint64_t sub_1B766F36C(unsigned __int8 *a1)
{
  return AppStoreSettings.denyWebDistributionAppInstallation.setter(*a1);
}

uint64_t sub_1B766F394(uint64_t a1)
{
  return AppStoreSettings.maximumRating.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t sub_1B766F3C0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF177208, (uint64_t)&byte_1EF177D70, a2);
}

uint64_t sub_1B766F3EC(unsigned __int8 *a1)
{
  return AppStoreSettings.requirePasswordForPurchases.setter(*a1);
}

ValueMetadata *type metadata accessor for AppStoreSettings()
{
  return &type metadata for AppStoreSettings;
}

uint64_t storeEnumTagSinglePayload for AppStoreSettings.Name(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1B766F46C + 4 * byte_1B76DD68B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1B766F4A0 + 4 * byte_1B76DD686[v4]))();
}

uint64_t sub_1B766F4A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B766F4A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B766F4B0);
  return result;
}

uint64_t sub_1B766F4BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B766F4C4);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1B766F4C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B766F4D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppStoreSettings.Name()
{
  return &type metadata for AppStoreSettings.Name;
}

uint64_t sub_1B766F4EC(uint64_t a1)
{
  return sub_1B766F788(a1, qword_1ED53AE58);
}

uint64_t sub_1B766F508(uint64_t a1)
{
  return sub_1B766F788(a1, qword_1ED53B750);
}

uint64_t static Logger.effective.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7658074(&qword_1ED53C0C0, (uint64_t)qword_1ED53B750, a1);
}

uint64_t sub_1B766F548(uint64_t a1)
{
  return sub_1B766F788(a1, qword_1ED53B4D0);
}

uint64_t static Logger.interface.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7658074(&qword_1ED53B4B0, (uint64_t)qword_1ED53B4D0, a1);
}

uint64_t sub_1B766F588(uint64_t a1)
{
  return sub_1B766F788(a1, qword_1EF177DE8);
}

uint64_t static Logger.migrator.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7658074(&qword_1EF177210, (uint64_t)qword_1EF177DE8, a1);
}

uint64_t sub_1B766F5C4(uint64_t a1)
{
  return sub_1B766F788(a1, qword_1EF177E00);
}

uint64_t static Logger.overrideSettings.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7658074(&qword_1EF177218, (uint64_t)qword_1EF177E00, a1);
}

uint64_t sub_1B766F604(uint64_t a1)
{
  return sub_1B766F788(a1, qword_1EF177E18);
}

uint64_t static Logger.persistence.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7658074(&qword_1EF177220, (uint64_t)qword_1EF177E18, a1);
}

uint64_t sub_1B766F648(uint64_t a1)
{
  return sub_1B766F788(a1, qword_1ED53AFC0);
}

uint64_t static Logger.persistenceRecordStore.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7658074(&qword_1ED53AFD8, (uint64_t)qword_1ED53AFC0, a1);
}

uint64_t sub_1B766F688(uint64_t a1)
{
  return sub_1B766F788(a1, qword_1EF177E30);
}

uint64_t static Logger.shieldAction.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7658074(&qword_1EF177228, (uint64_t)qword_1EF177E30, a1);
}

uint64_t sub_1B766F6CC(uint64_t a1)
{
  return sub_1B766F788(a1, qword_1EF177E48);
}

uint64_t static Logger.sandboxing.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7658074(&qword_1EF177230, (uint64_t)qword_1EF177E48, a1);
}

uint64_t sub_1B766F70C(uint64_t a1)
{
  return sub_1B766F788(a1, qword_1ED53AF98);
}

uint64_t sub_1B766F734(uint64_t a1)
{
  return sub_1B766F788(a1, qword_1EF177E60);
}

uint64_t static Logger.nanoSync.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7658074(&qword_1EF177238, (uint64_t)qword_1EF177E60, a1);
}

uint64_t sub_1B766F770(uint64_t a1)
{
  return sub_1B766F788(a1, qword_1ED53B358);
}

uint64_t sub_1B766F788(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1B76DB8B8();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1B76DB8AC();
}

uint64_t static Logger.xpc.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7658074(&qword_1ED53B010, (uint64_t)qword_1ED53B358, a1);
}

ManagedSettings::CellularSettings::Name_optional __swiftcall CellularSettings.Name.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ManagedSettings::CellularSettings::Name_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1B76DBE70();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static CellularSettings.Name.allCases.getter()
{
  return &unk_1E6CADC90;
}

unint64_t CellularSettings.Name.rawValue.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000011;
  if (*v0 == 1)
    v1 = 0xD000000000000019;
  if (*v0)
    return v1;
  else
    return 0xD00000000000001CLL;
}

uint64_t sub_1B766F8DC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B76A1100(*a1, *a2);
}

uint64_t sub_1B766F8E8()
{
  return sub_1B76D8F3C();
}

uint64_t sub_1B766F8F0()
{
  return sub_1B76D9764();
}

uint64_t sub_1B766F8F8()
{
  return sub_1B76DA534();
}

ManagedSettings::CellularSettings::Name_optional sub_1B766F900(Swift::String *a1)
{
  return CellularSettings.Name.init(rawValue:)(*a1);
}

unint64_t sub_1B766F90C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;
  unint64_t v3;

  result = CellularSettings.Name.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1B766F930(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6CADD20;
}

uint64_t CellularSettings.lockAppCellularData.getter()
{
  return sub_1B765A148(&qword_1EF177240, (uint64_t)&byte_1EF177E78);
}

uint64_t CellularSettings.lockAppCellularData.setter(unsigned __int8 a1)
{
  return sub_1B766BF24(a1, &qword_1EF177240, (uint64_t)&byte_1EF177E78);
}

uint64_t (*CellularSettings.lockAppCellularData.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177240 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF177E78, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B766FA28;
}

uint64_t sub_1B766FA28(uint64_t a1)
{
  return CellularSettings.lockAppCellularData.setter(*(_BYTE *)(a1 + 8));
}

uint64_t CellularSettings.effectiveLockAppCellularData.getter()
{
  return sub_1B765A568(&qword_1EF177240, &byte_1EF177E78);
}

uint64_t sub_1B766FA68()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF177EA8 = result;
  unk_1EF177EB0 = &off_1E6CB07B8;
  byte_1EF177E90 = 0;
  byte_1EF177E78 = 0;
  qword_1EF177E80 = 0xD00000000000001CLL;
  unk_1EF177E88 = 0x80000001B76E1570;
  word_1EF177EB8 = 257;
  byte_1EF177EBA = 0;
  qword_1EF177EC0 = 0;
  byte_1EF177EC8 = 1;
  return result;
}

uint64_t static CellularSettings.lockAppCellularData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B765A628(&qword_1EF177240, (uint64_t)&byte_1EF177E78, a1);
}

uint64_t CellularSettings.lockCellularPlan.getter()
{
  return sub_1B765A148(&qword_1EF177248, (uint64_t)&byte_1EF177ED0);
}

uint64_t CellularSettings.lockCellularPlan.setter(unsigned __int8 a1)
{
  return sub_1B766BF24(a1, &qword_1EF177248, (uint64_t)&byte_1EF177ED0);
}

uint64_t (*CellularSettings.lockCellularPlan.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177248 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF177ED0, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B766FBD8;
}

uint64_t sub_1B766FBD8(uint64_t a1)
{
  return CellularSettings.lockCellularPlan.setter(*(_BYTE *)(a1 + 8));
}

uint64_t CellularSettings.effectiveLockCellularPlan.getter()
{
  return sub_1B765A568(&qword_1EF177248, &byte_1EF177ED0);
}

uint64_t sub_1B766FC18()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF177F00 = result;
  unk_1EF177F08 = &off_1E6CB07B8;
  byte_1EF177EE8 = 0;
  byte_1EF177ED0 = 0;
  qword_1EF177ED8 = 0xD000000000000019;
  unk_1EF177EE0 = 0x80000001B76E1590;
  word_1EF177F10 = 257;
  byte_1EF177F12 = 0;
  qword_1EF177F18 = 0;
  byte_1EF177F20 = 1;
  return result;
}

uint64_t static CellularSettings.lockCellularPlan.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B765A628(&qword_1EF177248, (uint64_t)&byte_1EF177ED0, a1);
}

uint64_t CellularSettings.lockESIM.getter()
{
  return sub_1B765A148(&qword_1EF177250, (uint64_t)&byte_1EF177F28);
}

uint64_t CellularSettings.lockESIM.setter(unsigned __int8 a1)
{
  return sub_1B766BF24(a1, &qword_1EF177250, (uint64_t)&byte_1EF177F28);
}

uint64_t (*CellularSettings.lockESIM.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177250 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF177F28, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B766FD88;
}

uint64_t sub_1B766FD88(uint64_t a1)
{
  return CellularSettings.lockESIM.setter(*(_BYTE *)(a1 + 8));
}

uint64_t CellularSettings.effectiveLockESIM.getter()
{
  return sub_1B765A568(&qword_1EF177250, &byte_1EF177F28);
}

uint64_t sub_1B766FDC8()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF177F58 = result;
  unk_1EF177F60 = &off_1E6CB07B8;
  byte_1EF177F40 = 0;
  byte_1EF177F28 = 0;
  qword_1EF177F30 = 0xD000000000000011;
  unk_1EF177F38 = 0x80000001B76E15B0;
  word_1EF177F68 = 257;
  byte_1EF177F6A = 0;
  qword_1EF177F70 = 0;
  byte_1EF177F78 = 1;
  return result;
}

uint64_t static CellularSettings.lockESIM.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B765A628(&qword_1EF177250, (uint64_t)&byte_1EF177F28, a1);
}

unint64_t sub_1B766FE54()
{
  unint64_t result;

  result = qword_1EF177F80;
  if (!qword_1EF177F80)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for CellularSettings.Name, &type metadata for CellularSettings.Name);
    atomic_store(result, (unint64_t *)&qword_1EF177F80);
  }
  return result;
}

unint64_t sub_1B766FE9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF177F88;
  if (!qword_1EF177F88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF177F90);
    result = MEMORY[0x1BCCA94E8](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF177F88);
  }
  return result;
}

uint64_t sub_1B766FEE8@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF177240, (uint64_t)&byte_1EF177E78, a2);
}

uint64_t sub_1B766FF14(unsigned __int8 *a1)
{
  return CellularSettings.lockAppCellularData.setter(*a1);
}

uint64_t sub_1B766FF38@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF177248, (uint64_t)&byte_1EF177ED0, a2);
}

uint64_t sub_1B766FF64(unsigned __int8 *a1)
{
  return CellularSettings.lockCellularPlan.setter(*a1);
}

uint64_t sub_1B766FF88@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF177250, (uint64_t)&byte_1EF177F28, a2);
}

uint64_t sub_1B766FFB4(unsigned __int8 *a1)
{
  return CellularSettings.lockESIM.setter(*a1);
}

ValueMetadata *type metadata accessor for CellularSettings()
{
  return &type metadata for CellularSettings;
}

uint64_t getEnumTagSinglePayload for CellularSettings.Name(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CellularSettings.Name(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B76700C4 + 4 * byte_1B76DD7D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B76700F8 + 4 * byte_1B76DD7D0[v4]))();
}

uint64_t sub_1B76700F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B7670100(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B7670108);
  return result;
}

uint64_t sub_1B7670114(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B767011CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B7670120(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B7670128(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CellularSettings.Name()
{
  return &type metadata for CellularSettings.Name;
}

ManagedSettings::ShieldAction_optional __swiftcall ShieldAction.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 2)
    v2 = 1;
  else
    v2 = 2;
  if (rawValue == 1)
    v2 = 0;
  *v1 = v2;
  return (ManagedSettings::ShieldAction_optional)rawValue;
}

uint64_t ShieldActionResponse.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t ShieldAction.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 2;
  else
    return 1;
}

uint64_t sub_1B767017C()
{
  sub_1B76DBF54();
  sub_1B76DBF60();
  return sub_1B76DBF78();
}

uint64_t sub_1B76701C8()
{
  return sub_1B76DBF60();
}

uint64_t sub_1B76701FC()
{
  sub_1B76DBF54();
  sub_1B76DBF60();
  return sub_1B76DBF78();
}

_QWORD *sub_1B7670244@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 2)
    v2 = 1;
  else
    v2 = 2;
  if (*result == 1)
    v3 = 0;
  else
    v3 = v2;
  *a2 = v3;
  return result;
}

void sub_1B7670264(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 1;
  if (*v1)
    v2 = 2;
  *a1 = v2;
}

ManagedSettings::ShieldActionResponse_optional __swiftcall ShieldActionResponse.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (ManagedSettings::ShieldActionResponse_optional)rawValue;
}

BOOL sub_1B7670290(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

ManagedSettings::ShieldActionResponse_optional sub_1B76702A4(Swift::Int *a1)
{
  return ShieldActionResponse.init(rawValue:)(*a1);
}

uint64_t sub_1B76702AC(unsigned __int8 *a1, uint64_t *a2, uint64_t (*a3)(_QWORD *), uint64_t a4)
{
  return sub_1B76702E8(a1, a2, a3, a4, &qword_1EF177828, "Handling action: %{public}s, for application: %{public}s");
}

uint64_t sub_1B76702C0(unsigned __int8 *a1, uint64_t *a2, uint64_t (*a3)(_QWORD *), uint64_t a4)
{
  return sub_1B76702E8(a1, a2, a3, a4, &qword_1EF177F98, "Handling action: %{public}s, for category: %{public}s");
}

uint64_t sub_1B76702D4(unsigned __int8 *a1, uint64_t *a2, uint64_t (*a3)(_QWORD *), uint64_t a4)
{
  return sub_1B76702E8(a1, a2, a3, a4, &qword_1EF177FA0, "Handling action: %{public}s, for web domain: %{public}s");
}

uint64_t sub_1B76702E8(unsigned __int8 *a1, uint64_t *a2, uint64_t (*a3)(_QWORD *), uint64_t a4, uint64_t *a5, const char *a6)
{
  int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v23;
  _QWORD v24[2];
  uint64_t v25;

  v9 = *a1;
  v11 = *a2;
  v10 = a2[1];
  if (qword_1EF177228 != -1)
    swift_once();
  v12 = sub_1B76DB8B8();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EF177E30);
  sub_1B765DDFC(v11, v10);
  sub_1B765DDFC(v11, v10);
  v13 = sub_1B76DB8A0();
  v14 = sub_1B76DBCA8();
  if (os_log_type_enabled(v13, v14))
  {
    v23 = a5;
    v15 = swift_slowAlloc();
    v16 = swift_slowAlloc();
    v25 = v16;
    *(_DWORD *)v15 = 136446466;
    v17 = sub_1B76DBB10();
    sub_1B7669B50(v17, v18, &v25);
    sub_1B76DBD38();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2082;
    v24[1] = v10;
    sub_1B765DDFC(v11, v10);
    __swift_instantiateConcreteTypeFromMangledName(v23);
    v19 = sub_1B76DBB10();
    v24[0] = sub_1B7669B50(v19, v20, &v25);
    sub_1B76DBD38();
    swift_bridgeObjectRelease();
    sub_1B765DEC4(v11, v10);
    sub_1B765DEC4(v11, v10);
    _os_log_impl(&dword_1B7656000, v13, v14, a6, (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCA9590](v16, -1, -1);
    MEMORY[0x1BCCA9590](v15, -1, -1);
  }
  else
  {
    sub_1B765DEC4(v11, v10);
    sub_1B765DEC4(v11, v10);
  }

  if (v9)
    v21 = 2;
  else
    v21 = 1;
  LOBYTE(v24[0]) = v21;
  return a3(v24);
}

id ShieldActionDelegate.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id ShieldActionDelegate.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ShieldActionDelegate();
  return objc_msgSendSuper2(&v2, sel_init);
}

id ShieldActionDelegate.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ShieldActionDelegate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ShieldActionDelegate()
{
  return objc_opt_self();
}

unint64_t sub_1B767063C()
{
  unint64_t result;

  result = qword_1EF177FA8;
  if (!qword_1EF177FA8)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for ShieldAction, &type metadata for ShieldAction);
    atomic_store(result, (unint64_t *)&qword_1EF177FA8);
  }
  return result;
}

unint64_t sub_1B7670684()
{
  unint64_t result;

  result = qword_1EF177FB0;
  if (!qword_1EF177FB0)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for ShieldActionResponse, &type metadata for ShieldActionResponse);
    atomic_store(result, (unint64_t *)&qword_1EF177FB0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ShieldAction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B7670714 + 4 * byte_1B76DD905[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B7670748 + 4 * byte_1B76DD900[v4]))();
}

uint64_t sub_1B7670748(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B7670750(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B7670758);
  return result;
}

uint64_t sub_1B7670764(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B767076CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B7670770(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B7670778(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ShieldAction()
{
  return &type metadata for ShieldAction;
}

uint64_t storeEnumTagSinglePayload for ShieldActionResponse(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B76707E0 + 4 * byte_1B76DD90F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B7670814 + 4 * byte_1B76DD90A[v4]))();
}

uint64_t sub_1B7670814(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B767081C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B7670824);
  return result;
}

uint64_t sub_1B7670830(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B7670838);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B767083C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B7670844(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ShieldActionResponse()
{
  return &type metadata for ShieldActionResponse;
}

uint64_t method lookup function for ShieldActionDelegate()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ShieldActionDelegate.handle(action:for:completionHandler:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x50))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

id sub_1B76708C0(uint64_t a1)
{
  return sub_1B76708E8(a1, &protocolRef__TtP15ManagedSettings29ManagedSettingsPublisherProxy_, &qword_1ED53AF80);
}

id sub_1B76708D4(uint64_t a1)
{
  return sub_1B76708E8(a1, &protocolRef__TtP15ManagedSettings30ManagedSettingsSubscriberProxy_, &qword_1ED53AF88);
}

id sub_1B76708E8(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, *a2);
  *a3 = result;
  return result;
}

uint64_t static ManagedSettingsPublisherService.connection<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  _QWORD v20[3];
  uint64_t v21;
  _BYTE v22[32];
  _QWORD v23[4];

  v23[3] = a2;
  v23[0] = a1;
  v2 = qword_1ED53AF90;
  swift_unknownObjectRetain();
  if (v2 != -1)
    swift_once();
  v3 = qword_1ED53AF88;
  if (qword_1ED53AF78 != -1)
    swift_once();
  v4 = qword_1ED53AF80;
  type metadata accessor for XPCConnection();
  v5 = swift_allocObject();
  v6 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v7 = (void *)sub_1B76DBAB0();
  v8 = objc_msgSend(v6, sel_initWithMachServiceName_options_, v7, 4096);

  *(_QWORD *)(v5 + 16) = v8;
  sub_1B765DF40((uint64_t)v23, (uint64_t)v22);
  sub_1B7670B8C((uint64_t)v22, (uint64_t)v20);
  v9 = v21;
  if (v21)
  {
    v10 = __swift_project_boxed_opaque_existential_1(v20, v21);
    v11 = *(_QWORD *)(v9 - 8);
    MEMORY[0x1E0C80A78](v10, v10);
    v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v11 + 16))(v13);
    v14 = v8;
    v15 = sub_1B76DBEC4();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v9);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
  }
  else
  {
    v16 = v8;
    v15 = 0;
  }
  objc_msgSend(v8, sel_setExportedObject_, v15);

  swift_unknownObjectRelease();
  sub_1B7670BD4((uint64_t)v22);
  objc_msgSend(v8, sel_setExportedInterface_, v3);
  objc_msgSend(v8, sel_setRemoteObjectInterface_, v4);
  v17 = v8;
  v18 = objc_msgSend(v17, sel__xpcConnection);
  xpc_connection_set_non_launching();

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
  return v5;
}

uint64_t sub_1B7670B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B7A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B7670BD4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B7A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for ManagedSettingsPublisherService()
{
  return &type metadata for ManagedSettingsPublisherService;
}

uint64_t XPCConnectable.remoteObjectProxy(retryCount:proxyHandler:)(uint64_t a1, void (*a2)(_BYTE *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  void (*v12)(_QWORD *__return_ptr, uint64_t (*)(void *), _QWORD *, uint64_t, uint64_t);
  _BYTE v14[40];
  _QWORD v15[4];

  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a4;
  v11[3] = a5;
  v11[4] = v5;
  v11[5] = a1;
  v11[6] = a2;
  v11[7] = a3;
  v12 = *(void (**)(_QWORD *__return_ptr, uint64_t (*)(void *), _QWORD *, uint64_t, uint64_t))(a5 + 192);
  swift_unknownObjectRetain();
  swift_retain();
  v12(v15, sub_1B7670D04, v11, a4, a5);
  swift_release();
  sub_1B765DF40((uint64_t)v15, (uint64_t)v14);
  v14[32] = 0;
  a2(v14);
  sub_1B765DE88((uint64_t)v14, &qword_1ED53B798);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
}

uint64_t sub_1B7670D04(void *a1)
{
  return sub_1B7671204(a1, (uint64_t (*)(uint64_t, void (*)(_QWORD), uint64_t, uint64_t, uint64_t))XPCConnectable.remoteObjectProxy(retryCount:proxyHandler:));
}

uint64_t XPCConnectable.synchronousRemoteObjectProxy(retryCount:proxyHandler:)(uint64_t a1, void (*a2)(_QWORD *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  void *v6;
  _QWORD *v12;
  void *v13;
  id v14;
  _QWORD v16[4];
  uint64_t (*v17)(void *);
  _QWORD *v18;
  _BYTE v19[32];

  v6 = v5;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a4;
  v12[3] = a5;
  v12[4] = v6;
  v12[5] = a1;
  v12[6] = a2;
  v12[7] = a3;
  v17 = sub_1B76711F8;
  v18 = v12;
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 1107296256;
  v16[2] = sub_1B7671228;
  v16[3] = &block_descriptor;
  v13 = _Block_copy(v16);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  v14 = objc_msgSend(v6, sel_synchronousRemoteObjectProxyWithErrorHandler_, v13);
  _Block_release(v13);
  sub_1B76DBD50();
  swift_unknownObjectRelease();
  sub_1B765DF40((uint64_t)v19, (uint64_t)v16);
  LOBYTE(v17) = 0;
  a2(v16);
  sub_1B765DE88((uint64_t)v16, &qword_1ED53B798);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
}

uint64_t sub_1B7670E44(void *a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, void (*)(_QWORD), uint64_t, uint64_t, uint64_t))
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  id v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(_QWORD);
  uint64_t (*v37)(uint64_t, void (*)(_QWORD), uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[4];
  char v44;

  v37 = a8;
  v40 = a6;
  v41 = a7;
  v12 = sub_1B76DB72C();
  v39 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78]();
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED53B010 != -1)
    swift_once();
  v15 = sub_1B76DB8B8();
  __swift_project_value_buffer(v15, (uint64_t)qword_1ED53B358);
  swift_unknownObjectRetain();
  v16 = a1;
  swift_unknownObjectRetain();
  v17 = a1;
  v18 = sub_1B76DB8A0();
  v19 = sub_1B76DBC90();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v38 = a3;
    v21 = v20;
    v34 = swift_slowAlloc();
    v42 = v34;
    *(_DWORD *)v21 = 136446722;
    v35 = a5;
    v43[0] = (*(uint64_t (**)(uint64_t))(v41 + 16))(v40);
    v43[1] = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B428);
    v36 = a4;
    v23 = sub_1B76DBB10();
    v43[0] = sub_1B7669B50(v23, v24, &v42);
    sub_1B76DBD38();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2082;
    v43[0] = a1;
    v25 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B678);
    v26 = sub_1B76DBB10();
    v43[0] = sub_1B7669B50(v26, v27, &v42);
    sub_1B76DBD38();
    a5 = v35;
    swift_bridgeObjectRelease();

    *(_WORD *)(v21 + 22) = 2050;
    v43[0] = v38;
    a4 = v36;
    sub_1B76DBD38();
    _os_log_impl(&dword_1B7656000, v18, v19, "Connection error from %{public}s: %{public}s\n Attempts remaining: %{public}lu", (uint8_t *)v21, 0x20u);
    v28 = v34;
    swift_arrayDestroy();
    MEMORY[0x1BCCA9590](v28, -1, -1);
    v29 = v21;
    a3 = v38;
    MEMORY[0x1BCCA9590](v29, -1, -1);

    if (!a3)
      goto LABEL_9;
  }
  else
  {
    swift_unknownObjectRelease_n();

    if (!a3)
      goto LABEL_9;
  }
  v30 = a3;
  sub_1B76DB708();
  sub_1B7668038();
  v31 = sub_1B76DB780();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v14, v12);
  if ((v31 & 1) != 0)
    return v37(v30 - 1, a4, a5, v40, v41);
LABEL_9:
  v43[0] = a1;
  v44 = 1;
  v33 = a1;
  a4(v43);
  return sub_1B765DE88((uint64_t)v43, &qword_1ED53B798);
}

uint64_t objectdestroyTm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B76711F8(void *a1)
{
  return sub_1B7671204(a1, (uint64_t (*)(uint64_t, void (*)(_QWORD), uint64_t, uint64_t, uint64_t))XPCConnectable.synchronousRemoteObjectProxy(retryCount:proxyHandler:));
}

uint64_t sub_1B7671204(void *a1, uint64_t (*a2)(uint64_t, void (*)(_QWORD), uint64_t, uint64_t, uint64_t))
{
  uint64_t v2;

  return sub_1B7670E44(a1, *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(void (**)(_QWORD))(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

void sub_1B7671228(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

id sub_1B7671294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4;
  void *v5;
  id v6;

  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v5 = (void *)sub_1B76DBAB0();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, sel_initWithMachServiceName_options_, v5, a3);

  return v6;
}

uint64_t sub_1B767130C()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, sel_serviceName);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1B76DBAD4();

  return v3;
}

double sub_1B7671370@<D0>(_OWORD *a1@<X8>)
{
  void *v1;
  double result;

  if (objc_msgSend(v1, sel_exportedObject))
  {
    sub_1B76DBD50();
    swift_unknownObjectRelease();
  }
  else
  {
    result = 0.0;
    *a1 = 0u;
    a1[1] = 0u;
  }
  return result;
}

uint64_t sub_1B76713CC(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v2 = a1[3];
  if (v2)
  {
    v4 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v5 = *(_QWORD *)(v2 - 8);
    MEMORY[0x1E0C80A78](v4, v4);
    v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v5 + 16))(v7);
    v8 = sub_1B76DBEC4();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v2);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    v8 = 0;
  }
  objc_msgSend(v1, sel_setExportedObject_, v8);
  return swift_unknownObjectRelease();
}

uint64_t (*sub_1B76714A8(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1B76714F0(v2);
  return sub_1B76714EC;
}

void (*sub_1B76714F0(_QWORD *a1))(uint64_t *a1, char a2)
{
  void *v1;
  void *v2;
  char *v4;
  _OWORD *v5;

  v2 = v1;
  v4 = (char *)malloc(0x68uLL);
  *a1 = v4;
  v5 = v4 + 32;
  *((_QWORD *)v4 + 12) = v2;
  if (objc_msgSend(v2, sel_exportedObject))
  {
    sub_1B76DBD50();
    swift_unknownObjectRelease();
  }
  else
  {
    *v5 = 0u;
    *((_OWORD *)v4 + 3) = 0u;
  }
  sub_1B765DE40((uint64_t)v5, (uint64_t)v4);
  return sub_1B7671584;
}

void sub_1B7671584(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    sub_1B7670B8C(*a1, v2 + 64);
    v3 = *(_QWORD *)(v2 + 88);
    if (v3)
    {
      v4 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 88));
      v5 = *(_QWORD *)(v3 - 8);
      MEMORY[0x1E0C80A78](v4, v4);
      v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v5 + 16))(v7);
      v8 = sub_1B76DBEC4();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v3);
      __swift_destroy_boxed_opaque_existential_0(v2 + 64);
    }
    else
    {
      v8 = 0;
    }
    objc_msgSend(*(id *)(v2 + 96), sel_setExportedObject_, v8);
    swift_unknownObjectRelease();
    sub_1B765DE88(v2, &qword_1ED53B7A0);
  }
  else
  {
    v9 = *(_QWORD *)(v2 + 24);
    if (v9)
    {
      v10 = __swift_project_boxed_opaque_existential_1((_QWORD *)*a1, *(_QWORD *)(v2 + 24));
      v11 = *(_QWORD *)(v9 - 8);
      MEMORY[0x1E0C80A78](v10, v10);
      v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v11 + 16))(v13);
      v14 = sub_1B76DBEC4();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v9);
      __swift_destroy_boxed_opaque_existential_0(v2);
    }
    else
    {
      v14 = 0;
    }
    objc_msgSend(*(id *)(v2 + 96), sel_setExportedObject_, v14);
    swift_unknownObjectRelease();
  }
  free((void *)v2);
}

id sub_1B767173C()
{
  void *v0;

  return objc_msgSend(v0, sel_exportedInterface);
}

void sub_1B7671760(void *a1)
{
  void *v1;

  objc_msgSend(v1, sel_setExportedInterface_, a1);

}

void (*sub_1B7671794(_QWORD *a1))(id *a1)
{
  void *v1;

  a1[1] = v1;
  *a1 = objc_msgSend(v1, sel_exportedInterface);
  return sub_1B76717DC;
}

void sub_1B76717DC(id *a1)
{
  id v1;

  v1 = *a1;
  objc_msgSend(a1[1], sel_setExportedInterface_);

}

id sub_1B7671810()
{
  void *v0;

  return objc_msgSend(v0, sel_remoteObjectInterface);
}

void sub_1B7671834(void *a1)
{
  void *v1;

  objc_msgSend(v1, sel_setRemoteObjectInterface_, a1);

}

void (*sub_1B7671868(_QWORD *a1))(id *a1)
{
  void *v1;

  a1[1] = v1;
  *a1 = objc_msgSend(v1, sel_remoteObjectInterface);
  return sub_1B76718B0;
}

void sub_1B76718B0(id *a1)
{
  id v1;

  v1 = *a1;
  objc_msgSend(a1[1], sel_setRemoteObjectInterface_);

}

uint64_t (*sub_1B76718E4())()
{
  void *v0;
  uint64_t (*result)();

  result = (uint64_t (*)())objc_msgSend(v0, sel_interruptionHandler);
  if (result)
  {
    *(_QWORD *)(swift_allocObject() + 16) = result;
    return sub_1B767202C;
  }
  return result;
}

void sub_1B7671948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1B7671ACC(a1, a2, a3, a4, (uint64_t)&block_descriptor_35, (SEL *)&selRef_setInterruptionHandler_);
}

uint64_t (*sub_1B767195C(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1B76719A0(v2);
  return sub_1B76714EC;
}

void (*sub_1B76719A0(_QWORD *a1))(uint64_t a1, char a2)
{
  void *v1;
  void *v2;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t (*v7)();

  v2 = v1;
  v4 = malloc(0x48uLL);
  *a1 = v4;
  v4[8] = v2;
  v5 = objc_msgSend(v2, sel_interruptionHandler);
  if (v5)
  {
    v6 = v5;
    v5 = (_QWORD *)swift_allocObject();
    v5[2] = v6;
    v7 = sub_1B767202C;
  }
  else
  {
    v7 = 0;
  }
  v4[6] = v7;
  v4[7] = v5;
  return sub_1B7671A38;
}

void sub_1B7671A38(uint64_t a1, char a2)
{
  sub_1B7671C7C(a1, a2, (uint64_t)&block_descriptor_28, (SEL *)&selRef_setInterruptionHandler_, (uint64_t)&block_descriptor_25);
}

uint64_t (*sub_1B7671A54())()
{
  void *v0;
  uint64_t (*result)();

  result = (uint64_t (*)())objc_msgSend(v0, sel_invalidationHandler);
  if (result)
  {
    *(_QWORD *)(swift_allocObject() + 16) = result;
    return sub_1B767202C;
  }
  return result;
}

void sub_1B7671AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1B7671ACC(a1, a2, a3, a4, (uint64_t)&block_descriptor_18, (SEL *)&selRef_setInvalidationHandler_);
}

void sub_1B7671ACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, SEL *a6)
{
  void *v6;
  void *v8;
  _QWORD v9[6];

  if (a1)
  {
    v9[4] = a1;
    v9[5] = a2;
    v9[0] = MEMORY[0x1E0C809B0];
    v9[1] = 1107296256;
    v9[2] = sub_1B768C184;
    v9[3] = a5;
    v8 = _Block_copy(v9);
    swift_release();
  }
  else
  {
    v8 = 0;
  }
  objc_msgSend(v6, *a6, v8);
  _Block_release(v8);
}

uint64_t (*sub_1B7671B58(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1B7671BC8(v2);
  return sub_1B76714EC;
}

void sub_1B7671B9C(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_1B7671BC8(_QWORD *a1))(uint64_t a1, char a2)
{
  void *v1;
  void *v2;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t (*v7)();

  v2 = v1;
  v4 = malloc(0x48uLL);
  *a1 = v4;
  v4[8] = v2;
  v5 = objc_msgSend(v2, sel_invalidationHandler);
  if (v5)
  {
    v6 = v5;
    v5 = (_QWORD *)swift_allocObject();
    v5[2] = v6;
    v7 = sub_1B7671FEC;
  }
  else
  {
    v7 = 0;
  }
  v4[6] = v7;
  v4[7] = v5;
  return sub_1B7671C60;
}

void sub_1B7671C60(uint64_t a1, char a2)
{
  sub_1B7671C7C(a1, a2, (uint64_t)&block_descriptor_12, (SEL *)&selRef_setInvalidationHandler_, (uint64_t)&block_descriptor_9);
}

void sub_1B7671C7C(uint64_t a1, char a2, uint64_t a3, SEL *a4, uint64_t a5)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;

  v6 = *(_QWORD **)a1;
  v7 = *(_QWORD *)(*(_QWORD *)a1 + 48);
  if ((a2 & 1) != 0)
  {
    if (v7)
    {
      v8 = v6[7];
      v6[4] = v7;
      v6[5] = v8;
      *v6 = MEMORY[0x1E0C809B0];
      v6[1] = 1107296256;
      v6[2] = sub_1B768C184;
      v6[3] = a5;
      v9 = _Block_copy(v6);
      swift_retain();
      swift_release();
    }
    else
    {
      v9 = 0;
    }
    objc_msgSend((id)v6[8], *a4, v9);
    _Block_release(v9);
    sub_1B7671FB8(v6[6]);
  }
  else
  {
    if (v7)
    {
      v10 = v6[7];
      v6[4] = v7;
      v6[5] = v10;
      *v6 = MEMORY[0x1E0C809B0];
      v6[1] = 1107296256;
      v6[2] = sub_1B768C184;
      v6[3] = a3;
      v11 = _Block_copy(v6);
      swift_release();
    }
    else
    {
      v11 = 0;
    }
    objc_msgSend((id)v6[8], *a4, v11);
    _Block_release(v11);
  }
  free(v6);
}

uint64_t sub_1B7671D9C()
{
  void *v0;
  uint64_t v2;

  objc_msgSend(v0, sel_auditToken);
  return v2;
}

id sub_1B7671DD0()
{
  void *v0;

  return objc_msgSend(v0, sel_resume);
}

id sub_1B7671DE0()
{
  void *v0;

  return objc_msgSend(v0, sel_activate);
}

id sub_1B7671DF0()
{
  void *v0;

  return objc_msgSend(v0, sel_invalidate);
}

uint64_t _sSo15NSXPCConnectionC15ManagedSettingsE15setNonLaunchingyySbF_0()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(v0, sel__xpcConnection);
  xpc_connection_set_non_launching();
  return swift_unknownObjectRelease();
}

uint64_t sub_1B7671E44(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v4;
  _QWORD v6[6];

  v6[4] = a1;
  v6[5] = a2;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 1107296256;
  v6[2] = sub_1B7671228;
  v6[3] = &block_descriptor_6;
  v3 = _Block_copy(v6);
  swift_retain();
  v4 = objc_msgSend(v2, sel_remoteObjectProxyWithErrorHandler_, v3);
  _Block_release(v3);
  sub_1B76DBD50();
  swift_unknownObjectRelease();
  return swift_release();
}

uint64_t dispatch thunk of XPCConnectable.init(machServiceName:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of XPCConnectable.serviceName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of XPCConnectable.exportedObject.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of XPCConnectable.exportedObject.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of XPCConnectable.exportedObject.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of XPCConnectable.exportedInterface.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of XPCConnectable.exportedInterface.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of XPCConnectable.exportedInterface.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of XPCConnectable.remoteObjectInterface.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of XPCConnectable.remoteObjectInterface.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of XPCConnectable.remoteObjectInterface.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of XPCConnectable.interruptionHandler.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of XPCConnectable.interruptionHandler.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 104))();
}

uint64_t dispatch thunk of XPCConnectable.interruptionHandler.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t dispatch thunk of XPCConnectable.invalidationHandler.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of XPCConnectable.invalidationHandler.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 128))();
}

uint64_t dispatch thunk of XPCConnectable.invalidationHandler.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 136))();
}

uint64_t dispatch thunk of XPCConnectable.auditToken.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of XPCConnectable.resume()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t dispatch thunk of XPCConnectable.activate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

uint64_t dispatch thunk of XPCConnectable.invalidate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 176))();
}

uint64_t dispatch thunk of XPCConnectable.setNonLaunching(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 184))();
}

uint64_t dispatch thunk of XPCConnectable.remoteObjectProxyWithErrorHandler(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 192))();
}

uint64_t sub_1B7671FB8(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_1B7671FC8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1B7671FEC()
{
  uint64_t v0;

  return sub_1B768C17C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1B767203C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t sub_1B7672044(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 24) = result;
  return result;
}

uint64_t sub_1B767204C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 48);
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return sub_1B7671FB8(v3);
}

uint64_t sub_1B7672060(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  void (*v11)(void (*)(uint64_t), _QWORD *);
  _QWORD *v12;
  uint64_t v14;

  v3 = v2;
  if (qword_1ED53C0C0 != -1)
    swift_once();
  v6 = sub_1B76DB8B8();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED53B750);
  swift_bridgeObjectRetain_n();
  v7 = sub_1B76DB8A0();
  v8 = sub_1B76DBC84();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v14 = v10;
    *(_DWORD *)v9 = 136446210;
    swift_bridgeObjectRetain();
    sub_1B7669B50(a1, a2, &v14);
    sub_1B76DBD38();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1B7656000, v7, v8, "Fetching effective value for %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCA9590](v10, -1, -1);
    MEMORY[0x1BCCA9590](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v11 = *(void (**)(void (*)(uint64_t), _QWORD *))(v3 + 32);
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a1;
  v12[3] = a2;
  v12[4] = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  v11(sub_1B76729B8, v12);
  return swift_release();
}

void sub_1B7672254(uint64_t a1, uint64_t a2, unint64_t a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void **v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  NSObject *v44;
  os_log_type_t v45;
  _BOOL4 v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  char *v55;
  unint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  void *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  void (*v65)(char *, uint64_t);
  void (*v66)(char *, void **, uint64_t);
  char *v67;
  uint64_t v68;
  _QWORD *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t aBlock[6];
  uint64_t v78;

  v68 = a2;
  v69 = a4;
  v6 = *a4;
  v7 = sub_1B76DB9D8();
  v74 = *(_QWORD *)(v7 - 8);
  v75 = v7;
  MEMORY[0x1E0C80A78](v7, v8);
  v73 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1B76DB9F0();
  v71 = *(_QWORD *)(v10 - 8);
  v72 = v10;
  v12 = MEMORY[0x1E0C80A78](v10, v11);
  v70 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v6 + 80);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  v18 = MEMORY[0x1E0C80A78](v12, v17);
  v76 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v18, v19);
  v22 = (char *)&v63 - v21;
  MEMORY[0x1E0C80A78](v20, v23);
  v25 = (char *)&v63 - v24;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED53B678);
  v26 = sub_1B76DBF84();
  MEMORY[0x1E0C80A78](v26, v27);
  v29 = (void **)((char *)&v63 - v28);
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))((char *)&v63 - v28, a1, v26);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v31 = *v29;
    if (qword_1ED53C0C0 != -1)
      swift_once();
    v32 = sub_1B76DB8B8();
    __swift_project_value_buffer(v32, (uint64_t)qword_1ED53B750);
    swift_bridgeObjectRetain();
    v33 = v31;
    swift_bridgeObjectRetain();
    v34 = v31;
    v35 = sub_1B76DB8A0();
    v36 = sub_1B76DBC90();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = swift_slowAlloc();
      v38 = swift_slowAlloc();
      aBlock[0] = v38;
      *(_DWORD *)v37 = 136446466;
      swift_bridgeObjectRetain();
      v78 = sub_1B7669B50(v68, a3, aBlock);
      sub_1B76DBD38();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v37 + 12) = 2082;
      v78 = (uint64_t)v31;
      v39 = v31;
      v40 = sub_1B76DBB10();
      v78 = sub_1B7669B50(v40, v41, aBlock);
      sub_1B76DBD38();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1B7656000, v35, v36, "Failed to fetch effective value for %{public}s: %{public}s", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v38, -1, -1);
      MEMORY[0x1BCCA9590](v37, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    v66 = *(void (**)(char *, void **, uint64_t))(v15 + 32);
    v66(v25, v29, v14);
    if (qword_1ED53C0C0 != -1)
      swift_once();
    v42 = sub_1B76DB8B8();
    __swift_project_value_buffer(v42, (uint64_t)qword_1ED53B750);
    v43 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
    v67 = v25;
    v43(v22, v25, v14);
    swift_bridgeObjectRetain_n();
    v44 = sub_1B76DB8A0();
    v45 = sub_1B76DBC84();
    v46 = os_log_type_enabled(v44, v45);
    v47 = v76;
    if (v46)
    {
      v48 = swift_slowAlloc();
      v64 = v43;
      v49 = v48;
      v63 = swift_slowAlloc();
      aBlock[0] = v63;
      *(_DWORD *)v49 = 136446466;
      v65 = (void (*)(char *, uint64_t))(v49 + 4);
      v64(v47, v22, v14);
      v50 = sub_1B76DBB10();
      v78 = sub_1B7669B50(v50, v51, aBlock);
      sub_1B76DBD38();
      swift_bridgeObjectRelease();
      v65 = *(void (**)(char *, uint64_t))(v15 + 8);
      v65(v22, v14);
      *(_WORD *)(v49 + 12) = 2082;
      swift_bridgeObjectRetain();
      v78 = sub_1B7669B50(v68, a3, aBlock);
      v47 = v76;
      sub_1B76DBD38();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1B7656000, v44, v45, "Setting effective value %{public}s for %{public}s", (uint8_t *)v49, 0x16u);
      v52 = v63;
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v52, -1, -1);
      v53 = v49;
      v43 = v64;
      MEMORY[0x1BCCA9590](v53, -1, -1);

    }
    else
    {
      v65 = *(void (**)(char *, uint64_t))(v15 + 8);
      v65(v22, v14);

      swift_bridgeObjectRelease_n();
    }
    sub_1B7672EAC();
    v54 = (void *)sub_1B76DBCB4();
    v55 = v67;
    v43(v47, v67, v14);
    v56 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v57 = swift_allocObject();
    v58 = v69;
    *(_QWORD *)(v57 + 16) = v14;
    *(_QWORD *)(v57 + 24) = v58;
    v66((char *)(v57 + v56), (void **)v47, v14);
    aBlock[4] = (uint64_t)sub_1B7672F50;
    aBlock[5] = v57;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1B768C184;
    aBlock[3] = (uint64_t)&block_descriptor_0;
    v59 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    v60 = v70;
    sub_1B76DB9E4();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    sub_1B7672F84();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B098);
    sub_1B7672FCC();
    v61 = v73;
    v62 = v75;
    sub_1B76DBD5C();
    MEMORY[0x1BCCA8DEC](0, v60, v61, v59);
    _Block_release(v59);

    (*(void (**)(char *, uint64_t))(v74 + 8))(v61, v62);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v60, v72);
    v65(v55, v14);
  }
}

uint64_t sub_1B767298C()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1B76729B8(uint64_t a1)
{
  uint64_t v1;

  sub_1B7672254(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD **)(v1 + 32));
}

uint64_t sub_1B76729C4(uint64_t result, uint64_t a2)
{
  void (*v2)(uint64_t);

  v2 = *(void (**)(uint64_t))(result + 48);
  if (v2)
  {
    sub_1B7673018(*(_QWORD *)(result + 48));
    v2(a2);
    return sub_1B7671FB8((uint64_t)v2);
  }
  return result;
}

uint64_t sub_1B7672A24(uint64_t result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  __int128 v13[2];
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  if ((v2[3] & 1) == 0)
  {
    v3 = v2;
    v4 = *v2;
    v5 = v2[6];
    v3[6] = result;
    v3[7] = a2;
    swift_retain();
    sub_1B7671FB8(v5);
    sub_1B7672060(0x6C616974696E49, 0xE700000000000000);
    result = v3[2];
    v6 = *(_QWORD *)(result + 16);
    if (v6)
    {
      v7 = result + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_1B7672D50(v7, (uint64_t)v14);
        v8 = v15;
        v9 = v16;
        __swift_project_boxed_opaque_existential_1(v14, v15);
        v10 = swift_allocObject();
        swift_weakInit();
        sub_1B7672D50((uint64_t)v14, (uint64_t)v13);
        v11 = swift_allocObject();
        *(_QWORD *)(v11 + 16) = *(_QWORD *)(v4 + 80);
        *(_QWORD *)(v11 + 24) = v10;
        sub_1B7672DE4(v13, v11 + 32);
        v12 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v9 + 16);
        swift_retain();
        v12(sub_1B7672DFC, v11, v8, v9);
        swift_release();
        swift_release();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v14);
        v7 += 40;
        --v6;
      }
      while (v6);
      result = swift_bridgeObjectRelease();
    }
    *((_BYTE *)v3 + 24) = 1;
  }
  return result;
}

uint64_t sub_1B7672B9C(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = a2[3];
    v5 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v4);
    v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
    v7 = sub_1B76DBAD4();
    v9 = v8;

    sub_1B7672060(v7, v9);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B7672C48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  if (*(_BYTE *)(v0 + 24) == 1)
  {
    v1 = *(_QWORD *)(v0 + 16);
    v2 = *(_QWORD *)(v1 + 16);
    if (v2)
    {
      v3 = v1 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_1B7672D50(v3, (uint64_t)v8);
        v4 = v9;
        v5 = v10;
        __swift_project_boxed_opaque_existential_1(v8, v9);
        (*(void (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
        v3 += 40;
        --v2;
      }
      while (v2);
      swift_bridgeObjectRelease();
    }
    v6 = *(_QWORD *)(v0 + 48);
    *(_QWORD *)(v0 + 48) = 0;
    *(_QWORD *)(v0 + 56) = 0;
    result = sub_1B7671FB8(v6);
    *(_BYTE *)(v0 + 24) = 0;
  }
  return result;
}

uint64_t EffectiveNotifier.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  sub_1B7671FB8(*(_QWORD *)(v0 + 48));
  return v0;
}

uint64_t EffectiveNotifier.__deallocating_deinit()
{
  EffectiveNotifier.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1B7672D50(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1B7672D94()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B7672DB8()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  return swift_deallocObject();
}

uint64_t sub_1B7672DE4(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1B7672DFC()
{
  uint64_t v0;

  return sub_1B7672B9C(*(_QWORD *)(v0 + 24), (_QWORD *)(v0 + 32));
}

uint64_t sub_1B7672E0C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for EffectiveNotifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for EffectiveNotifier);
}

uint64_t method lookup function for EffectiveNotifier()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EffectiveNotifier.fetchAndSetValue(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of EffectiveNotifier.register(setter:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of EffectiveNotifier.deregister()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

unint64_t sub_1B7672EAC()
{
  unint64_t result;

  result = qword_1ED53B790;
  if (!qword_1ED53B790)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED53B790);
  }
  return result;
}

uint64_t sub_1B7672EE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1B7672F50()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80);
  return sub_1B76729C4(*(_QWORD *)(v0 + 24), v0 + ((v1 + 32) & ~v1));
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

unint64_t sub_1B7672F84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED53B090;
  if (!qword_1ED53B090)
  {
    v1 = sub_1B76DB9D8();
    result = MEMORY[0x1BCCA94E8](MEMORY[0x1E0DEF510], v1);
    atomic_store(result, (unint64_t *)&qword_1ED53B090);
  }
  return result;
}

unint64_t sub_1B7672FCC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED53B0A0;
  if (!qword_1ED53B0A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED53B098);
    result = MEMORY[0x1BCCA94E8](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED53B0A0);
  }
  return result;
}

uint64_t sub_1B7673018(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

NSObject __swiftcall Bool.persistableValue()()
{
  char v0;

  return (NSObject)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, v0 & 1);
}

id sub_1B7673060()
{
  unsigned __int8 *v0;

  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, *v0);
}

uint64_t sub_1B7673094@<X0>(void *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = _sSb15ManagedSettingsE5value4fromSbSgSo8NSObjectCSg_tFZ_0(a1);
  *a2 = result;
  return result;
}

NSObject __swiftcall Int.persistableValue()()
{
  uint64_t v0;

  return (NSObject)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v0);
}

id static Int.value(from:)(void *a1)
{
  return sub_1B768A39C(a1);
}

id sub_1B7673104()
{
  _QWORD *v0;

  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, *v0);
}

id sub_1B7673138@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id result;
  char v4;

  result = sub_1B768A39C(a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

NSObject __swiftcall String.persistableValue()()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
  swift_bridgeObjectRetain();
  v1 = (void *)sub_1B76DBAB0();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithString_, v1);

  return (NSObject)v2;
}

uint64_t static String.value(from:)(uint64_t result)
{
  if (result)
  {
    objc_opt_self();
    result = swift_dynamicCastObjCClass();
    if (result)
    {
      sub_1B76DBAC8();
      return 0;
    }
  }
  return result;
}

id sub_1B7673248()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
  swift_bridgeObjectRetain();
  v1 = (void *)sub_1B76DBAB0();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithString_, v1);

  return v2;
}

uint64_t sub_1B76732BC@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  if (result)
  {
    objc_opt_self();
    result = swift_dynamicCastObjCClass();
    if (result)
      result = sub_1B76DBAC8();
  }
  *a2 = 0;
  a2[1] = 0;
  return result;
}

NSObject __swiftcall Token.persistableValue()()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;

  v1 = *v0;
  v2 = v0[1];
  sub_1B765DF7C(0, &qword_1ED53B5E8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177830);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1B76DCB70;
  v4 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v3 + 32) = 1635017060;
  *(_QWORD *)(v3 + 40) = 0xE400000000000000;
  *(_QWORD *)(v3 + 88) = MEMORY[0x1E0CB0338];
  *(_QWORD *)(v3 + 56) = v4;
  *(_QWORD *)(v3 + 64) = v1;
  *(_QWORD *)(v3 + 72) = v2;
  sub_1B765DDFC(v1, v2);
  v5 = (void *)sub_1B76DBC78();
  v6 = sub_1B76DBC6C();

  return (NSObject)v6;
}

void sub_1B76733E8(void *a1@<X0>, __int128 *a2@<X8>)
{
  __int128 v3;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __int128 v17;
  _OWORD v18[2];
  uint64_t v19[4];

  v3 = xmmword_1B76DC6F0;
  if (a1)
  {
    objc_opt_self();
    v5 = swift_dynamicCastObjCClass();
    if (v5)
    {
      v6 = (void *)v5;
      *(_QWORD *)&v18[0] = 1635017060;
      *((_QWORD *)&v18[0] + 1) = 0xE400000000000000;
      v7 = a1;
      v8 = objc_msgSend(v6, sel___swift_objectForKeyedSubscript_, sub_1B76DBEE8());
      swift_unknownObjectRelease();
      if (v8)
      {
        sub_1B76DBD50();
        swift_unknownObjectRelease();

      }
      else
      {

        memset(v18, 0, sizeof(v18));
      }
      sub_1B765DE40((uint64_t)v18, (uint64_t)v19);
      if (v19[3])
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          v3 = v17;
          goto LABEL_16;
        }
      }
      else
      {
        sub_1B7670BD4((uint64_t)v19);
      }
    }
    if (qword_1EF177220 != -1)
      swift_once();
    v9 = sub_1B76DB8B8();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EF177E18);
    v10 = a1;
    v11 = sub_1B76DB8A0();
    v12 = sub_1B76DBC90();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v19[0] = v14;
      *(_DWORD *)v13 = 136446210;
      *(_QWORD *)&v18[0] = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774F8);
      v15 = sub_1B76DBD14();
      *(_QWORD *)&v18[0] = sub_1B7669B50(v15, v16, v19);
      sub_1B76DBD38();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B7656000, v11, v12, "Persistable value %{public}s not decodable to Token", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v14, -1, -1);
      MEMORY[0x1BCCA9590](v13, -1, -1);

    }
    else
    {

    }
    v3 = xmmword_1B76DC6F0;
  }
LABEL_16:
  *a2 = v3;
}

void static Token.value(from:)(void *a1@<X0>, __int128 *a2@<X8>)
{
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  __int128 v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD v19[2];
  __int128 v20;
  uint64_t v21;

  if (!a1)
  {
LABEL_16:
    v8 = xmmword_1B76DC6F0;
    goto LABEL_17;
  }
  objc_opt_self();
  v4 = swift_dynamicCastObjCClass();
  if (!v4)
  {
LABEL_11:
    if (qword_1EF177220 != -1)
      swift_once();
    v9 = sub_1B76DB8B8();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EF177E18);
    v10 = a1;
    v11 = sub_1B76DB8A0();
    v12 = sub_1B76DBC90();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      *(_QWORD *)&v20 = v14;
      *(_DWORD *)v13 = 136446210;
      *(_QWORD *)&v19[0] = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774F8);
      v15 = sub_1B76DBD14();
      *(_QWORD *)&v19[0] = sub_1B7669B50(v15, v16, (uint64_t *)&v20);
      sub_1B76DBD38();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B7656000, v11, v12, "Persistable value %{public}s not decodable to Token", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v14, -1, -1);
      MEMORY[0x1BCCA9590](v13, -1, -1);

    }
    else
    {

    }
    goto LABEL_16;
  }
  v5 = (void *)v4;
  *(_QWORD *)&v19[0] = 1635017060;
  *((_QWORD *)&v19[0] + 1) = 0xE400000000000000;
  swift_bridgeObjectRetain();
  v6 = a1;
  v7 = objc_msgSend(v5, sel___swift_objectForKeyedSubscript_, sub_1B76DBEE8());
  swift_unknownObjectRelease();
  if (v7)
  {
    sub_1B76DBD50();
    swift_unknownObjectRelease();

  }
  else
  {

    memset(v19, 0, sizeof(v19));
  }
  sub_1B765DE40((uint64_t)v19, (uint64_t)&v20);
  if (!v21)
  {
    swift_bridgeObjectRelease();
    sub_1B7670BD4((uint64_t)&v20);
    goto LABEL_11;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  swift_bridgeObjectRelease();
  Token.init(data:)(v17, v18, &v20);
  v8 = v20;
LABEL_17:
  *a2 = v8;
}

void sub_1B767398C(void *a1@<X0>, __int128 *a2@<X8>)
{
  static Token.value(from:)(a1, a2);
}

NSObject __swiftcall Application.persistableValue()()
{
  return (NSObject)sub_1B7673C74(0xD000000000000010, 0x80000001B76E2790, (void (*)(uint64_t, unint64_t))sub_1B765DF08, (void (*)(uint64_t, unint64_t))sub_1B765DF1C);
}

void static Application.value(from:)(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  int v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  if (!a1 || (objc_opt_self(), (v4 = swift_dynamicCastObjCClass()) == 0))
  {
LABEL_25:
    v9 = 0;
    v13 = 0;
    v14 = 0;
    v10 = 1;
    goto LABEL_26;
  }
  v5 = (void *)v4;
  *(_QWORD *)&v19 = 0xD000000000000010;
  *((_QWORD *)&v19 + 1) = 0x80000001B76E2790;
  v6 = a1;
  v7 = objc_msgSend(v5, sel___swift_objectForKeyedSubscript_, sub_1B76DBEE8());
  swift_unknownObjectRelease();
  if (v7)
  {
    sub_1B76DBD50();
    swift_unknownObjectRelease();
  }
  else
  {
    v17 = 0u;
    v18 = 0u;
  }
  sub_1B765DE40((uint64_t)&v17, (uint64_t)&v19);
  if (v20)
  {
    v8 = swift_dynamicCast();
    if (v8)
      v9 = v15;
    else
      v9 = 0;
    if (v8)
      v10 = v16;
    else
      v10 = 0;
  }
  else
  {
    sub_1B7670BD4((uint64_t)&v19);
    v9 = 0;
    v10 = 0;
  }
  *(_QWORD *)&v17 = 0x6E656B6F74;
  *((_QWORD *)&v17 + 1) = 0xE500000000000000;
  v11 = objc_msgSend(v5, sel___swift_objectForKeyedSubscript_, sub_1B76DBEE8());
  swift_unknownObjectRelease();
  if (v11)
  {
    sub_1B76DBD50();
    swift_unknownObjectRelease();
  }
  else
  {
    v17 = 0u;
    v18 = 0u;
  }
  sub_1B765DE40((uint64_t)&v17, (uint64_t)&v19);
  if (!v20)
  {

    sub_1B7670BD4((uint64_t)&v19);
    goto LABEL_23;
  }
  sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
  if ((swift_dynamicCast() & 1) == 0)
  {

LABEL_23:
    v13 = 0;
    v14 = 0xF000000000000000;
    if (!v10)
      goto LABEL_24;
    goto LABEL_26;
  }
  v12 = v15;
  sub_1B76733E8(v15, &v19);

  v14 = *((_QWORD *)&v19 + 1);
  v13 = v19;
  if (!v10)
  {
LABEL_24:
    if (v14 >> 60 != 15)
    {
      v9 = 0;
      v10 = 0;
      goto LABEL_26;
    }
    goto LABEL_25;
  }
LABEL_26:
  *a2 = v9;
  a2[1] = v10;
  a2[2] = v13;
  a2[3] = v14;
  a2[4] = 0;
  a2[5] = 0;
}

NSObject __swiftcall ActivityCategory.persistableValue()()
{
  return (NSObject)sub_1B7673C74(0x696669746E656469, 0xEA00000000007265, (void (*)(uint64_t, unint64_t))sub_1B765E0D4, (void (*)(uint64_t, unint64_t))sub_1B765E0D8);
}

id sub_1B7673C74(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, unint64_t), void (*a4)(uint64_t, unint64_t))
{
  _QWORD *v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;

  v6 = v4[1];
  v8 = v4[2];
  v7 = v4[3];
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E08]), sel_init);
  if (v6)
  {
    v10 = (void *)sub_1B76DBAB0();
    objc_msgSend(v9, sel___swift_setObject_forKeyedSubscript_, v10, sub_1B76DBEE8());

    swift_unknownObjectRelease();
  }
  if (v7 >> 60 != 15)
  {
    v11 = MEMORY[0x1E0DEA968];
    sub_1B765DF7C(0, &qword_1ED53B5E8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177830);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1B76DCB70;
    *(_QWORD *)(v12 + 32) = 1635017060;
    *(_QWORD *)(v12 + 40) = 0xE400000000000000;
    *(_QWORD *)(v12 + 88) = MEMORY[0x1E0CB0338];
    *(_QWORD *)(v12 + 56) = v11;
    *(_QWORD *)(v12 + 64) = v8;
    *(_QWORD *)(v12 + 72) = v7;
    a3(v8, v7);
    sub_1B765DDFC(v8, v7);
    v13 = (void *)sub_1B76DBC78();
    v14 = (void *)sub_1B76DBC6C();

    objc_msgSend(v9, sel___swift_setObject_forKeyedSubscript_, v14, sub_1B76DBEE8());
    a4(v8, v7);

    swift_unknownObjectRelease();
  }
  return v9;
}

void static ActivityCategory.value(from:)(void *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v4;
  id v5;
  id v6;
  unint64_t v7;
  int v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  if (!a1)
    goto LABEL_31;
  objc_opt_self();
  v4 = (void *)swift_dynamicCastObjCClass();
  if (!v4)
  {
    v7 = 0xF000000000000000;
LABEL_26:
    if (qword_1EF177220 != -1)
      swift_once();
    v13 = sub_1B76DB8B8();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EF177E18);
    v14 = a1;
    v15 = sub_1B76DB8A0();
    v16 = sub_1B76DBC90();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      *(_QWORD *)&v25 = v20;
      *(_DWORD *)v17 = 136446210;
      *(_QWORD *)&v23 = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774F8);
      v18 = sub_1B76DBD14();
      *(_QWORD *)&v23 = sub_1B7669B50(v18, v19, (uint64_t *)&v25);
      sub_1B76DBD38();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B7656000, v15, v16, "Persistable value %{public}s not decodable to ActivityCategory", v17, 0xCu);
      v10 = 1;
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v20, -1, -1);
      MEMORY[0x1BCCA9590](v17, -1, -1);

      sub_1B765DF1C((uint64_t)v4, v7);
      v9 = 0;
      v4 = 0;
      v7 = 0;
      goto LABEL_32;
    }
    sub_1B765DF1C((uint64_t)v4, v7);

LABEL_31:
    v9 = 0;
    v4 = 0;
    v7 = 0;
    v10 = 1;
    goto LABEL_32;
  }
  *(_QWORD *)&v25 = 0x696669746E656469;
  *((_QWORD *)&v25 + 1) = 0xEA00000000007265;
  v5 = a1;
  v6 = objc_msgSend(v4, sel___swift_objectForKeyedSubscript_, sub_1B76DBEE8());
  swift_unknownObjectRelease();
  if (v6)
  {
    sub_1B76DBD50();
    swift_unknownObjectRelease();
  }
  else
  {
    v23 = 0u;
    v24 = 0u;
  }
  sub_1B765DE40((uint64_t)&v23, (uint64_t)&v25);
  if (v26)
  {
    v8 = swift_dynamicCast();
    if (v8)
      v9 = v21;
    else
      v9 = 0;
    if (v8)
      v10 = v22;
    else
      v10 = 0;
  }
  else
  {
    sub_1B7670BD4((uint64_t)&v25);
    v9 = 0;
    v10 = 0;
  }
  *(_QWORD *)&v23 = 0x6E656B6F74;
  *((_QWORD *)&v23 + 1) = 0xE500000000000000;
  v11 = objc_msgSend(v4, sel___swift_objectForKeyedSubscript_, sub_1B76DBEE8());
  swift_unknownObjectRelease();
  if (v11)
  {
    sub_1B76DBD50();
    swift_unknownObjectRelease();
  }
  else
  {
    v23 = 0u;
    v24 = 0u;
  }
  sub_1B765DE40((uint64_t)&v23, (uint64_t)&v25);
  if (!v26)
  {

    sub_1B7670BD4((uint64_t)&v25);
    goto LABEL_24;
  }
  sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
  if ((swift_dynamicCast() & 1) == 0)
  {

LABEL_24:
    v4 = 0;
    v7 = 0xF000000000000000;
    if (!v10)
      goto LABEL_25;
    goto LABEL_32;
  }
  v12 = v21;
  sub_1B76733E8(v21, &v25);

  v7 = *((_QWORD *)&v25 + 1);
  v4 = (void *)v25;
  if (!v10)
  {
LABEL_25:
    if (v7 >> 60 != 15)
    {
      v9 = 0;
      v10 = 0;
      goto LABEL_32;
    }
    goto LABEL_26;
  }
LABEL_32:
  *a2 = v9;
  a2[1] = v10;
  a2[2] = v4;
  a2[3] = v7;
  a2[4] = 0;
  a2[5] = 0;
}

NSObject __swiftcall GameCenterSettings.OtherPlayerTypes.persistableValue()()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
  v1 = (void *)sub_1B76DBAB0();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithString_, v1);

  return (NSObject)v2;
}

void static GameCenterSettings.OtherPlayerTypes.value(from:)(void *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_1B767A05C(a1, (void (*)(uint64_t))GameCenterSettings.OtherPlayerTypes.init(rawValue:), "Persistable value %{public}s not decodable to GameCenterSettings.OtherPlayerTypes", 3, a2);
}

id sub_1B7674344()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
  v1 = (void *)sub_1B76DBAB0();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithString_, v1);

  return v2;
}

NSObject __swiftcall Data.persistableValue()()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;

  v2 = v1;
  v3 = v0;
  v4 = objc_allocWithZone(MEMORY[0x1E0C99D50]);
  sub_1B765DDFC(v3, v2);
  v5 = (void *)sub_1B76DB81C();
  v6 = objc_msgSend(v4, sel_initWithData_, v5);
  sub_1B765DEC4(v3, v2);

  return (NSObject)v6;
}

uint64_t static Data.value(from:)(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  if (!a1)
    return 0;
  objc_opt_self();
  if (!swift_dynamicCastObjCClass())
  {
    if (qword_1EF177220 != -1)
      swift_once();
    v4 = sub_1B76DB8B8();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EF177E18);
    v5 = a1;
    v6 = sub_1B76DB8A0();
    v7 = sub_1B76DBC90();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      v13 = v9;
      *(_DWORD *)v8 = 136446210;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774F8);
      v10 = sub_1B76DBD14();
      sub_1B7669B50(v10, v11, &v13);
      sub_1B76DBD38();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B7656000, v6, v7, "Persistable value %{public}s not decodable to Data", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v9, -1, -1);
      MEMORY[0x1BCCA9590](v8, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  v2 = a1;
  v3 = sub_1B76DB828();

  return v3;
}

id sub_1B7674684()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  id v3;
  void *v4;
  id v5;

  v1 = *v0;
  v2 = v0[1];
  v3 = objc_allocWithZone(MEMORY[0x1E0C99D50]);
  sub_1B765DDFC(v1, v2);
  v4 = (void *)sub_1B76DB81C();
  v5 = objc_msgSend(v3, sel_initWithData_, v4);
  sub_1B765DEC4(v1, v2);

  return v5;
}

uint64_t sub_1B7674700@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = static Data.value(from:)(a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

NSObject __swiftcall WebDomain.persistableValue()()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;

  v1 = v0[1];
  v3 = v0[2];
  v2 = v0[3];
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E08]), sel_init);
  if (v1)
  {
    v5 = (void *)sub_1B76DBAB0();
    objc_msgSend(v4, sel___swift_setObject_forKeyedSubscript_, v5, sub_1B76DBEE8(), 0x6E69616D6F64, 0xE600000000000000);

    swift_unknownObjectRelease();
  }
  if (v2 >> 60 != 15)
  {
    v6 = MEMORY[0x1E0DEA968];
    sub_1B765DF7C(0, &qword_1ED53B5E8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177830);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1B76DCB70;
    *(_QWORD *)(v7 + 32) = 1635017060;
    *(_QWORD *)(v7 + 40) = 0xE400000000000000;
    *(_QWORD *)(v7 + 88) = MEMORY[0x1E0CB0338];
    *(_QWORD *)(v7 + 56) = v6;
    *(_QWORD *)(v7 + 64) = v3;
    *(_QWORD *)(v7 + 72) = v2;
    sub_1B765DF08(v3, v2);
    sub_1B765DDFC(v3, v2);
    v8 = (void *)sub_1B76DBC78();
    v9 = (void *)sub_1B76DBC6C();

    objc_msgSend(v4, sel___swift_setObject_forKeyedSubscript_, v9, sub_1B76DBEE8(), 0x6E656B6F74, 0xE500000000000000);
    sub_1B765DF1C(v3, v2);

    swift_unknownObjectRelease();
  }
  return (NSObject)v4;
}

void static WebDomain.value(from:)(void *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v4;
  id v5;
  id v6;
  unint64_t v7;
  int v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  if (!a1)
    goto LABEL_31;
  objc_opt_self();
  v4 = (void *)swift_dynamicCastObjCClass();
  if (!v4)
  {
    v7 = 0xF000000000000000;
LABEL_26:
    if (qword_1EF177220 != -1)
      swift_once();
    v13 = sub_1B76DB8B8();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EF177E18);
    v14 = a1;
    v15 = sub_1B76DB8A0();
    v16 = sub_1B76DBC90();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      *(_QWORD *)&v25 = v20;
      *(_DWORD *)v17 = 136446210;
      *(_QWORD *)&v23 = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774F8);
      v18 = sub_1B76DBD14();
      *(_QWORD *)&v23 = sub_1B7669B50(v18, v19, (uint64_t *)&v25);
      sub_1B76DBD38();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B7656000, v15, v16, "Persistable value %{public}s not decodable to WebDomain", v17, 0xCu);
      v10 = 1;
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v20, -1, -1);
      MEMORY[0x1BCCA9590](v17, -1, -1);

      sub_1B765DF1C((uint64_t)v4, v7);
      v9 = 0;
      v4 = 0;
      v7 = 0;
      goto LABEL_32;
    }
    sub_1B765DF1C((uint64_t)v4, v7);

LABEL_31:
    v9 = 0;
    v4 = 0;
    v7 = 0;
    v10 = 1;
    goto LABEL_32;
  }
  *(_QWORD *)&v25 = 0x6E69616D6F64;
  *((_QWORD *)&v25 + 1) = 0xE600000000000000;
  v5 = a1;
  v6 = objc_msgSend(v4, sel___swift_objectForKeyedSubscript_, sub_1B76DBEE8());
  swift_unknownObjectRelease();
  if (v6)
  {
    sub_1B76DBD50();
    swift_unknownObjectRelease();
  }
  else
  {
    v23 = 0u;
    v24 = 0u;
  }
  sub_1B765DE40((uint64_t)&v23, (uint64_t)&v25);
  if (v26)
  {
    v8 = swift_dynamicCast();
    if (v8)
      v9 = v21;
    else
      v9 = 0;
    if (v8)
      v10 = v22;
    else
      v10 = 0;
  }
  else
  {
    sub_1B7670BD4((uint64_t)&v25);
    v9 = 0;
    v10 = 0;
  }
  *(_QWORD *)&v23 = 0x6E656B6F74;
  *((_QWORD *)&v23 + 1) = 0xE500000000000000;
  v11 = objc_msgSend(v4, sel___swift_objectForKeyedSubscript_, sub_1B76DBEE8());
  swift_unknownObjectRelease();
  if (v11)
  {
    sub_1B76DBD50();
    swift_unknownObjectRelease();
  }
  else
  {
    v23 = 0u;
    v24 = 0u;
  }
  sub_1B765DE40((uint64_t)&v23, (uint64_t)&v25);
  if (!v26)
  {

    sub_1B7670BD4((uint64_t)&v25);
    goto LABEL_24;
  }
  sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
  if ((swift_dynamicCast() & 1) == 0)
  {

LABEL_24:
    v4 = 0;
    v7 = 0xF000000000000000;
    if (!v10)
      goto LABEL_25;
    goto LABEL_32;
  }
  v12 = v21;
  sub_1B76733E8(v21, &v25);

  v7 = *((_QWORD *)&v25 + 1);
  v4 = (void *)v25;
  if (!v10)
  {
LABEL_25:
    if (v7 >> 60 != 15)
    {
      v9 = 0;
      v10 = 0;
      goto LABEL_32;
    }
    goto LABEL_26;
  }
LABEL_32:
  *a2 = v9;
  a2[1] = v10;
  a2[2] = v4;
  a2[3] = v7;
}

id Set<>.persistableValue()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  _QWORD v11[8];

  v11[7] = a1;
  v11[2] = a2;
  v11[3] = a3;
  v11[4] = a4;
  v4 = sub_1B76DBC30();
  v5 = MEMORY[0x1BCCA94E8](MEMORY[0x1E0DEB3E0], v4);
  sub_1B7674DE4((void (*)(char *, char *))sub_1B768A58C, (uint64_t)v11, v4, MEMORY[0x1E0DEE9B8] + 8, MEMORY[0x1E0DEDCE8], v5, MEMORY[0x1E0DEDD18], v6);
  v7 = objc_allocWithZone(MEMORY[0x1E0C99D20]);
  v8 = (void *)sub_1B76DBB64();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v7, sel_initWithArray_, v8);

  return v9;
}

uint64_t sub_1B7674DE4(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  void (*v27)(char *, _QWORD);
  void (*v28)(char *);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *);
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char v46[32];
  uint64_t v47;

  v33 = a5;
  v34 = a8;
  v41 = a1;
  v42 = a2;
  v32 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v43 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v13 = MEMORY[0x1E0C80A78](AssociatedTypeWitness, v12);
  v15 = (char *)&v32 - v14;
  MEMORY[0x1E0C80A78](v13, v16);
  v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = swift_getAssociatedTypeWitness();
  v35 = *(_QWORD *)(v19 - 8);
  v36 = v19;
  MEMORY[0x1E0C80A78](v19, v20);
  v22 = (char *)&v32 - v21;
  v23 = sub_1B76DBC48();
  if (!v23)
    return sub_1B76DBB94();
  v39 = AssociatedTypeWitness;
  v24 = v23;
  v47 = sub_1B76DBDF8();
  v37 = sub_1B76DBE04();
  sub_1B76DBDE0();
  v40 = v8;
  result = sub_1B76DBC3C();
  if ((v24 & 0x8000000000000000) == 0)
  {
    v26 = v24;
    v38 = v18;
    while (v26)
    {
      v44 = v26;
      v27 = (void (*)(char *, _QWORD))sub_1B76DBC60();
      v28 = *(void (**)(char *))(v11 + 16);
      v29 = v11;
      v30 = v39;
      v28(v15);
      v27(v46, 0);
      v31 = v45;
      v41(v15, v43);
      if (v31)
      {
        (*(void (**)(char *, uint64_t))(v29 + 8))(v15, v30);
        (*(void (**)(char *, uint64_t))(v35 + 8))(v22, v36);
        swift_release();
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v32 + 32))(v34, v43, v33);
      }
      v45 = 0;
      (*(void (**)(char *, uint64_t))(v29 + 8))(v15, v30);
      sub_1B76DBDEC();
      result = sub_1B76DBC54();
      v26 = v44 - 1;
      v11 = v29;
      if (v44 == 1)
      {
        (*(void (**)(char *, uint64_t))(v35 + 8))(v22, v36);
        return v47;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1B76750D4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int128 v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  void *v36;
  uint64_t v37[4];
  _OWORD v38[2];
  uint64_t v39[3];
  uint64_t v40;
  uint64_t v41;

  v2 = sub_1B76DB7BC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return 0;
  objc_opt_self();
  if (!swift_dynamicCastObjCClass())
  {
    if (qword_1EF177220 != -1)
      swift_once();
    v23 = sub_1B76DB8B8();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EF177E18);
    v24 = a1;
    v25 = sub_1B76DB8A0();
    v26 = sub_1B76DBC90();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v39[0] = v28;
      *(_DWORD *)v27 = 136446210;
      *(_QWORD *)&v38[0] = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774F8);
      v29 = sub_1B76DBD14();
      *(_QWORD *)&v38[0] = sub_1B7669B50(v29, v30, v39);
      sub_1B76DBD38();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B7656000, v25, v26, "Persistable value %{public}s not decodable to set", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v28, -1, -1);
      MEMORY[0x1BCCA9590](v27, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  v32 = v3;
  v41 = MEMORY[0x1E0DEE9E8];
  v31 = a1;
  sub_1B76DBD08();
  sub_1B765DAD0((unint64_t *)&qword_1EF178050, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58], MEMORY[0x1E0CAFB80]);
  sub_1B76DBD2C();
  if (v40)
  {
    *(_QWORD *)&v7 = 136446210;
    v33 = v7;
    v34 = MEMORY[0x1E0DEE9B8] + 8;
    do
    {
      sub_1B765DF30(v39, v38);
      sub_1B765DF40((uint64_t)v38, (uint64_t)v37);
      sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
      if (swift_dynamicCast())
      {
        v8 = v36;
        objc_opt_self();
        if (swift_dynamicCastObjCClass())
        {
          sub_1B76DBAD4();
          v9 = v8;
          v10 = sub_1B76DBE70();
          swift_bridgeObjectRelease();
          switch(v10)
          {
            case 0:
              v35 = 0;
              break;
            case 1:
              v35 = 1;
              break;
            case 2:
              v21 = 2;
              goto LABEL_23;
            case 3:
              v21 = 3;
              goto LABEL_23;
            case 4:
              v21 = 4;
              goto LABEL_23;
            default:
              v21 = 5;
LABEL_23:
              v35 = v21;
              break;
          }
        }
        else
        {
          v11 = qword_1EF177220;
          v12 = v8;
          if (v11 != -1)
            swift_once();
          v13 = sub_1B76DB8B8();
          __swift_project_value_buffer(v13, (uint64_t)qword_1EF177E18);
          v14 = v12;
          v15 = sub_1B76DB8A0();
          v16 = sub_1B76DBC90();
          if (os_log_type_enabled(v15, v16))
          {
            v17 = swift_slowAlloc();
            v18 = swift_slowAlloc();
            v36 = v8;
            v37[0] = v18;
            *(_DWORD *)v17 = v33;
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774F8);
            v19 = sub_1B76DBD14();
            *(_QWORD *)(v17 + 4) = sub_1B7669B50(v19, v20, v37);

            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1B7656000, v15, v16, "Persistable value %{public}s not decodable to UserSafetySettings.ScannableService", (uint8_t *)v17, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1BCCA9590](v18, -1, -1);
            MEMORY[0x1BCCA9590](v17, -1, -1);

          }
          else
          {

          }
          v35 = 5;
        }

        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1780B8);
        if ((swift_dynamicCast() & 1) != 0)
        {
          if (LOBYTE(v37[0]) != 5)
            sub_1B767E188((uint64_t)v37, v37[0]);
        }
        else
        {
          LOBYTE(v37[0]) = 5;
        }

      }
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
      sub_1B76DBD2C();
    }
    while (v40);
  }
  (*(void (**)(char *, uint64_t))(v32 + 8))(v6, v2);

  return v41;
}

uint64_t sub_1B7675660(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  id v10;
  __int128 *v11;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  char *v24;
  __int128 v25;
  __int128 *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _QWORD v30[5];
  _OWORD v31[2];
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35[3];

  v2 = sub_1B76DB7BC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return 0;
  objc_opt_self();
  if (!swift_dynamicCastObjCClass())
  {
    if (qword_1EF177220 != -1)
      swift_once();
    v13 = sub_1B76DB8B8();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EF177E18);
    v14 = a1;
    v15 = sub_1B76DB8A0();
    v16 = sub_1B76DBC90();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      *(_QWORD *)&v35[0] = v18;
      *(_DWORD *)v17 = 136446210;
      v30[0] = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774F8);
      v19 = sub_1B76DBD14();
      v30[0] = sub_1B7669B50(v19, v20, (uint64_t *)v35);
      sub_1B76DBD38();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B7656000, v15, v16, "Persistable value %{public}s not decodable to set", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v18, -1, -1);
      MEMORY[0x1BCCA9590](v17, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  v23 = v3;
  v34 = MEMORY[0x1E0DEE9E8];
  v22 = a1;
  sub_1B76DBD08();
  sub_1B765DAD0((unint64_t *)&qword_1EF178050, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58], MEMORY[0x1E0CAFB80]);
  sub_1B76DBD2C();
  if (v33)
  {
    v26 = &v28;
    v25 = xmmword_1B76DC6E0;
    v24 = v6;
    do
    {
      sub_1B765DF30(&v32, v31);
      sub_1B765DF40((uint64_t)v31, (uint64_t)v30);
      sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
      if (swift_dynamicCast())
      {
        v9 = (void *)v27;
        v10 = (id)v27;
        static Application.value(from:)(v9, v30);

        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177570);
        if ((swift_dynamicCast() & 1) == 0)
        {
          v27 = v25;
          v11 = v26;
          *v26 = 0u;
          v11[1] = 0u;
LABEL_12:

          sub_1B765E02C(v27, *((uint64_t *)&v27 + 1), v28, *((uint64_t *)&v28 + 1), v29, *((uint64_t *)&v29 + 1), (void (*)(uint64_t, uint64_t))sub_1B765DF1C);
          goto LABEL_6;
        }
        if (*((_QWORD *)&v27 + 1) == 1)
          goto LABEL_12;
        v35[0] = v27;
        v35[1] = v28;
        v35[2] = v29;
        sub_1B767F2D8((uint64_t)v30, v35, (void (*)(uint64_t *))Application.hash(into:), (void (*)(uint64_t, uint64_t))sub_1B765DF08, &qword_1EF1780C0, (void (*)(uint64_t, unint64_t))sub_1B765DF1C);

        v7 = v30[2];
        v8 = v30[3];
        swift_bridgeObjectRelease();
        sub_1B765DF1C(v7, v8);
        v6 = v24;
        swift_bridgeObjectRelease();
      }
LABEL_6:
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);
      sub_1B76DBD2C();
    }
    while (v33);
  }
  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v2);

  return v34;
}

uint64_t sub_1B7675B20(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  id v10;
  uint64_t v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26[4];
  _OWORD v27[2];
  uint64_t v28[3];
  uint64_t v29;
  uint64_t v30;

  v2 = sub_1B76DB7BC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return 0;
  objc_opt_self();
  if (!swift_dynamicCastObjCClass())
  {
    if (qword_1EF177220 != -1)
      swift_once();
    v12 = sub_1B76DB8B8();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EF177E18);
    v13 = a1;
    v14 = sub_1B76DB8A0();
    v15 = sub_1B76DBC90();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v28[0] = v17;
      *(_DWORD *)v16 = 136446210;
      *(_QWORD *)&v27[0] = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774F8);
      v18 = sub_1B76DBD14();
      *(_QWORD *)&v27[0] = sub_1B7669B50(v18, v19, v28);
      sub_1B76DBD38();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B7656000, v14, v15, "Persistable value %{public}s not decodable to set", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v17, -1, -1);
      MEMORY[0x1BCCA9590](v16, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  v21 = v3;
  v30 = MEMORY[0x1E0DEE9E8];
  v20 = a1;
  sub_1B76DBD08();
  sub_1B765DAD0((unint64_t *)&qword_1EF178050, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58], MEMORY[0x1E0CAFB80]);
  sub_1B76DBD2C();
  if (v29)
  {
    v22 = xmmword_1B76DC6E0;
    do
    {
      sub_1B765DF30(v28, v27);
      sub_1B765DF40((uint64_t)v27, (uint64_t)v26);
      sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
      if (swift_dynamicCast())
      {
        v9 = (void *)v23;
        v10 = (id)v23;
        static WebDomain.value(from:)(v9, v26);

        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177538);
        if ((swift_dynamicCast() & 1) == 0)
        {
          v23 = v22;
          v24 = 0;
          v25 = 0;
LABEL_12:

          sub_1B765DFB4(v23, *((uint64_t *)&v23 + 1), v24, v25);
          goto LABEL_6;
        }
        if (*((_QWORD *)&v23 + 1) == 1)
          goto LABEL_12;
        sub_1B767E4FC(v26, v23, *((uint64_t *)&v23 + 1), v24, v25);

        v7 = v26[2];
        v8 = v26[3];
        swift_bridgeObjectRelease();
        sub_1B765DF1C(v7, v8);
      }
LABEL_6:
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
      sub_1B76DBD2C();
    }
    while (v29);
  }
  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v2);

  return v30;
}

uint64_t sub_1B7675EF4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  id v10;
  __int128 *v11;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  char *v24;
  __int128 v25;
  __int128 *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _QWORD v30[5];
  _OWORD v31[2];
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35[3];

  v2 = sub_1B76DB7BC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return 0;
  objc_opt_self();
  if (!swift_dynamicCastObjCClass())
  {
    if (qword_1EF177220 != -1)
      swift_once();
    v13 = sub_1B76DB8B8();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EF177E18);
    v14 = a1;
    v15 = sub_1B76DB8A0();
    v16 = sub_1B76DBC90();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      *(_QWORD *)&v35[0] = v18;
      *(_DWORD *)v17 = 136446210;
      v30[0] = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774F8);
      v19 = sub_1B76DBD14();
      v30[0] = sub_1B7669B50(v19, v20, (uint64_t *)v35);
      sub_1B76DBD38();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B7656000, v15, v16, "Persistable value %{public}s not decodable to set", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v18, -1, -1);
      MEMORY[0x1BCCA9590](v17, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  v23 = v3;
  v34 = MEMORY[0x1E0DEE9E8];
  v22 = a1;
  sub_1B76DBD08();
  sub_1B765DAD0((unint64_t *)&qword_1EF178050, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58], MEMORY[0x1E0CAFB80]);
  sub_1B76DBD2C();
  if (v33)
  {
    v26 = &v28;
    v25 = xmmword_1B76DC6E0;
    v24 = v6;
    do
    {
      sub_1B765DF30(&v32, v31);
      sub_1B765DF40((uint64_t)v31, (uint64_t)v30);
      sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
      if (swift_dynamicCast())
      {
        v9 = (void *)v27;
        v10 = (id)v27;
        static ActivityCategory.value(from:)(v9, v30);

        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177558);
        if ((swift_dynamicCast() & 1) == 0)
        {
          v27 = v25;
          v11 = v26;
          *v26 = 0u;
          v11[1] = 0u;
LABEL_12:

          sub_1B765E02C(v27, *((uint64_t *)&v27 + 1), v28, *((uint64_t *)&v28 + 1), v29, *((uint64_t *)&v29 + 1), (void (*)(uint64_t, uint64_t))sub_1B765E0D8);
          goto LABEL_6;
        }
        if (*((_QWORD *)&v27 + 1) == 1)
          goto LABEL_12;
        v35[0] = v27;
        v35[1] = v28;
        v35[2] = v29;
        sub_1B767F2D8((uint64_t)v30, v35, (void (*)(uint64_t *))ActivityCategory.hash(into:), (void (*)(uint64_t, uint64_t))sub_1B765E0D4, &qword_1EF178060, (void (*)(uint64_t, unint64_t))sub_1B765E0D8);

        v7 = v30[2];
        v8 = v30[3];
        swift_bridgeObjectRelease();
        sub_1B765DF1C(v7, v8);
        v6 = v24;
        swift_bridgeObjectRelease();
      }
LABEL_6:
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);
      sub_1B76DBD2C();
    }
    while (v33);
  }
  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v2);

  return v34;
}

uint64_t sub_1B76763B4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int128 v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unsigned __int128 v24;
  uint64_t v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  void *v39;
  __int128 v40;
  uint64_t v41;
  unint64_t v42;
  _OWORD v43[2];
  __int128 v44;
  uint64_t v45;
  uint64_t v46;

  v2 = sub_1B76DB7BC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return 0;
  objc_opt_self();
  if (!swift_dynamicCastObjCClass())
  {
    if (qword_1EF177220 != -1)
      swift_once();
    v26 = sub_1B76DB8B8();
    __swift_project_value_buffer(v26, (uint64_t)qword_1EF177E18);
    v27 = a1;
    v28 = sub_1B76DB8A0();
    v29 = sub_1B76DBC90();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      *(_QWORD *)&v44 = v31;
      *(_DWORD *)v30 = 136446210;
      *(_QWORD *)&v43[0] = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774F8);
      v32 = sub_1B76DBD14();
      *(_QWORD *)&v43[0] = sub_1B7669B50(v32, v33, (uint64_t *)&v44);
      sub_1B76DBD38();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B7656000, v28, v29, "Persistable value %{public}s not decodable to set", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v31, -1, -1);
      MEMORY[0x1BCCA9590](v30, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  v35 = v3;
  v46 = MEMORY[0x1E0DEE9E8];
  v34 = a1;
  sub_1B76DBD08();
  sub_1B765DAD0((unint64_t *)&qword_1EF178050, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58], MEMORY[0x1E0CAFB80]);
  sub_1B76DBD2C();
  if (v45)
  {
    *(_QWORD *)&v7 = 136446210;
    v36 = v7;
    v38 = xmmword_1B76DC6F0;
    v37 = MEMORY[0x1E0DEE9B8] + 8;
    do
    {
      sub_1B765DF30(&v44, v43);
      sub_1B765DF40((uint64_t)v43, (uint64_t)&v41);
      sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
      if (swift_dynamicCast())
      {
        v10 = (void *)v40;
        objc_opt_self();
        if (swift_dynamicCastObjCClass())
        {
          v11 = v10;
          v12 = sub_1B76DB828();
        }
        else
        {
          v14 = qword_1EF177220;
          v15 = v10;
          if (v14 != -1)
            swift_once();
          v16 = sub_1B76DB8B8();
          __swift_project_value_buffer(v16, (uint64_t)qword_1EF177E18);
          v17 = v15;
          v18 = sub_1B76DB8A0();
          v19 = sub_1B76DBC90();
          if (os_log_type_enabled(v18, v19))
          {
            v20 = swift_slowAlloc();
            v21 = swift_slowAlloc();
            v39 = v10;
            *(_QWORD *)&v40 = v21;
            *(_DWORD *)v20 = v36;
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774F8);
            v22 = sub_1B76DBD14();
            *(_QWORD *)(v20 + 4) = sub_1B7669B50(v22, v23, (uint64_t *)&v40);

            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1B7656000, v18, v19, "Persistable value %{public}s not decodable to Data", (uint8_t *)v20, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1BCCA9590](v21, -1, -1);
            MEMORY[0x1BCCA9590](v20, -1, -1);

          }
          else
          {

          }
          v12 = 0;
          v13 = 0xF000000000000000;
        }
        v41 = v12;
        v42 = v13;

        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774D0);
        if ((swift_dynamicCast() & 1) != 0)
        {
          v24 = v40;
          sub_1B765DDFC(v40, *((unint64_t *)&v40 + 1));
          sub_1B7680D90(&v41, v24, *((unint64_t *)&v24 + 1));

          sub_1B765DEC4(v41, v42);
          v9 = v24 >> 64;
          v8 = v24;
        }
        else
        {
          v40 = v38;

          v9 = *((_QWORD *)&v40 + 1);
          v8 = v40;
        }
        sub_1B765DF1C(v8, v9);
      }
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);
      sub_1B76DBD2C();
    }
    while (v45);
  }
  (*(void (**)(char *, uint64_t))(v35 + 8))(v6, v2);

  return v46;
}

uint64_t sub_1B7676918(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  id v35;
  uint64_t v36;
  char *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40[4];
  _OWORD v41[2];
  __int128 v42;
  uint64_t v43;
  uint64_t v44;

  v2 = sub_1B76DB7BC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return 0;
  objc_opt_self();
  if (!swift_dynamicCastObjCClass())
  {
    if (qword_1EF177220 != -1)
      swift_once();
    v27 = sub_1B76DB8B8();
    __swift_project_value_buffer(v27, (uint64_t)qword_1EF177E18);
    v28 = a1;
    v29 = sub_1B76DB8A0();
    v30 = sub_1B76DBC90();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      *(_QWORD *)&v42 = v32;
      *(_DWORD *)v31 = 136446210;
      *(_QWORD *)&v41[0] = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774F8);
      v33 = sub_1B76DBD14();
      *(_QWORD *)&v41[0] = sub_1B7669B50(v33, v34, (uint64_t *)&v42);
      sub_1B76DBD38();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B7656000, v29, v30, "Persistable value %{public}s not decodable to set", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v32, -1, -1);
      MEMORY[0x1BCCA9590](v31, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  v36 = v3;
  v44 = MEMORY[0x1E0DEE9E8];
  v35 = a1;
  sub_1B76DBD08();
  v7 = sub_1B765DAD0((unint64_t *)&qword_1EF178050, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58], MEMORY[0x1E0CAFB80]);
  sub_1B76DBD2C();
  if (v43)
  {
    v8 = (unint64_t *)&qword_1ED53B440;
    v9 = 0x1E0DE7910uLL;
    v10 = MEMORY[0x1E0DEE9B8] + 8;
    v11 = 0x1E0CB3000uLL;
    v37 = v6;
    do
    {
      sub_1B765DF30(&v42, v41);
      sub_1B765DF40((uint64_t)v41, (uint64_t)v40);
      sub_1B765DF7C(0, v8);
      if (swift_dynamicCast())
      {
        v12 = v38;
        objc_opt_self();
        if (swift_dynamicCastObjCClass())
        {
          v38 = 0;
          v39 = 0;
          v13 = v12;
          sub_1B76DBAC8();
          v15 = (uint64_t)v38;
          v14 = v39;
          if (!v39)
            v15 = 0;
        }
        else
        {
          v16 = v12;
          v15 = 0;
          v14 = 0;
        }
        v40[0] = v15;
        v40[1] = v14;

        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B428);
        if (swift_dynamicCast())
        {
          v17 = v10;
          v18 = v7;
          v19 = v2;
          v20 = v9;
          v21 = v8;
          v22 = v11;
          v23 = (uint64_t)v38;
          v24 = v39;
          swift_bridgeObjectRetain();
          v25 = v23;
          v11 = v22;
          v8 = v21;
          v9 = v20;
          v2 = v19;
          v7 = v18;
          v10 = v17;
          v6 = v37;
          sub_1B76801E4(v40, v25, v24);

          swift_bridgeObjectRelease();
        }
        else
        {
          v38 = 0;
          v39 = 0;

        }
        swift_bridgeObjectRelease();
      }
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v41);
      sub_1B76DBD2C();
    }
    while (v43);
  }
  (*(void (**)(char *, uint64_t))(v36 + 8))(v6, v2);

  return v44;
}

uint64_t static Set<>.value(from:)(uint64_t result)
{
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (result)
  {
    v1 = (void *)result;
    objc_opt_self();
    if (swift_dynamicCastObjCClass())
    {
      v2 = v1;
      v12 = sub_1B76DBA08();
      MEMORY[0x1E0C80A78](v12, v3);
      sub_1B765DF7C(0, &qword_1EF178018);
      sub_1B76DBC30();
      sub_1B768A60C();
      sub_1B76DBB40();

      return v13;
    }
    else
    {
      if (qword_1EF177220 != -1)
        swift_once();
      v4 = sub_1B76DB8B8();
      __swift_project_value_buffer(v4, (uint64_t)qword_1EF177E18);
      v5 = v1;
      v6 = sub_1B76DB8A0();
      v7 = sub_1B76DBC90();
      if (os_log_type_enabled(v6, v7))
      {
        v8 = (uint8_t *)swift_slowAlloc();
        v9 = swift_slowAlloc();
        v13 = v9;
        *(_DWORD *)v8 = 136446210;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774F8);
        v10 = sub_1B76DBD14();
        sub_1B7669B50(v10, v11, &v13);
        sub_1B76DBD38();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1B7656000, v6, v7, "Persistable value %{public}s not decodable to set", v8, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCA9590](v9, -1, -1);
        MEMORY[0x1BCCA9590](v8, -1, -1);

      }
      else
      {

      }
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B7676FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t result;
  id v26;
  void (*v27)(id, uint64_t, uint64_t);
  id v28;
  char *v29;
  char v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  char *v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t AssociatedTypeWitness;
  char *v45;
  uint64_t v46;
  char v47[32];
  id v48;

  v42 = a5;
  v43 = a1;
  v8 = sub_1B76DBD20();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v45 = (char *)&v36 - v11;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = MEMORY[0x1E0C80A78](AssociatedTypeWitness, v12);
  v46 = *(_QWORD *)(a3 - 8);
  v15 = MEMORY[0x1E0C80A78](v13, v14);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v15, v18);
  v21 = (char *)&v36 - v20;
  MEMORY[0x1E0C80A78](v19, v22);
  v24 = (char *)&v36 - v23;
  sub_1B765DF40(a2, (uint64_t)v47);
  sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v37 = v17;
    v38 = v24;
    v39 = v21;
    v40 = v9;
    v41 = v8;
    v26 = v48;
    v27 = *(void (**)(id, uint64_t, uint64_t))(a4 + 24);
    v28 = v48;
    v27(v26, a3, a4);

    v29 = v45;
    v30 = swift_dynamicCast();
    v31 = v46;
    v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56);
    if ((v30 & 1) != 0)
    {
      v32(v29, 0, 1, a3);
      v33 = v38;
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v38, v29, a3);
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v37, v33, a3);
      sub_1B76DBC30();
      v34 = v39;
      sub_1B76DBC18();

      v35 = *(void (**)(char *, uint64_t))(v31 + 8);
      v35(v34, a3);
      return ((uint64_t (*)(char *, uint64_t))v35)(v33, a3);
    }
    else
    {
      v32(v29, 1, 1, a3);

      return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v29, v41);
    }
  }
  return result;
}

id sub_1B7677270(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return Set<>.persistableValue()(*v2, *(_QWORD *)(a1 + 16), *(_QWORD *)(a2 - 8), *(_QWORD *)(a1 + 24));
}

uint64_t sub_1B7677284@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = static Set<>.value(from:)(a1);
  *a2 = result;
  return result;
}

uint64_t Dictionary<>.persistableValue()()
{
  uint64_t v0;
  uint64_t v2;

  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99DE8]), sel_init);
  v0 = sub_1B76DBA50();
  sub_1B765DF7C(0, &qword_1EF178028);
  MEMORY[0x1BCCA94E8](MEMORY[0x1E0DEA0D0], v0);
  sub_1B76DBB40();
  return v2;
}

void sub_1B7677398(id *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  void *v18;

  v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a5 + 16))(a3, a5);
  swift_getTupleTypeMetadata2();
  v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a7 + 16))(a4, a7);
  sub_1B765DF7C(0, &qword_1ED53B5E8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177830);
  v12 = swift_allocObject();
  v13 = MEMORY[0x1E0DEA968];
  *(_OWORD *)(v12 + 16) = xmmword_1B76DDBB0;
  *(_QWORD *)(v12 + 56) = v13;
  *(_QWORD *)(v12 + 32) = 7955819;
  *(_QWORD *)(v12 + 40) = 0xE300000000000000;
  v14 = sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
  *(_QWORD *)(v12 + 64) = v10;
  *(_QWORD *)(v12 + 88) = v14;
  *(_QWORD *)(v12 + 96) = 0x65756C6176;
  *(_QWORD *)(v12 + 104) = 0xE500000000000000;
  *(_QWORD *)(v12 + 152) = v14;
  *(_QWORD *)(v12 + 120) = v13;
  *(_QWORD *)(v12 + 128) = v11;
  v15 = v10;
  v16 = v11;
  v17 = (void *)sub_1B76DBC78();
  v18 = (void *)sub_1B76DBC6C();

  objc_msgSend(*a1, sel_addObject_, v18);
}

uint64_t static Dictionary<>.value(from:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  __int128 v42;
  void *v43;
  id v44;
  void *v45;
  id v46;
  void *v47;
  uint64_t v48;
  void (*v49)(void *, uint64_t, uint64_t);
  id v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char v54;
  void (*v55)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  void (*v57)(void *, uint64_t, uint64_t);
  id v58;
  id v59;
  uint64_t v60;
  char *v61;
  char v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t, uint64_t, uint64_t);
  char *v65;
  char *v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v75;
  id v76;
  NSObject *v77;
  os_log_type_t v78;
  uint8_t *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  id v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t AssociatedTypeWitness;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  void *v112;
  char v113[8];
  uint64_t v114;
  __int128 v115;
  __int128 v116;
  uint64_t v117;
  uint64_t v118;

  v108 = a5;
  v98 = sub_1B76DBD20();
  v97 = *(_QWORD *)(v98 - 8);
  v12 = MEMORY[0x1E0C80A78](v98, v11);
  v96 = (char *)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12, v14);
  v16 = (char *)&v83 - v15;
  v103 = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v18 = MEMORY[0x1E0C80A78](AssociatedTypeWitness, v17);
  v101 = (char *)&v83 - v19;
  v20 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](v18, v21);
  v95 = (char *)&v83 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = sub_1B76DBD20();
  v99 = *(_QWORD *)(v100 - 8);
  MEMORY[0x1E0C80A78](v100, v23);
  v106 = (char *)&v83 - v24;
  v107 = a4;
  v105 = swift_getAssociatedTypeWitness();
  v26 = MEMORY[0x1E0C80A78](v105, v25);
  v104 = (char *)&v83 - v27;
  v28 = *(_QWORD *)(a2 - 8);
  v30 = MEMORY[0x1E0C80A78](v26, v29);
  v32 = (char *)&v83 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30, v33);
  v35 = (char *)&v83 - v34;
  v36 = sub_1B76DB7BC();
  v38 = MEMORY[0x1E0C80A78](v36, v37);
  v41 = (char *)&v83 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return 0;
  v93 = v39;
  v94 = v38;
  v89 = v32;
  objc_opt_self();
  if (!swift_dynamicCastObjCClass())
  {
    if (qword_1EF177220 != -1)
      swift_once();
    v75 = sub_1B76DB8B8();
    __swift_project_value_buffer(v75, (uint64_t)qword_1EF177E18);
    v76 = a1;
    v77 = sub_1B76DB8A0();
    v78 = sub_1B76DBC90();
    if (os_log_type_enabled(v77, v78))
    {
      v79 = (uint8_t *)swift_slowAlloc();
      v80 = swift_slowAlloc();
      *(_QWORD *)&v116 = v80;
      *(_DWORD *)v79 = 136446210;
      *(_QWORD *)&v115 = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774F8);
      v81 = sub_1B76DBD14();
      *(_QWORD *)&v115 = sub_1B7669B50(v81, v82, (uint64_t *)&v116);
      sub_1B76DBD38();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B7656000, v77, v78, "Persistable value %{public}s not decodable to Dictionary", v79, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v80, -1, -1);
      MEMORY[0x1BCCA9590](v79, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  v91 = a1;
  v118 = sub_1B76DB9FC();
  sub_1B76DBD08();
  sub_1B76DB7B0();
  if (v117)
  {
    *(_QWORD *)&v42 = 136446210;
    v109 = v42;
    v88 = v16;
    v87 = v20;
    v92 = v28;
    v90 = v35;
    v86 = a3;
    while (1)
    {
      sub_1B765DF30(&v116, &v115);
      sub_1B765DF40((uint64_t)&v115, (uint64_t)v113);
      sub_1B765DF7C(0, &qword_1ED53B5E8);
      if ((swift_dynamicCast() & 1) == 0)
        goto LABEL_24;
      v43 = (void *)v110;
      *(_QWORD *)&v110 = 7955819;
      *((_QWORD *)&v110 + 1) = 0xE300000000000000;
      v44 = objc_msgSend(v43, sel___swift_objectForKeyedSubscript_, sub_1B76DBEE8());
      swift_unknownObjectRelease();
      if (v44)
      {
        sub_1B76DBD50();
        swift_unknownObjectRelease();
      }
      else
      {
        v110 = 0u;
        v111 = 0u;
      }
      sub_1B765DE40((uint64_t)&v110, (uint64_t)v113);
      if (!v114)
        goto LABEL_23;
      sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
      if ((swift_dynamicCast() & 1) == 0)
        break;
      v45 = v112;
      *(_QWORD *)&v110 = 0x65756C6176;
      *((_QWORD *)&v110 + 1) = 0xE500000000000000;
      v46 = objc_msgSend(v43, sel___swift_objectForKeyedSubscript_, sub_1B76DBEE8());
      swift_unknownObjectRelease();
      if (v46)
      {
        sub_1B76DBD50();
        swift_unknownObjectRelease();
      }
      else
      {
        v110 = 0u;
        v111 = 0u;
      }
      sub_1B765DE40((uint64_t)&v110, (uint64_t)v113);
      if (!v114)
      {

LABEL_23:
        sub_1B7670BD4((uint64_t)v113);
LABEL_24:
        if (qword_1EF177220 != -1)
          swift_once();
        v67 = sub_1B76DB8B8();
        __swift_project_value_buffer(v67, (uint64_t)qword_1EF177E18);
        sub_1B765DF40((uint64_t)&v115, (uint64_t)v113);
        v68 = sub_1B76DB8A0();
        v69 = sub_1B76DBC90();
        if (os_log_type_enabled(v68, v69))
        {
          v70 = swift_slowAlloc();
          v71 = swift_slowAlloc();
          v112 = (void *)v71;
          *(_DWORD *)v70 = v109;
          sub_1B765DF40((uint64_t)v113, (uint64_t)&v110);
          v72 = sub_1B76DBB10();
          *(_QWORD *)(v70 + 4) = sub_1B7669B50(v72, v73, (uint64_t *)&v112);
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v113);
          _os_log_impl(&dword_1B7656000, v68, v69, "Unable to decode dictionary element %{public}s", (uint8_t *)v70, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1BCCA9590](v71, -1, -1);
          MEMORY[0x1BCCA9590](v70, -1, -1);

        }
        else
        {

          __swift_destroy_boxed_opaque_existential_0((uint64_t)v113);
        }
        goto LABEL_6;
      }
      if ((swift_dynamicCast() & 1) == 0)
      {

        goto LABEL_24;
      }
      v47 = v112;
      v48 = v107;
      v49 = *(void (**)(void *, uint64_t, uint64_t))(v107 + 24);
      v50 = v45;
      v51 = v48;
      v52 = v92;
      v49(v45, a2, v51);

      v53 = v106;
      v54 = swift_dynamicCast();
      v55 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56);
      if ((v54 & 1) == 0)
      {
        v55(v53, 1, 1, a2);

        (*(void (**)(char *, uint64_t))(v99 + 8))(v53, v100);
        goto LABEL_24;
      }
      v85 = v50;
      v55(v53, 0, 1, a2);
      (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v90, v53, a2);
      v56 = v103;
      v57 = *(void (**)(void *, uint64_t, uint64_t))(v103 + 24);
      v58 = v47;
      v83 = a2;
      v59 = v58;
      v60 = v86;
      v57(v47, v86, v56);
      v84 = v59;

      v61 = v88;
      v62 = swift_dynamicCast();
      v63 = v87;
      v64 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v87 + 56);
      if ((v62 & 1) == 0)
      {
        v64(v61, 1, 1, v60);

        a2 = v83;
        (*(void (**)(char *, uint64_t))(v92 + 8))(v90, v83);
        (*(void (**)(char *, uint64_t))(v97 + 8))(v61, v98);
        goto LABEL_24;
      }
      v64(v61, 0, 1, v60);
      v65 = v95;
      (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v95, v61, v60);
      a2 = v83;
      (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v89, v90, v83);
      v66 = v96;
      (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v96, v65, v60);
      v64(v66, 0, 1, v60);
      sub_1B76DBA50();
      sub_1B76DBA68();

      (*(void (**)(char *, uint64_t))(v63 + 8))(v65, v60);
      (*(void (**)(char *, uint64_t))(v92 + 8))(v90, a2);
LABEL_6:
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v115);
      sub_1B76DB7B0();
      if (!v117)
        goto LABEL_31;
    }

    goto LABEL_24;
  }
LABEL_31:
  (*(void (**)(char *, uint64_t))(v93 + 8))(v41, v94);

  return v118;
}

uint64_t sub_1B767801C()
{
  return Dictionary<>.persistableValue()();
}

uint64_t sub_1B7678034@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result;

  result = static Dictionary<>.value(from:)(a1, a2[2], a2[3], *(_QWORD *)(a3 - 8), a2[4], *(_QWORD *)(a3 - 16));
  *a4 = result;
  return result;
}

NSObject __swiftcall SafariSettings.CookiePolicy.persistableValue()()
{
  NSObject result;

  __asm { BR              X10 }
  return result;
}

id sub_1B76780A4()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
  v1 = (void *)sub_1B76DBAB0();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithString_, v1);

  return v2;
}

void static SafariSettings.CookiePolicy.value(from:)(void *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_1B767A05C(a1, (void (*)(uint64_t))SafariSettings.CookiePolicy.init(rawValue:), "Persistable value %{public}s not decodable to SafariSettings.CookiePolicy", 4, a2);
}

void sub_1B767816C()
{
  __asm { BR              X10 }
}

id sub_1B76781A8()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
  v1 = (void *)sub_1B76DBAB0();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithString_, v1);

  return v2;
}

NSObject __swiftcall ScreenTimeSettings.ShieldPolicy.persistableValue()()
{
  NSObject result;

  __asm { BR              X10 }
  return result;
}

id sub_1B7678294()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
  v1 = (void *)sub_1B76DBAB0();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithString_, v1);

  return v2;
}

void static ScreenTimeSettings.ShieldPolicy.value(from:)(void *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_1B767A05C(a1, (void (*)(uint64_t))ScreenTimeSettings.ShieldPolicy.init(rawValue:), "Persistable value %{public}s not decodable to SafariSettings.CookiePolicy", 5, a2);
}

void sub_1B7678350()
{
  __asm { BR              X10 }
}

id sub_1B7678388()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
  v1 = (void *)sub_1B76DBAB0();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithString_, v1);

  return v2;
}

uint64_t static ShieldSettings.categoriesKey.getter()
{
  return 0x69726F6765746163;
}

uint64_t static ShieldSettings.activitiesKey.getter()
{
  return 0x6974697669746361;
}

uint64_t ShieldSettings.ActivityCategoryPolicy<A>.persistableValue()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  id v19;

  v9 = *(_QWORD *)v4;
  if (*(_BYTE *)(v4 + 16))
  {
    if (*(_BYTE *)(v4 + 16) == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177830);
      v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_1B76DCB70;
      *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v10 + 32) = 0x6974697669746361;
      *(_QWORD *)(v10 + 40) = 0xEA00000000007365;
      v11 = sub_1B768A684(v9, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 16), a2, a3, a4, a2, a3, a4);
      *(_QWORD *)(v10 + 88) = sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
      *(_QWORD *)(v10 + 64) = v11;
    }
    sub_1B765DF7C(0, &qword_1ED53B5E8);
  }
  else
  {
    v12 = *(_QWORD *)(v4 + 8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177830);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1B76DDBB0;
    v14 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v13 + 32) = 0x69726F6765746163;
    *(_QWORD *)(v13 + 40) = 0xEA00000000007365;
    v15 = *(_QWORD *)(a1 + 16);
    v16 = sub_1B768A7AC();
    v17 = sub_1B768A684(v9, v15, (uint64_t)&type metadata for ActivityCategory, a2, a3, a4, (uint64_t)&protocol witness table for ActivityCategory, (uint64_t)&protocol witness table for ActivityCategory, v16);
    v18 = sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
    *(_QWORD *)(v13 + 64) = v17;
    *(_QWORD *)(v13 + 120) = v14;
    *(_QWORD *)(v13 + 88) = v18;
    *(_QWORD *)(v13 + 96) = 0x6974697669746361;
    *(_QWORD *)(v13 + 104) = 0xEA00000000007365;
    v19 = sub_1B768A684(v12, v15, v15, a2, a3, a4, a2, a3, a4);
    *(_QWORD *)(v13 + 152) = v18;
    *(_QWORD *)(v13 + 128) = v19;
    sub_1B765DF7C(0, &qword_1ED53B5E8);
  }
  return sub_1B76DBC78();
}

void static ShieldSettings.ActivityCategoryPolicy<A>.value(from:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  char v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;

  if (!a1)
  {
LABEL_20:
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    v22 = -1;
    goto LABEL_21;
  }
  objc_opt_self();
  v8 = swift_dynamicCastObjCClass();
  if (!v8)
  {
    if (qword_1EF177220 != -1)
      swift_once();
    v11 = sub_1B76DB8B8();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EF177E18);
    v12 = a1;
    v13 = sub_1B76DB8A0();
    v14 = sub_1B76DBC90();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v32 = v16;
      *(_DWORD *)v15 = 136446210;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774F8);
      v17 = sub_1B76DBD14();
      *(_QWORD *)&v30 = sub_1B7669B50(v17, v18, &v32);
      sub_1B76DBD38();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B7656000, v13, v14, "Persistable value %{public}s not decodable to ShieldSettings.ActivityCategoryPolicy", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v16, -1, -1);
      MEMORY[0x1BCCA9590](v15, -1, -1);

    }
    else
    {

    }
    goto LABEL_20;
  }
  v9 = (void *)v8;
  v32 = 0x6974697669746361;
  v33 = 0xEA00000000007365;
  v28 = a1;
  v10 = objc_msgSend(v9, sel___swift_objectForKeyedSubscript_, sub_1B76DBEE8());
  swift_unknownObjectRelease();
  if (v10)
  {
    sub_1B76DBD50();
    swift_unknownObjectRelease();
  }
  else
  {
    v30 = 0u;
    v31 = 0u;
  }
  sub_1B765DE40((uint64_t)&v30, (uint64_t)&v32);
  if (v34)
  {
    sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
    if (swift_dynamicCast())
      v19 = v29;
    else
      v19 = 0;
  }
  else
  {
    sub_1B7670BD4((uint64_t)&v32);
    v19 = 0;
  }
  v20 = static Set<>.value(from:)((uint64_t)v19);

  if (!v20)
  {

    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    v22 = 2;
LABEL_21:
    *(_BYTE *)(a4 + 16) = v22;
    return;
  }
  v32 = 0x69726F6765746163;
  v33 = 0xEA00000000007365;
  v21 = objc_msgSend(v9, sel___swift_objectForKeyedSubscript_, sub_1B76DBEE8());
  swift_unknownObjectRelease();
  if (v21)
  {
    sub_1B76DBD50();
    swift_unknownObjectRelease();
  }
  else
  {
    v30 = 0u;
    v31 = 0u;
  }
  sub_1B765DE40((uint64_t)&v30, (uint64_t)&v32);
  if (v34)
  {
    sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
    if (swift_dynamicCast())
      v23 = v29;
    else
      v23 = 0;
  }
  else
  {
    sub_1B7670BD4((uint64_t)&v32);
    v23 = 0;
  }
  v24 = sub_1B7675EF4(v23);

  if (!v24)
  {
    v27 = sub_1B7678BB8(v20, a2, a2, a3);
    swift_bridgeObjectRelease();

    *(_QWORD *)a4 = v27;
    *(_QWORD *)(a4 + 8) = 0;
    v22 = 1;
    goto LABEL_21;
  }
  sub_1B768A7AC();
  v25 = sub_1B7678BB8(v24, a2, (uint64_t)&type metadata for ActivityCategory, a3);
  swift_bridgeObjectRelease();
  v26 = sub_1B7678BB8(v20, a2, a2, a3);
  swift_bridgeObjectRelease();

  *(_QWORD *)a4 = v25;
  *(_QWORD *)(a4 + 8) = v26;
  *(_BYTE *)(a4 + 16) = 0;
}

uint64_t sub_1B7678BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = type metadata accessor for Token(0, a3, a3, a4);
  MEMORY[0x1BCCA94E8](&protocol conformance descriptor for Token<A>, v4);
  sub_1B76DBA08();
  v5 = sub_1B76DBC30();
  sub_1B76DBC30();
  MEMORY[0x1BCCA94E8](MEMORY[0x1E0DEB3D0], v5);
  sub_1B76DBB40();
  return v7;
}

uint64_t sub_1B7678CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  void (*v18)(_QWORD *, uint64_t, uint64_t);
  _QWORD v20[2];

  v10 = *(_QWORD *)(a4 - 8);
  v11 = MEMORY[0x1E0C80A78](a1, a2);
  MEMORY[0x1E0C80A78](v11, v12);
  v14 = (char *)v20 - v13;
  v16 = *v15;
  v17 = v15[1];
  v20[0] = v16;
  v20[1] = v17;
  v18 = *(void (**)(_QWORD *, uint64_t, uint64_t))(a9 + 8);
  sub_1B765DDFC(v16, v17);
  v18(v20, a4, a9);
  sub_1B76DBC30();
  sub_1B76DBC18();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v14, a4);
}

_QWORD *sub_1B7678DC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a9 + 24))(&v14, a4, a9);
  if (v15 >> 60 != 15)
  {
    v13 = type metadata accessor for Token(255, a4, v11, v12);
    MEMORY[0x1BCCA94E8](&protocol conformance descriptor for Token<A>, v13);
    sub_1B76DBC30();
    sub_1B76DBC18();
    return (_QWORD *)sub_1B765DEC4(v14, v15);
  }
  return result;
}

uint64_t sub_1B7678E78(uint64_t a1, uint64_t a2)
{
  return ShieldSettings.ActivityCategoryPolicy<A>.persistableValue()(a1, *(_QWORD *)(a2 - 8), *(_QWORD *)(a2 - 16), *(_QWORD *)(a2 - 24));
}

void sub_1B7678E88(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  static ShieldSettings.ActivityCategoryPolicy<A>.value(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a3 - 8), a4);
}

uint64_t ShieldSettings.EffectiveActivityCategoryPolicy<>.persistableValue()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  v5 = *(_QWORD *)v2;
  if (*(_BYTE *)(v2 + 16))
  {
    if (*(_BYTE *)(v2 + 16) == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177830);
      v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_1B76DCB70;
      *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v6 + 32) = 0x6974697669746361;
      *(_QWORD *)(v6 + 40) = 0xEA00000000007365;
      v7 = Set<>.persistableValue()(v5, *(_QWORD *)(a1 + 16), a2, *(_QWORD *)(a1 + 24));
      *(_QWORD *)(v6 + 88) = sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
      *(_QWORD *)(v6 + 64) = v7;
    }
    sub_1B765DF7C(0, &qword_1ED53B5E8);
  }
  else
  {
    v8 = *(_QWORD *)(v2 + 8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177830);
    v9 = swift_allocObject();
    v10 = MEMORY[0x1E0DEA968];
    *(_OWORD *)(v9 + 16) = xmmword_1B76DDBB0;
    *(_QWORD *)(v9 + 56) = v10;
    *(_QWORD *)(v9 + 32) = 0x69726F6765746163;
    *(_QWORD *)(v9 + 40) = 0xEA00000000007365;
    v11 = sub_1B7665548(v5);
    v12 = sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
    *(_QWORD *)(v9 + 64) = v11;
    *(_QWORD *)(v9 + 120) = v10;
    *(_QWORD *)(v9 + 88) = v12;
    *(_QWORD *)(v9 + 96) = 0x6974697669746361;
    *(_QWORD *)(v9 + 104) = 0xEA00000000007365;
    v13 = Set<>.persistableValue()(v8, *(_QWORD *)(a1 + 16), a2, *(_QWORD *)(a1 + 24));
    *(_QWORD *)(v9 + 152) = v12;
    *(_QWORD *)(v9 + 128) = v13;
    sub_1B765DF7C(0, &qword_1ED53B5E8);
  }
  return sub_1B76DBC78();
}

void static ShieldSettings.EffectiveActivityCategoryPolicy<>.value(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  char v19;
  void *v20;
  uint64_t v21;
  void *v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;

  if (!a1)
  {
LABEL_20:
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    v19 = -1;
    goto LABEL_21;
  }
  objc_opt_self();
  v4 = swift_dynamicCastObjCClass();
  if (!v4)
  {
    if (qword_1EF177220 != -1)
      swift_once();
    v8 = sub_1B76DB8B8();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EF177E18);
    v9 = a1;
    v10 = sub_1B76DB8A0();
    v11 = sub_1B76DBC90();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v25 = v13;
      *(_DWORD *)v12 = 136446210;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774F8);
      v14 = sub_1B76DBD14();
      *(_QWORD *)&v23 = sub_1B7669B50(v14, v15, &v25);
      sub_1B76DBD38();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B7656000, v10, v11, "Persistable value %{public}s not decodable to ShieldSettings.PersistedActivityCategoryPolicy", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v13, -1, -1);
      MEMORY[0x1BCCA9590](v12, -1, -1);

    }
    else
    {

    }
    goto LABEL_20;
  }
  v5 = (void *)v4;
  v25 = 0x6974697669746361;
  v26 = 0xEA00000000007365;
  v6 = a1;
  v7 = objc_msgSend(v5, sel___swift_objectForKeyedSubscript_, sub_1B76DBEE8());
  swift_unknownObjectRelease();
  if (v7)
  {
    sub_1B76DBD50();
    swift_unknownObjectRelease();
  }
  else
  {
    v23 = 0u;
    v24 = 0u;
  }
  sub_1B765DE40((uint64_t)&v23, (uint64_t)&v25);
  if (v27)
  {
    sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
    if (swift_dynamicCast())
      v16 = v22;
    else
      v16 = 0;
  }
  else
  {
    sub_1B7670BD4((uint64_t)&v25);
    v16 = 0;
  }
  v17 = static Set<>.value(from:)((uint64_t)v16);

  if (!v17)
  {

    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    v19 = 2;
LABEL_21:
    *(_BYTE *)(a2 + 16) = v19;
    return;
  }
  v25 = 0x69726F6765746163;
  v26 = 0xEA00000000007365;
  v18 = objc_msgSend(v5, sel___swift_objectForKeyedSubscript_, sub_1B76DBEE8());
  swift_unknownObjectRelease();
  if (v18)
  {
    sub_1B76DBD50();
    swift_unknownObjectRelease();
  }
  else
  {
    v23 = 0u;
    v24 = 0u;
  }
  sub_1B765DE40((uint64_t)&v23, (uint64_t)&v25);
  if (v27)
  {
    sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
    if (swift_dynamicCast())
      v20 = v22;
    else
      v20 = 0;
  }
  else
  {
    sub_1B7670BD4((uint64_t)&v25);
    v20 = 0;
  }
  v21 = sub_1B7675EF4(v20);

  if (!v21)
  {
    *(_QWORD *)a2 = v17;
    *(_QWORD *)(a2 + 8) = 0;
    v19 = 1;
    goto LABEL_21;
  }
  *(_QWORD *)a2 = v21;
  *(_QWORD *)(a2 + 8) = v17;
  *(_BYTE *)(a2 + 16) = 0;
}

uint64_t sub_1B767949C(uint64_t a1, uint64_t a2)
{
  return ShieldSettings.EffectiveActivityCategoryPolicy<>.persistableValue()(a1, *(_QWORD *)(a2 - 8));
}

void sub_1B76794A4(void *a1@<X0>, uint64_t a2@<X8>)
{
  static ShieldSettings.EffectiveActivityCategoryPolicy<>.value(from:)(a1, a2);
}

NSObject __swiftcall WebContentSettings.FilterPolicy.persistableValue()()
{
  NSObject result;

  __asm { BR              X10 }
  return result;
}

uint64_t sub_1B76794E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177830);
  v1 = swift_allocObject();
  v2 = MEMORY[0x1E0DEA968];
  *(_OWORD *)(v1 + 16) = xmmword_1B76DCB70;
  *(_QWORD *)(v1 + 56) = v2;
  *(_QWORD *)(v1 + 32) = 0x6C6C41726576656ELL;
  *(_QWORD *)(v1 + 40) = 0xEA0000000000776FLL;
  v3 = sub_1B76651A0(v0);
  *(_QWORD *)(v1 + 88) = sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
  *(_QWORD *)(v1 + 64) = v3;
  sub_1B765DF7C(0, &qword_1ED53B5E8);
  return sub_1B76DBC78();
}

void static WebContentSettings.FilterPolicy.value(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  char v18;
  id v19;
  void *v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  void *v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;

  if (!a1)
  {
LABEL_20:
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    v18 = -1;
    goto LABEL_21;
  }
  objc_opt_self();
  v4 = swift_dynamicCastObjCClass();
  if (!v4)
  {
    if (qword_1EF177220 != -1)
      swift_once();
    v8 = sub_1B76DB8B8();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EF177E18);
    v9 = a1;
    v10 = sub_1B76DB8A0();
    v11 = sub_1B76DBC90();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v28 = v13;
      *(_DWORD *)v12 = 136446210;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774F8);
      v14 = sub_1B76DBD14();
      *(_QWORD *)&v26 = sub_1B7669B50(v14, v15, &v28);
      sub_1B76DBD38();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B7656000, v10, v11, "Persistable value %{public}s not decodable to WebContentSettings.FilterPolicy", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v13, -1, -1);
      MEMORY[0x1BCCA9590](v12, -1, -1);

    }
    else
    {

    }
    goto LABEL_20;
  }
  v5 = (void *)v4;
  v28 = 0x6F6C6C41796C6E6FLL;
  v29 = 0xE900000000000077;
  v6 = a1;
  v7 = objc_msgSend(v5, sel___swift_objectForKeyedSubscript_, sub_1B76DBEE8());
  swift_unknownObjectRelease();
  if (v7)
  {
    sub_1B76DBD50();
    swift_unknownObjectRelease();
  }
  else
  {
    v26 = 0u;
    v27 = 0u;
  }
  sub_1B765DE40((uint64_t)&v26, (uint64_t)&v28);
  if (v30)
  {
    sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
    if (swift_dynamicCast())
      v16 = v25;
    else
      v16 = 0;
  }
  else
  {
    sub_1B7670BD4((uint64_t)&v28);
    v16 = 0;
  }
  v17 = sub_1B7675B20(v16);

  if (v17)
  {

    *(_QWORD *)a2 = v17;
    *(_QWORD *)(a2 + 8) = 0;
    v18 = 2;
LABEL_21:
    *(_BYTE *)(a2 + 16) = v18;
    return;
  }
  v28 = 0x6C6C41726576656ELL;
  v29 = 0xEA0000000000776FLL;
  v19 = objc_msgSend(v5, sel___swift_objectForKeyedSubscript_, sub_1B76DBEE8());
  swift_unknownObjectRelease();
  if (v19)
  {
    sub_1B76DBD50();
    swift_unknownObjectRelease();
  }
  else
  {
    v26 = 0u;
    v27 = 0u;
  }
  sub_1B765DE40((uint64_t)&v26, (uint64_t)&v28);
  if (v30)
  {
    sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
    if (swift_dynamicCast())
      v20 = v25;
    else
      v20 = 0;
  }
  else
  {
    sub_1B7670BD4((uint64_t)&v28);
    v20 = 0;
  }
  v21 = sub_1B7675B20(v20);

  if (!v21)
  {

    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    v18 = 3;
    goto LABEL_21;
  }
  v28 = 0x6F6C6C416F747561;
  v29 = 0xE900000000000077;
  v22 = objc_msgSend(v5, sel___swift_objectForKeyedSubscript_, sub_1B76DBEE8());
  swift_unknownObjectRelease();
  if (v22)
  {
    sub_1B76DBD50();
    swift_unknownObjectRelease();
  }
  else
  {
    v26 = 0u;
    v27 = 0u;
  }
  sub_1B765DE40((uint64_t)&v26, (uint64_t)&v28);
  if (v30)
  {
    sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
    if (swift_dynamicCast())
      v23 = v25;
    else
      v23 = 0;
  }
  else
  {
    sub_1B7670BD4((uint64_t)&v28);
    v23 = 0;
  }
  v24 = sub_1B7675B20(v23);

  *(_QWORD *)a2 = v21;
  if (v24)
  {
    *(_QWORD *)(a2 + 8) = v24;
    v18 = 1;
    goto LABEL_21;
  }
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
}

NSObject __swiftcall UserSettings.SharingPolicy.persistableValue()()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
  v1 = (void *)sub_1B76DBAB0();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithString_, v1);

  return (NSObject)v2;
}

void static UserSettings.SharingPolicy.value(from:)(void *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_1B767A05C(a1, (void (*)(uint64_t))UserSettings.SharingPolicy.init(rawValue:), "Persistable value %{public}s not decodable to UserSettings.SharingPolicy", 3, a2);
}

id sub_1B7679CD4()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
  v1 = (void *)sub_1B76DBAB0();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithString_, v1);

  return v2;
}

NSObject __swiftcall UserSafetySettings.ScannableService.persistableValue()()
{
  NSObject result;

  __asm { BR              X10 }
  return result;
}

id sub_1B7679DDC()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
  v1 = (void *)sub_1B76DBAB0();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithString_, v1);

  return v2;
}

void static UserSafetySettings.ScannableService.value(from:)(void *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_1B767A05C(a1, (void (*)(uint64_t))UserSafetySettings.ScannableService.init(rawValue:), "Persistable value %{public}s not decodable to UserSafetySettings.ScannableService", 5, a2);
}

void sub_1B7679EB0()
{
  __asm { BR              X10 }
}

id sub_1B7679EF0()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
  v1 = (void *)sub_1B76DBAB0();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithString_, v1);

  return v2;
}

NSObject __swiftcall UserSafetySettings.InterventionType.persistableValue()()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
  v1 = (void *)sub_1B76DBAB0();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithString_, v1);

  return (NSObject)v2;
}

void static UserSafetySettings.InterventionType.value(from:)(void *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_1B767A05C(a1, (void (*)(uint64_t))UserSafetySettings.InterventionType.init(rawValue:), "Persistable value %{public}s not decodable to UserSafetySettings.InterventionType", 2, a2);
}

void sub_1B767A05C(void *a1@<X0>, void (*a2)(uint64_t)@<X1>, const char *a3@<X2>, char a4@<W3>, _BYTE *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;

  if (a1)
  {
    objc_opt_self();
    if (swift_dynamicCastObjCClass())
    {
      v9 = sub_1B76DBAD4();
      a2(v9);
      return;
    }
    if (qword_1EF177220 != -1)
      swift_once();
    v10 = sub_1B76DB8B8();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EF177E18);
    v11 = a1;
    v12 = sub_1B76DB8A0();
    v13 = sub_1B76DBC90();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      v19 = v18;
      *(_DWORD *)v14 = 136446210;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774F8);
      v15 = sub_1B76DBD14();
      sub_1B7669B50(v15, v16, &v19);
      sub_1B76DBD38();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B7656000, v12, v13, a3, v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v18, -1, -1);
      MEMORY[0x1BCCA9590](v14, -1, -1);

    }
    else
    {

    }
  }
  *a5 = a4;
}

id sub_1B767A268()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
  v1 = (void *)sub_1B76DBAB0();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithString_, v1);

  return v2;
}

NSObject __swiftcall UserSafetySettings.ScanningPolicy.persistableValue()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  NSObject result;
  int64_t v15;
  unint64_t v16;
  unint64_t i;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int64_t v26;
  int64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  __int128 *v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57[3];

  v1 = *v0;
  if (*((_BYTE *)v0 + 16))
  {
    if (*((_BYTE *)v0 + 16) == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177830);
      v2 = swift_allocObject();
      v3 = MEMORY[0x1E0DEA968];
      *(_OWORD *)(v2 + 16) = xmmword_1B76DCB70;
      *(_QWORD *)(v2 + 56) = v3;
      *(_QWORD *)(v2 + 32) = 0xD000000000000010;
      *(_QWORD *)(v2 + 40) = 0x80000001B76E2DD0;
      v4 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
      v5 = (void *)sub_1B76DBAB0();
      swift_bridgeObjectRelease();
      v6 = objc_msgSend(v4, sel_initWithString_, v5);

      *(_QWORD *)(v2 + 88) = sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
      *(_QWORD *)(v2 + 64) = v6;
    }
    sub_1B765DF7C(0, &qword_1ED53B5E8);
    return (NSObject)sub_1B76DBC78();
  }
  v7 = v0[1];
  v8 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&v57[0] = MEMORY[0x1E0DEE9E8];
  v52 = MEMORY[0x1E0DEE9E8];
  v9 = v1 + 64;
  v10 = 1 << *(_BYTE *)(v1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v1 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  result.isa = (Class)swift_bridgeObjectRetain();
  v15 = 0;
  if (v12)
    goto LABEL_10;
LABEL_11:
  v18 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (v18 >= v13)
    goto LABEL_33;
  v19 = *(_QWORD *)(v9 + 8 * v18);
  ++v15;
  if (v19)
    goto LABEL_28;
  v15 = v18 + 1;
  if (v18 + 1 < v13)
  {
    v19 = *(_QWORD *)(v9 + 8 * v15);
    if (v19)
      goto LABEL_28;
    v15 = v18 + 2;
    if (v18 + 2 < v13)
    {
      v19 = *(_QWORD *)(v9 + 8 * v15);
      if (v19)
        goto LABEL_28;
      v15 = v18 + 3;
      if (v18 + 3 < v13)
      {
        v19 = *(_QWORD *)(v9 + 8 * v15);
        if (v19)
          goto LABEL_28;
        v15 = v18 + 4;
        if (v18 + 4 < v13)
        {
          v19 = *(_QWORD *)(v9 + 8 * v15);
          if (!v19)
          {
            v20 = v18 + 5;
            if (v20 < v13)
            {
              v19 = *(_QWORD *)(v9 + 8 * v20);
              if (v19)
              {
                v15 = v20;
                goto LABEL_28;
              }
              while (1)
              {
                v15 = v20 + 1;
                if (__OFADD__(v20, 1))
                  break;
                if (v15 >= v13)
                  goto LABEL_33;
                v19 = *(_QWORD *)(v9 + 8 * v15);
                ++v20;
                if (v19)
                  goto LABEL_28;
              }
LABEL_64:
              __break(1u);
              goto LABEL_65;
            }
            goto LABEL_33;
          }
LABEL_28:
          v12 = (v19 - 1) & v19;
          for (i = __clz(__rbit64(v19)) + (v15 << 6); ; i = v16 | (v15 << 6))
          {
            v21 = *(_BYTE *)(*(_QWORD *)(v1 + 48) + i);
            if (*(_BYTE *)(*(_QWORD *)(v1 + 56) + i) == 1)
            {
              sub_1B767E188((uint64_t)&v56, v21);
              if (!v12)
                goto LABEL_11;
            }
            else
            {
              sub_1B767E188((uint64_t)&v56, v21);
              if (!v12)
                goto LABEL_11;
            }
LABEL_10:
            v16 = __clz(__rbit64(v12));
            v12 &= v12 - 1;
          }
        }
      }
    }
  }
LABEL_33:
  swift_release();
  v50 = *(_QWORD *)&v57[0];
  v51 = v52;
  v55 = v8;
  v56 = v8;
  v22 = v7 + 64;
  v23 = 1 << *(_BYTE *)(v7 + 32);
  v24 = -1;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  v25 = v24 & *(_QWORD *)(v7 + 64);
  v26 = (unint64_t)(v23 + 63) >> 6;
  result.isa = (Class)swift_bridgeObjectRetain();
  v27 = 0;
  while (1)
  {
    if (v25)
    {
      v30 = __clz(__rbit64(v25));
      v25 &= v25 - 1;
      v31 = v30 | (v27 << 6);
      goto LABEL_58;
    }
    v32 = v27 + 1;
    if (__OFADD__(v27, 1))
      goto LABEL_63;
    if (v32 >= v26)
    {
LABEL_60:
      swift_release();
      v41 = v55;
      v42 = v56;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177830);
      v43 = swift_allocObject();
      v44 = MEMORY[0x1E0DEA968];
      *(_OWORD *)(v43 + 16) = xmmword_1B76DDBC0;
      *(_QWORD *)(v43 + 56) = v44;
      *(_QWORD *)(v43 + 32) = 0x6369767265536E6FLL;
      *(_QWORD *)(v43 + 40) = 0xEA00000000007365;
      v45 = sub_1B7664EC8(v50);
      swift_bridgeObjectRelease();
      v46 = sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
      *(_QWORD *)(v43 + 64) = v45;
      *(_QWORD *)(v43 + 120) = v44;
      *(_QWORD *)(v43 + 88) = v46;
      *(_QWORD *)(v43 + 96) = 0x697672655366666FLL;
      *(_QWORD *)(v43 + 104) = 0xEB00000000736563;
      v47 = sub_1B7664EC8(v51);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v43 + 128) = v47;
      *(_QWORD *)(v43 + 184) = v44;
      *(_QWORD *)(v43 + 152) = v46;
      strcpy((char *)(v43 + 160), "onApplications");
      *(_BYTE *)(v43 + 175) = -18;
      v48 = sub_1B7665174(v42);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v43 + 192) = v48;
      *(_QWORD *)(v43 + 248) = v44;
      *(_QWORD *)(v43 + 216) = v46;
      *(_QWORD *)(v43 + 224) = 0x696C70704166666FLL;
      *(_QWORD *)(v43 + 232) = 0xEF736E6F69746163;
      v49 = sub_1B7665174(v41);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v43 + 280) = v46;
      *(_QWORD *)(v43 + 256) = v49;
      sub_1B765DF7C(0, &qword_1ED53B5E8);
      return (NSObject)sub_1B76DBC78();
    }
    v33 = *(_QWORD *)(v22 + 8 * v32);
    ++v27;
    if (!v33)
    {
      v27 = v32 + 1;
      if (v32 + 1 >= v26)
        goto LABEL_60;
      v33 = *(_QWORD *)(v22 + 8 * v27);
      if (!v33)
      {
        v27 = v32 + 2;
        if (v32 + 2 >= v26)
          goto LABEL_60;
        v33 = *(_QWORD *)(v22 + 8 * v27);
        if (!v33)
        {
          v27 = v32 + 3;
          if (v32 + 3 >= v26)
            goto LABEL_60;
          v33 = *(_QWORD *)(v22 + 8 * v27);
          if (!v33)
          {
            v27 = v32 + 4;
            if (v32 + 4 >= v26)
              goto LABEL_60;
            v33 = *(_QWORD *)(v22 + 8 * v27);
            if (!v33)
              break;
          }
        }
      }
    }
LABEL_57:
    v25 = (v33 - 1) & v33;
    v31 = __clz(__rbit64(v33)) + (v27 << 6);
LABEL_58:
    v35 = *(_QWORD *)(v7 + 56);
    v36 = (__int128 *)(*(_QWORD *)(v7 + 48) + 48 * v31);
    v38 = v36[1];
    v37 = v36[2];
    v57[0] = *v36;
    v57[1] = v38;
    v57[2] = v37;
    if (*(_BYTE *)(v35 + v31) == 1)
    {
      sub_1B768A800((uint64_t)v57, (void (*)(uint64_t, uint64_t))sub_1B765DF08);
      sub_1B768A800((uint64_t)v57, (void (*)(uint64_t, uint64_t))sub_1B765DF08);
      sub_1B767F2D8((uint64_t)&v52, v57, (void (*)(uint64_t *))Application.hash(into:), (void (*)(uint64_t, uint64_t))sub_1B765DF08, &qword_1EF1780C0, (void (*)(uint64_t, unint64_t))sub_1B765DF1C);
      v28 = v53;
      v29 = v54;
      swift_bridgeObjectRelease();
      sub_1B765DF1C(v28, v29);
    }
    else
    {
      sub_1B768A800((uint64_t)v57, (void (*)(uint64_t, uint64_t))sub_1B765DF08);
      sub_1B768A800((uint64_t)v57, (void (*)(uint64_t, uint64_t))sub_1B765DF08);
      sub_1B767F2D8((uint64_t)&v52, v57, (void (*)(uint64_t *))Application.hash(into:), (void (*)(uint64_t, uint64_t))sub_1B765DF08, &qword_1EF1780C0, (void (*)(uint64_t, unint64_t))sub_1B765DF1C);
      v39 = v53;
      v40 = v54;
      swift_bridgeObjectRelease();
      sub_1B765DF1C(v39, v40);
    }
    swift_bridgeObjectRelease();
    result.isa = (Class)sub_1B768A858((uint64_t)v57, (void (*)(uint64_t, uint64_t))sub_1B765DF1C);
  }
  v34 = v32 + 5;
  if (v34 >= v26)
    goto LABEL_60;
  v33 = *(_QWORD *)(v22 + 8 * v34);
  if (v33)
  {
    v27 = v34;
    goto LABEL_57;
  }
  while (1)
  {
    v27 = v34 + 1;
    if (__OFADD__(v34, 1))
      break;
    if (v27 >= v26)
      goto LABEL_60;
    v33 = *(_QWORD *)(v22 + 8 * v27);
    ++v34;
    if (v33)
      goto LABEL_57;
  }
LABEL_65:
  __break(1u);
  return result;
}

void static UserSafetySettings.ScanningPolicy.value(from:)(uint64_t a1@<X0>, int64_t a2@<X8>)
{
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint8_t *v16;
  void *v17;
  char v18;
  id v19;
  char v20;
  void *v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  unint64_t v39;
  int64_t v40;
  unint64_t v41;
  int64_t v42;
  char v43;
  char v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  _BOOL8 v48;
  uint64_t v49;
  char v50;
  unint64_t v51;
  char v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  int64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  int64_t v62;
  unint64_t v63;
  int64_t v64;
  char v65;
  char v66;
  char v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  _BOOL8 v71;
  uint64_t v72;
  char v73;
  unint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  int64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  unint64_t v82;
  unint64_t v83;
  int64_t v84;
  unint64_t v85;
  int64_t v86;
  __int128 *v87;
  __int128 v88;
  __int128 v89;
  char v90;
  unint64_t v91;
  uint64_t v92;
  _BOOL8 v93;
  uint64_t v94;
  char v95;
  unint64_t v96;
  char v97;
  _OWORD *v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  uint64_t v102;
  int64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  int64_t v109;
  unint64_t v110;
  int64_t v111;
  __int128 *v112;
  __int128 v113;
  __int128 v114;
  char v115;
  unint64_t v116;
  uint64_t v117;
  _BOOL8 v118;
  uint64_t v119;
  char v120;
  unint64_t v121;
  char v122;
  _OWORD *v123;
  __int128 v124;
  __int128 v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  int64_t v129;
  int64_t v130;
  int64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  int64_t v138;
  int64_t v139;
  void *v140;
  char v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;

  if (!a1)
    goto LABEL_19;
  isUniquelyReferenced_nonNull_native = a1;
  objc_opt_self();
  v4 = swift_dynamicCastObjCClass();
  if (!v4)
  {
    if (qword_1EF177220 == -1)
      goto LABEL_6;
    goto LABEL_201;
  }
  v5 = (void *)v4;
  *(_QWORD *)&v145 = 0xD000000000000010;
  *((_QWORD *)&v145 + 1) = 0x80000001B76E2DD0;
  v6 = (id)isUniquelyReferenced_nonNull_native;
  v7 = objc_msgSend(v5, sel___swift_objectForKeyedSubscript_, sub_1B76DBEE8());
  swift_unknownObjectRelease();
  if (v7)
  {
    sub_1B76DBD50();
    swift_unknownObjectRelease();
  }
  else
  {
    v142 = 0u;
    v143 = 0u;
  }
  sub_1B765DE40((uint64_t)&v142, (uint64_t)&v145);
  if (*((_QWORD *)&v146 + 1))
  {
    sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
    if (swift_dynamicCast())
      v17 = v140;
    else
      v17 = 0;
  }
  else
  {
    sub_1B7670BD4((uint64_t)&v145);
    v17 = 0;
  }
  static UserSafetySettings.InterventionType.value(from:)(v17, &v141);

  v18 = v141;
  if (v141 != 2)
  {

    *(_QWORD *)a2 = v18 & 1;
    *(_QWORD *)(a2 + 8) = 0;
    v20 = 1;
LABEL_188:
    *(_BYTE *)(a2 + 16) = v20;
    return;
  }
  *(_QWORD *)&v145 = 0x6369767265536E6FLL;
  *((_QWORD *)&v145 + 1) = 0xEA00000000007365;
  v19 = objc_msgSend(v5, sel___swift_objectForKeyedSubscript_, sub_1B76DBEE8());
  swift_unknownObjectRelease();
  if (v19)
  {
    sub_1B76DBD50();
    swift_unknownObjectRelease();
  }
  else
  {
    v142 = 0u;
    v143 = 0u;
  }
  sub_1B765DE40((uint64_t)&v142, (uint64_t)&v145);
  if (*((_QWORD *)&v146 + 1))
  {
    sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
    if (swift_dynamicCast())
      v21 = v140;
    else
      v21 = 0;
  }
  else
  {
    sub_1B7670BD4((uint64_t)&v145);
    v21 = 0;
  }
  v22 = sub_1B76750D4(v21);

  v137 = v22;
  if (!v22)
  {
LABEL_187:

    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    v20 = 2;
    goto LABEL_188;
  }
  *(_QWORD *)&v145 = 0x697672655366666FLL;
  *((_QWORD *)&v145 + 1) = 0xEB00000000736563;
  v23 = objc_msgSend(v5, sel___swift_objectForKeyedSubscript_, sub_1B76DBEE8());
  swift_unknownObjectRelease();
  if (v23)
  {
    sub_1B76DBD50();
    swift_unknownObjectRelease();
  }
  else
  {
    v142 = 0u;
    v143 = 0u;
  }
  sub_1B765DE40((uint64_t)&v142, (uint64_t)&v145);
  if (*((_QWORD *)&v146 + 1))
  {
    sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
    if (swift_dynamicCast())
      v24 = v140;
    else
      v24 = 0;
  }
  else
  {
    sub_1B7670BD4((uint64_t)&v145);
    v24 = 0;
  }
  v25 = sub_1B76750D4(v24);

  v134 = v25;
  if (!v25)
  {
LABEL_186:
    swift_bridgeObjectRelease();
    goto LABEL_187;
  }
  strcpy((char *)&v145, "onApplications");
  HIBYTE(v145) = -18;
  isUniquelyReferenced_nonNull_native = sub_1B76DBEE8();
  v26 = objc_msgSend(v5, sel___swift_objectForKeyedSubscript_, isUniquelyReferenced_nonNull_native);
  swift_unknownObjectRelease();
  if (v26)
  {
    sub_1B76DBD50();
    swift_unknownObjectRelease();
  }
  else
  {
    v142 = 0u;
    v143 = 0u;
  }
  sub_1B765DE40((uint64_t)&v142, (uint64_t)&v145);
  if (*((_QWORD *)&v146 + 1))
  {
    sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
    if (swift_dynamicCast())
      v27 = v140;
    else
      v27 = 0;
  }
  else
  {
    sub_1B7670BD4((uint64_t)&v145);
    v27 = 0;
  }
  v28 = sub_1B7675660(v27);

  v133 = v28;
  if (!v28)
  {
LABEL_185:
    swift_bridgeObjectRelease();
    goto LABEL_186;
  }
  *(_QWORD *)&v145 = 0x696C70704166666FLL;
  *((_QWORD *)&v145 + 1) = 0xEF736E6F69746163;
  v29 = objc_msgSend(v5, sel___swift_objectForKeyedSubscript_, sub_1B76DBEE8());
  swift_unknownObjectRelease();
  if (v29)
  {
    sub_1B76DBD50();
    swift_unknownObjectRelease();
  }
  else
  {
    v142 = 0u;
    v143 = 0u;
  }
  sub_1B765DE40((uint64_t)&v142, (uint64_t)&v145);
  if (*((_QWORD *)&v146 + 1))
  {
    sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
    if (swift_dynamicCast())
      v30 = v140;
    else
      v30 = 0;
  }
  else
  {
    sub_1B7670BD4((uint64_t)&v145);
    v30 = 0;
  }
  v31 = sub_1B7675660(v30);

  v132 = v31;
  if (!v31)
  {
    swift_bridgeObjectRelease();
    goto LABEL_185;
  }
  v128 = v6;
  v130 = a2;
  v32 = 0;
  v33 = v137 + 56;
  a2 = 1;
  v34 = 1 << *(_BYTE *)(v137 + 32);
  v35 = -1;
  if (v34 < 64)
    v35 = ~(-1 << v34);
  v36 = v35 & *(_QWORD *)(v137 + 56);
  v131 = (unint64_t)(v34 + 63) >> 6;
  v37 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    if (v36)
    {
      v38 = __clz(__rbit64(v36));
      v36 &= v36 - 1;
      v39 = v38 | (v32 << 6);
      goto LABEL_76;
    }
    v40 = v32 + 1;
    if (__OFADD__(v32, 1))
      goto LABEL_197;
    if (v40 >= v131)
      goto LABEL_87;
    v41 = *(_QWORD *)(v33 + 8 * v40);
    ++v32;
    if (!v41)
    {
      v32 = v40 + 1;
      if (v40 + 1 >= v131)
        goto LABEL_87;
      v41 = *(_QWORD *)(v33 + 8 * v32);
      if (!v41)
      {
        v32 = v40 + 2;
        if (v40 + 2 >= v131)
          goto LABEL_87;
        v41 = *(_QWORD *)(v33 + 8 * v32);
        if (!v41)
          break;
      }
    }
LABEL_75:
    v36 = (v41 - 1) & v41;
    v39 = __clz(__rbit64(v41)) + (v32 << 6);
LABEL_76:
    v43 = *(_BYTE *)(*(_QWORD *)(v137 + 48) + v39);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v145 = v37;
    sub_1B76605EC(v43);
    v46 = v45;
    v47 = v37[2];
    v48 = (v44 & 1) == 0;
    v49 = v47 + v48;
    if (__OFADD__(v47, v48))
    {
      __break(1u);
LABEL_190:
      __break(1u);
LABEL_191:
      __break(1u);
LABEL_192:
      __break(1u);
LABEL_193:
      __break(1u);
LABEL_194:
      __break(1u);
LABEL_195:
      __break(1u);
LABEL_196:
      __break(1u);
LABEL_197:
      __break(1u);
LABEL_198:
      __break(1u);
LABEL_199:
      __break(1u);
LABEL_200:
      __break(1u);
LABEL_201:
      swift_once();
LABEL_6:
      v8 = sub_1B76DB8B8();
      __swift_project_value_buffer(v8, (uint64_t)qword_1EF177E18);
      v9 = (id)isUniquelyReferenced_nonNull_native;
      v10 = sub_1B76DB8A0();
      v11 = sub_1B76DBC90();
      if (os_log_type_enabled(v10, v11))
      {
        v129 = a2;
        v12 = (uint8_t *)swift_slowAlloc();
        v13 = swift_slowAlloc();
        *(_QWORD *)&v145 = v13;
        *(_DWORD *)v12 = 136446210;
        *(_QWORD *)&v142 = isUniquelyReferenced_nonNull_native;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774F8);
        v14 = sub_1B76DBD14();
        *(_QWORD *)&v142 = sub_1B7669B50(v14, v15, (uint64_t *)&v145);
        sub_1B76DBD38();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1B7656000, v10, v11, "Persistable value %{public}s not decodable to UserSafetySettings.ScanningPolicy", v12, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCA9590](v13, -1, -1);
        v16 = v12;
        a2 = v129;
        MEMORY[0x1BCCA9590](v16, -1, -1);

      }
      else
      {

      }
LABEL_19:
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
      v20 = -1;
      goto LABEL_188;
    }
    v50 = v44;
    if (v37[3] >= v49)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v37 = (_QWORD *)v145;
        if ((v44 & 1) != 0)
          goto LABEL_58;
      }
      else
      {
        sub_1B767D580();
        v37 = (_QWORD *)v145;
        if ((v50 & 1) != 0)
          goto LABEL_58;
      }
    }
    else
    {
      sub_1B767BE5C(v49, isUniquelyReferenced_nonNull_native);
      sub_1B76605EC(v43);
      if ((v50 & 1) != (v52 & 1))
        goto LABEL_206;
      v46 = v51;
      v37 = (_QWORD *)v145;
      if ((v50 & 1) != 0)
      {
LABEL_58:
        *(_BYTE *)(v37[7] + v46) = 1;
        goto LABEL_59;
      }
    }
    v37[(v46 >> 6) + 8] |= 1 << v46;
    *(_BYTE *)(v37[6] + v46) = v43;
    *(_BYTE *)(v37[7] + v46) = 1;
    v53 = v37[2];
    v54 = __OFADD__(v53, 1);
    v55 = v53 + 1;
    if (v54)
      goto LABEL_193;
    v37[2] = v55;
LABEL_59:
    swift_bridgeObjectRelease();
  }
  v42 = v40 + 3;
  if (v42 >= v131)
    goto LABEL_87;
  v41 = *(_QWORD *)(v33 + 8 * v42);
  if (v41)
  {
    v32 = v42;
    goto LABEL_75;
  }
  while (1)
  {
    v32 = v42 + 1;
    if (__OFADD__(v42, 1))
    {
      __break(1u);
      goto LABEL_203;
    }
    if (v32 >= v131)
      break;
    v41 = *(_QWORD *)(v33 + 8 * v32);
    ++v42;
    if (v41)
      goto LABEL_75;
  }
LABEL_87:
  swift_release();
  v56 = 0;
  v57 = v134 + 56;
  v58 = 1 << *(_BYTE *)(v134 + 32);
  v59 = -1;
  if (v58 < 64)
    v59 = ~(-1 << v58);
  isUniquelyReferenced_nonNull_native = v59 & *(_QWORD *)(v134 + 56);
  a2 = (unint64_t)(v58 + 63) >> 6;
  while (2)
  {
    if (isUniquelyReferenced_nonNull_native)
    {
      v60 = __clz(__rbit64(isUniquelyReferenced_nonNull_native));
      isUniquelyReferenced_nonNull_native &= isUniquelyReferenced_nonNull_native - 1;
      v61 = v60 | (v56 << 6);
      goto LABEL_108;
    }
    v62 = v56 + 1;
    if (__OFADD__(v56, 1))
      goto LABEL_198;
    if (v62 < a2)
    {
      v63 = *(_QWORD *)(v57 + 8 * v62);
      ++v56;
      if (!v63)
      {
        v56 = v62 + 1;
        if (v62 + 1 >= a2)
          break;
        v63 = *(_QWORD *)(v57 + 8 * v56);
        if (!v63)
        {
          v56 = v62 + 2;
          if (v62 + 2 >= a2)
            break;
          v63 = *(_QWORD *)(v57 + 8 * v56);
          if (!v63)
          {
            v64 = v62 + 3;
            if (v64 >= a2)
              break;
            v63 = *(_QWORD *)(v57 + 8 * v64);
            if (!v63)
            {
              while (1)
              {
                v56 = v64 + 1;
                if (__OFADD__(v64, 1))
                  break;
                if (v56 >= a2)
                  goto LABEL_119;
                v63 = *(_QWORD *)(v57 + 8 * v56);
                ++v64;
                if (v63)
                  goto LABEL_107;
              }
LABEL_203:
              __break(1u);
              goto LABEL_204;
            }
            v56 = v64;
          }
        }
      }
LABEL_107:
      isUniquelyReferenced_nonNull_native = (v63 - 1) & v63;
      v61 = __clz(__rbit64(v63)) + (v56 << 6);
LABEL_108:
      v65 = *(_BYTE *)(*(_QWORD *)(v134 + 48) + v61);
      v66 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v145 = v37;
      sub_1B76605EC(v65);
      v69 = v68;
      v70 = v37[2];
      v71 = (v67 & 1) == 0;
      v72 = v70 + v71;
      if (__OFADD__(v70, v71))
        goto LABEL_190;
      v73 = v67;
      if (v37[3] >= v72)
      {
        if ((v66 & 1) != 0)
        {
          v37 = (_QWORD *)v145;
          if ((v67 & 1) == 0)
            goto LABEL_115;
        }
        else
        {
          sub_1B767D580();
          v37 = (_QWORD *)v145;
          if ((v73 & 1) == 0)
            goto LABEL_115;
        }
      }
      else
      {
        sub_1B767BE5C(v72, v66);
        sub_1B76605EC(v65);
        if ((v73 & 1) != (v75 & 1))
          goto LABEL_206;
        v69 = v74;
        v37 = (_QWORD *)v145;
        if ((v73 & 1) == 0)
        {
LABEL_115:
          v37[(v69 >> 6) + 8] |= 1 << v69;
          *(_BYTE *)(v37[6] + v69) = v65;
          *(_BYTE *)(v37[7] + v69) = 0;
          v76 = v37[2];
          v54 = __OFADD__(v76, 1);
          v77 = v76 + 1;
          if (v54)
            goto LABEL_194;
          v37[2] = v77;
          goto LABEL_91;
        }
      }
      *(_BYTE *)(v37[7] + v69) = 0;
LABEL_91:
      swift_bridgeObjectRelease();
      continue;
    }
    break;
  }
LABEL_119:
  swift_release();
  v78 = 0;
  v135 = v133 + 56;
  v79 = 1 << *(_BYTE *)(v133 + 32);
  v80 = -1;
  if (v79 < 64)
    v80 = ~(-1 << v79);
  a2 = v80 & *(_QWORD *)(v133 + 56);
  v81 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v138 = (unint64_t)(v79 + 63) >> 6;
  while (2)
  {
    if (a2)
    {
      v82 = __clz(__rbit64(a2));
      a2 &= a2 - 1;
      v83 = v82 | (v78 << 6);
      goto LABEL_140;
    }
    v84 = v78 + 1;
    if (__OFADD__(v78, 1))
      goto LABEL_199;
    if (v84 < v138)
    {
      v85 = *(_QWORD *)(v135 + 8 * v84);
      ++v78;
      if (!v85)
      {
        v78 = v84 + 1;
        if (v84 + 1 >= v138)
          break;
        v85 = *(_QWORD *)(v135 + 8 * v78);
        if (!v85)
        {
          v78 = v84 + 2;
          if (v84 + 2 >= v138)
            break;
          v85 = *(_QWORD *)(v135 + 8 * v78);
          if (!v85)
          {
            v86 = v84 + 3;
            if (v86 >= v138)
              break;
            v85 = *(_QWORD *)(v135 + 8 * v86);
            if (!v85)
            {
              while (1)
              {
                v78 = v86 + 1;
                if (__OFADD__(v86, 1))
                  break;
                if (v78 >= v138)
                  goto LABEL_151;
                v85 = *(_QWORD *)(v135 + 8 * v78);
                ++v86;
                if (v85)
                  goto LABEL_139;
              }
LABEL_204:
              __break(1u);
              goto LABEL_205;
            }
            v78 = v86;
          }
        }
      }
LABEL_139:
      a2 = (v85 - 1) & v85;
      v83 = __clz(__rbit64(v85)) + (v78 << 6);
LABEL_140:
      v87 = (__int128 *)(*(_QWORD *)(v133 + 48) + 48 * v83);
      v89 = v87[1];
      v88 = v87[2];
      v142 = *v87;
      v143 = v89;
      v144 = v88;
      sub_1B768A800((uint64_t)&v142, (void (*)(uint64_t, uint64_t))sub_1B765DF08);
      sub_1B768A800((uint64_t)&v142, (void (*)(uint64_t, uint64_t))sub_1B765DF08);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v145 = v81;
      v91 = sub_1B76605D0((uint64_t *)&v142);
      v92 = v81[2];
      v93 = (v90 & 1) == 0;
      v94 = v92 + v93;
      if (__OFADD__(v92, v93))
        goto LABEL_191;
      v95 = v90;
      if (v81[3] >= v94)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v81 = (_QWORD *)v145;
          if ((v90 & 1) == 0)
            goto LABEL_147;
        }
        else
        {
          sub_1B767D390();
          v81 = (_QWORD *)v145;
          if ((v95 & 1) == 0)
            goto LABEL_147;
        }
      }
      else
      {
        sub_1B767BA5C(v94, isUniquelyReferenced_nonNull_native);
        v96 = sub_1B76605D0((uint64_t *)&v142);
        if ((v95 & 1) != (v97 & 1))
          goto LABEL_207;
        v91 = v96;
        v81 = (_QWORD *)v145;
        if ((v95 & 1) == 0)
        {
LABEL_147:
          v81[(v91 >> 6) + 8] |= 1 << v91;
          v98 = (_OWORD *)(v81[6] + 48 * v91);
          v99 = v142;
          v100 = v144;
          v98[1] = v143;
          v98[2] = v100;
          *v98 = v99;
          *(_BYTE *)(v81[7] + v91) = 1;
          v101 = v81[2];
          v54 = __OFADD__(v101, 1);
          v102 = v101 + 1;
          if (v54)
            goto LABEL_195;
          v81[2] = v102;
          sub_1B768A800((uint64_t)&v142, (void (*)(uint64_t, uint64_t))sub_1B765DF08);
          goto LABEL_123;
        }
      }
      *(_BYTE *)(v81[7] + v91) = 1;
LABEL_123:
      swift_bridgeObjectRelease();
      sub_1B768A858((uint64_t)&v142, (void (*)(uint64_t, uint64_t))sub_1B765DF1C);
      sub_1B768A858((uint64_t)&v142, (void (*)(uint64_t, uint64_t))sub_1B765DF1C);
      continue;
    }
    break;
  }
LABEL_151:
  swift_release();
  v103 = 0;
  v136 = v132 + 56;
  v104 = 1 << *(_BYTE *)(v132 + 32);
  v105 = -1;
  if (v104 < 64)
    v105 = ~(-1 << v104);
  v106 = v105 & *(_QWORD *)(v132 + 56);
  v139 = (unint64_t)(v104 + 63) >> 6;
  a2 = (int64_t)sub_1B765DF08;
  while (2)
  {
    if (v106)
    {
      v107 = __clz(__rbit64(v106));
      v106 &= v106 - 1;
      v108 = v107 | (v103 << 6);
      goto LABEL_172;
    }
    v109 = v103 + 1;
    if (__OFADD__(v103, 1))
      goto LABEL_200;
    if (v109 >= v139)
    {
LABEL_183:

      swift_release();
      *(_QWORD *)v130 = v37;
      *(_QWORD *)(v130 + 8) = v81;
      *(_BYTE *)(v130 + 16) = 0;
      return;
    }
    v110 = *(_QWORD *)(v136 + 8 * v109);
    ++v103;
    if (v110)
      goto LABEL_171;
    v103 = v109 + 1;
    if (v109 + 1 >= v139)
      goto LABEL_183;
    v110 = *(_QWORD *)(v136 + 8 * v103);
    if (v110)
      goto LABEL_171;
    v103 = v109 + 2;
    if (v109 + 2 >= v139)
      goto LABEL_183;
    v110 = *(_QWORD *)(v136 + 8 * v103);
    if (v110)
    {
LABEL_171:
      v106 = (v110 - 1) & v110;
      v108 = __clz(__rbit64(v110)) + (v103 << 6);
LABEL_172:
      v112 = (__int128 *)(*(_QWORD *)(v132 + 48) + 48 * v108);
      v114 = v112[1];
      v113 = v112[2];
      v145 = *v112;
      v146 = v114;
      v147 = v113;
      sub_1B768A800((uint64_t)&v145, (void (*)(uint64_t, uint64_t))sub_1B765DF08);
      sub_1B768A800((uint64_t)&v145, (void (*)(uint64_t, uint64_t))sub_1B765DF08);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v116 = sub_1B76605D0((uint64_t *)&v145);
      v117 = v81[2];
      v118 = (v115 & 1) == 0;
      v119 = v117 + v118;
      if (__OFADD__(v117, v118))
        goto LABEL_192;
      v120 = v115;
      if (v81[3] < v119)
      {
        sub_1B767BA5C(v119, isUniquelyReferenced_nonNull_native);
        v121 = sub_1B76605D0((uint64_t *)&v145);
        if ((v120 & 1) != (v122 & 1))
          goto LABEL_207;
        v116 = v121;
        if ((v120 & 1) == 0)
          goto LABEL_179;
LABEL_154:
        *(_BYTE *)(v81[7] + v116) = 0;
LABEL_155:
        swift_bridgeObjectRelease();
        sub_1B768A858((uint64_t)&v145, (void (*)(uint64_t, uint64_t))sub_1B765DF1C);
        sub_1B768A858((uint64_t)&v145, (void (*)(uint64_t, uint64_t))sub_1B765DF1C);
        continue;
      }
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v115 & 1) != 0)
          goto LABEL_154;
      }
      else
      {
        sub_1B767D390();
        if ((v120 & 1) != 0)
          goto LABEL_154;
      }
LABEL_179:
      v81[(v116 >> 6) + 8] |= 1 << v116;
      v123 = (_OWORD *)(v81[6] + 48 * v116);
      v124 = v145;
      v125 = v147;
      v123[1] = v146;
      v123[2] = v125;
      *v123 = v124;
      *(_BYTE *)(v81[7] + v116) = 0;
      v126 = v81[2];
      v54 = __OFADD__(v126, 1);
      v127 = v126 + 1;
      if (v54)
        goto LABEL_196;
      v81[2] = v127;
      sub_1B768A800((uint64_t)&v145, (void (*)(uint64_t, uint64_t))sub_1B765DF08);
      goto LABEL_155;
    }
    break;
  }
  v111 = v109 + 3;
  if (v111 >= v139)
    goto LABEL_183;
  v110 = *(_QWORD *)(v136 + 8 * v111);
  if (v110)
  {
    v103 = v111;
    goto LABEL_171;
  }
  while (1)
  {
    v103 = v111 + 1;
    if (__OFADD__(v111, 1))
      break;
    if (v103 >= v139)
      goto LABEL_183;
    v110 = *(_QWORD *)(v136 + 8 * v103);
    ++v111;
    if (v110)
      goto LABEL_171;
  }
LABEL_205:
  __break(1u);
LABEL_206:
  sub_1B76DBF18();
  __break(1u);
LABEL_207:
  sub_1B76DBF18();
  __break(1u);
}

uint64_t sub_1B767BA5C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t i;
  char v40;
  char v41;
  uint64_t v42;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1780A8);
  v40 = a2;
  v6 = sub_1B76DBE40();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_47;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v38 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v37 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
      return result;
    }
    if (v18 >= v37)
      break;
    v19 = v38;
    v20 = v38[v18];
    ++v13;
    if (!v20)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v37)
        goto LABEL_40;
      v20 = v38[v13];
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v37)
        {
LABEL_40:
          swift_release();
          v3 = v2;
          if ((v40 & 1) == 0)
            goto LABEL_47;
          goto LABEL_43;
        }
        v20 = v38[v21];
        if (!v20)
        {
          while (1)
          {
            v13 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_49;
            if (v13 >= v37)
              goto LABEL_40;
            v20 = v38[v13];
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v13 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    v22 = *(_QWORD *)(v5 + 56);
    v23 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 48 * v17);
    v25 = *v23;
    v24 = v23[1];
    v27 = v23[2];
    v26 = v23[3];
    v28 = v23[5];
    v42 = v23[4];
    v41 = *(_BYTE *)(v22 + v17);
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      sub_1B765DF08(v27, v26);
      swift_bridgeObjectRetain();
    }
    sub_1B76DBF54();
    sub_1B76DBF6C();
    if (v24)
    {
      swift_bridgeObjectRetain();
      sub_1B76DBB1C();
      swift_bridgeObjectRelease();
    }
    if (v26 >> 60 == 15)
    {
      sub_1B76DBF6C();
      if (v28)
        goto LABEL_28;
    }
    else
    {
      sub_1B76DBF6C();
      sub_1B765DDFC(v27, v26);
      sub_1B76DB834();
      sub_1B765DF1C(v27, v26);
      if (v28)
      {
LABEL_28:
        sub_1B76DBF6C();
        swift_bridgeObjectRetain();
        sub_1B76DBB1C();
        swift_bridgeObjectRelease();
        goto LABEL_31;
      }
    }
    sub_1B76DBF6C();
LABEL_31:
    result = sub_1B76DBF78();
    v29 = -1 << *(_BYTE *)(v7 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v11 + 8 * (v30 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v11 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_48;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v11 + 8 * v31);
      }
      while (v35 == -1);
      v14 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 48 * v14);
    *v15 = v25;
    v15[1] = v24;
    v15[2] = v27;
    v15[3] = v26;
    v15[4] = v42;
    v15[5] = v28;
    *(_BYTE *)(*(_QWORD *)(v7 + 56) + v14) = v41;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v2;
  v19 = v38;
  if ((v40 & 1) == 0)
    goto LABEL_47;
LABEL_43:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v19, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_47:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1B767BE5C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t *v19;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1780B0);
  v6 = sub_1B76DBE40();
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_26;
  v7 = 1 << *(_BYTE *)(v5 + 32);
  v19 = v2;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v5 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  swift_retain();
  if (v9)
  {
    v11 = __clz(__rbit64(v9));
    goto LABEL_18;
  }
  if (v10 <= 1)
  {
    swift_release();
    v12 = (_QWORD *)(v5 + 64);
    if ((a2 & 1) == 0)
      goto LABEL_26;
    goto LABEL_22;
  }
  v12 = (_QWORD *)(v5 + 64);
  v13 = *(_QWORD *)(v5 + 72);
  v14 = 1;
  if (v13)
    goto LABEL_17;
  v14 = 2;
  if (v10 <= 2)
    goto LABEL_19;
  v13 = *(_QWORD *)(v5 + 80);
  if (v13)
  {
LABEL_17:
    v11 = __clz(__rbit64(v13)) + (v14 << 6);
LABEL_18:
    v16 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v11);
    sub_1B76DBF54();
    __asm { BR              X8 }
  }
  v15 = 3;
  if (v10 > 3)
  {
    v13 = *(_QWORD *)(v5 + 88);
    if (v13)
    {
      v14 = 3;
      goto LABEL_17;
    }
    while (1)
    {
      v14 = v15 + 1;
      if (__OFADD__(v15, 1))
      {
        __break(1u);
        JUMPOUT(0x1B767C1D0);
      }
      if (v14 >= v10)
        break;
      v13 = *(_QWORD *)(v5 + 64 + 8 * v14);
      ++v15;
      if (v13)
        goto LABEL_17;
    }
  }
LABEL_19:
  swift_release();
  v3 = v19;
  if ((a2 & 1) == 0)
    goto LABEL_26;
LABEL_22:
  v17 = 1 << *(_BYTE *)(v5 + 32);
  if (v17 >= 64)
    bzero(v12, ((unint64_t)(v17 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v12 = -1 << v17;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_26:
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_1B767C1E4(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  int64_t v42;
  _QWORD *v43;
  int v44;
  char *v45;
  uint64_t v46;

  v3 = v2;
  v46 = sub_1B76DB888();
  v5 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46, v6);
  v45 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1775F8);
  v44 = a2;
  v9 = sub_1B76DBE40();
  v10 = v9;
  if (*(_QWORD *)(v8 + 16))
  {
    v41 = v2;
    v11 = 1 << *(_BYTE *)(v8 + 32);
    v12 = *(_QWORD *)(v8 + 64);
    v43 = (_QWORD *)(v8 + 64);
    if (v11 < 64)
      v13 = ~(-1 << v11);
    else
      v13 = -1;
    v14 = v13 & v12;
    v42 = (unint64_t)(v11 + 63) >> 6;
    v15 = v9 + 64;
    result = swift_retain();
    v17 = 0;
    while (1)
    {
      if (v14)
      {
        v20 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        v21 = v20 | (v17 << 6);
      }
      else
      {
        v22 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v42)
          goto LABEL_34;
        v23 = v43[v22];
        ++v17;
        if (!v23)
        {
          v17 = v22 + 1;
          if (v22 + 1 >= v42)
            goto LABEL_34;
          v23 = v43[v17];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v42)
            {
LABEL_34:
              swift_release();
              v3 = v41;
              if ((v44 & 1) != 0)
              {
                v39 = 1 << *(_BYTE *)(v8 + 32);
                if (v39 >= 64)
                  bzero(v43, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v43 = -1 << v39;
                *(_QWORD *)(v8 + 16) = 0;
              }
              break;
            }
            v23 = v43[v24];
            if (!v23)
            {
              while (1)
              {
                v17 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_41;
                if (v17 >= v42)
                  goto LABEL_34;
                v23 = v43[v17];
                ++v24;
                if (v23)
                  goto LABEL_21;
              }
            }
            v17 = v24;
          }
        }
LABEL_21:
        v14 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v17 << 6);
      }
      v25 = *(_QWORD *)(v8 + 56);
      v26 = v8;
      v27 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v21);
      v29 = *v27;
      v28 = v27[1];
      v30 = *(_QWORD *)(v5 + 72);
      v31 = v25 + v30 * v21;
      if ((v44 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v45, v31, v46);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v45, v31, v46);
        swift_bridgeObjectRetain();
      }
      sub_1B76DBF54();
      sub_1B76DBB1C();
      result = sub_1B76DBF78();
      v32 = -1 << *(_BYTE *)(v10 + 32);
      v33 = result & ~v32;
      v34 = v33 >> 6;
      if (((-1 << v33) & ~*(_QWORD *)(v15 + 8 * (v33 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v15 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v35 = 0;
        v36 = (unint64_t)(63 - v32) >> 6;
        do
        {
          if (++v34 == v36 && (v35 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v37 = v34 == v36;
          if (v34 == v36)
            v34 = 0;
          v35 |= v37;
          v38 = *(_QWORD *)(v15 + 8 * v34);
        }
        while (v38 == -1);
        v18 = __clz(__rbit64(~v38)) + (v34 << 6);
      }
      *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v18);
      *v19 = v29;
      v19[1] = v28;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 56) + v30 * v18, v45, v46);
      ++*(_QWORD *)(v10 + 16);
      v8 = v26;
    }
  }
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_1B767C54C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B080);
  v38 = a2;
  v6 = sub_1B76DBE40();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v36)
        goto LABEL_33;
      v23 = *(_QWORD *)(v37 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v36)
              goto LABEL_33;
            v23 = *(_QWORD *)(v37 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v33 = v32;
    }
    sub_1B76DBF54();
    sub_1B76DBB1C();
    result = sub_1B76DBF78();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v22 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1B767C858(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t i;
  int v43;

  v3 = v2;
  v5 = sub_1B76DB8D0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178048);
  v43 = a2;
  v11 = sub_1B76DBE40();
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_41;
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 64);
  v41 = (_QWORD *)(v10 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v39 = v2;
  v40 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11 + 64;
  result = swift_retain();
  v19 = 0;
  for (i = v10; ; v10 = i)
  {
    if (v16)
    {
      v21 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v22 = v21 | (v19 << 6);
      goto LABEL_22;
    }
    v23 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = v41;
    v25 = v41[v23];
    ++v19;
    if (!v25)
    {
      v19 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_34;
      v25 = v41[v19];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_34:
          swift_release();
          v3 = v39;
          if ((v43 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v25 = v41[v26];
        if (!v25)
        {
          while (1)
          {
            v19 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_43;
            if (v19 >= v40)
              goto LABEL_34;
            v25 = v41[v19];
            ++v26;
            if (v25)
              goto LABEL_21;
          }
        }
        v19 = v26;
      }
    }
LABEL_21:
    v16 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v19 << 6);
LABEL_22:
    v27 = *(_QWORD *)(v6 + 72);
    v28 = *(_QWORD *)(v10 + 48) + v27 * v22;
    if ((v43 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v9, v28, v5);
      v29 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v22);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v9, v28, v5);
      v29 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v22);
      swift_bridgeObjectRetain();
    }
    sub_1B765DAD0(&qword_1EF1775C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95660], MEMORY[0x1E0C95670]);
    result = sub_1B76DBA74();
    v30 = -1 << *(_BYTE *)(v12 + 32);
    v31 = result & ~v30;
    v32 = v31 >> 6;
    if (((-1 << v31) & ~*(_QWORD *)(v17 + 8 * (v31 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v17 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v35 = v32 == v34;
        if (v32 == v34)
          v32 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v17 + 8 * v32);
      }
      while (v36 == -1);
      v20 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(_QWORD *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v12 + 48) + v27 * v20, v9, v5);
    *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v20) = v29;
    ++*(_QWORD *)(v12 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = v41;
  if ((v43 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v37 = 1 << *(_BYTE *)(v10 + 32);
  if (v37 >= 64)
    bzero(v24, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v37;
  *(_QWORD *)(v10 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v12;
  return result;
}

uint64_t sub_1B767CBEC(uint64_t a1, char a2)
{
  return sub_1B767CC24(a1, a2, &qword_1EF178090, (void (*)(uint64_t, unint64_t))sub_1B765DF08, (void (*)(uint64_t, unint64_t))sub_1B765DF1C);
}

uint64_t sub_1B767CC08(uint64_t a1, char a2)
{
  return sub_1B767CC24(a1, a2, &qword_1EF178088, (void (*)(uint64_t, unint64_t))sub_1B765E0D4, (void (*)(uint64_t, unint64_t))sub_1B765E0D8);
}

uint64_t sub_1B767CC24(uint64_t a1, char a2, uint64_t *a3, void (*a4)(uint64_t, unint64_t), void (*a5)(uint64_t, unint64_t))
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t i;
  char v45;
  char v46;
  uint64_t v47;

  v6 = v5;
  v8 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v45 = a2;
  v9 = sub_1B76DBE40();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_47;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v41 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v12 = ~(-1 << v11);
  else
    v12 = -1;
  v13 = v12 & *(_QWORD *)(v8 + 64);
  v40 = (unint64_t)(v11 + 63) >> 6;
  v14 = v9 + 64;
  result = swift_retain();
  v16 = 0;
  for (i = v8; ; v8 = i)
  {
    if (v13)
    {
      v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v20 = v19 | (v16 << 6);
      goto LABEL_22;
    }
    v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
      return result;
    }
    if (v21 >= v40)
      break;
    v22 = v41;
    v23 = v41[v21];
    ++v16;
    if (!v23)
    {
      v16 = v21 + 1;
      if (v21 + 1 >= v40)
        goto LABEL_40;
      v23 = v41[v16];
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v40)
        {
LABEL_40:
          swift_release();
          v6 = v5;
          if ((v45 & 1) == 0)
            goto LABEL_47;
          goto LABEL_43;
        }
        v23 = v41[v24];
        if (!v23)
        {
          while (1)
          {
            v16 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_49;
            if (v16 >= v40)
              goto LABEL_40;
            v23 = v41[v16];
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v16 = v24;
      }
    }
LABEL_21:
    v13 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v16 << 6);
LABEL_22:
    v25 = *(_QWORD *)(v8 + 56);
    v26 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 48 * v20);
    v27 = *v26;
    v28 = v26[1];
    v30 = v26[2];
    v29 = v26[3];
    v31 = v26[5];
    v47 = v26[4];
    v46 = *(_BYTE *)(v25 + v20);
    if ((v45 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      a4(v30, v29);
      swift_bridgeObjectRetain();
    }
    sub_1B76DBF54();
    sub_1B76DBF6C();
    if (v28)
    {
      swift_bridgeObjectRetain();
      sub_1B76DBB1C();
      swift_bridgeObjectRelease();
    }
    if (v29 >> 60 == 15)
    {
      sub_1B76DBF6C();
      if (v31)
        goto LABEL_28;
    }
    else
    {
      sub_1B76DBF6C();
      sub_1B765DDFC(v30, v29);
      sub_1B76DB834();
      a5(v30, v29);
      if (v31)
      {
LABEL_28:
        sub_1B76DBF6C();
        swift_bridgeObjectRetain();
        sub_1B76DBB1C();
        swift_bridgeObjectRelease();
        goto LABEL_31;
      }
    }
    sub_1B76DBF6C();
LABEL_31:
    result = sub_1B76DBF78();
    v32 = -1 << *(_BYTE *)(v10 + 32);
    v33 = result & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v14 + 8 * (v33 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v14 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_48;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v14 + 8 * v34);
      }
      while (v38 == -1);
      v17 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 48 * v17);
    *v18 = v27;
    v18[1] = v28;
    v18[2] = v30;
    v18[3] = v29;
    v18[4] = v47;
    v18[5] = v31;
    *(_BYTE *)(*(_QWORD *)(v10 + 56) + v17) = v46;
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v6 = v5;
  v22 = v41;
  if ((v45 & 1) == 0)
    goto LABEL_47;
LABEL_43:
  v39 = 1 << *(_BYTE *)(v8 + 32);
  if (v39 >= 64)
    bzero(v22, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v39;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_47:
  result = swift_release();
  *v6 = v10;
  return result;
}

unint64_t sub_1B767D02C(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178080);
  v26 = (_QWORD *)sub_1B76DBE40();
  if (*(_QWORD *)(v5 + 16))
  {
    v6 = 1 << *(_BYTE *)(v5 + 32);
    v24 = v2;
    v25 = (_QWORD *)(v5 + 64);
    v7 = -1;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    v8 = v7 & *(_QWORD *)(v5 + 64);
    v9 = (unint64_t)(v6 + 63) >> 6;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v8)
      {
        v12 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v13 = v12 | (v11 << 6);
      }
      else
      {
        v14 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v14 >= v9)
          goto LABEL_22;
        v15 = v25[v14];
        ++v11;
        if (!v15)
        {
          v11 = v14 + 1;
          if (v14 + 1 >= v9)
            goto LABEL_22;
          v15 = v25[v11];
          if (!v15)
          {
            v16 = v14 + 2;
            if (v16 >= v9)
            {
LABEL_22:
              swift_release();
              v3 = v24;
              if ((a2 & 1) != 0)
              {
                v23 = 1 << *(_BYTE *)(v5 + 32);
                if (v23 > 63)
                  bzero(v25, ((unint64_t)(v23 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v25 = -1 << v23;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v15 = v25[v16];
            if (!v15)
            {
              while (1)
              {
                v11 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_29;
                if (v11 >= v9)
                  goto LABEL_22;
                v15 = v25[v11];
                ++v16;
                if (v15)
                  goto LABEL_19;
              }
            }
            v11 = v16;
          }
        }
LABEL_19:
        v8 = (v15 - 1) & v15;
        v13 = __clz(__rbit64(v15)) + (v11 << 6);
      }
      v17 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 32 * v13);
      v19 = *v17;
      v18 = v17[1];
      v21 = v17[2];
      v20 = v17[3];
      v22 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v13);
      if ((a2 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_1B765DF08(v21, v20);
      }
      result = sub_1B767D244(v19, v18, v21, v20, v22, v26);
    }
  }
  result = swift_release();
  *v3 = v26;
  return result;
}

unint64_t sub_1B767D244(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, char a5, _QWORD *a6)
{
  unint64_t result;
  _QWORD *v13;

  sub_1B76DBF54();
  sub_1B76DBF6C();
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1B76DBB1C();
    swift_bridgeObjectRelease();
  }
  sub_1B76DBF6C();
  if (a4 >> 60 != 15)
  {
    sub_1B765DDFC(a3, a4);
    sub_1B76DB834();
    sub_1B765DF1C(a3, a4);
  }
  sub_1B76DBF78();
  result = sub_1B76DBD74();
  *(_QWORD *)((char *)a6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  v13 = (_QWORD *)(a6[6] + 32 * result);
  *v13 = a1;
  v13[1] = a2;
  v13[2] = a3;
  v13[3] = a4;
  *(_BYTE *)(a6[7] + result) = a5;
  ++a6[2];
  return result;
}

void *sub_1B767D390()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  __int128 v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1780A8);
  v2 = *v0;
  v3 = sub_1B76DBE34();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(v2 + 48) + 48 * v15;
    v17 = *(_QWORD *)(v16 + 8);
    v18 = *(_QWORD *)(v16 + 16);
    v19 = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    v20 = *(_QWORD *)(v16 + 40);
    v21 = *(_QWORD *)(v4 + 48) + 48 * v15;
    v25 = *(_OWORD *)(v16 + 24);
    *(_QWORD *)v21 = *(_QWORD *)v16;
    *(_QWORD *)(v21 + 8) = v17;
    *(_QWORD *)(v21 + 16) = v18;
    *(_OWORD *)(v21 + 24) = v25;
    *(_QWORD *)(v21 + 40) = v20;
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = v19;
    swift_bridgeObjectRetain();
    sub_1B765DF08(v18, v25);
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1B767D580()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1780B0);
  v2 = *v0;
  v3 = sub_1B76DBE34();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v20 = __clz(__rbit64(v18));
    v12 = (v18 - 1) & v18;
    v15 = v20 + (v9 << 6);
LABEL_12:
    v16 = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1B767D708()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;

  v35 = sub_1B76DB888();
  v1 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35, v2);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1775F8);
  v32 = v0;
  v5 = *v0;
  v6 = sub_1B76DBE34();
  v7 = *(_QWORD *)(v5 + 16);
  v36 = v6;
  if (!v7)
  {
    result = (void *)swift_release();
    v30 = v36;
    v29 = v32;
LABEL_28:
    *v29 = v30;
    return result;
  }
  v8 = v6;
  result = (void *)(v6 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
  {
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
    v8 = v36;
  }
  v33 = v5 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v5 + 16);
  v13 = 1 << *(_BYTE *)(v5 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v13 + 63) >> 6;
  v16 = v35;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v26 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v34)
      goto LABEL_26;
    v27 = *(_QWORD *)(v33 + 8 * v26);
    ++v12;
    if (!v27)
    {
      v12 = v26 + 1;
      if (v26 + 1 >= v34)
        goto LABEL_26;
      v27 = *(_QWORD *)(v33 + 8 * v12);
      if (!v27)
        break;
    }
LABEL_25:
    v15 = (v27 - 1) & v27;
    v18 = __clz(__rbit64(v27)) + (v12 << 6);
LABEL_12:
    v19 = 16 * v18;
    v20 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
    v22 = *v20;
    v21 = v20[1];
    v23 = *(_QWORD *)(v1 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v4, *(_QWORD *)(v5 + 56) + v23, v16);
    v24 = v36;
    v25 = (_QWORD *)(*(_QWORD *)(v36 + 48) + v19);
    *v25 = v22;
    v25[1] = v21;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(v24 + 56) + v23, v4, v16);
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v26 + 2;
  if (v28 >= v34)
  {
LABEL_26:
    result = (void *)swift_release();
    v29 = v32;
    v30 = v36;
    goto LABEL_28;
  }
  v27 = *(_QWORD *)(v33 + 8 * v28);
  if (v27)
  {
    v12 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v12 >= v34)
      goto LABEL_26;
    v27 = *(_QWORD *)(v33 + 8 * v12);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1B767D964()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B080);
  v2 = *v0;
  v3 = sub_1B76DBE34();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1B767DB14()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  int64_t v27;

  v1 = sub_1B76DB8D0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1, v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178048);
  v25 = v0;
  v6 = *v0;
  v7 = sub_1B76DBE34();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v25 = v8;
    return result;
  }
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v26 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v27 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v17 = v16 | (v12 << 6);
      goto LABEL_12;
    }
    v21 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v27)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v12;
    if (!v22)
    {
      v12 = v21 + 1;
      if (v21 + 1 >= v27)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v12);
      if (!v22)
        break;
    }
LABEL_25:
    v15 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_12:
    v18 = *(_QWORD *)(v2 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v5, *(_QWORD *)(v6 + 48) + v18, v1);
    v19 = 8 * v17;
    v20 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v17);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v8 + 48) + v18, v5, v1);
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v19) = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v23 = v21 + 2;
  if (v23 >= v27)
    goto LABEL_26;
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v12 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v12 >= v27)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v12);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1B767DD44()
{
  return sub_1B767DD6C(&qword_1EF178090, (void (*)(uint64_t, _QWORD))sub_1B765DF08);
}

void *sub_1B767DD58()
{
  return sub_1B767DD6C(&qword_1EF178088, (void (*)(uint64_t, _QWORD))sub_1B765E0D4);
}

void *sub_1B767DD6C(uint64_t *a1, void (*a2)(uint64_t, _QWORD))
{
  uint64_t *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  uint64_t v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  __int128 v28;

  v4 = v2;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v5 = *v2;
  v6 = sub_1B76DBE34();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v4 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = v5 + 64;
  v10 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v13 = 1 << *(_BYTE *)(v5 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v5 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v25 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v9 + 8 * v25);
    ++v12;
    if (!v26)
    {
      v12 = v25 + 1;
      if (v25 + 1 >= v16)
        goto LABEL_26;
      v26 = *(_QWORD *)(v9 + 8 * v12);
      if (!v26)
        break;
    }
LABEL_25:
    v15 = (v26 - 1) & v26;
    v18 = __clz(__rbit64(v26)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v5 + 48) + 48 * v18;
    v20 = *(_QWORD *)(v19 + 8);
    v21 = *(_QWORD *)(v19 + 16);
    v22 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v18);
    v23 = *(_QWORD *)(v19 + 40);
    v24 = *(_QWORD *)(v7 + 48) + 48 * v18;
    v28 = *(_OWORD *)(v19 + 24);
    *(_QWORD *)v24 = *(_QWORD *)v19;
    *(_QWORD *)(v24 + 8) = v20;
    *(_QWORD *)(v24 + 16) = v21;
    *(_OWORD *)(v24 + 24) = v28;
    *(_QWORD *)(v24 + 40) = v23;
    *(_BYTE *)(*(_QWORD *)(v7 + 56) + v18) = v22;
    swift_bridgeObjectRetain();
    a2(v21, v28);
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v16)
    goto LABEL_26;
  v26 = *(_QWORD *)(v9 + 8 * v27);
  if (v26)
  {
    v12 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v9 + 8 * v12);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1B767DF58()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178080);
  v2 = *v0;
  v3 = sub_1B76DBE34();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 32 * v15);
    v18 = *v16;
    v17 = v16[1];
    v19 = v16[2];
    v20 = v16[3];
    LOBYTE(v16) = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 32 * v15);
    *v21 = v18;
    v21[1] = v17;
    v21[2] = v19;
    v21[3] = v20;
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = (_BYTE)v16;
    swift_bridgeObjectRetain();
    result = (void *)sub_1B765DF08(v19, v20);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1B767E11C(uint64_t a1, __int128 *a2)
{
  return sub_1B767F2D8(a1, a2, (void (*)(uint64_t *))Application.hash(into:), (void (*)(uint64_t, uint64_t))sub_1B765DF08, &qword_1EF1780C0, (void (*)(uint64_t, unint64_t))sub_1B765DF1C);
}

void sub_1B767E188(uint64_t a1, char a2)
{
  sub_1B76DBF54();
  __asm { BR              X10 }
}

uint64_t sub_1B767E1F4()
{
  void *v0;
  uint64_t v1;
  unint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t *v5;
  _BYTE *v6;
  uint64_t v7;

  swift_bridgeObjectRetain();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  v2 = sub_1B76DBF78() & ~(-1 << *(_BYTE *)(v1 + 32));
  if (((*(_QWORD *)(v1 + 56 + ((v2 >> 3) & 0xFFFFFFFFFFFFF8)) >> v2) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v5;
  *v5 = 0x8000000000000000;
  sub_1B7683C28(v0, v2, isUniquelyReferenced_nonNull_native);
  *v5 = v7;
  swift_bridgeObjectRelease();
  result = 1;
  *v6 = (_BYTE)v0;
  return result;
}

uint64_t sub_1B767E4FC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  BOOL v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t *v25;
  uint64_t v27;
  uint64_t __s1;

  v10 = *v5;
  sub_1B76DBF54();
  sub_1B76DBF6C();
  swift_bridgeObjectRetain();
  if (a3)
  {
    swift_bridgeObjectRetain();
    sub_1B76DBB1C();
    swift_bridgeObjectRelease();
  }
  sub_1B76DBF6C();
  if (a5 >> 60 != 15)
  {
    sub_1B765DDFC(a4, a5);
    sub_1B76DB834();
    sub_1B765DF1C(a4, a5);
  }
  v11 = sub_1B76DBF78();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    __s1 = *v25;
    *v25 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    sub_1B765DF08(a4, a5);
    sub_1B7683FD8(a2, a3, a4, a5, v13, isUniquelyReferenced_nonNull_native);
    *v25 = __s1;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = a3;
    result = 1;
    a1[2] = a4;
    a1[3] = a5;
    return result;
  }
  v27 = ~v12;
  while (1)
  {
    v14 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 32 * v13);
    v16 = v14[1];
    v15 = v14[2];
    v17 = v14[3];
    if (v16)
    {
      if (!a3)
        goto LABEL_9;
      v18 = *v14 == a2 && v16 == a3;
      if (!v18 && (sub_1B76DBED0() & 1) == 0)
        goto LABEL_9;
    }
    else if (a3)
    {
      goto LABEL_9;
    }
    if (v17 >> 60 != 15)
    {
      if (a5 >> 60 != 15)
        __asm { BR              X8 }
      goto LABEL_8;
    }
    if (a5 >> 60 == 15)
      break;
LABEL_8:
    sub_1B765DF08(a4, a5);
    sub_1B765DF08(v15, v17);
    sub_1B765DF1C(v15, v17);
    sub_1B765DF1C(a4, a5);
LABEL_9:
    v13 = (v13 + 1) & v27;
    if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      goto LABEL_22;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B765DF1C(a4, a5);
  v21 = (uint64_t *)(*(_QWORD *)(*v25 + 48) + 32 * v13);
  v22 = v21[1];
  v23 = v21[2];
  v24 = v21[3];
  *a1 = *v21;
  a1[1] = v22;
  a1[2] = v23;
  a1[3] = v24;
  swift_bridgeObjectRetain();
  sub_1B765DF08(v23, v24);
  return 0;
}

uint64_t sub_1B767F26C(uint64_t a1, __int128 *a2)
{
  return sub_1B767F2D8(a1, a2, (void (*)(uint64_t *))ActivityCategory.hash(into:), (void (*)(uint64_t, uint64_t))sub_1B765E0D4, &qword_1EF178060, (void (*)(uint64_t, unint64_t))sub_1B765E0D8);
}

uint64_t sub_1B767F2D8(uint64_t a1, __int128 *a2, void (*a3)(uint64_t *), void (*a4)(uint64_t, uint64_t), uint64_t *a5, void (*a6)(uint64_t, unint64_t))
{
  uint64_t *v6;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  char v25;
  unint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  __int128 v28;
  unint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t *);
  uint64_t *v39;
  _OWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t __s1;
  __int128 __s2;
  __int128 v51;
  __int128 v52;
  uint64_t v53;

  v53 = *MEMORY[0x1E0C80C00];
  v11 = *v6;
  v12 = a2[1];
  __s2 = *a2;
  v51 = v12;
  v52 = a2[2];
  sub_1B76DBF54();
  swift_bridgeObjectRetain();
  v37 = a3;
  a3(&__s1);
  v13 = sub_1B76DBF78();
  v14 = -1 << *(_BYTE *)(v11 + 32);
  v15 = v13 & ~v14;
  v40 = a2;
  v41 = a1;
  if (((*(_QWORD *)(v11 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
  {
LABEL_29:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    __s1 = *v39;
    *v39 = 0x8000000000000000;
    sub_1B768A800((uint64_t)v40, a4);
    sub_1B7684CE0((uint64_t)v40, v15, isUniquelyReferenced_nonNull_native, a5, a6, v37, (void (*)(uint64_t, unint64_t))a4);
    *v39 = __s1;
    swift_bridgeObjectRelease();
    v28 = v40[1];
    *(_OWORD *)v41 = *v40;
    *(_OWORD *)(v41 + 16) = v28;
    *(_OWORD *)(v41 + 32) = v40[2];
    return 1;
  }
  v47 = ~v14;
  v16 = *((_QWORD *)a2 + 1);
  v46 = *(_QWORD *)a2;
  v43 = *((_QWORD *)a2 + 2);
  v44 = *((_QWORD *)a2 + 3);
  v36 = *((_QWORD *)a2 + 4);
  v42 = *((_QWORD *)a2 + 5);
  while (1)
  {
    v17 = (_QWORD *)(*(_QWORD *)(v11 + 48) + 48 * v15);
    v19 = v17[1];
    v18 = v17[2];
    v20 = v17[3];
    v21 = v17[4];
    v22 = v17[5];
    if (v19)
    {
      if (!v16)
        goto LABEL_4;
      v23 = *v17 == v46 && v19 == v16;
      if (!v23 && (sub_1B76DBED0() & 1) == 0)
        goto LABEL_4;
    }
    else if (v16)
    {
      goto LABEL_4;
    }
    if (v20 >> 60 != 15)
    {
      if (v44 >> 60 != 15)
        __asm { BR              X8 }
LABEL_3:
      a4(v18, v20);
      a4(v43, v44);
      a6(v18, v20);
      a6(v43, v44);
      goto LABEL_4;
    }
    if (v44 >> 60 != 15)
      goto LABEL_3;
    swift_bridgeObjectRetain();
    a4(v18, v20);
    swift_bridgeObjectRetain();
    if (!v22)
      break;
    if (v42)
    {
      if (v21 == v36 && v22 == v42)
      {
        swift_bridgeObjectRelease();
        v30 = v20;
        v31 = (void (*)(uint64_t, uint64_t))a6;
        a6(v18, v30);
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
      v25 = sub_1B76DBED0();
      swift_bridgeObjectRelease();
      a6(v18, v20);
      swift_bridgeObjectRelease();
      if ((v25 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v31 = (void (*)(uint64_t, uint64_t))a6;
        goto LABEL_33;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      a6(v18, v20);
      swift_bridgeObjectRelease();
    }
LABEL_4:
    v15 = (v15 + 1) & v47;
    if (((*(_QWORD *)(v11 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
      goto LABEL_29;
  }
  swift_bridgeObjectRelease();
  v26 = v20;
  v31 = (void (*)(uint64_t, uint64_t))a6;
  a6(v18, v26);
  if (v42)
  {
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
LABEL_32:
  swift_bridgeObjectRelease();
LABEL_33:
  sub_1B768A858((uint64_t)v40, v31);
  v32 = *(_QWORD *)(*v39 + 48) + 48 * v15;
  v33 = *(_QWORD *)(v32 + 8);
  v34 = *(_QWORD *)(v32 + 16);
  v35 = *(_QWORD *)(v32 + 40);
  *(_QWORD *)v41 = *(_QWORD *)v32;
  *(_QWORD *)(v41 + 8) = v33;
  *(_QWORD *)(v41 + 16) = v34;
  v48 = *(_OWORD *)(v32 + 24);
  *(_OWORD *)(v41 + 24) = v48;
  *(_QWORD *)(v41 + 40) = v35;
  swift_bridgeObjectRetain();
  a4(v34, v48);
  swift_bridgeObjectRetain();
  return 0;
}

uint64_t sub_1B76801E4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_1B76DBF54();
  swift_bridgeObjectRetain();
  sub_1B76DBB1C();
  v8 = sub_1B76DBF78();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1B76DBED0() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1B76DBED0() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1B7685BE4(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1B7680390(_BYTE *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  unint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v9;

  v4 = *v2;
  sub_1B76DBF54();
  SettingsGroupName.rawValue.getter();
  swift_bridgeObjectRetain();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  v5 = sub_1B76DBF78() & ~(-1 << *(_BYTE *)(v4 + 32));
  if (((*(_QWORD *)(v4 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v2;
  *v2 = 0x8000000000000000;
  sub_1B7685D7C(a2, v5, isUniquelyReferenced_nonNull_native);
  *v2 = v9;
  swift_bridgeObjectRelease();
  result = 1;
  *a1 = a2;
  return result;
}

uint64_t sub_1B7680BD4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_1B76DBF54();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  v8 = sub_1B76DBF78();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1B76DBED0() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1B76DBED0() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1B76866A4(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1B7680D90(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v10;
  uint64_t __s1;

  v6 = *v3;
  sub_1B76DBF54();
  swift_bridgeObjectRetain();
  sub_1B76DB834();
  v7 = sub_1B76DBF78() & ~(-1 << *(_BYTE *)(v6 + 32));
  if (((*(_QWORD *)(v6 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
    __asm { BR              X8 }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  __s1 = *v10;
  *v10 = 0x8000000000000000;
  sub_1B765DDFC(a2, a3);
  sub_1B768684C(a2, a3, v7, isUniquelyReferenced_nonNull_native);
  *v10 = __s1;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1B76817BC(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  return sub_1B76818B8(a1, a2, a3, &qword_1EF178078);
}

uint64_t sub_1B7681810(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  return sub_1B76818B8(a1, a2, a3, &qword_1EF178068);
}

uint64_t sub_1B7681864(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  return sub_1B76818B8(a1, a2, a3, &qword_1EF178070);
}

uint64_t sub_1B76818B8(uint64_t *a1, uint64_t a2, unint64_t a3, uint64_t *a4)
{
  uint64_t *v4;
  uint64_t v8;
  unint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v12;
  uint64_t __s1;

  v8 = *v4;
  sub_1B76DBF54();
  swift_bridgeObjectRetain();
  sub_1B765DDFC(a2, a3);
  sub_1B76DB834();
  sub_1B765DEC4(a2, a3);
  v9 = sub_1B76DBF78() & ~(-1 << *(_BYTE *)(v8 + 32));
  if (((*(_QWORD *)(v8 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
    __asm { BR              X8 }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  __s1 = *v12;
  *v12 = 0x8000000000000000;
  sub_1B765DDFC(a2, a3);
  sub_1B7687290(a2, a3, v9, isUniquelyReferenced_nonNull_native, a4);
  *v12 = __s1;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1B7682374()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1780C8);
  v3 = sub_1B76DBD98();
  if (!*(_QWORD *)(v2 + 16))
    goto LABEL_23;
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = (_QWORD *)(v2 + 56);
  if (v4 < 64)
    v6 = ~(-1 << v4);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v8 = (unint64_t)(v4 + 63) >> 6;
  swift_retain_n();
  if (v7)
  {
    v9 = __clz(__rbit64(v7));
    goto LABEL_18;
  }
  if (v8 > 1)
  {
    v10 = *(_QWORD *)(v2 + 64);
    v11 = 1;
    if (v10)
      goto LABEL_17;
    v11 = 2;
    if (v8 > 2)
    {
      v10 = *(_QWORD *)(v2 + 72);
      if (!v10)
      {
        v12 = 3;
        if (v8 > 3)
        {
          v10 = *(_QWORD *)(v2 + 80);
          if (v10)
          {
            v11 = 3;
            goto LABEL_17;
          }
          while (1)
          {
            v11 = v12 + 1;
            if (__OFADD__(v12, 1))
            {
              __break(1u);
              JUMPOUT(0x1B76826B8);
            }
            if (v11 >= v8)
              break;
            v10 = v5[v11];
            ++v12;
            if (v10)
              goto LABEL_17;
          }
        }
        goto LABEL_19;
      }
LABEL_17:
      v9 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_18:
      v13 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v9);
      sub_1B76DBF54();
      __asm { BR              X8 }
    }
  }
LABEL_19:
  swift_release_n();
  v14 = 1 << *(_BYTE *)(v2 + 32);
  if (v14 > 63)
    bzero((void *)(v2 + 56), ((unint64_t)(v14 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v5 = -1 << v14;
  v1 = v0;
  *(_QWORD *)(v2 + 16) = 0;
LABEL_23:
  result = swift_release();
  *v1 = v3;
  return result;
}

uint64_t sub_1B76826CC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  int64_t v32;
  _QWORD *v33;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178058);
  v3 = sub_1B76DBD98();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
    goto LABEL_41;
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v33 = (_QWORD *)(v2 + 56);
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v32 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_22;
    }
    v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v15 >= v32)
      break;
    v16 = v33[v15];
    ++v10;
    if (!v16)
    {
      v10 = v15 + 1;
      if (v15 + 1 >= v32)
        goto LABEL_35;
      v16 = v33[v10];
      if (!v16)
      {
        v17 = v15 + 2;
        if (v17 >= v32)
        {
LABEL_35:
          swift_release();
          v30 = (_QWORD *)(v2 + 56);
          v1 = v0;
          goto LABEL_37;
        }
        v16 = v33[v17];
        if (!v16)
        {
          while (1)
          {
            v10 = v17 + 1;
            if (__OFADD__(v17, 1))
              goto LABEL_43;
            if (v10 >= v32)
              goto LABEL_35;
            v16 = v33[v10];
            ++v17;
            if (v16)
              goto LABEL_21;
          }
        }
        v10 = v17;
      }
    }
LABEL_21:
    v7 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_22:
    v18 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 32 * v14);
    v20 = *v18;
    v19 = v18[1];
    v22 = v18[2];
    v21 = v18[3];
    sub_1B76DBF54();
    sub_1B76DBF6C();
    if (v19)
    {
      swift_bridgeObjectRetain();
      sub_1B76DBB1C();
      swift_bridgeObjectRelease();
    }
    sub_1B76DBF6C();
    if (v21 >> 60 != 15)
    {
      sub_1B765DDFC(v22, v21);
      sub_1B76DB834();
      sub_1B765DF1C(v22, v21);
    }
    result = sub_1B76DBF78();
    v23 = -1 << *(_BYTE *)(v4 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v8 + 8 * v25);
      }
      while (v29 == -1);
      v11 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 32 * v11);
    *v12 = v20;
    v12[1] = v19;
    v12[2] = v22;
    v12[3] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  swift_release();
  v1 = v0;
  v30 = (_QWORD *)(v2 + 56);
LABEL_37:
  v31 = 1 << *(_BYTE *)(v2 + 32);
  if (v31 > 63)
    bzero(v30, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v30 = -1 << v31;
  *(_QWORD *)(v2 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1B7682A24(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t, unint64_t))
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v41;
  uint64_t v42;

  v4 = v3;
  v5 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v6 = sub_1B76DBD98();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_44;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v39 = (_QWORD *)(v5 + 56);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 56);
  v37 = v4;
  v38 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 56;
  result = swift_retain();
  v13 = 0;
  v41 = v5;
  v42 = v7;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return result;
    }
    if (v18 >= v38)
      break;
    v19 = v39;
    v20 = v39[v18];
    ++v13;
    if (!v20)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v38)
        goto LABEL_38;
      v20 = v39[v13];
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v38)
        {
LABEL_38:
          swift_release();
          v4 = v37;
          goto LABEL_40;
        }
        v20 = v39[v21];
        if (!v20)
        {
          while (1)
          {
            v13 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_46;
            if (v13 >= v38)
              goto LABEL_38;
            v20 = v39[v13];
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v13 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    v22 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 48 * v17);
    v24 = *v22;
    v23 = v22[1];
    v26 = v22[2];
    v25 = v22[3];
    v27 = v22[4];
    v28 = v22[5];
    sub_1B76DBF54();
    sub_1B76DBF6C();
    if (v23)
    {
      swift_bridgeObjectRetain();
      sub_1B76DBB1C();
      swift_bridgeObjectRelease();
    }
    if (v25 >> 60 == 15)
    {
      sub_1B76DBF6C();
      if (v28)
        goto LABEL_26;
    }
    else
    {
      sub_1B76DBF6C();
      sub_1B765DDFC(v26, v25);
      sub_1B76DB834();
      a3(v26, v25);
      if (v28)
      {
LABEL_26:
        sub_1B76DBF6C();
        swift_bridgeObjectRetain();
        sub_1B76DBB1C();
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
    }
    sub_1B76DBF6C();
LABEL_29:
    result = sub_1B76DBF78();
    v7 = v42;
    v29 = -1 << *(_BYTE *)(v42 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v11 + 8 * (v30 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v11 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v11 + 8 * v31);
      }
      while (v35 == -1);
      v14 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v42 + 48) + 48 * v14);
    *v15 = v24;
    v15[1] = v23;
    v15[2] = v26;
    v15[3] = v25;
    v15[4] = v27;
    v15[5] = v28;
    ++*(_QWORD *)(v42 + 16);
    v5 = v41;
  }
  swift_release();
  v4 = v37;
  v19 = v39;
LABEL_40:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 > 63)
    bzero(v19, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_44:
  result = swift_release();
  *v4 = v7;
  return result;
}

uint64_t sub_1B7682DD4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  _QWORD *v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178040);
  v3 = sub_1B76DBD98();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
    goto LABEL_37;
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v31 = v0;
  v32 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v7)
    {
      v14 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_22;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      return result;
    }
    if (v16 >= v8)
      break;
    v17 = (_QWORD *)(v2 + 56);
    v18 = *(_QWORD *)(v32 + 8 * v16);
    ++v11;
    if (!v18)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v8)
        goto LABEL_31;
      v18 = *(_QWORD *)(v32 + 8 * v11);
      if (!v18)
      {
        v19 = v16 + 2;
        if (v19 >= v8)
        {
LABEL_31:
          swift_release();
          v1 = v31;
          goto LABEL_33;
        }
        v18 = *(_QWORD *)(v32 + 8 * v19);
        if (!v18)
        {
          while (1)
          {
            v11 = v19 + 1;
            if (__OFADD__(v19, 1))
              goto LABEL_39;
            if (v11 >= v8)
              goto LABEL_31;
            v18 = *(_QWORD *)(v32 + 8 * v11);
            ++v19;
            if (v18)
              goto LABEL_21;
          }
        }
        v11 = v19;
      }
    }
LABEL_21:
    v7 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v11 << 6);
LABEL_22:
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v21 = *v20;
    v22 = v20[1];
    sub_1B76DBF54();
    sub_1B76DBB1C();
    result = sub_1B76DBF78();
    v23 = -1 << *(_BYTE *)(v4 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v9 + 8 * (v24 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v9 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v9 + 8 * v25);
      }
      while (v29 == -1);
      v12 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v21;
    v13[1] = v22;
    ++*(_QWORD *)(v4 + 16);
  }
  swift_release();
  v1 = v31;
  v17 = (_QWORD *)(v2 + 56);
LABEL_33:
  v30 = 1 << *(_BYTE *)(v2 + 32);
  if (v30 > 63)
    bzero(v17, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v17 = -1 << v30;
  *(_QWORD *)(v2 + 16) = 0;
LABEL_37:
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1B7683098()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178038);
  v3 = sub_1B76DBD98();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_33;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_33;
          v17 = v6[v12];
          if (!v17)
          {
            v12 = v16 + 2;
            if (v16 + 2 >= v9)
              goto LABEL_33;
            v17 = v6[v12];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v27 = 1 << *(_BYTE *)(v2 + 32);
                if (v27 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  v12 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v12 >= v9)
                    goto LABEL_33;
                  v17 = v6[v12];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v12 = v18;
            }
          }
        }
LABEL_23:
        v8 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
      sub_1B76DBF54();
      SettingsGroupName.rawValue.getter();
      sub_1B76DBB1C();
      swift_bridgeObjectRelease();
      result = sub_1B76DBF78();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v25 = v22 == v24;
          if (v22 == v24)
            v22 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v13) = v19;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1B7683370()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1780A0);
  v3 = sub_1B76DBD98();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_1B76DBF54();
      swift_bridgeObjectRetain();
      sub_1B76DBB1C();
      swift_bridgeObjectRelease();
      result = sub_1B76DBF78();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1B768365C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178098);
  v3 = sub_1B76DBD98();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_1B76DBF54();
      sub_1B76DB834();
      result = sub_1B76DBF78();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1B7683938(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_1B76DBD98();
  v6 = v5;
  if (*(_QWORD *)(v4 + 16))
  {
    v7 = 1 << *(_BYTE *)(v4 + 32);
    v32 = (_QWORD *)(v4 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v4 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = v5 + 56;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v9)
      {
        v16 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v10)
          goto LABEL_33;
        v19 = v32[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v10)
            goto LABEL_33;
          v19 = v32[v13];
          if (!v19)
          {
            v13 = v18 + 2;
            if (v18 + 2 >= v10)
              goto LABEL_33;
            v19 = v32[v13];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v10)
              {
LABEL_33:
                swift_release();
                v3 = v2;
                v31 = 1 << *(_BYTE *)(v4 + 32);
                if (v31 > 63)
                  bzero(v32, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v32 = -1 << v31;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v19 = v32[v20];
              if (!v19)
              {
                while (1)
                {
                  v13 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v13 >= v10)
                    goto LABEL_33;
                  v19 = v32[v13];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v13 = v20;
            }
          }
        }
LABEL_23:
        v9 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v17);
      v22 = *v21;
      v23 = v21[1];
      sub_1B76DBF54();
      sub_1B765DDFC(v22, v23);
      sub_1B76DB834();
      sub_1B765DEC4(v22, v23);
      result = sub_1B76DBF78();
      v24 = -1 << *(_BYTE *)(v6 + 32);
      v25 = result & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v11 + 8 * v26);
        }
        while (v30 == -1);
        v14 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v14);
      *v15 = v22;
      v15[1] = v23;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

void *sub_1B7683C28(void *result, unint64_t a2, char a3)
{
  uint64_t v3;
  char v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t *v12;
  char v13;

  v5 = (char)result;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_1B7682374();
      goto LABEL_8;
    }
    if (v7 <= v6)
    {
      sub_1B7688A50();
LABEL_8:
      sub_1B76DBF54();
      __asm { BR              X10 }
    }
    result = sub_1B7687D08();
  }
  v8 = *v12;
  *(_QWORD *)(*v12 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v8 + 48) + a2) = v13;
  v9 = *(_QWORD *)(v8 + 16);
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
  {
    __break(1u);
    JUMPOUT(0x1B7683F80);
  }
  *(_QWORD *)(v8 + 16) = v11;
  return result;
}

uint64_t sub_1B7683FD8(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, char a6)
{
  uint64_t *v6;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v11 = result;
  v12 = *(_QWORD *)(*v6 + 16);
  v13 = *(_QWORD *)(*v6 + 24);
  if (v13 <= v12 || (a6 & 1) == 0)
  {
    if ((a6 & 1) != 0)
    {
      sub_1B76826CC();
    }
    else
    {
      if (v13 > v12)
      {
        result = (uint64_t)sub_1B7687E84();
        goto LABEL_29;
      }
      sub_1B7688D6C();
    }
    v14 = *v6;
    sub_1B76DBF54();
    sub_1B76DBF6C();
    if (a2)
    {
      swift_bridgeObjectRetain();
      sub_1B76DBB1C();
      swift_bridgeObjectRelease();
    }
    sub_1B76DBF6C();
    if (a4 >> 60 != 15)
    {
      sub_1B765DDFC(a3, a4);
      sub_1B76DB834();
      sub_1B765DF1C(a3, a4);
    }
    result = sub_1B76DBF78();
    v15 = -1 << *(_BYTE *)(v14 + 32);
    a5 = result & ~v15;
    if (((*(_QWORD *)(v14 + 56 + ((a5 >> 3) & 0xFFFFFFFFFFFFF8)) >> a5) & 1) != 0)
    {
      v27 = ~v15;
      do
      {
        v16 = (_QWORD *)(*(_QWORD *)(v14 + 48) + 32 * a5);
        v18 = v16[1];
        v17 = v16[2];
        v19 = v16[3];
        if (v18)
        {
          if (a2)
          {
            v20 = *v16 == v11 && v18 == a2;
            if (v20 || (result = sub_1B76DBED0(), (result & 1) != 0))
            {
LABEL_26:
              if (v19 >> 60 == 15)
              {
                if (a4 >> 60 == 15)
                {
                  sub_1B76DBF0C();
                  __break(1u);
                  JUMPOUT(0x1B7684CB0);
                }
              }
              else if (a4 >> 60 != 15)
              {
                __asm { BR              X8 }
              }
              sub_1B765DF08(a3, a4);
              sub_1B765DF08(v17, v19);
              sub_1B765DF1C(v17, v19);
              result = sub_1B765DF1C(a3, a4);
            }
          }
        }
        else if (!a2)
        {
          goto LABEL_26;
        }
        a5 = (a5 + 1) & v27;
      }
      while (((*(_QWORD *)(v14 + 56 + ((a5 >> 3) & 0xFFFFFFFFFFFFF8)) >> a5) & 1) != 0);
    }
  }
LABEL_29:
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a5 >> 6) + 56) |= 1 << a5;
  v22 = (uint64_t *)(*(_QWORD *)(v21 + 48) + 32 * a5);
  *v22 = v11;
  v22[1] = a2;
  v22[2] = a3;
  v22[3] = a4;
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (v24)
  {
    __break(1u);
    JUMPOUT(0x1B7684BF4);
  }
  *(_QWORD *)(v21 + 16) = v25;
  return result;
}

uint64_t sub_1B7684CE0(uint64_t result, unint64_t a2, char a3, uint64_t *a4, void (*a5)(uint64_t, unint64_t), void (*a6)(uint64_t *), void (*a7)(uint64_t, unint64_t))
{
  uint64_t *v7;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char v27;
  uint64_t v28;
  _OWORD *v29;
  __int128 v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v39;
  unint64_t v41;
  uint64_t v42;
  uint64_t __s1;
  __int128 __s2;
  __int128 v45;
  __int128 v46;
  uint64_t v47;

  v10 = result;
  v47 = *MEMORY[0x1E0C80C00];
  v11 = *(_QWORD *)(*v7 + 16);
  v12 = *(_QWORD *)(*v7 + 24);
  if (v12 <= v11 || (a3 & 1) == 0)
  {
    v13 = v11 + 1;
    if ((a3 & 1) != 0)
    {
      sub_1B7682A24(v13, a4, a5);
    }
    else
    {
      if (v12 > v11)
      {
        result = (uint64_t)sub_1B768803C(a4, a7);
        goto LABEL_36;
      }
      sub_1B7689098(v13, a4, a7, a5);
    }
    v14 = *v7;
    v15 = *(_OWORD *)(v10 + 16);
    __s2 = *(_OWORD *)v10;
    v45 = v15;
    v46 = *(_OWORD *)(v10 + 32);
    sub_1B76DBF54();
    a6(&__s1);
    result = sub_1B76DBF78();
    v16 = -1 << *(_BYTE *)(v14 + 32);
    a2 = result & ~v16;
    v17 = v14 + 56;
    if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v42 = ~v16;
      v18 = *(_QWORD *)(v10 + 8);
      v39 = *(_QWORD *)v10;
      v41 = *(_QWORD *)(v10 + 24);
      v37 = *(_QWORD *)(v10 + 16);
      v34 = *(_QWORD *)(v10 + 32);
      v35 = *(_QWORD *)(v10 + 40);
      while (1)
      {
        v19 = (_QWORD *)(*(_QWORD *)(v14 + 48) + 48 * a2);
        v20 = v19[1];
        v21 = v19[2];
        v23 = v19[3];
        v22 = v19[4];
        v24 = v19[5];
        if (v20)
        {
          if (!v18)
            goto LABEL_11;
          if (*v19 != v39 || v20 != v18)
          {
            result = sub_1B76DBED0();
            if ((result & 1) == 0)
              goto LABEL_11;
          }
        }
        else if (v18)
        {
          goto LABEL_11;
        }
        if (v23 >> 60 != 15)
          break;
        if (v41 >> 60 != 15)
          goto LABEL_10;
        swift_bridgeObjectRetain();
        a7(v21, v23);
        swift_bridgeObjectRetain();
        if (v24)
        {
          v17 = v14 + 56;
          if (v35)
          {
            if (v22 == v34 && v24 == v35)
            {
              swift_bridgeObjectRelease();
              a5(v21, v23);
              swift_bridgeObjectRelease();
LABEL_40:
              sub_1B76DBF0C();
              __break(1u);
              JUMPOUT(0x1B7685BB4);
            }
            v27 = sub_1B76DBED0();
            swift_bridgeObjectRelease();
            a5(v21, v23);
            result = swift_bridgeObjectRelease();
            if ((v27 & 1) != 0)
              goto LABEL_40;
          }
          else
          {
            swift_bridgeObjectRelease();
            a5(v21, v23);
            result = swift_bridgeObjectRelease();
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          a5(v21, v23);
          result = swift_bridgeObjectRelease();
          v17 = v14 + 56;
          if (!v35)
            goto LABEL_40;
        }
LABEL_11:
        a2 = (a2 + 1) & v42;
        if (((*(_QWORD *)(v17 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          goto LABEL_36;
      }
      if (v41 >> 60 != 15)
        __asm { BR              X8 }
LABEL_10:
      a7(v21, v23);
      a7(v37, v41);
      a5(v21, v23);
      result = ((uint64_t (*)(uint64_t, unint64_t))a5)(v37, v41);
      goto LABEL_11;
    }
  }
LABEL_36:
  v28 = *v36;
  *(_QWORD *)(*v36 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  v29 = (_OWORD *)(*(_QWORD *)(v28 + 48) + 48 * a2);
  v30 = *(_OWORD *)(v10 + 16);
  *v29 = *(_OWORD *)v10;
  v29[1] = v30;
  v29[2] = *(_OWORD *)(v10 + 32);
  v31 = *(_QWORD *)(v28 + 16);
  v32 = __OFADD__(v31, 1);
  v33 = v31 + 1;
  if (v32)
  {
    __break(1u);
    JUMPOUT(0x1B7685AE8);
  }
  *(_QWORD *)(v28 + 16) = v33;
  return result;
}

uint64_t sub_1B7685BE4(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1B7682DD4();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1B768821C();
      goto LABEL_22;
    }
    sub_1B7689460();
  }
  v11 = *v4;
  sub_1B76DBF54();
  sub_1B76DBB1C();
  result = sub_1B76DBF78();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_1B76DBED0(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_1B76DBF0C();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_1B76DBED0();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_1B7685D7C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  char v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_1B7683098();
    }
    else
    {
      if (v7 > v6)
      {
        result = (uint64_t)sub_1B76883B8();
        goto LABEL_10;
      }
      sub_1B76896E8();
    }
    v8 = *v3;
    sub_1B76DBF54();
    SettingsGroupName.rawValue.getter();
    sub_1B76DBB1C();
    swift_bridgeObjectRelease();
    result = sub_1B76DBF78();
    a2 = result & ~(-1 << *(_BYTE *)(v8 + 32));
    if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
      __asm { BR              X9 }
  }
LABEL_10:
  v9 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v9 + 48) + a2) = v5;
  v10 = *(_QWORD *)(v9 + 16);
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
  {
    __break(1u);
    JUMPOUT(0x1B76865A0);
  }
  *(_QWORD *)(v9 + 16) = v12;
  return result;
}

uint64_t sub_1B76866A4(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1B7683370();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1B7688548();
      goto LABEL_22;
    }
    sub_1B768998C();
  }
  v11 = *v4;
  sub_1B76DBF54();
  swift_bridgeObjectRetain();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  result = sub_1B76DBF78();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_1B76DBED0(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_1B76DBF0C();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_1B76DBED0();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_1B768684C(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v7 = result;
  v8 = *(_QWORD *)(*v4 + 16);
  v9 = *(_QWORD *)(*v4 + 24);
  if (v9 <= v8 || (a4 & 1) == 0)
  {
    if ((a4 & 1) != 0)
    {
      sub_1B768365C();
    }
    else
    {
      if (v9 > v8)
      {
        result = (uint64_t)sub_1B76886F8();
        goto LABEL_10;
      }
      sub_1B7689C44();
    }
    v10 = *v4;
    sub_1B76DBF54();
    sub_1B76DB834();
    result = sub_1B76DBF78();
    a3 = result & ~(-1 << *(_BYTE *)(v10 + 32));
    if (((*(_QWORD *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
      __asm { BR              X8 }
  }
LABEL_10:
  v11 = *v4;
  *(_QWORD *)(*v4 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v12 = (uint64_t *)(*(_QWORD *)(v11 + 48) + 16 * a3);
  *v12 = v7;
  v12[1] = a2;
  v13 = *(_QWORD *)(v11 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
  {
    __break(1u);
    JUMPOUT(0x1B76871B4);
  }
  *(_QWORD *)(v11 + 16) = v15;
  return result;
}

uint64_t sub_1B7687290(uint64_t result, unint64_t a2, unint64_t a3, char a4, uint64_t *a5)
{
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v8 = result;
  v9 = *(_QWORD *)(*v5 + 16);
  v10 = *(_QWORD *)(*v5 + 24);
  if (v10 <= v9 || (a4 & 1) == 0)
  {
    v11 = v9 + 1;
    if ((a4 & 1) != 0)
    {
      sub_1B7683938(v11, a5);
    }
    else
    {
      if (v10 > v9)
      {
        result = (uint64_t)sub_1B76888A8(a5);
        goto LABEL_10;
      }
      sub_1B7689EF4(v11, a5);
    }
    v12 = *v5;
    sub_1B76DBF54();
    sub_1B765DDFC(v8, a2);
    sub_1B76DB834();
    sub_1B765DEC4(v8, a2);
    result = sub_1B76DBF78();
    a3 = result & ~(-1 << *(_BYTE *)(v12 + 32));
    if (((*(_QWORD *)(v12 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
      __asm { BR              X8 }
  }
LABEL_10:
  v13 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v14 = (uint64_t *)(*(_QWORD *)(v13 + 48) + 16 * a3);
  *v14 = v8;
  v14[1] = a2;
  v15 = *(_QWORD *)(v13 + 16);
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
  {
    __break(1u);
    JUMPOUT(0x1B7687C2CLL);
  }
  *(_QWORD *)(v13 + 16) = v17;
  return result;
}

void *sub_1B7687D08()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1780C8);
  v2 = *v0;
  v3 = sub_1B76DBD8C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v16 >= v13)
      goto LABEL_26;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_26;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
        break;
    }
LABEL_25:
    v19 = __clz(__rbit64(v17));
    v12 = (v17 - 1) & v17;
    v15 = v19 + (v9 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
  }
  v18 = v16 + 2;
  if (v18 >= v13)
    goto LABEL_26;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1B7687E84()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178058);
  v2 = *v0;
  v3 = sub_1B76DBD8C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 32 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = v17[2];
    v20 = v17[3];
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    v21[2] = v19;
    v21[3] = v20;
    swift_bridgeObjectRetain();
    result = (void *)sub_1B765DF08(v19, v20);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1B768803C(uint64_t *a1, void (*a2)(uint64_t, _QWORD))
{
  uint64_t *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  uint64_t v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  __int128 v28;

  v4 = v2;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v5 = *v2;
  v6 = sub_1B76DBD8C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v4 = v7;
    return result;
  }
  result = (void *)(v6 + 56);
  v9 = v5 + 56;
  v10 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 56 + 8 * v10)
    result = memmove(result, (const void *)(v5 + 56), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v13 = 1 << *(_BYTE *)(v5 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v5 + 56);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v25 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v9 + 8 * v25);
    ++v12;
    if (!v26)
    {
      v12 = v25 + 1;
      if (v25 + 1 >= v16)
        goto LABEL_26;
      v26 = *(_QWORD *)(v9 + 8 * v12);
      if (!v26)
        break;
    }
LABEL_25:
    v15 = (v26 - 1) & v26;
    v18 = __clz(__rbit64(v26)) + (v12 << 6);
LABEL_12:
    v19 = 48 * v18;
    v20 = *(_QWORD *)(v5 + 48) + v19;
    v21 = *(_QWORD *)(v20 + 8);
    v22 = *(_QWORD *)(v20 + 16);
    v23 = *(_QWORD *)(v20 + 40);
    v24 = *(_QWORD *)(v7 + 48) + v19;
    v28 = *(_OWORD *)(v20 + 24);
    *(_QWORD *)v24 = *(_QWORD *)v20;
    *(_QWORD *)(v24 + 8) = v21;
    *(_QWORD *)(v24 + 16) = v22;
    *(_OWORD *)(v24 + 24) = v28;
    *(_QWORD *)(v24 + 40) = v23;
    swift_bridgeObjectRetain();
    a2(v22, v28);
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v16)
    goto LABEL_26;
  v26 = *(_QWORD *)(v9 + 8 * v27);
  if (v26)
  {
    v12 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v9 + 8 * v12);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1B768821C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178040);
  v2 = *v0;
  v3 = sub_1B76DBD8C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1B76883B8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178038);
  v2 = *v0;
  v3 = sub_1B76DBD8C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1B7688548()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1780A0);
  v2 = *v0;
  v3 = sub_1B76DBD8C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1B76886F8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178098);
  v2 = *v0;
  v3 = sub_1B76DBD8C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_OWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_OWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = (void *)sub_1B765DDFC(v17, *((unint64_t *)&v17 + 1));
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1B76888A8(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __int128 v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1B76DBD8C();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_28;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
      {
        v10 = v19 + 2;
        if (v19 + 2 >= v14)
          goto LABEL_28;
        v20 = *(_QWORD *)(v7 + 8 * v10);
        if (!v20)
          break;
      }
    }
LABEL_27:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = *(_OWORD *)(*(_QWORD *)(v3 + 48) + v17);
    *(_OWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    result = (void *)sub_1B765DDFC(v18, *((unint64_t *)&v18 + 1));
  }
  v21 = v19 + 3;
  if (v21 >= v14)
    goto LABEL_28;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1B7688A50()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t i;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1780C8);
  v3 = sub_1B76DBD98();
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
    goto LABEL_20;
  }
  v4 = 1 << *(_BYTE *)(v2 + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v2 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_retain_n();
  if (v6)
  {
    v8 = __clz(__rbit64(v6));
    goto LABEL_17;
  }
  if (v7 > 1)
  {
    v9 = *(_QWORD *)(v2 + 64);
    i = 1;
    if (v9)
      goto LABEL_16;
    i = 2;
    if (v7 > 2)
    {
      v9 = *(_QWORD *)(v2 + 72);
      if (v9)
        goto LABEL_16;
      v11 = 3;
      if (v7 > 3)
      {
        v9 = *(_QWORD *)(v2 + 80);
        for (i = 3; !v9; ++v11)
        {
          i = v11 + 1;
          if (__OFADD__(v11, 1))
          {
            __break(1u);
            JUMPOUT(0x1B7688D58);
          }
          if (i >= v7)
            goto LABEL_18;
          v9 = *(_QWORD *)(v2 + 56 + 8 * i);
        }
LABEL_16:
        v8 = __clz(__rbit64(v9)) + (i << 6);
LABEL_17:
        v12 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v8);
        sub_1B76DBF54();
        __asm { BR              X8 }
      }
    }
  }
LABEL_18:
  result = swift_release_n();
  v1 = v0;
LABEL_20:
  *v1 = v3;
  return result;
}

uint64_t sub_1B7688D6C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178058);
  v3 = sub_1B76DBD98();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_37:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v30 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v31 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain_n();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_21;
    }
    v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v15 >= v31)
      goto LABEL_35;
    v16 = *(_QWORD *)(v30 + 8 * v15);
    ++v10;
    if (!v16)
    {
      v10 = v15 + 1;
      if (v15 + 1 >= v31)
        goto LABEL_35;
      v16 = *(_QWORD *)(v30 + 8 * v10);
      if (!v16)
      {
        v17 = v15 + 2;
        if (v17 >= v31)
        {
LABEL_35:
          result = swift_release_n();
          v1 = v0;
          goto LABEL_37;
        }
        v16 = *(_QWORD *)(v30 + 8 * v17);
        v10 = v17;
        if (!v16)
          break;
      }
    }
LABEL_20:
    v7 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_21:
    v18 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 32 * v14);
    v20 = *v18;
    v19 = v18[1];
    v22 = v18[2];
    v21 = v18[3];
    sub_1B76DBF54();
    sub_1B76DBF6C();
    if (v19)
    {
      swift_bridgeObjectRetain();
      sub_1B765DF08(v22, v21);
      swift_bridgeObjectRetain();
      sub_1B76DBB1C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B765DF08(v22, v21);
    }
    sub_1B76DBF6C();
    if (v21 >> 60 != 15)
    {
      sub_1B765DDFC(v22, v21);
      sub_1B76DB834();
      sub_1B765DF1C(v22, v21);
    }
    result = sub_1B76DBF78();
    v23 = -1 << *(_BYTE *)(v4 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v8 + 8 * v25);
      }
      while (v29 == -1);
      v11 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 32 * v11);
    *v12 = v20;
    v12[1] = v19;
    v12[2] = v22;
    v12[3] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  while (1)
  {
    v10 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v10 >= v31)
      goto LABEL_35;
    v16 = *(_QWORD *)(v30 + 8 * v10);
    ++v17;
    if (v16)
      goto LABEL_20;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1B7689098(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t, unint64_t), void (*a4)(uint64_t, unint64_t))
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  int64_t v39;
  uint64_t i;
  uint64_t v43;

  v5 = v4;
  v6 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = sub_1B76DBD98();
  v43 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = swift_release();
    v36 = v43;
LABEL_40:
    *v5 = v36;
    return result;
  }
  v8 = 1 << *(_BYTE *)(v6 + 32);
  v37 = v4;
  v38 = v6 + 56;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v6 + 56);
  v39 = (unint64_t)(v8 + 63) >> 6;
  v11 = v7 + 56;
  result = swift_retain_n();
  v13 = 0;
  for (i = v6; ; v6 = i)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_21;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v18 >= v39)
      goto LABEL_38;
    v19 = *(_QWORD *)(v38 + 8 * v18);
    ++v13;
    if (!v19)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v39)
        goto LABEL_38;
      v19 = *(_QWORD *)(v38 + 8 * v13);
      if (!v19)
      {
        v20 = v18 + 2;
        if (v20 >= v39)
        {
LABEL_38:
          result = swift_release_n();
          v36 = v43;
          v5 = v37;
          goto LABEL_40;
        }
        v19 = *(_QWORD *)(v38 + 8 * v20);
        v13 = v20;
        if (!v19)
          break;
      }
    }
LABEL_20:
    v10 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_21:
    v21 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 48 * v17);
    v22 = *v21;
    v23 = v21[1];
    v25 = v21[2];
    v24 = v21[3];
    v26 = v21[4];
    v27 = v21[5];
    sub_1B76DBF54();
    if (v23)
    {
      sub_1B76DBF6C();
      swift_bridgeObjectRetain();
      a3(v25, v24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v28 = v22;
      sub_1B76DBB1C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v28 = v22;
      sub_1B76DBF6C();
      a3(v25, v24);
      swift_bridgeObjectRetain();
    }
    if (v24 >> 60 == 15)
    {
      sub_1B76DBF6C();
      if (v27)
        goto LABEL_26;
    }
    else
    {
      sub_1B76DBF6C();
      sub_1B765DDFC(v25, v24);
      sub_1B76DB834();
      a4(v25, v24);
      if (v27)
      {
LABEL_26:
        sub_1B76DBF6C();
        swift_bridgeObjectRetain();
        sub_1B76DBB1C();
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
    }
    sub_1B76DBF6C();
LABEL_29:
    result = sub_1B76DBF78();
    v29 = -1 << *(_BYTE *)(v43 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v11 + 8 * (v30 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v11 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v11 + 8 * v31);
      }
      while (v35 == -1);
      v14 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v43 + 48) + 48 * v14);
    *v15 = v28;
    v15[1] = v23;
    v15[2] = v25;
    v15[3] = v24;
    v15[4] = v26;
    v15[5] = v27;
    ++*(_QWORD *)(v43 + 16);
  }
  while (1)
  {
    v13 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v13 >= v39)
      goto LABEL_38;
    v19 = *(_QWORD *)(v38 + 8 * v13);
    ++v20;
    if (v19)
      goto LABEL_20;
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1B7689460()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178040);
  v3 = sub_1B76DBD98();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_32:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain_n();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_21;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    if (v16 >= v29)
      goto LABEL_30;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_30;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v18 = v16 + 2;
        if (v18 >= v29)
        {
LABEL_30:
          result = swift_release_n();
          v1 = v0;
          goto LABEL_32;
        }
        v17 = *(_QWORD *)(v6 + 8 * v18);
        v11 = v18;
        if (!v17)
          break;
      }
    }
LABEL_20:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_21:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_1B76DBF54();
    swift_bridgeObjectRetain();
    sub_1B76DBB1C();
    result = sub_1B76DBF78();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_33;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_30;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_20;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1B76896E8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178038);
  v3 = sub_1B76DBD98();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    v19 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    sub_1B76DBF54();
    SettingsGroupName.rawValue.getter();
    sub_1B76DBB1C();
    swift_bridgeObjectRelease();
    result = sub_1B76DBF78();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v13) = v19;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1B768998C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1780A0);
  v3 = sub_1B76DBD98();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_1B76DBF54();
    swift_bridgeObjectRetain_n();
    sub_1B76DBB1C();
    swift_bridgeObjectRelease();
    result = sub_1B76DBF78();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1B7689C44()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178098);
  v3 = sub_1B76DBD98();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_1B76DBF54();
    sub_1B765DDFC(v20, v21);
    sub_1B76DB834();
    result = sub_1B76DBF78();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1B7689EF4(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  int64_t v31;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_1B76DBD98();
  v6 = v5;
  if (!*(_QWORD *)(v4 + 16))
  {
    result = swift_release();
LABEL_35:
    *v3 = v6;
    return result;
  }
  v7 = 1 << *(_BYTE *)(v4 + 32);
  v8 = v4 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v4 + 56);
  v31 = (unint64_t)(v7 + 63) >> 6;
  v11 = v5 + 56;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_24;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v31)
      goto LABEL_33;
    v19 = *(_QWORD *)(v8 + 8 * v18);
    ++v13;
    if (!v19)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v31)
        goto LABEL_33;
      v19 = *(_QWORD *)(v8 + 8 * v13);
      if (!v19)
      {
        v13 = v18 + 2;
        if (v18 + 2 >= v31)
          goto LABEL_33;
        v19 = *(_QWORD *)(v8 + 8 * v13);
        if (!v19)
          break;
      }
    }
LABEL_23:
    v10 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_24:
    v21 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v17);
    v22 = *v21;
    v23 = v21[1];
    sub_1B76DBF54();
    sub_1B765DDFC(v22, v23);
    sub_1B765DDFC(v22, v23);
    sub_1B76DB834();
    sub_1B765DEC4(v22, v23);
    result = sub_1B76DBF78();
    v24 = -1 << *(_BYTE *)(v6 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v26);
      }
      while (v30 == -1);
      v14 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v14);
    *v15 = v22;
    v15[1] = v23;
    ++*(_QWORD *)(v6 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v31)
  {
LABEL_33:
    result = swift_release_n();
    v3 = v2;
    goto LABEL_35;
  }
  v19 = *(_QWORD *)(v8 + 8 * v20);
  if (v19)
  {
    v13 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    v13 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v13 >= v31)
      goto LABEL_33;
    v19 = *(_QWORD *)(v8 + 8 * v13);
    ++v20;
    if (v19)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t _sSb15ManagedSettingsE5value4fromSbSgSo8NSObjectCSg_tFZ_0(void *a1)
{
  void *v2;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!a1)
    return 2;
  objc_opt_self();
  v2 = (void *)swift_dynamicCastObjCClass();
  if (v2)
    return (uint64_t)objc_msgSend(v2, sel_BOOLValue);
  if (qword_1EF177220 != -1)
    swift_once();
  v4 = sub_1B76DB8B8();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EF177E18);
  v5 = a1;
  v6 = sub_1B76DB8A0();
  v7 = sub_1B76DBC90();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v12 = v9;
    *(_DWORD *)v8 = 136446210;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774F8);
    v10 = sub_1B76DBD14();
    sub_1B7669B50(v10, v11, &v12);
    sub_1B76DBD38();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B7656000, v6, v7, "Persistable value %{public}s not decodable to Bool", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCA9590](v9, -1, -1);
    MEMORY[0x1BCCA9590](v8, -1, -1);

  }
  else
  {

  }
  return 2;
}

id sub_1B768A39C(id result)
{
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (result)
  {
    v1 = result;
    objc_opt_self();
    v2 = (void *)swift_dynamicCastObjCClass();
    if (v2)
    {
      return objc_msgSend(v2, sel_integerValue);
    }
    else
    {
      if (qword_1EF177220 != -1)
        swift_once();
      v3 = sub_1B76DB8B8();
      __swift_project_value_buffer(v3, (uint64_t)qword_1EF177E18);
      v4 = v1;
      v5 = sub_1B76DB8A0();
      v6 = sub_1B76DBC90();
      if (os_log_type_enabled(v5, v6))
      {
        v7 = (uint8_t *)swift_slowAlloc();
        v8 = swift_slowAlloc();
        v11 = v8;
        *(_DWORD *)v7 = 136446210;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774F8);
        v9 = sub_1B76DBD14();
        sub_1B7669B50(v9, v10, &v11);
        sub_1B76DBD38();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1B7656000, v5, v6, "Persistable value %{public}s not decodable to Int", v7, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCA9590](v8, -1, -1);
        MEMORY[0x1BCCA9590](v7, -1, -1);

      }
      else
      {

      }
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B768A58C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v1 + 24) + 16))(*(_QWORD *)(v1 + 16));
  result = sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
  a1[3] = result;
  *a1 = v3;
  return result;
}

uint64_t sub_1B768A5F0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1B7676FCC(a1, a2, v2[2], v2[3], v2[4]);
}

unint64_t sub_1B768A60C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF178020;
  if (!qword_1EF178020)
  {
    v1 = sub_1B765DF7C(255, &qword_1EF178018);
    result = MEMORY[0x1BCCA94E8](MEMORY[0x1E0CB2010], v1);
    atomic_store(result, (unint64_t *)&qword_1EF178020);
  }
  return result;
}

void sub_1B768A664(id *a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1B7677398(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

id sub_1B768A684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v17;

  sub_1B76DBA08();
  v13 = type metadata accessor for Token(255, a3, v11, v12);
  MEMORY[0x1BCCA94E8](&protocol conformance descriptor for Token<A>, v13);
  v14 = sub_1B76DBC30();
  sub_1B76DBC30();
  MEMORY[0x1BCCA94E8](MEMORY[0x1E0DEB3D0], v14);
  sub_1B76DBB40();
  v15 = Set<>.persistableValue()(v17, a3, a7, a9);
  swift_bridgeObjectRelease();
  return v15;
}

unint64_t sub_1B768A7AC()
{
  unint64_t result;

  result = qword_1EF178030;
  if (!qword_1EF178030)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for ActivityCategory, &type metadata for ActivityCategory);
    atomic_store(result, (unint64_t *)&qword_1EF178030);
  }
  return result;
}

uint64_t dispatch thunk of Persistable.persistableValue()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static Persistable.value(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1B768A800(uint64_t a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRetain();
  a2(v4, v5);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B768A858(uint64_t a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRelease();
  a2(v4, v5);
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_1B768A8B0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1B7678DC0(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8]);
}

uint64_t sub_1B768A8E0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1B7678CC8(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8]);
}

void sub_1B768A910(const char *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  NSObject *v12;
  _QWORD *v13;
  void *v14;
  uint32_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21[6];
  uint64_t v22;

  sub_1B7672EAC();
  v12 = sub_1B76DBCB4();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a3;
  v13[3] = a4;
  v13[4] = a5;
  v13[5] = a6;
  v21[4] = (uint64_t)sub_1B768B290;
  v21[5] = (uint64_t)v13;
  v21[0] = MEMORY[0x1E0C809B0];
  v21[1] = 1107296256;
  v21[2] = (uint64_t)sub_1B768AD70;
  v21[3] = (uint64_t)&block_descriptor_1;
  v14 = _Block_copy(v21);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  swift_beginAccess();
  v15 = notify_register_dispatch(a1, (int *)(a2 + 24), v12, v14);
  swift_endAccess();
  _Block_release(v14);

  if (v15)
  {
    if (qword_1ED53C0C0 != -1)
      swift_once();
    v16 = sub_1B76DB8B8();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ED53B750);
    swift_bridgeObjectRetain_n();
    v17 = sub_1B76DB8A0();
    v18 = sub_1B76DBC90();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v20 = swift_slowAlloc();
      v21[0] = v20;
      *(_DWORD *)v19 = 136446466;
      swift_bridgeObjectRetain();
      v22 = sub_1B7669B50(a3, a4, v21);
      sub_1B76DBD38();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v19 + 12) = 1026;
      LODWORD(v22) = v15;
      sub_1B76DBD38();
      _os_log_impl(&dword_1B7656000, v17, v18, "Failed to register for %{public}s: %{public}u", (uint8_t *)v19, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v20, -1, -1);
      MEMORY[0x1BCCA9590](v19, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_1B768ABBC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  if (qword_1ED53C0C0 != -1)
    swift_once();
  v7 = sub_1B76DB8B8();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED53B750);
  swift_bridgeObjectRetain_n();
  v8 = sub_1B76DB8A0();
  v9 = sub_1B76DBC84();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v14 = v11;
    *(_DWORD *)v10 = 136446210;
    swift_bridgeObjectRetain();
    sub_1B7669B50(a2, a3, &v14);
    sub_1B76DBD38();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1B7656000, v8, v9, "Received notification %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCA9590](v11, -1, -1);
    MEMORY[0x1BCCA9590](v10, -1, -1);

  }
  else
  {

    v12 = swift_bridgeObjectRelease_n();
  }
  return a4(v12);
}

uint64_t sub_1B768AD70(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_1B768ADAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  const char *v13;
  _QWORD v15[2];

  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
  {
    sub_1B76DBDB0();
    if (v7)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_release();
      return swift_release();
    }
    goto LABEL_13;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((a1 & 0x1000000000000000) != 0)
      v13 = (const char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v13 = (const char *)sub_1B76DBDD4();
    sub_1B768A910(v13, a3, a4, a5, a6, a7);
    if (v7)
      goto LABEL_7;
LABEL_13:
    swift_release();
    goto LABEL_14;
  }
  v15[0] = a1;
  v15[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  sub_1B768A910((const char *)v15, a3, a4, a5, a6, a7);
  if (v7)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  swift_release();
LABEL_14:
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1B768AF38()
{
  uint64_t v0;
  _DWORD *v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = (_DWORD *)(v0 + 24);
  swift_beginAccess();
  v2 = *(_DWORD *)(v0 + 24);
  if (v2 != -1)
  {
    if (notify_cancel(v2))
    {
      v3 = sub_1B76DBAD4();
      v5 = v4;
      if (qword_1ED53C0C0 != -1)
        swift_once();
      v6 = sub_1B76DB8B8();
      __swift_project_value_buffer(v6, (uint64_t)qword_1ED53B750);
      swift_bridgeObjectRetain();
      v7 = sub_1B76DB8A0();
      v8 = sub_1B76DBC90();
      if (os_log_type_enabled(v7, v8))
      {
        v9 = swift_slowAlloc();
        v10 = swift_slowAlloc();
        v11 = v10;
        *(_DWORD *)v9 = 136446466;
        swift_bridgeObjectRetain();
        sub_1B7669B50(v3, v5, &v11);
        sub_1B76DBD38();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v9 + 12) = 1026;
        sub_1B76DBD38();
        _os_log_impl(&dword_1B7656000, v7, v8, "Failed to deregister for %{public}s: %{public}u", (uint8_t *)v9, 0x12u);
        swift_arrayDestroy();
        MEMORY[0x1BCCA9590](v10, -1, -1);
        MEMORY[0x1BCCA9590](v9, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    *v1 = -1;
  }
}

uint64_t sub_1B768B130()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DarwinNotificationReceiver()
{
  return objc_opt_self();
}

uint64_t sub_1B768B174(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v5 = *v2;
  result = swift_beginAccess();
  if (*(_DWORD *)(v5 + 24) == -1)
  {
    v7 = sub_1B76DBAD4();
    v9 = v8;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1B768ADAC(v7, v9, v5, v7, v9, a1, a2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1B768B224()
{
  sub_1B768AF38();
}

void sub_1B768B244(const char *a1)
{
  uint64_t v1;

  sub_1B768A910(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_1B768B264()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B768B290(uint64_t a1)
{
  uint64_t v1;

  return sub_1B768ABBC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 32));
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

ManagedSettings::SettingsGroupName_optional __swiftcall SettingsGroupName.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  ManagedSettings::SettingsGroupName_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_1B76DBEDC();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 11;
  switch(v3)
  {
    case 0:
      goto LABEL_13;
    case 1:
      v5 = 1;
      goto LABEL_13;
    case 2:
      v5 = 2;
      goto LABEL_13;
    case 3:
      v5 = 3;
      goto LABEL_13;
    case 4:
      v5 = 4;
      goto LABEL_13;
    case 5:
      v5 = 5;
      goto LABEL_13;
    case 6:
      v5 = 6;
      goto LABEL_13;
    case 7:
      v5 = 7;
      goto LABEL_13;
    case 8:
      v5 = 8;
      goto LABEL_13;
    case 9:
      v5 = 9;
      goto LABEL_13;
    case 10:
      v5 = 10;
LABEL_13:
      v6 = v5;
      break;
    case 11:
      break;
    case 12:
      v6 = 12;
      break;
    case 13:
      v6 = 13;
      break;
    case 14:
      v6 = 14;
      break;
    case 15:
      v6 = 15;
      break;
    case 16:
      v6 = 16;
      break;
    case 17:
      v6 = 17;
      break;
    case 18:
      v6 = 18;
      break;
    case 19:
      v6 = 19;
      break;
    case 20:
      v6 = 20;
      break;
    case 21:
      v6 = 21;
      break;
    case 22:
      v6 = 22;
      break;
    case 23:
      v6 = 23;
      break;
    case 24:
      v6 = 24;
      break;
    case 25:
      v6 = 25;
      break;
    case 26:
      v6 = 26;
      break;
    case 27:
      v6 = 27;
      break;
    case 28:
      v6 = 28;
      break;
    default:
      v6 = 29;
      break;
  }
  *v2 = v6;
  return result;
}

void *static SettingsGroupName.allCases.getter()
{
  return &unk_1E6CAE350;
}

uint64_t SettingsGroupName.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B768B44C + 4 * byte_1B76DDE9D[*v0]))(0x746E756F636361, 0xE700000000000000);
}

uint64_t sub_1B768B44C()
{
  return 0x706F7244726961;
}

uint64_t sub_1B768B460()
{
  return 0x436465776F6C6C61;
}

uint64_t sub_1B768B484()
{
  return 0x746163696C707061;
}

uint64_t sub_1B768B4A4()
{
  return 0x65726F7453707061;
}

uint64_t sub_1B768B4BC()
{
  return 0x74616C75636C6163;
}

uint64_t sub_1B768B4DC()
{
  return 0x6172656D6163;
}

uint64_t sub_1B768B4F0()
{
  return 0x79616C50726163;
}

uint64_t sub_1B768B504()
{
  return 0x72616C756C6C6563;
}

uint64_t sub_1B768B51C()
{
  return 0x54646E4165746164;
}

uint64_t sub_1B768B53C()
{
  return 0x6341656369766564;
}

uint64_t sub_1B768B560()
{
  return 0x656D695465636166;
}

uint64_t sub_1B768B578()
{
  return 0x794D646E6966;
}

uint64_t sub_1B768B58C()
{
  return 0x746E6543656D6167;
}

uint64_t sub_1B768B5AC()
{
  return 0x6472616F6279656BLL;
}

uint64_t sub_1B768B5C4()
{
  return 0x53646567616E616DLL;
}

uint64_t sub_1B768B5E8()
{
  return 0x616964656DLL;
}

uint64_t sub_1B768B5FC()
{
  return 0x736567617373656DLL;
}

uint64_t sub_1B768B614()
{
  return 1937204590;
}

uint64_t sub_1B768B624()
{
  return 0x6163696669746F6ELL;
}

uint64_t sub_1B768B644()
{
  return 0x65646F6373736170;
}

uint64_t sub_1B768B65C()
{
  return 0x79636176697270;
}

uint64_t sub_1B768B670()
{
  return 0x697261666173;
}

uint64_t sub_1B768B684()
{
  return 0x69546E6565726373;
}

uint64_t sub_1B768B6A0()
{
  return 0x646C65696873;
}

uint64_t sub_1B768B6B4()
{
  return 1769105779;
}

uint64_t sub_1B768B6C4()
{
  return 1919251317;
}

uint64_t sub_1B768B6D4()
{
  return 0x6566615372657375;
}

uint64_t sub_1B768B6F0()
{
  return 0x65746E6F43626577;
}

uint64_t sub_1B768B710(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B76A0FA8(*a1, *a2);
}

unint64_t sub_1B768B720()
{
  unint64_t result;

  result = qword_1EF1780D0;
  if (!qword_1EF1780D0)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for SettingsGroupName, &type metadata for SettingsGroupName);
    atomic_store(result, (unint64_t *)&qword_1EF1780D0);
  }
  return result;
}

uint64_t sub_1B768B764()
{
  sub_1B76DBF54();
  SettingsGroupName.rawValue.getter();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

uint64_t sub_1B768B7C8()
{
  SettingsGroupName.rawValue.getter();
  sub_1B76DBB1C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B768B818()
{
  sub_1B76DBF54();
  SettingsGroupName.rawValue.getter();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

unint64_t sub_1B768B87C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF1780D8;
  if (!qword_1EF1780D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1780E0);
    result = MEMORY[0x1BCCA94E8](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF1780D8);
  }
  return result;
}

void sub_1B768B8C8(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6CAE350;
}

ManagedSettings::SettingsGroupName_optional sub_1B768B8D8(Swift::String *a1)
{
  return SettingsGroupName.init(rawValue:)(*a1);
}

uint64_t sub_1B768B8E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = SettingsGroupName.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for SettingsGroupName(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE4)
    goto LABEL_17;
  if (a2 + 28 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 28) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 28;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 28;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 28;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1D;
  v8 = v6 - 29;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SettingsGroupName(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 28 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 28) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE3)
    return ((uint64_t (*)(void))((char *)&loc_1B768B9E4 + 4 * byte_1B76DDEBF[v4]))();
  *a1 = a2 + 28;
  return ((uint64_t (*)(void))((char *)sub_1B768BA18 + 4 * byte_1B76DDEBA[v4]))();
}

uint64_t sub_1B768BA18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B768BA20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B768BA28);
  return result;
}

uint64_t sub_1B768BA34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B768BA3CLL);
  *(_BYTE *)result = a2 + 28;
  return result;
}

uint64_t sub_1B768BA40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B768BA48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SettingsGroupName()
{
  return &type metadata for SettingsGroupName;
}

uint64_t sub_1B768BA64(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v12 = MEMORY[0x1E0DEE9E8];
  v2 = (_QWORD *)(a1 + 56);
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  if (v5)
  {
    v7 = __clz(__rbit64(v5));
    goto LABEL_22;
  }
  if (v6 > 1)
  {
    v8 = v2[1];
    v9 = 1;
    if (v8)
      goto LABEL_21;
    v9 = 2;
    if (v6 <= 2)
      goto LABEL_23;
    v8 = v2[2];
    if (v8)
      goto LABEL_21;
    v9 = 3;
    if (v6 <= 3)
      goto LABEL_23;
    v8 = v2[3];
    if (v8)
      goto LABEL_21;
    v9 = 4;
    if (v6 <= 4)
      goto LABEL_23;
    v8 = v2[4];
    if (v8)
      goto LABEL_21;
    v9 = 5;
    if (v6 <= 5)
      goto LABEL_23;
    v8 = v2[5];
    if (v8)
    {
LABEL_21:
      v7 = __clz(__rbit64(v8)) + (v9 << 6);
LABEL_22:
      __asm { BR              X9 }
    }
    v10 = 6;
    if (v6 > 6)
    {
      v8 = v2[6];
      if (v8)
      {
        v9 = 6;
        goto LABEL_21;
      }
      while (1)
      {
        v9 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
          JUMPOUT(0x1B768BEC8);
        }
        if (v9 >= v6)
          break;
        v8 = v2[v9];
        ++v10;
        if (v8)
          goto LABEL_21;
      }
    }
  }
LABEL_23:
  swift_release();
  return v12;
}

uint64_t sub_1B768BF3C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v8;
  Swift::String v9;
  _BYTE v10[32];
  _OWORD v11[2];
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v1 = sub_1B76DB7BC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1, v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0DEE9E8];
  v6 = v0;
  sub_1B76DBCF0();

  sub_1B768C09C();
  sub_1B76DBD2C();
  while (v13)
  {
    sub_1B765DF30(&v12, v11);
    sub_1B765DF40((uint64_t)v11, (uint64_t)v10);
    if (swift_dynamicCast())
    {
      SettingsGroupName.init(rawValue:)(v9);
      if (v10[0] != 29)
        sub_1B7680390(v10, v10[0]);
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
    sub_1B76DBD2C();
  }
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return v14;
}

unint64_t sub_1B768C09C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF178050;
  if (!qword_1EF178050)
  {
    v1 = sub_1B76DB7BC();
    result = MEMORY[0x1BCCA94E8](MEMORY[0x1E0CAFB80], v1);
    atomic_store(result, (unint64_t *)&qword_1EF178050);
  }
  return result;
}

uint64_t XPCConnection.__allocating_init(machServiceName:options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  id v5;
  void *v6;
  id v7;

  v4 = swift_allocObject();
  v5 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v6 = (void *)sub_1B76DBAB0();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_initWithMachServiceName_options_, v6, a3);

  *(_QWORD *)(v4 + 16) = v7;
  return v4;
}

uint64_t sub_1B768C17C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t sub_1B768C184(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t XPCConnection.init(machServiceName:options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v5;
  void *v6;
  id v7;

  v5 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v6 = (void *)sub_1B76DBAB0();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_initWithMachServiceName_options_, v6, a3);

  *(_QWORD *)(v3 + 16) = v7;
  return v3;
}

uint64_t sub_1B768C234()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_serviceName);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1B76DBAD4();

  return v3;
}

double sub_1B768C298@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  double result;

  if (objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_exportedObject))
  {
    sub_1B76DBD50();
    swift_unknownObjectRelease();
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

double sub_1B768C2F8@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  double result;

  if (objc_msgSend(*(id *)(v1 + 16), sel_exportedObject))
  {
    sub_1B76DBD50();
    swift_unknownObjectRelease();
  }
  else
  {
    result = 0.0;
    *a1 = 0u;
    a1[1] = 0u;
  }
  return result;
}

uint64_t sub_1B768C354(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  id v11;
  _QWORD v13[3];
  uint64_t v14;

  v3 = *(void **)(v1 + 16);
  sub_1B7670B8C(a1, (uint64_t)v13);
  v4 = v14;
  if (v14)
  {
    v5 = __swift_project_boxed_opaque_existential_1(v13, v14);
    v6 = *(_QWORD *)(v4 - 8);
    MEMORY[0x1E0C80A78](v5, v5);
    v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v6 + 16))(v8);
    v9 = v3;
    v10 = sub_1B76DBEC4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
  }
  else
  {
    v11 = v3;
    v10 = 0;
  }
  objc_msgSend(v3, sel_setExportedObject_, v10);

  swift_unknownObjectRelease();
  return sub_1B7670BD4(a1);
}

void (*sub_1B768C458(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  char *v3;
  _OWORD *v4;

  v3 = (char *)malloc(0xA8uLL);
  *a1 = v3;
  v4 = v3 + 32;
  *((_QWORD *)v3 + 20) = v1;
  if (objc_msgSend(*(id *)(v1 + 16), sel_exportedObject))
  {
    sub_1B76DBD50();
    swift_unknownObjectRelease();
  }
  else
  {
    *v4 = 0u;
    *((_OWORD *)v3 + 3) = 0u;
  }
  sub_1B765DE40((uint64_t)v4, (uint64_t)v3);
  return sub_1B768C4E8;
}

void sub_1B768C4E8(uint64_t *a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;

  v2 = (_QWORD *)*a1;
  v3 = *(_QWORD *)(*a1 + 160);
  if ((a2 & 1) != 0)
  {
    sub_1B7670B8C(*a1, (uint64_t)(v2 + 8));
    v4 = *(void **)(v3 + 16);
    sub_1B7670B8C((uint64_t)(v2 + 8), (uint64_t)(v2 + 12));
    v5 = v2[15];
    if (v5)
    {
      v6 = __swift_project_boxed_opaque_existential_1(v2 + 12, v2[15]);
      v7 = *(_QWORD *)(v5 - 8);
      MEMORY[0x1E0C80A78](v6, v6);
      v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v7 + 16))(v9);
      v10 = v4;
      v11 = sub_1B76DBEC4();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)(v2 + 12));
    }
    else
    {
      v20 = v4;
      v11 = 0;
    }
    objc_msgSend(v4, sel_setExportedObject_, v11);
    swift_unknownObjectRelease();

    sub_1B7670BD4((uint64_t)(v2 + 8));
  }
  else
  {
    v12 = *(void **)(v3 + 16);
    sub_1B7670B8C(*a1, (uint64_t)(v2 + 16));
    v13 = v2[19];
    if (v13)
    {
      v14 = __swift_project_boxed_opaque_existential_1(v2 + 16, v2[19]);
      v15 = *(_QWORD *)(v13 - 8);
      MEMORY[0x1E0C80A78](v14, v14);
      v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v15 + 16))(v17);
      v18 = v12;
      v19 = sub_1B76DBEC4();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v13);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)(v2 + 16));
    }
    else
    {
      v21 = v12;
      v19 = 0;
    }
    objc_msgSend(v12, sel_setExportedObject_, v19);
    swift_unknownObjectRelease();

  }
  sub_1B7670BD4((uint64_t)v2);
  free(v2);
}

id sub_1B768C6EC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_exportedInterface);
}

void sub_1B768C710(void *a1)
{
  sub_1B768C7A0(a1, (const char **)&selRef_setExportedInterface_);
}

void (*sub_1B768C71C(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = objc_msgSend(*(id *)(v1 + 16), sel_exportedInterface);
  return sub_1B768C764;
}

void sub_1B768C764(uint64_t a1, char a2)
{
  sub_1B768C83C(a1, a2, (SEL *)&selRef_setExportedInterface_);
}

id sub_1B768C770()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_remoteObjectInterface);
}

void sub_1B768C794(void *a1)
{
  sub_1B768C7A0(a1, (const char **)&selRef_setRemoteObjectInterface_);
}

void sub_1B768C7A0(void *a1, const char **a2)
{
  uint64_t v2;
  const char *v3;
  id v4;

  v3 = *a2;
  v4 = *(id *)(v2 + 16);
  objc_msgSend(v4, v3, a1);

}

void (*sub_1B768C7E8(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = objc_msgSend(*(id *)(v1 + 16), sel_remoteObjectInterface);
  return sub_1B768C830;
}

void sub_1B768C830(uint64_t a1, char a2)
{
  sub_1B768C83C(a1, a2, (SEL *)&selRef_setRemoteObjectInterface_);
}

void sub_1B768C83C(uint64_t a1, char a2, SEL *a3)
{
  void *v3;
  void *v4;
  const char *v5;
  void *v6;
  id v7;

  v3 = *(void **)a1;
  v4 = *(void **)(*(_QWORD *)(a1 + 8) + 16);
  v5 = *a3;
  if ((a2 & 1) != 0)
  {
    objc_msgSend(v4, *a3, v3);
    v6 = v3;
  }
  else
  {
    v7 = v4;
    objc_msgSend(v7, v5, v3);

    v6 = v7;
  }

}

_QWORD *sub_1B768C89C@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  _QWORD *result;
  _QWORD *v4;
  uint64_t v5;
  uint64_t (*v6)();

  result = objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_interruptionHandler);
  if (result)
  {
    v4 = result;
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v4;
    result = (_QWORD *)swift_allocObject();
    result[2] = sub_1B768D934;
    result[3] = v5;
    v6 = sub_1B768D938;
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  a2[1] = (uint64_t (*)())result;
  return result;
}

void sub_1B768C934(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = sub_1B768D938;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  sub_1B7673018(v1);
  sub_1B768CA48((uint64_t)v4, v3);
}

uint64_t (*sub_1B768C9B4())()
{
  uint64_t v0;
  uint64_t (*result)();

  result = (uint64_t (*)())objc_msgSend(*(id *)(v0 + 16), sel_interruptionHandler);
  if (result)
  {
    *(_QWORD *)(swift_allocObject() + 16) = result;
    return sub_1B768CA3C;
  }
  return result;
}

uint64_t sub_1B768CA18()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1B768CA3C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

void sub_1B768CA48(uint64_t a1, uint64_t a2)
{
  sub_1B768CCB4(a1, a2, (uint64_t)&block_descriptor_2, (SEL *)&selRef_setInterruptionHandler_);
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

void (*sub_1B768CA74(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t (*v6)();

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[8] = v1;
  v4 = objc_msgSend(*(id *)(v1 + 16), sel_interruptionHandler);
  if (v4)
  {
    v5 = v4;
    v4 = (_QWORD *)swift_allocObject();
    v4[2] = v5;
    v6 = sub_1B768D934;
  }
  else
  {
    v6 = 0;
  }
  v3[6] = v6;
  v3[7] = v4;
  return sub_1B768CB08;
}

void sub_1B768CB08(uint64_t a1, char a2)
{
  sub_1B768CE2C(a1, a2, (uint64_t)&block_descriptor_6_0, (SEL *)&selRef_setInterruptionHandler_, (uint64_t)&block_descriptor_3);
}

_QWORD *sub_1B768CB24@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  _QWORD *result;
  _QWORD *v4;
  uint64_t v5;
  uint64_t (*v6)();

  result = objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_invalidationHandler);
  if (result)
  {
    v4 = result;
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v4;
    result = (_QWORD *)swift_allocObject();
    result[2] = sub_1B768D934;
    result[3] = v5;
    v6 = sub_1B768D914;
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  a2[1] = (uint64_t (*)())result;
  return result;
}

void sub_1B768CBBC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = sub_1B768D914;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  sub_1B7673018(v1);
  sub_1B768CCA0((uint64_t)v4, v3);
}

uint64_t (*sub_1B768CC3C())()
{
  uint64_t v0;
  uint64_t (*result)();

  result = (uint64_t (*)())objc_msgSend(*(id *)(v0 + 16), sel_invalidationHandler);
  if (result)
  {
    *(_QWORD *)(swift_allocObject() + 16) = result;
    return sub_1B768D934;
  }
  return result;
}

void sub_1B768CCA0(uint64_t a1, uint64_t a2)
{
  sub_1B768CCB4(a1, a2, (uint64_t)&block_descriptor_17, (SEL *)&selRef_setInvalidationHandler_);
}

void sub_1B768CCB4(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v4;
  void *v7;
  void *v8;
  id v9;
  id v10;
  _QWORD v11[6];

  v7 = *(void **)(v4 + 16);
  if (a1)
  {
    v11[4] = a1;
    v11[5] = a2;
    v11[0] = MEMORY[0x1E0C809B0];
    v11[1] = 1107296256;
    v11[2] = sub_1B768C184;
    v11[3] = a3;
    v8 = _Block_copy(v11);
    v9 = v7;
    sub_1B7673018(a1);
    swift_release();
  }
  else
  {
    v10 = v7;
    v8 = 0;
  }
  objc_msgSend(v7, *a4, v8);
  sub_1B7671FB8(a1);
  _Block_release(v8);

}

void (*sub_1B768CD7C(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t (*v6)();

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[8] = v1;
  v4 = objc_msgSend(*(id *)(v1 + 16), sel_invalidationHandler);
  if (v4)
  {
    v5 = v4;
    v4 = (_QWORD *)swift_allocObject();
    v4[2] = v5;
    v6 = sub_1B768D934;
  }
  else
  {
    v6 = 0;
  }
  v3[6] = v6;
  v3[7] = v4;
  return sub_1B768CE10;
}

void sub_1B768CE10(uint64_t a1, char a2)
{
  sub_1B768CE2C(a1, a2, (uint64_t)&block_descriptor_23, (SEL *)&selRef_setInvalidationHandler_, (uint64_t)&block_descriptor_20);
}

void sub_1B768CE2C(uint64_t a1, char a2, uint64_t a3, SEL *a4, uint64_t a5)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;

  v6 = *(_QWORD **)a1;
  v7 = *(_QWORD *)(*(_QWORD *)a1 + 48);
  v8 = *(_QWORD *)(*(_QWORD *)a1 + 56);
  v9 = *(void **)(*(_QWORD *)(*(_QWORD *)a1 + 64) + 16);
  if ((a2 & 1) != 0)
  {
    if (v7)
    {
      v6[4] = v7;
      v6[5] = v8;
      *v6 = MEMORY[0x1E0C809B0];
      v6[1] = 1107296256;
      v6[2] = sub_1B768C184;
      v6[3] = a5;
      v10 = _Block_copy(v6);
      sub_1B7673018(v7);
      sub_1B7673018(v7);
      v11 = v9;
      swift_release();
    }
    else
    {
      v14 = v9;
      v10 = 0;
    }
    objc_msgSend(v9, *a4, v10);
    sub_1B7671FB8(v7);
    _Block_release(v10);

    sub_1B7671FB8(v6[6]);
  }
  else
  {
    if (v7)
    {
      v6[4] = v7;
      v6[5] = v8;
      *v6 = MEMORY[0x1E0C809B0];
      v6[1] = 1107296256;
      v6[2] = sub_1B768C184;
      v6[3] = a3;
      v12 = _Block_copy(v6);
      v13 = v9;
      sub_1B7673018(v7);
      swift_release();
    }
    else
    {
      v15 = v9;
      v12 = 0;
    }
    objc_msgSend(v9, *a4, v12);
    sub_1B7671FB8(v7);
    _Block_release(v12);

  }
  free(v6);
}

id sub_1B768CFA4()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_processIdentifier);
}

uint64_t sub_1B768CFB4()
{
  uint64_t v0;
  uint64_t v2;

  objc_msgSend(*(id *)(v0 + 16), sel_auditToken);
  return v2;
}

id sub_1B768CFE8()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_resume);
}

id sub_1B768CFF8()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_activate);
}

id sub_1B768D008()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_invalidate);
}

uint64_t sub_1B768D018()
{
  uint64_t v0;
  id v1;
  id v2;

  v1 = *(id *)(v0 + 16);
  v2 = objc_msgSend(v1, sel__xpcConnection);
  xpc_connection_set_non_launching();

  return swift_unknownObjectRelease();
}

uint64_t sub_1B768D070()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_remoteObjectProxy);
  sub_1B76DBD50();
  return swift_unknownObjectRelease();
}

uint64_t sub_1B768D13C(uint64_t a1, uint64_t a2)
{
  return sub_1B768D180(a1, a2, (uint64_t)&block_descriptor_30, (SEL *)&selRef_remoteObjectProxyWithErrorHandler_);
}

uint64_t sub_1B768D16C(uint64_t a1, uint64_t a2)
{
  return sub_1B768D180(a1, a2, (uint64_t)&block_descriptor_33, (SEL *)&selRef_synchronousRemoteObjectProxyWithErrorHandler_);
}

uint64_t sub_1B768D180(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v4;
  void *v6;
  void *v7;
  id v8;
  id v9;
  _QWORD v11[6];

  v6 = *(void **)(v4 + 16);
  v11[4] = a1;
  v11[5] = a2;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1B7671228;
  v11[3] = a3;
  v7 = _Block_copy(v11);
  v8 = v6;
  swift_retain();
  swift_release();
  v9 = objc_msgSend(v8, *a4, v7);
  _Block_release(v7);

  sub_1B76DBD50();
  return swift_unknownObjectRelease();
}

id sub_1B768D268(int a1, int a2, void *aBlock, uint64_t a4, uint64_t a5, void (*a6)(_QWORD *__return_ptr, uint64_t, uint64_t))
{
  void *v8;
  uint64_t v9;
  void *v10;
  _QWORD v12[4];

  v8 = _Block_copy(aBlock);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  swift_retain();
  a6(v12, a5, v9);
  swift_release();
  swift_release();
  __swift_project_boxed_opaque_existential_1(v12, v12[3]);
  v10 = (void *)sub_1B76DBEC4();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v10;
}

uint64_t XPCConnection.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t XPCConnection.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_1B768D360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  id v5;
  void *v6;
  id v7;

  type metadata accessor for XPCConnection();
  v4 = swift_allocObject();
  v5 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v6 = (void *)sub_1B76DBAB0();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_initWithMachServiceName_options_, v6, a3);

  *(_QWORD *)(v4 + 16) = v7;
  return v4;
}

uint64_t (*sub_1B768D3FC(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1B768C458(v2);
  return sub_1B76714EC;
}

void sub_1B768D440(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1B768D49C(a1, a2, a3, (const char **)&selRef_setExportedInterface_);
}

uint64_t (*sub_1B768D44C(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1B768C71C(v2);
  return sub_1B76714EC;
}

void sub_1B768D490(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1B768D49C(a1, a2, a3, (const char **)&selRef_setRemoteObjectInterface_);
}

void sub_1B768D49C(void *a1, uint64_t a2, uint64_t a3, const char **a4)
{
  uint64_t v4;
  const char *v5;
  id v6;

  v5 = *a4;
  v6 = *(id *)(v4 + 16);
  objc_msgSend(v6, v5, a1);

}

uint64_t (*sub_1B768D4E4(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1B768C7E8(v2);
  return sub_1B76714EC;
}

uint64_t (*sub_1B768D528())()
{
  uint64_t v0;
  uint64_t (*result)();

  result = (uint64_t (*)())objc_msgSend(*(id *)(v0 + 16), sel_interruptionHandler);
  if (result)
  {
    *(_QWORD *)(swift_allocObject() + 16) = result;
    return sub_1B768D934;
  }
  return result;
}

uint64_t (*sub_1B768D590(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1B768CA74(v2);
  return sub_1B76714EC;
}

uint64_t (*sub_1B768D5D4())()
{
  uint64_t v0;
  uint64_t (*result)();

  result = (uint64_t (*)())objc_msgSend(*(id *)(v0 + 16), sel_invalidationHandler);
  if (result)
  {
    *(_QWORD *)(swift_allocObject() + 16) = result;
    return sub_1B768D934;
  }
  return result;
}

uint64_t (*sub_1B768D63C(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1B768CD7C(v2);
  return sub_1B76714EC;
}

uint64_t sub_1B768D688(uint64_t a1)
{
  _BYTE v2[32];

  sub_1B7670B8C(a1, (uint64_t)v2);
  return sub_1B768C354((uint64_t)v2);
}

id sub_1B768D6C0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_34Tm(a1, (SEL *)&selRef_exportedInterface, a2);
}

id sub_1B768D6CC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_35Tm(a1, a2, a3, a4, (SEL *)&selRef_setExportedInterface_);
}

id sub_1B768D6D8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_34Tm(a1, (SEL *)&selRef_remoteObjectInterface, a2);
}

id keypath_get_34Tm@<X0>(uint64_t a1@<X0>, SEL *a2@<X3>, _QWORD *a3@<X8>)
{
  id result;

  result = objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), *a2);
  *a3 = result;
  return result;
}

id sub_1B768D71C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_35Tm(a1, a2, a3, a4, (SEL *)&selRef_setRemoteObjectInterface_);
}

id keypath_set_35Tm(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  return objc_msgSend(*(id *)(*(_QWORD *)a2 + 16), *a5, *a1);
}

uint64_t type metadata accessor for XPCConnection()
{
  return objc_opt_self();
}

uint64_t method lookup function for XPCConnection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of XPCConnection.__allocating_init(machServiceName:options:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of XPCConnection.serviceName.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of XPCConnection.exportedObject.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of XPCConnection.exportedObject.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of XPCConnection.exportedObject.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of XPCConnection.exportedInterface.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of XPCConnection.exportedInterface.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of XPCConnection.exportedInterface.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of XPCConnection.remoteObjectInterface.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of XPCConnection.remoteObjectInterface.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of XPCConnection.remoteObjectInterface.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of XPCConnection.interruptionHandler.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of XPCConnection.interruptionHandler.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of XPCConnection.interruptionHandler.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of XPCConnection.invalidationHandler.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of XPCConnection.invalidationHandler.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of XPCConnection.invalidationHandler.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of XPCConnection.processIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of XPCConnection.auditToken.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of XPCConnection.resume()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of XPCConnection.activate()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of XPCConnection.invalidate()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of XPCConnection.setNonLaunching(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of XPCConnection.remoteObjectProxy()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of XPCConnection.remoteObjectProxyWithErrorHandler(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of XPCConnection.synchronousRemoteObjectProxyWithErrorHandler(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

void sub_1B768D8B0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (id)sub_1B76DB798();
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);

}

uint64_t sub_1B768D8F0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B768D914()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

double ActivityCategory.init(identifier:localizedDisplayName:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  double result;

  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  result = 0.0;
  *(_OWORD *)(a5 + 16) = xmmword_1B76DC6F0;
  *(_QWORD *)(a5 + 32) = a3;
  *(_QWORD *)(a5 + 40) = a4;
  return result;
}

__n128 ActivityCategory.init(token:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  result = *a1;
  a2[1] = *a1;
  a2[2].n128_u64[0] = 0;
  a2[2].n128_u64[1] = 0;
  return result;
}

uint64_t sub_1B768D9D0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 24);
  *a1 = *(_QWORD *)(v1 + 16);
  a1[1] = v2;
  return sub_1B765E0D4();
}

uint64_t ActivityCategory.token.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 24);
  *a1 = *(_QWORD *)(v1 + 16);
  a1[1] = v2;
  return sub_1B765E0D4();
}

__n128 ActivityCategory.init(identifier:token:localizedDisplayName:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, __n128 *a6@<X8>)
{
  __n128 result;

  a6->n128_u64[0] = a1;
  a6->n128_u64[1] = a2;
  result = *a3;
  a6[1] = *a3;
  a6[2].n128_u64[0] = a4;
  a6[2].n128_u64[1] = a5;
  return result;
}

uint64_t ActivityCategory.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ActivityCategory.localizedDisplayName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

double sub_1B768DA54()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&xmmword_1EF1780E8 = sub_1B76DBAD4();
  *((_QWORD *)&xmmword_1EF1780E8 + 1) = v0;
  result = 0.0;
  xmmword_1EF1780F8 = xmmword_1B76DC6F0;
  xmmword_1EF178108 = 0uLL;
  return result;
}

uint64_t static ActivityCategory.all.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  if (qword_1EF177258 != -1)
    swift_once();
  v2 = *((_QWORD *)&xmmword_1EF1780E8 + 1);
  v3 = xmmword_1EF1780F8;
  v4 = *((_QWORD *)&xmmword_1EF178108 + 1);
  *(_QWORD *)a1 = xmmword_1EF1780E8;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  v6 = *((_QWORD *)&xmmword_1EF1780F8 + 1);
  *(_OWORD *)(a1 + 24) = *(__int128 *)((char *)&xmmword_1EF1780F8 + 8);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  sub_1B765E0D4(v3, v6);
  return swift_bridgeObjectRetain();
}

uint64_t ActivityCategory.hash(into:)()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = v0[2];
  v2 = v0[3];
  v3 = v0[5];
  if (v0[1])
  {
    sub_1B76DBF6C();
    swift_bridgeObjectRetain();
    sub_1B76DBB1C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B76DBF6C();
  }
  if (v2 >> 60 == 15)
  {
    sub_1B76DBF6C();
    if (v3)
    {
LABEL_6:
      sub_1B76DBF6C();
      swift_bridgeObjectRetain();
      sub_1B76DBB1C();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1B76DBF6C();
    sub_1B765DDFC(v1, v2);
    sub_1B76DB834();
    sub_1B765E0D8(v1, v2);
    if (v3)
      goto LABEL_6;
  }
  return sub_1B76DBF6C();
}

uint64_t ActivityCategory.hashValue.getter()
{
  sub_1B76DBF54();
  ActivityCategory.hash(into:)();
  return sub_1B76DBF78();
}

uint64_t sub_1B768DC90()
{
  sub_1B76DBF54();
  ActivityCategory.hash(into:)();
  return sub_1B76DBF78();
}

uint64_t sub_1B768DCE4()
{
  sub_1B76DBF54();
  ActivityCategory.hash(into:)();
  return sub_1B76DBF78();
}

uint64_t static ShieldSettings.ActivityCategoryPolicy.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(unsigned __int8 *)(a2 + 16);
  if (!*(_BYTE *)(a1 + 16))
  {
    if (!*(_BYTE *)(a2 + 16) && (sub_1B768EE1C(*(_QWORD *)a1, *(_QWORD *)a2) & 1) != 0)
    {
      v9 = type metadata accessor for Token(0, a3, v7, v8);
      MEMORY[0x1BCCA94E8](&protocol conformance descriptor for Token<A>, v9);
      return sub_1B76DBC00();
    }
    return 0;
  }
  if (*(_BYTE *)(a1 + 16) == 1)
  {
    if (v5 == 1)
    {
      v6 = type metadata accessor for Token(0, a3, a3, a4);
      MEMORY[0x1BCCA94E8](&protocol conformance descriptor for Token<A>, v6);
      return sub_1B76DBC00();
    }
    return 0;
  }
  return (v5 & 7) == 2;
}

uint64_t sub_1B768DE24(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  BOOL v33;
  char v35;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  unint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;

  if (a1 == a2)
    return 1;
  v3 = a1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = a1 + 56;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(a1 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v44 = a2 + 56;
  v39 = a1 + 56;
  v38 = v9;
  if (!v8)
    goto LABEL_8;
LABEL_7:
  v10 = __clz(__rbit64(v8));
  v11 = (v8 - 1) & v8;
  v12 = v10 | (v4 << 6);
LABEL_22:
  v16 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 48 * v12);
  v17 = *v16;
  v18 = v16[1];
  v19 = v16[2];
  v20 = v16[3];
  v21 = v16[5];
  v43 = v16[4];
  sub_1B76DBF54();
  sub_1B76DBF6C();
  if (v18)
  {
    swift_bridgeObjectRetain();
    sub_1B765E0D4(v19, v20);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B76DBB1C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B765E0D4(v19, v20);
    swift_bridgeObjectRetain();
  }
  v45 = v21;
  v46 = v20;
  v47 = v20 >> 60;
  v48 = v17;
  if (v20 >> 60 != 15)
  {
    v23 = v20;
    sub_1B76DBF6C();
    v22 = v19;
    sub_1B765DDFC(v19, v23);
    sub_1B76DB834();
    sub_1B765E0D8(v19, v23);
    if (v45)
      goto LABEL_27;
LABEL_29:
    sub_1B76DBF6C();
    goto LABEL_30;
  }
  sub_1B76DBF6C();
  v22 = v19;
  if (!v21)
    goto LABEL_29;
LABEL_27:
  sub_1B76DBF6C();
  swift_bridgeObjectRetain();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
LABEL_30:
  v24 = sub_1B76DBF78();
  v25 = -1 << *(_BYTE *)(a2 + 32);
  v26 = v24 & ~v25;
  if (((*(_QWORD *)(v44 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) != 0)
  {
    v41 = v11;
    v42 = v4;
    v49 = ~v25;
    while (1)
    {
      v27 = (_QWORD *)(*(_QWORD *)(a2 + 48) + 48 * v26);
      v28 = v27[1];
      v29 = v27[2];
      v31 = v27[3];
      v30 = v27[4];
      v32 = v27[5];
      if (v28)
      {
        if (!v18)
          goto LABEL_33;
        v33 = *v27 == v48 && v28 == v18;
        if (!v33 && (sub_1B76DBED0() & 1) == 0)
          goto LABEL_33;
      }
      else if (v18)
      {
        goto LABEL_33;
      }
      if (v31 >> 60 != 15)
        break;
      if (v47 <= 0xE)
        goto LABEL_32;
      swift_bridgeObjectRetain();
      sub_1B765E0D4(v29, v31);
      swift_bridgeObjectRetain();
      if (v32)
      {
        if (v45)
        {
          if (v30 == v43 && v32 == v45)
          {
            swift_bridgeObjectRelease();
            sub_1B765E0D8(v29, v31);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1B765E0D8(v19, v46);
            goto LABEL_60;
          }
          v35 = sub_1B76DBED0();
          swift_bridgeObjectRelease();
          sub_1B765E0D8(v29, v31);
          swift_bridgeObjectRelease();
          if ((v35 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            sub_1B765E0D8(v19, v46);
            goto LABEL_60;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          sub_1B765E0D8(v29, v31);
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1B765E0D8(v29, v31);
        if (!v45)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B765E0D8(v19, v46);
LABEL_60:
          swift_bridgeObjectRelease();
          v5 = v39;
          v3 = a1;
          v9 = v38;
          v8 = v41;
          v4 = v42;
          if (v41)
            goto LABEL_7;
LABEL_8:
          v13 = v4 + 1;
          if (__OFADD__(v4, 1))
          {
            __break(1u);
            JUMPOUT(0x1B768ED58);
          }
          if (v13 >= v9)
            return 1;
          v14 = *(_QWORD *)(v5 + 8 * v13);
          ++v4;
          if (v14)
            goto LABEL_21;
          v4 = v13 + 1;
          if (v13 + 1 >= v9)
            return 1;
          v14 = *(_QWORD *)(v5 + 8 * v4);
          if (v14)
            goto LABEL_21;
          v4 = v13 + 2;
          if (v13 + 2 >= v9)
            return 1;
          v14 = *(_QWORD *)(v5 + 8 * v4);
          if (v14)
            goto LABEL_21;
          v15 = v13 + 3;
          if (v15 >= v9)
            return 1;
          v14 = *(_QWORD *)(v5 + 8 * v15);
          if (!v14)
          {
            while (1)
            {
              v4 = v15 + 1;
              if (__OFADD__(v15, 1))
              {
                __break(1u);
                JUMPOUT(0x1B768ED60);
              }
              if (v4 >= v9)
                return 1;
              v14 = *(_QWORD *)(v5 + 8 * v4);
              ++v15;
              if (v14)
                goto LABEL_21;
            }
          }
          v4 = v15;
LABEL_21:
          v11 = (v14 - 1) & v14;
          v12 = __clz(__rbit64(v14)) + (v4 << 6);
          goto LABEL_22;
        }
        swift_bridgeObjectRelease();
      }
LABEL_33:
      v26 = (v26 + 1) & v49;
      if (((*(_QWORD *)(v44 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v37 = v19;
        goto LABEL_64;
      }
    }
    if (v47 <= 0xE)
      __asm { BR              X8 }
LABEL_32:
    sub_1B765E0D4(v19, v46);
    sub_1B765E0D4(v29, v31);
    sub_1B765E0D8(v29, v31);
    sub_1B765E0D8(v19, v46);
    goto LABEL_33;
  }
  swift_bridgeObjectRelease();
  v37 = v22;
LABEL_64:
  sub_1B765E0D8(v37, v46);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1B768EE1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v15;

  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
  {
    v3 = 1 << *(_BYTE *)(a1 + 32);
    if (v3 < 64)
      v4 = ~(-1 << v3);
    else
      v4 = -1;
    v5 = v4 & *(_QWORD *)(a1 + 56);
    v15 = (unint64_t)(v3 + 63) >> 6;
    if (v5)
    {
      v6 = __clz(__rbit64(v5));
LABEL_21:
      v10 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v6);
      v12 = *v10;
      v11 = v10[1];
      sub_1B76DBF54();
      sub_1B765DDFC(v12, v11);
      sub_1B765DDFC(v12, v11);
      sub_1B76DB834();
      sub_1B765DEC4(v12, v11);
      v13 = sub_1B76DBF78() & ~(-1 << *(_BYTE *)(a2 + 32));
      if (((*(_QWORD *)(a2 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
        __asm { BR              X8 }
      sub_1B765DEC4(v12, v11);
      return 0;
    }
    if ((unint64_t)(v3 + 63) >> 6 > 1)
    {
      v7 = *(_QWORD *)(a1 + 64);
      v8 = 1;
      if (v7)
        goto LABEL_20;
      v8 = 2;
      if ((unint64_t)(v3 + 63) >> 6 <= 2)
        return 1;
      v7 = *(_QWORD *)(a1 + 72);
      if (v7)
        goto LABEL_20;
      v8 = 3;
      if ((unint64_t)(v3 + 63) >> 6 <= 3)
        return 1;
      v7 = *(_QWORD *)(a1 + 80);
      if (v7)
      {
LABEL_20:
        v6 = __clz(__rbit64(v7)) + (v8 << 6);
        goto LABEL_21;
      }
      v9 = 4;
      if (v15 > 4)
      {
        v7 = *(_QWORD *)(a1 + 88);
        if (v7)
        {
          v8 = 4;
          goto LABEL_20;
        }
        while (1)
        {
          v8 = v9 + 1;
          if (__OFADD__(v9, 1))
            __break(1u);
          if (v8 >= v15)
            break;
          v7 = *(_QWORD *)(a1 + 56 + 8 * v8);
          ++v9;
          if (v7)
            goto LABEL_20;
        }
      }
    }
    return 1;
  }
  return 0;
}

uint64_t sub_1B768F960(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  BOOL v26;
  int64_t v28;
  uint64_t v29;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  if (a1 == a2)
    return 1;
  v3 = a1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = a1 + 56;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(a1 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v33 = a2 + 56;
  v29 = a1 + 56;
  v28 = v9;
  if (v8)
    goto LABEL_7;
LABEL_8:
  v11 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    JUMPOUT(0x1B769069CLL);
  }
  if (v11 >= v9)
    return 1;
  v12 = *(_QWORD *)(v5 + 8 * v11);
  ++v4;
  if (!v12)
  {
    v4 = v11 + 1;
    if (v11 + 1 >= v9)
      return 1;
    v12 = *(_QWORD *)(v5 + 8 * v4);
    if (!v12)
    {
      v4 = v11 + 2;
      if (v11 + 2 >= v9)
        return 1;
      v12 = *(_QWORD *)(v5 + 8 * v4);
      if (!v12)
      {
        v4 = v11 + 3;
        if (v11 + 3 >= v9)
          return 1;
        v12 = *(_QWORD *)(v5 + 8 * v4);
        if (!v12)
        {
          v13 = v11 + 4;
          if (v13 < v9)
          {
            v12 = *(_QWORD *)(v5 + 8 * v13);
            if (v12)
            {
              v4 = v13;
              goto LABEL_23;
            }
            while (1)
            {
              v4 = v13 + 1;
              if (__OFADD__(v13, 1))
                __break(1u);
              if (v4 >= v9)
                break;
              v12 = *(_QWORD *)(v5 + 8 * v4);
              ++v13;
              if (v12)
                goto LABEL_23;
            }
          }
          return 1;
        }
      }
    }
  }
LABEL_23:
  v31 = (v12 - 1) & v12;
  for (i = __clz(__rbit64(v12)) + (v4 << 6); ; i = __clz(__rbit64(v8)) | (v4 << 6))
  {
    v14 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 32 * i);
    v16 = *v14;
    v15 = v14[1];
    v17 = v14[2];
    v18 = v14[3];
    sub_1B76DBF54();
    sub_1B76DBF6C();
    if (v15)
    {
      swift_bridgeObjectRetain();
      sub_1B765E0D4(v17, v18);
      swift_bridgeObjectRetain();
      sub_1B76DBB1C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B765E0D4(v17, v18);
    }
    v34 = v16;
    v32 = v4;
    sub_1B76DBF6C();
    if (v18 >> 60 != 15)
    {
      sub_1B765DDFC(v17, v18);
      sub_1B76DB834();
      sub_1B765E0D8(v17, v18);
    }
    v19 = sub_1B76DBF78();
    v20 = -1 << *(_BYTE *)(a2 + 32);
    v21 = v19 & ~v20;
    if (((*(_QWORD *)(v33 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
      break;
    v35 = ~v20;
    while (1)
    {
      v22 = (_QWORD *)(*(_QWORD *)(a2 + 48) + 32 * v21);
      v24 = v22[1];
      v23 = v22[2];
      v25 = v22[3];
      if (v24)
      {
        if (!v15)
          goto LABEL_33;
        v26 = *v22 == v34 && v24 == v15;
        if (!v26 && (sub_1B76DBED0() & 1) == 0)
          goto LABEL_33;
      }
      else if (v15)
      {
        goto LABEL_33;
      }
      if (v25 >> 60 != 15)
      {
        if (v18 >> 60 != 15)
          __asm { BR              X8 }
        goto LABEL_32;
      }
      if (v18 >> 60 == 15)
        break;
LABEL_32:
      sub_1B765E0D4(v17, v18);
      sub_1B765E0D4(v23, v25);
      sub_1B765E0D8(v23, v25);
      sub_1B765E0D8(v17, v18);
LABEL_33:
      v21 = (v21 + 1) & v35;
      if (((*(_QWORD *)(v33 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
        goto LABEL_49;
    }
    swift_bridgeObjectRelease();
    sub_1B765E0D8(v17, v18);
    v5 = v29;
    v3 = a1;
    v9 = v28;
    v8 = v31;
    v4 = v32;
    if (!v31)
      goto LABEL_8;
LABEL_7:
    v31 = (v8 - 1) & v8;
  }
LABEL_49:
  swift_bridgeObjectRelease();
  sub_1B765E0D8(v17, v18);
  return 0;
}

uint64_t sub_1B7690760(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  unint64_t v7;

  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  if (v3 < 64)
    v4 = ~(-1 << v3);
  else
    v4 = -1;
  if ((v4 & *(_QWORD *)(a1 + 56)) != 0)
    goto LABEL_20;
  if ((unint64_t)(v3 + 63) >> 6 <= 1)
    return 1;
  if (*(_QWORD *)(a1 + 64))
    goto LABEL_20;
  if ((unint64_t)(v3 + 63) >> 6 <= 2)
    return 1;
  if (*(_QWORD *)(a1 + 72))
    goto LABEL_20;
  if ((unint64_t)(v3 + 63) >> 6 <= 3)
    return 1;
  if (*(_QWORD *)(a1 + 80))
    goto LABEL_20;
  if ((unint64_t)(v3 + 63) >> 6 <= 4)
    return 1;
  if (*(_QWORD *)(a1 + 88))
  {
LABEL_20:
    sub_1B76DBF54();
    SettingsGroupName.rawValue.getter();
    sub_1B76DBB1C();
    swift_bridgeObjectRelease();
    v7 = sub_1B76DBF78() & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
      __asm { BR              X9 }
    return 0;
  }
  v5 = 5;
  if ((unint64_t)(v3 + 63) >> 6 > 5)
  {
    if (!*(_QWORD *)(a1 + 96))
    {
      while (1)
      {
        v6 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
          __break(1u);
          JUMPOUT(0x1B769108CLL);
        }
        if (v6 >= (uint64_t)((unint64_t)(v3 + 63) >> 6))
          return 1;
        ++v5;
        if (*(_QWORD *)(a1 + 56 + 8 * v6))
          goto LABEL_20;
      }
    }
    goto LABEL_20;
  }
  return 1;
}

uint64_t static ShieldSettings.ActivityCategoryPolicy.maximumAllExceptionsCount.getter()
{
  return 50;
}

uint64_t sub_1B769117C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ShieldSettings.ActivityCategoryPolicy.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), a4);
}

uint64_t static ShieldSettings.EffectiveActivityCategoryPolicy.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)a2;
  v6 = *(unsigned __int8 *)(a2 + 16);
  if (!*(_BYTE *)(a1 + 16))
  {
    if (*(_BYTE *)(a2 + 16) || (sub_1B768DE24(v4, v5) & 1) == 0)
      return 0;
    return sub_1B76DBC00();
  }
  if (*(_BYTE *)(a1 + 16) == 1)
  {
    if (v6 != 1)
      return 0;
    return sub_1B76DBC00();
  }
  return (v6 & 7) == 2;
}

uint64_t sub_1B7691224(uint64_t a1, uint64_t a2)
{
  return static ShieldSettings.EffectiveActivityCategoryPolicy.== infix(_:_:)(a1, a2);
}

uint64_t _s15ManagedSettings16ActivityCategoryV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t result;
  char v15;
  char v16;

  v3 = a1[1];
  v4 = a1[2];
  v6 = a1[3];
  v5 = a1[4];
  v7 = a1[5];
  v8 = a2[1];
  v9 = a2[2];
  v11 = a2[3];
  v10 = a2[4];
  v12 = a2[5];
  if (!v3)
  {
    if (v8)
      return 0;
    goto LABEL_8;
  }
  if (!v8)
    return 0;
  if (*a1 == *a2 && v3 == v8 || (v13 = sub_1B76DBED0(), result = 0, (v13 & 1) != 0))
  {
LABEL_8:
    if (v6 >> 60 == 15)
    {
      if (v11 >> 60 == 15)
      {
LABEL_14:
        if (v7)
        {
          if (v12 && (v5 == v10 && v7 == v12 || (sub_1B76DBED0() & 1) != 0))
            return 1;
        }
        else if (!v12)
        {
          return 1;
        }
        return 0;
      }
    }
    else if (v11 >> 60 != 15)
    {
      sub_1B765E0D4(v4, v6);
      sub_1B765E0D4(v9, v11);
      sub_1B766B5F0(v4, v6);
      v16 = v15;
      sub_1B765E0D8(v9, v11);
      sub_1B765E0D8(v4, v6);
      if ((v16 & 1) == 0)
        return 0;
      goto LABEL_14;
    }
    sub_1B765E0D4(v4, v6);
    sub_1B765E0D4(v9, v11);
    sub_1B765E0D8(v4, v6);
    sub_1B765E0D8(v9, v11);
    return 0;
  }
  return result;
}

unint64_t sub_1B76913B0()
{
  unint64_t result;

  result = qword_1EF178118;
  if (!qword_1EF178118)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for ActivityCategory, &type metadata for ActivityCategory);
    atomic_store(result, (unint64_t *)&qword_1EF178118);
  }
  return result;
}

_QWORD *assignWithCopy for ActivityCategory(_QWORD *a1, _QWORD *a2)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2 + 2;
  v5 = a2[3];
  if (a1[3] >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      v7 = *v4;
      sub_1B765DDFC(*v4, a2[3]);
      v8 = a1[2];
      v9 = a1[3];
      a1[2] = v7;
      a1[3] = v5;
      sub_1B765DEC4(v8, v9);
      goto LABEL_8;
    }
    sub_1B76914E4((uint64_t)(a1 + 2));
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 1) = *(_OWORD *)v4;
    goto LABEL_8;
  }
  v6 = *v4;
  sub_1B765DDFC(*v4, a2[3]);
  a1[2] = v6;
  a1[3] = v5;
LABEL_8:
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B76914E4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177F98);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *assignWithTake for ActivityCategory(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2 + 2;
  v6 = a1[3];
  if (v6 >> 60 != 15)
  {
    v7 = a2[3];
    if (v7 >> 60 != 15)
    {
      v8 = a1[2];
      a1[2] = *v5;
      a1[3] = v7;
      sub_1B765DEC4(v8, v6);
      goto LABEL_6;
    }
    sub_1B76914E4((uint64_t)(a1 + 2));
  }
  *((_OWORD *)a1 + 1) = *(_OWORD *)v5;
LABEL_6:
  v9 = a2[5];
  a1[4] = a2[4];
  a1[5] = v9;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ActivityCategory()
{
  return &type metadata for ActivityCategory;
}

uint64_t sub_1B76915D0(uint64_t a1)
{
  return sub_1B76916E0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1B76915F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1B7691698(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t sub_1B769165C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1B7691674(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

uint64_t type metadata accessor for ShieldSettings.ActivityCategoryPolicy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ShieldSettings.ActivityCategoryPolicy);
}

uint64_t sub_1B7691698(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 != 1)
  {
    if (a3)
      return result;
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76916E0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 != 1)
  {
    if (a3)
      return result;
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B7691728(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1B7691698(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1B76916E0(v6, v7, v8);
  return a1;
}

uint64_t sub_1B769177C(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1B76916E0(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for UserSafetySettings.ScanningPolicy(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for UserSafetySettings.ScanningPolicy(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t type metadata accessor for ShieldSettings.EffectiveActivityCategoryPolicy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ShieldSettings.EffectiveActivityCategoryPolicy);
}

uint64_t sub_1B769186C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  _QWORD v20[3];
  uint64_t v21;
  _BYTE v22[32];
  _QWORD v23[4];

  v23[3] = type metadata accessor for SubscriptionCenter();
  v23[0] = a1;
  v2 = qword_1ED53AF90;
  swift_retain();
  if (v2 != -1)
    swift_once();
  v3 = qword_1ED53AF88;
  if (qword_1ED53AF78 != -1)
    swift_once();
  v4 = qword_1ED53AF80;
  type metadata accessor for XPCConnection();
  v5 = swift_allocObject();
  v6 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v7 = (void *)sub_1B76DBAB0();
  v8 = objc_msgSend(v6, sel_initWithMachServiceName_options_, v7, 4096);

  *(_QWORD *)(v5 + 16) = v8;
  sub_1B765DF40((uint64_t)v23, (uint64_t)v22);
  sub_1B76638C0((uint64_t)v22, (uint64_t)v20, &qword_1ED53B7A0);
  v9 = v21;
  if (v21)
  {
    v10 = __swift_project_boxed_opaque_existential_1(v20, v21);
    v11 = *(_QWORD *)(v9 - 8);
    MEMORY[0x1E0C80A78](v10, v10);
    v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v11 + 16))(v13);
    v14 = v8;
    v15 = sub_1B76DBEC4();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v9);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
  }
  else
  {
    v16 = v8;
    v15 = 0;
  }
  objc_msgSend(v8, sel_setExportedObject_, v15);

  swift_unknownObjectRelease();
  sub_1B7670BD4((uint64_t)v22);
  objc_msgSend(v8, sel_setExportedInterface_, v3);
  objc_msgSend(v8, sel_setRemoteObjectInterface_, v4);
  v17 = v8;
  v18 = objc_msgSend(v17, sel__xpcConnection);
  xpc_connection_set_non_launching();

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
  return v5;
}

id sub_1B7691ADC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  id result;

  type metadata accessor for SubscriptionCenter();
  v0 = (_QWORD *)swift_allocObject();
  v0[2] = 0;
  v0[3] = 0;
  v0[4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3740]), sel_init);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178130);
  swift_allocObject();
  v1 = sub_1B76DB960();
  v2 = MEMORY[0x1E0DEE9E0];
  v0[5] = v1;
  v0[6] = v2;
  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3740]), sel_init);
  v0[7] = result;
  qword_1EF180368 = (uint64_t)v0;
  return result;
}

uint64_t sub_1B7691B78()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  void (*v8)(id (*)(), _QWORD *, uint64_t, uint64_t);

  v1 = (_QWORD *)v0;
  objc_msgSend(*(id *)(v0 + 32), sel_lock);
  v2 = *(_QWORD *)(v0 + 16);
  if (v2)
  {
    v3 = (void *)v1[4];
    swift_unknownObjectRetain();
  }
  else
  {
    v2 = sub_1B769186C((uint64_t)v1);
    v5 = v4;
    ObjectType = swift_getObjectType();
    v7 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v5 + 104);
    swift_retain();
    v7(sub_1B7694960, v1, ObjectType, v5);
    v8 = *(void (**)(id (*)(), _QWORD *, uint64_t, uint64_t))(v5 + 128);
    swift_retain();
    v8(sub_1B7694968, v1, ObjectType, v5);
    v1[2] = v2;
    v1[3] = v5;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v5 + 168))(ObjectType, v5);
    v3 = (void *)v1[4];
  }
  objc_msgSend(v3, sel_unlock);
  return v2;
}

uint64_t sub_1B7691C70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;

  sub_1B7692070(1);
  objc_msgSend(*(id *)(a1 + 56), sel_lock);
  v2 = sub_1B7691D40();
  v3 = sub_1B768BA64(v2);
  swift_bridgeObjectRelease();
  sub_1B7691B78(objc_msgSend(*(id *)(a1 + 56), sel_unlock));
  v5 = v4;
  ObjectType = swift_getObjectType();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v3;
  *(_QWORD *)(v7 + 24) = a1;
  swift_retain();
  XPCConnectable.remoteObjectProxy(retryCount:proxyHandler:)(1, (void (*)(_BYTE *))sub_1B76949F0, v7, ObjectType, v5);
  swift_unknownObjectRelease();
  return swift_release();
}

uint64_t sub_1B7691D40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 48);
  v13 = MEMORY[0x1E0DEE9E8];
  v2 = v1 + 64;
  v3 = 1 << *(_BYTE *)(v1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain_n();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v5 &= v5 - 1;
      goto LABEL_5;
    }
    v10 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v10 >= v6)
      goto LABEL_25;
    v11 = *(_QWORD *)(v2 + 8 * v10);
    ++v8;
    if (!v11)
    {
      v8 = v10 + 1;
      if (v10 + 1 >= v6)
        goto LABEL_25;
      v11 = *(_QWORD *)(v2 + 8 * v8);
      if (!v11)
      {
        v8 = v10 + 2;
        if (v10 + 2 >= v6)
          goto LABEL_25;
        v11 = *(_QWORD *)(v2 + 8 * v8);
        if (!v11)
        {
          v8 = v10 + 3;
          if (v10 + 3 >= v6)
            goto LABEL_25;
          v11 = *(_QWORD *)(v2 + 8 * v8);
          if (!v11)
          {
            v8 = v10 + 4;
            if (v10 + 4 >= v6)
              goto LABEL_25;
            v11 = *(_QWORD *)(v2 + 8 * v8);
            if (!v11)
              break;
          }
        }
      }
    }
LABEL_24:
    v5 = (v11 - 1) & v11;
LABEL_5:
    v9 = swift_bridgeObjectRetain();
    result = sub_1B7691EDC(v9);
  }
  v12 = v10 + 5;
  if (v12 >= v6)
  {
LABEL_25:
    swift_release();
    swift_bridgeObjectRelease();
    return v13;
  }
  v11 = *(_QWORD *)(v2 + 8 * v12);
  if (v11)
  {
    v8 = v12;
    goto LABEL_24;
  }
  while (1)
  {
    v8 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v8 >= v6)
      goto LABEL_25;
    v11 = *(_QWORD *)(v2 + 8 * v8);
    ++v12;
    if (v11)
      goto LABEL_24;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1B7691EDC(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  char v13;

  v1 = result;
  v2 = 0;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v7)
      return swift_release();
    v11 = *(_QWORD *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      v2 = v10 + 1;
      if (v10 + 1 >= v7)
        return swift_release();
      v11 = *(_QWORD *)(v3 + 8 * v2);
      if (!v11)
      {
        v2 = v10 + 2;
        if (v10 + 2 >= v7)
          return swift_release();
        v11 = *(_QWORD *)(v3 + 8 * v2);
        if (!v11)
        {
          v2 = v10 + 3;
          if (v10 + 3 >= v7)
            return swift_release();
          v11 = *(_QWORD *)(v3 + 8 * v2);
          if (!v11)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    result = sub_1B7680390(&v13, *(unsigned __int8 *)(*(_QWORD *)(v1 + 48) + v9));
  }
  v12 = v10 + 4;
  if (v12 >= v7)
    return swift_release();
  v11 = *(_QWORD *)(v3 + 8 * v12);
  if (v11)
  {
    v2 = v12;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v2 >= v7)
      return swift_release();
    v11 = *(_QWORD *)(v3 + 8 * v2);
    ++v12;
    if (v11)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1B7692024()
{
  uint64_t v0;

  sub_1B7692070(1);
  swift_unknownObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

id sub_1B7692070(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t ObjectType;
  void (*v6)(_QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  v2 = v1;
  objc_msgSend(*(id *)(v2 + 32), sel_lock);
  if ((a1 & 1) != 0)
  {
    if (*(_QWORD *)(v2 + 16))
    {
      v4 = *(_QWORD *)(v2 + 24);
      ObjectType = swift_getObjectType();
      v6 = *(void (**)(_QWORD, _QWORD, uint64_t, uint64_t))(v4 + 128);
      swift_unknownObjectRetain();
      v6(0, 0, ObjectType, v4);
      swift_unknownObjectRelease();
      if (*(_QWORD *)(v2 + 16))
      {
        v7 = *(_QWORD *)(v2 + 24);
        v8 = swift_getObjectType();
        v9 = *(void (**)(uint64_t, uint64_t))(v7 + 176);
        swift_unknownObjectRetain();
        v9(v8, v7);
        swift_unknownObjectRelease();
      }
    }
  }
  *(_QWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 24) = 0;
  swift_unknownObjectRelease();
  return objc_msgSend(*(id *)(v2 + 32), sel_unlock);
}

id sub_1B7692144(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id result;
  char v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[24];
  ValueMetadata *v26;
  unint64_t v27;

  v3 = v2;
  v6 = sub_1B76DB8D0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (id)swift_beginAccess();
  if (byte_1ED53B740 == 2)
  {
    v26 = &type metadata for Feature.FeatureFlags;
    v27 = sub_1B7658114();
    v12 = sub_1B76DB894();
    result = (id)__swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
    if ((v12 & 1) == 0)
      return result;
  }
  else if ((byte_1ED53B740 & 1) == 0)
  {
    return result;
  }
  if (!*(_QWORD *)(a1 + 16))
    return sub_1B76923F8(a2);
  objc_msgSend(*(id *)(v3 + 56), sel_lock);
  v13 = sub_1B7691D40();
  if (*(_QWORD *)(a1 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a2, v6);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v24 = *(_QWORD *)(v3 + 48);
    *(_QWORD *)(v3 + 48) = 0x8000000000000000;
    sub_1B76942AC(a1, (uint64_t)v10, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v3 + 48) = v24;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    swift_endAccess();
  }
  else
  {
    swift_beginAccess();
    sub_1B76932D0(a2);
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  v15 = sub_1B7691D40();
  v16 = sub_1B7690760(v13, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = objc_msgSend(*(id *)(v3 + 56), sel_unlock);
  if ((v16 & 1) == 0)
  {
    objc_msgSend(*(id *)(v3 + 56), sel_lock);
    v17 = sub_1B7691D40();
    v18 = sub_1B768BA64(v17);
    swift_bridgeObjectRelease();
    objc_msgSend(*(id *)(v3 + 56), sel_unlock);
    sub_1B7691B78();
    v20 = v19;
    ObjectType = swift_getObjectType();
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = v18;
    *(_QWORD *)(v22 + 24) = v3;
    swift_retain();
    XPCConnectable.remoteObjectProxy(retryCount:proxyHandler:)(1, (void (*)(_BYTE *))sub_1B76949F0, v22, ObjectType, v20);
    swift_unknownObjectRelease();
    return (id)swift_release();
  }
  return result;
}

id sub_1B76923F8(uint64_t a1)
{
  uint64_t v1;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  id result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;

  objc_msgSend(*(id *)(v1 + 56), sel_lock);
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(v1 + 48) + 16))
    return objc_msgSend(*(id *)(v1 + 56), sel_unlock);
  swift_bridgeObjectRetain();
  sub_1B76607C4(a1);
  v4 = v3;
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0)
    return objc_msgSend(*(id *)(v1 + 56), sel_unlock);
  v5 = sub_1B7691D40();
  swift_beginAccess();
  sub_1B76932D0(a1);
  swift_endAccess();
  swift_bridgeObjectRelease();
  v6 = sub_1B7691D40();
  v7 = sub_1B7690760(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = objc_msgSend(*(id *)(v1 + 56), sel_unlock);
  if ((v7 & 1) == 0)
  {
    objc_msgSend(*(id *)(v1 + 56), sel_lock);
    v9 = sub_1B7691D40();
    v10 = sub_1B768BA64(v9);
    swift_bridgeObjectRelease();
    objc_msgSend(*(id *)(v1 + 56), sel_unlock);
    sub_1B7691B78();
    v12 = v11;
    ObjectType = swift_getObjectType();
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = v10;
    *(_QWORD *)(v14 + 24) = v1;
    swift_retain();
    XPCConnectable.remoteObjectProxy(retryCount:proxyHandler:)(1, (void (*)(_BYTE *))sub_1B76933BC, v14, ObjectType, v12);
    swift_unknownObjectRelease();
    return (id)swift_release();
  }
  return result;
}

void sub_1B76925B4(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  void *v34;
  uint64_t v35[4];
  uint64_t v36;
  uint64_t v37[4];
  _OWORD v38[2];
  _OWORD v39[2];
  char v40;

  sub_1B76638C0(a1, (uint64_t)v39, &qword_1ED53B798);
  if ((v40 & 1) != 0)
  {
    v3 = *(void **)&v39[0];
    if (qword_1ED53AFB0 != -1)
      swift_once();
    v4 = sub_1B76DB8B8();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ED53AF98);
    v5 = v3;
    v6 = v3;
    v7 = sub_1B76DB8A0();
    v8 = sub_1B76DBC90();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = swift_slowAlloc();
      *(_QWORD *)&v38[0] = v10;
      *(_DWORD *)v9 = 136446210;
      v11 = v3;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B678);
      v12 = sub_1B76DBB10();
      v37[0] = sub_1B7669B50(v12, v13, (uint64_t *)v38);
      sub_1B76DBD38();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1B7656000, v7, v8, "Unable to obtain remote object proxy: %{public}s", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v10, -1, -1);
      MEMORY[0x1BCCA9590](v9, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    sub_1B765DF30(v39, v38);
    sub_1B765DF40((uint64_t)v38, (uint64_t)v37);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178128);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v14 = (void *)v35[0];
      if (*(_QWORD *)(a2 + 16))
      {
        if (qword_1ED53AFB0 != -1)
          swift_once();
        v15 = sub_1B76DB8B8();
        __swift_project_value_buffer(v15, (uint64_t)qword_1ED53AF98);
        swift_bridgeObjectRetain_n();
        v16 = sub_1B76DB8A0();
        v17 = sub_1B76DBCA8();
        if (os_log_type_enabled(v16, v17))
        {
          v18 = (uint8_t *)swift_slowAlloc();
          v19 = swift_slowAlloc();
          v37[0] = v19;
          *(_DWORD *)v18 = 136446210;
          swift_bridgeObjectRetain();
          v20 = sub_1B76DBBE8();
          v22 = v21;
          swift_bridgeObjectRelease();
          v35[0] = sub_1B7669B50(v20, v22, v37);
          sub_1B76DBD38();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1B7656000, v16, v17, "Subscribing for effective changes in groups: %{public}s", v18, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1BCCA9590](v19, -1, -1);
          MEMORY[0x1BCCA9590](v18, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        v34 = (void *)sub_1B76DBBC4();
        objc_msgSend(v14, sel_subscribeToEffectiveChangesForGroups_objC_, v34, 0);
        swift_unknownObjectRelease();

      }
      else
      {
        if (qword_1ED53AFB0 != -1)
          swift_once();
        v30 = sub_1B76DB8B8();
        __swift_project_value_buffer(v30, (uint64_t)qword_1ED53AF98);
        v31 = sub_1B76DB8A0();
        v32 = sub_1B76DBCA8();
        if (os_log_type_enabled(v31, v32))
        {
          v33 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v33 = 0;
          _os_log_impl(&dword_1B7656000, v31, v32, "Clearing effective settings change subscriptions", v33, 2u);
          MEMORY[0x1BCCA9590](v33, -1, -1);
        }

        objc_msgSend(v14, sel_clearEffectiveSubscription_, 0);
        sub_1B7692070(1);
        swift_unknownObjectRelease();
      }
    }
    else
    {
      if (qword_1ED53AFB0 != -1)
        swift_once();
      v23 = sub_1B76DB8B8();
      __swift_project_value_buffer(v23, (uint64_t)qword_1ED53AF98);
      sub_1B765DF40((uint64_t)v38, (uint64_t)v37);
      v24 = sub_1B76DB8A0();
      v25 = sub_1B76DBC90();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc();
        v27 = swift_slowAlloc();
        v36 = v27;
        *(_DWORD *)v26 = 136446210;
        sub_1B765DF40((uint64_t)v37, (uint64_t)v35);
        v28 = sub_1B76DBB10();
        v35[0] = sub_1B7669B50(v28, v29, &v36);
        sub_1B76DBD38();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
        _os_log_impl(&dword_1B7656000, v24, v25, "Proxy %{public}s does not not conform to ManagedSettingsNotifierAgentProxy", v26, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCA9590](v27, -1, -1);
        MEMORY[0x1BCCA9590](v26, -1, -1);

      }
      else
      {

        __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
      }
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
  }
}

uint64_t sub_1B7692C0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  void *v25;
  uint64_t v26;
  void *v27;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t aBlock[6];

  v1 = sub_1B76DB9D8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1, v3);
  v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1B76DB9F0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1B768BF3C();
  if (!*(_QWORD *)(v11 + 16))
    return swift_bridgeObjectRelease();
  if (qword_1ED53AFB0 != -1)
    swift_once();
  v31 = v0;
  v32 = v7;
  v33 = v6;
  v12 = sub_1B76DB8B8();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED53AF98);
  swift_bridgeObjectRetain_n();
  v13 = sub_1B76DB8A0();
  v14 = sub_1B76DBCA8();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v30 = v1;
    v16 = (uint8_t *)v15;
    v17 = swift_slowAlloc();
    v29 = v2;
    v18 = v17;
    aBlock[0] = v17;
    *(_DWORD *)v16 = 136446210;
    v28[1] = v16 + 4;
    sub_1B7693090();
    swift_bridgeObjectRetain();
    v19 = sub_1B76DBBE8();
    v21 = v20;
    swift_bridgeObjectRelease();
    v34 = sub_1B7669B50(v19, v21, aBlock);
    sub_1B76DBD38();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B7656000, v13, v14, "Effective settings changed for groups: %{public}s", v16, 0xCu);
    swift_arrayDestroy();
    v22 = v18;
    v2 = v29;
    MEMORY[0x1BCCA9590](v22, -1, -1);
    v23 = v16;
    v1 = v30;
    MEMORY[0x1BCCA9590](v23, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1B7672EAC();
  v25 = (void *)sub_1B76DBCB4();
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = v31;
  *(_QWORD *)(v26 + 24) = v11;
  aBlock[4] = (uint64_t)sub_1B7693044;
  aBlock[5] = v26;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1B768C184;
  aBlock[3] = (uint64_t)&block_descriptor_3;
  v27 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_1B76DB9E4();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1B765DAD0((unint64_t *)&qword_1ED53B090, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B098);
  sub_1B7672FCC();
  sub_1B76DBD5C();
  MEMORY[0x1BCCA8DEC](0, v10, v5, v27);
  _Block_release(v27);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v10, v33);
}

uint64_t type metadata accessor for SubscriptionCenter()
{
  return objc_opt_self();
}

uint64_t sub_1B7693030()
{
  return objectdestroyTm_0((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1B7693044()
{
  return sub_1B76DB954();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

unint64_t sub_1B7693090()
{
  unint64_t result;

  result = qword_1EF178120;
  if (!qword_1EF178120)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for SettingsGroupName, &type metadata for SettingsGroupName);
    atomic_store(result, (unint64_t *)&qword_1EF178120);
  }
  return result;
}

uint64_t sub_1B76930D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1B76606E0(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v17 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1B767D708();
      v11 = v17;
    }
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v11 + 56);
    v13 = sub_1B76DB888();
    v14 = *(_QWORD *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 32))(a3, v12 + *(_QWORD *)(v14 + 72) * v8, v13);
    sub_1B76933C4(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, v13);
  }
  else
  {
    v16 = sub_1B76DB888();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 1, 1, v16);
  }
}

uint64_t sub_1B7693204(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1B76606E0(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1B767D964();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_1B76935C0(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1B76932D0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_1B76607C4(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1B767DB14();
    v7 = v12;
  }
  v8 = *(_QWORD *)(v7 + 48);
  v9 = sub_1B76DB8D0();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v4, v9);
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_1B7693794(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1B76933A8()
{
  return objectdestroyTm_0((void (*)(_QWORD))MEMORY[0x1E0DEEB08], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

void sub_1B76933BC(uint64_t a1)
{
  uint64_t v1;

  sub_1B76925B4(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1B76933C4(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1B76DBD68();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        sub_1B76DBF54();
        swift_bridgeObjectRetain();
        sub_1B76DBB1C();
        v9 = sub_1B76DBF78();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v10 < v8)
          goto LABEL_11;
LABEL_12:
        v11 = *(_QWORD *)(a2 + 48);
        v12 = (_OWORD *)(v11 + 16 * v3);
        v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1)
          *v12 = *v13;
        v14 = *(_QWORD *)(a2 + 56);
        v15 = *(_QWORD *)(*(_QWORD *)(sub_1B76DB888() - 8) + 72);
        v16 = v15 * v3;
        result = v14 + v15 * v3;
        v17 = v15 * v6;
        v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v16 == v17)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v10 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v10)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1B76935C0(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1B76DBD68();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1B76DBF54();
        swift_bridgeObjectRetain();
        sub_1B76DBB1C();
        v9 = sub_1B76DBF78();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1B7693794(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, unint64_t, uint64_t);
  unint64_t v35;
  uint64_t v36;

  v4 = sub_1B76DB8D0();
  v36 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x1E0C80A78](v4, v5);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a2 + 64;
  v10 = -1 << *(_BYTE *)(a2 + 32);
  v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(_QWORD *)(a2 + 64 + 8 * (v11 >> 6))) != 0)
  {
    v12 = ~v10;
    result = sub_1B76DBD68();
    if ((*(_QWORD *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      v35 = (result + 1) & v12;
      v13 = *(_QWORD *)(v36 + 72);
      v34 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 16);
      v14 = v12;
      do
      {
        v15 = v9;
        v16 = v13;
        v17 = v13 * v11;
        v18 = v14;
        v34(v8, *(_QWORD *)(a2 + 48) + v13 * v11, v4);
        sub_1B765DAD0(&qword_1EF1775C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95660], MEMORY[0x1E0C95670]);
        v19 = sub_1B76DBA74();
        result = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v8, v4);
        v14 = v18;
        v20 = v19 & v18;
        if (a1 >= (uint64_t)v35)
        {
          if (v20 >= v35 && a1 >= (uint64_t)v20)
          {
LABEL_16:
            v23 = *(_QWORD *)(a2 + 48);
            result = v23 + v16 * a1;
            v9 = v15;
            if (v16 * a1 < v17 || (v13 = v16, result >= v23 + v17 + v16))
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v14 = v18;
              v13 = v16;
            }
            else if (v16 * a1 != v17)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v24 = *(_QWORD *)(a2 + 56);
            v25 = (_QWORD *)(v24 + 8 * a1);
            v26 = (_QWORD *)(v24 + 8 * v11);
            if (a1 != v11 || (a1 = v11, v25 >= v26 + 1))
            {
              *v25 = *v26;
              a1 = v11;
            }
            goto LABEL_5;
          }
        }
        else if (v20 >= v35 || a1 >= (uint64_t)v20)
        {
          goto LABEL_16;
        }
        v9 = v15;
        v13 = v16;
LABEL_5:
        v11 = (v11 + 1) & v14;
      }
      while (((*(_QWORD *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    v27 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v27;
    v29 = (-1 << a1) - 1;
  }
  else
  {
    v27 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    v29 = *v27;
    v28 = (-1 << a1) - 1;
  }
  *v27 = v29 & v28;
  v30 = *(_QWORD *)(a2 + 16);
  v31 = __OFSUB__(v30, 1);
  v32 = v30 - 1;
  if (v31)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v32;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1B7693A34(unint64_t a1, uint64_t a2)
{
  return sub_1B7693A5C(a1, a2, (void (*)(uint64_t, unint64_t))sub_1B765DF08, (void (*)(uint64_t, unint64_t))sub_1B765DF1C);
}

unint64_t sub_1B7693A48(unint64_t a1, uint64_t a2)
{
  return sub_1B7693A5C(a1, a2, (void (*)(uint64_t, unint64_t))sub_1B765E0D4, (void (*)(uint64_t, unint64_t))sub_1B765E0D8);
}

unint64_t sub_1B7693A5C(unint64_t result, uint64_t a2, void (*a3)(uint64_t, unint64_t), void (*a4)(uint64_t, unint64_t))
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __int128 *v18;
  __int128 *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;

  v4 = a2;
  v5 = result;
  v6 = a2 + 64;
  v7 = -1 << *(_BYTE *)(a2 + 32);
  v8 = (result + 1) & ~v7;
  if (((1 << v8) & *(_QWORD *)(a2 + 64 + 8 * (v8 >> 6))) != 0)
  {
    v9 = ~v7;
    result = sub_1B76DBD68();
    if ((*(_QWORD *)(v6 + 8 * (v8 >> 6)) & (1 << v8)) != 0)
    {
      v31 = (result + 1) & v9;
      v32 = v4;
      do
      {
        v10 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 48 * v8);
        v11 = v10[1];
        v13 = v10[2];
        v12 = v10[3];
        v14 = v10[5];
        sub_1B76DBF54();
        sub_1B76DBF6C();
        if (v11)
        {
          swift_bridgeObjectRetain();
          a3(v13, v12);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1B76DBB1C();
          swift_bridgeObjectRelease();
        }
        else
        {
          a3(v13, v12);
          swift_bridgeObjectRetain();
        }
        sub_1B76DBF6C();
        if (v12 >> 60 != 15)
        {
          sub_1B765DDFC(v13, v12);
          sub_1B76DB834();
          a4(v13, v12);
        }
        sub_1B76DBF6C();
        if (v14)
        {
          swift_bridgeObjectRetain();
          sub_1B76DBB1C();
          swift_bridgeObjectRelease();
        }
        v15 = sub_1B76DBF78();
        swift_bridgeObjectRelease();
        a4(v13, v12);
        result = swift_bridgeObjectRelease();
        v16 = v15 & v9;
        if (v5 >= (uint64_t)v31)
        {
          v4 = v32;
          if (v16 < v31)
            goto LABEL_5;
        }
        else
        {
          v4 = v32;
          if (v16 >= v31)
            goto LABEL_18;
        }
        if (v5 >= (uint64_t)v16)
        {
LABEL_18:
          v17 = *(_QWORD *)(v4 + 48);
          v18 = (__int128 *)(v17 + 48 * v5);
          v19 = (__int128 *)(v17 + 48 * v8);
          if (v5 != v8 || v18 >= v19 + 3)
          {
            v20 = *v19;
            v21 = v19[2];
            v18[1] = v19[1];
            v18[2] = v21;
            *v18 = v20;
          }
          v22 = *(_QWORD *)(v4 + 56);
          v23 = (_BYTE *)(v22 + v5);
          v24 = (_BYTE *)(v22 + v8);
          if (v5 != v8 || (v5 = v8, v23 >= v24 + 1))
          {
            *v23 = *v24;
            v5 = v8;
          }
        }
LABEL_5:
        v8 = (v8 + 1) & v9;
      }
      while (((*(_QWORD *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
    }
    v25 = (uint64_t *)(v6 + 8 * ((unint64_t)v5 >> 6));
    v26 = *v25;
    v27 = (-1 << v5) - 1;
  }
  else
  {
    v25 = (uint64_t *)(v6 + 8 * (result >> 6));
    v27 = *v25;
    v26 = (-1 << result) - 1;
  }
  *v25 = v27 & v26;
  v28 = *(_QWORD *)(v4 + 16);
  v29 = __OFSUB__(v28, 1);
  v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v4 + 16) = v30;
    ++*(_DWORD *)(v4 + 36);
  }
  return result;
}

unint64_t sub_1B7693D78(unint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  __int128 v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;

  v2 = a2;
  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1B76DBD68();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      v30 = v4;
      do
      {
        v9 = v7;
        v10 = v2;
        v11 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 32 * v6);
        v12 = v11[1];
        v14 = v11[2];
        v13 = v11[3];
        sub_1B76DBF54();
        sub_1B76DBF6C();
        if (v12)
        {
          swift_bridgeObjectRetain();
          sub_1B765DF08(v14, v13);
          swift_bridgeObjectRetain();
          sub_1B76DBB1C();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1B765DF08(v14, v13);
        }
        sub_1B76DBF6C();
        if (v13 >> 60 != 15)
        {
          sub_1B765DDFC(v14, v13);
          sub_1B76DB834();
          sub_1B765DF1C(v14, v13);
        }
        v15 = sub_1B76DBF78();
        swift_bridgeObjectRelease();
        result = sub_1B765DF1C(v14, v13);
        v7 = v9;
        v16 = v15 & v9;
        if (v3 >= (uint64_t)v8)
        {
          v4 = v30;
          v2 = v10;
          if (v16 < v8)
            goto LABEL_5;
        }
        else
        {
          v4 = v30;
          v2 = v10;
          if (v16 >= v8)
            goto LABEL_16;
        }
        if (v3 >= (uint64_t)v16)
        {
LABEL_16:
          v17 = *(_QWORD *)(v2 + 48);
          v18 = (_OWORD *)(v17 + 32 * v3);
          v19 = (_OWORD *)(v17 + 32 * v6);
          if (v3 != v6 || v18 >= v19 + 2)
          {
            v20 = v19[1];
            *v18 = *v19;
            v18[1] = v20;
          }
          v21 = *(_QWORD *)(v2 + 56);
          v22 = (_BYTE *)(v21 + v3);
          v23 = (_BYTE *)(v21 + v6);
          if (v3 != v6 || (v3 = v6, v22 >= v23 + 1))
          {
            *v22 = *v23;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v9;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v24 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v25 = *v24;
    v26 = (-1 << v3) - 1;
  }
  else
  {
    v24 = (uint64_t *)(v4 + 8 * (result >> 6));
    v26 = *v24;
    v25 = (-1 << result) - 1;
  }
  *v24 = v26 & v25;
  v27 = *(_QWORD *)(v2 + 16);
  v28 = __OFSUB__(v27, 1);
  v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v2 + 16) = v29;
    ++*(_DWORD *)(v2 + 36);
  }
  return result;
}

uint64_t sub_1B7694014(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1B76606E0(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        v20 = sub_1B76DB888();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v12, a1, v20);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1B767D708();
      goto LABEL_7;
    }
    sub_1B767C1E4(v15, a4 & 1);
    v22 = sub_1B76606E0(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      v12 = v22;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1B7694824(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1B76DBF18();
  __break(1u);
  return result;
}

void sub_1B7694150(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1B76606E0(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1B767D964();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  sub_1B767C54C(v15, a4 & 1);
  v20 = sub_1B76606E0(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1B76DBF18();
  __break(1u);
}

uint64_t sub_1B76942AC(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = sub_1B76DB8D0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)*v3;
  v15 = sub_1B76607C4(a2);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  v19 = v14;
  v20 = v13[3];
  if (v20 >= v18 && (a3 & 1) != 0)
  {
LABEL_7:
    v21 = *v4;
    if ((v19 & 1) != 0)
    {
LABEL_8:
      v22 = v21[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 8 * v15) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v20 >= v18 && (a3 & 1) == 0)
  {
    sub_1B767DB14();
    goto LABEL_7;
  }
  sub_1B767C858(v18, a3 & 1);
  v24 = sub_1B76607C4(a2);
  if ((v19 & 1) != (v25 & 1))
  {
LABEL_14:
    result = sub_1B76DBF18();
    __break(1u);
    return result;
  }
  v15 = v24;
  v21 = *v4;
  if ((v19 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a2, v8);
  return sub_1B76948B4(v15, (uint64_t)v12, a1, v21);
}

uint64_t sub_1B7694408(char a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  _OWORD *v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v4 = v3;
  v8 = *v3;
  v10 = sub_1B76605D0((uint64_t *)a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_1B767DD44();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      *(_BYTE *)(v16[7] + v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v18 = (_OWORD *)(v16[6] + 48 * v10);
    v19 = *(_OWORD *)a2;
    v20 = *(_OWORD *)(a2 + 32);
    v18[1] = *(_OWORD *)(a2 + 16);
    v18[2] = v20;
    *v18 = v19;
    *(_BYTE *)(v16[7] + v10) = a1;
    v21 = v16[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v16[2] = v23;
      return sub_1B768A800(a2, (void (*)(uint64_t, uint64_t))sub_1B765DF08);
    }
    goto LABEL_14;
  }
  sub_1B767CBEC(result, a3 & 1);
  result = sub_1B76605D0((uint64_t *)a2);
  if ((v14 & 1) == (v17 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1B76DBF18();
  __break(1u);
  return result;
}

uint64_t sub_1B7694554(char a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  _OWORD *v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v4 = v3;
  v8 = *v3;
  v10 = sub_1B7660830((uint64_t *)a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_1B767DD58();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      *(_BYTE *)(v16[7] + v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v18 = (_OWORD *)(v16[6] + 48 * v10);
    v19 = *(_OWORD *)a2;
    v20 = *(_OWORD *)(a2 + 32);
    v18[1] = *(_OWORD *)(a2 + 16);
    v18[2] = v20;
    *v18 = v19;
    *(_BYTE *)(v16[7] + v10) = a1;
    v21 = v16[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v16[2] = v23;
      return sub_1B768A800(a2, (void (*)(uint64_t, uint64_t))sub_1B765E0D4);
    }
    goto LABEL_14;
  }
  sub_1B767CC08(result, a3 & 1);
  result = sub_1B7660830((uint64_t *)a2);
  if ((v14 & 1) == (v17 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1B76DBF18();
  __break(1u);
  return result;
}

uint64_t sub_1B76946A0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, char a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t result;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  char v23;
  uint64_t *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v7 = v6;
  v14 = *v6;
  v16 = sub_1B76608DC(a2, a3, a4, a5);
  v17 = *(_QWORD *)(v14 + 16);
  v18 = (v15 & 1) == 0;
  result = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v20 = v15;
  v21 = *(_QWORD *)(v14 + 24);
  if (v21 >= result && (a6 & 1) != 0)
    goto LABEL_7;
  if (v21 >= result && (a6 & 1) == 0)
  {
    result = (uint64_t)sub_1B767DF58();
LABEL_7:
    v22 = (_QWORD *)*v7;
    if ((v20 & 1) != 0)
    {
LABEL_8:
      *(_BYTE *)(v22[7] + v16) = a1;
      return result;
    }
LABEL_11:
    v22[(v16 >> 6) + 8] |= 1 << v16;
    v24 = (uint64_t *)(v22[6] + 32 * v16);
    *v24 = a2;
    v24[1] = a3;
    v24[2] = a4;
    v24[3] = a5;
    *(_BYTE *)(v22[7] + v16) = a1;
    v25 = v22[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (!v26)
    {
      v22[2] = v27;
      swift_bridgeObjectRetain();
      return sub_1B765DF08(a4, a5);
    }
    goto LABEL_14;
  }
  sub_1B767D02C(result, a6 & 1);
  result = sub_1B76608DC(a2, a3, a4, a5);
  if ((v20 & 1) == (v23 & 1))
  {
    v16 = result;
    v22 = (_QWORD *)*v7;
    if ((v20 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1B76DBF18();
  __break(1u);
  return result;
}

uint64_t sub_1B7694824(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v8 = (_QWORD *)(a5[6] + 16 * a1);
  *v8 = a2;
  v8[1] = a3;
  v9 = a5[7];
  v10 = sub_1B76DB888();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, a4, v10);
  v12 = a5[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a5[2] = v14;
  return result;
}

uint64_t sub_1B76948B4(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_1B76DB8D0();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_1B769494C()
{
  return objectdestroyTm_0((void (*)(_QWORD))MEMORY[0x1E0DEEB08], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1B7694960()
{
  uint64_t v0;

  return sub_1B7691C70(v0);
}

id sub_1B7694968()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + 32), sel_lock);
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  swift_unknownObjectRelease();
  return objc_msgSend(*(id *)(v0 + 32), sel_unlock);
}

uint64_t sub_1B76949A0()
{
  return objectdestroyTm_0((void (*)(_QWORD))MEMORY[0x1E0DEEB08], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t objectdestroyTm_0(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  uint64_t v2;

  a1(*(_QWORD *)(v2 + 16));
  a2(*(_QWORD *)(v2 + 24));
  return swift_deallocObject();
}

ManagedSettings::KeyboardSettings::Name_optional __swiftcall KeyboardSettings.Name.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  ManagedSettings::KeyboardSettings::Name_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1B76DBE70();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

void *static KeyboardSettings.Name.allCases.getter()
{
  return &unk_1E6CADF00;
}

unint64_t KeyboardSettings.Name.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000020;
  else
    return 0xD000000000000016;
}

uint64_t sub_1B7694AA0(char *a1, char *a2)
{
  return sub_1B76A0FB4(*a1, *a2);
}

uint64_t sub_1B7694AAC()
{
  return sub_1B76D8FE0();
}

uint64_t sub_1B7694AB4()
{
  sub_1B76DBB1C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B7694B14()
{
  return sub_1B76DA650();
}

ManagedSettings::KeyboardSettings::Name_optional sub_1B7694B1C(Swift::String *a1)
{
  return KeyboardSettings.Name.init(rawValue:)(*a1);
}

void sub_1B7694B28(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD000000000000020;
  else
    v2 = 0xD000000000000016;
  v3 = 0x80000001B76E16B0;
  if (*v1)
    v3 = 0x80000001B76E16D0;
  *a1 = v2;
  a1[1] = v3;
}

void sub_1B7694B6C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6CAE008;
}

uint64_t KeyboardSettings.denyDictation.getter()
{
  return sub_1B765A148(&qword_1EF177268, (uint64_t)&byte_1EF178138);
}

uint64_t KeyboardSettings.denyDictation.setter(unsigned __int8 a1)
{
  return sub_1B766BF24(a1, &qword_1EF177268, (uint64_t)&byte_1EF178138);
}

uint64_t (*KeyboardSettings.denyDictation.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177268 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF178138, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B7694C64;
}

uint64_t sub_1B7694C64(uint64_t a1)
{
  return KeyboardSettings.denyDictation.setter(*(_BYTE *)(a1 + 8));
}

uint64_t KeyboardSettings.effectiveDenyDictation.getter()
{
  return sub_1B765A568(&qword_1EF177268, &byte_1EF178138);
}

uint64_t sub_1B7694CA4()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF178168 = result;
  unk_1EF178170 = &off_1E6CB07B8;
  byte_1EF178150 = 0;
  byte_1EF178138 = 0;
  qword_1EF178140 = 0xD000000000000016;
  unk_1EF178148 = 0x80000001B76E16B0;
  word_1EF178178 = 256;
  byte_1EF17817A = 0;
  qword_1EF178180 = 0;
  byte_1EF178188 = 1;
  return result;
}

uint64_t static KeyboardSettings.denyDictation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B765A628(&qword_1EF177268, (uint64_t)&byte_1EF178138, a1);
}

uint64_t KeyboardSettings.denyMathSolvingKeyboard.getter()
{
  return sub_1B765A148(&qword_1EF177270, (uint64_t)&byte_1EF178190);
}

uint64_t KeyboardSettings.denyMathSolvingKeyboard.setter(unsigned __int8 a1)
{
  return sub_1B766BF24(a1, &qword_1EF177270, (uint64_t)&byte_1EF178190);
}

uint64_t (*KeyboardSettings.denyMathSolvingKeyboard.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177270 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF178190, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B7694E14;
}

uint64_t sub_1B7694E14(uint64_t a1)
{
  return KeyboardSettings.denyMathSolvingKeyboard.setter(*(_BYTE *)(a1 + 8));
}

uint64_t KeyboardSettings.effectiveDenyMathSolvingKeyboard.getter()
{
  return sub_1B765A568(&qword_1EF177270, &byte_1EF178190);
}

uint64_t sub_1B7694E54()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF1781C0 = result;
  unk_1EF1781C8 = &off_1E6CB07B8;
  byte_1EF1781A8 = 0;
  byte_1EF178190 = 0;
  qword_1EF178198 = 0xD000000000000020;
  unk_1EF1781A0 = 0x80000001B76E16D0;
  word_1EF1781D0 = 256;
  byte_1EF1781D2 = 0;
  qword_1EF1781D8 = 0;
  byte_1EF1781E0 = 1;
  return result;
}

uint64_t static KeyboardSettings.denyMathSolvingKeyboard.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B765A628(&qword_1EF177270, (uint64_t)&byte_1EF178190, a1);
}

unint64_t sub_1B7694EE0()
{
  unint64_t result;

  result = qword_1EF1781E8;
  if (!qword_1EF1781E8)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for KeyboardSettings.Name, &type metadata for KeyboardSettings.Name);
    atomic_store(result, (unint64_t *)&qword_1EF1781E8);
  }
  return result;
}

unint64_t sub_1B7694F28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF1781F0;
  if (!qword_1EF1781F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1781F8);
    result = MEMORY[0x1BCCA94E8](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF1781F0);
  }
  return result;
}

uint64_t sub_1B7694F74@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF177268, (uint64_t)&byte_1EF178138, a2);
}

uint64_t sub_1B7694FA0(unsigned __int8 *a1)
{
  return KeyboardSettings.denyDictation.setter(*a1);
}

uint64_t sub_1B7694FC4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF177270, (uint64_t)&byte_1EF178190, a2);
}

uint64_t sub_1B7694FF0(unsigned __int8 *a1)
{
  return KeyboardSettings.denyMathSolvingKeyboard.setter(*a1);
}

ValueMetadata *type metadata accessor for KeyboardSettings()
{
  return &type metadata for KeyboardSettings;
}

uint64_t storeEnumTagSinglePayload for KeyboardSettings.Name(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B7695070 + 4 * byte_1B76DE235[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B76950A4 + 4 * byte_1B76DE230[v4]))();
}

uint64_t sub_1B76950A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76950AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B76950B4);
  return result;
}

uint64_t sub_1B76950C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B76950C8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B76950CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76950D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for KeyboardSettings.Name()
{
  return &type metadata for KeyboardSettings.Name;
}

id sub_1B76950F0()
{
  _QWORD *v0;
  id result;

  type metadata accessor for ManagedSettingsInterface();
  v0 = (_QWORD *)swift_allocObject();
  v0[2] = 0;
  v0[3] = 0;
  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3740]), sel_init);
  v0[4] = result;
  qword_1ED53B6B0 = (uint64_t)v0;
  return result;
}

uint64_t static ManagedSettingsInterface.shared.getter()
{
  if (qword_1ED53B6B8 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_1B7695184()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(id (*)(), _QWORD *, uint64_t, uint64_t);
  void (*v8)(id (*)(), _QWORD *, uint64_t, uint64_t);

  v1 = (_QWORD *)v0;
  objc_msgSend(*(id *)(v0 + 32), sel_lock);
  v2 = *(_QWORD *)(v0 + 16);
  if (v2)
  {
    v3 = (void *)v1[4];
    swift_unknownObjectRetain();
  }
  else
  {
    v2 = sub_1B769527C((uint64_t)v1);
    v5 = v4;
    ObjectType = swift_getObjectType();
    v7 = *(void (**)(id (*)(), _QWORD *, uint64_t, uint64_t))(v5 + 104);
    swift_retain();
    v7(sub_1B76A0C7C, v1, ObjectType, v5);
    v8 = *(void (**)(id (*)(), _QWORD *, uint64_t, uint64_t))(v5 + 128);
    swift_retain();
    v8(sub_1B7694968, v1, ObjectType, v5);
    v1[2] = v2;
    v1[3] = v5;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v5 + 168))(ObjectType, v5);
    v3 = (void *)v1[4];
  }
  objc_msgSend(v3, sel_unlock);
  return v2;
}

uint64_t sub_1B769527C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  id v16;
  _QWORD v18[3];
  uint64_t v19;
  _BYTE v20[32];
  _QWORD v21[4];

  v21[3] = type metadata accessor for ManagedSettingsInterface();
  v21[0] = a1;
  v2 = qword_1ED53B6A8;
  swift_retain();
  if (v2 != -1)
    swift_once();
  v3 = qword_1ED53B690;
  if (qword_1ED53B688 != -1)
    swift_once();
  v4 = qword_1ED53B680;
  type metadata accessor for XPCConnection();
  v5 = swift_allocObject();
  v6 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v7 = (void *)sub_1B76DBAB0();
  v8 = objc_msgSend(v6, sel_initWithMachServiceName_options_, v7, 4096);

  *(_QWORD *)(v5 + 16) = v8;
  sub_1B765DF40((uint64_t)v21, (uint64_t)v20);
  sub_1B76638C0((uint64_t)v20, (uint64_t)v18, &qword_1ED53B7A0);
  v9 = v19;
  if (v19)
  {
    v10 = __swift_project_boxed_opaque_existential_1(v18, v19);
    v11 = *(_QWORD *)(v9 - 8);
    MEMORY[0x1E0C80A78](v10, v10);
    v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v11 + 16))(v13);
    v14 = v8;
    v15 = sub_1B76DBEC4();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v9);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
  }
  else
  {
    v16 = v8;
    v15 = 0;
  }
  objc_msgSend(v8, sel_setExportedObject_, v15);

  swift_unknownObjectRelease();
  sub_1B765DE88((uint64_t)v20, &qword_1ED53B7A0);
  objc_msgSend(v8, sel_setExportedInterface_, v3);
  objc_msgSend(v8, sel_setRemoteObjectInterface_, v4);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
  return v5;
}

uint64_t ManagedSettingsInterface.deinit()
{
  uint64_t v0;

  sub_1B7692070(1);
  swift_unknownObjectRelease();

  return v0;
}

uint64_t ManagedSettingsInterface.__deallocating_deinit()
{
  uint64_t v0;

  sub_1B7692070(1);
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

void sub_1B7695520(void (*a1)(void *, _QWORD, uint64_t), uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  char v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  _BYTE v17[24];
  ValueMetadata *v18;
  unint64_t v19;

  v4 = sub_1B76DB72C();
  MEMORY[0x1E0C80A78](v4, v5);
  v6 = sub_1B76DB738();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  if (byte_1ED53B740 == 2)
  {
    v18 = &type metadata for Feature.FeatureFlags;
    v19 = sub_1B7658114();
    v11 = sub_1B76DB894();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
    if ((v11 & 1) == 0)
    {
LABEL_3:
      sub_1B76DB714();
      sub_1B769FDF8(MEMORY[0x1E0DEE9D8]);
      sub_1B769FF2C();
      sub_1B76DB78C();
      v12 = (void *)sub_1B76DB6E4();
      (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v10, v6);
      a1(v12, 0, 1);

      return;
    }
  }
  else if ((byte_1ED53B740 & 1) == 0)
  {
    goto LABEL_3;
  }
  sub_1B7695184();
  v14 = v13;
  ObjectType = swift_getObjectType();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a2;
  swift_retain();
  XPCConnectable.remoteObjectProxy(retryCount:proxyHandler:)(1, (void (*)(_BYTE *))sub_1B769FF98, v16, ObjectType, v14);
  swift_unknownObjectRelease();
  swift_release();
}

void sub_1B76956F8(uint64_t a1, void (*a2)(void *, _QWORD, uint64_t), uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  void *v41;
  _QWORD v42[3];
  void (*v43)(void *, _QWORD, uint64_t);
  uint64_t v44;
  uint64_t aBlock[6];
  uint64_t v46[4];
  uint64_t v47;
  _OWORD v48[2];
  _OWORD v49[2];
  char v50;

  v44 = a3;
  v5 = sub_1B76DB72C();
  MEMORY[0x1E0C80A78](v5, v6);
  v7 = sub_1B76DB738();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B76638C0(a1, (uint64_t)v49, &qword_1ED53B798);
  if ((v50 & 1) != 0)
  {
    v12 = *(void **)&v49[0];
    if (qword_1ED53B4B0 != -1)
      swift_once();
    v13 = sub_1B76DB8B8();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ED53B4D0);
    v14 = v12;
    v15 = v12;
    v16 = sub_1B76DB8A0();
    v17 = sub_1B76DBC90();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      aBlock[0] = v19;
      *(_DWORD *)v18 = 136446210;
      *(_QWORD *)&v48[0] = v12;
      v20 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B678);
      v21 = sub_1B76DBB10();
      *(_QWORD *)&v48[0] = sub_1B7669B50(v21, v22, aBlock);
      sub_1B76DBD38();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1B7656000, v16, v17, "Unable to obtain remote object proxy. Error: %{public}s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v19, -1, -1);
      MEMORY[0x1BCCA9590](v18, -1, -1);
    }
    else
    {

    }
    v32 = v12;
    a2(v12, 0, 1);

  }
  else
  {
    sub_1B765DF30(v49, v48);
    sub_1B765DF40((uint64_t)v48, (uint64_t)aBlock);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B770);
    v23 = MEMORY[0x1E0DEE9B8];
    if ((swift_dynamicCast() & 1) != 0)
    {
      v24 = (void *)v46[0];
      if (qword_1ED53B4B0 != -1)
        swift_once();
      v25 = sub_1B76DB8B8();
      __swift_project_value_buffer(v25, (uint64_t)qword_1ED53B4D0);
      v26 = sub_1B76DB8A0();
      v27 = sub_1B76DBCA8();
      if (os_log_type_enabled(v26, v27))
      {
        v28 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v28 = 0;
        _os_log_impl(&dword_1B7656000, v26, v27, "Retrieving effective media settings", v28, 2u);
        MEMORY[0x1BCCA9590](v28, -1, -1);
      }

      v29 = swift_allocObject();
      v30 = v44;
      *(_QWORD *)(v29 + 16) = a2;
      *(_QWORD *)(v29 + 24) = v30;
      aBlock[4] = (uint64_t)sub_1B76A0C74;
      aBlock[5] = v29;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1B76960A0;
      aBlock[3] = (uint64_t)&block_descriptor_97;
      v31 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v24, sel_effectiveMediaSettings_, v31);
      _Block_release(v31);
      swift_unknownObjectRelease();
    }
    else
    {
      if (qword_1ED53B4B0 != -1)
        swift_once();
      v33 = sub_1B76DB8B8();
      __swift_project_value_buffer(v33, (uint64_t)qword_1ED53B4D0);
      sub_1B765DF40((uint64_t)v48, (uint64_t)aBlock);
      v34 = sub_1B76DB8A0();
      v35 = sub_1B76DBC90();
      if (os_log_type_enabled(v34, v35))
      {
        v36 = swift_slowAlloc();
        v43 = a2;
        v37 = (uint8_t *)v36;
        v38 = swift_slowAlloc();
        v47 = v38;
        *(_DWORD *)v37 = 136446210;
        v42[1] = v37 + 4;
        sub_1B765DF40((uint64_t)aBlock, (uint64_t)v46);
        v42[2] = v23 + 8;
        v39 = sub_1B76DBB10();
        v46[0] = sub_1B7669B50(v39, v40, &v47);
        sub_1B76DBD38();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
        _os_log_impl(&dword_1B7656000, v34, v35, "Proxy %{public}s does not not conform to ManagedSettingsAgent", v37, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCA9590](v38, -1, -1);
        a2 = v43;
        MEMORY[0x1BCCA9590](v37, -1, -1);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
      }

      sub_1B76DB720();
      sub_1B769FDF8(MEMORY[0x1E0DEE9D8]);
      sub_1B769FF2C();
      sub_1B76DB78C();
      v41 = (void *)sub_1B76DB6E4();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
      a2(v41, 0, 1);

    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v48);
  }
}

uint64_t sub_1B7695D10(void *a1, void *a2, void *a3, uint64_t (*a4)(uint64_t, id, uint64_t), uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t result;
  uint64_t v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, id, uint64_t);
  uint64_t v37;
  uint64_t v38;

  v10 = sub_1B76DB8B8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v12);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v15 = objc_msgSend(a1, sel_integerValue);
    if (a2)
    {
      v16 = (uint64_t)v15;
      v17 = objc_msgSend(a2, sel_integerValue);
      if (qword_1ED53B4B0 != -1)
        swift_once();
      __swift_project_value_buffer(v10, (uint64_t)qword_1ED53B4D0);
      v18 = sub_1B76DB8A0();
      v19 = sub_1B76DBCA8();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = swift_slowAlloc();
        *(_DWORD *)v20 = 134349312;
        v38 = v16;
        sub_1B76DBD38();
        *(_WORD *)(v20 + 12) = 2050;
        v38 = (uint64_t)v17;
        sub_1B76DBD38();
        _os_log_impl(&dword_1B7656000, v18, v19, "Successfully retrieved effective media settings. Movie Rating: %{public}ld TV Rating: %{public}ld", (uint8_t *)v20, 0x16u);
        MEMORY[0x1BCCA9590](v20, -1, -1);
      }

      v21 = v16;
      v22 = v17;
      v23 = 0;
      return a4(v21, v22, v23);
    }
  }
  if (qword_1ED53B4B0 != -1)
    swift_once();
  v24 = __swift_project_value_buffer(v10, (uint64_t)qword_1ED53B4D0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v24, v10);
  v25 = a3;
  v26 = a3;
  v27 = sub_1B76DB8A0();
  v28 = sub_1B76DBC90();
  if (os_log_type_enabled(v27, v28))
  {
    v35 = a5;
    v36 = a4;
    v29 = (uint8_t *)swift_slowAlloc();
    result = swift_slowAlloc();
    v38 = result;
    *(_DWORD *)v29 = 136446210;
    if (a3)
    {
      v31 = result;
      v37 = (uint64_t)a3;
      v32 = a3;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B678);
      v33 = sub_1B76DBB10();
      v37 = sub_1B7669B50(v33, v34, &v38);
      sub_1B76DBD38();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1B7656000, v27, v28, "Failed to retrieve effective media settings. Error: %{public}s", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v31, -1, -1);
      MEMORY[0x1BCCA9590](v29, -1, -1);

      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
      a4 = v36;
LABEL_14:
      v21 = (uint64_t)a3;
      v22 = 0;
      v23 = 1;
      return a4(v21, v22, v23);
    }
    __break(1u);
  }
  else
  {

    result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    if (a3)
      goto LABEL_14;
  }
  __break(1u);
  return result;
}

void sub_1B76960A0(uint64_t a1, void *a2, void *a3, void *a4)
{
  void (*v7)(void *, void *, void *);
  id v8;
  id v9;
  id v10;

  v7 = *(void (**)(void *, void *, void *))(a1 + 32);
  swift_retain();
  v10 = a2;
  v8 = a3;
  v9 = a4;
  v7(a2, a3, a4);
  swift_release();

}

uint64_t sub_1B7696130()
{
  uint64_t result;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  _QWORD v5[5];

  result = swift_beginAccess();
  if (byte_1ED53B740 != 2)
  {
    if ((byte_1ED53B740 & 1) == 0)
      return result;
    goto LABEL_5;
  }
  v5[3] = &type metadata for Feature.FeatureFlags;
  v5[4] = sub_1B7658114();
  v1 = sub_1B76DB894();
  result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
  if ((v1 & 1) != 0)
  {
LABEL_5:
    sub_1B7695184();
    v3 = v2;
    ObjectType = swift_getObjectType();
    XPCConnectable.remoteObjectProxy(retryCount:proxyHandler:)(1, (void (*)(_BYTE *))sub_1B76961E0, 0, ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1B76961E0(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  void *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25[6];
  uint64_t v26[4];
  uint64_t v27;
  _OWORD v28[2];
  _OWORD v29[2];
  char v30;

  sub_1B76638C0(a1, (uint64_t)v29, &qword_1ED53B798);
  if ((v30 & 1) != 0)
  {
    v1 = *(void **)&v29[0];
    if (qword_1ED53B4B0 != -1)
      swift_once();
    v2 = sub_1B76DB8B8();
    __swift_project_value_buffer(v2, (uint64_t)qword_1ED53B4D0);
    v3 = v1;
    v4 = v1;
    v5 = sub_1B76DB8A0();
    v6 = sub_1B76DBC90();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v25[0] = v8;
      *(_DWORD *)v7 = 136446210;
      *(_QWORD *)&v28[0] = v1;
      v9 = v1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B678);
      v10 = sub_1B76DBB10();
      *(_QWORD *)&v28[0] = sub_1B7669B50(v10, v11, v25);
      sub_1B76DBD38();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1B7656000, v5, v6, "Unable to obtain remote object proxy. Error: %{public}s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v8, -1, -1);
      MEMORY[0x1BCCA9590](v7, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    sub_1B765DF30(v29, v28);
    sub_1B765DF40((uint64_t)v28, (uint64_t)v25);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B770);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v12 = (void *)v26[0];
      if (qword_1ED53B4B0 != -1)
        swift_once();
      v13 = sub_1B76DB8B8();
      __swift_project_value_buffer(v13, (uint64_t)qword_1ED53B4D0);
      v14 = sub_1B76DB8A0();
      v15 = sub_1B76DBCA8();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_1B7656000, v14, v15, "Updating effective settings", v16, 2u);
        MEMORY[0x1BCCA9590](v16, -1, -1);
      }

      v25[4] = (uint64_t)sub_1B76966A8;
      v25[5] = 0;
      v25[0] = MEMORY[0x1E0C809B0];
      v25[1] = 1107296256;
      v25[2] = (uint64_t)sub_1B769689C;
      v25[3] = (uint64_t)&block_descriptor_91;
      v17 = _Block_copy(v25);
      objc_msgSend(v12, sel_updateEffectiveSettings_, v17);
      _Block_release(v17);
      swift_unknownObjectRelease();
    }
    else
    {
      if (qword_1ED53B4B0 != -1)
        swift_once();
      v18 = sub_1B76DB8B8();
      __swift_project_value_buffer(v18, (uint64_t)qword_1ED53B4D0);
      sub_1B765DF40((uint64_t)v28, (uint64_t)v25);
      v19 = sub_1B76DB8A0();
      v20 = sub_1B76DBC90();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc();
        v22 = swift_slowAlloc();
        v27 = v22;
        *(_DWORD *)v21 = 136446210;
        sub_1B765DF40((uint64_t)v25, (uint64_t)v26);
        v23 = sub_1B76DBB10();
        v26[0] = sub_1B7669B50(v23, v24, &v27);
        sub_1B76DBD38();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
        _os_log_impl(&dword_1B7656000, v19, v20, "Proxy %{public}s does not not conform to ManagedSettingsAgent", v21, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCA9590](v22, -1, -1);
        MEMORY[0x1BCCA9590](v21, -1, -1);

      }
      else
      {

        __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
      }
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
  }
}

void sub_1B76966A8(void *a1)
{
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  NSObject *oslog;
  uint64_t v13;

  if (a1)
  {
    v2 = a1;
    if (qword_1ED53B4B0 != -1)
      swift_once();
    v3 = sub_1B76DB8B8();
    __swift_project_value_buffer(v3, (uint64_t)qword_1ED53B4D0);
    v4 = a1;
    v5 = a1;
    oslog = sub_1B76DB8A0();
    v6 = sub_1B76DBC90();
    if (os_log_type_enabled(oslog, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v13 = v8;
      *(_DWORD *)v7 = 136446210;
      v9 = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B678);
      v10 = sub_1B76DBB10();
      sub_1B7669B50(v10, v11, &v13);
      sub_1B76DBD38();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1B7656000, oslog, v6, "Unable to update effective settings. Error: %{public}s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v8, -1, -1);
      MEMORY[0x1BCCA9590](v7, -1, -1);

    }
    else
    {

    }
  }
}

void sub_1B769689C(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

void *sub_1B76968F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  char *v23;
  id v24;
  _BYTE v26[4];
  int v27;
  uint64_t ObjectType;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[24];
  ValueMetadata *v34;
  unint64_t v35;

  v31 = a4;
  v32 = a6;
  v30 = a1;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x1E0C80A78](v13, v16);
  swift_beginAccess();
  if (byte_1ED53B740 != 2)
  {
    if ((byte_1ED53B740 & 1) == 0)
      return 0;
LABEL_5:
    v19 = swift_allocObject();
    v27 = a8;
    *(_QWORD *)(v19 + 16) = 0;
    sub_1B7695184();
    v29 = v20;
    ObjectType = swift_getObjectType();
    sub_1B76638C0(a3, (uint64_t)&v26[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)], &qword_1EF1774C0);
    v21 = (*(unsigned __int8 *)(v14 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    v22 = (_QWORD *)swift_allocObject();
    v22[2] = v30;
    v22[3] = a2;
    v22[4] = v31;
    v22[5] = a5;
    v22[6] = v32;
    v22[7] = a7;
    sub_1B76A0C30((uint64_t)&v26[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t)v22 + v21, &qword_1EF1774C0);
    v23 = (char *)v22 + ((v15 + v21 + 7) & 0xFFFFFFFFFFFFFFF8);
    *(_QWORD *)v23 = v19;
    v23[8] = v27 & 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    XPCConnectable.synchronousRemoteObjectProxy(retryCount:proxyHandler:)(1, (void (*)(_QWORD *))sub_1B76A0090, (uint64_t)v22, ObjectType, v29);
    swift_release();
    swift_unknownObjectRelease();
    swift_beginAccess();
    v18 = *(void **)(v19 + 16);
    v24 = v18;
    swift_release();
    return v18;
  }
  v34 = &type metadata for Feature.FeatureFlags;
  v35 = sub_1B7658114();
  v17 = sub_1B76DB894();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
  if ((v17 & 1) != 0)
    goto LABEL_5;
  return 0;
}

void sub_1B7696B10(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  _BOOL4 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t aBlock[6];
  void *v65;
  uint64_t v66;
  _OWORD v67[2];
  _OWORD v68[2];
  char v69;

  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  MEMORY[0x1E0C80A78](v18, v19);
  v21 = (char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B76638C0(a1, (uint64_t)v68, &qword_1ED53B798);
  if ((v69 & 1) != 0)
  {
    v22 = *(void **)&v68[0];
    if (qword_1ED53B4B0 != -1)
      swift_once();
    v23 = sub_1B76DB8B8();
    __swift_project_value_buffer(v23, (uint64_t)qword_1ED53B4D0);
    v24 = v22;
    v25 = v22;
    v26 = sub_1B76DB8A0();
    v27 = sub_1B76DBC90();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      aBlock[0] = v29;
      *(_DWORD *)v28 = 136446210;
      *(_QWORD *)&v67[0] = v22;
      v30 = v22;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B678);
      v31 = sub_1B76DBB10();
      *(_QWORD *)&v67[0] = sub_1B7669B50(v31, v32, aBlock);
      sub_1B76DBD38();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1B7656000, v26, v27, "Unable to obtain remote object proxy. Error: %{public}s", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v29, -1, -1);
      MEMORY[0x1BCCA9590](v28, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    sub_1B765DF30(v68, v67);
    sub_1B765DF40((uint64_t)v67, (uint64_t)aBlock);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B770);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v60 = v65;
      if (qword_1ED53B4B0 != -1)
        swift_once();
      v33 = sub_1B76DB8B8();
      __swift_project_value_buffer(v33, (uint64_t)qword_1ED53B4D0);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v34 = sub_1B76DB8A0();
      v35 = sub_1B76DBCA8();
      v59 = v35;
      v36 = os_log_type_enabled(v34, v35);
      v63 = a2;
      v62 = a6;
      v61 = a4;
      if (v36)
      {
        v37 = swift_slowAlloc();
        v57 = swift_slowAlloc();
        aBlock[0] = v57;
        *(_DWORD *)v37 = 136446722;
        v58 = a8;
        swift_bridgeObjectRetain();
        v65 = (void *)sub_1B7669B50(a2, a3, aBlock);
        sub_1B76DBD38();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v37 + 12) = 2082;
        swift_bridgeObjectRetain();
        v65 = (void *)sub_1B7669B50(a4, a5, aBlock);
        sub_1B76DBD38();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v37 + 22) = 2082;
        swift_bridgeObjectRetain();
        a2 = v63;
        v65 = (void *)sub_1B7669B50(a6, a7, aBlock);
        a8 = v58;
        sub_1B76DBD38();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1B7656000, v34, (os_log_type_t)v59, "Getting “%{public}s” from store with container “%{public}s” and name “%{public}s”", (uint8_t *)v37, 0x20u);
        v38 = v57;
        swift_arrayDestroy();
        MEMORY[0x1BCCA9590](v38, -1, -1);
        MEMORY[0x1BCCA9590](v37, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      v59 = a10;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1775E8);
      v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = xmmword_1B76DCB70;
      *(_QWORD *)(v46 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v46 + 32) = a2;
      *(_QWORD *)(v46 + 40) = a3;
      sub_1B765DF7C(0, &qword_1EF178218);
      swift_bridgeObjectRetain();
      v47 = (void *)MEMORY[0x1BCCA8E10](v46);
      sub_1B76638C0(a8, (uint64_t)v21, &qword_1EF1774C0);
      v48 = sub_1B76DB888();
      v49 = *(_QWORD *)(v48 - 8);
      v50 = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v21, 1, v48) != 1)
      {
        v50 = (void *)sub_1B76DB870();
        (*(void (**)(char *, uint64_t))(v49 + 8))(v21, v48);
      }
      v51 = v61;
      v52 = (void *)sub_1B76DBAB0();
      v53 = v62;
      v54 = (void *)sub_1B76DBAB0();
      v55 = swift_allocObject();
      *(_QWORD *)(v55 + 16) = v63;
      *(_QWORD *)(v55 + 24) = a3;
      *(_QWORD *)(v55 + 32) = v51;
      *(_QWORD *)(v55 + 40) = a5;
      *(_QWORD *)(v55 + 48) = v53;
      *(_QWORD *)(v55 + 56) = a7;
      *(_QWORD *)(v55 + 64) = a9;
      *(_BYTE *)(v55 + 72) = v59 & 1;
      aBlock[4] = (uint64_t)sub_1B76A0BF8;
      aBlock[5] = v55;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1B7697D2C;
      aBlock[3] = (uint64_t)&block_descriptor_88;
      v56 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_release();
      objc_msgSend(v60, sel_getValuesForSettingNames_recordIdentifier_storeContainer_storeName_replyHandler_, v47, v50, v52, v54, v56);
      _Block_release(v56);
      swift_unknownObjectRelease();

    }
    else
    {
      if (qword_1ED53B4B0 != -1)
        swift_once();
      v39 = sub_1B76DB8B8();
      __swift_project_value_buffer(v39, (uint64_t)qword_1ED53B4D0);
      sub_1B765DF40((uint64_t)v67, (uint64_t)aBlock);
      v40 = sub_1B76DB8A0();
      v41 = sub_1B76DBC90();
      if (os_log_type_enabled(v40, v41))
      {
        v42 = (uint8_t *)swift_slowAlloc();
        v43 = swift_slowAlloc();
        v66 = v43;
        *(_DWORD *)v42 = 136446210;
        sub_1B765DF40((uint64_t)aBlock, (uint64_t)&v65);
        v44 = sub_1B76DBB10();
        v65 = (void *)sub_1B7669B50(v44, v45, &v66);
        sub_1B76DBD38();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
        _os_log_impl(&dword_1B7656000, v40, v41, "Proxy %{public}s does not not conform to ManagedSettingsAgent", v42, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCA9590](v43, -1, -1);
        MEMORY[0x1BCCA9590](v42, -1, -1);

      }
      else
      {

        __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
      }
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v67);
  }
}

void sub_1B7697380(void *a1, id a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, char a10)
{
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  os_log_type_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  id v27;
  void **v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  const char *v38;
  uint64_t v39;
  os_log_type_t v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  os_log_type_t type;
  uint64_t v45;
  uint64_t v46;
  NSObject *oslog;
  os_log_t osloga;
  uint64_t v50;
  _OWORD v51[2];
  uint64_t v52[4];

  if (!a2)
  {
    if (!a1)
      return;
    v52[0] = a3;
    v52[1] = a4;
    swift_bridgeObjectRetain_n();
    osloga = a1;
    v27 = -[NSObject __swift_objectForKeyedSubscript:](osloga, sel___swift_objectForKeyedSubscript_, sub_1B76DBEE8());
    swift_unknownObjectRelease();
    if (v27)
    {
      sub_1B76DBD50();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v51, 0, sizeof(v51));
    }
    v28 = (void **)(a9 + 16);
    sub_1B76A0C30((uint64_t)v51, (uint64_t)v52, &qword_1ED53B7A0);
    if (v52[3])
    {
      sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
      if (swift_dynamicCast())
      {
        v29 = v50;
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1B765DE88((uint64_t)v52, &qword_1ED53B7A0);
    }
    v29 = 0;
LABEL_17:
    swift_beginAccess();
    v30 = *v28;
    *v28 = (void *)v29;

    if ((a10 & 1) != 0)
    {
      if (qword_1ED53B4B0 != -1)
        swift_once();
      v31 = sub_1B76DB8B8();
      __swift_project_value_buffer(v31, (uint64_t)qword_1ED53B4D0);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      v32 = sub_1B76DB8A0();
      v33 = sub_1B76DBCA8();
      if (!os_log_type_enabled(v32, v33))
      {

        swift_release_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        return;
      }
      type = v33;
      v34 = swift_slowAlloc();
      v45 = swift_slowAlloc();
      v50 = v45;
      *(_DWORD *)v34 = 136446978;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v51[0] = sub_1B7669B50(a3, a4, &v50);
      sub_1B76DBD38();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v34 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v51[0] = sub_1B7669B50(a5, a6, &v50);
      sub_1B76DBD38();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v34 + 22) = 2082;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v51[0] = sub_1B7669B50(a7, a8, &v50);
      sub_1B76DBD38();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v34 + 32) = 2082;
      swift_beginAccess();
      v35 = *(id *)(a9 + 16);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774F8);
      v36 = sub_1B76DBB10();
      sub_1B7669B50(v36, v37, &v50);
      sub_1B76DBD38();
      swift_release_n();
      swift_bridgeObjectRelease();
      v38 = "Successfully got “%{public}s” from store with container “%{public}s” and name “%{public}s.” Value: %{public}s";
    }
    else
    {
      if (qword_1ED53B4B0 != -1)
        swift_once();
      v39 = sub_1B76DB8B8();
      __swift_project_value_buffer(v39, (uint64_t)qword_1ED53B4D0);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      v32 = sub_1B76DB8A0();
      v40 = sub_1B76DBCA8();
      if (!os_log_type_enabled(v32, v40))
      {

        swift_release_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        goto LABEL_29;
      }
      type = v40;
      v34 = swift_slowAlloc();
      v45 = swift_slowAlloc();
      v50 = v45;
      *(_DWORD *)v34 = 136446978;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v51[0] = sub_1B7669B50(a3, a4, &v50);
      sub_1B76DBD38();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v34 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v51[0] = sub_1B7669B50(a5, a6, &v50);
      sub_1B76DBD38();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v34 + 22) = 2082;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v51[0] = sub_1B7669B50(a7, a8, &v50);
      sub_1B76DBD38();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v34 + 32) = 2080;
      swift_beginAccess();
      v41 = *(id *)(a9 + 16);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774F8);
      v42 = sub_1B76DBB10();
      sub_1B7669B50(v42, v43, &v50);
      sub_1B76DBD38();
      swift_release_n();
      swift_bridgeObjectRelease();
      v38 = "Successfully got “%{public}s” from store with container “%{public}s” and name “%{public}s.” Value: %s";
    }
    _os_log_impl(&dword_1B7656000, v32, type, v38, (uint8_t *)v34, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x1BCCA9590](v45, -1, -1);
    MEMORY[0x1BCCA9590](v34, -1, -1);

LABEL_29:
    return;
  }
  v17 = a2;
  if (qword_1ED53B4B0 != -1)
    swift_once();
  v18 = sub_1B76DB8B8();
  __swift_project_value_buffer(v18, (uint64_t)qword_1ED53B4D0);
  v19 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  oslog = sub_1B76DB8A0();
  v21 = sub_1B76DBC90();
  if (os_log_type_enabled(oslog, v21))
  {
    v22 = swift_slowAlloc();
    v46 = swift_slowAlloc();
    v52[0] = v46;
    *(_DWORD *)v22 = 136446978;
    swift_bridgeObjectRetain();
    sub_1B7669B50(a3, a4, v52);
    sub_1B76DBD38();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v22 + 12) = 2082;
    swift_bridgeObjectRetain();
    sub_1B7669B50(a5, a6, v52);
    sub_1B76DBD38();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v22 + 22) = 2082;
    swift_bridgeObjectRetain();
    sub_1B7669B50(a7, a8, v52);
    sub_1B76DBD38();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v22 + 32) = 2082;
    v23 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B678);
    v24 = sub_1B76DBB10();
    *(_QWORD *)&v51[0] = sub_1B7669B50(v24, v25, v52);
    sub_1B76DBD38();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1B7656000, oslog, v21, "Unable to get “%{public}s” from store with container “%{public}s” and name “%{public}s.” Error: %{public}s", (uint8_t *)v22, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x1BCCA9590](v46, -1, -1);
    MEMORY[0x1BCCA9590](v22, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

  }
}

uint64_t sub_1B7697D30@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10)
{
  char v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v33[24];
  ValueMetadata *v34;
  unint64_t v35;

  swift_beginAccess();
  if (byte_1ED53B740 == 2)
  {
    v34 = &type metadata for Feature.FeatureFlags;
    v35 = sub_1B7658114();
    v18 = sub_1B76DB894();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
    if ((v18 & 1) == 0)
    {
LABEL_3:
      v19 = sub_1B76DB888();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a9, 1, 1, v19);
    }
  }
  else if ((byte_1ED53B740 & 1) == 0)
  {
    goto LABEL_3;
  }
  v31 = a9;
  v29 = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  v21 = a7;
  v22 = swift_allocBox();
  v24 = v23;
  sub_1B76638C0(a4, v23, &qword_1EF1774C0);
  sub_1B7695184();
  v30 = v25;
  ObjectType = swift_getObjectType();
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = a1;
  *(_BYTE *)(v27 + 24) = a10 & 1;
  *(_QWORD *)(v27 + 32) = a2;
  *(_QWORD *)(v27 + 40) = a3;
  *(_QWORD *)(v27 + 48) = v29;
  *(_QWORD *)(v27 + 56) = a6;
  *(_QWORD *)(v27 + 64) = v21;
  *(_QWORD *)(v27 + 72) = a8;
  *(_QWORD *)(v27 + 80) = v22;
  v28 = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  XPCConnectable.synchronousRemoteObjectProxy(retryCount:proxyHandler:)(1, (void (*)(_QWORD *))sub_1B76A0150, v27, ObjectType, v30);
  swift_unknownObjectRelease();
  swift_release();
  swift_beginAccess();
  sub_1B76638C0(v24, v31, &qword_1EF1774C0);
  return swift_release();
}

void sub_1B7697F24(uint64_t a1, void *a2, int a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void *v25;
  uint64_t v26;
  id v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  NSObject *v40;
  os_log_type_t v41;
  int v42;
  uint64_t v43;
  id v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  os_log_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  BOOL v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  os_log_type_t v69;
  int v70;
  uint64_t v71;
  id v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  os_log_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  unint64_t v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  unint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  id v97;
  id v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  unint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  os_log_t v113;
  os_log_t v114;
  uint64_t v115;
  unint64_t v116;
  id v117;
  id v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t aBlock;
  uint64_t v127;
  uint64_t (*v128)(uint64_t, uint64_t, void *);
  void *v129;
  void (*v130)(uint64_t, void *);
  _QWORD *v131;
  uint64_t v132[4];
  uint64_t v133;
  _OWORD v134[2];
  __int128 v135;
  char v136;

  LODWORD(v125) = a3;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  v19 = MEMORY[0x1E0C80A78](v17, v18);
  v21 = (char *)&v111 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19, v22);
  v24 = (char *)&v111 - v23;
  v124 = swift_projectBox();
  sub_1B76638C0(a1, (uint64_t)&v135, &qword_1ED53B798);
  if ((v136 & 1) == 0)
  {
    sub_1B765DF30(&v135, v134);
    sub_1B765DF40((uint64_t)v134, (uint64_t)&aBlock);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B770);
    if ((swift_dynamicCast() & 1) == 0)
    {
      if (qword_1ED53B4B0 != -1)
        swift_once();
      v54 = sub_1B76DB8B8();
      __swift_project_value_buffer(v54, (uint64_t)qword_1ED53B4D0);
      sub_1B765DF40((uint64_t)v134, (uint64_t)&aBlock);
      v55 = sub_1B76DB8A0();
      v56 = sub_1B76DBC90();
      if (os_log_type_enabled(v55, v56))
      {
        v57 = (uint8_t *)swift_slowAlloc();
        v58 = swift_slowAlloc();
        v133 = v58;
        *(_DWORD *)v57 = 136446210;
        sub_1B765DF40((uint64_t)&aBlock, (uint64_t)v132);
        v59 = sub_1B76DBB10();
        v132[0] = sub_1B7669B50(v59, v60, &v133);
        sub_1B76DBD38();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);
        _os_log_impl(&dword_1B7656000, v55, v56, "Proxy %{public}s does not not conform to ManagedSettingsAgent", v57, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCA9590](v58, -1, -1);
        MEMORY[0x1BCCA9590](v57, -1, -1);

      }
      else
      {

        __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);
      }
      goto LABEL_36;
    }
    v123 = a6;
    v36 = (id)v132[0];
    v121 = a8;
    v122 = a4;
    v119 = a10;
    v120 = a9;
    if (!a2)
    {
      if (qword_1ED53B4B0 != -1)
        swift_once();
      v61 = sub_1B76DB8B8();
      __swift_project_value_buffer(v61, (uint64_t)qword_1ED53B4D0);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v62 = sub_1B76DB8A0();
      v63 = sub_1B76DBCA8();
      v64 = os_log_type_enabled(v62, v63);
      v116 = a7;
      if (v64)
      {
        v65 = swift_slowAlloc();
        v125 = swift_slowAlloc();
        aBlock = v125;
        *(_DWORD *)v65 = 136446722;
        swift_bridgeObjectRetain();
        v132[0] = sub_1B7669B50(v122, a5, &aBlock);
        v117 = v36;
        sub_1B76DBD38();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v65 + 12) = 2082;
        swift_bridgeObjectRetain();
        v132[0] = sub_1B7669B50(v123, a7, &aBlock);
        sub_1B76DBD38();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v65 + 22) = 2082;
        swift_bridgeObjectRetain();
        v132[0] = sub_1B7669B50(a8, a9, &aBlock);
        v36 = v117;
        sub_1B76DBD38();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1B7656000, v62, v63, "Deleting “%{public}s” from store with container “%{public}s” and name “%{public}s”", (uint8_t *)v65, 0x20u);
        v66 = v125;
        swift_arrayDestroy();
        MEMORY[0x1BCCA9590](v66, -1, -1);
        v67 = v65;
        a4 = v122;
        MEMORY[0x1BCCA9590](v67, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1775E8);
      v99 = swift_allocObject();
      *(_OWORD *)(v99 + 16) = xmmword_1B76DCB70;
      *(_QWORD *)(v99 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v99 + 32) = a4;
      *(_QWORD *)(v99 + 40) = a5;
      sub_1B765DF7C(0, &qword_1EF178218);
      v100 = a5;
      swift_bridgeObjectRetain();
      v118 = (id)MEMORY[0x1BCCA8E10](v99);
      v101 = v124;
      swift_beginAccess();
      sub_1B76638C0(v101, (uint64_t)v21, &qword_1EF1774C0);
      v102 = sub_1B76DB888();
      v103 = *(_QWORD *)(v102 - 8);
      v88 = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48))(v21, 1, v102) != 1)
      {
        v88 = (void *)sub_1B76DB870();
        (*(void (**)(char *, uint64_t))(v103 + 8))(v21, v102);
      }
      v104 = v123;
      v105 = v116;
      v90 = (void *)sub_1B76DBAB0();
      v106 = v121;
      v107 = v120;
      v93 = (void *)sub_1B76DBAB0();
      v108 = (_QWORD *)swift_allocObject();
      v109 = v122;
      v108[2] = v119;
      v108[3] = v109;
      v108[4] = v100;
      v108[5] = v104;
      v108[6] = v105;
      v108[7] = v106;
      v108[8] = v107;
      v130 = sub_1B76A0B08;
      v131 = v108;
      aBlock = MEMORY[0x1E0C809B0];
      v127 = 1107296256;
      v128 = sub_1B7699870;
      v129 = &block_descriptor_76;
      v110 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_release();
      v98 = v118;
      objc_msgSend(v36, sel_removeValuesForSettingNames_recordIdentifier_storeContainer_storeName_replyHandler_, v118, v88, v90, v93, v110);
      _Block_release(v110);
      goto LABEL_35;
    }
    v37 = qword_1ED53B4B0;
    v118 = a2;
    v117 = v36;
    if ((v125 & 1) != 0)
    {
      if (v37 != -1)
        swift_once();
      v38 = sub_1B76DB8B8();
      __swift_project_value_buffer(v38, (uint64_t)qword_1ED53B4D0);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v39 = v118;
      v40 = sub_1B76DB8A0();
      v41 = sub_1B76DBCA8();
      v42 = v41;
      if (os_log_type_enabled(v40, v41))
      {
        v43 = swift_slowAlloc();
        v115 = swift_slowAlloc();
        aBlock = v115;
        *(_DWORD *)v43 = 136446978;
        v114 = v40;
        swift_bridgeObjectRetain();
        v132[0] = sub_1B7669B50(a4, a5, &aBlock);
        sub_1B76DBD38();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v43 + 12) = 2080;
        v112 = v43 + 14;
        v44 = v39;
        v45 = objc_msgSend(v44, sel_description);
        v46 = sub_1B76DBAD4();
        LODWORD(v113) = v42;
        v48 = v47;

        v132[0] = sub_1B7669B50(v46, v48, &aBlock);
        sub_1B76DBD38();

        swift_bridgeObjectRelease();
        *(_WORD *)(v43 + 22) = 2082;
        swift_bridgeObjectRetain();
        v132[0] = sub_1B7669B50(v123, a7, &aBlock);
        sub_1B76DBD38();
        v49 = a5;
        v50 = a7;
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v43 + 32) = 2082;
        v51 = v120;
        swift_bridgeObjectRetain();
        v132[0] = sub_1B7669B50(v121, v51, &aBlock);
        sub_1B76DBD38();
        swift_bridgeObjectRelease_n();
        v52 = v114;
        _os_log_impl(&dword_1B7656000, v114, (os_log_type_t)v113, "Setting “%{public}s” to “%s” in store with container “%{public}s” and name “%{public}s”", (uint8_t *)v43, 0x2Au);
        v53 = v115;
        swift_arrayDestroy();
        MEMORY[0x1BCCA9590](v53, -1, -1);
        MEMORY[0x1BCCA9590](v43, -1, -1);

LABEL_28:
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177830);
        v81 = swift_allocObject();
        *(_OWORD *)(v81 + 16) = xmmword_1B76DCB70;
        *(_QWORD *)(v81 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v81 + 32) = a4;
        *(_QWORD *)(v81 + 40) = v49;
        *(_QWORD *)(v81 + 88) = sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
        v82 = v118;
        *(_QWORD *)(v81 + 64) = v118;
        sub_1B765DF7C(0, &qword_1ED53B5E8);
        v83 = v49;
        swift_bridgeObjectRetain();
        v84 = v82;
        v118 = (id)sub_1B76DBC78();
        v85 = v124;
        swift_beginAccess();
        sub_1B76638C0(v85, (uint64_t)v24, &qword_1EF1774C0);
        v86 = sub_1B76DB888();
        v87 = *(_QWORD *)(v86 - 8);
        v88 = 0;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v24, 1, v86) != 1)
        {
          v88 = (void *)sub_1B76DB870();
          (*(void (**)(char *, uint64_t))(v87 + 8))(v24, v86);
        }
        v89 = v123;
        v90 = (void *)sub_1B76DBAB0();
        v91 = v121;
        v92 = v120;
        v93 = (void *)sub_1B76DBAB0();
        v94 = swift_allocObject();
        v95 = v122;
        *(_QWORD *)(v94 + 16) = v119;
        *(_QWORD *)(v94 + 24) = v95;
        *(_QWORD *)(v94 + 32) = v83;
        *(_QWORD *)(v94 + 40) = v89;
        *(_QWORD *)(v94 + 48) = v50;
        *(_QWORD *)(v94 + 56) = v91;
        *(_QWORD *)(v94 + 64) = v92;
        *(_BYTE *)(v94 + 72) = v125 & 1;
        *(_QWORD *)(v94 + 80) = v84;
        v130 = sub_1B76A0B7C;
        v131 = (_QWORD *)v94;
        aBlock = MEMORY[0x1E0C809B0];
        v127 = 1107296256;
        v128 = sub_1B7699870;
        v129 = &block_descriptor_82;
        v96 = _Block_copy(&aBlock);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v97 = v84;
        swift_retain();
        swift_release();
        v98 = v118;
        objc_msgSend(v117, sel_setValues_recordIdentifier_storeContainer_storeName_replyHandler_, v118, v88, v90, v93, v96);
        _Block_release(v96);

LABEL_35:
        swift_unknownObjectRelease();

LABEL_36:
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v134);
        return;
      }
    }
    else
    {
      if (v37 != -1)
        swift_once();
      v68 = sub_1B76DB8B8();
      __swift_project_value_buffer(v68, (uint64_t)qword_1ED53B4D0);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v39 = v118;
      v40 = sub_1B76DB8A0();
      v69 = sub_1B76DBCA8();
      v70 = v69;
      if (os_log_type_enabled(v40, v69))
      {
        v71 = swift_slowAlloc();
        v115 = swift_slowAlloc();
        aBlock = v115;
        *(_DWORD *)v71 = 136446978;
        LODWORD(v114) = v70;
        swift_bridgeObjectRetain();
        v132[0] = sub_1B7669B50(a4, a5, &aBlock);
        sub_1B76DBD38();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v71 + 12) = 2082;
        v112 = v71 + 14;
        v72 = v39;
        v73 = objc_msgSend(v72, sel_description);
        v74 = sub_1B76DBAD4();
        v113 = v40;
        v75 = v74;
        v77 = v76;

        v132[0] = sub_1B7669B50(v75, v77, &aBlock);
        sub_1B76DBD38();

        swift_bridgeObjectRelease();
        *(_WORD *)(v71 + 22) = 2082;
        swift_bridgeObjectRetain();
        v132[0] = sub_1B7669B50(v123, a7, &aBlock);
        sub_1B76DBD38();
        v49 = a5;
        v50 = a7;
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v71 + 32) = 2082;
        v78 = v120;
        swift_bridgeObjectRetain();
        v132[0] = sub_1B7669B50(v121, v78, &aBlock);
        sub_1B76DBD38();
        swift_bridgeObjectRelease_n();
        v79 = v113;
        _os_log_impl(&dword_1B7656000, v113, (os_log_type_t)v114, "Setting “%{public}s” to “%{public}s” in store with container “%{public}s” and name “%{public}s”", (uint8_t *)v71, 0x2Au);
        v80 = v115;
        swift_arrayDestroy();
        MEMORY[0x1BCCA9590](v80, -1, -1);
        MEMORY[0x1BCCA9590](v71, -1, -1);

        goto LABEL_28;
      }
    }

    swift_bridgeObjectRelease_n();
    v49 = a5;
    v50 = a7;
    swift_bridgeObjectRelease_n();

    swift_bridgeObjectRelease_n();
    goto LABEL_28;
  }
  v25 = (void *)v135;
  if (qword_1ED53B4B0 != -1)
    swift_once();
  v26 = sub_1B76DB8B8();
  __swift_project_value_buffer(v26, (uint64_t)qword_1ED53B4D0);
  v27 = v25;
  v28 = v25;
  v29 = sub_1B76DB8A0();
  v30 = sub_1B76DBC90();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc();
    v32 = swift_slowAlloc();
    aBlock = v32;
    *(_DWORD *)v31 = 136446210;
    *(_QWORD *)&v134[0] = v25;
    v33 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B678);
    v34 = sub_1B76DBB10();
    *(_QWORD *)&v134[0] = sub_1B7669B50(v34, v35, &aBlock);
    sub_1B76DBD38();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1B7656000, v29, v30, "Unable to obtain remote object proxy. Error: %{public}s", v31, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCA9590](v32, -1, -1);
    MEMORY[0x1BCCA9590](v31, -1, -1);

  }
  else
  {

  }
}

void sub_1B7699028(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, unint64_t a9, char a10, void *a11)
{
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  const char *v41;
  uint64_t v42;
  os_log_type_t v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  NSObject *log;
  os_log_type_t type;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v18 = swift_projectBox();
  swift_beginAccess();
  sub_1B76A09B4(a1, v18);
  if (!a2)
  {
    if ((a10 & 1) != 0)
    {
      if (qword_1ED53B4B0 != -1)
        swift_once();
      v30 = sub_1B76DB8B8();
      __swift_project_value_buffer(v30, (uint64_t)qword_1ED53B4D0);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v31 = a11;
      v32 = sub_1B76DB8A0();
      v33 = sub_1B76DBCA8();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = swift_slowAlloc();
        v53 = swift_slowAlloc();
        v54 = v53;
        *(_DWORD *)v34 = 136446978;
        swift_bridgeObjectRetain();
        sub_1B7669B50(a4, a5, &v54);
        type = v33;
        sub_1B76DBD38();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v34 + 12) = 2080;
        v35 = v31;
        v36 = objc_msgSend(v35, sel_description);
        v37 = sub_1B76DBAD4();
        log = v32;
        v38 = a6;
        v40 = v39;

        sub_1B7669B50(v37, v40, &v54);
        sub_1B76DBD38();

        swift_bridgeObjectRelease();
        *(_WORD *)(v34 + 22) = 2082;
        swift_bridgeObjectRetain();
        sub_1B7669B50(v38, a7, &v54);
        sub_1B76DBD38();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v34 + 32) = 2082;
        swift_bridgeObjectRetain();
        sub_1B7669B50(a8, a9, &v54);
        sub_1B76DBD38();
        swift_bridgeObjectRelease_n();
        v41 = "Successfully set “%{public}s” to “%s” in store with container “%{public}s” and name “%{public}s”";
LABEL_16:
        _os_log_impl(&dword_1B7656000, log, type, v41, (uint8_t *)v34, 0x2Au);
        swift_arrayDestroy();
        MEMORY[0x1BCCA9590](v53, -1, -1);
        MEMORY[0x1BCCA9590](v34, -1, -1);

        return;
      }
    }
    else
    {
      if (qword_1ED53B4B0 != -1)
        swift_once();
      v42 = sub_1B76DB8B8();
      __swift_project_value_buffer(v42, (uint64_t)qword_1ED53B4D0);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v31 = a11;
      v32 = sub_1B76DB8A0();
      v43 = sub_1B76DBCA8();
      if (os_log_type_enabled(v32, v43))
      {
        v34 = swift_slowAlloc();
        v53 = swift_slowAlloc();
        v54 = v53;
        *(_DWORD *)v34 = 136446978;
        swift_bridgeObjectRetain();
        sub_1B7669B50(a4, a5, &v54);
        type = v43;
        sub_1B76DBD38();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v34 + 12) = 2082;
        v44 = v31;
        v45 = objc_msgSend(v44, sel_description);
        v46 = sub_1B76DBAD4();
        log = v32;
        v47 = a6;
        v49 = v48;

        sub_1B7669B50(v46, v49, &v54);
        sub_1B76DBD38();

        swift_bridgeObjectRelease();
        *(_WORD *)(v34 + 22) = 2082;
        swift_bridgeObjectRetain();
        sub_1B7669B50(v47, a7, &v54);
        sub_1B76DBD38();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v34 + 32) = 2082;
        swift_bridgeObjectRetain();
        sub_1B7669B50(a8, a9, &v54);
        sub_1B76DBD38();
        swift_bridgeObjectRelease_n();
        v41 = "Successfully set “%{public}s” to “%{public}s” in store with container “%{public}s” and name “%{public}s”";
        goto LABEL_16;
      }
    }

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    swift_bridgeObjectRelease_n();
    return;
  }
  v19 = a2;
  if (qword_1ED53B4B0 != -1)
    swift_once();
  v20 = sub_1B76DB8B8();
  __swift_project_value_buffer(v20, (uint64_t)qword_1ED53B4D0);
  v21 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v23 = sub_1B76DB8A0();
  v24 = sub_1B76DBC90();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = a6;
    v26 = swift_slowAlloc();
    v52 = swift_slowAlloc();
    v54 = v52;
    *(_DWORD *)v26 = 136446978;
    swift_bridgeObjectRetain();
    sub_1B7669B50(a4, a5, &v54);
    sub_1B76DBD38();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v26 + 12) = 2082;
    swift_bridgeObjectRetain();
    sub_1B7669B50(v25, a7, &v54);
    sub_1B76DBD38();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v26 + 22) = 2082;
    swift_bridgeObjectRetain();
    sub_1B7669B50(a8, a9, &v54);
    sub_1B76DBD38();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v26 + 32) = 2082;
    v27 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B678);
    v28 = sub_1B76DBB10();
    sub_1B7669B50(v28, v29, &v54);
    sub_1B76DBD38();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1B7656000, v23, v24, "Unable to set “%{public}s” in store with container “%{public}s” and name “%{public}s.” Error: %{public}s", (uint8_t *)v26, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x1BCCA9590](v52, -1, -1);
    MEMORY[0x1BCCA9590](v26, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

  }
}

uint64_t sub_1B7699870(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, void *);
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void (**)(char *, void *))(a1 + 32);
  if (a2)
  {
    sub_1B76DB87C();
    v11 = sub_1B76DB888();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, 0, 1, v11);
  }
  else
  {
    v12 = sub_1B76DB888();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v9, 1, 1, v12);
  }
  swift_retain();
  v13 = a3;
  v10(v9, a3);
  swift_release();

  return sub_1B765DE88((uint64_t)v9, &qword_1EF1774C0);
}

void sub_1B7699970(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, unint64_t a9)
{
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v16 = swift_projectBox();
  swift_beginAccess();
  sub_1B76A09B4(a1, v16);
  if (a2)
  {
    v32 = a8;
    v17 = a2;
    if (qword_1ED53B4B0 != -1)
      swift_once();
    v18 = sub_1B76DB8B8();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ED53B4D0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19 = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = a2;
    v21 = sub_1B76DB8A0();
    v22 = sub_1B76DBC90();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = swift_slowAlloc();
      v31 = swift_slowAlloc();
      v34 = v31;
      *(_DWORD *)v23 = 136446978;
      swift_bridgeObjectRetain();
      sub_1B7669B50(a4, a5, &v34);
      sub_1B76DBD38();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v23 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_1B7669B50(a6, a7, &v34);
      sub_1B76DBD38();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v23 + 22) = 2082;
      swift_bridgeObjectRetain();
      sub_1B7669B50(v32, a9, &v34);
      sub_1B76DBD38();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v23 + 32) = 2082;
      v24 = a2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B678);
      v25 = sub_1B76DBB10();
      sub_1B7669B50(v25, v26, &v34);
      sub_1B76DBD38();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1B7656000, v21, v22, "Unable to delete “%{public}s” from store with container “%{public}s” and name “%{public}s.” Error: %{public}s", (uint8_t *)v23, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v31, -1, -1);
      MEMORY[0x1BCCA9590](v23, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

    }
  }
  else
  {
    if (qword_1ED53B4B0 != -1)
      swift_once();
    v27 = sub_1B76DB8B8();
    __swift_project_value_buffer(v27, (uint64_t)qword_1ED53B4D0);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v28 = sub_1B76DB8A0();
    v29 = sub_1B76DBCA8();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc();
      v33 = swift_slowAlloc();
      v34 = v33;
      *(_DWORD *)v30 = 136446722;
      swift_bridgeObjectRetain();
      sub_1B7669B50(a4, a5, &v34);
      sub_1B76DBD38();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v30 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_1B7669B50(a6, a7, &v34);
      sub_1B76DBD38();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v30 + 22) = 2082;
      swift_bridgeObjectRetain();
      sub_1B7669B50(a8, a9, &v34);
      sub_1B76DBD38();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1B7656000, v28, v29, "Successfully deleted “%{public}s” from store with container “%{public}s” and name “%{public}s”", (uint8_t *)v30, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v33, -1, -1);
      MEMORY[0x1BCCA9590](v30, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_1B7699EEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[24];
  ValueMetadata *v32;
  unint64_t v33;

  v29 = a2;
  v30 = a4;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10, v13);
  v14 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (byte_1ED53B740 == 2)
  {
    v32 = &type metadata for Feature.FeatureFlags;
    v33 = sub_1B7658114();
    v15 = sub_1B76DB894();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);
    if ((v15 & 1) == 0)
    {
LABEL_3:
      v16 = sub_1B76DB888();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a6, 1, 1, v16);
    }
  }
  else if ((byte_1ED53B740 & 1) == 0)
  {
    goto LABEL_3;
  }
  v18 = swift_allocBox();
  v28 = a6;
  v20 = v19;
  sub_1B76638C0(a1, v19, &qword_1EF1774C0);
  sub_1B7695184();
  v27 = v21;
  ObjectType = swift_getObjectType();
  sub_1B76638C0(a1, (uint64_t)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1EF1774C0);
  v22 = (*(unsigned __int8 *)(v11 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v23 = (v12 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = (_QWORD *)swift_allocObject();
  v24[2] = v29;
  v24[3] = a3;
  v24[4] = v30;
  v24[5] = a5;
  sub_1B76A0C30((uint64_t)v14, (uint64_t)v24 + v22, &qword_1EF1774C0);
  *(_QWORD *)((char *)v24 + v23) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  XPCConnectable.synchronousRemoteObjectProxy(retryCount:proxyHandler:)(1, (void (*)(_QWORD *))sub_1B76A018C, (uint64_t)v24, ObjectType, v27);
  swift_release();
  swift_unknownObjectRelease();
  swift_beginAccess();
  sub_1B76638C0(v20, v28, &qword_1EF1774C0);
  return swift_release();
}

void sub_1B769A108(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  uint64_t v48;
  void *v49;
  _QWORD *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t aBlock[6];
  uint64_t v58[4];
  uint64_t v59;
  _OWORD v60[2];
  _OWORD v61[2];
  char v62;

  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B76638C0(a1, (uint64_t)v61, &qword_1ED53B798);
  if ((v62 & 1) != 0)
  {
    v18 = *(void **)&v61[0];
    if (qword_1ED53B4B0 != -1)
      swift_once();
    v19 = sub_1B76DB8B8();
    __swift_project_value_buffer(v19, (uint64_t)qword_1ED53B4D0);
    v20 = v18;
    v21 = v18;
    v22 = sub_1B76DB8A0();
    v23 = sub_1B76DBC90();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      aBlock[0] = v25;
      *(_DWORD *)v24 = 136446210;
      *(_QWORD *)&v60[0] = v18;
      v26 = v18;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B678);
      v27 = sub_1B76DBB10();
      *(_QWORD *)&v60[0] = sub_1B7669B50(v27, v28, aBlock);
      sub_1B76DBD38();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1B7656000, v22, v23, "Unable to obtain remote object proxy. Error: %{public}s", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v25, -1, -1);
      MEMORY[0x1BCCA9590](v24, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    sub_1B765DF30(v61, v60);
    sub_1B765DF40((uint64_t)v60, (uint64_t)aBlock);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B770);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v56 = a4;
      v29 = (void *)v58[0];
      if (qword_1ED53B4B0 != -1)
        swift_once();
      v30 = sub_1B76DB8B8();
      __swift_project_value_buffer(v30, (uint64_t)qword_1ED53B4D0);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v31 = sub_1B76DB8A0();
      v32 = sub_1B76DBCA8();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = swift_slowAlloc();
        v54 = v29;
        v34 = v33;
        v35 = swift_slowAlloc();
        aBlock[0] = v35;
        *(_DWORD *)v34 = 136446466;
        v55 = a7;
        swift_bridgeObjectRetain();
        v58[0] = sub_1B7669B50(a2, a3, aBlock);
        v53 = a6;
        sub_1B76DBD38();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v34 + 12) = 2082;
        swift_bridgeObjectRetain();
        v58[0] = sub_1B7669B50(v56, a5, aBlock);
        a6 = v53;
        a7 = v55;
        sub_1B76DBD38();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1B7656000, v31, v32, "Clearing all settings from store with container “%{public}s” and name “%{public}s”", (uint8_t *)v34, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1BCCA9590](v35, -1, -1);
        v36 = v34;
        v29 = v54;
        MEMORY[0x1BCCA9590](v36, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      sub_1B76638C0(a6, (uint64_t)v17, &qword_1EF1774C0);
      v44 = sub_1B76DB888();
      v45 = *(_QWORD *)(v44 - 8);
      v46 = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v17, 1, v44) != 1)
      {
        v46 = (void *)sub_1B76DB870();
        (*(void (**)(char *, uint64_t))(v45 + 8))(v17, v44);
      }
      v47 = (void *)sub_1B76DBAB0();
      v48 = v56;
      v49 = (void *)sub_1B76DBAB0();
      v50 = (_QWORD *)swift_allocObject();
      v50[2] = a7;
      v50[3] = a2;
      v50[4] = a3;
      v50[5] = v48;
      v50[6] = a5;
      aBlock[4] = (uint64_t)sub_1B76A0ABC;
      aBlock[5] = (uint64_t)v50;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1B7699870;
      aBlock[3] = (uint64_t)&block_descriptor_70;
      v51 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_release();
      objc_msgSend(v29, sel_clearAllSettingsForRecordIdentifier_storeContainer_storeName_replyHandler_, v46, v47, v49, v51);
      _Block_release(v51);
      swift_unknownObjectRelease();

    }
    else
    {
      if (qword_1ED53B4B0 != -1)
        swift_once();
      v37 = sub_1B76DB8B8();
      __swift_project_value_buffer(v37, (uint64_t)qword_1ED53B4D0);
      sub_1B765DF40((uint64_t)v60, (uint64_t)aBlock);
      v38 = sub_1B76DB8A0();
      v39 = sub_1B76DBC90();
      if (os_log_type_enabled(v38, v39))
      {
        v40 = (uint8_t *)swift_slowAlloc();
        v41 = swift_slowAlloc();
        v59 = v41;
        *(_DWORD *)v40 = 136446210;
        sub_1B765DF40((uint64_t)aBlock, (uint64_t)v58);
        v42 = sub_1B76DBB10();
        v58[0] = sub_1B7669B50(v42, v43, &v59);
        sub_1B76DBD38();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
        _os_log_impl(&dword_1B7656000, v38, v39, "Proxy %{public}s does not not conform to ManagedSettingsAgent", v40, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCA9590](v41, -1, -1);
        MEMORY[0x1BCCA9590](v40, -1, -1);

      }
      else
      {

        __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
      }
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v60);
  }
}

void sub_1B769A848(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v13 = swift_projectBox();
  swift_beginAccess();
  sub_1B76A09B4(a1, v13);
  if (a2)
  {
    v14 = a2;
    if (qword_1ED53B4B0 != -1)
      swift_once();
    v15 = sub_1B76DB8B8();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED53B4D0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17 = a2;
    v18 = sub_1B76DB8A0();
    v19 = sub_1B76DBC90();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = swift_slowAlloc();
      v21 = swift_slowAlloc();
      v30 = v21;
      *(_DWORD *)v20 = 136446722;
      swift_bridgeObjectRetain();
      sub_1B7669B50(a4, a5, &v30);
      sub_1B76DBD38();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v20 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_1B7669B50(a6, a7, &v30);
      sub_1B76DBD38();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v20 + 22) = 2082;
      v22 = a2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B678);
      v23 = sub_1B76DBB10();
      sub_1B7669B50(v23, v24, &v30);
      sub_1B76DBD38();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1B7656000, v18, v19, "Unable to clear all settings for store with container “%{public}s” and name “%{public}s.” Error: %{public}s", (uint8_t *)v20, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v21, -1, -1);
      MEMORY[0x1BCCA9590](v20, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

    }
  }
  else
  {
    if (qword_1ED53B4B0 != -1)
      swift_once();
    v25 = sub_1B76DB8B8();
    __swift_project_value_buffer(v25, (uint64_t)qword_1ED53B4D0);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v26 = sub_1B76DB8A0();
    v27 = sub_1B76DBCA8();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      v30 = v29;
      *(_DWORD *)v28 = 136446466;
      swift_bridgeObjectRetain();
      sub_1B7669B50(a4, a5, &v30);
      sub_1B76DBD38();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v28 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_1B7669B50(a6, a7, &v30);
      sub_1B76DBD38();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1B7656000, v26, v27, "Successfully cleared all settings from store with container “%{public}s” and name “%{public}s”", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v29, -1, -1);
      MEMORY[0x1BCCA9590](v28, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_1B769ACEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[24];
  ValueMetadata *v31;
  unint64_t v32;

  v29 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9, v12);
  v13 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (byte_1ED53B740 == 2)
  {
    v31 = &type metadata for Feature.FeatureFlags;
    v32 = sub_1B7658114();
    v14 = sub_1B76DB894();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);
    if ((v14 & 1) == 0)
    {
LABEL_3:
      v15 = sub_1B76DB888();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a5, 1, 1, v15);
    }
  }
  else if ((byte_1ED53B740 & 1) == 0)
  {
    goto LABEL_3;
  }
  v26 = swift_allocBox();
  v18 = v17;
  sub_1B76638C0(a2, v17, &qword_1EF1774C0);
  sub_1B7695184();
  v27 = v19;
  ObjectType = swift_getObjectType();
  v28 = a5;
  v21 = ObjectType;
  sub_1B76638C0(a2, (uint64_t)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1EF1774C0);
  v22 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v23 = (v11 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = (_QWORD *)swift_allocObject();
  v25 = v29;
  v24[2] = a1;
  v24[3] = v25;
  v24[4] = a4;
  sub_1B76A0C30((uint64_t)v13, (uint64_t)v24 + v22, &qword_1EF1774C0);
  *(_QWORD *)((char *)v24 + v23) = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  XPCConnectable.synchronousRemoteObjectProxy(retryCount:proxyHandler:)(1, (void (*)(_QWORD *))sub_1B76A025C, (uint64_t)v24, v21, v27);
  swift_release();
  swift_unknownObjectRelease();
  swift_beginAccess();
  sub_1B76638C0(v18, v28, &qword_1EF1774C0);
  return swift_release();
}

void sub_1B769AF10(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  id v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;
  _QWORD *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t aBlock[6];
  void *v58;
  uint64_t v59;
  _OWORD v60[2];
  _OWORD v61[2];
  char v62;

  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  MEMORY[0x1E0C80A78](v12, v13);
  v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B76638C0(a1, (uint64_t)v61, &qword_1ED53B798);
  if ((v62 & 1) != 0)
  {
    v16 = *(void **)&v61[0];
    if (qword_1ED53B4B0 != -1)
      swift_once();
    v17 = sub_1B76DB8B8();
    __swift_project_value_buffer(v17, (uint64_t)qword_1ED53B4D0);
    v18 = v16;
    v19 = v16;
    v20 = sub_1B76DB8A0();
    v21 = sub_1B76DBC90();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      aBlock[0] = v23;
      *(_DWORD *)v22 = 136446210;
      *(_QWORD *)&v60[0] = v16;
      v24 = v16;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B678);
      v25 = sub_1B76DBB10();
      *(_QWORD *)&v60[0] = sub_1B7669B50(v25, v26, aBlock);
      sub_1B76DBD38();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1B7656000, v20, v21, "Unable to obtain remote object proxy. Error: %{public}s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v23, -1, -1);
      MEMORY[0x1BCCA9590](v22, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    sub_1B765DF30(v61, v60);
    sub_1B765DF40((uint64_t)v60, (uint64_t)aBlock);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B770);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v56 = v58;
      if (qword_1ED53B4B0 != -1)
        swift_once();
      v55 = a5;
      v27 = sub_1B76DB8B8();
      __swift_project_value_buffer(v27, (uint64_t)qword_1ED53B4D0);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v28 = sub_1B76DB8A0();
      v29 = sub_1B76DBCA8();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = swift_slowAlloc();
        v53 = swift_slowAlloc();
        aBlock[0] = v53;
        *(_DWORD *)v30 = 136446466;
        swift_bridgeObjectRetain();
        v31 = sub_1B76DBBE8();
        v54 = a6;
        v32 = v31;
        v34 = v33;
        swift_bridgeObjectRelease();
        v58 = (void *)sub_1B7669B50(v32, v34, aBlock);
        sub_1B76DBD38();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 12) = 2082;
        swift_bridgeObjectRetain();
        v58 = (void *)sub_1B7669B50(a3, a4, aBlock);
        a6 = v54;
        sub_1B76DBD38();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1B7656000, v28, v29, "Deleting stores %{public}s from container “%{public}s”", (uint8_t *)v30, 0x16u);
        v35 = v53;
        swift_arrayDestroy();
        MEMORY[0x1BCCA9590](v35, -1, -1);
        MEMORY[0x1BCCA9590](v30, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      sub_1B769B6B8(a2);
      v43 = objc_allocWithZone(MEMORY[0x1E0C99E60]);
      v44 = (void *)sub_1B76DBBC4();
      swift_bridgeObjectRelease();
      v45 = objc_msgSend(v43, sel_initWithSet_, v44);

      sub_1B76638C0(v55, (uint64_t)v15, &qword_1EF1774C0);
      v46 = sub_1B76DB888();
      v47 = *(_QWORD *)(v46 - 8);
      v48 = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v15, 1, v46) != 1)
      {
        v48 = (void *)sub_1B76DB870();
        (*(void (**)(char *, uint64_t))(v47 + 8))(v15, v46);
      }
      v49 = (void *)sub_1B76DBAB0();
      v50 = (_QWORD *)swift_allocObject();
      v50[2] = a6;
      v50[3] = a2;
      v50[4] = a3;
      v50[5] = a4;
      aBlock[4] = (uint64_t)sub_1B76A0A74;
      aBlock[5] = (uint64_t)v50;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1B7699870;
      aBlock[3] = (uint64_t)&block_descriptor_64;
      v51 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_release();
      objc_msgSend(v56, sel_deleteStores_recordIdentifier_storeContainer_replyHandler_, v45, v48, v49, v51);
      _Block_release(v51);
      swift_unknownObjectRelease();

    }
    else
    {
      if (qword_1ED53B4B0 != -1)
        swift_once();
      v36 = sub_1B76DB8B8();
      __swift_project_value_buffer(v36, (uint64_t)qword_1ED53B4D0);
      sub_1B765DF40((uint64_t)v60, (uint64_t)aBlock);
      v37 = sub_1B76DB8A0();
      v38 = sub_1B76DBC90();
      if (os_log_type_enabled(v37, v38))
      {
        v39 = (uint8_t *)swift_slowAlloc();
        v40 = swift_slowAlloc();
        v59 = v40;
        *(_DWORD *)v39 = 136446210;
        sub_1B765DF40((uint64_t)aBlock, (uint64_t)&v58);
        v41 = sub_1B76DBB10();
        v58 = (void *)sub_1B7669B50(v41, v42, &v59);
        sub_1B76DBD38();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
        _os_log_impl(&dword_1B7656000, v37, v38, "Proxy %{public}s does not not conform to ManagedSettingsAgent", v39, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCA9590](v40, -1, -1);
        MEMORY[0x1BCCA9590](v39, -1, -1);

      }
      else
      {

        __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
      }
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v60);
  }
}

uint64_t sub_1B769B6B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178210);
    v2 = sub_1B76DBDA4();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E8];
  }
  v3 = a1 + 56;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v7 = (unint64_t)(63 - v4) >> 6;
  v8 = v2 + 56;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_28;
    }
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v7)
      goto LABEL_37;
    v14 = *(_QWORD *)(v3 + 8 * v13);
    v15 = v10 + 1;
    if (!v14)
    {
      v15 = v10 + 2;
      if (v10 + 2 >= v7)
        goto LABEL_37;
      v14 = *(_QWORD *)(v3 + 8 * v15);
      if (!v14)
      {
        v15 = v10 + 3;
        if (v10 + 3 >= v7)
          goto LABEL_37;
        v14 = *(_QWORD *)(v3 + 8 * v15);
        if (!v14)
        {
          v15 = v10 + 4;
          if (v10 + 4 >= v7)
            goto LABEL_37;
          v14 = *(_QWORD *)(v3 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v14 - 1) & v14;
    v10 = v15;
LABEL_28:
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    result = sub_1B76DBD80();
    v17 = -1 << *(_BYTE *)(v2 + 32);
    v18 = result & ~v17;
    v19 = v18 >> 6;
    if (((-1 << v18) & ~*(_QWORD *)(v8 + 8 * (v18 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v8 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v20 = 0;
      v21 = (unint64_t)(63 - v17) >> 6;
      do
      {
        if (++v19 == v21 && (v20 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v22 = v19 == v21;
        if (v19 == v21)
          v19 = 0;
        v20 |= v22;
        v23 = *(_QWORD *)(v8 + 8 * v19);
      }
      while (v23 == -1);
      v11 = __clz(__rbit64(~v23)) + (v19 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = *(_QWORD *)(v2 + 48) + 40 * v11;
    *(_OWORD *)v12 = v24;
    *(_OWORD *)(v12 + 16) = v25;
    *(_QWORD *)(v12 + 32) = v26;
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v10 + 5;
  if (v10 + 5 >= v7)
  {
LABEL_37:
    swift_release();
    sub_1B76A0A80();
    return v2;
  }
  v14 = *(_QWORD *)(v3 + 8 * v16);
  if (v14)
  {
    v15 = v10 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v7)
      goto LABEL_37;
    v14 = *(_QWORD *)(v3 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_1B769B9A8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v10 = swift_projectBox();
  swift_beginAccess();
  sub_1B76A09B4(a1, v10);
  if (a2)
  {
    v11 = a2;
    if (qword_1ED53B4B0 != -1)
      swift_once();
    v12 = sub_1B76DB8B8();
    __swift_project_value_buffer(v12, (uint64_t)qword_1ED53B4D0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13 = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = a2;
    v15 = sub_1B76DB8A0();
    v16 = sub_1B76DBC90();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc();
      v33 = swift_slowAlloc();
      v34 = v33;
      *(_DWORD *)v17 = 136446722;
      swift_bridgeObjectRetain();
      v18 = a5;
      v19 = sub_1B76DBBE8();
      v21 = v20;
      swift_bridgeObjectRelease();
      sub_1B7669B50(v19, v21, &v34);
      sub_1B76DBD38();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_1B7669B50(v18, a6, &v34);
      sub_1B76DBD38();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v17 + 22) = 2082;
      v22 = a2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B678);
      v23 = sub_1B76DBB10();
      sub_1B7669B50(v23, v24, &v34);
      sub_1B76DBD38();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1B7656000, v15, v16, "Unable to delete stores %{public}s from container “%{public}s.” Error: %{public}s", (uint8_t *)v17, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v33, -1, -1);
      MEMORY[0x1BCCA9590](v17, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

    }
  }
  else
  {
    if (qword_1ED53B4B0 != -1)
      swift_once();
    v25 = sub_1B76DB8B8();
    __swift_project_value_buffer(v25, (uint64_t)qword_1ED53B4D0);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v26 = sub_1B76DB8A0();
    v27 = sub_1B76DBCA8();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      v34 = v29;
      *(_DWORD *)v28 = 136446466;
      swift_bridgeObjectRetain();
      v30 = sub_1B76DBBE8();
      v32 = v31;
      swift_bridgeObjectRelease();
      sub_1B7669B50(v30, v32, &v34);
      sub_1B76DBD38();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_1B7669B50(a5, a6, &v34);
      sub_1B76DBD38();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1B7656000, v26, v27, "Successfully deleted stores %{public}s from container “%{public}s”", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v29, -1, -1);
      MEMORY[0x1BCCA9590](v28, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
  }
}

unint64_t sub_1B769BEA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;
  uint64_t v29;
  _BYTE v30[24];
  ValueMetadata *v31;
  unint64_t v32;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10, v13);
  v14 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (byte_1ED53B740 != 2)
  {
    if ((byte_1ED53B740 & 1) == 0)
      return sub_1B765E41C(MEMORY[0x1E0DEE9D8]);
LABEL_5:
    v17 = swift_allocObject();
    v27 = a4;
    v18 = v17;
    v19 = a2;
    *(_QWORD *)(v17 + 16) = MEMORY[0x1E0DEE9E0];
    v20 = (uint64_t *)(v17 + 16);
    sub_1B7695184();
    v29 = v21;
    ObjectType = swift_getObjectType();
    sub_1B76638C0(a1, (uint64_t)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1EF1774C0);
    v22 = (*(unsigned __int8 *)(v11 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v23 = (v12 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
    v24 = (_QWORD *)swift_allocObject();
    v24[2] = v19;
    v24[3] = a3;
    v24[4] = v27;
    v24[5] = a5;
    sub_1B76A0C30((uint64_t)v14, (uint64_t)v24 + v22, &qword_1EF1774C0);
    *(_QWORD *)((char *)v24 + v23) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    XPCConnectable.synchronousRemoteObjectProxy(retryCount:proxyHandler:)(1, (void (*)(_QWORD *))sub_1B76A03A4, (uint64_t)v24, ObjectType, v29);
    swift_release();
    swift_unknownObjectRelease();
    swift_beginAccess();
    v16 = *v20;
    swift_bridgeObjectRetain();
    swift_release();
    return v16;
  }
  v31 = &type metadata for Feature.FeatureFlags;
  v32 = sub_1B7658114();
  v15 = sub_1B76DB894();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);
  if ((v15 & 1) != 0)
    goto LABEL_5;
  return sub_1B765E41C(MEMORY[0x1E0DEE9D8]);
}

void sub_1B769C0B8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  uint64_t v48;
  void *v49;
  _QWORD *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t aBlock[6];
  uint64_t v58[4];
  uint64_t v59;
  _OWORD v60[2];
  _OWORD v61[2];
  char v62;

  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B76638C0(a1, (uint64_t)v61, &qword_1ED53B798);
  if ((v62 & 1) != 0)
  {
    v18 = *(void **)&v61[0];
    if (qword_1ED53B4B0 != -1)
      swift_once();
    v19 = sub_1B76DB8B8();
    __swift_project_value_buffer(v19, (uint64_t)qword_1ED53B4D0);
    v20 = v18;
    v21 = v18;
    v22 = sub_1B76DB8A0();
    v23 = sub_1B76DBC90();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      aBlock[0] = v25;
      *(_DWORD *)v24 = 136446210;
      *(_QWORD *)&v60[0] = v18;
      v26 = v18;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B678);
      v27 = sub_1B76DBB10();
      *(_QWORD *)&v60[0] = sub_1B7669B50(v27, v28, aBlock);
      sub_1B76DBD38();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1B7656000, v22, v23, "Unable to obtain remote object proxy. Error: %{public}s", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v25, -1, -1);
      MEMORY[0x1BCCA9590](v24, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    sub_1B765DF30(v61, v60);
    sub_1B765DF40((uint64_t)v60, (uint64_t)aBlock);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B770);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v56 = a4;
      v29 = (void *)v58[0];
      if (qword_1ED53B4B0 != -1)
        swift_once();
      v30 = sub_1B76DB8B8();
      __swift_project_value_buffer(v30, (uint64_t)qword_1ED53B4D0);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v31 = sub_1B76DB8A0();
      v32 = sub_1B76DBCA8();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = swift_slowAlloc();
        v54 = v29;
        v34 = v33;
        v35 = swift_slowAlloc();
        aBlock[0] = v35;
        *(_DWORD *)v34 = 136446466;
        v55 = a7;
        swift_bridgeObjectRetain();
        v58[0] = sub_1B7669B50(a2, a3, aBlock);
        v53 = a6;
        sub_1B76DBD38();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v34 + 12) = 2082;
        swift_bridgeObjectRetain();
        v58[0] = sub_1B7669B50(v56, a5, aBlock);
        a6 = v53;
        a7 = v55;
        sub_1B76DBD38();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1B7656000, v31, v32, "Getting store properties from store with container “%{public}s” and name “%{public}s”", (uint8_t *)v34, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1BCCA9590](v35, -1, -1);
        v36 = v34;
        v29 = v54;
        MEMORY[0x1BCCA9590](v36, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      sub_1B76638C0(a6, (uint64_t)v17, &qword_1EF1774C0);
      v44 = sub_1B76DB888();
      v45 = *(_QWORD *)(v44 - 8);
      v46 = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v17, 1, v44) != 1)
      {
        v46 = (void *)sub_1B76DB870();
        (*(void (**)(char *, uint64_t))(v45 + 8))(v17, v44);
      }
      v47 = (void *)sub_1B76DBAB0();
      v48 = v56;
      v49 = (void *)sub_1B76DBAB0();
      v50 = (_QWORD *)swift_allocObject();
      v50[2] = a2;
      v50[3] = a3;
      v50[4] = v48;
      v50[5] = a5;
      v50[6] = a7;
      aBlock[4] = (uint64_t)sub_1B76A0A30;
      aBlock[5] = (uint64_t)v50;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1B7697D2C;
      aBlock[3] = (uint64_t)&block_descriptor_58;
      v51 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_release();
      objc_msgSend(v29, sel_getStorePropertiesForRecordIdentifier_storeContainer_storeName_replyHandler_, v46, v47, v49, v51);
      _Block_release(v51);
      swift_unknownObjectRelease();

    }
    else
    {
      if (qword_1ED53B4B0 != -1)
        swift_once();
      v37 = sub_1B76DB8B8();
      __swift_project_value_buffer(v37, (uint64_t)qword_1ED53B4D0);
      sub_1B765DF40((uint64_t)v60, (uint64_t)aBlock);
      v38 = sub_1B76DB8A0();
      v39 = sub_1B76DBC90();
      if (os_log_type_enabled(v38, v39))
      {
        v40 = (uint8_t *)swift_slowAlloc();
        v41 = swift_slowAlloc();
        v59 = v41;
        *(_DWORD *)v40 = 136446210;
        sub_1B765DF40((uint64_t)aBlock, (uint64_t)v58);
        v42 = sub_1B76DBB10();
        v58[0] = sub_1B7669B50(v42, v43, &v59);
        sub_1B76DBD38();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
        _os_log_impl(&dword_1B7656000, v38, v39, "Proxy %{public}s does not not conform to ManagedSettingsAgent", v40, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCA9590](v41, -1, -1);
        MEMORY[0x1BCCA9590](v40, -1, -1);

      }
      else
      {

        __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
      }
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v60);
  }
}

void sub_1B769C7F8(uint64_t a1, id a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *oslog;
  uint64_t v27[3];

  if (a2)
  {
    v11 = a2;
    if (qword_1ED53B4B0 != -1)
      swift_once();
    v12 = sub_1B76DB8B8();
    __swift_project_value_buffer(v12, (uint64_t)qword_1ED53B4D0);
    v13 = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    oslog = sub_1B76DB8A0();
    v15 = sub_1B76DBC90();
    if (os_log_type_enabled(oslog, v15))
    {
      v16 = swift_slowAlloc();
      v17 = swift_slowAlloc();
      v27[0] = v17;
      *(_DWORD *)v16 = 136446722;
      swift_bridgeObjectRetain();
      sub_1B7669B50(a3, a4, v27);
      sub_1B76DBD38();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v16 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_1B7669B50(a5, a6, v27);
      sub_1B76DBD38();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v16 + 22) = 2082;
      v18 = a2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B678);
      v19 = sub_1B76DBB10();
      sub_1B7669B50(v19, v20, v27);
      sub_1B76DBD38();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1B7656000, oslog, v15, "Unable to get store properties from store with container “%{public}s” and name “%{public}s.” Error: %{public}s", (uint8_t *)v16, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v17, -1, -1);
      MEMORY[0x1BCCA9590](v16, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

    }
  }
  else
  {
    if (a1)
    {
      sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
      sub_1B76DBA20();
    }
    if (qword_1ED53B4B0 != -1)
      swift_once();
    v21 = sub_1B76DB8B8();
    __swift_project_value_buffer(v21, (uint64_t)qword_1ED53B4D0);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v22 = sub_1B76DB8A0();
    v23 = sub_1B76DBC9C();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc();
      v25 = swift_slowAlloc();
      v27[0] = v25;
      *(_DWORD *)v24 = 136446466;
      swift_bridgeObjectRetain();
      sub_1B7669B50(a3, a4, v27);
      sub_1B76DBD38();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v24 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_1B7669B50(a5, a6, v27);
      sub_1B76DBD38();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1B7656000, v22, v23, "Unable to get store properties from store with container “%{public}s” and name “%{public}s.” Error: Unknown", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v25, -1, -1);
      MEMORY[0x1BCCA9590](v24, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_1B769CF4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[24];
  ValueMetadata *v35;
  unint64_t v36;

  v32 = a5;
  v33 = a6;
  v31 = a3;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11, v14);
  v15 = (char *)&ObjectType - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (byte_1ED53B740 == 2)
  {
    v35 = &type metadata for Feature.FeatureFlags;
    v36 = sub_1B7658114();
    v16 = sub_1B76DB894();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
    if ((v16 & 1) == 0)
    {
LABEL_3:
      v17 = sub_1B76DB888();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a7, 1, 1, v17);
    }
  }
  else if ((byte_1ED53B740 & 1) == 0)
  {
    goto LABEL_3;
  }
  v19 = swift_allocBox();
  v30 = a7;
  v21 = v20;
  sub_1B76638C0(a2, v20, &qword_1EF1774C0);
  sub_1B7695184();
  v29 = v22;
  ObjectType = swift_getObjectType();
  sub_1B76638C0(a2, (uint64_t)&ObjectType - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1EF1774C0);
  v23 = (*(unsigned __int8 *)(v12 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v24 = (v13 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = (_QWORD *)swift_allocObject();
  v26 = v31;
  v25[2] = a1;
  v25[3] = v26;
  v27 = v32;
  v25[4] = a4;
  v25[5] = v27;
  v25[6] = v33;
  sub_1B76A0C30((uint64_t)v15, (uint64_t)v25 + v23, &qword_1EF1774C0);
  *(_QWORD *)((char *)v25 + v24) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  XPCConnectable.synchronousRemoteObjectProxy(retryCount:proxyHandler:)(1, (void (*)(_QWORD *))sub_1B76A04E8, (uint64_t)v25, ObjectType, v29);
  swift_release();
  swift_unknownObjectRelease();
  swift_beginAccess();
  sub_1B76638C0(v21, v30, &qword_1EF1774C0);
  return swift_release();
}

void sub_1B769D17C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;
  void *v54;
  _QWORD *v55;
  void *v56;
  _QWORD v57[2];
  int v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t aBlock[6];
  void *v64;
  uint64_t v65;
  _OWORD v66[2];
  _OWORD v67[2];
  char v68;

  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  MEMORY[0x1E0C80A78](v16, v17);
  v19 = (char *)v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B76638C0(a1, (uint64_t)v67, &qword_1ED53B798);
  if ((v68 & 1) != 0)
  {
    v20 = *(void **)&v67[0];
    if (qword_1ED53B4B0 != -1)
      swift_once();
    v21 = sub_1B76DB8B8();
    __swift_project_value_buffer(v21, (uint64_t)qword_1ED53B4D0);
    v22 = v20;
    v23 = v20;
    v24 = sub_1B76DB8A0();
    v25 = sub_1B76DBC90();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      aBlock[0] = v27;
      *(_DWORD *)v26 = 136446210;
      *(_QWORD *)&v66[0] = v20;
      v28 = v20;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B678);
      v29 = sub_1B76DBB10();
      *(_QWORD *)&v66[0] = sub_1B7669B50(v29, v30, aBlock);
      sub_1B76DBD38();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1B7656000, v24, v25, "Unable to obtain remote object proxy. Error: %{public}s", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v27, -1, -1);
      MEMORY[0x1BCCA9590](v26, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    sub_1B765DF30(v67, v66);
    sub_1B765DF40((uint64_t)v66, (uint64_t)aBlock);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B770);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v62 = a8;
      v61 = v64;
      if (qword_1ED53B4B0 != -1)
        swift_once();
      v31 = sub_1B76DB8B8();
      __swift_project_value_buffer(v31, (uint64_t)qword_1ED53B4D0);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v32 = sub_1B76DB8A0();
      v33 = sub_1B76DBCA8();
      v34 = v33;
      if (os_log_type_enabled(v32, v33))
      {
        v35 = swift_slowAlloc();
        v60 = a7;
        v36 = v35;
        v59 = swift_slowAlloc();
        aBlock[0] = v59;
        *(_DWORD *)v36 = 136446722;
        v57[1] = v36 + 4;
        sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
        swift_bridgeObjectRetain();
        v37 = sub_1B76DBA38();
        v58 = v34;
        v39 = v38;
        swift_bridgeObjectRelease();
        v64 = (void *)sub_1B7669B50(v37, v39, aBlock);
        sub_1B76DBD38();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v36 + 12) = 2082;
        swift_bridgeObjectRetain();
        v64 = (void *)sub_1B7669B50(a3, a4, aBlock);
        sub_1B76DBD38();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v36 + 22) = 2082;
        swift_bridgeObjectRetain();
        v64 = (void *)sub_1B7669B50(a5, a6, aBlock);
        sub_1B76DBD38();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1B7656000, v32, (os_log_type_t)v58, "Updating store properties to “%{public}s” in store with container “%{public}s” and name “%{public}s”", (uint8_t *)v36, 0x20u);
        v40 = v59;
        swift_arrayDestroy();
        MEMORY[0x1BCCA9590](v40, -1, -1);
        v41 = v36;
        a7 = v60;
        MEMORY[0x1BCCA9590](v41, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
      v49 = (void *)sub_1B76DBA14();
      sub_1B76638C0(a7, (uint64_t)v19, &qword_1EF1774C0);
      v50 = sub_1B76DB888();
      v51 = *(_QWORD *)(v50 - 8);
      v52 = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v19, 1, v50) != 1)
      {
        v52 = (void *)sub_1B76DB870();
        (*(void (**)(char *, uint64_t))(v51 + 8))(v19, v50);
      }
      v53 = (void *)sub_1B76DBAB0();
      v54 = (void *)sub_1B76DBAB0();
      v55 = (_QWORD *)swift_allocObject();
      v55[2] = v62;
      v55[3] = a2;
      v55[4] = a3;
      v55[5] = a4;
      v55[6] = a5;
      v55[7] = a6;
      aBlock[4] = (uint64_t)sub_1B76A09A4;
      aBlock[5] = (uint64_t)v55;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1B7699870;
      aBlock[3] = (uint64_t)&block_descriptor_52;
      v56 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_release();
      objc_msgSend(v61, sel_updateStoreProperties_recordIdentifier_storeContainer_storeName_replyHandler_, v49, v52, v53, v54, v56);
      _Block_release(v56);
      swift_unknownObjectRelease();

    }
    else
    {
      if (qword_1ED53B4B0 != -1)
        swift_once();
      v42 = sub_1B76DB8B8();
      __swift_project_value_buffer(v42, (uint64_t)qword_1ED53B4D0);
      sub_1B765DF40((uint64_t)v66, (uint64_t)aBlock);
      v43 = sub_1B76DB8A0();
      v44 = sub_1B76DBC90();
      if (os_log_type_enabled(v43, v44))
      {
        v45 = (uint8_t *)swift_slowAlloc();
        v46 = swift_slowAlloc();
        v65 = v46;
        *(_DWORD *)v45 = 136446210;
        sub_1B765DF40((uint64_t)aBlock, (uint64_t)&v64);
        v47 = sub_1B76DBB10();
        v64 = (void *)sub_1B7669B50(v47, v48, &v65);
        sub_1B76DBD38();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
        _os_log_impl(&dword_1B7656000, v43, v44, "Proxy %{public}s does not not conform to ManagedSettingsAgent", v45, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCA9590](v46, -1, -1);
        MEMORY[0x1BCCA9590](v45, -1, -1);

      }
      else
      {

        __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
      }
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v66);
  }
}

void sub_1B769D9C8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8)
{
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  os_log_type_t type;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v14 = swift_projectBox();
  swift_beginAccess();
  sub_1B76A09B4(a1, v14);
  if (a2)
  {
    v15 = a2;
    if (qword_1ED53B4B0 != -1)
      swift_once();
    v16 = sub_1B76DB8B8();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ED53B4D0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17 = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18 = a2;
    v19 = sub_1B76DB8A0();
    v20 = sub_1B76DBC90();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc();
      v36 = swift_slowAlloc();
      v38 = v36;
      *(_DWORD *)v21 = 136446978;
      sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
      type = v20;
      swift_bridgeObjectRetain();
      v22 = sub_1B76DBA38();
      v24 = v23;
      swift_bridgeObjectRelease();
      sub_1B7669B50(v22, v24, &v38);
      sub_1B76DBD38();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_1B7669B50(a5, a6, &v38);
      sub_1B76DBD38();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v21 + 22) = 2082;
      swift_bridgeObjectRetain();
      sub_1B7669B50(a7, a8, &v38);
      sub_1B76DBD38();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v21 + 32) = 2082;
      v25 = a2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B678);
      v26 = sub_1B76DBB10();
      sub_1B7669B50(v26, v27, &v38);
      sub_1B76DBD38();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1B7656000, v19, type, "Unable to update store properties to “%{public}s” in store with container “%{public}s” and name “%{public}s.” Error: %{public}s", (uint8_t *)v21, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v36, -1, -1);
      MEMORY[0x1BCCA9590](v21, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

    }
  }
  else
  {
    if (qword_1ED53B4B0 != -1)
      swift_once();
    v28 = sub_1B76DB8B8();
    __swift_project_value_buffer(v28, (uint64_t)qword_1ED53B4D0);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v29 = sub_1B76DB8A0();
    v30 = sub_1B76DBCA8();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc();
      v37 = swift_slowAlloc();
      v38 = v37;
      *(_DWORD *)v31 = 136446722;
      sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
      swift_bridgeObjectRetain();
      v32 = sub_1B76DBA38();
      v34 = v33;
      swift_bridgeObjectRelease();
      sub_1B7669B50(v32, v34, &v38);
      sub_1B76DBD38();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_1B7669B50(a5, a6, &v38);
      sub_1B76DBD38();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v31 + 22) = 2082;
      swift_bridgeObjectRetain();
      sub_1B7669B50(a7, a8, &v38);
      sub_1B76DBD38();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1B7656000, v29, v30, "Successfully updated store properties to “%{public}s” in store with container “%{public}s” and name “%{public}s”", (uint8_t *)v31, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v37, -1, -1);
      MEMORY[0x1BCCA9590](v31, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_1B769DFD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[24];
  ValueMetadata *v24;
  unint64_t v25;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6, v9);
  v10 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (byte_1ED53B740 != 2)
  {
    if ((byte_1ED53B740 & 1) == 0)
      return MEMORY[0x1E0DEE9E8];
LABEL_5:
    v21 = a2;
    v13 = MEMORY[0x1E0DEE9E8];
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = v13;
    sub_1B7695184();
    v22 = v15;
    ObjectType = swift_getObjectType();
    sub_1B76638C0(a1, (uint64_t)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1EF1774C0);
    v17 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v18 = (v8 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = v21;
    *(_QWORD *)(v19 + 24) = a3;
    sub_1B76A0C30((uint64_t)v10, v19 + v17, &qword_1EF1774C0);
    *(_QWORD *)(v19 + v18) = v14;
    swift_bridgeObjectRetain();
    swift_retain();
    XPCConnectable.synchronousRemoteObjectProxy(retryCount:proxyHandler:)(1, (void (*)(_QWORD *))sub_1B76A0604, v19, ObjectType, v22);
    swift_release();
    swift_unknownObjectRelease();
    swift_beginAccess();
    v12 = *(_QWORD *)(v14 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    return v12;
  }
  v24 = &type metadata for Feature.FeatureFlags;
  v25 = sub_1B7658114();
  v11 = sub_1B76DB894();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
  if ((v11 & 1) != 0)
    goto LABEL_5;
  return MEMORY[0x1E0DEE9E8];
}

void sub_1B769E1CC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  void *v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  _QWORD *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t aBlock[6];
  uint64_t v50[4];
  uint64_t v51;
  _OWORD v52[2];
  _OWORD v53[2];
  char v54;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B76638C0(a1, (uint64_t)v53, &qword_1ED53B798);
  if ((v54 & 1) != 0)
  {
    v14 = *(void **)&v53[0];
    if (qword_1ED53B4B0 != -1)
      swift_once();
    v15 = sub_1B76DB8B8();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED53B4D0);
    v16 = v14;
    v17 = v14;
    v18 = sub_1B76DB8A0();
    v19 = sub_1B76DBC90();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      aBlock[0] = v21;
      *(_DWORD *)v20 = 136446210;
      *(_QWORD *)&v52[0] = v14;
      v22 = v14;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B678);
      v23 = sub_1B76DBB10();
      *(_QWORD *)&v52[0] = sub_1B7669B50(v23, v24, aBlock);
      sub_1B76DBD38();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1B7656000, v18, v19, "Unable to obtain remote object proxy. Error: %{public}s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v21, -1, -1);
      MEMORY[0x1BCCA9590](v20, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    sub_1B765DF30(v53, v52);
    sub_1B765DF40((uint64_t)v52, (uint64_t)aBlock);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B770);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v25 = (void *)v50[0];
      if (qword_1ED53B4B0 != -1)
        swift_once();
      v26 = sub_1B76DB8B8();
      __swift_project_value_buffer(v26, (uint64_t)qword_1ED53B4D0);
      swift_bridgeObjectRetain_n();
      v27 = sub_1B76DB8A0();
      v28 = sub_1B76DBCA8();
      if (os_log_type_enabled(v27, v28))
      {
        v47 = a4;
        v29 = swift_slowAlloc();
        v48 = a5;
        v30 = (uint8_t *)v29;
        v31 = swift_slowAlloc();
        aBlock[0] = v31;
        *(_DWORD *)v30 = 136446210;
        swift_bridgeObjectRetain();
        v50[0] = sub_1B7669B50(a2, a3, aBlock);
        a4 = v47;
        sub_1B76DBD38();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1B7656000, v27, v28, "Getting stores for container “%{public}s”", v30, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCA9590](v31, -1, -1);
        v32 = v30;
        a5 = v48;
        MEMORY[0x1BCCA9590](v32, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sub_1B76638C0(a4, (uint64_t)v13, &qword_1EF1774C0);
      v40 = sub_1B76DB888();
      v41 = *(_QWORD *)(v40 - 8);
      v42 = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v13, 1, v40) != 1)
      {
        v42 = (void *)sub_1B76DB870();
        (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v40);
      }
      v43 = (void *)sub_1B76DBAB0();
      v44 = (_QWORD *)swift_allocObject();
      v44[2] = a2;
      v44[3] = a3;
      v44[4] = a5;
      aBlock[4] = (uint64_t)sub_1B76A0918;
      aBlock[5] = (uint64_t)v44;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1B7697D2C;
      aBlock[3] = (uint64_t)&block_descriptor_46;
      v45 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_release();
      objc_msgSend(v25, sel_storeNamesForRecordIdentifier_storeContainer_replyHandler_, v42, v43, v45);
      _Block_release(v45);
      swift_unknownObjectRelease();

    }
    else
    {
      if (qword_1ED53B4B0 != -1)
        swift_once();
      v33 = sub_1B76DB8B8();
      __swift_project_value_buffer(v33, (uint64_t)qword_1ED53B4D0);
      sub_1B765DF40((uint64_t)v52, (uint64_t)aBlock);
      v34 = sub_1B76DB8A0();
      v35 = sub_1B76DBC90();
      if (os_log_type_enabled(v34, v35))
      {
        v36 = (uint8_t *)swift_slowAlloc();
        v37 = swift_slowAlloc();
        v51 = v37;
        *(_DWORD *)v36 = 136446210;
        sub_1B765DF40((uint64_t)aBlock, (uint64_t)v50);
        v38 = sub_1B76DBB10();
        v50[0] = sub_1B7669B50(v38, v39, &v51);
        sub_1B76DBD38();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
        _os_log_impl(&dword_1B7656000, v34, v35, "Proxy %{public}s does not not conform to ManagedSettingsAgent", v36, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCA9590](v37, -1, -1);
        MEMORY[0x1BCCA9590](v36, -1, -1);

      }
      else
      {

        __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
      }
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v52);
  }
}

void sub_1B769E86C(uint64_t a1, id a2, uint64_t a3, unint64_t a4)
{
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  NSObject *oslog;
  uint64_t v23;

  if (a2)
  {
    v7 = a2;
    if (qword_1ED53B4B0 != -1)
      swift_once();
    v8 = sub_1B76DB8B8();
    __swift_project_value_buffer(v8, (uint64_t)qword_1ED53B4D0);
    v9 = a2;
    swift_bridgeObjectRetain();
    v10 = a2;
    swift_bridgeObjectRetain();
    oslog = sub_1B76DB8A0();
    v11 = sub_1B76DBC90();
    if (os_log_type_enabled(oslog, v11))
    {
      v12 = swift_slowAlloc();
      v13 = swift_slowAlloc();
      v23 = v13;
      *(_DWORD *)v12 = 136446466;
      swift_bridgeObjectRetain();
      sub_1B7669B50(a3, a4, &v23);
      sub_1B76DBD38();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v12 + 12) = 2082;
      v14 = a2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B678);
      v15 = sub_1B76DBB10();
      sub_1B7669B50(v15, v16, &v23);
      sub_1B76DBD38();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1B7656000, oslog, v11, "Unable to get stores for container “%{public}s.” Error: %{public}s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v13, -1, -1);
      MEMORY[0x1BCCA9590](v12, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    if (a1)
    {
      v23 = 0;
      sub_1B76DBBD0();
    }
    if (qword_1ED53B4B0 != -1)
      swift_once();
    v17 = sub_1B76DB8B8();
    __swift_project_value_buffer(v17, (uint64_t)qword_1ED53B4D0);
    swift_bridgeObjectRetain_n();
    v18 = sub_1B76DB8A0();
    v19 = sub_1B76DBC9C();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v23 = v21;
      *(_DWORD *)v20 = 136446210;
      swift_bridgeObjectRetain();
      sub_1B7669B50(a3, a4, &v23);
      sub_1B76DBD38();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1B7656000, v18, v19, "Unable to get stores for container “%{public}s.” Error: Unknown", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v21, -1, -1);
      MEMORY[0x1BCCA9590](v20, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_1B769EFF8(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_1B769F06C(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  _QWORD *v11;
  _QWORD v13[5];

  swift_beginAccess();
  if (byte_1ED53B740 != 2)
  {
    if ((byte_1ED53B740 & 1) == 0)
      return MEMORY[0x1E0DEE9E8];
LABEL_5:
    v6 = MEMORY[0x1E0DEE9E8];
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v6;
    sub_1B7695184();
    v9 = v8;
    ObjectType = swift_getObjectType();
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = a1;
    v11[3] = a2;
    v11[4] = v7;
    swift_bridgeObjectRetain();
    swift_retain();
    XPCConnectable.synchronousRemoteObjectProxy(retryCount:proxyHandler:)(1, (void (*)(_QWORD *))sub_1B76A0660, (uint64_t)v11, ObjectType, v9);
    swift_unknownObjectRelease();
    swift_release();
    swift_beginAccess();
    v5 = *(_QWORD *)(v7 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    return v5;
  }
  v13[3] = &type metadata for Feature.FeatureFlags;
  v13[4] = sub_1B7658114();
  v4 = sub_1B76DB894();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
  if ((v4 & 1) != 0)
    goto LABEL_5;
  return MEMORY[0x1E0DEE9E8];
}

void sub_1B769F1D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void *v31;
  _QWORD *v32;
  void *v33;
  uint64_t aBlock[6];
  uint64_t v35[4];
  uint64_t v36;
  _OWORD v37[2];
  _OWORD v38[2];
  char v39;

  sub_1B76638C0(a1, (uint64_t)v38, &qword_1ED53B798);
  if ((v39 & 1) != 0)
  {
    v7 = *(void **)&v38[0];
    if (qword_1ED53B4B0 != -1)
      swift_once();
    v8 = sub_1B76DB8B8();
    __swift_project_value_buffer(v8, (uint64_t)qword_1ED53B4D0);
    v9 = v7;
    v10 = v7;
    v11 = sub_1B76DB8A0();
    v12 = sub_1B76DBC90();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      aBlock[0] = v14;
      *(_DWORD *)v13 = 136446210;
      *(_QWORD *)&v37[0] = v7;
      v15 = v7;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B678);
      v16 = sub_1B76DBB10();
      *(_QWORD *)&v37[0] = sub_1B7669B50(v16, v17, aBlock);
      sub_1B76DBD38();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1B7656000, v11, v12, "Unable to obtain remote object proxy. Error: %{public}s", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v14, -1, -1);
      MEMORY[0x1BCCA9590](v13, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    sub_1B765DF30(v38, v37);
    sub_1B765DF40((uint64_t)v37, (uint64_t)aBlock);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B770);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v18 = (void *)v35[0];
      if (qword_1ED53B4B0 != -1)
        swift_once();
      v19 = sub_1B76DB8B8();
      __swift_project_value_buffer(v19, (uint64_t)qword_1ED53B4D0);
      swift_bridgeObjectRetain_n();
      v20 = sub_1B76DB8A0();
      v21 = sub_1B76DBCA8();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        v23 = swift_slowAlloc();
        aBlock[0] = v23;
        *(_DWORD *)v22 = 136446210;
        swift_bridgeObjectRetain();
        v35[0] = sub_1B7669B50(a2, a3, aBlock);
        sub_1B76DBD38();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1B7656000, v20, v21, "Getting responsible clients for setting “%{public}s”", v22, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCA9590](v23, -1, -1);
        MEMORY[0x1BCCA9590](v22, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v31 = (void *)sub_1B76DBAB0();
      v32 = (_QWORD *)swift_allocObject();
      v32[2] = a2;
      v32[3] = a3;
      v32[4] = a4;
      aBlock[4] = (uint64_t)sub_1B76A08C4;
      aBlock[5] = (uint64_t)v32;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1B769FD70;
      aBlock[3] = (uint64_t)&block_descriptor_4;
      v33 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_release();
      objc_msgSend(v18, sel_responsibleClientsForSetting_replyHandler_, v31, v33);
      _Block_release(v33);
      swift_unknownObjectRelease();

    }
    else
    {
      if (qword_1ED53B4B0 != -1)
        swift_once();
      v24 = sub_1B76DB8B8();
      __swift_project_value_buffer(v24, (uint64_t)qword_1ED53B4D0);
      sub_1B765DF40((uint64_t)v37, (uint64_t)aBlock);
      v25 = sub_1B76DB8A0();
      v26 = sub_1B76DBC90();
      if (os_log_type_enabled(v25, v26))
      {
        v27 = (uint8_t *)swift_slowAlloc();
        v28 = swift_slowAlloc();
        v36 = v28;
        *(_DWORD *)v27 = 136446210;
        sub_1B765DF40((uint64_t)aBlock, (uint64_t)v35);
        v29 = sub_1B76DBB10();
        v35[0] = sub_1B7669B50(v29, v30, &v36);
        sub_1B76DBD38();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
        _os_log_impl(&dword_1B7656000, v25, v26, "Proxy %{public}s does not not conform to ManagedSettingsAgent", v27, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCA9590](v28, -1, -1);
        MEMORY[0x1BCCA9590](v27, -1, -1);

      }
      else
      {

        __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
      }
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
  }
}

void sub_1B769F7A8(uint64_t a1, id a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  os_log_type_t v30;
  uint64_t v31;
  NSObject *oslog;
  uint64_t v33[3];
  uint64_t v34;

  if (!a2)
  {
    if (a1)
    {
      v19 = (_QWORD *)(a5 + 16);
      swift_beginAccess();
      *v19 = a1;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      if (qword_1ED53B4B0 != -1)
        swift_once();
      v20 = sub_1B76DB8B8();
      __swift_project_value_buffer(v20, (uint64_t)qword_1ED53B4D0);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v21 = sub_1B76DB8A0();
      v22 = sub_1B76DBCA8();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = swift_slowAlloc();
        v24 = swift_slowAlloc();
        v34 = v24;
        *(_DWORD *)v23 = 136446466;
        swift_bridgeObjectRetain();
        v25 = sub_1B76DBBE8();
        v27 = v26;
        swift_bridgeObjectRelease();
        sub_1B7669B50(v25, v27, &v34);
        sub_1B76DBD38();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v23 + 12) = 2082;
        swift_bridgeObjectRetain();
        sub_1B7669B50(a3, a4, &v34);
        sub_1B76DBD38();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1B7656000, v21, v22, "Sucessfully got responsible clients %{public}s for setting “%{public}s”", (uint8_t *)v23, 0x16u);
        swift_arrayDestroy();
        v28 = v24;
LABEL_16:
        MEMORY[0x1BCCA9590](v28, -1, -1);
        MEMORY[0x1BCCA9590](v23, -1, -1);

        return;
      }

      swift_bridgeObjectRelease_n();
    }
    else
    {
      if (qword_1ED53B4B0 != -1)
        swift_once();
      v29 = sub_1B76DB8B8();
      __swift_project_value_buffer(v29, (uint64_t)qword_1ED53B4D0);
      swift_bridgeObjectRetain_n();
      v21 = sub_1B76DB8A0();
      v30 = sub_1B76DBC9C();
      if (os_log_type_enabled(v21, v30))
      {
        v23 = swift_slowAlloc();
        v31 = swift_slowAlloc();
        v33[0] = v31;
        *(_DWORD *)v23 = 136446210;
        swift_bridgeObjectRetain();
        v34 = sub_1B7669B50(a3, a4, v33);
        sub_1B76DBD38();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1B7656000, v21, v30, "Unable to get responsible clients for setting “%{public}s.” Error: Unknown", (uint8_t *)v23, 0xCu);
        swift_arrayDestroy();
        v28 = v31;
        goto LABEL_16;
      }

    }
    swift_bridgeObjectRelease_n();
    return;
  }
  v8 = a2;
  if (qword_1ED53B4B0 != -1)
    swift_once();
  v9 = sub_1B76DB8B8();
  __swift_project_value_buffer(v9, (uint64_t)qword_1ED53B4D0);
  v10 = a2;
  swift_bridgeObjectRetain();
  v11 = a2;
  swift_bridgeObjectRetain();
  oslog = sub_1B76DB8A0();
  v12 = sub_1B76DBC90();
  if (os_log_type_enabled(oslog, v12))
  {
    v13 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    v33[0] = v14;
    *(_DWORD *)v13 = 136446466;
    swift_bridgeObjectRetain();
    v34 = sub_1B7669B50(a3, a4, v33);
    sub_1B76DBD38();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v13 + 12) = 2082;
    v34 = (uint64_t)a2;
    v15 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B678);
    v16 = sub_1B76DBB10();
    v34 = sub_1B7669B50(v16, v17, v33);
    sub_1B76DBD38();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1B7656000, oslog, v12, "Unable to get responsible clients for setting “%{public}s.” Error: %{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCA9590](v14, -1, -1);
    MEMORY[0x1BCCA9590](v13, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1B769FD70(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, void *);
  uint64_t v5;
  id v6;

  v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
    v5 = sub_1B76DBBDC();
  else
    v5 = 0;
  swift_retain();
  v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

unint64_t sub_1B769FDF8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178220);
  v2 = sub_1B76DBE4C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1B76638C0(v6, (uint64_t)&v15, &qword_1EF178228);
    v7 = v15;
    v8 = v16;
    result = sub_1B76A0718(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_1B765DF30(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1B769FF2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF178200;
  if (!qword_1EF178200)
  {
    v1 = sub_1B76DB738();
    result = MEMORY[0x1BCCA94E8](MEMORY[0x1E0CADE40], v1);
    atomic_store(result, (unint64_t *)&qword_1EF178200);
  }
  return result;
}

uint64_t sub_1B769FF74()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1B769FF98(uint64_t a1)
{
  uint64_t v1;

  sub_1B76956F8(a1, *(void (**)(void *, _QWORD, uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1B769FFA0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1B769FFC4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = sub_1B76DB888();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3))
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  swift_release();
  return swift_deallocObject();
}

void sub_1B76A0090(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  sub_1B7696B10(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), v1 + v4, *(_QWORD *)v5, *(_BYTE *)(v5 + 8));
}

uint64_t sub_1B76A010C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1B76A0150(uint64_t a1)
{
  uint64_t v1;

  sub_1B7697F24(a1, *(void **)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80));
}

uint64_t sub_1B76A018C(uint64_t a1)
{
  return sub_1B76A03B0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, char *, _QWORD))sub_1B769A108);
}

uint64_t sub_1B76A0198()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = sub_1B76DB888();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3))
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  swift_release();
  return swift_deallocObject();
}

void sub_1B76A025C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_1B769AF10(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1B76A02B8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroy_11Tm()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = sub_1B76DB888();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3))
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B76A03A4(uint64_t a1)
{
  return sub_1B76A03B0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, char *, _QWORD))sub_1B769C0B8);
}

uint64_t sub_1B76A03B0(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, char *, _QWORD))
{
  char *v2;
  uint64_t v4;
  unint64_t v5;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return a2(a1, *((_QWORD *)v2 + 2), *((_QWORD *)v2 + 3), *((_QWORD *)v2 + 4), *((_QWORD *)v2 + 5), &v2[v5], *(_QWORD *)&v2[(*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8]);
}

uint64_t sub_1B76A041C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = sub_1B76DB888();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3))
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  swift_release();
  return swift_deallocObject();
}

void sub_1B76A04E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_1B769D17C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1B76A0548()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_bridgeObjectRelease();
  v3 = sub_1B76DB888();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3))
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  swift_release();
  return swift_deallocObject();
}

void sub_1B76A0604(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_1B769E1CC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

void sub_1B76A0660(uint64_t a1)
{
  uint64_t v1;

  sub_1B769F1D4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t type metadata accessor for ManagedSettingsInterface()
{
  return objc_opt_self();
}

uint64_t method lookup function for ManagedSettingsInterface()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ManagedSettingsInterface.effectiveMediaSettings(completionHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of ManagedSettingsInterface.updateEffectiveSettings()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of ManagedSettingsInterface.getValue(for:recordIdentifier:storeContainer:storeName:isPrivacySensitive:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of ManagedSettingsInterface.setValue(_:for:recordIdentifier:storeContainer:storeName:isPrivacySensitive:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of ManagedSettingsInterface.clearAllSettings(recordIdentifier:storeContainer:storeName:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of ManagedSettingsInterface.deleteStores(storeNames:recordIdentifier:storeContainer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of ManagedSettingsInterface.getStoreProperties(recordIdentifier:storeContainer:storeName:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of ManagedSettingsInterface.updateStoreProperties(_:recordIdentifier:storeContainer:storeName:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of ManagedSettingsInterface.getStores(recordIdentifier:storeContainer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of ManagedSettingsInterface.responsibleClients(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

unint64_t sub_1B76A0718(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B76DBF54();
  sub_1B76DBB1C();
  v4 = sub_1B76DBF78();
  return sub_1B76A077C(a1, a2, v4);
}

unint64_t sub_1B76A077C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v15;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_1B76DBED0() & 1) == 0)
    {
      v12 = ~v5;
      i = (i + 1) & v12;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v13 = (_QWORD *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_1B76DBED0() & 1) == 0)
        {
          for (i = (i + 1) & v12; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v12)
          {
            v15 = (_QWORD *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2)
              break;
            if ((sub_1B76DBED0() & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

void sub_1B76A08C4(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1B769F7A8(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t objectdestroy_35Tm()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1B76A0918(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1B769E86C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

unint64_t sub_1B76A0924()
{
  unint64_t result;

  result = qword_1EF178208;
  if (!qword_1EF178208)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for ManagedSettingsStore.Name, &type metadata for ManagedSettingsStore.Name);
    atomic_store(result, (unint64_t *)&qword_1EF178208);
  }
  return result;
}

uint64_t sub_1B76A0968()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1B76A09A4(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1B769D9C8(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_1B76A09B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B76A09FC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1B76A0A30(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1B769C7F8(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1B76A0A40()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1B76A0A74(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1B769B9A8(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1B76A0A80()
{
  return swift_release();
}

uint64_t sub_1B76A0A88()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1B76A0ABC(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1B769A848(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_1B76A0ACC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1B76A0B08(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1B7699970(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64));
}

uint64_t sub_1B76A0B38()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1B76A0B7C(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1B7699028(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), *(_BYTE *)(v2 + 72), *(void **)(v2 + 80));
}

uint64_t sub_1B76A0BBC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1B76A0BF8(void *a1, void *a2)
{
  uint64_t v2;

  sub_1B7697380(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), *(_BYTE *)(v2 + 72));
}

uint64_t sub_1B76A0C30(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B76A0C74(void *a1, void *a2, void *a3)
{
  uint64_t v3;

  return sub_1B7695D10(a1, a2, a3, *(uint64_t (**)(uint64_t, id, uint64_t))(v3 + 16), *(_QWORD *)(v3 + 24));
}

id sub_1B76A0C7C()
{
  return sub_1B7692070(1);
}

uint64_t sub_1B76A0CE0()
{
  uint64_t result;

  result = sub_1B76DBAB0();
  qword_1ED53B768 = result;
  return result;
}

id static NSNotificationName.effectiveMediaSettingsChanged.getter()
{
  return sub_1B7658258(&qword_1ED53B698, (id *)&qword_1ED53B768);
}

unint64_t static NSNotificationName.managedSettingsStoresSyncedToWatch.getter()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_1B76A0D4C()
{
  uint64_t result;

  result = sub_1B76DBAB0();
  qword_1ED53B0A8 = result;
  return result;
}

id static NSNotificationName.mcEffectiveSettingsChanged.getter()
{
  return sub_1B7658258(&qword_1ED53B0B0, (id *)&qword_1ED53B0A8);
}

uint64_t sub_1B76A0D9C(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEE0072656E696174;
  v3 = 0x6E6F436C61636F6CLL;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 1919251317;
    else
      v5 = 0x6D6574737973;
    if (v4 == 1)
      v6 = 0xE400000000000000;
    else
      v6 = 0xE600000000000000;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x6E6F436C61636F6CLL;
  v6 = 0xEE0072656E696174;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 1919251317;
    else
      v3 = 0x6D6574737973;
    if (v7 == 1)
      v2 = 0xE400000000000000;
    else
      v2 = 0xE600000000000000;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_1B76DBED0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B76A0EAC(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xD00000000000001ELL;
  v3 = 0x80000001B76E1E20;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD000000000000020;
    else
      v5 = 0xD000000000000021;
    if (v4 == 1)
      v6 = 0x80000001B76E1E40;
    else
      v6 = 0x80000001B76E1E70;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0xD00000000000001ELL;
  v6 = 0x80000001B76E1E20;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v2 = 0xD000000000000020;
    else
      v2 = 0xD000000000000021;
    if (v7 == 1)
      v3 = 0x80000001B76E1E40;
    else
      v3 = 0x80000001B76E1E70;
  }
LABEL_15:
  if (v5 == v2 && v6 == v3)
    v8 = 1;
  else
    v8 = sub_1B76DBED0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B76A0FA8(uint64_t a1, uint64_t a2)
{
  return sub_1B76A17FC(a1, a2, SettingsGroupName.rawValue.getter);
}

uint64_t sub_1B76A0FB4(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000020;
  else
    v3 = 0xD000000000000016;
  if (v2)
    v4 = 0x80000001B76E16B0;
  else
    v4 = 0x80000001B76E16D0;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000020;
  else
    v5 = 0xD000000000000016;
  if ((a2 & 1) != 0)
    v6 = 0x80000001B76E16D0;
  else
    v6 = 0x80000001B76E16B0;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1B76DBED0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B76A105C(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000016;
  else
    v3 = 0xD000000000000015;
  if (v2)
    v4 = 0x80000001B76E1430;
  else
    v4 = 0x80000001B76E1450;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000016;
  else
    v5 = 0xD000000000000015;
  if ((a2 & 1) != 0)
    v6 = 0x80000001B76E1450;
  else
    v6 = 0x80000001B76E1430;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1B76DBED0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B76A1100(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xD00000000000001CLL;
  v3 = 0x80000001B76E1570;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD000000000000019;
    else
      v5 = 0xD000000000000011;
    if (v4 == 1)
      v6 = 0x80000001B76E1590;
    else
      v6 = 0x80000001B76E15B0;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0xD00000000000001CLL;
  v6 = 0x80000001B76E1570;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v2 = 0xD000000000000019;
    else
      v2 = 0xD000000000000011;
    if (v7 == 1)
      v3 = 0x80000001B76E1590;
    else
      v3 = 0x80000001B76E15B0;
  }
LABEL_15:
  if (v5 == v2 && v6 == v3)
    v8 = 1;
  else
    v8 = sub_1B76DBED0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1B76A11F4(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1B76A1240(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1B76A12B0 + 4 * byte_1B76DE3B6[a2]))(a3 - 9);
}

uint64_t sub_1B76A12B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 - 9 && v3 == 0x80000001B76E14A0)
    v4 = 1;
  else
    v4 = sub_1B76DBED0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

void sub_1B76A1354(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1B76A13A0(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_1B76A1424 + 4 * byte_1B76DE3C2[a2]))(v2 + 11);
}

uint64_t sub_1B76A1424(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == v1 + 11 && v2 == 0x80000001B76E1C10)
    v3 = 1;
  else
    v3 = sub_1B76DBED0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B76A14D8(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xD000000000000013;
  v3 = 0x80000001B76E1D00;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD000000000000013;
    else
      v5 = 0xD000000000000011;
    if (v4 == 1)
      v6 = 0x80000001B76E1D20;
    else
      v6 = 0x80000001B76E1D40;
    v7 = a2;
    if (!a2)
      goto LABEL_12;
  }
  else
  {
    v5 = 0xD000000000000013;
    v6 = 0x80000001B76E1D00;
    v7 = a2;
    if (!a2)
      goto LABEL_12;
  }
  if (v7 == 1)
  {
    v3 = 0x80000001B76E1D20;
  }
  else
  {
    v2 = 0xD000000000000011;
    v3 = 0x80000001B76E1D40;
  }
LABEL_12:
  if (v5 == v2 && v6 == v3)
    v8 = 1;
  else
    v8 = sub_1B76DBED0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1B76A15CC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1B76A1614(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1B76A168C + 4 * byte_1B76DE3CC[a2]))(0x57746E6572727563);
}

uint64_t sub_1B76A168C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x57746E6572727563 && v1 == 0xEE00657469736265)
    v2 = 1;
  else
    v2 = sub_1B76DBED0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1B76A1748(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD00000000000001ALL;
  else
    v3 = 0xD000000000000011;
  if (v2)
    v4 = 0x80000001B76E1D60;
  else
    v4 = 0x80000001B76E1D80;
  if ((a2 & 1) != 0)
    v5 = 0xD00000000000001ALL;
  else
    v5 = 0xD000000000000011;
  if ((a2 & 1) != 0)
    v6 = 0x80000001B76E1D80;
  else
    v6 = 0x80000001B76E1D60;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1B76DBED0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B76A17F0(uint64_t a1, uint64_t a2)
{
  return sub_1B76A17FC(a1, a2, MediaSettings.Name.rawValue.getter);
}

uint64_t sub_1B76A17FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v4 = a3();
  v6 = v5;
  if (v4 == a3() && v6 == v7)
    v9 = 1;
  else
    v9 = sub_1B76DBED0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1B76A1894(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xD000000000000010;
  v3 = 0x80000001B76E1B90;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD00000000000001CLL;
    else
      v5 = 0xD000000000000012;
    if (v4 == 1)
      v6 = 0x80000001B76E1BB0;
    else
      v6 = 0x80000001B76E1BD0;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0xD000000000000010;
  v6 = 0x80000001B76E1B90;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v2 = 0xD00000000000001CLL;
    else
      v2 = 0xD000000000000012;
    if (v7 == 1)
      v3 = 0x80000001B76E1BB0;
    else
      v3 = 0x80000001B76E1BD0;
  }
LABEL_15:
  if (v5 == v2 && v6 == v3)
    v8 = 1;
  else
    v8 = sub_1B76DBED0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B76A1990(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x6972747365726E75;
    else
      v3 = 0x7463697274736572;
    if (v2 == 1)
      v4 = 0xEC00000064657463;
    else
      v4 = 0xEA00000000006465;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x6972747365726E75;
      else
        v6 = 0x7463697274736572;
      if (v5 == 1)
        v7 = 0xEC00000064657463;
      else
        v7 = 0xEA00000000006465;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE400000000000000;
    v3 = 1701736302;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE400000000000000;
  if (v3 != 1701736302)
  {
LABEL_21:
    v8 = sub_1B76DBED0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B76A1AB0(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xED00006972695379;
  v3 = 0x6E65642E69726973;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD000000000000021;
    else
      v5 = 0xD00000000000001DLL;
    if (v4 == 1)
      v6 = 0x80000001B76E1DB0;
    else
      v6 = 0x80000001B76E1DE0;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x6E65642E69726973;
  v6 = 0xED00006972695379;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0xD000000000000021;
    else
      v3 = 0xD00000000000001DLL;
    if (v7 == 1)
      v2 = 0x80000001B76E1DB0;
    else
      v2 = 0x80000001B76E1DE0;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_1B76DBED0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B76A1BC8(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xD00000000000001DLL;
  v3 = 0x80000001B76E1EC0;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD00000000000001ELL;
    else
      v5 = 0xD000000000000021;
    if (v4 == 1)
      v6 = 0x80000001B76E1EE0;
    else
      v6 = 0x80000001B76E1F00;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0xD00000000000001DLL;
  v6 = 0x80000001B76E1EC0;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v2 = 0xD00000000000001ELL;
    else
      v2 = 0xD000000000000021;
    if (v7 == 1)
      v3 = 0x80000001B76E1EE0;
    else
      v3 = 0x80000001B76E1F00;
  }
LABEL_15:
  if (v5 == v2 && v6 == v3)
    v8 = 1;
  else
    v8 = sub_1B76DBED0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B76A1CBC(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xD00000000000001BLL;
  v3 = 0x80000001B76E1700;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD00000000000001FLL;
    else
      v5 = 0xD000000000000017;
    if (v4 == 1)
      v6 = 0x80000001B76E1720;
    else
      v6 = 0x80000001B76E1740;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0xD00000000000001BLL;
  v6 = 0x80000001B76E1700;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v2 = 0xD00000000000001FLL;
    else
      v2 = 0xD000000000000017;
    if (v7 == 1)
      v3 = 0x80000001B76E1720;
    else
      v3 = 0x80000001B76E1740;
  }
LABEL_15:
  if (v5 == v2 && v6 == v3)
    v8 = 1;
  else
    v8 = sub_1B76DBED0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1B76A1DB0(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1B76A1DFC(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1B76A1E6C + 4 * byte_1B76DE3D6[a2]))(a3 - 7);
}

uint64_t sub_1B76A1E6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 - 7 && v3 == 0x80000001B76E1320)
    v4 = 1;
  else
    v4 = sub_1B76DBED0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_1B76A1F10(char a1, char a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x80000001B76E1CD0;
  else
    v2 = 0x80000001B76E1CB0;
  if ((a2 & 1) != 0)
    v3 = 0x80000001B76E1CD0;
  else
    v3 = 0x80000001B76E1CB0;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_1B76DBED0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

void sub_1B76A1FAC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1B76A1FFC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1B76A2080 + 4 * byte_1B76DE3E1[a2]))(0x73746361746E6F63);
}

uint64_t sub_1B76A2080(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x73746361746E6F63 && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_1B76DBED0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1B76A214C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 1852138868;
  else
    v3 = 0x646C696863;
  if (v2)
    v4 = 0xE500000000000000;
  else
    v4 = 0xE400000000000000;
  if ((a2 & 1) != 0)
    v5 = 1852138868;
  else
    v5 = 0x646C696863;
  if ((a2 & 1) != 0)
    v6 = 0xE400000000000000;
  else
    v6 = 0xE500000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1B76DBED0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B76A21E4(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xD000000000000024;
  v3 = 0x80000001B76E18B0;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD000000000000021;
    else
      v5 = 0xD000000000000022;
    if (v4 == 1)
      v6 = 0x80000001B76E18E0;
    else
      v6 = 0x80000001B76E1910;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0xD000000000000024;
  v6 = 0x80000001B76E18B0;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v2 = 0xD000000000000021;
    else
      v2 = 0xD000000000000022;
    if (v7 == 1)
      v3 = 0x80000001B76E18E0;
    else
      v3 = 0x80000001B76E1910;
  }
LABEL_15:
  if (v5 == v2 && v6 == v3)
    v8 = 1;
  else
    v8 = sub_1B76DBED0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1B76A22D0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1B76A2310(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1B76A237C + 4 * byte_1B76DE3EB[a2]))(1852989815);
}

uint64_t sub_1B76A237C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 1852989815 && v1 == v2)
    v3 = 1;
  else
    v3 = sub_1B76DBED0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_1B76A2430(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1B76A247C(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_1B76A252C + 4 * byte_1B76DE3F9[a2]))(v2 - 1);
}

uint64_t sub_1B76A252C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == v1 - 1 && v2 == 0x80000001B76E1790)
    v3 = 1;
  else
    v3 = sub_1B76DBED0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B76A2610(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x4F73646E65697266;
    else
      v3 = 0x656E6F7972657665;
    if (v2 == 1)
      v4 = 0xEB00000000796C6ELL;
    else
      v4 = 0xE800000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x4F73646E65697266;
      else
        v6 = 0x656E6F7972657665;
      if (v5 == 1)
        v7 = 0xEB00000000796C6ELL;
      else
        v7 = 0xE800000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE400000000000000;
    v3 = 1701736302;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE400000000000000;
  if (v3 != 1701736302)
  {
LABEL_21:
    v8 = sub_1B76DBED0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B76A2728(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000014;
  else
    v3 = 0xD000000000000018;
  if (v2)
    v4 = 0x80000001B76E1210;
  else
    v4 = 0x80000001B76E1230;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000014;
  else
    v5 = 0xD000000000000018;
  if ((a2 & 1) != 0)
    v6 = 0x80000001B76E1230;
  else
    v6 = 0x80000001B76E1210;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1B76DBED0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t CombineOperator.init<A>(_:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *a1;
  v4 = sub_1B76DBC30();
  result = type metadata accessor for CombineOperator.Collection(0, v4, v5, v6);
  *(_QWORD *)(a2 + 24) = result;
  *(_QWORD *)(a2 + 32) = &off_1E6CB05D8;
  *(_BYTE *)a2 = v3;
  return result;
}

uint64_t type metadata accessor for CombineOperator.Collection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CombineOperator.Collection);
}

Swift::Bool __swiftcall CombineOperator.Bool.combine(_:)(Swift::OpaquePointer a1)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;

  v2 = *((_QWORD *)a1._rawValue + 2);
  if ((*v1 & 1) != 0)
  {
    if (v2)
    {
      if (*((_BYTE *)a1._rawValue + 32) == 1)
      {
        if (v2 != 1)
        {
          v3 = 33;
          while (1)
          {
            v4 = v3 - 31;
            if (__OFADD__(v3 - 32, 1))
              break;
            v5 = *((unsigned __int8 *)a1._rawValue + v3++);
            if (v5 != 1 || v4 == v2)
              goto LABEL_22;
          }
          __break(1u);
LABEL_24:
          __break(1u);
          return (Swift::Bool)a1._rawValue;
        }
        goto LABEL_15;
      }
LABEL_17:
      LOBYTE(a1._rawValue) = 0;
      return (Swift::Bool)a1._rawValue;
    }
  }
  else
  {
    if (!v2)
      goto LABEL_17;
    if ((*((_BYTE *)a1._rawValue + 32) & 1) == 0)
    {
      if (v2 != 1)
      {
        v7 = 33;
        while (1)
        {
          v8 = v7 - 31;
          if (__OFADD__(v7 - 32, 1))
            break;
          LOBYTE(v5) = *((_BYTE *)a1._rawValue + v7);
          if ((v5 & 1) == 0)
          {
            ++v7;
            if (v8 != v2)
              continue;
          }
LABEL_22:
          LOBYTE(a1._rawValue) = v5;
          return (Swift::Bool)a1._rawValue;
        }
        goto LABEL_24;
      }
      goto LABEL_17;
    }
  }
LABEL_15:
  LOBYTE(a1._rawValue) = 1;
  return (Swift::Bool)a1._rawValue;
}

Swift::Bool __swiftcall CombineOperator.Bool.isRestrictiveValue(_:)(Swift::Bool a1)
{
  _BYTE *v1;

  return (*v1 ^ a1) & 1;
}

uint64_t sub_1B76A28E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B76A4CF8(a1, a2, a3, (void (*)(_BYTE *))CombineOperator.Bool.hash(into:));
}

uint64_t CombineOperator.combine<A>(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _BYTE v11[40];

  sub_1B7672D50(v1, (uint64_t)v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B5E0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  if (!swift_dynamicCast())
    goto LABEL_27;
  v3 = *(_QWORD *)(a1 + 16);
  if ((v10 & 1) != 0)
  {
    if (!v3)
      return 1;
    if (*(_BYTE *)(a1 + 32) == 1)
    {
      if (v3 != 1)
      {
        v4 = 33;
        while (1)
        {
          v5 = v4 - 31;
          if (__OFADD__(v4 - 32, 1))
            break;
          result = *(unsigned __int8 *)(a1 + v4++);
          if ((_DWORD)result != 1 || v5 == v3)
            return result;
        }
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        result = sub_1B76DBE28();
        __break(1u);
        return result;
      }
      return 1;
    }
  }
  else if (v3)
  {
    if ((*(_BYTE *)(a1 + 32) & 1) != 0)
      return 1;
    if (v3 != 1)
    {
      v8 = 33;
      while (1)
      {
        v9 = v8 - 31;
        if (__OFADD__(v8 - 32, 1))
          break;
        result = *(unsigned __int8 *)(a1 + v8);
        if ((result & 1) == 0)
        {
          ++v8;
          if (v9 != v3)
            continue;
        }
        return result;
      }
      goto LABEL_26;
    }
  }
  return 0;
}

{
  uint64_t v1;
  uint64_t result;
  _BYTE v4[40];

  sub_1B7672D50(v1, (uint64_t)v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B5E0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178230);
  if (swift_dynamicCast())
    return sub_1B76AC4D8(a1);
  result = sub_1B76DBE28();
  __break(1u);
  return result;
}

uint64_t CombineOperator.isRestrictiveValue<A>(_:)(int a1)
{
  uint64_t v1;
  uint64_t result;
  unsigned __int8 v4;
  _BYTE v5[40];

  sub_1B7672D50(v1, (uint64_t)v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B5E0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  if (swift_dynamicCast())
    return (v4 ^ a1) & 1;
  result = sub_1B76DBE28();
  __break(1u);
  return result;
}

uint64_t CombineOperator.Comparable.combine<A>(_:)()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v3;

  if ((*v0 & 1) != 0)
  {
    v1 = sub_1B76DBBB8();
    MEMORY[0x1BCCA94E8](MEMORY[0x1E0DEAF38], v1);
    return sub_1B76DBB4C();
  }
  else
  {
    v3 = sub_1B76DBBB8();
    MEMORY[0x1BCCA94E8](MEMORY[0x1E0DEAF38], v3);
    return sub_1B76DBB58();
  }
}

uint64_t CombineOperator.Comparable.currentValue<A>(_:causes:)()
{
  _BYTE *v0;
  char v1;

  if ((*v0 & 1) != 0)
    v1 = sub_1B76DBA8C();
  else
    v1 = sub_1B76DBA80();
  return v1 & 1;
}

uint64_t CombineOperator.Comparable.combine<A, B>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_1B76DB9FC();
  MEMORY[0x1E0C80A78](v3, v0);
  sub_1B76DBA50();
  v1 = sub_1B76DBBB8();
  MEMORY[0x1BCCA94E8](MEMORY[0x1E0DEAF38], v1);
  sub_1B76DBB40();
  return v4;
}

uint64_t sub_1B76A2D9C()
{
  sub_1B76DBA50();
  swift_bridgeObjectRetain();
  return sub_1B76DBA44();
}

uint64_t sub_1B76A2E14()
{
  return sub_1B76A2E4C();
}

uint64_t sub_1B76A2E30()
{
  return sub_1B76A2E4C();
}

uint64_t sub_1B76A2E4C()
{
  return sub_1B76A2D9C();
}

uint64_t CombineOperator.Comparable.currentValue<A, B>(_:for:causes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char *v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char v23;
  char v24;
  char v25;
  _QWORD v27[3];
  uint64_t v28;

  v27[2] = a8;
  v28 = a7;
  v27[1] = a3;
  v13 = sub_1B76DBD20();
  v14 = *(_QWORD *)(v13 - 8);
  v16 = MEMORY[0x1E0C80A78](v13, v15);
  v18 = (char *)v27 - v17;
  v19 = *(_QWORD *)(a6 - 8);
  MEMORY[0x1E0C80A78](v16, v20);
  v22 = (char *)v27 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *v8;
  MEMORY[0x1BCCA8B88](a2, a1, a5, a6, v28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v18, 1, a6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
    v24 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v22, v18, a6);
    if ((v23 & 1) != 0)
      v25 = sub_1B76DBA8C();
    else
      v25 = sub_1B76DBA80();
    v24 = v25;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v22, a6);
  }
  return v24 & 1;
}

uint64_t sub_1B76A2FE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B76A4CF8(a1, a2, a3, (void (*)(_BYTE *))CombineOperator.Comparable.hash(into:));
}

uint64_t CombineOperator.combine<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v7;
  _BYTE v8[40];

  sub_1B7672D50(v2, (uint64_t)v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B5E0);
  type metadata accessor for CombineOperator.Comparable(0, *(_QWORD *)(a2 + 16), v4, v5);
  if (swift_dynamicCast())
  {
    v8[0] = v7;
    return CombineOperator.Comparable.combine<A>(_:)();
  }
  else
  {
    result = sub_1B76DBE28();
    __break(1u);
  }
  return result;
}

{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  char v10;
  _BYTE v11[40];

  sub_1B7672D50(v2, (uint64_t)v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B5E0);
  v5 = *(_QWORD *)(a2 + 16);
  type metadata accessor for CombineOperator.Collection(0, v5, v6, v7);
  if (swift_dynamicCast())
  {
    v11[0] = v10;
    return CombineOperator.Collection.combine<A>(_:)(a1, v8, *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24));
  }
  else
  {
    result = sub_1B76DBE28();
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for CombineOperator.Comparable(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CombineOperator.Comparable);
}

uint64_t CombineOperator.currentValue<A>(_:causes:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  char v8;
  _BYTE v9[40];

  sub_1B7672D50(v3, (uint64_t)v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B5E0);
  type metadata accessor for CombineOperator.Comparable(0, *(_QWORD *)(a3 + 16), v5, v6);
  if (swift_dynamicCast())
  {
    v9[0] = v8;
    return CombineOperator.Comparable.currentValue<A>(_:causes:)() & 1;
  }
  else
  {
    result = sub_1B76DBE28();
    __break(1u);
  }
  return result;
}

uint64_t CombineOperator.combine<A, B>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v7;
  _BYTE v8[40];

  sub_1B7672D50(v2, (uint64_t)v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B5E0);
  type metadata accessor for CombineOperator.Comparable(0, *(_QWORD *)(a2 + 16), v4, v5);
  if (swift_dynamicCast())
  {
    v8[0] = v7;
    return CombineOperator.Comparable.combine<A, B>(_:)();
  }
  else
  {
    result = sub_1B76DBE28();
    __break(1u);
  }
  return result;
}

uint64_t CombineOperator.currentValue<A, B>(_:for:causes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  char v16;
  _BYTE v17[40];

  sub_1B7672D50(v5, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B5E0);
  v11 = *(uint64_t **)(a4 + 16);
  type metadata accessor for CombineOperator.Comparable(0, (uint64_t)v11, v12, v13);
  if (swift_dynamicCast())
  {
    v17[0] = v16;
    return CombineOperator.Comparable.currentValue<A, B>(_:for:causes:)(a1, a2, a3, v14, v11[2], v11[3], v11[4], a5) & 1;
  }
  else
  {
    result = sub_1B76DBE28();
    __break(1u);
  }
  return result;
}

uint64_t CombineOperator.SingleObject.combine(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  if (*(_QWORD *)(result + 16))
  {
    v4 = *(_QWORD *)(result + 32);
    v3 = *(_QWORD *)(result + 40);
    v5 = *(_QWORD *)(result + 48);
    v8 = *(_OWORD *)(result + 56);
    v6 = *(_QWORD *)(result + 72);
    swift_bridgeObjectRetain();
    sub_1B765DF08(v5, v8);
    result = swift_bridgeObjectRetain();
    v7 = v8;
  }
  else
  {
    v4 = 0;
    v3 = 0;
    v5 = 0;
    v6 = 0;
    v7 = xmmword_1B76DE7E0;
  }
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v5;
  *(_OWORD *)(a2 + 24) = v7;
  *(_QWORD *)(a2 + 40) = v6;
  return result;
}

uint64_t CombineOperator.SingleObject.currentValue(_:causes:)(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[3];
  _OWORD v6[3];

  v2 = a2[1];
  v6[0] = *a2;
  v6[1] = v2;
  v6[2] = a2[2];
  v3 = a1[1];
  v5[0] = *a1;
  v5[1] = v3;
  v5[2] = a1[2];
  return _s15ManagedSettings11ApplicationV2eeoiySbAC_ACtFZ_0(v6, v5) & 1;
}

uint64_t CombineOperator.SingleObject.combine(_:)(uint64_t a1)
{
  char *v1;

  if (*(_QWORD *)(a1 + 16))
  {
    v1 = (char *)&loc_1B76A3534 + dword_1B76A35EC[*(_QWORD *)(swift_bridgeObjectRetain() + 40) >> 62];
    __asm { BR              X9 }
  }
  return 0;
}

void CombineOperator.SingleObject.currentValue(_:causes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1B766B5F0(a3, a4);
}

uint64_t static CombineOperator.SingleObject.== infix(_:_:)()
{
  return 1;
}

uint64_t CombineOperator.SingleObject.hash(into:)()
{
  return sub_1B76DBF60();
}

uint64_t CombineOperator.combine<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[40];

  sub_1B7672D50(v2, (uint64_t)v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B5E0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B408);
  result = swift_dynamicCast();
  if ((_DWORD)result)
  {
    if (*(_QWORD *)(a1 + 16))
    {
      v7 = *(_QWORD *)(a1 + 32);
      v6 = *(_QWORD *)(a1 + 40);
      v8 = *(_QWORD *)(a1 + 48);
      v11 = *(_OWORD *)(a1 + 56);
      v9 = *(_QWORD *)(a1 + 72);
      swift_bridgeObjectRetain();
      sub_1B765DF08(v8, v11);
      result = swift_bridgeObjectRetain();
      v10 = v11;
    }
    else
    {
      v7 = 0;
      v6 = 0;
      v8 = 0;
      v9 = 0;
      v10 = xmmword_1B76DE7E0;
    }
    *(_QWORD *)a2 = v7;
    *(_QWORD *)(a2 + 8) = v6;
    *(_QWORD *)(a2 + 16) = v8;
    *(_OWORD *)(a2 + 24) = v10;
    *(_QWORD *)(a2 + 40) = v9;
  }
  else
  {
    result = sub_1B76DBE28();
    __break(1u);
  }
  return result;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _BYTE v7[40];

  v3 = v2;
  sub_1B7672D50(v3, (uint64_t)v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B5E0);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EF178270);
  if (swift_dynamicCast())
    return sub_1B76A57C0(a1, a2);
  result = sub_1B76DBE28();
  __break(1u);
  return result;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _BYTE v7[40];

  v3 = v2;
  sub_1B7672D50(v3, (uint64_t)v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B5E0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B4C8);
  if (swift_dynamicCast())
    return sub_1B76A6AD0(a1, a2);
  result = sub_1B76DBE28();
  __break(1u);
  return result;
}

uint64_t CombineOperator.currentValue<A>(_:causes:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[6];
  _QWORD v17[6];

  v14 = a1[1];
  v15 = *a1;
  v3 = a1[4];
  v12 = a1[3];
  v13 = a1[2];
  v4 = a1[5];
  v5 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  v8 = a2[3];
  v9 = a2[4];
  v10 = a2[5];
  sub_1B7672D50(v2, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B5E0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B408);
  if (swift_dynamicCast())
  {
    v17[0] = v5;
    v17[1] = v6;
    v17[2] = v7;
    v17[3] = v8;
    v17[4] = v9;
    v17[5] = v10;
    v16[0] = v15;
    v16[1] = v14;
    v16[2] = v13;
    v16[3] = v12;
    v16[4] = v3;
    v16[5] = v4;
    return _s15ManagedSettings11ApplicationV2eeoiySbAC_ACtFZ_0(v17, v16) & 1;
  }
  else
  {
    result = sub_1B76DBE28();
    __break(1u);
  }
  return result;
}

uint64_t CombineOperator.currentValue<A>(_:causes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v8;
  uint64_t result;
  _BYTE v10[40];

  v5 = v4;
  sub_1B7672D50(v5, (uint64_t)v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B5E0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178230);
  if (swift_dynamicCast())
  {
    sub_1B766B5F0(a3, a4);
    return v8 & 1;
  }
  else
  {
    result = sub_1B76DBE28();
    __break(1u);
  }
  return result;
}

uint64_t CombineOperator.Collection.combine<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v8 = *v4;
  v9 = sub_1B76DBC30();
  v10 = swift_bridgeObjectRetain();
  v11 = MEMORY[0x1BCCA8CD8](v10, v9);
  if ((v8 & 1) == 0)
  {
LABEL_12:
    if (v11)
    {
      v19 = 0;
      v20 = 4;
      while (1)
      {
        v21 = v20 - 4;
        v22 = sub_1B76DBBA0();
        sub_1B76DBB88();
        if ((v22 & 1) != 0)
        {
          v17 = *(_QWORD *)(a1 + 8 * v20);
          swift_bridgeObjectRetain();
          v23 = __OFADD__(v21, 1);
          v24 = v20 - 3;
          if (v23)
            goto LABEL_21;
        }
        else
        {
          v17 = sub_1B76DBDC8();
          v23 = __OFADD__(v21, 1);
          v24 = v20 - 3;
          if (v23)
          {
LABEL_21:
            __break(1u);
            goto LABEL_22;
          }
        }
        if (v19)
        {
          swift_bridgeObjectRetain();
          v25 = MEMORY[0x1BCCA8D20](v17, v19, a3, a4);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v17 = v25;
        }
        ++v20;
        v19 = v17;
        if (v24 == MEMORY[0x1BCCA8CD8](a1, v9))
          goto LABEL_22;
      }
    }
    goto LABEL_23;
  }
  if (!v11)
  {
LABEL_23:
    swift_bridgeObjectRelease();
    return sub_1B76DBA08();
  }
  v12 = 0;
  v13 = 4;
  v14 = MEMORY[0x1E0DEB3D0];
  do
  {
    v15 = v13 - 4;
    v16 = sub_1B76DBBA0();
    sub_1B76DBB88();
    if ((v16 & 1) != 0)
    {
      v17 = *(_QWORD *)(a1 + 8 * v13);
      v11 = swift_bridgeObjectRetain();
      v18 = v13 - 3;
      if (__OFADD__(v15, 1))
        goto LABEL_11;
    }
    else
    {
      v11 = sub_1B76DBDC8();
      v17 = v11;
      v18 = v13 - 3;
      if (__OFADD__(v15, 1))
      {
LABEL_11:
        __break(1u);
        goto LABEL_12;
      }
    }
    if (v12)
    {
      MEMORY[0x1BCCA94E8](v14, v9);
      v17 = sub_1B76DBC0C();
    }
    ++v13;
    v12 = v17;
  }
  while (v18 != MEMORY[0x1BCCA8CD8](a1, v9));
LABEL_22:
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1B76A3C94(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21[4];
  uint64_t v22;

  v2 = result;
  v3 = 0;
  v22 = a2;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v18 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v18 >= v8)
      goto LABEL_23;
    v19 = *(_QWORD *)(v4 + 8 * v18);
    ++v3;
    if (!v19)
    {
      v3 = v18 + 1;
      if (v18 + 1 >= v8)
        goto LABEL_23;
      v19 = *(_QWORD *)(v4 + 8 * v3);
      if (!v19)
      {
        v3 = v18 + 2;
        if (v18 + 2 >= v8)
          goto LABEL_23;
        v19 = *(_QWORD *)(v4 + 8 * v3);
        if (!v19)
        {
          v3 = v18 + 3;
          if (v18 + 3 >= v8)
            goto LABEL_23;
          v19 = *(_QWORD *)(v4 + 8 * v3);
          if (!v19)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v19 - 1) & v19;
    v10 = __clz(__rbit64(v19)) + (v3 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 32 * v10);
    v12 = *v11;
    v13 = v11[1];
    v14 = v11[2];
    v15 = v11[3];
    swift_bridgeObjectRetain();
    sub_1B765DF08(v14, v15);
    sub_1B767E4FC(v21, v12, v13, v14, v15);
    v16 = v21[2];
    v17 = v21[3];
    swift_bridgeObjectRelease();
    result = sub_1B765DF1C(v16, v17);
  }
  v20 = v18 + 4;
  if (v20 >= v8)
  {
LABEL_23:
    swift_release();
    return v22;
  }
  v19 = *(_QWORD *)(v4 + 8 * v20);
  if (v19)
  {
    v3 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v19 = *(_QWORD *)(v4 + 8 * v3);
    ++v20;
    if (v19)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

BOOL CombineOperator.Collection.currentValue<A>(_:restricts:)()
{
  unsigned __int8 *v0;
  int v1;

  v1 = *v0;
  return ((v1 ^ sub_1B76DBC24()) & 1) == 0;
}

uint64_t sub_1B76A3E80(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  sub_1B76DBF54();
  ActivityCategory.hash(into:)();
  v4 = sub_1B76DBF78();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v23 = ~v5;
  v7 = a1[1];
  v21 = a1[3];
  v22 = *a1;
  v20 = a1[2];
  v18 = a1[4];
  v19 = a1[5];
  while (1)
  {
    v8 = (_QWORD *)(*(_QWORD *)(a2 + 48) + 48 * v6);
    v10 = v8[1];
    v9 = v8[2];
    v12 = v8[3];
    v11 = v8[4];
    v13 = v8[5];
    if (v10)
    {
      if (!v7)
        goto LABEL_5;
      v14 = *v8 == v22 && v10 == v7;
      if (!v14 && (sub_1B76DBED0() & 1) == 0)
        goto LABEL_5;
    }
    else if (v7)
    {
      goto LABEL_5;
    }
    if (v12 >> 60 != 15)
    {
      if (v21 >> 60 != 15)
        __asm { BR              X8 }
LABEL_4:
      sub_1B765DF08(v9, v12);
      sub_1B765DF08(v20, v21);
      sub_1B765DF1C(v9, v12);
      sub_1B765DF1C(v20, v21);
      goto LABEL_5;
    }
    if (v21 >> 60 != 15)
      goto LABEL_4;
    swift_bridgeObjectRetain();
    sub_1B765DF08(v9, v12);
    swift_bridgeObjectRetain();
    if (v13)
      break;
    swift_bridgeObjectRelease();
    sub_1B765DF1C(v9, v12);
    swift_bridgeObjectRelease();
    if (!v19)
      return 1;
LABEL_5:
    v6 = (v6 + 1) & v23;
    if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
      return 0;
  }
  if (!v19)
  {
    swift_bridgeObjectRelease();
    sub_1B765DF1C(v9, v12);
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  if (v11 != v18 || v13 != v19)
  {
    v16 = sub_1B76DBED0();
    swift_bridgeObjectRelease();
    sub_1B765DF1C(v9, v12);
    swift_bridgeObjectRelease();
    if ((v16 & 1) != 0)
      return 1;
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  sub_1B765DF1C(v9, v12);
  swift_bridgeObjectRelease();
  return 1;
}

BOOL CombineOperator.Collection.currentValue(_:restricts:shouldUsePatternMatching:)(uint64_t a1, uint64_t *a2, char a3)
{
  unsigned __int8 *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  int v11;

  v6 = *a2;
  v7 = a2[1];
  v8 = a2[2];
  v9 = a2[3];
  v10 = *v3;
  swift_bridgeObjectRetain();
  sub_1B765DF08(v8, v9);
  v11 = sub_1B76AC604(a1, v6, v7, v8, v9, a3);
  swift_bridgeObjectRelease();
  sub_1B765DF1C(v8, v9);
  return ((v10 ^ v11) & 1) == 0;
}

BOOL static CombineOperator.Collection.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t CombineOperator.Collection.hash(into:)()
{
  return sub_1B76DBF60();
}

uint64_t sub_1B76A4CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B76A4CF8(a1, a2, a3, (void (*)(_BYTE *))CombineOperator.Collection.hash(into:));
}

uint64_t sub_1B76A4CF8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *))
{
  _BYTE v6[72];

  sub_1B76DBF54();
  a4(v6);
  return sub_1B76DBF78();
}

uint64_t CombineOperator.currentValue<A>(_:restricts:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  unsigned __int8 v8;
  _BYTE v9[40];

  sub_1B7672D50(v3, (uint64_t)v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B5E0);
  type metadata accessor for CombineOperator.Collection(0, *(_QWORD *)(a3 + 16), v5, v6);
  if (swift_dynamicCast())
    return ((v8 ^ sub_1B76DBC24()) & 1) == 0;
  result = sub_1B76DBE28();
  __break(1u);
  return result;
}

uint64_t CombineOperator.currentValue(_:restricts:shouldUsePatternMatching:)(uint64_t a1, uint64_t *a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16[5];

  v5 = v4;
  v9 = *a2;
  v10 = a2[1];
  v11 = a2[2];
  v12 = a2[3];
  sub_1B7672D50(v5, (uint64_t)v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B5E0);
  type metadata accessor for CombineOperator.Collection(0, *(_QWORD *)(a4 + 16), v13, v14);
  if (swift_dynamicCast())
  {
    v16[0] = v9;
    v16[1] = v10;
    v16[2] = v11;
    v16[3] = v12;
    return CombineOperator.Collection.currentValue(_:restricts:shouldUsePatternMatching:)(a1, v16, a3 & 1);
  }
  else
  {
    result = sub_1B76DBE28();
    __break(1u);
  }
  return result;
}

uint64_t CombineOperator.RestrictivePolicy.combine<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t inited;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD v41[3];
  _OWORD v42[4];

  v6 = type metadata accessor for ShieldSettings.EffectiveActivityCategoryPolicy(0, a2, a3, a3);
  v7 = swift_bridgeObjectRetain();
  if (!MEMORY[0x1BCCA8CD8](v7, v6))
  {
    result = swift_bridgeObjectRelease();
    v9 = 0;
    v33 = 0;
    v12 = 2;
LABEL_30:
    *(_QWORD *)a4 = v9;
    *(_QWORD *)(a4 + 8) = v33;
    *(_BYTE *)(a4 + 16) = v12;
    return result;
  }
  v34 = a4;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = (_BYTE *)(a1 + 48);
  v12 = 2;
  v37 = a1;
  v38 = v6;
  while (1)
  {
    v16 = sub_1B76DBBA0();
    result = sub_1B76DBB88();
    if ((v16 & 1) == 0)
      break;
    v18 = v8 + 1;
    if (__OFADD__(v8, 1))
      goto LABEL_32;
    v19 = *((_QWORD *)v11 - 2);
    v20 = *((_QWORD *)v11 - 1);
    if (*v11)
    {
      if (*v11 == 1)
      {
        if (v12)
        {
          if (v12 != 1)
          {
            v12 = 1;
            sub_1B7691698(*((_QWORD *)v11 - 2), *((_QWORD *)v11 - 1), 1);
LABEL_27:
            v9 = v19;
            v10 = v20;
            goto LABEL_5;
          }
          sub_1B7691698(*((_QWORD *)v11 - 2), *((_QWORD *)v11 - 1), 1);
          swift_bridgeObjectRetain();
        }
        else
        {
          sub_1B7691698(*((_QWORD *)v11 - 2), *((_QWORD *)v11 - 1), 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v9 = v10;
        }
        sub_1B76DBC30();
        sub_1B76DBEB8();
        swift_initStackObject();
        v13 = sub_1B76DBB7C();
        *v14 = v9;
        v14[1] = v19;
        sub_1B76DBBB8();
        v9 = CombineOperator.Collection.combine<A>(_:)(v13, v15, a2, a3);
        v12 = 1;
        sub_1B76916E0(v19, v20, 1);
        swift_bridgeObjectRelease();
        v10 = 0;
        a1 = v37;
        v6 = v38;
      }
    }
    else
    {
      if (!v12)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178238);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1B76DDBB0;
        v35 = v10;
        *(_QWORD *)(inited + 32) = v9;
        *(_QWORD *)(inited + 40) = v19;
        sub_1B7691698(v19, v20, 0);
        v25 = sub_1B768A7AC();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v36 = CombineOperator.Collection.combine<A>(_:)(inited, v26, (uint64_t)&type metadata for ActivityCategory, v25);
        swift_setDeallocating();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178240);
        swift_arrayDestroy();
        sub_1B76DBC30();
        sub_1B76DBEB8();
        swift_initStackObject();
        v27 = sub_1B76DBB7C();
        *v28 = v35;
        v28[1] = v20;
        sub_1B76DBBB8();
        v9 = CombineOperator.Collection.combine<A>(_:)(v27, v29, a2, a3);
        swift_bridgeObjectRelease();
        if (qword_1EF177258 != -1)
          swift_once();
        v42[0] = xmmword_1EF1780E8;
        v42[1] = xmmword_1EF1780F8;
        v42[2] = xmmword_1EF178108;
        sub_1B768A800((uint64_t)v42, (void (*)(uint64_t, uint64_t))sub_1B765E0D4);
        v30 = sub_1B76A3E80((uint64_t *)v42, v36);
        sub_1B76916E0(v19, v20, 0);
        sub_1B768A858((uint64_t)v42, (void (*)(uint64_t, uint64_t))sub_1B765E0D8);
        v6 = v38;
        if ((v30 & 1) == 0)
        {
          v12 = 0;
          v10 = v9;
          v9 = v36;
          goto LABEL_5;
        }
        goto LABEL_20;
      }
      if (v12 == 1)
      {
        sub_1B76DBC30();
        sub_1B76DBEB8();
        swift_initStackObject();
        sub_1B7691698(v19, v20, 0);
        swift_bridgeObjectRetain();
        v21 = sub_1B76DBB7C();
        *v22 = v9;
        v22[1] = v20;
        sub_1B76DBBB8();
        v6 = v38;
        v9 = CombineOperator.Collection.combine<A>(_:)(v21, v23, a2, a3);
        sub_1B76916E0(v19, v20, 0);
LABEL_20:
        swift_bridgeObjectRelease();
        v10 = 0;
        v12 = 1;
        goto LABEL_5;
      }
      sub_1B7691698(*((_QWORD *)v11 - 2), *((_QWORD *)v11 - 1), 0);
      v31 = qword_1EF177258;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v31 != -1)
        swift_once();
      v41[0] = xmmword_1EF1780E8;
      v41[1] = xmmword_1EF1780F8;
      v41[2] = xmmword_1EF178108;
      sub_1B768A800((uint64_t)v41, (void (*)(uint64_t, uint64_t))sub_1B765E0D4);
      v32 = sub_1B76A3E80((uint64_t *)v41, v19);
      swift_bridgeObjectRelease();
      sub_1B768A858((uint64_t)v41, (void (*)(uint64_t, uint64_t))sub_1B765E0D8);
      if ((v32 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v12 = 0;
        goto LABEL_27;
      }
      sub_1B76916E0(v19, v20, 0);
      v10 = 0;
      v12 = 1;
      v9 = v20;
    }
LABEL_5:
    ++v8;
    v11 += 24;
    if (v18 == MEMORY[0x1BCCA8CD8](a1, v6))
    {
      result = swift_bridgeObjectRelease();
      v33 = v10;
      a4 = v34;
      goto LABEL_30;
    }
  }
  result = sub_1B76DBDC8();
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t CombineOperator.RestrictivePolicy.currentValue<A>(_:restricts:including:)(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1B76ACF5C(a1, a2, a3, *(_QWORD *)(a4 + 16), a5, a6);
}

uint64_t CombineOperator.RestrictivePolicy.currentValue(_:restricts:including:shouldUsePatternMatching:)(uint64_t a1, _OWORD *a2, uint64_t *a3, char a4)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  _OWORD v19[3];
  __int128 v20;
  __int128 v21;
  __int128 v22;

  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(unsigned __int8 *)(a1 + 16);
  v8 = a2[1];
  v19[0] = *a2;
  v19[1] = v8;
  v19[2] = a2[2];
  v9 = *a3;
  v10 = a3[1];
  v11 = a3[2];
  v12 = a3[3];
  if (!v7)
  {
    if (v10 == 1)
    {
      if (qword_1EF177258 != -1)
        swift_once();
      v20 = xmmword_1EF1780E8;
      v21 = xmmword_1EF1780F8;
      v22 = xmmword_1EF178108;
      sub_1B768A800((uint64_t)&v20, (void (*)(uint64_t, uint64_t))sub_1B765E0D4);
      v15 = sub_1B76A3E80((uint64_t *)&v20, v5);
      sub_1B768A858((uint64_t)&v20, (void (*)(uint64_t, uint64_t))sub_1B765E0D8);
      if ((v15 & 1) == 0)
      {
        v14 = sub_1B76A3E80((uint64_t *)v19, v5);
        return v14 & 1;
      }
      goto LABEL_9;
    }
    sub_1B765DFF0(*a3, a3[1], a3[2], v12);
    v16 = sub_1B76AC604(v6, v9, v10, v11, v12, a4 & 1);
    sub_1B765DFB4(v9, v10, v11, v12);
    if (qword_1EF177258 != -1)
      swift_once();
    v20 = xmmword_1EF1780E8;
    v21 = xmmword_1EF1780F8;
    v22 = xmmword_1EF178108;
    sub_1B768A800((uint64_t)&v20, (void (*)(uint64_t, uint64_t))sub_1B765E0D4);
    v17 = sub_1B76A3E80((uint64_t *)&v20, v5);
    sub_1B768A858((uint64_t)&v20, (void (*)(uint64_t, uint64_t))sub_1B765E0D8);
    if ((v17 & 1) != 0 || (sub_1B76A3E80((uint64_t *)v19, v5) & 1) != 0)
    {
      v14 = v16 ^ 1;
      return v14 & 1;
    }
LABEL_15:
    v14 = 0;
    return v14 & 1;
  }
  if (v7 != 1)
    goto LABEL_15;
  if (v10 == 1)
  {
LABEL_9:
    v14 = 1;
    return v14 & 1;
  }
  sub_1B765DFF0(*a3, a3[1], a3[2], v12);
  v13 = sub_1B76AC604(v5, v9, v10, v11, v12, a4 & 1);
  sub_1B765DFB4(v9, v10, v11, v12);
  v14 = v13 ^ 1;
  return v14 & 1;
}

uint64_t sub_1B76A57C0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char *v2;

  if (*(_QWORD *)(result + 16))
  {
    v2 = (char *)&loc_1B76A58AC + 4 * byte_1B76DE402[*(unsigned __int8 *)(swift_bridgeObjectRetain() + 48)];
    __asm { BR              X9 }
  }
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 3;
  return result;
}

uint64_t CombineOperator.RestrictivePolicy.combine(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char *v2;

  if (*(_QWORD *)(result + 16))
  {
    v2 = (char *)&loc_1B76A61A4 + 4 * byte_1B76DE416[*(unsigned __int8 *)(swift_bridgeObjectRetain() + 48)];
    __asm { BR              X9 }
  }
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 3;
  return result;
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  char v12;
  uint64_t v13;
  char v14;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v4 = 0;
    v5 = 0;
    v6 = (_BYTE *)(swift_bridgeObjectRetain() + 48);
    v7 = 2;
    while (1)
    {
      v9 = *((_QWORD *)v6 - 2);
      v8 = *((_QWORD *)v6 - 1);
      if (*v6)
      {
        if (*v6 != 1)
          goto LABEL_6;
        if (!v7)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_4:
          v7 = 1;
LABEL_5:
          v4 = v9;
          v5 = v8;
          goto LABEL_6;
        }
        if (v7 != 1)
          goto LABEL_4;
        v14 = 0;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178258);
        v10 = swift_allocObject();
        *(_OWORD *)(v10 + 16) = xmmword_1B76DDBB0;
        *(_BYTE *)(v10 + 32) = v4 & 1;
        *(_BYTE *)(v10 + 33) = v9 & 1;
        sub_1B76AD3F8();
        CombineOperator.Comparable.combine<A>(_:)();
        swift_bridgeObjectRelease();
        if (v13 == 2)
        {
          sub_1B76DBE28();
          __break(1u);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __break(1u);
          result = swift_bridgeObjectRelease();
          __break(1u);
          return result;
        }
        v5 = 0;
        v4 = v13 & 1;
        v7 = 1;
      }
      else
      {
        if (!v7)
        {
          sub_1B76AD43C(*((_QWORD *)v6 - 2), *((_QWORD *)v6 - 1), 0);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v13 = v4;
          sub_1B76A86D0(v9, (uint64_t)sub_1B76ABF94, 0, isUniquelyReferenced_nonNull_native, &v13);
          v4 = v13;
          swift_bridgeObjectRelease();
          v12 = swift_isUniquelyReferenced_nonNull_native();
          v13 = v5;
          sub_1B76A8398(v8, (uint64_t)sub_1B76ABBD8, 0, v12, &v13);
          v5 = v13;
          swift_bridgeObjectRelease();
          sub_1B76AD46C(v9, v8, 0);
          v7 = 0;
          goto LABEL_6;
        }
        if (v7 != 1)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v7 = 0;
          goto LABEL_5;
        }
      }
LABEL_6:
      v6 += 24;
      if (!--v3)
      {
        result = swift_bridgeObjectRelease();
        goto LABEL_19;
      }
    }
  }
  v4 = 0;
  v5 = 0;
  v7 = 2;
LABEL_19:
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v5;
  *(_BYTE *)(a2 + 16) = v7;
  return result;
}

void CombineOperator.RestrictivePolicy.currentValue(_:restricts:shouldUsePatternMatching:)(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1B76A6968()
{
  unint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  swift_bridgeObjectRetain();
  sub_1B765DF08(v1, v0);
  v6 = sub_1B76AC604(v5, v4, v3, v1, v0, v2 & 1);
  swift_bridgeObjectRelease();
  sub_1B765DF1C(v1, v0);
  return v6 & 1;
}

uint64_t sub_1B76A6AD0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  char v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  char v12;
  uint64_t v13;

  v3 = *(_QWORD *)(result + 16);
  if (!v3)
  {
    v4 = 0;
    v5 = 0;
    v7 = 2;
    goto LABEL_19;
  }
  v4 = 0;
  v5 = 0;
  v6 = (_BYTE *)(swift_bridgeObjectRetain() + 48);
  v7 = 2;
  do
  {
    v9 = *((_QWORD *)v6 - 2);
    v10 = *((_QWORD *)v6 - 1);
    if (*v6)
    {
      if (*v6 != 1)
        goto LABEL_4;
      if (v7)
      {
        if (v7 == 1)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178258);
          inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_1B76DDBB0;
          *(_BYTE *)(inited + 32) = v4 & 1;
          *(_BYTE *)(inited + 33) = v9 & 1;
          swift_bridgeObjectRelease();
          v5 = 0;
          v4 = v4 & v9 & 1;
          v7 = 1;
          goto LABEL_4;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v7 = 1;
LABEL_15:
      v4 = v9;
      v5 = v10;
      goto LABEL_4;
    }
    if (v7)
    {
      if (v7 == 1)
        goto LABEL_4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v7 = 0;
      goto LABEL_15;
    }
    sub_1B76AD43C(*((_QWORD *)v6 - 2), *((_QWORD *)v6 - 1), 0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = v4;
    sub_1B76A86D0(v9, (uint64_t)sub_1B76ABF94, 0, isUniquelyReferenced_nonNull_native, &v13);
    v4 = v13;
    swift_bridgeObjectRelease();
    v12 = swift_isUniquelyReferenced_nonNull_native();
    v13 = v5;
    sub_1B76A8398(v10, (uint64_t)sub_1B76ABBD8, 0, v12, &v13);
    v5 = v13;
    swift_bridgeObjectRelease();
    sub_1B76AD46C(v9, v10, 0);
    v7 = 0;
LABEL_4:
    v6 += 24;
    --v3;
  }
  while (v3);
  result = swift_bridgeObjectRelease();
LABEL_19:
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v5;
  *(_BYTE *)(a2 + 16) = v7;
  return result;
}

uint64_t CombineOperator.RestrictivePolicy.currentValue(_:causes:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v13;
  char v14;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;

  v2 = *(_QWORD *)a1;
  v4 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v5 = *(unsigned __int8 *)(a2 + 16);
  if (!*(_BYTE *)(a1 + 16))
  {
    if (*(_BYTE *)(a2 + 16))
    {
      v14 = v5 != 1;
      return v14 & 1;
    }
    v16 = *(_QWORD *)(a1 + 8);
    sub_1B76A7D6C(*(_QWORD *)a1, *(_QWORD *)a2);
    if ((v17 & 1) == 0 || (sub_1B76A7EE8(v16, v3) & 1) == 0)
    {
      swift_bridgeObjectRetain();
      sub_1B76AC130(1, v4, v2);
      v19 = v18;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v20 = sub_1B76AC2D0(1, v3, v16);
      swift_bridgeObjectRelease();
      v14 = v19 & v20;
      return v14 & 1;
    }
    goto LABEL_31;
  }
  if (*(_BYTE *)(a1 + 16) == 1)
  {
    if (v5 == 1)
    {
      v6 = *(_QWORD *)a1 & 1;
      if ((v2 & 1) != 0)
        v7 = 1852138868;
      else
        v7 = 0x646C696863;
      if ((v2 & 1) != 0)
        v8 = 0xE400000000000000;
      else
        v8 = 0xE500000000000000;
      v9 = *(_QWORD *)a2 & 1;
      if ((v4 & 1) != 0)
        v10 = 1852138868;
      else
        v10 = 0x646C696863;
      if ((v4 & 1) != 0)
        v11 = 0xE400000000000000;
      else
        v11 = 0xE500000000000000;
      if (v7 == v10 && v8 == v11)
      {
        swift_bridgeObjectRelease_n();
        v14 = 1;
      }
      else
      {
        v13 = sub_1B76DBED0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v14 = v13 | (v9 >= v6);
      }
      return v14 & 1;
    }
LABEL_31:
    v14 = 1;
    return v14 & 1;
  }
  v14 = v5 == 2 && (v3 | v4) == 0;
  return v14 & 1;
}

uint64_t static CombineOperator.RestrictivePolicy.== infix(_:_:)()
{
  return 1;
}

uint64_t CombineOperator.combine<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  _BYTE v14[40];

  v5 = v4;
  sub_1B7672D50(v5, (uint64_t)v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B5E0);
  v10 = *(_QWORD *)(a2 + 16);
  type metadata accessor for CombineOperator.RestrictivePolicy(0, v10, v11, v12);
  if (swift_dynamicCast())
    return CombineOperator.RestrictivePolicy.combine<A>(_:)(a1, *(_QWORD *)(v10 + 16), a3, a4);
  result = sub_1B76DBE28();
  __break(1u);
  return result;
}

uint64_t CombineOperator.currentValue<A>(_:restricts:including:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  char v29;

  v6 = v5;
  v8 = *a1;
  v9 = a1[1];
  v10 = *((_BYTE *)a1 + 16);
  v11 = *a2;
  v12 = a2[1];
  v14 = a2[2];
  v13 = a2[3];
  v15 = a2[4];
  v20 = a2[5];
  sub_1B7672D50(v6, (uint64_t)&v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B5E0);
  v16 = *(_QWORD *)(a4 + 16);
  type metadata accessor for CombineOperator.RestrictivePolicy(0, v16, v17, v18);
  if (swift_dynamicCast())
  {
    v28[0] = v8;
    v28[1] = v9;
    v29 = v10;
    *(_QWORD *)&v23 = v11;
    *((_QWORD *)&v23 + 1) = v12;
    v24 = v14;
    v25 = v13;
    v26 = v15;
    v27 = v20;
    return sub_1B76ACF5C((uint64_t)v28, &v23, a3, v16, *(_QWORD *)(v16 + 16), a5) & 1;
  }
  else
  {
    result = sub_1B76DBE28();
    __break(1u);
  }
  return result;
}

uint64_t CombineOperator.currentValue<A>(_:restricts:including:shouldUsePatternMatching:)(uint64_t a1, _OWORD *a2, uint64_t *a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  int v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  uint64_t result;
  _OWORD v21[3];
  __int128 v22;
  __int128 v23;
  __int128 v24;

  v5 = v4;
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(unsigned __int8 *)(a1 + 16);
  v10 = a2[1];
  v21[0] = *a2;
  v21[1] = v10;
  v21[2] = a2[2];
  v12 = *a3;
  v11 = a3[1];
  v14 = a3[2];
  v13 = a3[3];
  sub_1B7672D50(v5, (uint64_t)&v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B5E0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178268);
  if (swift_dynamicCast())
  {
    if (v9)
    {
      if (v9 == 1)
      {
        if (v11 != 1)
        {
          swift_bridgeObjectRetain();
          sub_1B765DF08(v14, v13);
          v15 = sub_1B76AC604(v7, v12, v11, v14, v13, a4 & 1);
          sub_1B765DFB4(v12, v11, v14, v13);
          v16 = v15 ^ 1;
          return v16 & 1;
        }
LABEL_10:
        v16 = 1;
        return v16 & 1;
      }
    }
    else
    {
      if (v11 == 1)
      {
        if (qword_1EF177258 != -1)
          swift_once();
        v22 = xmmword_1EF1780E8;
        v23 = xmmword_1EF1780F8;
        v24 = xmmword_1EF178108;
        sub_1B768A800((uint64_t)&v22, (void (*)(uint64_t, uint64_t))sub_1B765E0D4);
        v17 = sub_1B76A3E80((uint64_t *)&v22, v7);
        sub_1B768A858((uint64_t)&v22, (void (*)(uint64_t, uint64_t))sub_1B765E0D8);
        if ((v17 & 1) == 0)
        {
          v16 = sub_1B76A3E80((uint64_t *)v21, v7);
          return v16 & 1;
        }
        goto LABEL_10;
      }
      swift_bridgeObjectRetain();
      sub_1B765DF08(v14, v13);
      v18 = sub_1B76AC604(v8, v12, v11, v14, v13, a4 & 1);
      sub_1B765DFB4(v12, v11, v14, v13);
      if (qword_1EF177258 != -1)
        swift_once();
      v22 = xmmword_1EF1780E8;
      v23 = xmmword_1EF1780F8;
      v24 = xmmword_1EF178108;
      sub_1B768A800((uint64_t)&v22, (void (*)(uint64_t, uint64_t))sub_1B765E0D4);
      v19 = sub_1B76A3E80((uint64_t *)&v22, v7);
      sub_1B768A858((uint64_t)&v22, (void (*)(uint64_t, uint64_t))sub_1B765E0D8);
      if ((v19 & 1) != 0 || (sub_1B76A3E80((uint64_t *)v21, v7) & 1) != 0)
      {
        v16 = v18 ^ 1;
        return v16 & 1;
      }
    }
    v16 = 0;
    return v16 & 1;
  }
  result = sub_1B76DBE28();
  __break(1u);
  return result;
}

uint64_t CombineOperator.currentValue<A>(_:restricts:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  _BYTE v4[40];

  v2 = *(unsigned __int8 *)(a1 + 16);
  sub_1B7672D50(v1, (uint64_t)v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B5E0);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EF178270);
  if (swift_dynamicCast())
    __asm { BR              X9 }
  result = sub_1B76DBE28();
  __break(1u);
  return result;
}

uint64_t CombineOperator.currentValue<A>(_:restricts:shouldUsePatternMatching:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  _BYTE v4[40];

  v2 = *(unsigned __int8 *)(a1 + 16);
  sub_1B7672D50(v1, (uint64_t)v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B5E0);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EF178270);
  if (swift_dynamicCast())
    __asm { BR              X9 }
  result = sub_1B76DBE28();
  __break(1u);
  return result;
}

uint64_t CombineOperator.currentValue<A>(_:causes:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t result;
  _BYTE v11[40];

  v3 = v2;
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  v7 = *(_QWORD *)a2;
  v8 = *(_QWORD *)(a2 + 8);
  v9 = *(_BYTE *)(a2 + 16);
  sub_1B7672D50(v3, (uint64_t)v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B5E0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B4C8);
  if (swift_dynamicCast())
    return sub_1B76AD4A8(v4, v5, v6, v7, v8, v9) & 1;
  result = sub_1B76DBE28();
  __break(1u);
  return result;
}

uint64_t CombineOperator.description.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B5E0);
  sub_1B76DBE10();
  return 0;
}

void sub_1B76A7D6C(uint64_t a1, uint64_t a2)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int v15;
  uint64_t v16;
  char v17;

  if (a1 == a2 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v4 = 0;
  v5 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_24;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v9)
      return;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
        {
          v4 = v12 + 3;
          if (v12 + 3 >= v9)
            return;
          v13 = *(_QWORD *)(v5 + 8 * v4);
          if (!v13)
            break;
        }
      }
    }
LABEL_23:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_24:
    v15 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 56) + v11);
    sub_1B76605EC(*(_BYTE *)(*(_QWORD *)(a1 + 48) + v11));
    if ((v17 & 1) == 0 || v15 != *(unsigned __int8 *)(*(_QWORD *)(a2 + 56) + v16))
      return;
  }
  v14 = v12 + 4;
  if (v14 >= v9)
    return;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_23;
  }
LABEL_29:
  __break(1u);
}

uint64_t sub_1B76A7EE8(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  char v21;
  __int128 v22;
  uint64_t v23[3];
  __int128 v24;
  uint64_t v25;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_24;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v12 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return 1;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return 1;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
        {
          v4 = v12 + 3;
          if (v12 + 3 >= v9)
            return 1;
          v13 = *(_QWORD *)(v5 + 8 * v4);
          if (!v13)
            break;
        }
      }
    }
LABEL_23:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_24:
    v15 = *(_QWORD *)(v3 + 48) + 48 * v11;
    v16 = *(_QWORD *)(v15 + 8);
    v17 = *(_QWORD *)(v15 + 16);
    v18 = *(_QWORD *)(v15 + 40);
    v19 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 56) + v11);
    v22 = *(_OWORD *)(v15 + 24);
    v23[0] = *(_QWORD *)v15;
    v23[1] = v16;
    v23[2] = v17;
    v24 = v22;
    v25 = v18;
    swift_bridgeObjectRetain();
    sub_1B765DF08(v17, v22);
    swift_bridgeObjectRetain();
    v20 = sub_1B76605D0(v23);
    LOBYTE(v18) = v21;
    result = sub_1B768A858((uint64_t)v23, (void (*)(uint64_t, uint64_t))sub_1B765DF1C);
    if ((v18 & 1) == 0 || v19 != *(unsigned __int8 *)(*(_QWORD *)(a2 + 56) + v20))
      return 0;
  }
  v14 = v12 + 4;
  if (v14 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_23;
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_1B76A80D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_1B76A8138(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x1B76A831CLL);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

uint64_t sub_1B76A8340@<X0>(uint64_t __s2@<X0>, void *__s1@<X2>, uint64_t a3@<X1>, BOOL *a4@<X8>)
{
  if (__s1)
  {
    if (__s2)
    {
      __s2 = memcmp(__s1, (const void *)__s2, a3 - __s2);
      *a4 = (_DWORD)__s2 == 0;
      return __s2;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return __s2;
}

uint64_t sub_1B76A8398(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  _QWORD *v22;
  char v23;
  _OWORD *v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t result;
  char v31;
  char v32;
  _QWORD *v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  _BOOL8 v37;
  uint64_t v38;
  char v39;
  unint64_t v40;
  char v41;
  _QWORD *v42;
  _OWORD *v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;

  v7 = -1 << *(_BYTE *)(a1 + 32);
  v8 = ~v7;
  v9 = *(_QWORD *)(a1 + 64);
  v10 = -v7;
  v52 = a1;
  v53 = a1 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v54 = v8;
  v55 = 0;
  v56 = v11 & v9;
  v57 = a2;
  v58 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1B76ABC40((uint64_t)&v48);
  if (*((_QWORD *)&v48 + 1) == 1)
    goto LABEL_17;
  v59 = v48;
  v60 = v49;
  v61 = v50;
  v12 = v51;
  v13 = (_QWORD *)*a5;
  v15 = sub_1B76605D0((uint64_t *)&v59);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v19 = v14;
  if (v13[3] >= v18)
  {
    if ((a4 & 1) != 0)
    {
      v22 = (_QWORD *)*a5;
      if ((v14 & 1) != 0)
        goto LABEL_12;
    }
    else
    {
      sub_1B767D390();
      v22 = (_QWORD *)*a5;
      if ((v19 & 1) != 0)
        goto LABEL_12;
    }
LABEL_14:
    v22[(v15 >> 6) + 8] |= 1 << v15;
    v24 = (_OWORD *)(v22[6] + 48 * v15);
    v25 = v59;
    v26 = v61;
    v24[1] = v60;
    v24[2] = v26;
    *v24 = v25;
    *(_BYTE *)(v22[7] + v15) = v12;
    v27 = v22[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v22[2] = v29;
    goto LABEL_16;
  }
  sub_1B767BA5C(v18, a4 & 1);
  v20 = sub_1B76605D0((uint64_t *)&v59);
  if ((v19 & 1) == (v21 & 1))
  {
    v15 = v20;
    v22 = (_QWORD *)*a5;
    if ((v19 & 1) == 0)
      goto LABEL_14;
LABEL_12:
    v23 = *(_BYTE *)(v22[7] + v15);
    sub_1B768A858((uint64_t)&v59, (void (*)(uint64_t, uint64_t))sub_1B765DF1C);
    *(_BYTE *)(v22[7] + v15) = v23 & v12;
LABEL_16:
    sub_1B76ABC40((uint64_t)&v48);
    if (*((_QWORD *)&v48 + 1) == 1)
    {
LABEL_17:
      swift_release();
      swift_bridgeObjectRelease();
      sub_1B76A0A80();
      return swift_release();
    }
    while (1)
    {
      v59 = v48;
      v60 = v49;
      v61 = v50;
      v32 = v51;
      v33 = (_QWORD *)*a5;
      v35 = sub_1B76605D0((uint64_t *)&v59);
      v36 = v33[2];
      v37 = (v34 & 1) == 0;
      v38 = v36 + v37;
      if (__OFADD__(v36, v37))
        goto LABEL_28;
      v39 = v34;
      if (v33[3] < v38)
      {
        sub_1B767BA5C(v38, 1);
        v40 = sub_1B76605D0((uint64_t *)&v59);
        if ((v39 & 1) != (v41 & 1))
          break;
        v35 = v40;
      }
      v42 = (_QWORD *)*a5;
      if ((v39 & 1) != 0)
      {
        v31 = *(_BYTE *)(v42[7] + v35);
        sub_1B768A858((uint64_t)&v59, (void (*)(uint64_t, uint64_t))sub_1B765DF1C);
        *(_BYTE *)(v42[7] + v35) = v31 & v32;
      }
      else
      {
        v42[(v35 >> 6) + 8] |= 1 << v35;
        v43 = (_OWORD *)(v42[6] + 48 * v35);
        v44 = v59;
        v45 = v61;
        v43[1] = v60;
        v43[2] = v45;
        *v43 = v44;
        *(_BYTE *)(v42[7] + v35) = v32;
        v46 = v42[2];
        v28 = __OFADD__(v46, 1);
        v47 = v46 + 1;
        if (v28)
          goto LABEL_29;
        v42[2] = v47;
      }
      sub_1B76ABC40((uint64_t)&v48);
      if (*((_QWORD *)&v48 + 1) == 1)
        goto LABEL_17;
    }
  }
LABEL_30:
  result = sub_1B76DBF18();
  __break(1u);
  return result;
}

uint64_t sub_1B76A86D0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  char v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int16 v13;
  _QWORD *v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  _BOOL8 v18;
  BOOL v19;
  uint64_t v20;
  char v21;
  int v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  char v31;
  _QWORD *v32;
  char v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  char v37;
  int v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  __int16 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v8 = -1 << *(_BYTE *)(a1 + 32);
  v9 = ~v8;
  v10 = *(_QWORD *)(a1 + 64);
  v11 = -v8;
  v44 = a1;
  v45 = a1 + 64;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  else
    v12 = -1;
  v46 = v9;
  v47 = 0;
  v48 = v12 & v10;
  v49 = a2;
  v50 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1B76ABE40(&v43);
  v13 = v43;
  if ((v43 & 0xFF00) != 0x200)
  {
    v14 = (_QWORD *)*a5;
    sub_1B76605EC(v43);
    v17 = v14[2];
    v18 = (v16 & 1) == 0;
    v19 = __OFADD__(v17, v18);
    v20 = v17 + v18;
    if (v19)
      goto LABEL_29;
    v5 = v16;
    if (v14[3] < v20)
    {
      sub_1B767BE5C(v20, a4 & 1);
      sub_1B76605EC(v13);
      if ((v5 & 1) == (v21 & 1))
        goto LABEL_10;
LABEL_8:
      v15 = sub_1B76DBF18();
      __break(1u);
    }
    if ((a4 & 1) == 0)
      goto LABEL_31;
    while (1)
    {
LABEL_10:
      v22 = v13 & 0x100;
      v23 = (_QWORD *)*a5;
      if ((v5 & 1) != 0)
      {
        v24 = v22 == 0;
        v25 = v23[7];
        v26 = *(_BYTE *)(v25 + v15);
        if (v24)
          v26 = 0;
        *(_BYTE *)(v25 + v15) = v26;
      }
      else
      {
        v23[(v15 >> 6) + 8] |= 1 << v15;
        *(_BYTE *)(v23[6] + v15) = v13;
        *(_BYTE *)(v23[7] + v15) = BYTE1(v22);
        v27 = v23[2];
        v19 = __OFADD__(v27, 1);
        v28 = v27 + 1;
        if (v19)
          goto LABEL_30;
        v23[2] = v28;
      }
      sub_1B76ABE40(&v43);
      v13 = v43;
      if ((v43 & 0xFF00) == 0x200)
        break;
      v5 = 1;
      while (1)
      {
        v32 = (_QWORD *)*a5;
        sub_1B76605EC(v13);
        v34 = v32[2];
        v35 = (v33 & 1) == 0;
        v19 = __OFADD__(v34, v35);
        v36 = v34 + v35;
        if (v19)
          break;
        a4 = v33;
        if (v32[3] < v36)
        {
          sub_1B767BE5C(v36, 1);
          sub_1B76605EC(v13);
          if ((a4 & 1) != (v37 & 1))
            goto LABEL_8;
        }
        v38 = v13 & 0x100;
        v39 = (_QWORD *)*a5;
        if ((a4 & 1) != 0)
        {
          v24 = v38 == 0;
          v30 = v39[7];
          v31 = *(_BYTE *)(v30 + v15);
          if (v24)
            v31 = 0;
          *(_BYTE *)(v30 + v15) = v31;
        }
        else
        {
          v39[(v15 >> 6) + 8] |= 1 << v15;
          *(_BYTE *)(v39[6] + v15) = v13;
          *(_BYTE *)(v39[7] + v15) = BYTE1(v38);
          v40 = v39[2];
          v19 = __OFADD__(v40, 1);
          v41 = v40 + 1;
          if (v19)
            goto LABEL_30;
          v39[2] = v41;
        }
        sub_1B76ABE40(&v43);
        v13 = v43;
        if ((v43 & 0xFF00) == 0x200)
          goto LABEL_17;
      }
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      v42 = v15;
      sub_1B767D580();
      v15 = v42;
    }
  }
LABEL_17:
  swift_release();
  swift_bridgeObjectRelease();
  sub_1B76A0A80();
  return swift_release();
}

uint64_t sub_1B76A8998(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19[4];

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v16 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v16 >= v7)
      return swift_release();
    v17 = *(_QWORD *)(v3 + 8 * v16);
    ++v8;
    if (!v17)
    {
      v8 = v16 + 1;
      if (v16 + 1 >= v7)
        return swift_release();
      v17 = *(_QWORD *)(v3 + 8 * v8);
      if (!v17)
      {
        v8 = v16 + 2;
        if (v16 + 2 >= v7)
          return swift_release();
        v17 = *(_QWORD *)(v3 + 8 * v8);
        if (!v17)
        {
          v8 = v16 + 3;
          if (v16 + 3 >= v7)
            return swift_release();
          v17 = *(_QWORD *)(v3 + 8 * v8);
          if (!v17)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v17 - 1) & v17;
    v10 = __clz(__rbit64(v17)) + (v8 << 6);
LABEL_6:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 32 * v10);
    v12 = *v11;
    v13 = v11[1];
    v14 = v11[2];
    v15 = v11[3];
    swift_bridgeObjectRetain();
    sub_1B765DF08(v14, v15);
    sub_1B76A9D88(v12, v13, v14, v15, (uint64_t)v19);
    sub_1B765DFB4(v19[0], v19[1], v19[2], v19[3]);
    swift_bridgeObjectRelease();
    result = sub_1B765DF1C(v14, v15);
  }
  v18 = v16 + 4;
  if (v18 >= v7)
    return swift_release();
  v17 = *(_QWORD *)(v3 + 8 * v18);
  if (v17)
  {
    v8 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v17 = *(_QWORD *)(v3 + 8 * v8);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1B76A8B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL4 v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  BOOL v27;
  uint64_t isStackAllocationSafe;
  uint64_t v29;
  char v30;
  unint64_t v31;
  size_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  _BYTE v37[40];
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BOOL4 v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  char *v56;
  _QWORD v57[6];

  v2 = a2;
  v57[5] = *MEMORY[0x1E0C80C00];
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  v3 = *(_QWORD *)(a1 + 56);
  v43 = a1 + 56;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  v38 = ~v4;
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & v3;
  v39 = (unint64_t)(63 - v4) >> 6;
  v56 = (char *)(a2 + 56);
  v7 = swift_bridgeObjectRetain();
  v49 = 0;
  v47 = v7;
  v51 = v2;
  while (1)
  {
    if (v6)
    {
      v50 = (v6 - 1) & v6;
      v8 = __clz(__rbit64(v6)) | (v49 << 6);
    }
    else
    {
      v9 = v49 + 1;
      if (__OFADD__(v49, 1))
      {
        __break(1u);
        JUMPOUT(0x1B76A9C90);
      }
      if (v9 >= v39)
        goto LABEL_55;
      v10 = *(_QWORD *)(v43 + 8 * v9);
      v11 = v49 + 1;
      if (!v10)
      {
        v11 = v49 + 2;
        if (v49 + 2 >= v39)
          goto LABEL_55;
        v10 = *(_QWORD *)(v43 + 8 * v11);
        if (!v10)
        {
          v11 = v49 + 3;
          if (v49 + 3 >= v39)
            goto LABEL_55;
          v10 = *(_QWORD *)(v43 + 8 * v11);
          if (!v10)
          {
            v11 = v49 + 4;
            if (v49 + 4 >= v39)
              goto LABEL_55;
            v10 = *(_QWORD *)(v43 + 8 * v11);
            if (!v10)
            {
              v12 = v49 + 5;
              if (v49 + 5 >= v39)
                goto LABEL_55;
              v10 = *(_QWORD *)(v43 + 8 * v12);
              if (!v10)
              {
                while (1)
                {
                  v11 = v12 + 1;
                  if (__OFADD__(v12, 1))
                  {
                    __break(1u);
                    JUMPOUT(0x1B76A9CC8);
                  }
                  if (v11 >= v39)
                    break;
                  v10 = *(_QWORD *)(v43 + 8 * v11);
                  ++v12;
                  if (v10)
                    goto LABEL_24;
                }
LABEL_55:
                sub_1B76A0A80();
                return v2;
              }
              v11 = v49 + 5;
            }
          }
        }
      }
LABEL_24:
      v50 = (v10 - 1) & v10;
      v8 = __clz(__rbit64(v10)) + (v11 << 6);
      v49 = v11;
    }
    v13 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 32 * v8);
    v14 = *v13;
    v15 = v13[1];
    v16 = v13[2];
    v17 = v13[3];
    sub_1B76DBF54();
    sub_1B76DBF6C();
    if (v15)
    {
      swift_bridgeObjectRetain();
      sub_1B765DF08(v16, v17);
      swift_bridgeObjectRetain();
      sub_1B76DBB1C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B765DF08(v16, v17);
    }
    v54 = v17 >> 60;
    v55 = v14;
    sub_1B76DBF6C();
    if (v17 >> 60 != 15)
    {
      sub_1B765DDFC(v16, v17);
      sub_1B76DB834();
      sub_1B765DF1C(v16, v17);
    }
    v18 = sub_1B76DBF78();
    v19 = -1 << *(_BYTE *)(v2 + 32);
    v20 = v18 & ~v19;
    if (((*(_QWORD *)&v56[(v20 >> 3) & 0xFFFFFFFFFFFFF8] >> v20) & 1) != 0)
      break;
LABEL_6:
    swift_bridgeObjectRelease();
    sub_1B765DF1C(v16, v17);
    v7 = v47;
    v6 = v50;
  }
  v21 = ~v19;
  v53 = v17 >> 62;
  v42 = HIDWORD(v16);
  v22 = __OFSUB__(HIDWORD(v16), (_DWORD)v16);
  v46 = v22;
  v45 = HIDWORD(v16) - (int)v16;
  v52 = BYTE6(v17);
  v48 = v17 & 0x3FFFFFFFFFFFFFFFLL;
  v44 = (int)v16;
  v41 = v16 >> 32;
  v40 = (v16 >> 32) - (int)v16;
  while (1)
  {
    v23 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 32 * v20);
    v25 = v23[1];
    v24 = v23[2];
    v26 = v23[3];
    if (v25)
    {
      if (!v15)
        goto LABEL_37;
      v27 = *v23 == v55 && v25 == v15;
      if (!v27 && (sub_1B76DBED0() & 1) == 0)
        goto LABEL_37;
    }
    else if (v15)
    {
      goto LABEL_37;
    }
    if (v26 >> 60 != 15)
    {
      if (v54 <= 0xE)
        __asm { BR              X8 }
      goto LABEL_36;
    }
    if (v54 > 0xE)
      break;
LABEL_36:
    sub_1B765DF08(v16, v17);
    sub_1B765DF08(v24, v26);
    sub_1B765DF1C(v24, v26);
    sub_1B765DF1C(v16, v17);
LABEL_37:
    v20 = (v20 + 1) & v21;
    if (((*(_QWORD *)&v56[(v20 >> 3) & 0xFFFFFFFFFFFFF8] >> v20) & 1) == 0)
      goto LABEL_6;
  }
  swift_bridgeObjectRelease();
  isStackAllocationSafe = sub_1B765DF1C(v16, v17);
  v57[0] = v47;
  v57[1] = v43;
  v57[2] = v38;
  v57[3] = v49;
  v57[4] = v50;
  v30 = *(_BYTE *)(v2 + 32);
  v31 = (unint64_t)((1 << v30) + 63) >> 6;
  v32 = 8 * v31;
  if ((v30 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe, v29);
    memcpy(&v37[-((v32 + 15) & 0x3FFFFFFFFFFFFFF0)], v56, v32);
    v33 = sub_1B76AAAB4((unint64_t *)&v37[-((v32 + 15) & 0x3FFFFFFFFFFFFFF0)], v31, v2, v20, v57);
    swift_release();
    sub_1B76A0A80();
    return v33;
  }
  else
  {
    v34 = (void *)swift_slowAlloc();
    memcpy(v34, v56, v32);
    v35 = sub_1B76AAAB4((unint64_t *)v34, v31, v2, v20, v57);
    swift_release();
    sub_1B76A0A80();
    MEMORY[0x1BCCA9590](v34, -1, -1);
    return v35;
  }
}

uint64_t sub_1B76A9D88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  BOOL v18;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  _OWORD *v22;
  __int128 v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t __s1;

  v10 = *v5;
  sub_1B76DBF54();
  sub_1B76DBF6C();
  swift_bridgeObjectRetain();
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1B76DBB1C();
    swift_bridgeObjectRelease();
  }
  v25 = a1;
  sub_1B76DBF6C();
  if (a4 >> 60 != 15)
  {
    sub_1B765DDFC(a3, a4);
    sub_1B76DB834();
    sub_1B765DF1C(a3, a4);
  }
  v11 = sub_1B76DBF78();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
  {
LABEL_22:
    result = swift_bridgeObjectRelease();
    *(_OWORD *)a5 = xmmword_1B76DC6E0;
    *(_QWORD *)(a5 + 16) = 0;
    *(_QWORD *)(a5 + 24) = 0;
    return result;
  }
  v26 = ~v12;
  while (1)
  {
    v14 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 32 * v13);
    v15 = v14[1];
    v16 = v14[2];
    v17 = v14[3];
    if (v15)
    {
      if (!a2)
        goto LABEL_9;
      v18 = *v14 == v25 && v15 == a2;
      if (!v18 && (sub_1B76DBED0() & 1) == 0)
        goto LABEL_9;
    }
    else if (a2)
    {
      goto LABEL_9;
    }
    if (v17 >> 60 != 15)
    {
      if (a4 >> 60 != 15)
        __asm { BR              X8 }
      goto LABEL_8;
    }
    if (a4 >> 60 == 15)
      break;
LABEL_8:
    sub_1B765DF08(a3, a4);
    sub_1B765DF08(v16, v17);
    sub_1B765DF1C(v16, v17);
    sub_1B765DF1C(a3, a4);
LABEL_9:
    v13 = (v13 + 1) & v26;
    if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      goto LABEL_22;
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v5;
  __s1 = *v5;
  *v5 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_1B7687E84();
    v21 = __s1;
  }
  v22 = (_OWORD *)(*(_QWORD *)(v21 + 48) + 32 * v13);
  v23 = v22[1];
  *(_OWORD *)a5 = *v22;
  *(_OWORD *)(a5 + 16) = v23;
  sub_1B76AB94C(v13);
  *v5 = __s1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76AAAB4(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v35;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v6 = *(_QWORD *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v7 = v6 - 1;
  v40 = a3 + 56;
  v37 = a5;
LABEL_2:
  v35 = v7;
LABEL_4:
  while (2)
  {
    v9 = a5[3];
    v8 = a5[4];
    if (v8)
    {
      v10 = (v8 - 1) & v8;
      v11 = __clz(__rbit64(v8)) | (v9 << 6);
LABEL_16:
      v17 = (uint64_t *)(*(_QWORD *)(*a5 + 48) + 32 * v11);
      v19 = *v17;
      v18 = v17[1];
      v20 = v17[2];
      v21 = v17[3];
      a5[3] = v9;
      a5[4] = v10;
      sub_1B76DBF54();
      sub_1B76DBF6C();
      if (v18)
      {
        swift_bridgeObjectRetain();
        sub_1B765DF08(v20, v21);
        swift_bridgeObjectRetain();
        sub_1B76DBB1C();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1B765DF08(v20, v21);
      }
      sub_1B76DBF6C();
      if (v21 >> 60 != 15)
      {
        sub_1B765DDFC(v20, v21);
        sub_1B76DB834();
        sub_1B765DF1C(v20, v21);
      }
      v22 = sub_1B76DBF78();
      v23 = -1 << *(_BYTE *)(a3 + 32);
      v24 = v22 & ~v23;
      if (((*(_QWORD *)(v40 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
      {
LABEL_3:
        swift_bridgeObjectRelease();
        sub_1B765DF1C(v20, v21);
        a5 = v37;
        continue;
      }
      v38 = v19;
      v39 = ~v23;
      while (1)
      {
        v25 = (_QWORD *)(*(_QWORD *)(a3 + 48) + 32 * v24);
        v27 = v25[1];
        v26 = v25[2];
        v28 = v25[3];
        if (v27)
        {
          if (!v18)
            goto LABEL_25;
          v29 = *v25 == v38 && v27 == v18;
          if (!v29 && (sub_1B76DBED0() & 1) == 0)
            goto LABEL_25;
        }
        else if (v18)
        {
          goto LABEL_25;
        }
        if (v28 >> 60 == 15)
        {
          if (v21 >> 60 == 15)
          {
            swift_bridgeObjectRelease();
            sub_1B765DF1C(v20, v21);
            v30 = (v24 >> 3) & 0x1FFFFFFFFFFFFFF8;
            v31 = *(unint64_t *)((char *)a1 + v30);
            *(unint64_t *)((char *)a1 + v30) = v31 & ~(1 << v24);
            a5 = v37;
            if ((v31 & (1 << v24)) != 0)
            {
              v7 = v35 - 1;
              if (__OFSUB__(v35, 1))
              {
                __break(1u);
                JUMPOUT(0x1B76AB8D8);
              }
              if (v35 == 1)
                return MEMORY[0x1E0DEE9E8];
              goto LABEL_2;
            }
            goto LABEL_4;
          }
        }
        else if (v21 >> 60 != 15)
        {
          __asm { BR              X8 }
        }
        sub_1B765DF08(v20, v21);
        sub_1B765DF08(v26, v28);
        sub_1B765DF1C(v26, v28);
        sub_1B765DF1C(v20, v21);
LABEL_25:
        v24 = (v24 + 1) & v39;
        if (((*(_QWORD *)(v40 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
          goto LABEL_3;
      }
    }
    break;
  }
  v12 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    JUMPOUT(0x1B76AB888);
  }
  v13 = (unint64_t)(a5[2] + 64) >> 6;
  if (v12 >= v13)
  {
    v12 = a5[3];
    goto LABEL_52;
  }
  v14 = a5[1];
  v15 = *(_QWORD *)(v14 + 8 * v12);
  if (v15)
  {
LABEL_15:
    v10 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + (v12 << 6);
    v9 = v12;
    goto LABEL_16;
  }
  v16 = v9 + 2;
  if (v9 + 2 >= v13)
    goto LABEL_52;
  v15 = *(_QWORD *)(v14 + 8 * v16);
  if (v15)
    goto LABEL_11;
  if (v9 + 3 >= v13)
    goto LABEL_53;
  v15 = *(_QWORD *)(v14 + 8 * (v9 + 3));
  if (v15)
  {
    v12 = v9 + 3;
    goto LABEL_15;
  }
  v16 = v9 + 4;
  if (v9 + 4 >= v13)
  {
    v12 = v9 + 3;
    goto LABEL_52;
  }
  v15 = *(_QWORD *)(v14 + 8 * v16);
  if (v15)
  {
LABEL_11:
    v12 = v16;
    goto LABEL_15;
  }
  v12 = v9 + 5;
  if (v9 + 5 >= v13)
  {
LABEL_53:
    v12 = v16;
    goto LABEL_52;
  }
  v15 = *(_QWORD *)(v14 + 8 * v12);
  if (v15)
    goto LABEL_15;
  v12 = v13 - 1;
  v32 = v9 + 6;
  while (v13 != v32)
  {
    v15 = *(_QWORD *)(v14 + 8 * v32++);
    if (v15)
    {
      v12 = v32 - 1;
      goto LABEL_15;
    }
  }
LABEL_52:
  a5[3] = v12;
  a5[4] = 0;
  swift_retain();
  return sub_1B76BCEE4(a1, a2, v35, a3);
}

unint64_t sub_1B76AB94C(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1B76DBD68();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      v25 = v4;
      do
      {
        v11 = v7;
        v12 = v3;
        v13 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 32 * v6);
        v14 = v13[1];
        v16 = v13[2];
        v15 = v13[3];
        sub_1B76DBF54();
        sub_1B76DBF6C();
        if (v14)
        {
          swift_bridgeObjectRetain();
          sub_1B765DF08(v16, v15);
          swift_bridgeObjectRetain();
          sub_1B76DBB1C();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1B765DF08(v16, v15);
        }
        sub_1B76DBF6C();
        if (v15 >> 60 != 15)
        {
          sub_1B765DDFC(v16, v15);
          sub_1B76DB834();
          sub_1B765DF1C(v16, v15);
        }
        v17 = sub_1B76DBF78();
        swift_bridgeObjectRelease();
        sub_1B765DF1C(v16, v15);
        v7 = v11;
        v18 = v17 & v11;
        if (v2 >= (uint64_t)v9)
        {
          v4 = v25;
          v3 = v12;
          if (v18 < v9)
            goto LABEL_5;
        }
        else
        {
          v4 = v25;
          v3 = v12;
          if (v18 >= v9)
            goto LABEL_16;
        }
        if (v2 >= (uint64_t)v18)
        {
LABEL_16:
          v19 = *(_QWORD *)(v3 + 48);
          v20 = (_OWORD *)(v19 + 32 * v2);
          v21 = (_OWORD *)(v19 + 32 * v6);
          if (v2 != v6 || (v2 = v6, v20 >= v21 + 2))
          {
            v10 = v21[1];
            *v20 = *v21;
            v20[1] = v10;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v11;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v22 = *(_QWORD *)(v3 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v24;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_1B76ABBD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  __int128 v7;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v3;
  v7 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v7;
  *(_QWORD *)(a2 + 40) = v4;
  *(_BYTE *)(a2 + 48) = v5;
  swift_bridgeObjectRetain();
  sub_1B765DF08(v3, v7);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76ABC40@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  int64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  void (*v14)(_QWORD *);
  uint64_t result;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  __int128 v22;
  _QWORD v23[3];
  __int128 v24;
  uint64_t v25;
  char v26;

  v3 = *v1;
  v5 = v1[3];
  v4 = v1[4];
  v6 = v5;
  if (v4)
  {
    v7 = (v4 - 1) & v4;
    v8 = __clz(__rbit64(v4)) | (v5 << 6);
LABEL_3:
    v9 = *(_QWORD *)(v3 + 48) + 48 * v8;
    v10 = *(_QWORD *)(v9 + 8);
    v11 = *(_QWORD *)(v9 + 16);
    v12 = *(_BYTE *)(*(_QWORD *)(v3 + 56) + v8);
    v13 = *(_QWORD *)(v9 + 40);
    v14 = (void (*)(_QWORD *))v1[5];
    v23[0] = *(_QWORD *)v9;
    v23[1] = v10;
    v23[2] = v11;
    v22 = *(_OWORD *)(v9 + 24);
    v1[3] = v6;
    v1[4] = v7;
    v24 = v22;
    v25 = v13;
    v26 = v12;
    swift_bridgeObjectRetain();
    sub_1B765DF08(v11, v22);
    swift_bridgeObjectRetain();
    v14(v23);
    swift_bridgeObjectRelease();
    sub_1B765DF1C(v11, v22);
    return swift_bridgeObjectRelease();
  }
  v16 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
  }
  else
  {
    v17 = (unint64_t)(v1[2] + 64) >> 6;
    if (v16 < v17)
    {
      v18 = v1[1];
      v19 = *(_QWORD *)(v18 + 8 * v16);
      if (v19)
      {
LABEL_7:
        v7 = (v19 - 1) & v19;
        v8 = __clz(__rbit64(v19)) + (v16 << 6);
        v6 = v16;
        goto LABEL_3;
      }
      v20 = v5 + 2;
      v6 = v5 + 1;
      if (v5 + 2 < v17)
      {
        v19 = *(_QWORD *)(v18 + 8 * v20);
        if (v19)
        {
LABEL_10:
          v16 = v20;
          goto LABEL_7;
        }
        v6 = v5 + 2;
        if (v5 + 3 < v17)
        {
          v19 = *(_QWORD *)(v18 + 8 * (v5 + 3));
          if (v19)
          {
            v16 = v5 + 3;
            goto LABEL_7;
          }
          v20 = v5 + 4;
          v6 = v5 + 3;
          if (v5 + 4 < v17)
          {
            v19 = *(_QWORD *)(v18 + 8 * v20);
            if (v19)
              goto LABEL_10;
            v16 = v5 + 5;
            v6 = v5 + 4;
            if (v5 + 5 < v17)
            {
              v19 = *(_QWORD *)(v18 + 8 * v16);
              if (v19)
                goto LABEL_7;
              v6 = v17 - 1;
              v21 = v5 + 6;
              while (v17 != v21)
              {
                v19 = *(_QWORD *)(v18 + 8 * v21++);
                if (v19)
                {
                  v16 = v21 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    v1[3] = v6;
    v1[4] = 0;
    *(_OWORD *)a1 = xmmword_1B76DC6E0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_BYTE *)(a1 + 48) = 0;
  }
  return result;
}

uint64_t sub_1B76ABE40@<X0>(_WORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  char v9;
  uint64_t (*v10)(_BYTE *);
  uint64_t result;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  _BYTE v18[2];

  v2 = *v1;
  v4 = v1[3];
  v3 = v1[4];
  v5 = v4;
  if (v3)
  {
    v6 = (v3 - 1) & v3;
    v7 = __clz(__rbit64(v3)) | (v4 << 6);
LABEL_3:
    v8 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v7);
    v9 = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v7);
    v1[3] = v5;
    v1[4] = v6;
    v10 = (uint64_t (*)(_BYTE *))v1[5];
    v18[0] = v8;
    v18[1] = v9;
    return v10(v18);
  }
  v12 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
  }
  else
  {
    v13 = (unint64_t)(v1[2] + 64) >> 6;
    if (v12 < v13)
    {
      v14 = v1[1];
      v15 = *(_QWORD *)(v14 + 8 * v12);
      if (v15)
      {
LABEL_7:
        v6 = (v15 - 1) & v15;
        v7 = __clz(__rbit64(v15)) + (v12 << 6);
        v5 = v12;
        goto LABEL_3;
      }
      v16 = v4 + 2;
      v5 = v4 + 1;
      if (v4 + 2 < v13)
      {
        v15 = *(_QWORD *)(v14 + 8 * v16);
        if (v15)
        {
LABEL_10:
          v12 = v16;
          goto LABEL_7;
        }
        v5 = v4 + 2;
        if (v4 + 3 < v13)
        {
          v15 = *(_QWORD *)(v14 + 8 * (v4 + 3));
          if (v15)
          {
            v12 = v4 + 3;
            goto LABEL_7;
          }
          v16 = v4 + 4;
          v5 = v4 + 3;
          if (v4 + 4 < v13)
          {
            v15 = *(_QWORD *)(v14 + 8 * v16);
            if (v15)
              goto LABEL_10;
            v12 = v4 + 5;
            v5 = v4 + 4;
            if (v4 + 5 < v13)
            {
              v15 = *(_QWORD *)(v14 + 8 * v12);
              if (v15)
                goto LABEL_7;
              v5 = v13 - 1;
              v17 = v4 + 6;
              while (v13 != v17)
              {
                v15 = *(_QWORD *)(v14 + 8 * v17++);
                if (v15)
                {
                  v12 = v17 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    v1[3] = v5;
    v1[4] = 0;
    *a1 = 512;
  }
  return result;
}

_BYTE *sub_1B76ABF94@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  char v2;

  v2 = result[1];
  *a2 = *result;
  a2[1] = v2;
  return result;
}

uint64_t sub_1B76ABFA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v8 = a1;
  v9 = a2;
  v10 = BYTE2(a2);
  v11 = BYTE3(a2);
  v12 = BYTE4(a2);
  v13 = BYTE5(a2);
  sub_1B76A80D8((uint64_t)&v8, (uint64_t)&v8 + BYTE6(a2), a3, a4);
  if (!v4)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_1B76AC07C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_1B76DB75C();
  v11 = result;
  if (result)
  {
    result = sub_1B76DB774();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_1B76DB768();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_1B76A80D8(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_1B76AC130(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  char v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  char v20;

  v6 = a2 + 64;
  v7 = 1 << *(_BYTE *)(a2 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a2 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain();
  v11 = 0;
  while (1)
  {
    while (1)
    {
      v12 = a1;
      if (!v9)
        break;
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v11 << 6);
      a1 = 0;
      if ((v12 & 1) != 0)
        goto LABEL_20;
    }
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v11 >= v10)
      goto LABEL_27;
    v16 = *(_QWORD *)(v6 + 8 * v11);
    if (!v16)
      break;
LABEL_19:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
    a1 = 0;
    if ((v12 & 1) != 0)
    {
LABEL_20:
      a1 = 0;
      if (*(_QWORD *)(a3 + 16))
      {
        v18 = *(_BYTE *)(*(_QWORD *)(a2 + 56) + v14);
        sub_1B76605EC(*(_BYTE *)(*(_QWORD *)(a2 + 48) + v14));
        a1 = 0;
        if ((v20 & 1) != 0)
          a1 = v18 ^ *(_BYTE *)(*(_QWORD *)(a3 + 56) + v19) ^ 1;
      }
    }
  }
  v17 = v11 + 1;
  if (v11 + 1 >= v10)
    goto LABEL_27;
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
    goto LABEL_18;
  v17 = v11 + 2;
  if (v11 + 2 >= v10)
    goto LABEL_27;
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
    goto LABEL_18;
  v17 = v11 + 3;
  if (v11 + 3 >= v10)
    goto LABEL_27;
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
    goto LABEL_18;
  v17 = v11 + 4;
  if (v11 + 4 >= v10)
  {
LABEL_27:
    swift_release();
    return;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
LABEL_18:
    v11 = v17;
    goto LABEL_19;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v10)
      goto LABEL_27;
    v16 = *(_QWORD *)(v6 + 8 * v11);
    ++v17;
    if (v16)
      goto LABEL_19;
  }
LABEL_29:
  __break(1u);
}

uint64_t sub_1B76AC2D0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t result;
  int64_t v12;
  void (*v13)(uint64_t, uint64_t);
  char v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v18;
  int64_t v19;
  _OWORD *v20;
  __int128 v21;
  __int128 v22;
  char v23;
  unint64_t v24;
  char v25;
  void (*v26)(uint64_t, uint64_t);
  char v27;
  char v28;
  _OWORD v29[3];

  v6 = a2 + 64;
  v7 = 1 << *(_BYTE *)(a2 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a2 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v12 = 0;
  v13 = (void (*)(uint64_t, uint64_t))sub_1B765DF08;
  while (1)
  {
    v14 = a1;
    if (v9)
    {
      v15 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v16 = v15 | (v12 << 6);
      goto LABEL_20;
    }
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v12 >= v10)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v12);
    if (!v18)
      break;
LABEL_19:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v12 << 6);
LABEL_20:
    a1 = 0;
    v20 = (_OWORD *)(*(_QWORD *)(a2 + 48) + 48 * v16);
    v22 = v20[1];
    v21 = v20[2];
    v29[0] = *v20;
    v29[1] = v22;
    v29[2] = v21;
    if ((v14 & 1) != 0)
    {
      a1 = 0;
      if (*(_QWORD *)(a3 + 16))
      {
        v23 = *(_BYTE *)(*(_QWORD *)(a2 + 56) + v16);
        sub_1B768A800((uint64_t)v29, v13);
        v24 = sub_1B76605D0((uint64_t *)v29);
        if ((v25 & 1) != 0)
        {
          v26 = v13;
          v27 = *(_BYTE *)(*(_QWORD *)(a3 + 56) + v24);
          result = sub_1B768A858((uint64_t)v29, (void (*)(uint64_t, uint64_t))sub_1B765DF1C);
          v28 = v23 ^ v27;
          v13 = v26;
          a1 = v28 ^ 1;
        }
        else
        {
          result = sub_1B768A858((uint64_t)v29, (void (*)(uint64_t, uint64_t))sub_1B765DF1C);
          a1 = 0;
        }
      }
    }
  }
  v19 = v12 + 1;
  if (v12 + 1 >= v10)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_18;
  v19 = v12 + 2;
  if (v12 + 2 >= v10)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_18;
  v19 = v12 + 3;
  if (v12 + 3 >= v10)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_18;
  v19 = v12 + 4;
  if (v12 + 4 >= v10)
  {
LABEL_28:
    swift_release();
    return a1 & 1;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_18:
    v12 = v19;
    goto LABEL_19;
  }
  while (1)
  {
    v12 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v12 >= v10)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v12);
    ++v19;
    if (v18)
      goto LABEL_19;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1B76AC4D8(uint64_t a1)
{
  char *v1;

  if (*(_QWORD *)(a1 + 16))
  {
    v1 = (char *)&loc_1B76AC54C + dword_1B76AC5F4[*(_QWORD *)(swift_bridgeObjectRetain() + 40) >> 62];
    __asm { BR              X9 }
  }
  return 0;
}

uint64_t sub_1B76AC604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, char a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v15;
  int64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  BOOL v21;
  unint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  unsigned int v26;
  int64_t v27;
  uint64_t v29;
  uint64_t v31;
  uint64_t v33;
  int64_t v34;
  _QWORD v37[3];

  v7 = a1;
  v37[2] = *MEMORY[0x1E0C80C00];
  v33 = a1 + 56;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a1 + 56);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = 0;
  v29 = swift_bridgeObjectRetain();
  v31 = a3;
  while (1)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v11 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_49;
    }
    if (v11 >= v34)
      goto LABEL_47;
    v15 = *(_QWORD *)(v33 + 8 * v11);
    if (!v15)
      break;
LABEL_18:
    v10 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v11 << 6);
LABEL_19:
    v17 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 32 * v13);
    v18 = v17[1];
    v20 = v17[2];
    v19 = v17[3];
    if (v18)
    {
      if (!a3)
      {
        swift_bridgeObjectRetain();
        sub_1B765DF08(v20, v19);
        goto LABEL_5;
      }
      v21 = *v17 == a2 && v18 == a3;
      if (v21 || (sub_1B76DBED0() & 1) != 0)
      {
LABEL_29:
        if (v19 >> 60 == 15)
        {
          v22 = a5;
          if (a5 >> 60 == 15)
            goto LABEL_46;
        }
        else
        {
          v22 = a5;
          if (a5 >> 60 != 15)
            __asm { BR              X8 }
        }
        swift_bridgeObjectRetain();
        sub_1B765DF08(v20, v19);
        sub_1B765DF08(v20, v19);
        sub_1B765DF08(a4, v22);
        sub_1B765DF1C(v20, v19);
        a3 = v31;
        sub_1B765DF1C(a4, v22);
        goto LABEL_34;
      }
      swift_bridgeObjectRetain();
    }
    else if (!a3)
    {
      goto LABEL_29;
    }
    sub_1B765DF08(v20, v19);
LABEL_34:
    if ((a6 & 1) != 0 && a3 && v18)
    {
      LOBYTE(v37[0]) = 0;
      v23 = (void *)objc_opt_self();
      v24 = (void *)sub_1B76DBAB0();
      v25 = (void *)sub_1B76DBAB0();
      v26 = objc_msgSend(v23, sel_compareDomain_withDomainPattern_outExactMatch_, v24, v25, v37);
      swift_bridgeObjectRelease();

      v7 = v29;
      a3 = v31;
      sub_1B765DF1C(v20, v19);
      if (v26)
      {
LABEL_46:
        swift_release();
        return 1;
      }
    }
    else
    {
LABEL_5:
      swift_bridgeObjectRelease();
      sub_1B765DF1C(v20, v19);
    }
  }
  v16 = v11 + 1;
  if (v11 + 1 >= v34)
    goto LABEL_47;
  v15 = *(_QWORD *)(v33 + 8 * v16);
  if (v15)
    goto LABEL_17;
  v16 = v11 + 2;
  if (v11 + 2 >= v34)
    goto LABEL_47;
  v15 = *(_QWORD *)(v33 + 8 * v16);
  if (v15)
    goto LABEL_17;
  v16 = v11 + 3;
  if (v11 + 3 >= v34)
    goto LABEL_47;
  v15 = *(_QWORD *)(v33 + 8 * v16);
  if (v15)
  {
LABEL_17:
    v11 = v16;
    goto LABEL_18;
  }
  v27 = v11 + 4;
  if (v11 + 4 < v34)
  {
    v15 = *(_QWORD *)(v33 + 8 * v27);
    v11 += 4;
    if (!v15)
    {
      while (1)
      {
        v11 = v27 + 1;
        if (__OFADD__(v27, 1))
          break;
        if (v11 >= v34)
          goto LABEL_47;
        v15 = *(_QWORD *)(v33 + 8 * v11);
        ++v27;
        if (v15)
          goto LABEL_18;
      }
LABEL_49:
      __break(1u);
      JUMPOUT(0x1B76ACEACLL);
    }
    goto LABEL_18;
  }
LABEL_47:
  swift_release();
  return 0;
}

uint64_t sub_1B76ACF5C(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  int v30;
  __int128 v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char v35;
  char v36;
  char v37;
  uint64_t v38;
  char v39;
  char *v40;
  char v41;
  void (*v42)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  _OWORD v46[3];
  __int128 v47;
  __int128 v48;
  __int128 v49;

  v44 = a6;
  v10 = sub_1B76DBD20();
  v11 = *(_QWORD *)(v10 - 8);
  v13 = MEMORY[0x1E0C80A78](v10, v12);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v13, v16);
  v19 = (char *)&v44 - v18;
  v20 = *(_QWORD *)(a5 - 8);
  v22 = MEMORY[0x1E0C80A78](v17, v21);
  v24 = (char *)&v44 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x1E0C80A78](v22, v25);
  MEMORY[0x1E0C80A78](v26, v27);
  v45 = *(_QWORD *)a1;
  v30 = *(unsigned __int8 *)(a1 + 16);
  v31 = a2[1];
  v46[0] = *a2;
  v46[1] = v31;
  v46[2] = a2[2];
  if (!v30)
  {
    v32 = (char *)&v44 - v28;
    v33 = v29;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v19, a3, v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, a5) == 1)
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v19, v10);
      v34 = v45;
      if (qword_1EF177258 != -1)
        swift_once();
      v47 = xmmword_1EF1780E8;
      v48 = xmmword_1EF1780F8;
      v49 = xmmword_1EF178108;
      sub_1B768A800((uint64_t)&v47, (void (*)(uint64_t, uint64_t))sub_1B765E0D4);
      v35 = sub_1B76A3E80((uint64_t *)&v47, v34);
      sub_1B768A858((uint64_t)&v47, (void (*)(uint64_t, uint64_t))sub_1B765E0D8);
      if ((v35 & 1) == 0)
      {
        v36 = sub_1B76A3E80((uint64_t *)v46, v34);
        return v36 & 1;
      }
      goto LABEL_9;
    }
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v32, v19, a5);
    v38 = v45;
    if (qword_1EF177258 != -1)
      swift_once();
    v47 = xmmword_1EF1780E8;
    v48 = xmmword_1EF1780F8;
    v49 = xmmword_1EF178108;
    sub_1B768A800((uint64_t)&v47, (void (*)(uint64_t, uint64_t))sub_1B765E0D4);
    v39 = sub_1B76A3E80((uint64_t *)&v47, v38);
    sub_1B768A858((uint64_t)&v47, (void (*)(uint64_t, uint64_t))sub_1B765E0D8);
    if ((v39 & 1) != 0)
    {
      v40 = v33;
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v33, v32, a5);
    }
    else
    {
      v41 = sub_1B76A3E80((uint64_t *)v46, v38);
      v40 = v33;
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v33, v32, a5);
      if ((v41 & 1) == 0)
      {
        v36 = 0;
        goto LABEL_20;
      }
    }
    v36 = sub_1B76DBC24() ^ 1;
LABEL_20:
    v42 = *(void (**)(char *, uint64_t))(v20 + 8);
    v42(v40, a5);
    v42(v32, a5);
    return v36 & 1;
  }
  if (v30 != 1)
  {
    v36 = 0;
    return v36 & 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v15, a3, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v15, 1, a5) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v24, v15, a5);
    v37 = sub_1B76DBC24();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v24, a5);
    v36 = v37 ^ 1;
    return v36 & 1;
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
LABEL_9:
  v36 = 1;
  return v36 & 1;
}

unint64_t sub_1B76AD314()
{
  unint64_t result;

  result = qword_1EF178250;
  if (!qword_1EF178250)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for WebDomain, &type metadata for WebDomain);
    atomic_store(result, (unint64_t *)&qword_1EF178250);
  }
  return result;
}

uint64_t sub_1B76AD358(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 && a3 != 2)
  {
    if (a3 != 1)
      return result;
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76AD3A8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 && a3 != 2)
  {
    if (a3 != 1)
      return result;
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_1B76AD3F8()
{
  unint64_t result;

  result = qword_1EF178260;
  if (!qword_1EF178260)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for UserSafetySettings.InterventionType, &type metadata for UserSafetySettings.InterventionType);
    atomic_store(result, (unint64_t *)&qword_1EF178260);
  }
  return result;
}

uint64_t sub_1B76AD43C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (!a3)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1B76AD46C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (!a3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for CombineOperator.RestrictivePolicy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CombineOperator.RestrictivePolicy);
}

uint64_t sub_1B76AD4A8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;

  if (!a3)
  {
    if (a6)
    {
      v15 = a6 != 1;
      return v15 & 1;
    }
    sub_1B76A7D6C(a1, a4);
    if ((v18 & 1) == 0 || (sub_1B76A7EE8(a2, a5) & 1) == 0)
    {
      swift_bridgeObjectRetain();
      sub_1B76AC130(1, a4, a1);
      v21 = v20;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v22 = sub_1B76AC2D0(1, a5, a2);
      swift_bridgeObjectRelease();
      v15 = v21 & v22;
      return v15 & 1;
    }
    goto LABEL_29;
  }
  if (a3 == 1)
  {
    if (a6 == 1)
    {
      v9 = a1 & 1;
      if ((a1 & 1) != 0)
        v10 = 1852138868;
      else
        v10 = 0x646C696863;
      if (v9)
        v11 = 0xE400000000000000;
      else
        v11 = 0xE500000000000000;
      v12 = a4 & 1;
      if ((a4 & 1) != 0)
        v13 = 1852138868;
      else
        v13 = 0x646C696863;
      if ((a4 & 1) != 0)
        v14 = 0xE400000000000000;
      else
        v14 = 0xE500000000000000;
      if (v10 == v13 && v11 == v14)
      {
        swift_bridgeObjectRelease_n();
        v15 = 1;
      }
      else
      {
        v19 = sub_1B76DBED0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v15 = v19 | (v12 >= v9);
      }
      return v15 & 1;
    }
LABEL_29:
    v15 = 1;
    return v15 & 1;
  }
  v15 = a6 == 2 && (a5 | a4) == 0;
  return v15 & 1;
}

void sub_1B76AD63C()
{
  JUMPOUT(0x1BCCA94E8);
}

void sub_1B76AD64C()
{
  JUMPOUT(0x1BCCA94E8);
}

void sub_1B76AD65C()
{
  JUMPOUT(0x1BCCA94E8);
}

void sub_1B76AD66C()
{
  JUMPOUT(0x1BCCA94E8);
}

void sub_1B76AD67C()
{
  JUMPOUT(0x1BCCA94E8);
}

uint64_t sub_1B76AD690(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *sub_1B76AD6C8(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_1B76AD868(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t sub_1B76AD8A0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1B76AD8E8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for CombineOperator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CombineOperator);
}

uint64_t type metadata accessor for CombineOperator.Bool(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CombineOperator.Bool);
}

uint64_t type metadata accessor for CombineOperator.SingleObject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CombineOperator.SingleObject);
}

uint64_t sub_1B76AD964(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B76AD9B0 + 4 * byte_1B76DE43B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B76AD9E4 + 4 * byte_1B76DE436[v4]))();
}

uint64_t sub_1B76AD9E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76AD9EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B76AD9F4);
  return result;
}

uint64_t sub_1B76ADA00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B76ADA08);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B76ADA0C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76ADA14(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76ADA20(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B76ADA60 + 4 * byte_1B76DE440[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B76ADA80 + 4 * byte_1B76DE445[v4]))();
}

_BYTE *sub_1B76ADA60(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B76ADA80(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B76ADA88(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B76ADA90(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B76ADA98(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B76ADAA0(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1B76ADAAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1B76ADAE4(a1, a2, MEMORY[0x1E0DEA3C0], a3);
}

uint64_t sub_1B76ADAC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1B76ADAE4(a1, a2, MEMORY[0x1E0DEA3B8], a3);
}

uint64_t sub_1B76ADAE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, _QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;

  v8 = *(_QWORD *)(v4 + 32);
  if ((a3(a1, a2, v8, *(_QWORD *)(v4 + 48)) & 1) != 0)
    v9 = a1;
  else
    v9 = a2;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a4, v9, v8);
}

uint64_t NewsSettings.Name.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1B76DBE70();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void *static NewsSettings.Name.allCases.getter()
{
  return &unk_1E6CACA98;
}

uint64_t NewsSettings.Name.rawValue.getter()
{
  return 0x6E65642E7377656ELL;
}

uint64_t sub_1B76ADBF8()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  return sub_1B76DBF78();
}

uint64_t sub_1B76ADC54()
{
  return sub_1B76DBB1C();
}

uint64_t sub_1B76ADC78()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  return sub_1B76DBF78();
}

uint64_t sub_1B76ADCD0@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1B76DBE70();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1B76ADD20(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "news.denyNews");
  *(_WORD *)(a1 + 14) = -4864;
}

void sub_1B76ADD48(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6CACBC0;
}

uint64_t NewsSettings.denyNews.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v0;
  v1 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  if (qword_1EF177278 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = sub_1B76584AC((uint64_t)&byte_1EF1782F8, v2, v1, v4, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1B76ADDEC@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  v7 = qword_1EF177278;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_1B76584AC((uint64_t)&byte_1EF1782F8, v4, v3, v6, v5);
  swift_bridgeObjectRelease_n();
  result = swift_bridgeObjectRelease_n();
  *a2 = v8;
  return result;
}

uint64_t NewsSettings.denyNews.setter(unsigned __int8 a1)
{
  uint64_t *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v14[4];
  _BYTE v15[8];
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;

  v2 = a1;
  if (qword_1EF177278 != -1)
    swift_once();
  sub_1B765A668((uint64_t)&byte_1EF1782F8, (uint64_t)v15);
  v4 = *v1;
  v3 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (v2 == 2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = 0;
  }
  else
  {
    v8 = v2 & 1;
    v9 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = objc_msgSend(v9, sel_initWithBool_, v8);
  }
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    v10 = v16;
    v11 = v17;
    v14[0] = v4;
    v14[1] = v3;
    v14[2] = v6;
    v14[3] = v5;
    v12 = v18;
    swift_retain();
    sub_1B765ED7C(v7, v10, v11, v14, v12);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  return sub_1B76671D4((uint64_t)v15);
}

uint64_t (*NewsSettings.denyNews.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177278 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF1782F8, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B76AE0DC;
}

uint64_t sub_1B76AE0DC(uint64_t a1)
{
  return NewsSettings.denyNews.setter(*(_BYTE *)(a1 + 8));
}

uint64_t NewsSettings.effectiveDenyNews.getter()
{
  if (qword_1EF177278 != -1)
    swift_once();
  return sub_1B7659CC4(&byte_1EF1782F8);
}

uint64_t sub_1B76AE140()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF178328 = result;
  unk_1EF178330 = &off_1E6CB07B8;
  byte_1EF178310 = 0;
  byte_1EF1782F8 = 0;
  strcpy((char *)&qword_1EF178300, "news.denyNews");
  unk_1EF17830E = -4864;
  word_1EF178338 = 256;
  byte_1EF17833A = 0;
  qword_1EF178340 = 0;
  byte_1EF178348 = 1;
  return result;
}

uint64_t static NewsSettings.denyNews.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EF177278 != -1)
    swift_once();
  return sub_1B765A668((uint64_t)&byte_1EF1782F8, a1);
}

unint64_t sub_1B76AE208()
{
  unint64_t result;

  result = qword_1EF178350;
  if (!qword_1EF178350)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for NewsSettings.Name, &type metadata for NewsSettings.Name);
    atomic_store(result, (unint64_t *)&qword_1EF178350);
  }
  return result;
}

unint64_t sub_1B76AE250()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF178358;
  if (!qword_1EF178358)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF178360);
    result = MEMORY[0x1BCCA94E8](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF178358);
  }
  return result;
}

uint64_t sub_1B76AE2A0(unsigned __int8 *a1)
{
  return NewsSettings.denyNews.setter(*a1);
}

ValueMetadata *type metadata accessor for NewsSettings()
{
  return &type metadata for NewsSettings;
}

uint64_t storeEnumTagSinglePayload for NewsSettings.Name(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B76AE314 + 4 * byte_1B76DE7F0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B76AE334 + 4 * byte_1B76DE7F5[v4]))();
}

_BYTE *sub_1B76AE314(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B76AE334(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B76AE33C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B76AE344(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B76AE34C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B76AE354(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for NewsSettings.Name()
{
  return &type metadata for NewsSettings.Name;
}

void sub_1B76AE370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v12;
  unint64_t v13;
  Class isa;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20[2];
  uint64_t v21;
  unint64_t v22;
  char v23[8];
  uint64_t v24;
  unint64_t v25;
  char v26[8];
  uint64_t v27;

  sub_1B76AEFF0(a1, (uint64_t)v23);
  v12 = v24;
  v13 = v25;
  sub_1B76AEFF0(a1, (uint64_t)v20);
  sub_1B76AEFF0(a1, (uint64_t)v26);
  if (v27 == 1)
  {
    isa = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1B765DF08(v12, v13);
    swift_bridgeObjectRetain();
    isa = Application.persistableValue()().isa;
    v15 = v21;
    v16 = v22;
    swift_bridgeObjectRelease();
    sub_1B765DF1C(v15, v16);
    swift_bridgeObjectRelease();
  }
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    v17 = *(_QWORD *)(a2 + 48);
    v18 = *(_QWORD *)(a2 + 56);
    v20[0] = a3;
    v20[1] = a4;
    v21 = a5;
    v22 = a6;
    v19 = *(unsigned __int8 *)(a2 + 106);
    swift_retain();
    sub_1B765ED7C(isa, v17, v18, v20, v19);
    swift_release();
  }

}

void sub_1B76AE4DC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1B76AE554(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(void))sub_1B76AD43C, (uint64_t (*)(uint64_t))UserSafetySettings.ScanningPolicy.persistableValue(), (void (*)(uint64_t, uint64_t, _QWORD))sub_1B76AD46C);
}

void sub_1B76AE518(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1B76AE554(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(void))sub_1B76AD358, (uint64_t (*)(uint64_t))WebContentSettings.FilterPolicy.persistableValue(), (void (*)(uint64_t, uint64_t, _QWORD))sub_1B76AD3A8);
}

void sub_1B76AE554(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void), uint64_t (*a10)(uint64_t), void (*a11)(uint64_t, uint64_t, _QWORD))
{
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v21 = a1;
  v22 = a2;
  LOBYTE(v23) = a3;
  if (a3 == -1)
  {
    v17 = 0;
  }
  else
  {
    v16 = a9();
    v17 = (void *)a10(v16);
    a11(v21, v22, v23);
  }
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    v18 = *(_QWORD *)(a4 + 24);
    v19 = *(_QWORD *)(a4 + 32);
    v21 = a5;
    v22 = a6;
    v23 = a7;
    v24 = a8;
    v20 = *(unsigned __int8 *)(a4 + 82);
    swift_retain();
    sub_1B765ED7C(v17, v18, v19, &v21, v20);
    swift_release();
  }

}

ManagedSettings::AllowedClientSettings::Name_optional __swiftcall AllowedClientSettings.Name.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ManagedSettings::AllowedClientSettings::Name_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1B76DBE70();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static AllowedClientSettings.Name.allCases.getter()
{
  return &unk_1E6CAC928;
}

unint64_t AllowedClientSettings.Name.rawValue.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000017;
  if (*v0 == 1)
    v1 = 0xD00000000000001FLL;
  if (*v0)
    return v1;
  else
    return 0xD00000000000001BLL;
}

uint64_t sub_1B76AE734(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B76A1CBC(*a1, *a2);
}

uint64_t sub_1B76AE740()
{
  return sub_1B76D9064();
}

uint64_t sub_1B76AE748()
{
  return sub_1B76D9AC4();
}

uint64_t sub_1B76AE750()
{
  return sub_1B76D9F3C();
}

ManagedSettings::AllowedClientSettings::Name_optional sub_1B76AE758(Swift::String *a1)
{
  return AllowedClientSettings.Name.init(rawValue:)(*a1);
}

unint64_t sub_1B76AE764@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;
  unint64_t v3;

  result = AllowedClientSettings.Name.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1B76AE788(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6CAC9B8;
}

uint64_t AllowedClientSettings.allowedClient.getter@<X0>(_OWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *v1;
  v3 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1ED53B140 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B76587B0((uint64_t)&qword_1ED53B0C0, v4, v3, v6, v5, a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

double sub_1B76AE830@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  double result;
  _OWORD v10[2];
  __int128 v11;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  v7 = qword_1ED53B140;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B76587B0((uint64_t)&qword_1ED53B0C0, v4, v3, v6, v5, v10);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  v8 = v10[1];
  *a2 = v10[0];
  a2[1] = v8;
  result = *(double *)&v11;
  a2[2] = v11;
  return result;
}

_QWORD *sub_1B76AE8FC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v8[6];

  sub_1B76AEFF0(a1, (uint64_t)v8);
  sub_1B76AF038(v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B76AEFA0);
  if (qword_1ED53B140 != -1)
    swift_once();
  v3 = *a2;
  v4 = a2[1];
  v6 = a2[2];
  v5 = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B76AE370((uint64_t)v8, (uint64_t)&qword_1ED53B0C0, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1B76AF038(v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B76AEF50);
}

uint64_t AllowedClientSettings.allowedClient.setter(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  Class isa;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v7 = a1[4];
  v6 = a1[5];
  if (qword_1ED53B140 != -1)
    swift_once();
  v8 = *v1;
  v9 = v1[1];
  v10 = v1[3];
  v16 = v1[2];
  v18 = v3;
  v19 = v2;
  v20 = v4;
  v21 = v5;
  v22 = v7;
  v23 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = v5;
  if (v2 == 1)
  {
    isa = 0;
  }
  else
  {
    sub_1B76AEFA0(v3, v2, v4, v5);
    isa = Application.persistableValue()().isa;
    swift_bridgeObjectRelease();
    sub_1B765DF1C(v20, v21);
    swift_bridgeObjectRelease();
  }
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    v12 = qword_1ED53B0F0;
    v13 = qword_1ED53B0F8;
    v18 = v8;
    v19 = v9;
    v20 = v16;
    v21 = v10;
    v14 = byte_1ED53B12A;
    swift_retain();
    sub_1B765ED7C(isa, v12, v13, &v18, v14);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  return sub_1B76AEF50(v3, v2, v4, v17);
}

void (*AllowedClientSettings.allowedClient.modify(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t *v1;
  char *v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (char *)malloc(0x98uLL);
  *a1 = v3;
  v4 = v3 + 96;
  *((_QWORD *)v3 + 18) = v1;
  v5 = *v1;
  v6 = v1[1];
  v8 = v1[2];
  v7 = v1[3];
  if (qword_1ED53B140 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B76587B0((uint64_t)&qword_1ED53B0C0, v5, v6, v8, v7, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1B76AEC44;
}

void sub_1B76AEC44(_QWORD **a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v2 = *a1;
  v3 = (uint64_t)(*a1 + 12);
  v4 = (uint64_t *)v2[18];
  if ((a2 & 1) != 0)
  {
    sub_1B76AEFF0(v3, (uint64_t)v2);
    v5 = *v4;
    v6 = v4[1];
    v7 = v4[2];
    v8 = v4[3];
    sub_1B76AF038(v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B76AEFA0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B76AE370((uint64_t)v2, (uint64_t)&qword_1ED53B0C0, v5, v6, v7, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B76AF038(v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B76AEF50);
    sub_1B76AEF50(v2[12], v2[13], v2[14], v2[15]);
  }
  else
  {
    sub_1B76AEFF0(v3, (uint64_t)(v2 + 6));
    v9 = *v4;
    v10 = v4[1];
    v11 = v4[2];
    v12 = v4[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B76AE370((uint64_t)(v2 + 6), (uint64_t)&qword_1ED53B0C0, v9, v10, v11, v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B76AF038(v2 + 6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B76AEF50);
  }
  free(v2);
}

uint64_t AllowedClientSettings.effectiveAllowedClient.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _QWORD v14[6];

  if (qword_1ED53B140 != -1)
    swift_once();
  if (qword_1EF1771A8 != -1)
    swift_once();
  swift_beginAccess();
  if (!qword_1EF1778A8)
    goto LABEL_9;
  v2 = qword_1ED53B0F0;
  v3 = qword_1ED53B0F8;
  swift_retain();
  v4 = sub_1B7667778(v2, v3);
  swift_release();
  if (!v4)
    goto LABEL_9;
  v5 = v4;
  static Application.value(from:)(v4, v14);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177570);
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    *(_OWORD *)a1 = v11;
    *(_OWORD *)(a1 + 16) = v12;
    *(_OWORD *)(a1 + 32) = v13;
  }
  else
  {
LABEL_9:
    v7 = *(_QWORD *)algn_1ED53B0C8;
    v8 = qword_1ED53B0D0;
    v9 = qword_1ED53B0E8;
    *(_QWORD *)a1 = qword_1ED53B0C0;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = v8;
    v10 = unk_1ED53B0D8;
    *(_OWORD *)(a1 + 24) = unk_1ED53B0D8;
    *(_QWORD *)(a1 + 40) = v9;
    swift_bridgeObjectRetain();
    sub_1B765DF08(v8, v10);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1B76AEEDC()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B408);
  qword_1ED53B118 = result;
  unk_1ED53B120 = &off_1E6CB06C8;
  qword_1ED53B0C0 = 0;
  *(_QWORD *)algn_1ED53B0C8 = 0;
  qword_1ED53B0D0 = 0;
  unk_1ED53B0D8 = 0xF000000000000000;
  qword_1ED53B0E0 = 0;
  qword_1ED53B0E8 = 0;
  qword_1ED53B0F0 = 0xD00000000000001BLL;
  qword_1ED53B0F8 = 0x80000001B76E1700;
  word_1ED53B128 = 256;
  byte_1ED53B12A = 0;
  qword_1ED53B130 = 0;
  byte_1ED53B138 = 1;
  return result;
}

uint64_t sub_1B76AEF50(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    sub_1B765DF1C(a3, a4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B76AEFA0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    sub_1B765DF08(a3, a4);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1B76AEFF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177570);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1B76AF038(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5]);
  return a1;
}

uint64_t static AllowedClientSettings.allowedClient.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1ED53B140 != -1)
    swift_once();
  return sub_1B76638C0((uint64_t)&qword_1ED53B0C0, a1, &qword_1ED53B418);
}

uint64_t AllowedClientSettings.denyMDMEnrollment.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v0;
  v1 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  if (qword_1EF177280 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = sub_1B76584AC((uint64_t)&byte_1EF178368, v2, v1, v4, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1B76AF160@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  v7 = qword_1EF177280;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_1B76584AC((uint64_t)&byte_1EF178368, v4, v3, v6, v5);
  swift_bridgeObjectRelease_n();
  result = swift_bridgeObjectRelease_n();
  *a2 = v8;
  return result;
}

uint64_t AllowedClientSettings.denyMDMEnrollment.setter(unsigned __int8 a1)
{
  uint64_t *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v14[4];
  _BYTE v15[8];
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;

  v2 = a1;
  if (qword_1EF177280 != -1)
    swift_once();
  sub_1B76638C0((uint64_t)&byte_1EF178368, (uint64_t)v15, &qword_1EF177448);
  v4 = *v1;
  v3 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (v2 == 2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = 0;
  }
  else
  {
    v8 = v2 & 1;
    v9 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = objc_msgSend(v9, sel_initWithBool_, v8);
  }
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    v10 = v16;
    v11 = v17;
    v14[0] = v4;
    v14[1] = v3;
    v14[2] = v6;
    v14[3] = v5;
    v12 = v18;
    swift_retain();
    sub_1B765ED7C(v7, v10, v11, v14, v12);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  return sub_1B765DE88((uint64_t)v15, &qword_1EF177448);
}

uint64_t (*AllowedClientSettings.denyMDMEnrollment.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177280 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF178368, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B76AF460;
}

uint64_t sub_1B76AF460(uint64_t a1)
{
  return AllowedClientSettings.denyMDMEnrollment.setter(*(_BYTE *)(a1 + 8));
}

uint64_t AllowedClientSettings.effectiveDenyMDMEnrollment.getter()
{
  if (qword_1EF177280 != -1)
    swift_once();
  return sub_1B7659CC4(&byte_1EF178368);
}

uint64_t sub_1B76AF4C4()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF178398 = result;
  unk_1EF1783A0 = &off_1E6CB07B8;
  byte_1EF178380 = 0;
  byte_1EF178368 = 0;
  qword_1EF178370 = 0xD00000000000001FLL;
  unk_1EF178378 = 0x80000001B76E1720;
  word_1EF1783A8 = 256;
  byte_1EF1783AA = 0;
  qword_1EF1783B0 = 0;
  byte_1EF1783B8 = 1;
  return result;
}

uint64_t static AllowedClientSettings.denyMDMEnrollment.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EF177280 != -1)
    swift_once();
  return sub_1B76638C0((uint64_t)&byte_1EF178368, a1, &qword_1EF177448);
}

uint64_t AllowedClientSettings.tokenKeys.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v0;
  v1 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  if (qword_1EF177288 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = sub_1B7658AC4((uint64_t)&unk_1EF1783C0, v2, v1, v4, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1B76AF620@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  v7 = qword_1EF177288;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_1B7658AC4((uint64_t)&unk_1EF1783C0, v4, v3, v6, v5);
  swift_bridgeObjectRelease_n();
  result = swift_bridgeObjectRelease_n();
  *a2 = v8;
  return result;
}

uint64_t AllowedClientSettings.tokenKeys.setter(uint64_t a1)
{
  sub_1B76AFB94(a1);
  return swift_bridgeObjectRelease();
}

void (*AllowedClientSettings.tokenKeys.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x98uLL);
  *a1 = v3;
  v4 = v3 + 17;
  v3[18] = v1;
  v5 = *v1;
  v6 = v1[1];
  v8 = v1[2];
  v7 = v1[3];
  if (qword_1EF177288 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = sub_1B7658AC4((uint64_t)&unk_1EF1783C0, v5, v6, v8, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v4 = v9;
  return sub_1B76AF7BC;
}

void sub_1B76AF7BC(uint64_t *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = *a1;
  v4 = *(_QWORD *)(*a1 + 136);
  v5 = *(uint64_t **)(*a1 + 144);
  sub_1B76638C0((uint64_t)&unk_1EF1783C0, *a1, &qword_1EF178418);
  v7 = *v5;
  v6 = v5[1];
  v9 = v5[2];
  v8 = v5[3];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v4)
    {
      swift_bridgeObjectRetain();
      v10 = (void *)sub_1B7665948(v4);
    }
    else
    {
      v10 = 0;
    }
    if (qword_1EF177160 != -1)
      swift_once();
    swift_beginAccess();
    if (off_1EF1775A8)
    {
      v12 = *(_QWORD *)(v3 + 8);
      v13 = *(_QWORD *)(v3 + 16);
      v18 = v7;
      v19 = v6;
      v20 = v9;
      v21 = v8;
      v14 = *(unsigned __int8 *)(v3 + 66);
      swift_retain();
      sub_1B765ED7C(v10, v12, v13, &v18, v14);
      swift_release();
    }
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    sub_1B765DE88(v3, &qword_1EF178418);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v4)
    {
      swift_bridgeObjectRetain();
      v11 = (void *)sub_1B7665948(v4);
      swift_bridgeObjectRelease();
    }
    else
    {
      v11 = 0;
    }
    if (qword_1EF177160 != -1)
      swift_once();
    swift_beginAccess();
    if (off_1EF1775A8)
    {
      v15 = *(_QWORD *)(v3 + 8);
      v16 = *(_QWORD *)(v3 + 16);
      v18 = v7;
      v19 = v6;
      v20 = v9;
      v21 = v8;
      v17 = *(unsigned __int8 *)(v3 + 66);
      swift_retain();
      sub_1B765ED7C(v11, v15, v16, &v18, v17);
      swift_release();
    }
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    sub_1B765DE88(v3, &qword_1EF178418);
  }
  swift_bridgeObjectRelease();
  free((void *)v3);
}

uint64_t AllowedClientSettings.effectiveTokenKeys.getter()
{
  if (qword_1EF177288 != -1)
    swift_once();
  return sub_1B7659DD8((uint64_t)&unk_1EF1783C0);
}

double sub_1B76AFA68()
{
  double result;
  __int128 v1;
  _OWORD v2[3];
  __int128 v3;
  char v4;
  _BYTE v5[24];
  uint64_t v6;
  _UNKNOWN **v7;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178438);
  v7 = &off_1E6CB05D8;
  v5[0] = 1;
  *(_QWORD *)&v1 = MEMORY[0x1E0DEE9E8];
  *((_QWORD *)&v1 + 1) = 0xD000000000000017;
  *(_QWORD *)&v2[0] = 0x80000001B76E1740;
  sub_1B76638C0((uint64_t)v5, (uint64_t)v2 + 8, &qword_1EF178440);
  LOWORD(v3) = 256;
  BYTE2(v3) = 0;
  *((_QWORD *)&v3 + 1) = 0x7FFFFFFFFFFFFFFFLL;
  v4 = 0;
  sub_1B765DE88((uint64_t)v5, &qword_1EF178440);
  xmmword_1EF1783E0 = v2[1];
  unk_1EF1783F0 = v2[2];
  xmmword_1EF178400 = v3;
  byte_1EF178410 = v4;
  result = *(double *)&v1;
  unk_1EF1783C0 = v1;
  *(_OWORD *)&qword_1EF1783D0 = v2[0];
  return result;
}

uint64_t static AllowedClientSettings.tokenKeys.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EF177288 != -1)
    swift_once();
  return sub_1B76638C0((uint64_t)&unk_1EF1783C0, a1, &qword_1EF178418);
}

uint64_t sub_1B76AFB94(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v12[4];
  _BYTE v13[8];
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;

  if (qword_1EF177288 != -1)
    swift_once();
  sub_1B76638C0((uint64_t)&unk_1EF1783C0, (uint64_t)v13, &qword_1EF178418);
  v4 = *v1;
  v3 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (a1)
  {
    swift_bridgeObjectRetain();
    v7 = (void *)sub_1B7665948(a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    v8 = v14;
    v9 = v15;
    v12[0] = v4;
    v12[1] = v3;
    v12[2] = v6;
    v12[3] = v5;
    v10 = v16;
    swift_retain();
    sub_1B765ED7C(v7, v8, v9, v12, v10);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  return sub_1B765DE88((uint64_t)v13, &qword_1EF178418);
}

unint64_t sub_1B76AFD14()
{
  unint64_t result;

  result = qword_1EF178420;
  if (!qword_1EF178420)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for AllowedClientSettings.Name, &type metadata for AllowedClientSettings.Name);
    atomic_store(result, (unint64_t *)&qword_1EF178420);
  }
  return result;
}

unint64_t sub_1B76AFD5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF178428;
  if (!qword_1EF178428)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF178430);
    result = MEMORY[0x1BCCA94E8](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF178428);
  }
  return result;
}

uint64_t sub_1B76AFDB4(unsigned __int8 *a1)
{
  return AllowedClientSettings.denyMDMEnrollment.setter(*a1);
}

uint64_t sub_1B76AFDDC()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  sub_1B76AFB94(v0);
  return swift_bridgeObjectRelease();
}

ValueMetadata *type metadata accessor for AllowedClientSettings()
{
  return &type metadata for AllowedClientSettings;
}

uint64_t storeEnumTagSinglePayload for AllowedClientSettings.Name(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B76AFE68 + 4 * byte_1B76DE905[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B76AFE9C + 4 * asc_1B76DE900[v4]))();
}

uint64_t sub_1B76AFE9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76AFEA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B76AFEACLL);
  return result;
}

uint64_t sub_1B76AFEB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B76AFEC0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B76AFEC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76AFECC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AllowedClientSettings.Name()
{
  return &type metadata for AllowedClientSettings.Name;
}

uint64_t GameCenterSettings.OtherPlayerTypes.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x4F73646E65697266;
  if (*v0 != 1)
    v1 = 0x656E6F7972657665;
  if (*v0)
    return v1;
  else
    return 1701736302;
}

ManagedSettings::GameCenterSettings::OtherPlayerTypes_optional __swiftcall GameCenterSettings.OtherPlayerTypes.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ManagedSettings::GameCenterSettings::OtherPlayerTypes_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1B76DBE70();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

ManagedSettings::GameCenterSettings::Name_optional __swiftcall GameCenterSettings.Name.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ManagedSettings::GameCenterSettings::Name_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1B76DBE70();
  result.value = swift_bridgeObjectRelease();
  v5 = 9;
  if (v3 < 9)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static GameCenterSettings.Name.allCases.getter()
{
  return &unk_1E6CABE60;
}

uint64_t GameCenterSettings.Name.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1B76B0038 + 4 * byte_1B76DEA30[*v0]))(0xD000000000000022, 0x80000001B76E1760);
}

uint64_t sub_1B76B0038@<X0>(uint64_t a1@<X8>)
{
  return a1 - 1;
}

void sub_1B76B00C8(char *a1)
{
  sub_1B76A2430(*a1);
}

uint64_t sub_1B76B00D4()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1B76DBF54();
  sub_1B76D9C64((uint64_t)v3, v1);
  return sub_1B76DBF78();
}

void sub_1B76B0118(uint64_t a1)
{
  char *v1;

  sub_1B76D9C64(a1, *v1);
}

uint64_t sub_1B76B0120()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1B76DBF54();
  sub_1B76D9C64((uint64_t)v3, v1);
  return sub_1B76DBF78();
}

ManagedSettings::GameCenterSettings::Name_optional sub_1B76B0160(Swift::String *a1)
{
  return GameCenterSettings.Name.init(rawValue:)(*a1);
}

uint64_t sub_1B76B016C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = GameCenterSettings.Name.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1B76B0190(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6CABE60;
}

BOOL static GameCenterSettings.OtherPlayerTypes.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

void *static GameCenterSettings.OtherPlayerTypes.allCases.getter()
{
  return &unk_1E6CABD18;
}

uint64_t sub_1B76B01C0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B76A2610(*a1, *a2);
}

uint64_t sub_1B76B01CC()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

uint64_t sub_1B76B026C()
{
  sub_1B76DBB1C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76B02E8()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

ManagedSettings::GameCenterSettings::OtherPlayerTypes_optional sub_1B76B0384(Swift::String *a1)
{
  return GameCenterSettings.OtherPlayerTypes.init(rawValue:)(*a1);
}

void sub_1B76B0390(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE400000000000000;
  v4 = 0xEB00000000796C6ELL;
  v5 = 0x4F73646E65697266;
  if (v2 != 1)
  {
    v5 = 0x656E6F7972657665;
    v4 = 0xE800000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 1701736302;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

BOOL sub_1B76B03F0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_1B76B0404(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_1B76B0418(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_1B76B042C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

void sub_1B76B0440(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6CABE38;
}

uint64_t GameCenterSettings.allowedOtherPlayerTypes.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *v1;
  v3 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177290 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B7658DF4((uint64_t)&byte_1EF178448, v4, v3, v6, v5, a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76B04E8@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  char v9;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  v7 = qword_1EF177290;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B7658DF4((uint64_t)&byte_1EF178448, v4, v3, v6, v5, &v9);
  swift_bridgeObjectRelease_n();
  result = swift_bridgeObjectRelease_n();
  *a2 = v9;
  return result;
}

void GameCenterSettings.allowedOtherPlayerTypes.setter(unsigned __int8 *a1)
{
  uint64_t v1;
  _BYTE v2[8];

  v1 = *a1;
  if (qword_1EF177290 != -1)
    swift_once();
  sub_1B76638C0((uint64_t)&byte_1EF178448, (uint64_t)v2, &qword_1EF178760);
  __asm { BR              X9 }
}

void (*GameCenterSettings.allowedOtherPlayerTypes.modify(uint64_t **a1))(uint64_t a1, char a2)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177290 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B7658DF4((uint64_t)&byte_1EF178448, v3, v4, v6, v5, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1B76B0854;
}

void sub_1B76B0854(uint64_t a1, char a2)
{
  unsigned __int8 *v2;
  char v3;
  char v4;

  if ((a2 & 1) != 0)
  {
    v3 = *(_BYTE *)(a1 + 8);
    v2 = (unsigned __int8 *)&v3;
  }
  else
  {
    v4 = *(_BYTE *)(a1 + 8);
    v2 = (unsigned __int8 *)&v4;
  }
  GameCenterSettings.allowedOtherPlayerTypes.setter(v2);
}

uint64_t GameCenterSettings.effectiveAllowedOtherPlayerTypes.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char v6;
  char v8;
  char v9;
  _BYTE v10[8];
  uint64_t v11;
  uint64_t v12;

  if (qword_1EF177290 != -1)
    swift_once();
  sub_1B76638C0((uint64_t)&byte_1EF178448, (uint64_t)v10, &qword_1EF178760);
  if (qword_1EF1771A8 != -1)
    swift_once();
  swift_beginAccess();
  if (!qword_1EF1778A8)
    goto LABEL_9;
  v2 = v11;
  v3 = v12;
  swift_retain();
  v4 = sub_1B7667778(v2, v3);
  swift_release();
  if (!v4)
    goto LABEL_9;
  v5 = v4;
  static GameCenterSettings.OtherPlayerTypes.value(from:)(v4, &v9);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177578);
  if ((swift_dynamicCast() & 1) != 0)
    v6 = v8;
  else
LABEL_9:
    v6 = v10[0];
  *a1 = v6;
  return sub_1B765DE88((uint64_t)v10, &qword_1EF178760);
}

uint64_t sub_1B76B09E0()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178798);
  qword_1EF178478 = result;
  unk_1EF178480 = &off_1E6CB0650;
  byte_1EF178460 = 0;
  byte_1EF178448 = 2;
  qword_1EF178450 = 0xD000000000000022;
  unk_1EF178458 = 0x80000001B76E1760;
  word_1EF178488 = 256;
  byte_1EF17848A = 0;
  qword_1EF178490 = 0;
  byte_1EF178498 = 1;
  return result;
}

uint64_t static GameCenterSettings.allowedOtherPlayerTypes.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EF177290 != -1)
    swift_once();
  return sub_1B76638C0((uint64_t)&byte_1EF178448, a1, &qword_1EF178760);
}

uint64_t GameCenterSettings.denyAddingFriends.getter()
{
  return sub_1B765A148(&qword_1EF177298, (uint64_t)&byte_1EF1784A0);
}

uint64_t GameCenterSettings.denyAddingFriends.setter(unsigned __int8 a1)
{
  return sub_1B766413C(a1, &qword_1EF177298, (uint64_t)&byte_1EF1784A0);
}

uint64_t (*GameCenterSettings.denyAddingFriends.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177298 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF1784A0, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B76B0B94;
}

uint64_t sub_1B76B0B94(uint64_t a1)
{
  return GameCenterSettings.denyAddingFriends.setter(*(_BYTE *)(a1 + 8));
}

uint64_t GameCenterSettings.effectiveDenyAddingFriends.getter()
{
  return sub_1B765A568(&qword_1EF177298, &byte_1EF1784A0);
}

uint64_t sub_1B76B0BD4()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF1784D0 = result;
  unk_1EF1784D8 = &off_1E6CB07B8;
  byte_1EF1784B8 = 0;
  byte_1EF1784A0 = 0;
  qword_1EF1784A8 = 0xD00000000000001CLL;
  unk_1EF1784B0 = 0x80000001B76E1790;
  word_1EF1784E0 = 257;
  byte_1EF1784E2 = 0;
  qword_1EF1784E8 = 0;
  byte_1EF1784F0 = 1;
  return result;
}

uint64_t static GameCenterSettings.denyAddingFriends.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7664440(&qword_1EF177298, (uint64_t)&byte_1EF1784A0, a1);
}

uint64_t GameCenterSettings.denyGameCenter.getter()
{
  return sub_1B765A148(&qword_1EF1772A0, (uint64_t)&byte_1EF1784F8);
}

uint64_t GameCenterSettings.denyGameCenter.setter(unsigned __int8 a1)
{
  return sub_1B766413C(a1, &qword_1EF1772A0, (uint64_t)&byte_1EF1784F8);
}

uint64_t (*GameCenterSettings.denyGameCenter.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF1772A0 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF1784F8, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B76B0D44;
}

uint64_t sub_1B76B0D44(uint64_t a1)
{
  return GameCenterSettings.denyGameCenter.setter(*(_BYTE *)(a1 + 8));
}

uint64_t GameCenterSettings.effectiveDenyGameCenter.getter()
{
  return sub_1B765A568(&qword_1EF1772A0, &byte_1EF1784F8);
}

uint64_t sub_1B76B0D84()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF178528 = result;
  unk_1EF178530 = &off_1E6CB07B8;
  byte_1EF178510 = 0;
  byte_1EF1784F8 = 0;
  qword_1EF178500 = 0xD000000000000019;
  unk_1EF178508 = 0x80000001B76E17B0;
  word_1EF178538 = 256;
  byte_1EF17853A = 0;
  qword_1EF178540 = 0;
  byte_1EF178548 = 1;
  return result;
}

uint64_t static GameCenterSettings.denyGameCenter.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7664440(&qword_1EF1772A0, (uint64_t)&byte_1EF1784F8, a1);
}

uint64_t GameCenterSettings.denyMultiplayerGaming.getter()
{
  return sub_1B765A148(&qword_1EF1772A8, (uint64_t)&byte_1EF178550);
}

uint64_t GameCenterSettings.denyMultiplayerGaming.setter(unsigned __int8 a1)
{
  return sub_1B766413C(a1, &qword_1EF1772A8, (uint64_t)&byte_1EF178550);
}

uint64_t (*GameCenterSettings.denyMultiplayerGaming.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF1772A8 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF178550, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B76B0EF4;
}

uint64_t sub_1B76B0EF4(uint64_t a1)
{
  return GameCenterSettings.denyMultiplayerGaming.setter(*(_BYTE *)(a1 + 8));
}

uint64_t GameCenterSettings.effectiveDenyMultiplayerGaming.getter()
{
  return sub_1B765A568(&qword_1EF1772A8, &byte_1EF178550);
}

uint64_t sub_1B76B0F34()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF178580 = result;
  unk_1EF178588 = &off_1E6CB07B8;
  byte_1EF178568 = 0;
  byte_1EF178550 = 0;
  qword_1EF178558 = 0xD000000000000020;
  unk_1EF178560 = 0x80000001B76E17D0;
  word_1EF178590 = 257;
  byte_1EF178592 = 0;
  qword_1EF178598 = 0;
  byte_1EF1785A0 = 1;
  return result;
}

uint64_t static GameCenterSettings.denyMultiplayerGaming.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7664440(&qword_1EF1772A8, (uint64_t)&byte_1EF178550, a1);
}

uint64_t GameCenterSettings.denyNearbyMultiplayer.getter()
{
  return sub_1B765A148(&qword_1EF1772B0, (uint64_t)&byte_1EF1785A8);
}

uint64_t GameCenterSettings.denyNearbyMultiplayer.setter(unsigned __int8 a1)
{
  return sub_1B766413C(a1, &qword_1EF1772B0, (uint64_t)&byte_1EF1785A8);
}

uint64_t (*GameCenterSettings.denyNearbyMultiplayer.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF1772B0 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF1785A8, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B76B10A4;
}

uint64_t sub_1B76B10A4(uint64_t a1)
{
  return GameCenterSettings.denyNearbyMultiplayer.setter(*(_BYTE *)(a1 + 8));
}

uint64_t GameCenterSettings.effectiveDenyNearbyMultiplayer.getter()
{
  return sub_1B765A568(&qword_1EF1772B0, &byte_1EF1785A8);
}

uint64_t sub_1B76B10E4()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF1785D8 = result;
  unk_1EF1785E0 = &off_1E6CB07B8;
  byte_1EF1785C0 = 0;
  byte_1EF1785A8 = 0;
  qword_1EF1785B0 = 0xD000000000000020;
  unk_1EF1785B8 = 0x80000001B76E1800;
  word_1EF1785E8 = 256;
  byte_1EF1785EA = 0;
  qword_1EF1785F0 = 0;
  byte_1EF1785F8 = 1;
  return result;
}

uint64_t static GameCenterSettings.denyNearbyMultiplayer.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7664440(&qword_1EF1772B0, (uint64_t)&byte_1EF1785A8, a1);
}

uint64_t GameCenterSettings.denyPrivateMessaging.getter()
{
  return sub_1B765A148(&qword_1EF1772B8, (uint64_t)&byte_1EF178600);
}

uint64_t GameCenterSettings.denyPrivateMessaging.setter(unsigned __int8 a1)
{
  return sub_1B766413C(a1, &qword_1EF1772B8, (uint64_t)&byte_1EF178600);
}

uint64_t (*GameCenterSettings.denyPrivateMessaging.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF1772B8 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF178600, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B76B1254;
}

uint64_t sub_1B76B1254(uint64_t a1)
{
  return GameCenterSettings.denyPrivateMessaging.setter(*(_BYTE *)(a1 + 8));
}

uint64_t GameCenterSettings.effectiveDenyPrivateMessaging.getter()
{
  return sub_1B765A568(&qword_1EF1772B8, &byte_1EF178600);
}

uint64_t sub_1B76B1294()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF178630 = result;
  unk_1EF178638 = &off_1E6CB07B8;
  byte_1EF178618 = 0;
  byte_1EF178600 = 0;
  qword_1EF178608 = 0xD00000000000001FLL;
  unk_1EF178610 = 0x80000001B76E1830;
  word_1EF178640 = 256;
  byte_1EF178642 = 0;
  qword_1EF178648 = 0;
  byte_1EF178650 = 1;
  return result;
}

uint64_t static GameCenterSettings.denyPrivateMessaging.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7664440(&qword_1EF1772B8, (uint64_t)&byte_1EF178600, a1);
}

uint64_t GameCenterSettings.lockFriendsSharing.getter()
{
  return sub_1B765A148(&qword_1EF1772C0, (uint64_t)&byte_1EF178658);
}

uint64_t GameCenterSettings.lockFriendsSharing.setter(unsigned __int8 a1)
{
  return sub_1B766413C(a1, &qword_1EF1772C0, (uint64_t)&byte_1EF178658);
}

uint64_t (*GameCenterSettings.lockFriendsSharing.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF1772C0 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF178658, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B76B1404;
}

uint64_t sub_1B76B1404(uint64_t a1)
{
  return GameCenterSettings.lockFriendsSharing.setter(*(_BYTE *)(a1 + 8));
}

uint64_t GameCenterSettings.effectiveLockFriendsSharing.getter()
{
  return sub_1B765A568(&qword_1EF1772C0, &byte_1EF178658);
}

uint64_t sub_1B76B1444()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF178688 = result;
  unk_1EF178690 = &off_1E6CB07B8;
  byte_1EF178670 = 0;
  byte_1EF178658 = 0;
  qword_1EF178660 = 0xD00000000000001DLL;
  unk_1EF178668 = 0x80000001B76E1850;
  word_1EF178698 = 256;
  byte_1EF17869A = 0;
  qword_1EF1786A0 = 0;
  byte_1EF1786A8 = 1;
  return result;
}

uint64_t static GameCenterSettings.lockFriendsSharing.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7664440(&qword_1EF1772C0, (uint64_t)&byte_1EF178658, a1);
}

uint64_t GameCenterSettings.lockProfile.getter()
{
  return sub_1B765A148(&qword_1EF1772C8, (uint64_t)&byte_1EF1786B0);
}

uint64_t GameCenterSettings.lockProfile.setter(unsigned __int8 a1)
{
  return sub_1B766413C(a1, &qword_1EF1772C8, (uint64_t)&byte_1EF1786B0);
}

uint64_t (*GameCenterSettings.lockProfile.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF1772C8 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF1786B0, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B76B15B4;
}

uint64_t sub_1B76B15B4(uint64_t a1)
{
  return GameCenterSettings.lockProfile.setter(*(_BYTE *)(a1 + 8));
}

uint64_t GameCenterSettings.effectiveLockProfile.getter()
{
  return sub_1B765A568(&qword_1EF1772C8, &byte_1EF1786B0);
}

uint64_t sub_1B76B15F4()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF1786E0 = result;
  unk_1EF1786E8 = &off_1E6CB07B8;
  byte_1EF1786C8 = 0;
  byte_1EF1786B0 = 0;
  qword_1EF1786B8 = 0xD000000000000016;
  unk_1EF1786C0 = 0x80000001B76E1870;
  word_1EF1786F0 = 256;
  byte_1EF1786F2 = 0;
  qword_1EF1786F8 = 0;
  byte_1EF178700 = 1;
  return result;
}

uint64_t static GameCenterSettings.lockProfile.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7664440(&qword_1EF1772C8, (uint64_t)&byte_1EF1786B0, a1);
}

uint64_t GameCenterSettings.lockProfilePrivacy.getter()
{
  return sub_1B765A148(&qword_1EF1772D0, (uint64_t)&byte_1EF178708);
}

uint64_t GameCenterSettings.lockProfilePrivacy.setter(unsigned __int8 a1)
{
  return sub_1B766413C(a1, &qword_1EF1772D0, (uint64_t)&byte_1EF178708);
}

uint64_t (*GameCenterSettings.lockProfilePrivacy.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF1772D0 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF178708, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B76B1764;
}

uint64_t sub_1B76B1764(uint64_t a1)
{
  return GameCenterSettings.lockProfilePrivacy.setter(*(_BYTE *)(a1 + 8));
}

uint64_t GameCenterSettings.effectiveLockProfilePrivacy.getter()
{
  return sub_1B765A568(&qword_1EF1772D0, &byte_1EF178708);
}

uint64_t sub_1B76B17A4()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF178738 = result;
  unk_1EF178740 = &off_1E6CB07B8;
  byte_1EF178720 = 0;
  byte_1EF178708 = 0;
  qword_1EF178710 = 0xD00000000000001DLL;
  unk_1EF178718 = 0x80000001B76E1890;
  word_1EF178748 = 256;
  byte_1EF17874A = 0;
  qword_1EF178750 = 0;
  byte_1EF178758 = 1;
  return result;
}

uint64_t static GameCenterSettings.lockProfilePrivacy.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7664440(&qword_1EF1772D0, (uint64_t)&byte_1EF178708, a1);
}

unint64_t sub_1B76B1830()
{
  unint64_t result;

  result = qword_1EF178768;
  if (!qword_1EF178768)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for GameCenterSettings.Name, &type metadata for GameCenterSettings.Name);
    atomic_store(result, (unint64_t *)&qword_1EF178768);
  }
  return result;
}

uint64_t sub_1B76B1874()
{
  return sub_1B76B1904(&qword_1EF178770, &qword_1EF178778);
}

unint64_t sub_1B76B189C()
{
  unint64_t result;

  result = qword_1EF178780;
  if (!qword_1EF178780)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for GameCenterSettings.OtherPlayerTypes, &type metadata for GameCenterSettings.OtherPlayerTypes);
    atomic_store(result, (unint64_t *)&qword_1EF178780);
  }
  return result;
}

uint64_t sub_1B76B18E0()
{
  return sub_1B76B1904(&qword_1EF178788, &qword_1EF178790);
}

uint64_t sub_1B76B1904(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1BCCA94E8](MEMORY[0x1E0DEAF50], v4);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1B76B1948(unsigned __int8 *a1)
{
  unsigned __int8 v1;

  v1 = *a1;
  GameCenterSettings.allowedOtherPlayerTypes.setter(&v1);
}

uint64_t sub_1B76B197C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF177298, (uint64_t)&byte_1EF1784A0, a2);
}

uint64_t sub_1B76B19A8(unsigned __int8 *a1)
{
  return GameCenterSettings.denyAddingFriends.setter(*a1);
}

uint64_t sub_1B76B19CC@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF1772A0, (uint64_t)&byte_1EF1784F8, a2);
}

uint64_t sub_1B76B19F8(unsigned __int8 *a1)
{
  return GameCenterSettings.denyGameCenter.setter(*a1);
}

uint64_t sub_1B76B1A1C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF1772A8, (uint64_t)&byte_1EF178550, a2);
}

uint64_t sub_1B76B1A48(unsigned __int8 *a1)
{
  return GameCenterSettings.denyMultiplayerGaming.setter(*a1);
}

uint64_t sub_1B76B1A6C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF1772B0, (uint64_t)&byte_1EF1785A8, a2);
}

uint64_t sub_1B76B1A98(unsigned __int8 *a1)
{
  return GameCenterSettings.denyNearbyMultiplayer.setter(*a1);
}

uint64_t sub_1B76B1ABC@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF1772B8, (uint64_t)&byte_1EF178600, a2);
}

uint64_t sub_1B76B1AE8(unsigned __int8 *a1)
{
  return GameCenterSettings.denyPrivateMessaging.setter(*a1);
}

uint64_t sub_1B76B1B0C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF1772C0, (uint64_t)&byte_1EF178658, a2);
}

uint64_t sub_1B76B1B38(unsigned __int8 *a1)
{
  return GameCenterSettings.lockFriendsSharing.setter(*a1);
}

uint64_t sub_1B76B1B5C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF1772C8, (uint64_t)&byte_1EF1786B0, a2);
}

uint64_t sub_1B76B1B88(unsigned __int8 *a1)
{
  return GameCenterSettings.lockProfile.setter(*a1);
}

uint64_t sub_1B76B1BAC@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF1772D0, (uint64_t)&byte_1EF178708, a2);
}

uint64_t sub_1B76B1BD8(unsigned __int8 *a1)
{
  return GameCenterSettings.lockProfilePrivacy.setter(*a1);
}

ValueMetadata *type metadata accessor for GameCenterSettings()
{
  return &type metadata for GameCenterSettings;
}

uint64_t getEnumTagSinglePayload for GameCenterSettings.Name(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for GameCenterSettings.Name(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1B76B1CE8 + 4 * byte_1B76DEA42[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1B76B1D1C + 4 * byte_1B76DEA3D[v4]))();
}

uint64_t sub_1B76B1D1C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76B1D24(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B76B1D2CLL);
  return result;
}

uint64_t sub_1B76B1D38(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B76B1D40);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1B76B1D44(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76B1D4C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GameCenterSettings.Name()
{
  return &type metadata for GameCenterSettings.Name;
}

uint64_t storeEnumTagSinglePayload for GameCenterSettings.OtherPlayerTypes(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B76B1DB4 + 4 * byte_1B76DEA4C[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B76B1DE8 + 4 * byte_1B76DEA47[v4]))();
}

uint64_t sub_1B76B1DE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76B1DF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B76B1DF8);
  return result;
}

uint64_t sub_1B76B1E04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B76B1E0CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B76B1E10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76B1E18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GameCenterSettings.OtherPlayerTypes()
{
  return &type metadata for GameCenterSettings.OtherPlayerTypes;
}

id sub_1B76B1E38(uint64_t a1, void (*a2)(uint64_t, unint64_t), uint64_t a3, uint64_t a4, void (*a5)(uint64_t, unint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  int64_t v25;
  id v27;

  v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99DE8]), sel_init);
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v25 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  if (v8)
  {
    v9 = __clz(__rbit64(v8));
    goto LABEL_22;
  }
  if (v25 > 1)
  {
    v10 = *(_QWORD *)(a1 + 72);
    v11 = 1;
    if (v10)
      goto LABEL_21;
    v11 = 2;
    if (v25 <= 2)
      goto LABEL_27;
    v10 = *(_QWORD *)(a1 + 80);
    if (v10)
      goto LABEL_21;
    v11 = 3;
    if (v25 <= 3)
      goto LABEL_27;
    v10 = *(_QWORD *)(a1 + 88);
    if (v10)
      goto LABEL_21;
    v11 = 4;
    if (v25 <= 4)
      goto LABEL_27;
    v10 = *(_QWORD *)(a1 + 96);
    if (v10)
      goto LABEL_21;
    v11 = 5;
    if (v25 <= 5)
      goto LABEL_27;
    v10 = *(_QWORD *)(a1 + 104);
    if (v10)
    {
LABEL_21:
      v9 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_22:
      v13 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 48 * v9);
      v14 = v13[1];
      v16 = v13[2];
      v15 = v13[3];
      v17 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 56) + v9);
      v18 = objc_allocWithZone(MEMORY[0x1E0C99E08]);
      swift_bridgeObjectRetain();
      a2(v16, v15);
      swift_bridgeObjectRetain();
      v19 = objc_msgSend(v18, sel_init);
      if (v14)
      {
        v20 = (void *)sub_1B76DBAB0();
        objc_msgSend(v19, sel___swift_setObject_forKeyedSubscript_, v20, sub_1B76DBEE8());

        swift_unknownObjectRelease();
      }
      if (v15 >> 60 != 15)
      {
        sub_1B765DF7C(0, &qword_1ED53B5E8);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177830);
        v21 = swift_allocObject();
        *(_OWORD *)(v21 + 16) = xmmword_1B76DCB70;
        *(_QWORD *)(v21 + 32) = 1635017060;
        *(_QWORD *)(v21 + 40) = 0xE400000000000000;
        *(_QWORD *)(v21 + 88) = MEMORY[0x1E0CB0338];
        *(_QWORD *)(v21 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v21 + 64) = v16;
        *(_QWORD *)(v21 + 72) = v15;
        sub_1B765DDFC(v16, v15);
        sub_1B765DDFC(v16, v15);
        v22 = (void *)sub_1B76DBC78();
        v23 = (void *)sub_1B76DBC6C();

        objc_msgSend(v19, sel___swift_setObject_forKeyedSubscript_, v23, sub_1B76DBEE8());
        a5(v16, v15);

        swift_unknownObjectRelease();
      }
      __asm { BR              X8 }
    }
    v12 = 6;
    if (v25 > 6)
    {
      v10 = *(_QWORD *)(a1 + 112);
      if (v10)
      {
        v11 = 6;
        goto LABEL_21;
      }
      while (1)
      {
        v11 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
          JUMPOUT(0x1B76B23ACLL);
        }
        if (v11 >= v25)
          break;
        v10 = *(_QWORD *)(a1 + 64 + 8 * v11);
        ++v12;
        if (v10)
          goto LABEL_21;
      }
    }
  }
LABEL_27:
  swift_release();
  return v27;
}

id sub_1B76B23C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  int64_t v20;
  id v22;

  v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99DE8]), sel_init);
  v1 = 1 << *(_BYTE *)(a1 + 32);
  v2 = -1;
  if (v1 < 64)
    v2 = ~(-1 << v1);
  v3 = v2 & *(_QWORD *)(a1 + 64);
  v20 = (unint64_t)(v1 + 63) >> 6;
  swift_bridgeObjectRetain();
  if (v3)
  {
    v4 = __clz(__rbit64(v3));
    goto LABEL_22;
  }
  if (v20 > 1)
  {
    v5 = *(_QWORD *)(a1 + 72);
    v6 = 1;
    if (v5)
      goto LABEL_21;
    v6 = 2;
    if (v20 <= 2)
      goto LABEL_27;
    v5 = *(_QWORD *)(a1 + 80);
    if (v5)
      goto LABEL_21;
    v6 = 3;
    if (v20 <= 3)
      goto LABEL_27;
    v5 = *(_QWORD *)(a1 + 88);
    if (v5)
      goto LABEL_21;
    v6 = 4;
    if (v20 <= 4)
      goto LABEL_27;
    v5 = *(_QWORD *)(a1 + 96);
    if (v5)
      goto LABEL_21;
    v6 = 5;
    if (v20 <= 5)
      goto LABEL_27;
    v5 = *(_QWORD *)(a1 + 104);
    if (v5)
    {
LABEL_21:
      v4 = __clz(__rbit64(v5)) + (v6 << 6);
LABEL_22:
      v8 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 32 * v4);
      v9 = v8[1];
      v10 = v8[2];
      v11 = v8[3];
      v12 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 56) + v4);
      v13 = objc_allocWithZone(MEMORY[0x1E0C99E08]);
      swift_bridgeObjectRetain();
      sub_1B765DF08(v10, v11);
      v14 = objc_msgSend(v13, sel_init);
      if (v9)
      {
        v15 = (void *)sub_1B76DBAB0();
        objc_msgSend(v14, sel___swift_setObject_forKeyedSubscript_, v15, sub_1B76DBEE8());

        swift_unknownObjectRelease();
      }
      if (v11 >> 60 != 15)
      {
        sub_1B765DF7C(0, &qword_1ED53B5E8);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177830);
        v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = xmmword_1B76DCB70;
        *(_QWORD *)(v16 + 32) = 1635017060;
        *(_QWORD *)(v16 + 40) = 0xE400000000000000;
        *(_QWORD *)(v16 + 88) = MEMORY[0x1E0CB0338];
        *(_QWORD *)(v16 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v16 + 64) = v10;
        *(_QWORD *)(v16 + 72) = v11;
        sub_1B765DDFC(v10, v11);
        sub_1B765DDFC(v10, v11);
        v17 = (void *)sub_1B76DBC78();
        v18 = (void *)sub_1B76DBC6C();

        objc_msgSend(v14, sel___swift_setObject_forKeyedSubscript_, v18, sub_1B76DBEE8());
        sub_1B765DF1C(v10, v11);

        swift_unknownObjectRelease();
      }
      __asm { BR              X8 }
    }
    v7 = 6;
    if (v20 > 6)
    {
      v5 = *(_QWORD *)(a1 + 112);
      if (v5)
      {
        v6 = 6;
        goto LABEL_21;
      }
      while (1)
      {
        v6 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
          __break(1u);
          JUMPOUT(0x1B76B2904);
        }
        if (v6 >= v20)
          break;
        v5 = *(_QWORD *)(a1 + 64 + 8 * v6);
        ++v7;
        if (v5)
          goto LABEL_21;
      }
    }
  }
LABEL_27:
  swift_release();
  return v22;
}

uint64_t ScreenTimeSettings.ShieldPolicy.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B76B2940 + 4 * byte_1B76DECC0[*v0]))(1701736302, 0xE400000000000000);
}

uint64_t sub_1B76B2940()
{
  return 1852989815;
}

uint64_t sub_1B76B294C()
{
  return 7041889;
}

uint64_t sub_1B76B295C()
{
  return 0x69646E65506B7361;
}

uint64_t sub_1B76B2978()
{
  return 0x64656B636F6C62;
}

ManagedSettings::ScreenTimeSettings::ShieldPolicy_optional __swiftcall ScreenTimeSettings.ShieldPolicy.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ManagedSettings::ScreenTimeSettings::ShieldPolicy_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1B76DBE70();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

ManagedSettings::ScreenTimeSettings::Name_optional __swiftcall ScreenTimeSettings.Name.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ManagedSettings::ScreenTimeSettings::Name_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1B76DBE70();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static ScreenTimeSettings.Name.allCases.getter()
{
  return &unk_1E6CAC100;
}

unint64_t ScreenTimeSettings.Name.rawValue.getter()
{
  _BYTE *v0;
  unint64_t v1;
  int v2;

  v1 = 0xD000000000000021;
  v2 = *v0;
  if (v2 != 1)
    v1 = 0xD000000000000022;
  if (*v0)
    return v1;
  else
    return 0xD000000000000024;
}

uint64_t sub_1B76B2AA8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B76A21E4(*a1, *a2);
}

uint64_t sub_1B76B2AB4()
{
  return sub_1B76D9108();
}

uint64_t sub_1B76B2ABC()
{
  return sub_1B76D9BEC();
}

uint64_t sub_1B76B2AC4()
{
  return sub_1B76D9D50();
}

ManagedSettings::ScreenTimeSettings::Name_optional sub_1B76B2ACC(Swift::String *a1)
{
  return ScreenTimeSettings.Name.init(rawValue:)(*a1);
}

unint64_t sub_1B76B2AD8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;
  unint64_t v3;

  result = ScreenTimeSettings.Name.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1B76B2AFC(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6CAC220;
}

BOOL static ScreenTimeSettings.ShieldPolicy.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

void *static ScreenTimeSettings.ShieldPolicy.allCases.getter()
{
  return &unk_1E6CABF88;
}

void sub_1B76B2B2C(char *a1)
{
  sub_1B76A22D0(*a1);
}

void sub_1B76B2B38()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1B76DBF54();
  __asm { BR              X9 }
}

uint64_t sub_1B76B2B7C()
{
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

void sub_1B76B2BF4()
{
  __asm { BR              X10 }
}

uint64_t sub_1B76B2C28()
{
  sub_1B76DBB1C();
  return swift_bridgeObjectRelease();
}

void sub_1B76B2C8C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1B76DBF54();
  __asm { BR              X9 }
}

uint64_t sub_1B76B2CCC()
{
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

ManagedSettings::ScreenTimeSettings::ShieldPolicy_optional sub_1B76B2D44(Swift::String *a1)
{
  return ScreenTimeSettings.ShieldPolicy.init(rawValue:)(*a1);
}

uint64_t sub_1B76B2D50()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1B76B2D78 + 4 * byte_1B76DECD4[*v0]))();
}

void sub_1B76B2D78(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 1852989815;
  a1[1] = v1;
}

void sub_1B76B2D88(_QWORD *a1@<X8>)
{
  *a1 = 7041889;
  a1[1] = 0xE300000000000000;
}

void sub_1B76B2D9C(_QWORD *a1@<X8>)
{
  *a1 = 0x69646E65506B7361;
  a1[1] = 0xEA0000000000676ELL;
}

void sub_1B76B2DBC(_QWORD *a1@<X8>)
{
  *a1 = 0x64656B636F6C62;
  a1[1] = 0xE700000000000000;
}

void sub_1B76B2DD8(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6CAC0D8;
}

uint64_t ScreenTimeSettings.applicationShieldPolicies.getter()
{
  return sub_1B76B3818(&qword_1EF1772D8, (uint64_t)&xmmword_1EF1787A0, sub_1B7658E30);
}

uint64_t ScreenTimeSettings.applicationShieldPolicies.setter(uint64_t a1)
{
  sub_1B76B3E20(a1);
  return swift_bridgeObjectRelease();
}

void (*ScreenTimeSettings.applicationShieldPolicies.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x98uLL);
  *a1 = v3;
  v4 = v3 + 17;
  v3[18] = v1;
  v5 = *v1;
  v6 = v1[1];
  v8 = v1[2];
  v7 = v1[3];
  if (qword_1EF1772D8 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = sub_1B7658E30((uint64_t)&xmmword_1EF1787A0, v5, v6, v8, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v4 = v9;
  return sub_1B76B2EF0;
}

void sub_1B76B2EF0(uint64_t *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = *a1;
  v4 = *(_QWORD *)(*a1 + 136);
  v5 = *(uint64_t **)(*a1 + 144);
  sub_1B76638C0((uint64_t)&xmmword_1EF1787A0, *a1, &qword_1EF1788A8);
  v7 = *v5;
  v6 = v5[1];
  v9 = v5[2];
  v8 = v5[3];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v4)
    {
      swift_bridgeObjectRetain();
      v10 = sub_1B76B1E38(v4, (void (*)(uint64_t, unint64_t))sub_1B765DF08, 0xD000000000000010, 0x80000001B76E2790, (void (*)(uint64_t, unint64_t))sub_1B765DF1C);
    }
    else
    {
      v10 = 0;
    }
    if (qword_1EF177160 != -1)
      swift_once();
    swift_beginAccess();
    if (off_1EF1775A8)
    {
      v12 = *(_QWORD *)(v3 + 8);
      v13 = *(_QWORD *)(v3 + 16);
      v18 = v7;
      v19 = v6;
      v20 = v9;
      v21 = v8;
      v14 = *(unsigned __int8 *)(v3 + 66);
      swift_retain();
      sub_1B765ED7C(v10, v12, v13, &v18, v14);
      swift_release();
    }
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    sub_1B765DE88(v3, &qword_1EF1788A8);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v4)
    {
      swift_bridgeObjectRetain();
      v11 = sub_1B76B1E38(v4, (void (*)(uint64_t, unint64_t))sub_1B765DF08, 0xD000000000000010, 0x80000001B76E2790, (void (*)(uint64_t, unint64_t))sub_1B765DF1C);
      swift_bridgeObjectRelease();
    }
    else
    {
      v11 = 0;
    }
    if (qword_1EF177160 != -1)
      swift_once();
    swift_beginAccess();
    if (off_1EF1775A8)
    {
      v15 = *(_QWORD *)(v3 + 8);
      v16 = *(_QWORD *)(v3 + 16);
      v18 = v7;
      v19 = v6;
      v20 = v9;
      v21 = v8;
      v17 = *(unsigned __int8 *)(v3 + 66);
      swift_retain();
      sub_1B765ED7C(v11, v15, v16, &v18, v17);
      swift_release();
    }
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    sub_1B765DE88(v3, &qword_1EF1788A8);
  }
  swift_bridgeObjectRelease();
  free((void *)v3);
}

uint64_t ScreenTimeSettings.effectiveApplicationShieldPolicies.getter()
{
  return sub_1B76B3CE4(&qword_1EF1772D8, (uint64_t)&xmmword_1EF1787A0, sub_1B7659F0C);
}

double sub_1B76B31D0()
{
  double result;
  __int128 v1;
  _OWORD v2[3];
  __int128 v3;
  char v4;
  _BYTE v5[24];
  uint64_t v6;
  _UNKNOWN **v7;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178910);
  v7 = &off_1E6CB0650;
  v5[0] = 1;
  *(_QWORD *)&v1 = MEMORY[0x1E0DEE9E0];
  *((_QWORD *)&v1 + 1) = 0xD000000000000024;
  *(_QWORD *)&v2[0] = 0x80000001B76E18B0;
  sub_1B76638C0((uint64_t)v5, (uint64_t)v2 + 8, &qword_1EF178918);
  LOWORD(v3) = 256;
  BYTE2(v3) = 0;
  *((_QWORD *)&v3 + 1) = 0x7FFFFFFFFFFFFFFFLL;
  v4 = 0;
  sub_1B765DE88((uint64_t)v5, &qword_1EF178918);
  xmmword_1EF1787C0 = v2[1];
  unk_1EF1787D0 = v2[2];
  xmmword_1EF1787E0 = v3;
  byte_1EF1787F0 = v4;
  result = *(double *)&v1;
  xmmword_1EF1787A0 = v1;
  *(_OWORD *)algn_1EF1787B0 = v2[0];
  return result;
}

uint64_t static ScreenTimeSettings.applicationShieldPolicies.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B76B37A0(&qword_1EF1772D8, (uint64_t)&xmmword_1EF1787A0, &qword_1EF1788A8, a1);
}

uint64_t ScreenTimeSettings.categoryShieldPolicies.getter()
{
  return sub_1B76B3818(&qword_1EF1772E0, (uint64_t)&xmmword_1EF1787F8, sub_1B7658E4C);
}

uint64_t ScreenTimeSettings.categoryShieldPolicies.setter(uint64_t a1)
{
  sub_1B76B3FC4(a1);
  return swift_bridgeObjectRelease();
}

void (*ScreenTimeSettings.categoryShieldPolicies.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x98uLL);
  *a1 = v3;
  v4 = v3 + 17;
  v3[18] = v1;
  v5 = *v1;
  v6 = v1[1];
  v8 = v1[2];
  v7 = v1[3];
  if (qword_1EF1772E0 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = sub_1B7658E4C((uint64_t)&xmmword_1EF1787F8, v5, v6, v8, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v4 = v9;
  return sub_1B76B33CC;
}

void sub_1B76B33CC(uint64_t *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = *a1;
  v4 = *(_QWORD *)(*a1 + 136);
  v5 = *(uint64_t **)(*a1 + 144);
  sub_1B76638C0((uint64_t)&xmmword_1EF1787F8, *a1, &qword_1EF1788B0);
  v7 = *v5;
  v6 = v5[1];
  v9 = v5[2];
  v8 = v5[3];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v4)
    {
      swift_bridgeObjectRetain();
      v10 = sub_1B76B1E38(v4, (void (*)(uint64_t, unint64_t))sub_1B765E0D4, 0x696669746E656469, 0xEA00000000007265, (void (*)(uint64_t, unint64_t))sub_1B765E0D8);
    }
    else
    {
      v10 = 0;
    }
    if (qword_1EF177160 != -1)
      swift_once();
    swift_beginAccess();
    if (off_1EF1775A8)
    {
      v12 = *(_QWORD *)(v3 + 8);
      v13 = *(_QWORD *)(v3 + 16);
      v18 = v7;
      v19 = v6;
      v20 = v9;
      v21 = v8;
      v14 = *(unsigned __int8 *)(v3 + 66);
      swift_retain();
      sub_1B765ED7C(v10, v12, v13, &v18, v14);
      swift_release();
    }
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    sub_1B765DE88(v3, &qword_1EF1788B0);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v4)
    {
      swift_bridgeObjectRetain();
      v11 = sub_1B76B1E38(v4, (void (*)(uint64_t, unint64_t))sub_1B765E0D4, 0x696669746E656469, 0xEA00000000007265, (void (*)(uint64_t, unint64_t))sub_1B765E0D8);
      swift_bridgeObjectRelease();
    }
    else
    {
      v11 = 0;
    }
    if (qword_1EF177160 != -1)
      swift_once();
    swift_beginAccess();
    if (off_1EF1775A8)
    {
      v15 = *(_QWORD *)(v3 + 8);
      v16 = *(_QWORD *)(v3 + 16);
      v18 = v7;
      v19 = v6;
      v20 = v9;
      v21 = v8;
      v17 = *(unsigned __int8 *)(v3 + 66);
      swift_retain();
      sub_1B765ED7C(v11, v15, v16, &v18, v17);
      swift_release();
    }
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    sub_1B765DE88(v3, &qword_1EF1788B0);
  }
  swift_bridgeObjectRelease();
  free((void *)v3);
}

uint64_t ScreenTimeSettings.effectiveCategoryShieldPolicies.getter()
{
  return sub_1B76B3CE4(&qword_1EF1772E0, (uint64_t)&xmmword_1EF1787F8, sub_1B7659F28);
}

double sub_1B76B36AC()
{
  double result;
  __int128 v1;
  _OWORD v2[3];
  __int128 v3;
  char v4;
  _BYTE v5[24];
  uint64_t v6;
  _UNKNOWN **v7;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178900);
  v7 = &off_1E6CB0650;
  v5[0] = 1;
  *(_QWORD *)&v1 = MEMORY[0x1E0DEE9E0];
  *((_QWORD *)&v1 + 1) = 0xD000000000000021;
  *(_QWORD *)&v2[0] = 0x80000001B76E18E0;
  sub_1B76638C0((uint64_t)v5, (uint64_t)v2 + 8, &qword_1EF178908);
  LOWORD(v3) = 256;
  BYTE2(v3) = 0;
  *((_QWORD *)&v3 + 1) = 0x7FFFFFFFFFFFFFFFLL;
  v4 = 0;
  sub_1B765DE88((uint64_t)v5, &qword_1EF178908);
  xmmword_1EF178818 = v2[1];
  unk_1EF178828 = v2[2];
  xmmword_1EF178838 = v3;
  byte_1EF178848 = v4;
  result = *(double *)&v1;
  xmmword_1EF1787F8 = v1;
  unk_1EF178808 = v2[0];
  return result;
}

uint64_t static ScreenTimeSettings.categoryShieldPolicies.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B76B37A0(&qword_1EF1772E0, (uint64_t)&xmmword_1EF1787F8, &qword_1EF1788B0, a1);
}

uint64_t sub_1B76B37A0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1)
    swift_once();
  return sub_1B76638C0(a2, a4, a3);
}

uint64_t ScreenTimeSettings.webDomainShieldPolicies.getter()
{
  return sub_1B76B3818(&qword_1EF1772E8, (uint64_t)&xmmword_1EF178850, sub_1B7658E68);
}

uint64_t sub_1B76B3818(_QWORD *a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7 = *v3;
  v6 = v3[1];
  v9 = v3[2];
  v8 = v3[3];
  if (*a1 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = a3(a2, v7, v6, v9, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1B76B38A8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X3>, uint64_t a3@<X4>, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X5>, uint64_t *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  v9 = *a1;
  v8 = a1[1];
  v11 = a1[2];
  v10 = a1[3];
  v12 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = a4(a3, v9, v8, v11, v10);
  swift_bridgeObjectRelease_n();
  result = swift_bridgeObjectRelease_n();
  *a5 = v13;
  return result;
}

uint64_t ScreenTimeSettings.webDomainShieldPolicies.setter(uint64_t a1)
{
  sub_1B76B4168(a1);
  return swift_bridgeObjectRelease();
}

void (*ScreenTimeSettings.webDomainShieldPolicies.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x98uLL);
  *a1 = v3;
  v4 = v3 + 17;
  v3[18] = v1;
  v5 = *v1;
  v6 = v1[1];
  v8 = v1[2];
  v7 = v1[3];
  if (qword_1EF1772E8 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = sub_1B7658E68((uint64_t)&xmmword_1EF178850, v5, v6, v8, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v4 = v9;
  return sub_1B76B3A54;
}

void sub_1B76B3A54(uint64_t *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = *a1;
  v4 = *(_QWORD *)(*a1 + 136);
  v5 = *(uint64_t **)(*a1 + 144);
  sub_1B76638C0((uint64_t)&xmmword_1EF178850, *a1, &qword_1EF1788B8);
  v7 = *v5;
  v6 = v5[1];
  v9 = v5[2];
  v8 = v5[3];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v4)
    {
      swift_bridgeObjectRetain();
      v10 = sub_1B76B23C0(v4);
    }
    else
    {
      v10 = 0;
    }
    if (qword_1EF177160 != -1)
      swift_once();
    swift_beginAccess();
    if (off_1EF1775A8)
    {
      v12 = *(_QWORD *)(v3 + 8);
      v13 = *(_QWORD *)(v3 + 16);
      v18 = v7;
      v19 = v6;
      v20 = v9;
      v21 = v8;
      v14 = *(unsigned __int8 *)(v3 + 66);
      swift_retain();
      sub_1B765ED7C(v10, v12, v13, &v18, v14);
      swift_release();
    }
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    sub_1B765DE88(v3, &qword_1EF1788B8);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v4)
    {
      swift_bridgeObjectRetain();
      v11 = sub_1B76B23C0(v4);
      swift_bridgeObjectRelease();
    }
    else
    {
      v11 = 0;
    }
    if (qword_1EF177160 != -1)
      swift_once();
    swift_beginAccess();
    if (off_1EF1775A8)
    {
      v15 = *(_QWORD *)(v3 + 8);
      v16 = *(_QWORD *)(v3 + 16);
      v18 = v7;
      v19 = v6;
      v20 = v9;
      v21 = v8;
      v17 = *(unsigned __int8 *)(v3 + 66);
      swift_retain();
      sub_1B765ED7C(v11, v15, v16, &v18, v17);
      swift_release();
    }
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    sub_1B765DE88(v3, &qword_1EF1788B8);
  }
  swift_bridgeObjectRelease();
  free((void *)v3);
}

uint64_t ScreenTimeSettings.effectiveWebDomainShieldPolicies.getter()
{
  return sub_1B76B3CE4(&qword_1EF1772E8, (uint64_t)&xmmword_1EF178850, sub_1B7659F44);
}

uint64_t sub_1B76B3CE4(_QWORD *a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t (*v5)(_QWORD);

  if (*a1 != -1)
  {
    v5 = a3;
    swift_once();
    a3 = v5;
  }
  return a3(a2);
}

double sub_1B76B3D2C()
{
  double result;
  __int128 v1;
  _OWORD v2[3];
  __int128 v3;
  char v4;
  _BYTE v5[24];
  uint64_t v6;
  _UNKNOWN **v7;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1788F0);
  v7 = &off_1E6CB0650;
  v5[0] = 1;
  *(_QWORD *)&v1 = MEMORY[0x1E0DEE9E0];
  *((_QWORD *)&v1 + 1) = 0xD000000000000022;
  *(_QWORD *)&v2[0] = 0x80000001B76E1910;
  sub_1B76638C0((uint64_t)v5, (uint64_t)v2 + 8, &qword_1EF1788F8);
  LOWORD(v3) = 256;
  BYTE2(v3) = 0;
  *((_QWORD *)&v3 + 1) = 0x7FFFFFFFFFFFFFFFLL;
  v4 = 0;
  sub_1B765DE88((uint64_t)v5, &qword_1EF1788F8);
  xmmword_1EF178870 = v2[1];
  unk_1EF178880 = v2[2];
  xmmword_1EF178890 = v3;
  byte_1EF1788A0 = v4;
  result = *(double *)&v1;
  xmmword_1EF178850 = v1;
  unk_1EF178860 = v2[0];
  return result;
}

uint64_t static ScreenTimeSettings.webDomainShieldPolicies.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B76B37A0(&qword_1EF1772E8, (uint64_t)&xmmword_1EF178850, &qword_1EF1788B8, a1);
}

uint64_t sub_1B76B3E20(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v12[4];
  _BYTE v13[8];
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;

  if (qword_1EF1772D8 != -1)
    swift_once();
  sub_1B76638C0((uint64_t)&xmmword_1EF1787A0, (uint64_t)v13, &qword_1EF1788A8);
  v4 = *v1;
  v3 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (a1)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1B76B1E38(a1, (void (*)(uint64_t, unint64_t))sub_1B765DF08, 0xD000000000000010, 0x80000001B76E2790, (void (*)(uint64_t, unint64_t))sub_1B765DF1C);
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    v8 = v14;
    v9 = v15;
    v12[0] = v4;
    v12[1] = v3;
    v12[2] = v6;
    v12[3] = v5;
    v10 = v16;
    swift_retain();
    sub_1B765ED7C(v7, v8, v9, v12, v10);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  return sub_1B765DE88((uint64_t)v13, &qword_1EF1788A8);
}

uint64_t sub_1B76B3FC4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v12[4];
  _BYTE v13[8];
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;

  if (qword_1EF1772E0 != -1)
    swift_once();
  sub_1B76638C0((uint64_t)&xmmword_1EF1787F8, (uint64_t)v13, &qword_1EF1788B0);
  v4 = *v1;
  v3 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (a1)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1B76B1E38(a1, (void (*)(uint64_t, unint64_t))sub_1B765E0D4, 0x696669746E656469, 0xEA00000000007265, (void (*)(uint64_t, unint64_t))sub_1B765E0D8);
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    v8 = v14;
    v9 = v15;
    v12[0] = v4;
    v12[1] = v3;
    v12[2] = v6;
    v12[3] = v5;
    v10 = v16;
    swift_retain();
    sub_1B765ED7C(v7, v8, v9, v12, v10);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  return sub_1B765DE88((uint64_t)v13, &qword_1EF1788B0);
}

uint64_t sub_1B76B4168(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v12[4];
  _BYTE v13[8];
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;

  if (qword_1EF1772E8 != -1)
    swift_once();
  sub_1B76638C0((uint64_t)&xmmword_1EF178850, (uint64_t)v13, &qword_1EF1788B8);
  v4 = *v1;
  v3 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (a1)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1B76B23C0(a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    v8 = v14;
    v9 = v15;
    v12[0] = v4;
    v12[1] = v3;
    v12[2] = v6;
    v12[3] = v5;
    v10 = v16;
    swift_retain();
    sub_1B765ED7C(v7, v8, v9, v12, v10);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  return sub_1B765DE88((uint64_t)v13, &qword_1EF1788B8);
}

unint64_t sub_1B76B42E8()
{
  unint64_t result;

  result = qword_1EF1788C0;
  if (!qword_1EF1788C0)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for ScreenTimeSettings.Name, &type metadata for ScreenTimeSettings.Name);
    atomic_store(result, (unint64_t *)&qword_1EF1788C0);
  }
  return result;
}

uint64_t sub_1B76B432C()
{
  return sub_1B76B1904(&qword_1EF1788C8, &qword_1EF1788D0);
}

unint64_t sub_1B76B4354()
{
  unint64_t result;

  result = qword_1EF1788D8;
  if (!qword_1EF1788D8)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for ScreenTimeSettings.ShieldPolicy, &type metadata for ScreenTimeSettings.ShieldPolicy);
    atomic_store(result, (unint64_t *)&qword_1EF1788D8);
  }
  return result;
}

uint64_t sub_1B76B4398()
{
  return sub_1B76B1904(&qword_1EF1788E0, &qword_1EF1788E8);
}

uint64_t sub_1B76B43BC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B76B38A8(a1, &qword_1EF1772D8, (uint64_t)&xmmword_1EF1787A0, sub_1B7658E30, a2);
}

uint64_t sub_1B76B43F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm_0(a1, a2, a3, a4, (void (*)(uint64_t))sub_1B76B3E20);
}

uint64_t sub_1B76B43FC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B76B38A8(a1, &qword_1EF1772E0, (uint64_t)&xmmword_1EF1787F8, sub_1B7658E4C, a2);
}

uint64_t sub_1B76B4430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm_0(a1, a2, a3, a4, (void (*)(uint64_t))sub_1B76B3FC4);
}

uint64_t sub_1B76B443C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B76B38A8(a1, &qword_1EF1772E8, (uint64_t)&xmmword_1EF178850, sub_1B7658E68, a2);
}

uint64_t sub_1B76B4470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm_0(a1, a2, a3, a4, (void (*)(uint64_t))sub_1B76B4168);
}

uint64_t keypath_setTm_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v6;

  v6 = swift_bridgeObjectRetain();
  a5(v6);
  return swift_bridgeObjectRelease();
}

ValueMetadata *type metadata accessor for ScreenTimeSettings()
{
  return &type metadata for ScreenTimeSettings;
}

uint64_t storeEnumTagSinglePayload for ScreenTimeSettings.Name(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B76B4514 + 4 * byte_1B76DECDE[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B76B4548 + 4 * byte_1B76DECD9[v4]))();
}

uint64_t sub_1B76B4548(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76B4550(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B76B4558);
  return result;
}

uint64_t sub_1B76B4564(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B76B456CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B76B4570(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76B4578(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ScreenTimeSettings.Name()
{
  return &type metadata for ScreenTimeSettings.Name;
}

uint64_t getEnumTagSinglePayload for ScreenTimeSettings.ShieldPolicy(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ScreenTimeSettings.ShieldPolicy(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1B76B4670 + 4 * byte_1B76DECE8[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1B76B46A4 + 4 * byte_1B76DECE3[v4]))();
}

uint64_t sub_1B76B46A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76B46AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B76B46B4);
  return result;
}

uint64_t sub_1B76B46C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B76B46C8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1B76B46CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76B46D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ScreenTimeSettings.ShieldPolicy()
{
  return &type metadata for ScreenTimeSettings.ShieldPolicy;
}

ManagedSettings::MediaSettings::Name_optional __swiftcall MediaSettings.Name.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ManagedSettings::MediaSettings::Name_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1B76DBE70();
  result.value = swift_bridgeObjectRelease();
  v5 = 12;
  if (v3 < 0xC)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static MediaSettings.Name.allCases.getter()
{
  return &unk_1E6CACE98;
}

uint64_t MediaSettings.Name.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1B76B478C + 4 * byte_1B76DEF48[*v0]))(0xD000000000000013, 0x80000001B76E1940);
}

uint64_t sub_1B76B478C@<X0>(uint64_t a1@<X8>)
{
  return a1 + 1;
}

uint64_t sub_1B76B484C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B76A17F0(*a1, *a2);
}

uint64_t sub_1B76B4858()
{
  sub_1B76DBF54();
  MediaSettings.Name.rawValue.getter();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

uint64_t sub_1B76B48BC()
{
  MediaSettings.Name.rawValue.getter();
  sub_1B76DBB1C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76B490C()
{
  sub_1B76DBF54();
  MediaSettings.Name.rawValue.getter();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

ManagedSettings::MediaSettings::Name_optional sub_1B76B496C(Swift::String *a1)
{
  return MediaSettings.Name.init(rawValue:)(*a1);
}

uint64_t sub_1B76B4978@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = MediaSettings.Name.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1B76B499C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6CACE98;
}

uint64_t MediaSettings.denyBookstore.getter()
{
  return sub_1B765A148(&qword_1EF1772F0, (uint64_t)&byte_1EF178920);
}

uint64_t MediaSettings.denyBookstore.setter(unsigned __int8 a1)
{
  return sub_1B766413C(a1, &qword_1EF1772F0, (uint64_t)&byte_1EF178920);
}

uint64_t (*MediaSettings.denyBookstore.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF1772F0 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF178920, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B76B4A94;
}

uint64_t sub_1B76B4A94(uint64_t a1)
{
  return MediaSettings.denyBookstore.setter(*(_BYTE *)(a1 + 8));
}

uint64_t MediaSettings.effectiveDenyBookstore.getter()
{
  return sub_1B765A568(&qword_1EF1772F0, &byte_1EF178920);
}

uint64_t sub_1B76B4AD4()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF178950 = result;
  unk_1EF178958 = &off_1E6CB07B8;
  byte_1EF178938 = 0;
  byte_1EF178920 = 0;
  qword_1EF178928 = 0xD000000000000013;
  unk_1EF178930 = 0x80000001B76E1940;
  word_1EF178960 = 256;
  byte_1EF178962 = 0;
  qword_1EF178968 = 0;
  byte_1EF178970 = 1;
  return result;
}

uint64_t static MediaSettings.denyBookstore.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7664440(&qword_1EF1772F0, (uint64_t)&byte_1EF178920, a1);
}

uint64_t MediaSettings.denyBookstoreErotica.getter()
{
  return sub_1B765A148(&qword_1EF1772F8, (uint64_t)&byte_1EF178978);
}

uint64_t MediaSettings.denyBookstoreErotica.setter(unsigned __int8 a1)
{
  return sub_1B766413C(a1, &qword_1EF1772F8, (uint64_t)&byte_1EF178978);
}

uint64_t (*MediaSettings.denyBookstoreErotica.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF1772F8 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF178978, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B76B4C44;
}

uint64_t sub_1B76B4C44(uint64_t a1)
{
  return MediaSettings.denyBookstoreErotica.setter(*(_BYTE *)(a1 + 8));
}

uint64_t MediaSettings.effectiveDenyBookstoreErotica.getter()
{
  return sub_1B765A568(&qword_1EF1772F8, &byte_1EF178978);
}

uint64_t sub_1B76B4C84()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF1789A8 = result;
  unk_1EF1789B0 = &off_1E6CB07B8;
  byte_1EF178990 = 0;
  byte_1EF178978 = 0;
  qword_1EF178980 = 0xD00000000000001ALL;
  unk_1EF178988 = 0x80000001B76E1960;
  word_1EF1789B8 = 257;
  byte_1EF1789BA = 0;
  qword_1EF1789C0 = 0;
  byte_1EF1789C8 = 1;
  return result;
}

uint64_t static MediaSettings.denyBookstoreErotica.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7664440(&qword_1EF1772F8, (uint64_t)&byte_1EF178978, a1);
}

uint64_t MediaSettings.denyExplicitContent.getter()
{
  return sub_1B765A148(&qword_1EF177300, (uint64_t)&byte_1EF1789D0);
}

uint64_t MediaSettings.denyExplicitContent.setter(unsigned __int8 a1)
{
  return sub_1B766413C(a1, &qword_1EF177300, (uint64_t)&byte_1EF1789D0);
}

uint64_t (*MediaSettings.denyExplicitContent.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177300 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF1789D0, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B76B4DF4;
}

uint64_t sub_1B76B4DF4(uint64_t a1)
{
  return MediaSettings.denyExplicitContent.setter(*(_BYTE *)(a1 + 8));
}

uint64_t MediaSettings.effectiveDenyExplicitContent.getter()
{
  return sub_1B765A568(&qword_1EF177300, &byte_1EF1789D0);
}

uint64_t sub_1B76B4E34()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF178A00 = result;
  unk_1EF178A08 = &off_1E6CB07B8;
  byte_1EF1789E8 = 0;
  byte_1EF1789D0 = 0;
  qword_1EF1789D8 = 0xD000000000000019;
  unk_1EF1789E0 = 0x80000001B76E1980;
  word_1EF178A10 = 257;
  byte_1EF178A12 = 0;
  qword_1EF178A18 = 0;
  byte_1EF178A20 = 1;
  return result;
}

uint64_t static MediaSettings.denyExplicitContent.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7664440(&qword_1EF177300, (uint64_t)&byte_1EF1789D0, a1);
}

uint64_t MediaSettings.denyiTunes.getter()
{
  return sub_1B765A148(&qword_1EF177308, (uint64_t)&byte_1EF178A28);
}

uint64_t MediaSettings.denyiTunes.setter(unsigned __int8 a1)
{
  return sub_1B766413C(a1, &qword_1EF177308, (uint64_t)&byte_1EF178A28);
}

uint64_t (*MediaSettings.denyiTunes.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177308 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF178A28, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B76B4FA4;
}

uint64_t sub_1B76B4FA4(uint64_t a1)
{
  return MediaSettings.denyiTunes.setter(*(_BYTE *)(a1 + 8));
}

uint64_t MediaSettings.effectiveDenyiTunes.getter()
{
  return sub_1B765A568(&qword_1EF177308, &byte_1EF178A28);
}

uint64_t sub_1B76B4FE4()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF178A58 = result;
  unk_1EF178A60 = &off_1E6CB07B8;
  byte_1EF178A40 = 0;
  byte_1EF178A28 = 0;
  qword_1EF178A30 = 0xD000000000000010;
  unk_1EF178A38 = 0x80000001B76E19A0;
  word_1EF178A68 = 256;
  byte_1EF178A6A = 0;
  qword_1EF178A70 = 0;
  byte_1EF178A78 = 1;
  return result;
}

uint64_t static MediaSettings.denyiTunes.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7664440(&qword_1EF177308, (uint64_t)&byte_1EF178A28, a1);
}

uint64_t MediaSettings.denyMusicArtistActivity.getter()
{
  return sub_1B765A148(&qword_1EF177310, (uint64_t)&byte_1EF178A80);
}

uint64_t MediaSettings.denyMusicArtistActivity.setter(unsigned __int8 a1)
{
  return sub_1B766413C(a1, &qword_1EF177310, (uint64_t)&byte_1EF178A80);
}

uint64_t (*MediaSettings.denyMusicArtistActivity.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177310 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF178A80, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B76B5154;
}

uint64_t sub_1B76B5154(uint64_t a1)
{
  return MediaSettings.denyMusicArtistActivity.setter(*(_BYTE *)(a1 + 8));
}

uint64_t MediaSettings.effectiveDenyMusicArtistActivity.getter()
{
  return sub_1B765A568(&qword_1EF177310, &byte_1EF178A80);
}

uint64_t sub_1B76B5194()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF178AB0 = result;
  unk_1EF178AB8 = &off_1E6CB07B8;
  byte_1EF178A98 = 0;
  byte_1EF178A80 = 0;
  qword_1EF178A88 = 0xD00000000000001DLL;
  unk_1EF178A90 = 0x80000001B76E19C0;
  word_1EF178AC0 = 256;
  byte_1EF178AC2 = 0;
  qword_1EF178AC8 = 0;
  byte_1EF178AD0 = 1;
  return result;
}

uint64_t static MediaSettings.denyMusicArtistActivity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7664440(&qword_1EF177310, (uint64_t)&byte_1EF178A80, a1);
}

uint64_t MediaSettings.denyMusicService.getter()
{
  return sub_1B765A148(&qword_1EF177318, (uint64_t)&byte_1EF178AD8);
}

uint64_t MediaSettings.denyMusicService.setter(unsigned __int8 a1)
{
  return sub_1B766413C(a1, &qword_1EF177318, (uint64_t)&byte_1EF178AD8);
}

uint64_t (*MediaSettings.denyMusicService.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177318 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF178AD8, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B76B5304;
}

uint64_t sub_1B76B5304(uint64_t a1)
{
  return MediaSettings.denyMusicService.setter(*(_BYTE *)(a1 + 8));
}

uint64_t MediaSettings.effectiveDenyMusicService.getter()
{
  return sub_1B765A568(&qword_1EF177318, &byte_1EF178AD8);
}

uint64_t sub_1B76B5344()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF178B08 = result;
  unk_1EF178B10 = &off_1E6CB07B8;
  byte_1EF178AF0 = 0;
  byte_1EF178AD8 = 0;
  qword_1EF178AE0 = 0xD000000000000016;
  unk_1EF178AE8 = 0x80000001B76E19E0;
  word_1EF178B18 = 257;
  byte_1EF178B1A = 0;
  qword_1EF178B20 = 0;
  byte_1EF178B28 = 1;
  return result;
}

uint64_t static MediaSettings.denyMusicService.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7664440(&qword_1EF177318, (uint64_t)&byte_1EF178AD8, a1);
}

uint64_t MediaSettings.denyMusicVideos.getter()
{
  return sub_1B765A148(&qword_1EF177320, (uint64_t)&byte_1EF178B30);
}

uint64_t MediaSettings.denyMusicVideos.setter(unsigned __int8 a1)
{
  return sub_1B766413C(a1, &qword_1EF177320, (uint64_t)&byte_1EF178B30);
}

uint64_t (*MediaSettings.denyMusicVideos.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177320 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF178B30, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B76B54B4;
}

uint64_t sub_1B76B54B4(uint64_t a1)
{
  return MediaSettings.denyMusicVideos.setter(*(_BYTE *)(a1 + 8));
}

uint64_t MediaSettings.effectiveDenyMusicVideos.getter()
{
  return sub_1B765A568(&qword_1EF177320, &byte_1EF178B30);
}

uint64_t sub_1B76B54F4()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF178B60 = result;
  unk_1EF178B68 = &off_1E6CB07B8;
  byte_1EF178B48 = 0;
  byte_1EF178B30 = 0;
  qword_1EF178B38 = 0xD000000000000015;
  unk_1EF178B40 = 0x80000001B76E1A00;
  word_1EF178B70 = 256;
  byte_1EF178B72 = 0;
  qword_1EF178B78 = 0;
  byte_1EF178B80 = 1;
  return result;
}

uint64_t static MediaSettings.denyMusicVideos.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7664440(&qword_1EF177320, (uint64_t)&byte_1EF178B30, a1);
}

uint64_t MediaSettings.denyPodcasts.getter()
{
  return sub_1B765A148(&qword_1EF177328, (uint64_t)&byte_1EF178B88);
}

uint64_t MediaSettings.denyPodcasts.setter(unsigned __int8 a1)
{
  return sub_1B766413C(a1, &qword_1EF177328, (uint64_t)&byte_1EF178B88);
}

uint64_t (*MediaSettings.denyPodcasts.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177328 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF178B88, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B76B5664;
}

uint64_t sub_1B76B5664(uint64_t a1)
{
  return MediaSettings.denyPodcasts.setter(*(_BYTE *)(a1 + 8));
}

uint64_t MediaSettings.effectiveDenyPodcasts.getter()
{
  return sub_1B765A568(&qword_1EF177328, &byte_1EF178B88);
}

uint64_t sub_1B76B56A4()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF178BB8 = result;
  unk_1EF178BC0 = &off_1E6CB07B8;
  byte_1EF178BA0 = 0;
  byte_1EF178B88 = 0;
  qword_1EF178B90 = 0xD000000000000012;
  unk_1EF178B98 = 0x80000001B76E1A20;
  word_1EF178BC8 = 256;
  byte_1EF178BCA = 0;
  qword_1EF178BD0 = 0;
  byte_1EF178BD8 = 1;
  return result;
}

uint64_t static MediaSettings.denyPodcasts.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7664440(&qword_1EF177328, (uint64_t)&byte_1EF178B88, a1);
}

uint64_t MediaSettings.denySharedMediaLibraries.getter()
{
  return sub_1B765A148(&qword_1EF177330, (uint64_t)&byte_1EF178BE0);
}

uint64_t MediaSettings.denySharedMediaLibraries.setter(unsigned __int8 a1)
{
  return sub_1B766413C(a1, &qword_1EF177330, (uint64_t)&byte_1EF178BE0);
}

uint64_t (*MediaSettings.denySharedMediaLibraries.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177330 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF178BE0, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B76B5814;
}

uint64_t sub_1B76B5814(uint64_t a1)
{
  return MediaSettings.denySharedMediaLibraries.setter(*(_BYTE *)(a1 + 8));
}

uint64_t MediaSettings.effectiveDenySharedMediaLibraries.getter()
{
  return sub_1B765A568(&qword_1EF177330, &byte_1EF178BE0);
}

uint64_t sub_1B76B5854()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF178C10 = result;
  unk_1EF178C18 = &off_1E6CB07B8;
  byte_1EF178BF8 = 0;
  byte_1EF178BE0 = 0;
  qword_1EF178BE8 = 0xD00000000000001ELL;
  unk_1EF178BF0 = 0x80000001B76E1A40;
  word_1EF178C20 = 256;
  byte_1EF178C22 = 0;
  qword_1EF178C28 = 0;
  byte_1EF178C30 = 1;
  return result;
}

uint64_t static MediaSettings.denySharedMediaLibraries.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7664440(&qword_1EF177330, (uint64_t)&byte_1EF178BE0, a1);
}

uint64_t MediaSettings.lockTVProvider.getter()
{
  return sub_1B765A148(&qword_1EF177338, (uint64_t)&byte_1EF178C38);
}

uint64_t MediaSettings.lockTVProvider.setter(unsigned __int8 a1)
{
  return sub_1B766413C(a1, &qword_1EF177338, (uint64_t)&byte_1EF178C38);
}

uint64_t (*MediaSettings.lockTVProvider.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177338 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF178C38, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B76B59C4;
}

uint64_t sub_1B76B59C4(uint64_t a1)
{
  return MediaSettings.lockTVProvider.setter(*(_BYTE *)(a1 + 8));
}

uint64_t MediaSettings.effectiveLockTVProvider.getter()
{
  return sub_1B765A568(&qword_1EF177338, &byte_1EF178C38);
}

uint64_t sub_1B76B5A04()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF178C68 = result;
  unk_1EF178C70 = &off_1E6CB07B8;
  byte_1EF178C50 = 0;
  byte_1EF178C38 = 0;
  qword_1EF178C40 = 0xD000000000000014;
  unk_1EF178C48 = 0x80000001B76E1A60;
  word_1EF178C78 = 256;
  byte_1EF178C7A = 0;
  qword_1EF178C80 = 0;
  byte_1EF178C88 = 1;
  return result;
}

uint64_t static MediaSettings.lockTVProvider.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7664440(&qword_1EF177338, (uint64_t)&byte_1EF178C38, a1);
}

uint64_t MediaSettings.maximumMovieRating.getter()
{
  return sub_1B76B5DAC(&qword_1ED53AE78, (uint64_t)&xmmword_1ED53AD70);
}

uint64_t MediaSettings.maximumMovieRating.setter(uint64_t a1, char a2)
{
  return sub_1B76B5F2C(a1, a2, &qword_1ED53AE78, (uint64_t)&xmmword_1ED53AD70);
}

uint64_t (*MediaSettings.maximumMovieRating.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1ED53AE78 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B766E9A8((uint64_t)&xmmword_1ED53AD70, v3, v4, v6, v5);
  v9 = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)a1 = v7;
  *(_BYTE *)(a1 + 8) = v9 & 1;
  return sub_1B76B5B80;
}

uint64_t sub_1B76B5B80(uint64_t a1)
{
  return MediaSettings.maximumMovieRating.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t MediaSettings.effectiveMaximumMovieRating.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v6;

  if (qword_1ED53AE78 != -1)
    swift_once();
  if (qword_1EF1771A8 != -1)
    swift_once();
  swift_beginAccess();
  if (!qword_1EF1778A8)
    return xmmword_1ED53AD70;
  v0 = qword_1ED53AD88;
  v1 = qword_1ED53AD90;
  swift_retain();
  v2 = sub_1B7667778(v0, v1);
  swift_release();
  if (!v2)
    return xmmword_1ED53AD70;
  v3 = v2;
  sub_1B768A39C(v2);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177DC8);
  if ((swift_dynamicCast() & 1) == 0)
  {

    return xmmword_1ED53AD70;
  }

  v4 = *((_QWORD *)&xmmword_1ED53AD70 + 1);
  if (v6 > *((uint64_t *)&xmmword_1ED53AD70 + 1))
    v4 = v6;
  if (qword_1ED53AD80 >= v4)
    return v4;
  else
    return qword_1ED53AD80;
}

double sub_1B76B5D0C()
{
  double result;

  qword_1ED53ADB0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B018);
  unk_1ED53ADB8 = &off_1E6CB0650;
  byte_1ED53AD98 = 0;
  *(_QWORD *)&result = 1000;
  xmmword_1ED53AD70 = xmmword_1B76DD7B0;
  unk_1ED53AD80 = xmmword_1B76DF090;
  qword_1ED53AD90 = 0x80000001B76E1A80;
  word_1ED53ADC0 = 257;
  byte_1ED53ADC2 = 0;
  return result;
}

uint64_t static MediaSettings.maximumMovieRating.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B76B6394(&qword_1ED53AE78, (uint64_t)&xmmword_1ED53AD70, a1);
}

uint64_t MediaSettings.maximumTVShowRating.getter()
{
  return sub_1B76B5DAC(qword_1ED53AED8, (uint64_t)&xmmword_1ED53AE80);
}

uint64_t sub_1B76B5DAC(_QWORD *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *v2;
  v4 = v2[1];
  v7 = v2[2];
  v6 = v2[3];
  if (*a1 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_1B766E9A8(a2, v5, v4, v7, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1B76B5E40@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t result;

  v7 = *a1;
  v6 = a1[1];
  v9 = a1[2];
  v8 = a1[3];
  v10 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = sub_1B766E9A8(a3, v7, v6, v9, v8);
  v13 = v12;
  swift_bridgeObjectRelease_n();
  result = swift_bridgeObjectRelease_n();
  *(_QWORD *)a4 = v11;
  *(_BYTE *)(a4 + 8) = v13 & 1;
  return result;
}

uint64_t MediaSettings.maximumTVShowRating.setter(uint64_t a1, char a2)
{
  return sub_1B76B5F2C(a1, a2, qword_1ED53AED8, (uint64_t)&xmmword_1ED53AE80);
}

uint64_t sub_1B76B5F2C(uint64_t a1, char a2, _QWORD *a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v20[4];
  _BYTE v21[8];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;

  if (*a3 != -1)
    swift_once();
  sub_1B76638C0(a4, (uint64_t)v21, &qword_1ED53AE50);
  v9 = *v4;
  v8 = v4[1];
  v11 = v4[2];
  v10 = v4[3];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = 0;
  }
  else
  {
    v12 = v22;
    if (v22 <= a1)
      v12 = a1;
    if (v23 >= v12)
      v13 = v12;
    else
      v13 = v23;
    v14 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = objc_msgSend(v14, sel_initWithInteger_, v13);
  }
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    v16 = v24;
    v17 = v25;
    v20[0] = v9;
    v20[1] = v8;
    v20[2] = v11;
    v20[3] = v10;
    v18 = v26;
    swift_retain();
    sub_1B765ED7C(v15, v16, v17, v20, v18);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  return sub_1B765DE88((uint64_t)v21, &qword_1ED53AE50);
}

uint64_t (*MediaSettings.maximumTVShowRating.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1ED53AED8[0] != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B766E9A8((uint64_t)&xmmword_1ED53AE80, v3, v4, v6, v5);
  v9 = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)a1 = v7;
  *(_BYTE *)(a1 + 8) = v9 & 1;
  return sub_1B76B6184;
}

uint64_t sub_1B76B6184(uint64_t a1)
{
  return MediaSettings.maximumTVShowRating.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t MediaSettings.effectiveMaximumTVShowRating.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v6;

  if (qword_1ED53AED8[0] != -1)
    swift_once();
  if (qword_1EF1771A8 != -1)
    swift_once();
  swift_beginAccess();
  if (!qword_1EF1778A8)
    return xmmword_1ED53AE80;
  v0 = qword_1ED53AE98;
  v1 = qword_1ED53AEA0;
  swift_retain();
  v2 = sub_1B7667778(v0, v1);
  swift_release();
  if (!v2)
    return xmmword_1ED53AE80;
  v3 = v2;
  sub_1B768A39C(v2);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177DC8);
  if ((swift_dynamicCast() & 1) == 0)
  {

    return xmmword_1ED53AE80;
  }

  v4 = *((_QWORD *)&xmmword_1ED53AE80 + 1);
  if (v6 > *((uint64_t *)&xmmword_1ED53AE80 + 1))
    v4 = v6;
  if (qword_1ED53AE90 >= v4)
    return v4;
  else
    return qword_1ED53AE90;
}

double sub_1B76B6310()
{
  double result;

  qword_1ED53AEC0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B018);
  unk_1ED53AEC8 = &off_1E6CB0650;
  byte_1ED53AEA8 = 0;
  *(_QWORD *)&result = 1000;
  xmmword_1ED53AE80 = xmmword_1B76DD7B0;
  unk_1ED53AE90 = xmmword_1B76DF0A0;
  qword_1ED53AEA0 = 0x80000001B76E1AA0;
  word_1ED53AED0 = 257;
  byte_1ED53AED2 = 0;
  return result;
}

uint64_t static MediaSettings.maximumTVShowRating.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B76B6394(qword_1ED53AED8, (uint64_t)&xmmword_1ED53AE80, a1);
}

uint64_t sub_1B76B6394@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1)
    swift_once();
  return sub_1B76638C0(a2, a3, &qword_1ED53AE50);
}

unint64_t sub_1B76B63E4()
{
  unint64_t result;

  result = qword_1EF178C90;
  if (!qword_1EF178C90)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for MediaSettings.Name, &type metadata for MediaSettings.Name);
    atomic_store(result, (unint64_t *)&qword_1EF178C90);
  }
  return result;
}

unint64_t sub_1B76B642C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF178C98;
  if (!qword_1EF178C98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF178CA0);
    result = MEMORY[0x1BCCA94E8](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF178C98);
  }
  return result;
}

uint64_t sub_1B76B6478@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF1772F0, (uint64_t)&byte_1EF178920, a2);
}

uint64_t sub_1B76B64A4(unsigned __int8 *a1)
{
  return MediaSettings.denyBookstore.setter(*a1);
}

uint64_t sub_1B76B64C8@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF1772F8, (uint64_t)&byte_1EF178978, a2);
}

uint64_t sub_1B76B64F4(unsigned __int8 *a1)
{
  return MediaSettings.denyBookstoreErotica.setter(*a1);
}

uint64_t sub_1B76B6518@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF177300, (uint64_t)&byte_1EF1789D0, a2);
}

uint64_t sub_1B76B6544(unsigned __int8 *a1)
{
  return MediaSettings.denyExplicitContent.setter(*a1);
}

uint64_t sub_1B76B6568@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF177308, (uint64_t)&byte_1EF178A28, a2);
}

uint64_t sub_1B76B6594(unsigned __int8 *a1)
{
  return MediaSettings.denyiTunes.setter(*a1);
}

uint64_t sub_1B76B65B8@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF177310, (uint64_t)&byte_1EF178A80, a2);
}

uint64_t sub_1B76B65E4(unsigned __int8 *a1)
{
  return MediaSettings.denyMusicArtistActivity.setter(*a1);
}

uint64_t sub_1B76B6608@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF177318, (uint64_t)&byte_1EF178AD8, a2);
}

uint64_t sub_1B76B6634(unsigned __int8 *a1)
{
  return MediaSettings.denyMusicService.setter(*a1);
}

uint64_t sub_1B76B6658@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF177320, (uint64_t)&byte_1EF178B30, a2);
}

uint64_t sub_1B76B6684(unsigned __int8 *a1)
{
  return MediaSettings.denyMusicVideos.setter(*a1);
}

uint64_t sub_1B76B66A8@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF177328, (uint64_t)&byte_1EF178B88, a2);
}

uint64_t sub_1B76B66D4(unsigned __int8 *a1)
{
  return MediaSettings.denyPodcasts.setter(*a1);
}

uint64_t sub_1B76B66F8@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF177330, (uint64_t)&byte_1EF178BE0, a2);
}

uint64_t sub_1B76B6724(unsigned __int8 *a1)
{
  return MediaSettings.denySharedMediaLibraries.setter(*a1);
}

uint64_t sub_1B76B6748@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF177338, (uint64_t)&byte_1EF178C38, a2);
}

uint64_t sub_1B76B6774(unsigned __int8 *a1)
{
  return MediaSettings.lockTVProvider.setter(*a1);
}

uint64_t sub_1B76B6798@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B76B5E40(a1, &qword_1ED53AE78, (uint64_t)&xmmword_1ED53AD70, a2);
}

uint64_t sub_1B76B67C4(uint64_t a1)
{
  return MediaSettings.maximumMovieRating.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t sub_1B76B67F0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B76B5E40(a1, qword_1ED53AED8, (uint64_t)&xmmword_1ED53AE80, a2);
}

uint64_t sub_1B76B681C(uint64_t a1)
{
  return MediaSettings.maximumTVShowRating.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

ValueMetadata *type metadata accessor for MediaSettings()
{
  return &type metadata for MediaSettings;
}

uint64_t getEnumTagSinglePayload for MediaSettings.Name(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF5)
    goto LABEL_17;
  if (a2 + 11 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 11) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 11;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 11;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 11;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v8 = v6 - 12;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaSettings.Name(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1B76B6934 + 4 * byte_1B76DEF59[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1B76B6968 + 4 * byte_1B76DEF54[v4]))();
}

uint64_t sub_1B76B6968(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76B6970(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B76B6978);
  return result;
}

uint64_t sub_1B76B6984(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B76B698CLL);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1B76B6990(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76B6998(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaSettings.Name()
{
  return &type metadata for MediaSettings.Name;
}

uint64_t PasscodeSettings.Name.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1B76DBE70();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void *static PasscodeSettings.Name.allCases.getter()
{
  return &unk_1E6CAE290;
}

unint64_t PasscodeSettings.Name.rawValue.getter()
{
  return 0xD000000000000015;
}

uint64_t sub_1B76B6A30()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  return sub_1B76DBF78();
}

uint64_t sub_1B76B6A84()
{
  return sub_1B76DBB1C();
}

uint64_t sub_1B76B6AA0()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  return sub_1B76DBF78();
}

uint64_t sub_1B76B6AF0@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1B76DBE70();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1B76B6B40(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000015;
  a1[1] = 0x80000001B76E1AC0;
}

void sub_1B76B6B60(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6CAE328;
}

uint64_t PasscodeSettings.lockPasscode.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v0;
  v1 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  if (qword_1EF177340 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = sub_1B76584AC((uint64_t)&byte_1EF178CA8, v2, v1, v4, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1B76B6C04@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  v7 = qword_1EF177340;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_1B76584AC((uint64_t)&byte_1EF178CA8, v4, v3, v6, v5);
  swift_bridgeObjectRelease_n();
  result = swift_bridgeObjectRelease_n();
  *a2 = v8;
  return result;
}

uint64_t PasscodeSettings.lockPasscode.setter(unsigned __int8 a1)
{
  uint64_t *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v14[4];
  _BYTE v15[8];
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;

  v2 = a1;
  if (qword_1EF177340 != -1)
    swift_once();
  sub_1B765A668((uint64_t)&byte_1EF178CA8, (uint64_t)v15);
  v4 = *v1;
  v3 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (v2 == 2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = 0;
  }
  else
  {
    v8 = v2 & 1;
    v9 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = objc_msgSend(v9, sel_initWithBool_, v8);
  }
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    v10 = v16;
    v11 = v17;
    v14[0] = v4;
    v14[1] = v3;
    v14[2] = v6;
    v14[3] = v5;
    v12 = v18;
    swift_retain();
    sub_1B765ED7C(v7, v10, v11, v14, v12);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  return sub_1B76671D4((uint64_t)v15);
}

uint64_t (*PasscodeSettings.lockPasscode.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177340 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF178CA8, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B76B6EF4;
}

uint64_t sub_1B76B6EF4(uint64_t a1)
{
  return PasscodeSettings.lockPasscode.setter(*(_BYTE *)(a1 + 8));
}

uint64_t PasscodeSettings.effectiveLockPasscode.getter()
{
  if (qword_1EF177340 != -1)
    swift_once();
  return sub_1B7659CC4(&byte_1EF178CA8);
}

uint64_t sub_1B76B6F58()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF178CD8 = result;
  unk_1EF178CE0 = &off_1E6CB07B8;
  byte_1EF178CC0 = 0;
  byte_1EF178CA8 = 0;
  qword_1EF178CB0 = 0xD000000000000015;
  unk_1EF178CB8 = 0x80000001B76E1AC0;
  word_1EF178CE8 = 257;
  byte_1EF178CEA = 0;
  qword_1EF178CF0 = 0;
  byte_1EF178CF8 = 1;
  return result;
}

uint64_t static PasscodeSettings.lockPasscode.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EF177340 != -1)
    swift_once();
  return sub_1B765A668((uint64_t)&byte_1EF178CA8, a1);
}

unint64_t sub_1B76B7018()
{
  unint64_t result;

  result = qword_1EF178D00;
  if (!qword_1EF178D00)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for PasscodeSettings.Name, &type metadata for PasscodeSettings.Name);
    atomic_store(result, (unint64_t *)&qword_1EF178D00);
  }
  return result;
}

unint64_t sub_1B76B7060()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF178D08;
  if (!qword_1EF178D08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF178D10);
    result = MEMORY[0x1BCCA94E8](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF178D08);
  }
  return result;
}

uint64_t sub_1B76B70B0(unsigned __int8 *a1)
{
  return PasscodeSettings.lockPasscode.setter(*a1);
}

ValueMetadata *type metadata accessor for PasscodeSettings()
{
  return &type metadata for PasscodeSettings;
}

uint64_t storeEnumTagSinglePayload for PasscodeSettings.Name(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B76B7124 + 4 * byte_1B76DF0B0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B76B7144 + 4 * byte_1B76DF0B5[v4]))();
}

_BYTE *sub_1B76B7124(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B76B7144(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B76B714C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B76B7154(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B76B715C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B76B7164(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PasscodeSettings.Name()
{
  return &type metadata for PasscodeSettings.Name;
}

uint64_t sub_1B76B7180@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  id (*v7)(uint64_t);
  id (*v8)(uint64_t);

  if (qword_1EF177260 != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178130);
  sub_1B76BD4A0(&qword_1EF178E30, &qword_1EF178130, MEMORY[0x1E0C95F48]);
  v4 = sub_1B76DB9B4();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    result = swift_bridgeObjectRetain();
    v7 = sub_1B76B72FC;
    v8 = sub_1B76BD504;
  }
  else
  {
    swift_release();
    result = swift_release();
    a1 = 0;
    v4 = 0;
    v8 = 0;
    v5 = 0;
    v7 = 0;
  }
  *a2 = a1;
  a2[1] = v4;
  a2[2] = v8;
  a2[3] = v5;
  a2[4] = v7;
  a2[5] = 0;
  return result;
}

id sub_1B76B7298(uint64_t a1, uint64_t a2)
{
  if (qword_1EF177260 != -1)
    swift_once();
  return sub_1B7692144(a2, a1);
}

id sub_1B76B72FC(uint64_t a1)
{
  if (qword_1EF177260 != -1)
    swift_once();
  return sub_1B76923F8(a1);
}

uint64_t ManagedSettingsStore.EffectivePublisher.receive<A>(subscriber:)()
{
  _QWORD *v0;
  uint64_t result;

  if (*v0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178D18);
    sub_1B76BD4A0(qword_1EF178D20, &qword_1EF178D18, (uint64_t)&unk_1B76DF3B0);
    sub_1B76DB9C0();
    swift_release();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B76B7460()
{
  return MEMORY[0x1E0DEDD18];
}

uint64_t _s18EffectivePublisherVwxx(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t _s18EffectivePublisherVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  if (*(_QWORD *)a2)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    v3 = *(_QWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 40) = v3;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    v4 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v4;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  return a1;
}

_QWORD *_s18EffectivePublisherVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v4 = *a1;
  v5 = *a2;
  if (v4)
  {
    if (v5)
    {
      *a1 = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[1] = a2[1];
      swift_retain();
      swift_release();
      v6 = a2[3];
      a1[2] = a2[2];
      a1[3] = v6;
      swift_retain();
      swift_release();
      v7 = a2[5];
      a1[4] = a2[4];
      a1[5] = v7;
      swift_retain();
      swift_release();
    }
    else
    {
      sub_1B765DE88((uint64_t)a1, &qword_1EF178D18);
      v11 = *((_OWORD *)a2 + 1);
      v10 = *((_OWORD *)a2 + 2);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v11;
      *((_OWORD *)a1 + 2) = v10;
    }
  }
  else if (v5)
  {
    *a1 = v5;
    a1[1] = a2[1];
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    v12 = *(_OWORD *)a2;
    v13 = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    *((_OWORD *)a1 + 2) = v13;
    *(_OWORD *)a1 = v12;
  }
  return a1;
}

uint64_t _s18EffectivePublisherVwta(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  if (!*(_QWORD *)a1)
    goto LABEL_5;
  if (!*(_QWORD *)a2)
  {
    sub_1B765DE88(a1, &qword_1EF178D18);
LABEL_5:
    v4 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v4;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  return a1;
}

uint64_t _s18EffectivePublisherVwet(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 48))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s18EffectivePublisherVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ManagedSettingsStore.EffectivePublisher()
{
  return &type metadata for ManagedSettingsStore.EffectivePublisher;
}

uint64_t sub_1B76B77AC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B76DBD20();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1B76B786C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = MEMORY[0x1E0C80A78](a1, a2);
  if (*(_QWORD *)(*(_QWORD *)v2 + 16))
    _s13PublisherBaseV7ConduitCMa();
  return result;
}

_QWORD *sub_1B76B79C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_allocObject();
  return sub_1B76B7A50(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1B76B7A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B76B786C(a1, a4);
}

_QWORD *sub_1B76B7A50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v27 = a5;
  v28 = a6;
  v25 = a3;
  v26 = a4;
  v24 = a2;
  v8 = *v6;
  v9 = *(_QWORD *)(*v6 + 88);
  v10 = sub_1B76DBD20();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v12);
  v14 = (char *)&v24 - v13;
  v15 = (char *)v6 + *(_QWORD *)(v8 + 136);
  v16 = *(_QWORD *)(v9 - 8);
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  v17(v15, 1, 1, v9);
  v18 = (char *)v6 + *(_QWORD *)(*v6 + 144);
  *(_OWORD *)v18 = 0u;
  *((_OWORD *)v18 + 1) = 0u;
  *((_QWORD *)v18 + 4) = 0;
  v19 = *(_QWORD *)(*v6 + 152);
  *(_QWORD *)((char *)v6 + v19) = sub_1B76DB918();
  *((_BYTE *)v6 + *(_QWORD *)(*v6 + 160)) = 1;
  v20 = *(_QWORD *)(*v6 + 168);
  *(_QWORD *)((char *)v6 + v20) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3740]), sel_init);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(v14, a1, v9);
  v17(v14, 0, 1, v9);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v15, v14, v10);
  swift_endAccess();
  v21 = v25;
  v6[2] = v24;
  v6[3] = v21;
  v22 = v27;
  v6[4] = v26;
  v6[5] = v22;
  v6[6] = v28;
  return v6;
}

uint64_t sub_1B76B7BDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1B76B7C74();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 136);
  v2 = sub_1B76DBD20();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1B765DE88(v0 + *(_QWORD *)(*(_QWORD *)v0 + 144), &qword_1EF178E28);

  return v0;
}

uint64_t sub_1B76B7C74()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, char *, uint64_t);
  char *v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t result;
  void (*v30)(char *);
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  _BYTE v40[40];

  v1 = *v0;
  v2 = sub_1B76DB8D0();
  v36 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v3);
  v34 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v1 + 88);
  v6 = sub_1B76DBD20();
  v7 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x1E0C80A78](v6, v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9, v12);
  v14 = (char *)&v32 - v13;
  v35 = v1;
  v15 = *(_QWORD *)(v1 + 168);
  objc_msgSend(*(id *)((char *)v0 + v15), sel_lock);
  v16 = *(_QWORD *)(*v0 + 160);
  if (*((_BYTE *)v0 + v16) != 1)
    return (uint64_t)objc_msgSend(*(id *)((char *)v0 + v15), sel_unlock);
  v17 = (char *)v0 + *(_QWORD *)(*v0 + 136);
  swift_beginAccess();
  v18 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v33 = v17;
  v18(v14, v17, v6);
  v32 = *(_QWORD *)(v5 - 8);
  v19 = v11;
  v20 = v15;
  v21 = v2;
  v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48))(v14, 1, v5);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
  v23 = v22 == 1;
  v24 = v21;
  v15 = v20;
  if (v23)
    return (uint64_t)objc_msgSend(*(id *)((char *)v0 + v15), sel_unlock);
  v25 = (uint64_t)v0 + *(_QWORD *)(*v0 + 144);
  swift_beginAccess();
  sub_1B76B94BC(v25, (uint64_t)v40);
  *((_BYTE *)v0 + v16) = 0;
  v39 = 0;
  v37 = 0u;
  v38 = 0u;
  swift_beginAccess();
  sub_1B76B9504((uint64_t)&v37, v25);
  swift_endAccess();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v19, 1, 1, v5);
  v26 = v33;
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v26, v19, v6);
  swift_endAccess();
  v27 = (_QWORD *)((char *)v0 + *(_QWORD *)(*v0 + 152));
  swift_beginAccess();
  v28 = *v27;
  sub_1B76DB924();
  result = sub_1B76DB90C();
  if ((result & 1) != 0)
  {
    *v27 = sub_1B76DB918();
    objc_msgSend(*(id *)((char *)v0 + v20), sel_unlock);
  }
  else
  {
    if (v28 < 0)
    {
      __break(1u);
      return result;
    }
    *v27 = sub_1B76DB918();
    objc_msgSend(*(id *)((char *)v0 + v20), sel_unlock);
    if (!v28)
      goto LABEL_11;
  }
  v30 = (void (*)(char *))v0[5];
  MEMORY[0x1BCCA94E8](&unk_1B76DF2F8, v35);
  v31 = v34;
  sub_1B76DB8C4();
  v30(v31);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v31, v24);
LABEL_11:
  sub_1B76B94BC((uint64_t)v40, (uint64_t)&v37);
  if (*((_QWORD *)&v38 + 1))
  {
    __swift_project_boxed_opaque_existential_1(&v37, *((uint64_t *)&v38 + 1));
    sub_1B76DB900();
    sub_1B765DE88((uint64_t)v40, &qword_1EF178E28);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v37);
  }
  else
  {
    sub_1B765DE88((uint64_t)v40, &qword_1EF178E28);
    return sub_1B765DE88((uint64_t)&v37, &qword_1EF178E28);
  }
}

uint64_t sub_1B76B801C()
{
  sub_1B76B7BDC();
  return swift_deallocClassInstance();
}

void _s13PublisherBaseV7ConduitCMa()
{
  JUMPOUT(0x1BCCA947CLL);
}

uint64_t sub_1B76B8048()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1B76B8050()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1B76B80DC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  v3 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_DWORD *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64) + 7;
  v7 = *(_DWORD *)(v4 + 80) & 0x100000;
  v8 = *a2;
  *a1 = *a2;
  if (v5 > 7
    || v7 != 0
    || ((((v6 + ((v5 + 8) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v11 = (uint64_t *)(v8 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
  }
  else
  {
    v11 = a1;
    v12 = ((unint64_t)a1 + v5 + 8) & ~v5;
    v13 = ((unint64_t)a2 + v5 + 8) & ~v5;
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    swift_bridgeObjectRetain();
    v14(v12, v13, v3);
    v15 = (_QWORD *)((v6 + v12) & 0xFFFFFFFFFFFFFFF8);
    v16 = (_QWORD *)((v6 + v13) & 0xFFFFFFFFFFFFFFF8);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
    v19 = (_QWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    swift_retain();
  }
  swift_retain();
  return v11;
}

uint64_t sub_1B76B81F0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1
                                                                                            + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)
                                                                                            + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
  swift_release();
  return swift_release();
}

_QWORD *sub_1B76B8268(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  swift_bridgeObjectRetain();
  v9(v7, v8, v4);
  v10 = *(_QWORD *)(v5 + 64) + 7;
  v11 = (_QWORD *)((v10 + v7) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)((v10 + v8) & 0xFFFFFFFFFFFFFFF8);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  v14 = (_QWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_1B76B831C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 8) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 8) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v8, v9);
  v10 = *(_QWORD *)(v6 + 64) + 7;
  v11 = (_QWORD *)((v10 + v8) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)((v10 + v9) & 0xFFFFFFFFFFFFFFF8);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  swift_retain();
  swift_release();
  v14 = (_QWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *sub_1B76B83EC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = ((unint64_t)a1 + v5 + 8) & ~v5;
  v7 = ((unint64_t)a2 + v5 + 8) & ~v5;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v6, v7);
  v8 = *(_QWORD *)(v4 + 64) + 7;
  v9 = (_OWORD *)((v8 + v6) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_OWORD *)((v8 + v7) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  *(_OWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

_QWORD *sub_1B76B847C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  unint64_t v13;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 8) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 8) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v6 + 40))(v8, v9);
  v10 = *(_QWORD *)(v6 + 64) + 7;
  v11 = (_OWORD *)((v10 + v8) & 0xFFFFFFFFFFFFFFF8);
  v12 = v10 + v9;
  v13 = (v12 & 0xFFFFFFFFFFFFFFF8) + 23;
  *v11 = *(_OWORD *)(v12 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  *(_OWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(v13 & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1B76B8530(uint64_t *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  if (v6 >= a2)
  {
    if ((v5 & 0x80000000) != 0)
    {
      return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v7 + 8) & ~v7);
    }
    else
    {
      v12 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
  }
  else
  {
    if (((((((*(_QWORD *)(v4 + 64) + ((v7 + 8) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1B76B85C4 + 4 * byte_1B76DF1D0[v10]))();
  }
}

void sub_1B76B8644(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 >= a3)
  {
    v10 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((*(_DWORD *)(v5 + 64) + (((_DWORD)v7 + 8) & ~(_DWORD)v7) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v8 = a3 - v6 + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X13 }
  }
  if (((((*(_DWORD *)(v5 + 64) + (((_DWORD)v7 + 8) & ~(_DWORD)v7) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v11 = ~v6 + a2;
    bzero(a1, ((((*(_QWORD *)(v5 + 64) + ((v7 + 8) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v11;
  }
  __asm { BR              X10 }
}

void sub_1B76B8754()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1B76B87BCLL);
}

void sub_1B76B875C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1B76B8764);
  JUMPOUT(0x1B76B87BCLL);
}

void sub_1B76B8774()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1B76B87BCLL);
}

void sub_1B76B877C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1B76B87BCLL);
}

void sub_1B76B8784(uint64_t a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_WORD *)(v3 + v4) = 0;
  if (a2)
  {
    if ((a3 & 0x80000000) == 0)
    {
      if ((a2 & 0x80000000) == 0)
        JUMPOUT(0x1B76B87B8);
      JUMPOUT(0x1B76B87B4);
    }
    JUMPOUT(0x1B76B8790);
  }
  JUMPOUT(0x1B76B87BCLL);
}

uint64_t _s13PublisherBaseVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s13PublisherBaseVMn);
}

uint64_t sub_1B76B87E0(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char *v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 88);
  v5 = sub_1B76DBD20();
  v6 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x1E0C80A78](v5, v7);
  v10 = (char *)&v22 - v9;
  v11 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v8, v12);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v3 + 168);
  objc_msgSend(*(id *)((char *)v1 + v15), sel_lock);
  v16 = *v1;
  if (*((_BYTE *)v1 + *(_QWORD *)(*v1 + 160)) == 1)
  {
    v23 = v14;
    v17 = (uint64_t)v1 + *(_QWORD *)(v16 + 136);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v10, v17, v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v4) == 1)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
    }
    else
    {
      v18 = v23;
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v23, v10, v4);
      v19 = (uint64_t)v1 + *(_QWORD *)(*v1 + 144);
      swift_beginAccess();
      sub_1B76B94BC(v19, (uint64_t)v24);
      v20 = v25;
      sub_1B765DE88((uint64_t)v24, &qword_1EF178E28);
      if (!v20)
      {
        sub_1B7672D50((uint64_t)a1, (uint64_t)v24);
        swift_beginAccess();
        sub_1B76B9504((uint64_t)v24, v19);
        swift_endAccess();
        objc_msgSend(*(id *)((char *)v1 + v15), sel_unlock);
        v25 = v3;
        v26 = MEMORY[0x1BCCA94E8](&unk_1B76DF320, v3);
        v24[0] = v1;
        swift_retain();
        sub_1B76DB8E8();
        (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v4);
        return __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
      }
      (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v4);
    }
  }
  objc_msgSend(*(id *)((char *)v1 + v15), sel_unlock);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  return sub_1B76DB900();
}

uint64_t sub_1B76B8A50(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  char *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  char *v37;
  char v38;
  uint64_t v39;
  void (*v40)(char *);
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v2 = v1;
  v46 = a1;
  v3 = *v1;
  v4 = sub_1B76DB8D0();
  v44 = *(_QWORD *)(v4 - 8);
  v45 = v4;
  MEMORY[0x1E0C80A78](v4, v5);
  v43 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v3 + 88);
  v8 = sub_1B76DBD20();
  v9 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x1E0C80A78](v8, v10);
  v13 = (char *)&v42 - v12;
  v14 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v11, v15);
  v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(v3 + 168);
  objc_msgSend(*(id *)((char *)v2 + v18), sel_lock);
  v19 = *v2;
  v20 = *(_QWORD *)(*v2 + 160);
  if (*((_BYTE *)v2 + v20) != 1)
    goto LABEL_4;
  v42 = v17;
  v21 = (char *)v2 + *(_QWORD *)(v19 + 136);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v13, v21, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);
LABEL_4:
    objc_msgSend(*(id *)((char *)v2 + v18), sel_unlock);
    return sub_1B76DB918();
  }
  v24 = v14;
  v25 = v42;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v42, v13, v7);
  v26 = (_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 152));
  swift_beginAccess();
  v27 = *v26;
  sub_1B76DB924();
  result = sub_1B76DB90C();
  if ((result & 1) == 0)
  {
    if (v27 < 0)
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v27)
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v25, v7);
      goto LABEL_4;
    }
  }
  v28 = v2[2];
  v29 = v46;
  swift_bridgeObjectRetain();
  v30 = sub_1B76B954C(v28, v29);
  if (!*(_QWORD *)(v30 + 16))
  {
    swift_release();
    objc_msgSend(*(id *)((char *)v2 + v18), sel_unlock);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v7);
    return 1;
  }
  swift_beginAccess();
  v31 = *v26;
  sub_1B76DB924();
  if ((sub_1B76DB90C() & 1) == 0)
  {
    sub_1B76DB924();
    result = sub_1B76DB90C();
    if ((result & 1) != 0)
    {
      v32 = sub_1B76DB924();
    }
    else
    {
      if (v31 < 0)
      {
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
      if (!v31)
      {
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
      v32 = v31 - 1;
    }
    *v26 = v32;
  }
  v33 = v24;
  swift_endAccess();
  sub_1B76DB918();
  v34 = sub_1B76DB90C();
  objc_msgSend(*(id *)((char *)v2 + v18), sel_unlock);
  v47 = v30;
  v22 = sub_1B76DB8F4();
  swift_release();
  sub_1B76DB924();
  result = sub_1B76DB90C();
  if ((result & 1) == 0)
  {
    if (v22 < 0)
    {
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    if (!v22)
    {
      if ((v34 & 1) != 0)
      {
        v40 = (void (*)(char *))v2[5];
        MEMORY[0x1BCCA94E8](&unk_1B76DF2F8, v3);
        v41 = v43;
        sub_1B76DB8C4();
        v40(v41);
        (*(void (**)(char *, uint64_t))(v44 + 8))(v41, v45);
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v42, v7);
      return 0;
    }
  }
  objc_msgSend(*(id *)((char *)v2 + v18), sel_lock);
  if (*((_BYTE *)v2 + v20) != 1)
  {
    objc_msgSend(*(id *)((char *)v2 + v18), sel_unlock);
    v22 = sub_1B76DB918();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v42, v7);
    return v22;
  }
  swift_beginAccess();
  v35 = *v26;
  sub_1B76DB924();
  v36 = sub_1B76DB90C();
  v37 = v42;
  if ((v36 & 1) != 0)
  {
LABEL_35:
    swift_endAccess();
    objc_msgSend(*(id *)((char *)v2 + v18), sel_unlock);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v37, v7);
    return v22;
  }
  sub_1B76DB924();
  v38 = sub_1B76DB90C();
  v39 = sub_1B76DB924();
  if ((v38 & 1) != 0)
  {
LABEL_25:
    *v26 = v39;
    goto LABEL_35;
  }
  result = sub_1B76DB90C();
  if ((result & 1) != 0)
  {
LABEL_34:
    *v26 = sub_1B76DB924();
    goto LABEL_35;
  }
  if (((v35 | v22) & 0x8000000000000000) == 0)
  {
    v39 = v35 + v22;
    if (!__OFADD__(v35, v22))
    {
      if ((v39 & 0x8000000000000000) == 0)
        goto LABEL_25;
      __break(1u);
      goto LABEL_39;
    }
    goto LABEL_34;
  }
LABEL_43:
  __break(1u);
  return result;
}

id sub_1B76B8EE0(int a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v19;
  char v20;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 88);
  v5 = sub_1B76DBD20();
  v6 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x1E0C80A78](v5, v7);
  v10 = (char *)&v19 - v9;
  v11 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v8, v12);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v3 + 168);
  objc_msgSend(*(id *)((char *)v1 + v15), sel_lock);
  v16 = *v1;
  if (*((_BYTE *)v1 + *(_QWORD *)(*v1 + 160)) != 1)
    return objc_msgSend(*(id *)((char *)v1 + v15), sel_unlock);
  v19 = a1;
  v17 = (uint64_t)v1 + *(_QWORD *)(v16 + 136);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v10, v17, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
    return objc_msgSend(*(id *)((char *)v1 + v15), sel_unlock);
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v10, v4);
  objc_msgSend(*(id *)((char *)v1 + v15), sel_unlock);
  sub_1B76B7C74();
  v20 = v19 & 1;
  sub_1B76DB8DC();
  return (id)(*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v4);
}

uint64_t sub_1B76B9084(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t *v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  void (*v29)(char *);
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[3];
  uint64_t v33;
  _BYTE v34[40];

  v2 = v1;
  v4 = *v2;
  v5 = sub_1B76DB8D0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v4 + 88);
  v11 = sub_1B76DBD20();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v13);
  v15 = (char *)&v30 - v14;
  sub_1B76DB924();
  result = sub_1B76DB90C();
  if ((result & 1) == 0)
  {
    if (a1 < 0)
    {
      __break(1u);
      goto LABEL_25;
    }
    if (!a1)
      return result;
  }
  v30 = v5;
  v17 = *(_QWORD *)(*v2 + 168);
  objc_msgSend(*(id *)((char *)v2 + v17), sel_lock, v30);
  if (*((_BYTE *)v2 + *(_QWORD *)(*v2 + 160)) != 1)
    return (uint64_t)objc_msgSend(*(id *)((char *)v2 + v17), sel_unlock);
  v18 = *(_QWORD *)(*v2 + 136);
  v31 = v6;
  v19 = (char *)v2 + v18;
  swift_beginAccess();
  v20 = v19;
  v21 = v31;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v20, v11);
  v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v15, 1, v10);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  if (v22 == 1)
    return (uint64_t)objc_msgSend(*(id *)((char *)v2 + v17), sel_unlock);
  v23 = (uint64_t)v2 + *(_QWORD *)(*v2 + 144);
  swift_beginAccess();
  sub_1B76B94BC(v23, (uint64_t)v34);
  v24 = (_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 152));
  swift_beginAccess();
  sub_1B76DB918();
  v25 = sub_1B76DB90C();
  swift_beginAccess();
  v26 = *v24;
  sub_1B76DB924();
  if ((sub_1B76DB90C() & 1) == 0)
  {
    sub_1B76DB924();
    v27 = sub_1B76DB90C();
    v28 = sub_1B76DB924();
    if ((v27 & 1) != 0)
    {
      v21 = v31;
LABEL_16:
      *v24 = v28;
      goto LABEL_17;
    }
    result = sub_1B76DB90C();
    v21 = v31;
    if ((result & 1) != 0)
      goto LABEL_14;
    if (((v26 | a1) & 0x8000000000000000) == 0)
    {
      v28 = v26 + a1;
      if (!__OFADD__(v26, a1))
      {
        if ((v28 & 0x8000000000000000) == 0)
          goto LABEL_16;
LABEL_26:
        __break(1u);
        return result;
      }
LABEL_14:
      v28 = sub_1B76DB924();
      goto LABEL_16;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
LABEL_17:
  swift_endAccess();
  objc_msgSend(*(id *)((char *)v2 + v17), sel_unlock);
  sub_1B76B94BC((uint64_t)v34, (uint64_t)v32);
  if (!v33)
  {
    sub_1B765DE88((uint64_t)v32, &qword_1EF178E28);
    if ((v25 & 1) == 0)
      return sub_1B765DE88((uint64_t)v34, &qword_1EF178E28);
    goto LABEL_19;
  }
  __swift_project_boxed_opaque_existential_1(v32, v33);
  sub_1B76DB930();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v32);
  if ((v25 & 1) != 0)
  {
LABEL_19:
    v29 = (void (*)(char *))v2[3];
    MEMORY[0x1BCCA94E8](&unk_1B76DF2F8, v4);
    sub_1B76DB8C4();
    v29(v9);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v30);
  }
  return sub_1B765DE88((uint64_t)v34, &qword_1EF178E28);
}

uint64_t sub_1B76B93D4(_QWORD *a1)
{
  return sub_1B76B87E0(a1);
}

uint64_t sub_1B76B93F4(uint64_t *a1)
{
  return sub_1B76B8A50(*a1);
}

id sub_1B76B9418(unsigned __int8 *a1)
{
  return sub_1B76B8EE0(*a1);
}

uint64_t sub_1B76B943C(uint64_t a1)
{
  return sub_1B76B9084(a1);
}

uint64_t sub_1B76B945C()
{
  return sub_1B76DB8C4();
}

uint64_t sub_1B76B947C()
{
  return sub_1B76B7C74();
}

void sub_1B76B949C()
{
  JUMPOUT(0x1BCCA94E8);
}

void sub_1B76B94AC()
{
  JUMPOUT(0x1BCCA94E8);
}

uint64_t sub_1B76B94BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178E28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B76B9504(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178E28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B76B954C(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  size_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v10[2];

  v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E0C80C00];
  v4 = *(_BYTE *)(a2 + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe, a2);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    v7 = sub_1B76BB424((_QWORD *)((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, a2, v3);
    swift_release();
  }
  else
  {
    v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    v7 = sub_1B76BB424((unint64_t *)v8, v5, a2, v3);
    swift_release();
    MEMORY[0x1BCCA9590](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_1B76B96CC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  BOOL v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  int64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v56;
  uint64_t v57;
  int64_t v58;
  uint64_t v60;
  int64_t v61;
  int64_t v62;
  size_t __n;
  int64_t v64;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) >= *(_QWORD *)(a3 + 16))
    goto LABEL_49;
  v56 = 0;
  v6 = 0;
  v57 = a4 + 56;
  v7 = 1 << *(_BYTE *)(a4 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  v58 = (unint64_t)(v7 + 63) >> 6;
  v70 = a3 + 56;
LABEL_7:
  while (2)
  {
    if (v9)
    {
      v60 = (v9 - 1) & v9;
      v10 = __clz(__rbit64(v9)) | (v6 << 6);
LABEL_20:
      v14 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 32 * v10);
      v15 = *v14;
      v16 = v14[1];
      v17 = v14[2];
      v18 = v14[3];
      sub_1B76DBF54();
      sub_1B76DBF6C();
      if (v16)
      {
        swift_bridgeObjectRetain();
        sub_1B765DF08(v17, v18);
        swift_bridgeObjectRetain();
        sub_1B76DBB1C();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1B765DF08(v17, v18);
      }
      v61 = v6;
      sub_1B76DBF6C();
      if (v18 >> 60 != 15)
      {
        sub_1B765DDFC(v17, v18);
        sub_1B76DB834();
        sub_1B765DF1C(v17, v18);
      }
      v19 = sub_1B76DBF78();
      v5 = a3;
      v20 = -1 << *(_BYTE *)(a3 + 32);
      v21 = v19 & ~v20;
      if (((*(_QWORD *)(v70 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        sub_1B765DF1C(v17, v18);
        v4 = a4;
        v9 = v60;
        v6 = v61;
        continue;
      }
      v68 = ~v20;
      while (1)
      {
        v22 = (_QWORD *)(*(_QWORD *)(a3 + 48) + 32 * v21);
        v24 = v22[1];
        v23 = v22[2];
        v25 = v22[3];
        if (v24)
        {
          if (!v16)
            goto LABEL_29;
          v26 = *v22 == v15 && v24 == v16;
          if (!v26 && (sub_1B76DBED0() & 1) == 0)
            goto LABEL_29;
        }
        else if (v16)
        {
          goto LABEL_29;
        }
        if (v25 >> 60 == 15)
        {
          if (v18 >> 60 == 15)
          {
            swift_bridgeObjectRelease();
            sub_1B765DF1C(v17, v18);
            *(unint64_t *)((char *)a1 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
            v11 = __OFADD__(v56++, 1);
            v4 = a4;
            v9 = v60;
            v6 = v61;
            if (!v11)
              goto LABEL_7;
            __break(1u);
LABEL_49:
            v56 = 0;
            v27 = 0;
            __n = v5 + 56;
            v28 = 1 << *(_BYTE *)(v5 + 32);
            if (v28 < 64)
              v29 = ~(-1 << v28);
            else
              v29 = -1;
            v30 = v29 & *(_QWORD *)(v5 + 56);
            v64 = (unint64_t)(v28 + 63) >> 6;
            v69 = v4 + 56;
            while (2)
            {
              while (2)
              {
                if (v30)
                {
                  v71 = (v30 - 1) & v30;
                  v34 = __clz(__rbit64(v30)) | (v27 << 6);
                }
                else
                {
                  v11 = __OFADD__(v27++, 1);
                  if (v11)
                  {
                    __break(1u);
                    goto LABEL_101;
                  }
                  if (v27 >= v64)
                    goto LABEL_99;
                  v35 = *(_QWORD *)(__n + 8 * v27);
                  if (!v35)
                  {
                    v36 = v27 + 1;
                    if (v27 + 1 >= v64)
                      goto LABEL_99;
                    v35 = *(_QWORD *)(__n + 8 * v36);
                    if (!v35)
                    {
                      v36 = v27 + 2;
                      if (v27 + 2 >= v64)
                        goto LABEL_99;
                      v35 = *(_QWORD *)(__n + 8 * v36);
                      if (!v35)
                      {
                        v36 = v27 + 3;
                        if (v27 + 3 >= v64)
                          goto LABEL_99;
                        v35 = *(_QWORD *)(__n + 8 * v36);
                        if (!v35)
                        {
                          while (1)
                          {
                            v27 = v36 + 1;
                            if (__OFADD__(v36, 1))
                              break;
                            if (v27 >= v64)
                              goto LABEL_99;
                            v35 = *(_QWORD *)(__n + 8 * v27);
                            ++v36;
                            if (v35)
                              goto LABEL_69;
                          }
                          __break(1u);
LABEL_103:
                          __break(1u);
                          JUMPOUT(0x1B76BB2BCLL);
                        }
                      }
                    }
                    v27 = v36;
                  }
LABEL_69:
                  v71 = (v35 - 1) & v35;
                  v34 = __clz(__rbit64(v35)) + (v27 << 6);
                }
                v37 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 32 * v34);
                v38 = *v37;
                v39 = v37[1];
                v40 = v37[2];
                v41 = v37[3];
                sub_1B76DBF54();
                if (v39)
                {
                  sub_1B76DBF6C();
                  swift_bridgeObjectRetain();
                  sub_1B765DF08(v40, v41);
                  swift_bridgeObjectRetain();
                  v42 = v38;
                  sub_1B76DBB1C();
                  swift_bridgeObjectRelease();
                }
                else
                {
                  v42 = v38;
                  sub_1B76DBF6C();
                  sub_1B765DF08(v40, v41);
                }
                v67 = v34;
                sub_1B76DBF6C();
                if (v41 >> 60 != 15)
                {
                  sub_1B765DDFC(v40, v41);
                  sub_1B76DB834();
                  sub_1B765DF1C(v40, v41);
                }
                v31 = sub_1B76DBF78();
                v32 = -1 << *(_BYTE *)(v4 + 32);
                v33 = v31 & ~v32;
                if (((*(_QWORD *)(v69 + ((v33 >> 3) & 0xFFFFFFFFFFFFF8)) >> v33) & 1) == 0)
                {
                  swift_bridgeObjectRelease();
                  sub_1B765DF1C(v40, v41);
                  v5 = a3;
                  goto LABEL_56;
                }
                v66 = ~v32;
                v5 = a3;
                v43 = v42;
                v62 = v27;
LABEL_83:
                v45 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 32 * v33);
                v46 = v45[1];
                v47 = v45[2];
                v48 = v45[3];
                if (v46)
                {
                  if (v39)
                  {
                    v49 = *v45 == v43 && v46 == v39;
                    if (v49
                      || (v50 = v43, v51 = v45[2],
                                     v52 = sub_1B76DBED0(),
                                     v47 = v51,
                                     v27 = v62,
                                     v43 = v50,
                                     (v52 & 1) != 0))
                    {
LABEL_92:
                      if (v48 >> 60 == 15)
                      {
                        if (v41 >> 60 == 15)
                        {
                          swift_bridgeObjectRelease();
                          sub_1B765DF1C(v40, v41);
                          *(unint64_t *)((char *)a1 + ((v67 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v67;
                          v11 = __OFADD__(v56++, 1);
                          v4 = a4;
                          v30 = v71;
                          if (!v11)
                            continue;
                          __break(1u);
                          goto LABEL_99;
                        }
                      }
                      else if (v41 >> 60 != 15)
                      {
                        __asm { BR              X8 }
                      }
                      v44 = v43;
                      sub_1B765DF08(v40, v41);
                      sub_1B765DF08(v47, v48);
                      v27 = v62;
                      sub_1B765DF1C(v47, v48);
                      sub_1B765DF1C(v40, v41);
                      v43 = v44;
                    }
                  }
                }
                else if (!v39)
                {
                  goto LABEL_92;
                }
                break;
              }
              v33 = (v33 + 1) & v66;
              v4 = a4;
              if (((*(_QWORD *)(v69 + ((v33 >> 3) & 0xFFFFFFFFFFFFF8)) >> v33) & 1) == 0)
              {
                swift_bridgeObjectRelease();
                sub_1B765DF1C(v40, v41);
LABEL_56:
                v30 = v71;
                continue;
              }
              goto LABEL_83;
            }
          }
        }
        else if (v18 >> 60 != 15)
        {
          __asm { BR              X8 }
        }
        sub_1B765DF08(v17, v18);
        sub_1B765DF08(v23, v25);
        sub_1B765DF1C(v23, v25);
        sub_1B765DF1C(v17, v18);
LABEL_29:
        v21 = (v21 + 1) & v68;
        if (((*(_QWORD *)(v70 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          goto LABEL_6;
      }
    }
    break;
  }
  v11 = __OFADD__(v6++, 1);
  if (v11)
  {
LABEL_101:
    __break(1u);
    JUMPOUT(0x1B76BB2ACLL);
  }
  if (v6 >= v58)
    goto LABEL_99;
  v12 = *(_QWORD *)(v57 + 8 * v6);
  if (v12)
  {
LABEL_19:
    v60 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v6 << 6);
    goto LABEL_20;
  }
  v13 = v6 + 1;
  if (v6 + 1 >= v58)
    goto LABEL_99;
  v12 = *(_QWORD *)(v57 + 8 * v13);
  if (v12)
    goto LABEL_18;
  v13 = v6 + 2;
  if (v6 + 2 >= v58)
    goto LABEL_99;
  v12 = *(_QWORD *)(v57 + 8 * v13);
  if (v12)
    goto LABEL_18;
  v13 = v6 + 3;
  if (v6 + 3 >= v58)
    goto LABEL_99;
  v12 = *(_QWORD *)(v57 + 8 * v13);
  if (v12)
  {
LABEL_18:
    v6 = v13;
    goto LABEL_19;
  }
  while (1)
  {
    v6 = v13 + 1;
    if (__OFADD__(v13, 1))
      goto LABEL_103;
    if (v6 >= v58)
      break;
    v12 = *(_QWORD *)(v57 + 8 * v6);
    ++v13;
    if (v12)
      goto LABEL_19;
  }
LABEL_99:
  swift_retain();
  return sub_1B76BCEE4(a1, a2, v56, v5);
}

uint64_t sub_1B76BB424(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v23;
  int64_t v25;

  if (*(_QWORD *)(a4 + 16) >= *(_QWORD *)(a3 + 16))
  {
    v13 = *(_QWORD *)(a3 + 56);
    v14 = 1 << *(_BYTE *)(a3 + 32);
    v15 = -1;
    if (v14 < 64)
      v15 = ~(-1 << v14);
    v23 = (unint64_t)(v14 + 63) >> 6;
    if ((v15 & v13) != 0)
    {
      v16 = __clz(__rbit64(v15 & v13));
    }
    else
    {
      if ((unint64_t)(v14 + 63) >> 6 <= 1)
        goto LABEL_38;
      v17 = *(_QWORD *)(a3 + 64);
      v18 = 1;
      if (!v17)
      {
        v18 = 2;
        if ((unint64_t)(v14 + 63) >> 6 <= 2)
          goto LABEL_38;
        v17 = *(_QWORD *)(a3 + 72);
        if (!v17)
        {
          v18 = 3;
          if ((unint64_t)(v14 + 63) >> 6 <= 3)
            goto LABEL_38;
          v17 = *(_QWORD *)(a3 + 80);
          if (!v17)
          {
            v19 = 4;
            if (v23 <= 4)
              goto LABEL_38;
            v17 = *(_QWORD *)(a3 + 88);
            if (!v17)
            {
              while (1)
              {
                v18 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_40;
                if (v18 >= v23)
                  goto LABEL_38;
                v17 = *(_QWORD *)(a3 + 56 + 8 * v18);
                ++v19;
                if (v17)
                  goto LABEL_36;
              }
            }
            v18 = 4;
          }
        }
      }
LABEL_36:
      v16 = __clz(__rbit64(v17)) + (v18 << 6);
    }
    v20 = *(unsigned __int8 *)(*(_QWORD *)(a3 + 48) + v16);
    sub_1B76DBF54();
    __asm { BR              X8 }
  }
  v5 = *(_QWORD *)(a4 + 56);
  v6 = 1 << *(_BYTE *)(a4 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v25 = (unint64_t)(v6 + 63) >> 6;
  if ((v7 & v5) != 0)
  {
    v8 = __clz(__rbit64(v7 & v5));
    goto LABEL_19;
  }
  if ((unint64_t)(v6 + 63) >> 6 > 1)
  {
    v9 = *(_QWORD *)(a4 + 64);
    v10 = 1;
    if (v9)
      goto LABEL_18;
    v10 = 2;
    if ((unint64_t)(v6 + 63) >> 6 <= 2)
      goto LABEL_38;
    v9 = *(_QWORD *)(a4 + 72);
    if (v9)
      goto LABEL_18;
    v10 = 3;
    if ((unint64_t)(v6 + 63) >> 6 <= 3)
      goto LABEL_38;
    v9 = *(_QWORD *)(a4 + 80);
    if (v9)
    {
LABEL_18:
      v8 = __clz(__rbit64(v9)) + (v10 << 6);
LABEL_19:
      v12 = *(unsigned __int8 *)(*(_QWORD *)(a4 + 48) + v8);
      sub_1B76DBF54();
      __asm { BR              X8 }
    }
    v11 = 4;
    if (v25 > 4)
    {
      v9 = *(_QWORD *)(a4 + 88);
      if (v9)
      {
        v10 = 4;
        goto LABEL_18;
      }
      while (1)
      {
        v10 = v11 + 1;
        if (__OFADD__(v11, 1))
          break;
        if (v10 >= v25)
          goto LABEL_38;
        v9 = *(_QWORD *)(a4 + 56 + 8 * v10);
        ++v11;
        if (v9)
          goto LABEL_18;
      }
      __break(1u);
LABEL_40:
      __break(1u);
      JUMPOUT(0x1B76BCC2CLL);
    }
  }
LABEL_38:
  swift_retain();
  return sub_1B76BD218(a1, a2, 0, a3);
}

uint64_t sub_1B76BCEE4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v32;
  uint64_t v34;

  v4 = a4;
  if (!a3)
  {
    v8 = MEMORY[0x1E0DEE9E8];
LABEL_41:
    swift_release();
    return v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178058);
  result = sub_1B76DBDA4();
  v8 = result;
  v32 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  v34 = v4;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_44;
    if (v14 >= v32)
      goto LABEL_41;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v32)
        goto LABEL_41;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v32)
          goto LABEL_41;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 32 * v13);
    v19 = *v17;
    v18 = v17[1];
    v21 = v17[2];
    v20 = v17[3];
    sub_1B76DBF54();
    sub_1B76DBF6C();
    if (v18)
    {
      swift_bridgeObjectRetain();
      sub_1B765DF08(v21, v20);
      swift_bridgeObjectRetain();
      sub_1B76DBB1C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B765DF08(v21, v20);
    }
    sub_1B76DBF6C();
    if (v20 >> 60 != 15)
    {
      sub_1B765DDFC(v21, v20);
      sub_1B76DB834();
      sub_1B765DF1C(v21, v20);
    }
    result = sub_1B76DBF78();
    v22 = -1 << *(_BYTE *)(v8 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6))) != 0)
    {
      v25 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v28 = v24 == v27;
        if (v24 == v27)
          v24 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v24);
      }
      while (v29 == -1);
      v25 = __clz(__rbit64(~v29)) + (v24 << 6);
    }
    *(_QWORD *)(v11 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    v30 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 32 * v25);
    *v30 = v19;
    v30[1] = v18;
    v30[2] = v21;
    v30[3] = v20;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    v4 = v34;
    if (!v5)
      goto LABEL_41;
  }
  v16 = v14 + 3;
  if (v16 >= v32)
    goto LABEL_41;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v32)
      goto LABEL_41;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_1B76BD218(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  unint64_t *v28;

  v4 = a4;
  if (!a3)
  {
    v9 = MEMORY[0x1E0DEE9E8];
LABEL_36:
    swift_release();
    return v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178038);
  result = sub_1B76DBDA4();
  v9 = result;
  v28 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= a2)
      goto LABEL_36;
    v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_36;
      v16 = v28[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_36;
        v16 = v28[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(_BYTE *)(*(_QWORD *)(v4 + 48) + v14);
    sub_1B76DBF54();
    SettingsGroupName.rawValue.getter();
    sub_1B76DBB1C();
    swift_bridgeObjectRelease();
    result = sub_1B76DBF78();
    v19 = -1 << *(_BYTE *)(v9 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_BYTE *)(*(_QWORD *)(v9 + 48) + v22) = v18;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v17 = v15 + 3;
  if (v17 >= a2)
    goto LABEL_36;
  v16 = v28[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_36;
    v16 = v28[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1B76BD4A0(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1BCCA94E8](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B76BD4E0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id sub_1B76BD504(uint64_t a1)
{
  uint64_t v1;

  return sub_1B76B7298(a1, *(_QWORD *)(v1 + 16));
}

BOOL sub_1B76BD50C(uint64_t a1, uint64_t a2, void *__s1)
{
  uint64_t __s2;
  __int16 v5;
  char v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  __s2 = a1;
  v5 = a2;
  v6 = BYTE2(a2);
  v7 = BYTE3(a2);
  v8 = BYTE4(a2);
  v9 = BYTE5(a2);
  if (!__s1)
    __break(1u);
  return memcmp(__s1, &__s2, BYTE6(a2)) == 0;
}

uint64_t sub_1B76BD5EC(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t result;
  char *v8;
  BOOL v9;
  int64_t v10;
  size_t v11;

  result = sub_1B76DB75C();
  v8 = (char *)result;
  if (result)
  {
    result = sub_1B76DB774();
    if (__OFSUB__(a1, result))
    {
LABEL_12:
      __break(1u);
      goto LABEL_13;
    }
    v8 += a1 - result;
  }
  v9 = __OFSUB__(a2, a1);
  v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
    goto LABEL_12;
  }
  result = sub_1B76DB768();
  if (!a4)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!v8)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  if (result >= v10)
    v11 = v10;
  else
    v11 = result;
  return memcmp(a4, v8, v11) == 0;
}

uint64_t DateAndTimeSettings.Name.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1B76DBE70();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void *static DateAndTimeSettings.Name.allCases.getter()
{
  return &unk_1E6CAC690;
}

unint64_t DateAndTimeSettings.Name.rawValue.getter()
{
  return 0xD000000000000027;
}

uint64_t sub_1B76BD704()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  return sub_1B76DBF78();
}

uint64_t sub_1B76BD758()
{
  return sub_1B76DBB1C();
}

uint64_t sub_1B76BD774()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  return sub_1B76DBF78();
}

uint64_t sub_1B76BD7C4@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1B76DBE70();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1B76BD814(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000027;
  a1[1] = 0x80000001B76E1AE0;
}

void sub_1B76BD834(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6CAC728;
}

uint64_t DateAndTimeSettings.requireAutomaticDateAndTime.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v0;
  v1 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  if (qword_1EF177348 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = sub_1B76584AC((uint64_t)&byte_1EF178E38, v2, v1, v4, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1B76BD8D8@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  v7 = qword_1EF177348;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_1B76584AC((uint64_t)&byte_1EF178E38, v4, v3, v6, v5);
  swift_bridgeObjectRelease_n();
  result = swift_bridgeObjectRelease_n();
  *a2 = v8;
  return result;
}

uint64_t DateAndTimeSettings.requireAutomaticDateAndTime.setter(unsigned __int8 a1)
{
  uint64_t *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v14[4];
  _BYTE v15[8];
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;

  v2 = a1;
  if (qword_1EF177348 != -1)
    swift_once();
  sub_1B765A668((uint64_t)&byte_1EF178E38, (uint64_t)v15);
  v4 = *v1;
  v3 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (v2 == 2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = 0;
  }
  else
  {
    v8 = v2 & 1;
    v9 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = objc_msgSend(v9, sel_initWithBool_, v8);
  }
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    v10 = v16;
    v11 = v17;
    v14[0] = v4;
    v14[1] = v3;
    v14[2] = v6;
    v14[3] = v5;
    v12 = v18;
    swift_retain();
    sub_1B765ED7C(v7, v10, v11, v14, v12);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  return sub_1B76671D4((uint64_t)v15);
}

uint64_t (*DateAndTimeSettings.requireAutomaticDateAndTime.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177348 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF178E38, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B76BDBC8;
}

uint64_t sub_1B76BDBC8(uint64_t a1)
{
  return DateAndTimeSettings.requireAutomaticDateAndTime.setter(*(_BYTE *)(a1 + 8));
}

uint64_t DateAndTimeSettings.effectiveRequireAutomaticDateAndTime.getter()
{
  if (qword_1EF177348 != -1)
    swift_once();
  return sub_1B7659CC4(&byte_1EF178E38);
}

uint64_t sub_1B76BDC2C()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF178E68 = result;
  unk_1EF178E70 = &off_1E6CB07B8;
  byte_1EF178E50 = 0;
  byte_1EF178E38 = 0;
  qword_1EF178E40 = 0xD000000000000027;
  unk_1EF178E48 = 0x80000001B76E1AE0;
  word_1EF178E78 = 257;
  byte_1EF178E7A = 0;
  qword_1EF178E80 = 0;
  byte_1EF178E88 = 1;
  return result;
}

uint64_t static DateAndTimeSettings.requireAutomaticDateAndTime.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EF177348 != -1)
    swift_once();
  return sub_1B765A668((uint64_t)&byte_1EF178E38, a1);
}

unint64_t sub_1B76BDCEC()
{
  unint64_t result;

  result = qword_1EF178E90;
  if (!qword_1EF178E90)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for DateAndTimeSettings.Name, &type metadata for DateAndTimeSettings.Name);
    atomic_store(result, (unint64_t *)&qword_1EF178E90);
  }
  return result;
}

unint64_t sub_1B76BDD34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF178E98;
  if (!qword_1EF178E98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF178EA0);
    result = MEMORY[0x1BCCA94E8](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF178E98);
  }
  return result;
}

uint64_t sub_1B76BDD84(unsigned __int8 *a1)
{
  return DateAndTimeSettings.requireAutomaticDateAndTime.setter(*a1);
}

ValueMetadata *type metadata accessor for DateAndTimeSettings()
{
  return &type metadata for DateAndTimeSettings;
}

uint64_t storeEnumTagSinglePayload for DateAndTimeSettings.Name(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B76BDDF8 + 4 * byte_1B76DF3F0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B76BDE18 + 4 * byte_1B76DF3F5[v4]))();
}

_BYTE *sub_1B76BDDF8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B76BDE18(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B76BDE20(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B76BDE28(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B76BDE30(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B76BDE38(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DateAndTimeSettings.Name()
{
  return &type metadata for DateAndTimeSettings.Name;
}

uint64_t sub_1B76BDE54()
{
  __SecTask *v0;
  __CFString *v1;
  unsigned __int8 v3;

  v1 = (__CFString *)sub_1B76DBAB0();
  SecTaskCopyValueForEntitlement(v0, v1, 0);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178EA8);
  return swift_dynamicCast() & v3;
}

uint64_t CarPlaySettings.Name.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1B76DBE70();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void *static CarPlaySettings.Name.allCases.getter()
{
  return &unk_1E6CAD808;
}

unint64_t CarPlaySettings.Name.rawValue.getter()
{
  return 0xD000000000000013;
}

uint64_t sub_1B76BDF44()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  return sub_1B76DBF78();
}

uint64_t sub_1B76BDF98()
{
  return sub_1B76DBB1C();
}

uint64_t sub_1B76BDFB4()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  return sub_1B76DBF78();
}

uint64_t sub_1B76BE004@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1B76DBE70();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1B76BE054(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x80000001B76E1B10;
}

void sub_1B76BE074(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6CAD930;
}

uint64_t CarPlaySettings.denyCarPlay.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v0;
  v1 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  if (qword_1EF177350 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = sub_1B76584AC((uint64_t)&byte_1EF178EB0, v2, v1, v4, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1B76BE118@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  v7 = qword_1EF177350;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_1B76584AC((uint64_t)&byte_1EF178EB0, v4, v3, v6, v5);
  swift_bridgeObjectRelease_n();
  result = swift_bridgeObjectRelease_n();
  *a2 = v8;
  return result;
}

uint64_t CarPlaySettings.denyCarPlay.setter(unsigned __int8 a1)
{
  uint64_t *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v14[4];
  _BYTE v15[8];
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;

  v2 = a1;
  if (qword_1EF177350 != -1)
    swift_once();
  sub_1B765A668((uint64_t)&byte_1EF178EB0, (uint64_t)v15);
  v4 = *v1;
  v3 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (v2 == 2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = 0;
  }
  else
  {
    v8 = v2 & 1;
    v9 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = objc_msgSend(v9, sel_initWithBool_, v8);
  }
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    v10 = v16;
    v11 = v17;
    v14[0] = v4;
    v14[1] = v3;
    v14[2] = v6;
    v14[3] = v5;
    v12 = v18;
    swift_retain();
    sub_1B765ED7C(v7, v10, v11, v14, v12);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  return sub_1B76671D4((uint64_t)v15);
}

uint64_t (*CarPlaySettings.denyCarPlay.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177350 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF178EB0, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B76BE408;
}

uint64_t sub_1B76BE408(uint64_t a1)
{
  return CarPlaySettings.denyCarPlay.setter(*(_BYTE *)(a1 + 8));
}

uint64_t CarPlaySettings.effectiveDenyCarPlay.getter()
{
  if (qword_1EF177350 != -1)
    swift_once();
  return sub_1B7659CC4(&byte_1EF178EB0);
}

uint64_t sub_1B76BE46C()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF178EE0 = result;
  unk_1EF178EE8 = &off_1E6CB07B8;
  byte_1EF178EC8 = 0;
  byte_1EF178EB0 = 0;
  qword_1EF178EB8 = 0xD000000000000013;
  unk_1EF178EC0 = 0x80000001B76E1B10;
  word_1EF178EF0 = 256;
  byte_1EF178EF2 = 0;
  qword_1EF178EF8 = 0;
  byte_1EF178F00 = 1;
  return result;
}

uint64_t static CarPlaySettings.denyCarPlay.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EF177350 != -1)
    swift_once();
  return sub_1B765A668((uint64_t)&byte_1EF178EB0, a1);
}

unint64_t sub_1B76BE52C()
{
  unint64_t result;

  result = qword_1EF178F08;
  if (!qword_1EF178F08)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for CarPlaySettings.Name, &type metadata for CarPlaySettings.Name);
    atomic_store(result, (unint64_t *)&qword_1EF178F08);
  }
  return result;
}

unint64_t sub_1B76BE574()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF178F10;
  if (!qword_1EF178F10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF178F18);
    result = MEMORY[0x1BCCA94E8](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF178F10);
  }
  return result;
}

uint64_t sub_1B76BE5C4(unsigned __int8 *a1)
{
  return CarPlaySettings.denyCarPlay.setter(*a1);
}

ValueMetadata *type metadata accessor for CarPlaySettings()
{
  return &type metadata for CarPlaySettings;
}

uint64_t storeEnumTagSinglePayload for CarPlaySettings.Name(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B76BE638 + 4 * asc_1B76DF510[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B76BE658 + 4 * byte_1B76DF515[v4]))();
}

_BYTE *sub_1B76BE638(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B76BE658(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B76BE660(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B76BE668(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B76BE670(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B76BE678(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CarPlaySettings.Name()
{
  return &type metadata for CarPlaySettings.Name;
}

uint64_t static ManagedSettingsService.connection<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  id v16;
  _QWORD v18[3];
  uint64_t v19;
  _BYTE v20[32];
  _QWORD v21[4];

  v21[3] = a2;
  v21[0] = a1;
  v2 = qword_1ED53B6A8;
  swift_unknownObjectRetain();
  if (v2 != -1)
    swift_once();
  v3 = qword_1ED53B690;
  if (qword_1ED53B688 != -1)
    swift_once();
  v4 = qword_1ED53B680;
  type metadata accessor for XPCConnection();
  v5 = swift_allocObject();
  v6 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v7 = (void *)sub_1B76DBAB0();
  v8 = objc_msgSend(v6, sel_initWithMachServiceName_options_, v7, 4096);

  *(_QWORD *)(v5 + 16) = v8;
  sub_1B765DF40((uint64_t)v21, (uint64_t)v20);
  sub_1B7670B8C((uint64_t)v20, (uint64_t)v18);
  v9 = v19;
  if (v19)
  {
    v10 = __swift_project_boxed_opaque_existential_1(v18, v19);
    v11 = *(_QWORD *)(v9 - 8);
    MEMORY[0x1E0C80A78](v10, v10);
    v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v11 + 16))(v13);
    v14 = v8;
    v15 = sub_1B76DBEC4();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v9);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
  }
  else
  {
    v16 = v8;
    v15 = 0;
  }
  objc_msgSend(v8, sel_setExportedObject_, v15);

  swift_unknownObjectRelease();
  sub_1B7670BD4((uint64_t)v20);
  objc_msgSend(v8, sel_setExportedInterface_, v3);
  objc_msgSend(v8, sel_setRemoteObjectInterface_, v4);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
  return v5;
}

id sub_1B76BE8BC(uint64_t a1)
{
  return sub_1B76708E8(a1, &protocolRef__TtP15ManagedSettings20ManagedSettingsAgent_, &qword_1ED53B680);
}

id static ManagedSettingsService.agentInterface.getter()
{
  return sub_1B7658258(&qword_1ED53B688, (id *)&qword_1ED53B680);
}

id sub_1B76BE8EC(uint64_t a1)
{
  return sub_1B76708E8(a1, &protocolRef__TtP15ManagedSettings21ManagedSettingsClient_, &qword_1ED53B690);
}

id static ManagedSettingsService.clientInterface.getter()
{
  return sub_1B7658258(&qword_1ED53B6A8, (id *)&qword_1ED53B690);
}

ValueMetadata *type metadata accessor for ManagedSettingsService()
{
  return &type metadata for ManagedSettingsService;
}

uint64_t CalculatorSettings.Name.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1B76DBE70();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void *static CalculatorSettings.Name.allCases.getter()
{
  return &unk_1E6CABB40;
}

unint64_t CalculatorSettings.Name.rawValue.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_1B76BE9A8()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  return sub_1B76DBF78();
}

uint64_t sub_1B76BE9FC()
{
  return sub_1B76DBB1C();
}

uint64_t sub_1B76BEA18()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  return sub_1B76DBF78();
}

uint64_t sub_1B76BEA68@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1B76DBE70();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1B76BEAB8(_QWORD *a1@<X8>)
{
  *a1 = 0xD00000000000001FLL;
  a1[1] = 0x80000001B76E1B30;
}

void sub_1B76BEAD8(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6CABC68;
}

uint64_t CalculatorSettings.denyMathPaperSolving.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v0;
  v1 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  if (qword_1EF177358 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = sub_1B76584AC((uint64_t)&byte_1EF178F20, v2, v1, v4, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1B76BEB7C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  v7 = qword_1EF177358;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_1B76584AC((uint64_t)&byte_1EF178F20, v4, v3, v6, v5);
  swift_bridgeObjectRelease_n();
  result = swift_bridgeObjectRelease_n();
  *a2 = v8;
  return result;
}

uint64_t CalculatorSettings.denyMathPaperSolving.setter(unsigned __int8 a1)
{
  uint64_t *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v14[4];
  _BYTE v15[8];
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;

  v2 = a1;
  if (qword_1EF177358 != -1)
    swift_once();
  sub_1B765A668((uint64_t)&byte_1EF178F20, (uint64_t)v15);
  v4 = *v1;
  v3 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (v2 == 2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = 0;
  }
  else
  {
    v8 = v2 & 1;
    v9 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = objc_msgSend(v9, sel_initWithBool_, v8);
  }
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    v10 = v16;
    v11 = v17;
    v14[0] = v4;
    v14[1] = v3;
    v14[2] = v6;
    v14[3] = v5;
    v12 = v18;
    swift_retain();
    sub_1B765ED7C(v7, v10, v11, v14, v12);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  return sub_1B76671D4((uint64_t)v15);
}

uint64_t (*CalculatorSettings.denyMathPaperSolving.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177358 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF178F20, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B76BEE6C;
}

uint64_t sub_1B76BEE6C(uint64_t a1)
{
  return CalculatorSettings.denyMathPaperSolving.setter(*(_BYTE *)(a1 + 8));
}

uint64_t CalculatorSettings.effectiveDenyMathPaperSolving.getter()
{
  if (qword_1EF177358 != -1)
    swift_once();
  return sub_1B7659CC4(&byte_1EF178F20);
}

uint64_t sub_1B76BEED0()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF178F50 = result;
  unk_1EF178F58 = &off_1E6CB07B8;
  byte_1EF178F38 = 0;
  byte_1EF178F20 = 0;
  qword_1EF178F28 = 0xD00000000000001FLL;
  unk_1EF178F30 = 0x80000001B76E1B30;
  word_1EF178F60 = 256;
  byte_1EF178F62 = 0;
  qword_1EF178F68 = 0;
  byte_1EF178F70 = 1;
  return result;
}

uint64_t static CalculatorSettings.denyMathPaperSolving.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EF177358 != -1)
    swift_once();
  return sub_1B765A668((uint64_t)&byte_1EF178F20, a1);
}

unint64_t sub_1B76BEF90()
{
  unint64_t result;

  result = qword_1EF178F78;
  if (!qword_1EF178F78)
  {
    result = MEMORY[0x1BCCA94E8]("u8]/ԋ", &type metadata for CalculatorSettings.Name);
    atomic_store(result, (unint64_t *)&qword_1EF178F78);
  }
  return result;
}

unint64_t sub_1B76BEFD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF178F80;
  if (!qword_1EF178F80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF178F88);
    result = MEMORY[0x1BCCA94E8](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF178F80);
  }
  return result;
}

uint64_t sub_1B76BF028(unsigned __int8 *a1)
{
  return CalculatorSettings.denyMathPaperSolving.setter(*a1);
}

ValueMetadata *type metadata accessor for CalculatorSettings()
{
  return &type metadata for CalculatorSettings;
}

uint64_t storeEnumTagSinglePayload for CalculatorSettings.Name(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B76BF09C + 4 * asc_1B76DF650[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B76BF0BC + 4 * byte_1B76DF655[v4]))();
}

_BYTE *sub_1B76BF09C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B76BF0BC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B76BF0C4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B76BF0CC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B76BF0D4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B76BF0DC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CalculatorSettings.Name()
{
  return &type metadata for CalculatorSettings.Name;
}

uint64_t PrivacySettings.Name.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1B76DBE70();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void *static PrivacySettings.Name.allCases.getter()
{
  return &unk_1E6CAD9E0;
}

unint64_t PrivacySettings.Name.rawValue.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1B76BF174()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  return sub_1B76DBF78();
}

uint64_t sub_1B76BF1C8()
{
  return sub_1B76DBB1C();
}

uint64_t sub_1B76BF1E4()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  return sub_1B76DBF78();
}

uint64_t sub_1B76BF234@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1B76DBE70();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1B76BF284(_QWORD *a1@<X8>)
{
  *a1 = 0xD00000000000001CLL;
  a1[1] = 0x80000001B76E1B50;
}

void sub_1B76BF2A4(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6CADB08;
}

uint64_t PrivacySettings.forceLimitAdTracking.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v0;
  v1 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  if (qword_1EF177360 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = sub_1B76584AC((uint64_t)&byte_1EF178F90, v2, v1, v4, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1B76BF348@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  v7 = qword_1EF177360;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_1B76584AC((uint64_t)&byte_1EF178F90, v4, v3, v6, v5);
  swift_bridgeObjectRelease_n();
  result = swift_bridgeObjectRelease_n();
  *a2 = v8;
  return result;
}

uint64_t PrivacySettings.forceLimitAdTracking.setter(unsigned __int8 a1)
{
  uint64_t *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v14[4];
  _BYTE v15[8];
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;

  v2 = a1;
  if (qword_1EF177360 != -1)
    swift_once();
  sub_1B765A668((uint64_t)&byte_1EF178F90, (uint64_t)v15);
  v4 = *v1;
  v3 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (v2 == 2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = 0;
  }
  else
  {
    v8 = v2 & 1;
    v9 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = objc_msgSend(v9, sel_initWithBool_, v8);
  }
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    v10 = v16;
    v11 = v17;
    v14[0] = v4;
    v14[1] = v3;
    v14[2] = v6;
    v14[3] = v5;
    v12 = v18;
    swift_retain();
    sub_1B765ED7C(v7, v10, v11, v14, v12);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  return sub_1B76671D4((uint64_t)v15);
}

uint64_t (*PrivacySettings.forceLimitAdTracking.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177360 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF178F90, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B76BF638;
}

uint64_t sub_1B76BF638(uint64_t a1)
{
  return PrivacySettings.forceLimitAdTracking.setter(*(_BYTE *)(a1 + 8));
}

uint64_t PrivacySettings.effectiveForceLimitAdTracking.getter()
{
  if (qword_1EF177360 != -1)
    swift_once();
  return sub_1B7659CC4(&byte_1EF178F90);
}

uint64_t sub_1B76BF69C()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF178FC0 = result;
  unk_1EF178FC8 = &off_1E6CB07B8;
  byte_1EF178FA8 = 0;
  byte_1EF178F90 = 0;
  qword_1EF178F98 = 0xD00000000000001CLL;
  unk_1EF178FA0 = 0x80000001B76E1B50;
  word_1EF178FD0 = 256;
  byte_1EF178FD2 = 0;
  qword_1EF178FD8 = 0;
  byte_1EF178FE0 = 1;
  return result;
}

uint64_t static PrivacySettings.forceLimitAdTracking.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EF177360 != -1)
    swift_once();
  return sub_1B765A668((uint64_t)&byte_1EF178F90, a1);
}

unint64_t sub_1B76BF75C()
{
  unint64_t result;

  result = qword_1EF178FE8;
  if (!qword_1EF178FE8)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for PrivacySettings.Name, &type metadata for PrivacySettings.Name);
    atomic_store(result, (unint64_t *)&qword_1EF178FE8);
  }
  return result;
}

unint64_t sub_1B76BF7A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF178FF0;
  if (!qword_1EF178FF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF178FF8);
    result = MEMORY[0x1BCCA94E8](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF178FF0);
  }
  return result;
}

uint64_t sub_1B76BF7F4(unsigned __int8 *a1)
{
  return PrivacySettings.forceLimitAdTracking.setter(*a1);
}

ValueMetadata *type metadata accessor for PrivacySettings()
{
  return &type metadata for PrivacySettings;
}

uint64_t storeEnumTagSinglePayload for PrivacySettings.Name(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B76BF868 + 4 * asc_1B76DF76C[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B76BF888 + 4 * byte_1B76DF771[v4]))();
}

_BYTE *sub_1B76BF868(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B76BF888(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B76BF890(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B76BF898(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B76BF8A0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B76BF8A8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PrivacySettings.Name()
{
  return &type metadata for PrivacySettings.Name;
}

uint64_t FindMySettings.Name.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1B76DBE70();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void *static FindMySettings.Name.allCases.getter()
{
  return &unk_1E6CAD1C0;
}

unint64_t FindMySettings.Name.rawValue.getter()
{
  return 0xD000000000000018;
}

uint64_t sub_1B76BF940()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  return sub_1B76DBF78();
}

uint64_t sub_1B76BF994()
{
  return sub_1B76DBB1C();
}

uint64_t sub_1B76BF9B0()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  return sub_1B76DBF78();
}

uint64_t sub_1B76BFA00@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1B76DBE70();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1B76BFA50(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000018;
  a1[1] = 0x80000001B76E1B70;
}

void sub_1B76BFA70(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6CAD2E8;
}

uint64_t FindMySettings.lockFindMyFriends.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v0;
  v1 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  if (qword_1EF177368 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = sub_1B76584AC((uint64_t)&byte_1EF179000, v2, v1, v4, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1B76BFB14@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  v7 = qword_1EF177368;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_1B76584AC((uint64_t)&byte_1EF179000, v4, v3, v6, v5);
  swift_bridgeObjectRelease_n();
  result = swift_bridgeObjectRelease_n();
  *a2 = v8;
  return result;
}

uint64_t FindMySettings.lockFindMyFriends.setter(unsigned __int8 a1)
{
  uint64_t *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v14[4];
  _BYTE v15[8];
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;

  v2 = a1;
  if (qword_1EF177368 != -1)
    swift_once();
  sub_1B765A668((uint64_t)&byte_1EF179000, (uint64_t)v15);
  v4 = *v1;
  v3 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (v2 == 2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = 0;
  }
  else
  {
    v8 = v2 & 1;
    v9 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = objc_msgSend(v9, sel_initWithBool_, v8);
  }
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    v10 = v16;
    v11 = v17;
    v14[0] = v4;
    v14[1] = v3;
    v14[2] = v6;
    v14[3] = v5;
    v12 = v18;
    swift_retain();
    sub_1B765ED7C(v7, v10, v11, v14, v12);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  return sub_1B76671D4((uint64_t)v15);
}

uint64_t (*FindMySettings.lockFindMyFriends.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177368 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF179000, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B76BFE04;
}

uint64_t sub_1B76BFE04(uint64_t a1)
{
  return FindMySettings.lockFindMyFriends.setter(*(_BYTE *)(a1 + 8));
}

uint64_t FindMySettings.effectiveLockFindMyFriends.getter()
{
  if (qword_1EF177368 != -1)
    swift_once();
  return sub_1B7659CC4(&byte_1EF179000);
}

uint64_t sub_1B76BFE68()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF179030 = result;
  unk_1EF179038 = &off_1E6CB07B8;
  byte_1EF179018 = 0;
  byte_1EF179000 = 0;
  qword_1EF179008 = 0xD000000000000018;
  unk_1EF179010 = 0x80000001B76E1B70;
  word_1EF179040 = 256;
  byte_1EF179042 = 0;
  qword_1EF179048 = 0;
  byte_1EF179050 = 1;
  return result;
}

uint64_t static FindMySettings.lockFindMyFriends.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EF177368 != -1)
    swift_once();
  return sub_1B765A668((uint64_t)&byte_1EF179000, a1);
}

unint64_t sub_1B76BFF28()
{
  unint64_t result;

  result = qword_1EF179058;
  if (!qword_1EF179058)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for FindMySettings.Name, &type metadata for FindMySettings.Name);
    atomic_store(result, (unint64_t *)&qword_1EF179058);
  }
  return result;
}

unint64_t sub_1B76BFF70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF179060;
  if (!qword_1EF179060)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF179068);
    result = MEMORY[0x1BCCA94E8](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF179060);
  }
  return result;
}

uint64_t sub_1B76BFFC0(unsigned __int8 *a1)
{
  return FindMySettings.lockFindMyFriends.setter(*a1);
}

ValueMetadata *type metadata accessor for FindMySettings()
{
  return &type metadata for FindMySettings;
}

uint64_t storeEnumTagSinglePayload for FindMySettings.Name(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B76C0034 + 4 * asc_1B76DF880[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B76C0054 + 4 * byte_1B76DF885[v4]))();
}

_BYTE *sub_1B76C0034(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B76C0054(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B76C005C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B76C0064(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B76C006C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B76C0074(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FindMySettings.Name()
{
  return &type metadata for FindMySettings.Name;
}

uint64_t static Feature.overrideManagedSettingsEnabled.getter()
{
  swift_beginAccess();
  return byte_1ED53B740;
}

uint64_t static Feature.overrideManagedSettingsEnabled.setter(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  byte_1ED53B740 = a1;
  return result;
}

uint64_t (*static Feature.overrideManagedSettingsEnabled.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

ValueMetadata *type metadata accessor for Feature()
{
  return &type metadata for Feature;
}

uint64_t storeEnumTagSinglePayload for Feature.FeatureFlags(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B76C01A4 + 4 * asc_1B76DF990[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B76C01C4 + 4 * byte_1B76DF995[v4]))();
}

_BYTE *sub_1B76C01A4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B76C01C4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B76C01CC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B76C01D4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B76C01DC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B76C01E4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for Feature.FeatureFlags()
{
  return &type metadata for Feature.FeatureFlags;
}

unint64_t sub_1B76C0204()
{
  unint64_t result;

  result = qword_1EF179070;
  if (!qword_1EF179070)
  {
    result = MEMORY[0x1BCCA94E8](&unk_1B76DFA00, &type metadata for Feature.FeatureFlags);
    atomic_store(result, (unint64_t *)&qword_1EF179070);
  }
  return result;
}

uint64_t UserSettings.SharingPolicy.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6972747365726E75;
  if (*v0 != 1)
    v1 = 0x7463697274736572;
  if (*v0)
    return v1;
  else
    return 1701736302;
}

ManagedSettings::UserSettings::SharingPolicy_optional __swiftcall UserSettings.SharingPolicy.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (ManagedSettings::UserSettings::SharingPolicy_optional)sub_1B76C02C0(v1);
}

ManagedSettings::UserSettings::Name_optional __swiftcall UserSettings.Name.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (ManagedSettings::UserSettings::Name_optional)sub_1B76C02C0(v1);
}

uint64_t sub_1B76C02C0@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1B76DBE70();
  result = swift_bridgeObjectRelease();
  v4 = 3;
  if (v2 < 3)
    v4 = v2;
  *a1 = v4;
  return result;
}

void *static UserSettings.Name.allCases.getter()
{
  return &unk_1E6CACDE0;
}

unint64_t UserSettings.Name.rawValue.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD00000000000001CLL;
  if (*v0 != 1)
    v1 = 0xD000000000000012;
  if (*v0)
    return v1;
  else
    return 0xD000000000000010;
}

uint64_t sub_1B76C0380(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B76A1894(*a1, *a2);
}

uint64_t sub_1B76C038C()
{
  return sub_1B76D91A8();
}

uint64_t sub_1B76C0394()
{
  return sub_1B76D99C8();
}

uint64_t sub_1B76C039C()
{
  return sub_1B76DA130();
}

ManagedSettings::UserSettings::Name_optional sub_1B76C03A4(Swift::String *a1)
{
  return UserSettings.Name.init(rawValue:)(*a1);
}

unint64_t sub_1B76C03B0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;
  unint64_t v3;

  result = UserSettings.Name.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1B76C03D4(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6CACE70;
}

BOOL static UserSettings.SharingPolicy.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

void *static UserSettings.SharingPolicy.allCases.getter()
{
  return &unk_1E6CACD28;
}

uint64_t sub_1B76C0404(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B76A1990(*a1, *a2);
}

uint64_t sub_1B76C0410()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

uint64_t sub_1B76C04B4()
{
  sub_1B76DBB1C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76C0534()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

ManagedSettings::UserSettings::SharingPolicy_optional sub_1B76C05D4(Swift::String *a1)
{
  return UserSettings.SharingPolicy.init(rawValue:)(*a1);
}

void sub_1B76C05E0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE400000000000000;
  v4 = 0xEC00000064657463;
  v5 = 0x6972747365726E75;
  if (v2 != 1)
  {
    v5 = 0x7463697274736572;
    v4 = 0xEA00000000006465;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 1701736302;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

void sub_1B76C0644(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6CACDB8;
}

uint64_t UserSettings.denySharing.getter()
{
  return sub_1B765A148(&qword_1EF177370, (uint64_t)&byte_1EF179078);
}

uint64_t UserSettings.denySharing.setter(unsigned __int8 a1)
{
  return sub_1B766413C(a1, &qword_1EF177370, (uint64_t)&byte_1EF179078);
}

uint64_t (*UserSettings.denySharing.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177370 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF179078, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B76C073C;
}

uint64_t sub_1B76C073C(uint64_t a1)
{
  return UserSettings.denySharing.setter(*(_BYTE *)(a1 + 8));
}

uint64_t UserSettings.effectiveDenySharing.getter()
{
  return sub_1B765A568(&qword_1EF177370, &byte_1EF179078);
}

uint64_t sub_1B76C077C()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF1790A8 = result;
  unk_1EF1790B0 = &off_1E6CB07B8;
  byte_1EF179090 = 0;
  byte_1EF179078 = 0;
  qword_1EF179080 = 0xD000000000000010;
  unk_1EF179088 = 0x80000001B76E1B90;
  word_1EF1790B8 = 256;
  byte_1EF1790BA = 0;
  qword_1EF1790C0 = 0;
  byte_1EF1790C8 = 1;
  return result;
}

uint64_t static UserSettings.denySharing.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7664440(&qword_1EF177370, (uint64_t)&byte_1EF179078, a1);
}

uint64_t UserSettings.denyUnrestrictedSharing.getter()
{
  return sub_1B765A148(&qword_1EF177378, (uint64_t)&byte_1EF1790D0);
}

uint64_t UserSettings.denyUnrestrictedSharing.setter(unsigned __int8 a1)
{
  return sub_1B766413C(a1, &qword_1EF177378, (uint64_t)&byte_1EF1790D0);
}

uint64_t (*UserSettings.denyUnrestrictedSharing.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177378 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF1790D0, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B76C08EC;
}

uint64_t sub_1B76C08EC(uint64_t a1)
{
  return UserSettings.denyUnrestrictedSharing.setter(*(_BYTE *)(a1 + 8));
}

uint64_t UserSettings.effectiveDenyUnrestrictedSharing.getter()
{
  return sub_1B765A568(&qword_1EF177378, &byte_1EF1790D0);
}

uint64_t sub_1B76C092C()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF179100 = result;
  unk_1EF179108 = &off_1E6CB07B8;
  byte_1EF1790E8 = 0;
  byte_1EF1790D0 = 1;
  qword_1EF1790D8 = 0xD00000000000001CLL;
  unk_1EF1790E0 = 0x80000001B76E1BB0;
  word_1EF179110 = 256;
  byte_1EF179112 = 0;
  qword_1EF179118 = 0;
  byte_1EF179120 = 1;
  return result;
}

uint64_t static UserSettings.denyUnrestrictedSharing.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7664440(&qword_1EF177378, (uint64_t)&byte_1EF1790D0, a1);
}

uint64_t UserSettings.sharingPolicy.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *v1;
  v3 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177380 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B7658E84((uint64_t)&byte_1EF179128, v4, v3, v6, v5, a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76C0A4C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  char v9;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  v7 = qword_1EF177380;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B7658E84((uint64_t)&byte_1EF179128, v4, v3, v6, v5, &v9);
  swift_bridgeObjectRelease_n();
  result = swift_bridgeObjectRelease_n();
  *a2 = v9;
  return result;
}

void UserSettings.sharingPolicy.setter(unsigned __int8 *a1)
{
  uint64_t v1;
  _BYTE v2[8];

  v1 = *a1;
  if (qword_1EF177380 != -1)
    swift_once();
  sub_1B76638C0((uint64_t)&byte_1EF179128, (uint64_t)v2, &qword_1EF179180);
  __asm { BR              X9 }
}

void (*UserSettings.sharingPolicy.modify(uint64_t **a1))(uint64_t a1, char a2)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177380 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B7658E84((uint64_t)&byte_1EF179128, v3, v4, v6, v5, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1B76C0DBC;
}

void sub_1B76C0DBC(uint64_t a1, char a2)
{
  unsigned __int8 *v2;
  char v3;
  char v4;

  if ((a2 & 1) != 0)
  {
    v3 = *(_BYTE *)(a1 + 8);
    v2 = (unsigned __int8 *)&v3;
  }
  else
  {
    v4 = *(_BYTE *)(a1 + 8);
    v2 = (unsigned __int8 *)&v4;
  }
  UserSettings.sharingPolicy.setter(v2);
}

uint64_t UserSettings.effectiveSharingPolicy.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char v6;
  char v8;
  char v9;
  _BYTE v10[8];
  uint64_t v11;
  uint64_t v12;

  if (qword_1EF177380 != -1)
    swift_once();
  sub_1B76638C0((uint64_t)&byte_1EF179128, (uint64_t)v10, &qword_1EF179180);
  if (qword_1EF1771A8 != -1)
    swift_once();
  swift_beginAccess();
  if (!qword_1EF1778A8)
    goto LABEL_9;
  v2 = v11;
  v3 = v12;
  swift_retain();
  v4 = sub_1B7667778(v2, v3);
  swift_release();
  if (!v4)
    goto LABEL_9;
  v5 = v4;
  static UserSettings.SharingPolicy.value(from:)(v4, &v9);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177520);
  if ((swift_dynamicCast() & 1) != 0)
    v6 = v8;
  else
LABEL_9:
    v6 = v10[0];
  *a1 = v6;
  return sub_1B765DE88((uint64_t)v10, &qword_1EF179180);
}

uint64_t sub_1B76C0F48()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1791B8);
  qword_1EF179158 = result;
  unk_1EF179160 = &off_1E6CB0650;
  byte_1EF179140 = 1;
  byte_1EF179128 = 0;
  qword_1EF179130 = 0xD000000000000012;
  unk_1EF179138 = 0x80000001B76E1BD0;
  word_1EF179168 = 256;
  byte_1EF17916A = 0;
  qword_1EF179170 = 0;
  byte_1EF179178 = 1;
  return result;
}

uint64_t static UserSettings.sharingPolicy.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EF177380 != -1)
    swift_once();
  return sub_1B76638C0((uint64_t)&byte_1EF179128, a1, &qword_1EF179180);
}

unint64_t sub_1B76C1014()
{
  unint64_t result;

  result = qword_1EF179188;
  if (!qword_1EF179188)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for UserSettings.Name, &type metadata for UserSettings.Name);
    atomic_store(result, (unint64_t *)&qword_1EF179188);
  }
  return result;
}

uint64_t sub_1B76C1058()
{
  return sub_1B76B1904(&qword_1EF179190, &qword_1EF179198);
}

unint64_t sub_1B76C1080()
{
  unint64_t result;

  result = qword_1EF1791A0;
  if (!qword_1EF1791A0)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for UserSettings.SharingPolicy, &type metadata for UserSettings.SharingPolicy);
    atomic_store(result, (unint64_t *)&qword_1EF1791A0);
  }
  return result;
}

uint64_t sub_1B76C10C4()
{
  return sub_1B76B1904(&qword_1EF1791A8, &qword_1EF1791B0);
}

uint64_t sub_1B76C10E8@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF177370, (uint64_t)&byte_1EF179078, a2);
}

uint64_t sub_1B76C1114(unsigned __int8 *a1)
{
  return UserSettings.denySharing.setter(*a1);
}

uint64_t sub_1B76C1138@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF177378, (uint64_t)&byte_1EF1790D0, a2);
}

uint64_t sub_1B76C1164(unsigned __int8 *a1)
{
  return UserSettings.denyUnrestrictedSharing.setter(*a1);
}

void sub_1B76C118C(unsigned __int8 *a1)
{
  unsigned __int8 v1;

  v1 = *a1;
  UserSettings.sharingPolicy.setter(&v1);
}

ValueMetadata *type metadata accessor for UserSettings()
{
  return &type metadata for UserSettings;
}

ValueMetadata *type metadata accessor for UserSettings.Name()
{
  return &type metadata for UserSettings.Name;
}

uint64_t _s15ManagedSettings12UserSettingsV4NameOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B76C1234 + 4 * byte_1B76DFA61[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B76C1268 + 4 * byte_1B76DFA5C[v4]))();
}

uint64_t sub_1B76C1268(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76C1270(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B76C1278);
  return result;
}

uint64_t sub_1B76C1284(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B76C128CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B76C1290(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76C1298(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UserSettings.SharingPolicy()
{
  return &type metadata for UserSettings.SharingPolicy;
}

uint64_t sub_1B76C12B4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a3)
  {
    if (a3 == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177830);
      v4 = swift_allocObject();
      v5 = MEMORY[0x1E0DEA968];
      *(_OWORD *)(v4 + 16) = xmmword_1B76DCB70;
      *(_QWORD *)(v4 + 56) = v5;
      *(_QWORD *)(v4 + 32) = 0x6974697669746361;
      *(_QWORD *)(v4 + 40) = 0xEA00000000007365;
      v6 = sub_1B76C6448(a1, (void (*)(_BYTE *, _QWORD *))sub_1B767E11C, (void (*)(uint64_t, uint64_t))sub_1B765DF1C, sub_1B7665174);
      *(_QWORD *)(v4 + 88) = sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
      *(_QWORD *)(v4 + 64) = v6;
    }
    sub_1B765DF7C(0, &qword_1ED53B5E8);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177830);
    v8 = swift_allocObject();
    v9 = MEMORY[0x1E0DEA968];
    *(_OWORD *)(v8 + 16) = xmmword_1B76DDBB0;
    *(_QWORD *)(v8 + 56) = v9;
    *(_QWORD *)(v8 + 32) = 0x69726F6765746163;
    *(_QWORD *)(v8 + 40) = 0xEA00000000007365;
    v10 = sub_1B76C6448(a1, (void (*)(_BYTE *, _QWORD *))sub_1B767F26C, (void (*)(uint64_t, uint64_t))sub_1B765E0D8, sub_1B7665548);
    v11 = sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
    *(_QWORD *)(v8 + 64) = v10;
    *(_QWORD *)(v8 + 120) = v9;
    *(_QWORD *)(v8 + 88) = v11;
    *(_QWORD *)(v8 + 96) = 0x6974697669746361;
    *(_QWORD *)(v8 + 104) = 0xEA00000000007365;
    v12 = sub_1B76C6448(a2, (void (*)(_BYTE *, _QWORD *))sub_1B767E11C, (void (*)(uint64_t, uint64_t))sub_1B765DF1C, sub_1B7665174);
    *(_QWORD *)(v8 + 152) = v11;
    *(_QWORD *)(v8 + 128) = v12;
    sub_1B765DF7C(0, &qword_1ED53B5E8);
  }
  return sub_1B76DBC78();
}

uint64_t sub_1B76C14D4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a3)
  {
    if (a3 == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177830);
      v4 = swift_allocObject();
      v5 = MEMORY[0x1E0DEA968];
      *(_OWORD *)(v4 + 16) = xmmword_1B76DCB70;
      *(_QWORD *)(v4 + 56) = v5;
      *(_QWORD *)(v4 + 32) = 0x6974697669746361;
      *(_QWORD *)(v4 + 40) = 0xEA00000000007365;
      v6 = sub_1B76C66A0(a1);
      *(_QWORD *)(v4 + 88) = sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
      *(_QWORD *)(v4 + 64) = v6;
    }
    sub_1B765DF7C(0, &qword_1ED53B5E8);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177830);
    v8 = swift_allocObject();
    v9 = MEMORY[0x1E0DEA968];
    *(_OWORD *)(v8 + 16) = xmmword_1B76DDBB0;
    *(_QWORD *)(v8 + 56) = v9;
    *(_QWORD *)(v8 + 32) = 0x69726F6765746163;
    *(_QWORD *)(v8 + 40) = 0xEA00000000007365;
    v10 = sub_1B76C6448(a1, (void (*)(_BYTE *, _QWORD *))sub_1B767F26C, (void (*)(uint64_t, uint64_t))sub_1B765E0D8, sub_1B7665548);
    v11 = sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
    *(_QWORD *)(v8 + 64) = v10;
    *(_QWORD *)(v8 + 120) = v9;
    *(_QWORD *)(v8 + 88) = v11;
    *(_QWORD *)(v8 + 96) = 0x6974697669746361;
    *(_QWORD *)(v8 + 104) = 0xEA00000000007365;
    v12 = sub_1B76C66A0(a2);
    *(_QWORD *)(v8 + 152) = v11;
    *(_QWORD *)(v8 + 128) = v12;
    sub_1B765DF7C(0, &qword_1ED53B5E8);
  }
  return sub_1B76DBC78();
}

uint64_t sub_1B76C16C4(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a3)
  {
    if (a3 == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177830);
      v6 = swift_allocObject();
      v7 = MEMORY[0x1E0DEA968];
      *(_OWORD *)(v6 + 16) = xmmword_1B76DCB70;
      *(_QWORD *)(v6 + 56) = v7;
      *(_QWORD *)(v6 + 32) = 0x6974697669746361;
      *(_QWORD *)(v6 + 40) = 0xEA00000000007365;
      v8 = a4(a1);
      *(_QWORD *)(v6 + 88) = sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
      *(_QWORD *)(v6 + 64) = v8;
    }
    sub_1B765DF7C(0, &qword_1ED53B5E8);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177830);
    v10 = swift_allocObject();
    v11 = MEMORY[0x1E0DEA968];
    *(_OWORD *)(v10 + 16) = xmmword_1B76DDBB0;
    *(_QWORD *)(v10 + 56) = v11;
    *(_QWORD *)(v10 + 32) = 0x69726F6765746163;
    *(_QWORD *)(v10 + 40) = 0xEA00000000007365;
    v12 = sub_1B7665548(a1);
    v13 = sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
    *(_QWORD *)(v10 + 64) = v12;
    *(_QWORD *)(v10 + 120) = v11;
    *(_QWORD *)(v10 + 88) = v13;
    *(_QWORD *)(v10 + 96) = 0x6974697669746361;
    *(_QWORD *)(v10 + 104) = 0xEA00000000007365;
    v14 = a4(a2);
    *(_QWORD *)(v10 + 152) = v13;
    *(_QWORD *)(v10 + 128) = v14;
    sub_1B765DF7C(0, &qword_1ED53B5E8);
  }
  return sub_1B76DBC78();
}

void sub_1B76C18A4(void *a1@<X0>, uint64_t (*a2)(void *)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  char v21;
  void *v22;
  uint64_t v23;
  void *v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;

  if (!a1)
  {
LABEL_20:
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    v21 = -1;
    goto LABEL_21;
  }
  objc_opt_self();
  v6 = swift_dynamicCastObjCClass();
  if (!v6)
  {
    if (qword_1EF177220 != -1)
      swift_once();
    v10 = sub_1B76DB8B8();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EF177E18);
    v11 = a1;
    v12 = sub_1B76DB8A0();
    v13 = sub_1B76DBC90();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v27 = v15;
      *(_DWORD *)v14 = 136446210;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774F8);
      v16 = sub_1B76DBD14();
      *(_QWORD *)&v25 = sub_1B7669B50(v16, v17, &v27);
      sub_1B76DBD38();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B7656000, v12, v13, "Persistable value %{public}s not decodable to ShieldSettings.PersistedActivityCategoryPolicy", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v15, -1, -1);
      MEMORY[0x1BCCA9590](v14, -1, -1);

    }
    else
    {

    }
    goto LABEL_20;
  }
  v7 = (void *)v6;
  v27 = 0x6974697669746361;
  v28 = 0xEA00000000007365;
  v8 = a1;
  v9 = objc_msgSend(v7, sel___swift_objectForKeyedSubscript_, sub_1B76DBEE8());
  swift_unknownObjectRelease();
  if (v9)
  {
    sub_1B76DBD50();
    swift_unknownObjectRelease();
  }
  else
  {
    v25 = 0u;
    v26 = 0u;
  }
  sub_1B765DE40((uint64_t)&v25, (uint64_t)&v27);
  if (v29)
  {
    sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
    if (swift_dynamicCast())
      v18 = v24;
    else
      v18 = 0;
  }
  else
  {
    sub_1B765DE88((uint64_t)&v27, &qword_1ED53B7A0);
    v18 = 0;
  }
  v19 = a2(v18);

  if (!v19)
  {

    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    v21 = 2;
LABEL_21:
    *(_BYTE *)(a3 + 16) = v21;
    return;
  }
  v27 = 0x69726F6765746163;
  v28 = 0xEA00000000007365;
  v20 = objc_msgSend(v7, sel___swift_objectForKeyedSubscript_, sub_1B76DBEE8());
  swift_unknownObjectRelease();
  if (v20)
  {
    sub_1B76DBD50();
    swift_unknownObjectRelease();
  }
  else
  {
    v25 = 0u;
    v26 = 0u;
  }
  sub_1B765DE40((uint64_t)&v25, (uint64_t)&v27);
  if (v29)
  {
    sub_1B765DF7C(0, (unint64_t *)&qword_1ED53B440);
    if (swift_dynamicCast())
      v22 = v24;
    else
      v22 = 0;
  }
  else
  {
    sub_1B765DE88((uint64_t)&v27, &qword_1ED53B7A0);
    v22 = 0;
  }
  v23 = sub_1B7675EF4(v22);

  if (!v23)
  {
    *(_QWORD *)a3 = v19;
    *(_QWORD *)(a3 + 8) = 0;
    v21 = 1;
    goto LABEL_21;
  }
  *(_QWORD *)a3 = v23;
  *(_QWORD *)(a3 + 8) = v19;
  *(_BYTE *)(a3 + 16) = 0;
}

void sub_1B76C1CA8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t (*a6)(void *)@<X5>, uint64_t a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(void *);

  v44 = a6;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  MEMORY[0x1E0C80A78](v13, v14);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  v17 = off_1EF1775A8;
  if (off_1EF1775A8)
  {
    v18 = *(_QWORD *)(a1 + 32);
    v42 = *(_QWORD *)(a1 + 24);
    v43 = v18;
    v19 = *(unsigned __int8 *)(a1 + 82);
    if (a5)
    {
      v20 = a5;
    }
    else
    {
      a4 = *((_QWORD *)off_1EF1775A8 + 2);
      v20 = *((_QWORD *)off_1EF1775A8 + 3);
      swift_bridgeObjectRetain();
    }
    v22 = (void *)*((_QWORD *)v17 + 5);
    swift_retain();
    swift_bridgeObjectRetain();
    objc_msgSend(v22, sel_lock);
    swift_beginAccess();
    v23 = *((_QWORD *)v17 + 4);
    if (*(_QWORD *)(v23 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v24 = sub_1B76606E0(a4, v20);
      if ((v25 & 1) != 0)
      {
        v26 = v24;
        HIDWORD(v39) = v19;
        v27 = a4;
        v28 = a2;
        v29 = *(_QWORD *)(v23 + 56);
        v30 = sub_1B76DB888();
        v40 = a7;
        v41 = a3;
        v31 = v30;
        v32 = *(_QWORD *)(v30 - 8);
        v33 = v29 + *(_QWORD *)(v32 + 72) * v26;
        a2 = v28;
        a4 = v27;
        v19 = HIDWORD(v39);
        (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v16, v33, v30);
        v34 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56);
        v35 = v31;
        a7 = v40;
        a3 = v41;
        v34(v16, 0, 1, v35);
      }
      else
      {
        v37 = sub_1B76DB888();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v16, 1, 1, v37);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v36 = sub_1B76DB888();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v16, 1, 1, v36);
    }
    v38 = v42;
    objc_msgSend(*((id *)v17 + 5), sel_unlock);
    if (qword_1ED53B6B8 != -1)
      swift_once();
    v21 = sub_1B76968F0(v38, v43, (uint64_t)v16, a4, v20, a2, a3, v19);
    swift_bridgeObjectRelease();
    sub_1B765DE88((uint64_t)v16, &qword_1EF1774C0);
    swift_release();
  }
  else
  {
    v21 = 0;
  }
  sub_1B76C18A4(v21, v44, a7);

}

uint64_t sub_1B76C1F7C(unint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int64_t v37;
  uint64_t result;
  unint64_t v39;
  unint64_t v40;
  int64_t v41;
  unint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54[2];
  uint64_t v55;

  v52 = a2;
  v53 = a3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EF177160 != -1)
LABEL_45:
    swift_once();
  swift_beginAccess();
  v12 = off_1EF1775A8;
  if (off_1EF1775A8)
  {
    v14 = *(_QWORD *)(a1 + 8);
    v13 = *(_QWORD *)(a1 + 16);
    v15 = *(unsigned __int8 *)(a1 + 66);
    if (a5)
    {
      v16 = (uint64_t)a5;
    }
    else
    {
      a4 = *((_QWORD *)off_1EF1775A8 + 2);
      v16 = *((_QWORD *)off_1EF1775A8 + 3);
      swift_bridgeObjectRetain();
    }
    a1 = v12[5];
    swift_retain();
    swift_bridgeObjectRetain();
    objc_msgSend((id)a1, sel_lock);
    swift_beginAccess();
    v18 = v12[4];
    if (*(_QWORD *)(v18 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v19 = sub_1B76606E0(a4, v16);
      if ((v20 & 1) != 0)
      {
        a1 = v19;
        v21 = v14;
        v22 = *(_QWORD *)(v18 + 56);
        v23 = sub_1B76DB888();
        v50 = v15;
        v24 = v23;
        v51 = a4;
        v25 = *(_QWORD *)(v23 - 8);
        v26 = v22 + *(_QWORD *)(v25 + 72) * a1;
        v14 = v21;
        (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v11, v26, v23);
        v27 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56);
        a4 = v51;
        v28 = v24;
        v15 = v50;
        v27(v11, 0, 1, v28);
      }
      else
      {
        v30 = sub_1B76DB888();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v11, 1, 1, v30);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v29 = sub_1B76DB888();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v11, 1, 1, v29);
    }
    objc_msgSend((id)v12[5], sel_unlock);
    if (qword_1ED53B6B8 != -1)
      swift_once();
    a5 = (uint64_t *)qword_1ED53B6B0;
    v17 = sub_1B76968F0(v14, v13, (uint64_t)v11, a4, v16, (uint64_t)v52, v53, v15);
    swift_bridgeObjectRelease();
    sub_1B765DE88((uint64_t)v11, &qword_1EF1774C0);
    swift_release();
  }
  else
  {
    v17 = 0;
  }
  v31 = sub_1B7675660(v17);
  if (!v31)
  {

    return 0;
  }
  v32 = v31;
  v52 = v17;
  v55 = MEMORY[0x1E0DEE9E8];
  v33 = *(_QWORD *)(v31 + 56);
  v53 = v31 + 56;
  v34 = 1 << *(_BYTE *)(v31 + 32);
  v35 = -1;
  if (v34 < 64)
    v35 = ~(-1 << v34);
  v36 = v35 & v33;
  v37 = (unint64_t)(v34 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  a4 = 0;
  while (v36)
  {
    v39 = __clz(__rbit64(v36));
    v36 &= v36 - 1;
    v40 = v39 | (a4 << 6);
LABEL_40:
    v44 = *(_QWORD *)(v32 + 48);
    v45 = v44 + 48 * v40;
    v46 = *(_QWORD *)(v45 + 24);
    if (v46 >> 60 != 15)
    {
      v47 = v44 + 48 * v40;
      v11 = *(char **)(v47 + 40);
      v48 = *(_QWORD *)(v45 + 16);
      a1 = *(_QWORD *)(v47 + 8);
      swift_bridgeObjectRetain();
      sub_1B765DF08(v48, v46);
      swift_bridgeObjectRetain();
      sub_1B765DF08(v48, v46);
      a5 = &v55;
      sub_1B76817BC(v54, v48, v46);
      sub_1B765DEC4(v54[0], v54[1]);
      swift_bridgeObjectRelease();
      sub_1B765DF1C(v48, v46);
      result = swift_bridgeObjectRelease();
    }
  }
  v41 = a4 + 1;
  if (__OFADD__(a4, 1))
  {
    __break(1u);
    goto LABEL_45;
  }
  if (v41 >= v37)
    goto LABEL_42;
  v42 = *(_QWORD *)(v53 + 8 * v41);
  ++a4;
  if (v42)
    goto LABEL_39;
  a4 = v41 + 1;
  if (v41 + 1 >= v37)
    goto LABEL_42;
  v42 = *(_QWORD *)(v53 + 8 * a4);
  if (v42)
    goto LABEL_39;
  a4 = v41 + 2;
  if (v41 + 2 >= v37)
    goto LABEL_42;
  v42 = *(_QWORD *)(v53 + 8 * a4);
  if (v42)
    goto LABEL_39;
  a4 = v41 + 3;
  if (v41 + 3 >= v37)
    goto LABEL_42;
  v42 = *(_QWORD *)(v53 + 8 * a4);
  if (v42)
    goto LABEL_39;
  a4 = v41 + 4;
  if (v41 + 4 >= v37)
    goto LABEL_42;
  v42 = *(_QWORD *)(v53 + 8 * a4);
  if (v42)
  {
LABEL_39:
    v36 = (v42 - 1) & v42;
    v40 = __clz(__rbit64(v42)) + (a4 << 6);
    goto LABEL_40;
  }
  v43 = v41 + 5;
  if (v43 >= v37)
  {
LABEL_42:
    swift_release();

    swift_bridgeObjectRelease();
    return v55;
  }
  v42 = *(_QWORD *)(v53 + 8 * v43);
  if (v42)
  {
    a4 = v43;
    goto LABEL_39;
  }
  while (1)
  {
    a4 = v43 + 1;
    if (__OFADD__(v43, 1))
      break;
    if (a4 >= v37)
      goto LABEL_42;
    v42 = *(_QWORD *)(v53 + 8 * a4);
    ++v43;
    if (v42)
      goto LABEL_39;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B76C2428(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int64_t v37;
  uint64_t result;
  int64_t v39;
  unint64_t v40;
  unint64_t v41;
  int64_t v42;
  unint64_t v43;
  int64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  int v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52[2];
  uint64_t v53;

  v50 = a2;
  v51 = a3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EF177160 != -1)
LABEL_45:
    swift_once();
  swift_beginAccess();
  v12 = off_1EF1775A8;
  if (off_1EF1775A8)
  {
    v14 = *(_QWORD *)(a1 + 8);
    v13 = *(_QWORD *)(a1 + 16);
    v15 = *(unsigned __int8 *)(a1 + 66);
    if (a5)
    {
      v16 = (uint64_t)a5;
    }
    else
    {
      a4 = (void *)*((_QWORD *)off_1EF1775A8 + 2);
      v16 = *((_QWORD *)off_1EF1775A8 + 3);
      swift_bridgeObjectRetain();
    }
    v17 = (void *)*((_QWORD *)v12 + 5);
    swift_retain();
    swift_bridgeObjectRetain();
    objc_msgSend(v17, sel_lock);
    swift_beginAccess();
    v18 = *((_QWORD *)v12 + 4);
    if (*(_QWORD *)(v18 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v19 = sub_1B76606E0((uint64_t)a4, v16);
      if ((v20 & 1) != 0)
      {
        v21 = v19;
        v22 = v14;
        v23 = *(_QWORD *)(v18 + 56);
        v24 = sub_1B76DB888();
        v48 = v15;
        v25 = v24;
        v49 = a4;
        v26 = *(_QWORD *)(v24 - 8);
        v27 = v23 + *(_QWORD *)(v26 + 72) * v21;
        v14 = v22;
        (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v11, v27, v24);
        v28 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56);
        a4 = v49;
        v29 = v25;
        v15 = v48;
        v28(v11, 0, 1, v29);
      }
      else
      {
        v31 = sub_1B76DB888();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v11, 1, 1, v31);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v30 = sub_1B76DB888();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v11, 1, 1, v30);
    }
    objc_msgSend(*((id *)v12 + 5), sel_unlock);
    if (qword_1ED53B6B8 != -1)
      swift_once();
    a5 = (uint64_t *)qword_1ED53B6B0;
    a4 = sub_1B76968F0(v14, v13, (uint64_t)v11, (uint64_t)a4, v16, v50, v51, v15);
    swift_bridgeObjectRelease();
    sub_1B765DE88((uint64_t)v11, &qword_1EF1774C0);
    swift_release();
  }
  else
  {
    a4 = 0;
  }
  v32 = sub_1B7675B20(a4);
  if (!v32)
  {

    return 0;
  }
  v33 = v32;
  v53 = MEMORY[0x1E0DEE9E8];
  a1 = v32 + 56;
  v34 = 1 << *(_BYTE *)(v32 + 32);
  v35 = -1;
  if (v34 < 64)
    v35 = ~(-1 << v34);
  v36 = v35 & *(_QWORD *)(v32 + 56);
  v37 = (unint64_t)(v34 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v39 = 0;
  while (v36)
  {
    v40 = __clz(__rbit64(v36));
    v36 &= v36 - 1;
    v41 = v40 | (v39 << 6);
LABEL_40:
    v45 = *(_QWORD *)(v33 + 48) + 32 * v41;
    v46 = *(_QWORD *)(v45 + 24);
    if (v46 >> 60 != 15)
    {
      v11 = *(char **)(v45 + 16);
      swift_bridgeObjectRetain();
      sub_1B765DF08((uint64_t)v11, v46);
      sub_1B765DF08((uint64_t)v11, v46);
      a5 = &v53;
      sub_1B7681864(v52, (uint64_t)v11, v46);
      sub_1B765DEC4(v52[0], v52[1]);
      swift_bridgeObjectRelease();
      result = sub_1B765DF1C((uint64_t)v11, v46);
    }
  }
  v42 = v39 + 1;
  if (__OFADD__(v39, 1))
  {
    __break(1u);
    goto LABEL_45;
  }
  if (v42 >= v37)
    goto LABEL_42;
  v43 = *(_QWORD *)(a1 + 8 * v42);
  ++v39;
  if (v43)
    goto LABEL_39;
  v39 = v42 + 1;
  if (v42 + 1 >= v37)
    goto LABEL_42;
  v43 = *(_QWORD *)(a1 + 8 * v39);
  if (v43)
    goto LABEL_39;
  v39 = v42 + 2;
  if (v42 + 2 >= v37)
    goto LABEL_42;
  v43 = *(_QWORD *)(a1 + 8 * v39);
  if (v43)
    goto LABEL_39;
  v39 = v42 + 3;
  if (v42 + 3 >= v37)
    goto LABEL_42;
  v43 = *(_QWORD *)(a1 + 8 * v39);
  if (v43)
    goto LABEL_39;
  v39 = v42 + 4;
  if (v42 + 4 >= v37)
    goto LABEL_42;
  v43 = *(_QWORD *)(a1 + 8 * v39);
  if (v43)
  {
LABEL_39:
    v36 = (v43 - 1) & v43;
    v41 = __clz(__rbit64(v43)) + (v39 << 6);
    goto LABEL_40;
  }
  v44 = v42 + 5;
  if (v44 >= v37)
  {
LABEL_42:
    swift_release();

    swift_bridgeObjectRelease();
    return v53;
  }
  v43 = *(_QWORD *)(a1 + 8 * v44);
  if (v43)
  {
    v39 = v44;
    goto LABEL_39;
  }
  while (1)
  {
    v39 = v44 + 1;
    if (__OFADD__(v44, 1))
      break;
    if (v39 >= v37)
      goto LABEL_42;
    v43 = *(_QWORD *)(a1 + 8 * v39);
    ++v44;
    if (v43)
      goto LABEL_39;
  }
  __break(1u);
  return result;
}

void sub_1B76C2894(uint64_t a1, int64_t a2, uint64_t a3, _QWORD *a4, int64_t a5, unint64_t a6)
{
  unint64_t v6;
  int64_t v7;
  _QWORD *v8;
  int64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v31;
  uint64_t v32[2];
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  unint64_t v38;
  _QWORD v39[3];

  v6 = a6;
  v7 = a5;
  v8 = a4;
  v9 = a2;
  v10 = (_QWORD *)a1;
  if (a1)
  {
    v35 = MEMORY[0x1E0DEE9E8];
    v31 = a1 + 56;
    v11 = 1 << *(_BYTE *)(a1 + 32);
    v12 = -1;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    v6 = v12 & *(_QWORD *)(a1 + 56);
    v9 = (unint64_t)(v11 + 63) >> 6;
    v8 = v39;
    swift_bridgeObjectRetain_n();
    v7 = 0;
    while (1)
    {
      if (v6)
      {
        v13 = __clz(__rbit64(v6));
        v6 &= v6 - 1;
        v14 = v13 | (v7 << 6);
      }
      else
      {
        v20 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
          __break(1u);
          goto LABEL_32;
        }
        if (v20 >= v9)
          goto LABEL_26;
        v21 = *(_QWORD *)(v31 + 8 * v20);
        ++v7;
        if (!v21)
        {
          v7 = v20 + 1;
          if (v20 + 1 >= v9)
            goto LABEL_26;
          v21 = *(_QWORD *)(v31 + 8 * v7);
          if (!v21)
          {
            v7 = v20 + 2;
            if (v20 + 2 >= v9)
              goto LABEL_26;
            v21 = *(_QWORD *)(v31 + 8 * v7);
            if (!v21)
            {
              v7 = v20 + 3;
              if (v20 + 3 >= v9)
                goto LABEL_26;
              v21 = *(_QWORD *)(v31 + 8 * v7);
              if (!v21)
              {
                v7 = v20 + 4;
                if (v20 + 4 >= v9)
                  goto LABEL_26;
                v21 = *(_QWORD *)(v31 + 8 * v7);
                if (!v21)
                {
                  v22 = v20 + 5;
                  if (v22 >= v9)
                  {
LABEL_26:
                    swift_release();
                    swift_bridgeObjectRelease();
                    v10 = (_QWORD *)sub_1B7665174(v35);
                    swift_bridgeObjectRelease();
                    v7 = a5;
                    v6 = a6;
                    v8 = a4;
                    v9 = a2;
                    break;
                  }
                  v21 = *(_QWORD *)(v31 + 8 * v22);
                  if (!v21)
                  {
                    while (1)
                    {
                      v7 = v22 + 1;
                      if (__OFADD__(v22, 1))
                        break;
                      if (v7 >= v9)
                        goto LABEL_26;
                      v21 = *(_QWORD *)(v31 + 8 * v7);
                      ++v22;
                      if (v21)
                        goto LABEL_25;
                    }
                    __break(1u);
                    return;
                  }
                  v7 = v22;
                }
              }
            }
          }
        }
LABEL_25:
        v6 = (v21 - 1) & v21;
        v14 = __clz(__rbit64(v21)) + (v7 << 6);
      }
      v15 = (uint64_t *)(v10[6] + 16 * v14);
      v16 = *v15;
      v17 = v15[1];
      v36 = 0uLL;
      v37 = v16;
      v38 = v17;
      v39[0] = 0;
      v39[1] = 0;
      sub_1B765DDFC(v16, v17);
      sub_1B765DDFC(v16, v17);
      sub_1B767E11C((uint64_t)v32, &v36);
      v18 = v33;
      v19 = v34;
      swift_bridgeObjectRelease();
      sub_1B765DF1C(v18, v19);
      swift_bridgeObjectRelease();
      sub_1B765DEC4(v16, v17);
    }
  }
  if (qword_1EF177160 != -1)
LABEL_32:
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    v23 = *(_QWORD *)(v9 + 8);
    v24 = *(_QWORD *)(v9 + 16);
    v32[0] = a3;
    v32[1] = (uint64_t)v8;
    v33 = v7;
    v34 = v6;
    v25 = *(unsigned __int8 *)(v9 + 66);
    swift_retain();
    sub_1B765ED7C(v10, v23, v24, v32, v25);
    swift_release();
  }

}

void sub_1B76C2B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int64_t a5, unint64_t a6)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v31[2];
  int64_t v32;
  unint64_t v33;
  uint64_t v34;

  v6 = a6;
  v7 = a5;
  v8 = a4;
  v10 = (_QWORD *)a1;
  if (a1)
  {
    v34 = MEMORY[0x1E0DEE9E8];
    v6 = a1 + 56;
    v11 = 1 << *(_BYTE *)(a1 + 32);
    v12 = -1;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    v13 = v12 & *(_QWORD *)(a1 + 56);
    v7 = (unint64_t)(v11 + 63) >> 6;
    swift_bridgeObjectRetain_n();
    v8 = 0;
    while (1)
    {
      if (v13)
      {
        v14 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v15 = v14 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
          __break(1u);
          goto LABEL_32;
        }
        if (v21 >= v7)
          goto LABEL_26;
        v22 = *(_QWORD *)(v6 + 8 * v21);
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v7)
            goto LABEL_26;
          v22 = *(_QWORD *)(v6 + 8 * v8);
          if (!v22)
          {
            v8 = v21 + 2;
            if (v21 + 2 >= v7)
              goto LABEL_26;
            v22 = *(_QWORD *)(v6 + 8 * v8);
            if (!v22)
            {
              v8 = v21 + 3;
              if (v21 + 3 >= v7)
                goto LABEL_26;
              v22 = *(_QWORD *)(v6 + 8 * v8);
              if (!v22)
              {
                v8 = v21 + 4;
                if (v21 + 4 >= v7)
                  goto LABEL_26;
                v22 = *(_QWORD *)(v6 + 8 * v8);
                if (!v22)
                {
                  v23 = v21 + 5;
                  if (v23 >= v7)
                  {
LABEL_26:
                    swift_release();
                    swift_bridgeObjectRelease();
                    v10 = (_QWORD *)sub_1B76651A0(v34);
                    swift_bridgeObjectRelease();
                    v7 = a5;
                    v6 = a6;
                    v8 = a4;
                    break;
                  }
                  v22 = *(_QWORD *)(v6 + 8 * v23);
                  if (!v22)
                  {
                    while (1)
                    {
                      v8 = v23 + 1;
                      if (__OFADD__(v23, 1))
                        break;
                      if (v8 >= v7)
                        goto LABEL_26;
                      v22 = *(_QWORD *)(v6 + 8 * v8);
                      ++v23;
                      if (v22)
                        goto LABEL_25;
                    }
                    __break(1u);
                    return;
                  }
                  v8 = v23;
                }
              }
            }
          }
        }
LABEL_25:
        v13 = (v22 - 1) & v22;
        v15 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v16 = (uint64_t *)(v10[6] + 16 * v15);
      v17 = *v16;
      v18 = v16[1];
      sub_1B765DDFC(*v16, v18);
      sub_1B765DDFC(v17, v18);
      sub_1B767E4FC(v31, 0, 0, v17, v18);
      v19 = v32;
      v20 = v33;
      swift_bridgeObjectRelease();
      sub_1B765DF1C(v19, v20);
      sub_1B765DEC4(v17, v18);
    }
  }
  if (qword_1EF177160 != -1)
LABEL_32:
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    v24 = *(_QWORD *)(a2 + 8);
    v25 = *(_QWORD *)(a2 + 16);
    v31[0] = a3;
    v31[1] = v8;
    v32 = v7;
    v33 = v6;
    v26 = *(unsigned __int8 *)(a2 + 66);
    swift_retain();
    sub_1B765ED7C(v10, v24, v25, v31, v26);
    swift_release();
  }

}

uint64_t sub_1B76C2E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD))
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t (*v26)(_QWORD);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  MEMORY[0x1E0C80A78](v12, v13);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  v16 = off_1EF1775A8;
  if (off_1EF1775A8)
  {
    v17 = *(_QWORD *)(a1 + 16);
    v44 = *(_QWORD *)(a1 + 8);
    v45 = v17;
    v18 = *(unsigned __int8 *)(a1 + 66);
    if (a5)
    {
      v19 = a5;
    }
    else
    {
      a4 = *((_QWORD *)off_1EF1775A8 + 2);
      v19 = *((_QWORD *)off_1EF1775A8 + 3);
      swift_bridgeObjectRetain();
    }
    v21 = (void *)*((_QWORD *)v16 + 5);
    swift_retain();
    swift_bridgeObjectRetain();
    objc_msgSend(v21, sel_lock);
    swift_beginAccess();
    v22 = *((_QWORD *)v16 + 4);
    if (*(_QWORD *)(v22 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v23 = sub_1B76606E0(a4, v19);
      if ((v24 & 1) != 0)
      {
        v25 = v23;
        v42 = a4;
        v26 = a6;
        v27 = a3;
        v28 = *(_QWORD *)(v22 + 56);
        v29 = sub_1B76DB888();
        v41 = v18;
        v30 = v29;
        v43 = a2;
        v31 = *(_QWORD *)(v29 - 8);
        v32 = v28 + *(_QWORD *)(v31 + 72) * v25;
        a3 = v27;
        a6 = v26;
        a4 = v42;
        (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v15, v32, v29);
        v33 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56);
        a2 = v43;
        v34 = v30;
        v18 = v41;
        v33(v15, 0, 1, v34);
      }
      else
      {
        v36 = sub_1B76DB888();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v15, 1, 1, v36);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v35 = sub_1B76DB888();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v15, 1, 1, v35);
    }
    v37 = v44;
    objc_msgSend(*((id *)v16 + 5), sel_unlock);
    if (qword_1ED53B6B8 != -1)
      swift_once();
    v20 = sub_1B76968F0(v37, v45, (uint64_t)v15, a4, v19, a2, a3, v18);
    swift_bridgeObjectRelease();
    sub_1B765DE88((uint64_t)v15, &qword_1EF1774C0);
    swift_release();
  }
  else
  {
    v20 = 0;
  }
  v38 = a6(v20);

  return v38;
}

uint64_t sub_1B76C3100(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t *v23;
  _BYTE v24[8];
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;

  if (qword_1EF1771A8 != -1)
LABEL_32:
    swift_once();
  swift_beginAccess();
  if (qword_1EF1778A8)
  {
    v2 = a1[1];
    v3 = a1[2];
    swift_retain();
    v4 = sub_1B7667778(v2, v3);
    swift_release();
    if (v4)
    {
      v5 = v4;
      v6 = sub_1B7675660(v4);

      if (v6)
        return v6;
    }
  }
  a1 = (uint64_t *)*a1;
  v27 = MEMORY[0x1E0DEE9E8];
  v23 = a1 + 7;
  v7 = 1 << *((_BYTE *)a1 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & a1[7];
  v10 = (unint64_t)(v7 + 63) >> 6;
  result = swift_bridgeObjectRetain_n();
  v12 = 0;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v12 << 6);
      goto LABEL_9;
    }
    v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v20 >= v10)
      goto LABEL_29;
    v21 = v23[v20];
    ++v12;
    if (!v21)
    {
      v12 = v20 + 1;
      if (v20 + 1 >= v10)
        goto LABEL_29;
      v21 = v23[v12];
      if (!v21)
      {
        v12 = v20 + 2;
        if (v20 + 2 >= v10)
          goto LABEL_29;
        v21 = v23[v12];
        if (!v21)
        {
          v12 = v20 + 3;
          if (v20 + 3 >= v10)
            goto LABEL_29;
          v21 = v23[v12];
          if (!v21)
          {
            v12 = v20 + 4;
            if (v20 + 4 >= v10)
              goto LABEL_29;
            v21 = v23[v12];
            if (!v21)
              break;
          }
        }
      }
    }
LABEL_28:
    v9 = (v21 - 1) & v21;
    v14 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_9:
    v15 = (uint64_t *)(a1[6] + 16 * v14);
    v16 = *v15;
    v17 = v15[1];
    v28 = 0uLL;
    v29 = v16;
    v30 = v17;
    v31 = 0;
    v32 = 0;
    sub_1B765DDFC(v16, v17);
    sub_1B765DDFC(v16, v17);
    sub_1B767E11C((uint64_t)v24, &v28);
    v18 = v25;
    v19 = v26;
    swift_bridgeObjectRelease();
    sub_1B765DF1C(v18, v19);
    swift_bridgeObjectRelease();
    result = sub_1B765DEC4(v16, v17);
  }
  v22 = v20 + 5;
  if (v22 >= v10)
  {
LABEL_29:
    swift_release();
    swift_bridgeObjectRelease();
    return v27;
  }
  v21 = v23[v22];
  if (v21)
  {
    v12 = v22;
    goto LABEL_28;
  }
  while (1)
  {
    v12 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v12 >= v10)
      goto LABEL_29;
    v21 = v23[v12];
    ++v22;
    if (v21)
      goto LABEL_28;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B76C33B8(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24[4];
  uint64_t v25;

  if (qword_1EF1771A8 != -1)
LABEL_32:
    swift_once();
  swift_beginAccess();
  if (qword_1EF1778A8)
  {
    v2 = a1[1];
    v3 = a1[2];
    swift_retain();
    v4 = sub_1B7667778(v2, v3);
    swift_release();
    if (v4)
    {
      v5 = v4;
      v6 = sub_1B7675B20(v4);

      if (v6)
        return v6;
    }
  }
  a1 = (uint64_t *)*a1;
  v25 = MEMORY[0x1E0DEE9E8];
  v7 = a1 + 7;
  v8 = 1 << *((_BYTE *)a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & a1[7];
  v11 = (unint64_t)(v8 + 63) >> 6;
  result = swift_bridgeObjectRetain_n();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v14 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v15 = v14 | (v13 << 6);
      goto LABEL_9;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v11)
      goto LABEL_29;
    v22 = v7[v21];
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v11)
        goto LABEL_29;
      v22 = v7[v13];
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v11)
          goto LABEL_29;
        v22 = v7[v13];
        if (!v22)
        {
          v13 = v21 + 3;
          if (v21 + 3 >= v11)
            goto LABEL_29;
          v22 = v7[v13];
          if (!v22)
          {
            v13 = v21 + 4;
            if (v21 + 4 >= v11)
              goto LABEL_29;
            v22 = v7[v13];
            if (!v22)
              break;
          }
        }
      }
    }
LABEL_28:
    v10 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_9:
    v16 = (uint64_t *)(a1[6] + 16 * v15);
    v17 = *v16;
    v18 = v16[1];
    sub_1B765DDFC(*v16, v18);
    sub_1B765DDFC(v17, v18);
    sub_1B767E4FC(v24, 0, 0, v17, v18);
    v19 = v24[2];
    v20 = v24[3];
    swift_bridgeObjectRelease();
    sub_1B765DF1C(v19, v20);
    result = sub_1B765DEC4(v17, v18);
  }
  v23 = v21 + 5;
  if (v23 >= v11)
  {
LABEL_29:
    swift_release();
    swift_bridgeObjectRelease();
    return v25;
  }
  v22 = v7[v23];
  if (v22)
  {
    v13 = v23;
    goto LABEL_28;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v11)
      goto LABEL_29;
    v22 = v7[v13];
    ++v23;
    if (v22)
      goto LABEL_28;
  }
  __break(1u);
  return result;
}

ManagedSettings::ShieldSettings::Name_optional __swiftcall ShieldSettings.Name.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ManagedSettings::ShieldSettings::Name_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1B76DBE70();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static ShieldSettings.Name.allCases.getter()
{
  return &unk_1E6CAD4B8;
}

uint64_t ShieldSettings.Name.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1B76C36D8 + 4 * byte_1B76DFCB0[*v0]))(0xD000000000000013, 0x80000001B76E1BF0);
}

uint64_t sub_1B76C36D8@<X0>(uint64_t a1@<X8>)
{
  return a1 + 11;
}

void sub_1B76C373C(char *a1)
{
  sub_1B76A1354(*a1);
}

void sub_1B76C3748()
{
  char *v0;

  sub_1B76D9250(*v0);
}

void sub_1B76C3750(uint64_t a1)
{
  char *v1;

  sub_1B76D988C(a1, *v1);
}

void sub_1B76C3758(uint64_t a1)
{
  char *v1;

  sub_1B76DA2F4(a1, *v1);
}

ManagedSettings::ShieldSettings::Name_optional sub_1B76C3760(Swift::String *a1)
{
  return ShieldSettings.Name.init(rawValue:)(*a1);
}

uint64_t sub_1B76C376C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ShieldSettings.Name.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1B76C3790(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6CAD4B8;
}

uint64_t ShieldSettings.applications.getter()
{
  return sub_1B76B3818(&qword_1EF177388, (uint64_t)&xmmword_1EF1791C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B76C1F7C);
}

uint64_t ShieldSettings.applications.setter(uint64_t a1)
{
  return sub_1B76C5044(a1, &qword_1EF177388, (uint64_t)&xmmword_1EF1791C0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B76C2894);
}

uint64_t (*ShieldSettings.applications.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  a1[1] = v1;
  v3 = *(void **)v1;
  v4 = *(_QWORD *)(v1 + 8);
  v6 = *(_QWORD *)(v1 + 16);
  v5 = *(uint64_t **)(v1 + 24);
  if (qword_1EF177388 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76C1F7C((unint64_t)&xmmword_1EF1791C0, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a1 = v7;
  return sub_1B76C3898;
}

uint64_t sub_1B76C3898(uint64_t *a1, char a2)
{
  return sub_1B76C51A8(a1, a2, (uint64_t)&xmmword_1EF1791C0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B76C2894);
}

uint64_t ShieldSettings.untokenizedApplications.getter()
{
  return sub_1B76C52A0(&qword_1EF177388, (uint64_t)&xmmword_1EF1791C0, (uint64_t (*)(_QWORD))sub_1B7675660);
}

uint64_t ShieldSettings.untokenizedApplications.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v10[4];
  _BYTE v11[8];
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;

  if (qword_1EF177388 != -1)
    swift_once();
  sub_1B76638C0((uint64_t)&xmmword_1EF1791C0, (uint64_t)v11, &qword_1EF1793F0);
  v4 = *v1;
  v3 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v7 = qword_1EF177160;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 != -1)
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    swift_retain();
    if (a1)
      v8 = (void *)sub_1B7665174(a1);
    else
      v8 = 0;
    v10[0] = v4;
    v10[1] = v3;
    v10[2] = v6;
    v10[3] = v5;
    sub_1B765ED7C(v8, v12, v13, v10, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();

  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return sub_1B765DE88((uint64_t)v11, &qword_1EF1793F0);
}

uint64_t (*ShieldSettings.untokenizedApplications.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  a1[1] = (uint64_t)v1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177388 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76C2E28((uint64_t)&xmmword_1EF1791C0, v3, v4, v6, v5, (uint64_t (*)(_QWORD))sub_1B7675660);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a1 = v7;
  return sub_1B76C3AF4;
}

uint64_t sub_1B76C3AF4(uint64_t *a1, char a2)
{
  return sub_1B76C5630(a1, a2, ShieldSettings.untokenizedApplications.setter);
}

uint64_t ShieldSettings.effectiveApplications.getter()
{
  return sub_1B76B3CE4(&qword_1EF177388, (uint64_t)&xmmword_1EF1791C0, (uint64_t (*)(_QWORD))sub_1B76C3100);
}

double sub_1B76C3B24()
{
  double result;
  __int128 v1;
  _OWORD v2[3];
  __int128 v3;
  char v4;
  _BYTE v5[24];
  uint64_t v6;
  _UNKNOWN **v7;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF179458);
  v7 = &off_1E6CB05D8;
  v5[0] = 1;
  *(_QWORD *)&v1 = MEMORY[0x1E0DEE9E8];
  *((_QWORD *)&v1 + 1) = 0xD000000000000013;
  *(_QWORD *)&v2[0] = 0x80000001B76E1BF0;
  sub_1B76638C0((uint64_t)v5, (uint64_t)v2 + 8, &qword_1EF179460);
  LOWORD(v3) = 257;
  BYTE2(v3) = 0;
  *((_QWORD *)&v3 + 1) = 50;
  v4 = 0;
  sub_1B765DE88((uint64_t)v5, &qword_1EF179460);
  xmmword_1EF1791E0 = v2[1];
  unk_1EF1791F0 = v2[2];
  xmmword_1EF179200 = v3;
  byte_1EF179210 = v4;
  result = *(double *)&v1;
  xmmword_1EF1791C0 = v1;
  *(_OWORD *)algn_1EF1791D0 = v2[0];
  return result;
}

uint64_t static ShieldSettings.applications.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B76B37A0(&qword_1EF177388, (uint64_t)&xmmword_1EF1791C0, &qword_1EF1793F0, a1);
}

uint64_t ShieldSettings.applicationCategories.getter()
{
  return sub_1B76C57C0(&qword_1EF177390, (uint64_t)&qword_1EF179218, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B76591C8);
}

uint64_t ShieldSettings.applicationCategories.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[24];
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  if (*(unsigned __int8 *)(a1 + 16) > 1u)
  {
    if (*(_BYTE *)(a1 + 16) == 2)
    {
      if (qword_1EF177390 != -1)
        swift_once();
      sub_1B76638C0((uint64_t)&qword_1EF179218, (uint64_t)v42, &qword_1EF1793F8);
      v14 = *v1;
      v13 = v1[1];
      v16 = v1[2];
      v15 = v1[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v17 = (void *)sub_1B76C12B4(v3, v2, 2);
      if (qword_1EF177160 != -1)
        swift_once();
      swift_beginAccess();
      if (!off_1EF1775A8)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return sub_1B765DE88((uint64_t)v42, &qword_1EF1793F8);
      }
      v18 = v43;
      v19 = v44;
      v38 = v14;
      v39 = v13;
      v40 = v16;
      v41 = v15;
      v20 = v45;
      swift_retain();
      sub_1B765ED7C(v17, v18, v19, &v38, v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    else
    {
      if (qword_1EF177390 != -1)
        swift_once();
      sub_1B76638C0((uint64_t)&qword_1EF179218, (uint64_t)v42, &qword_1EF1793F8);
      v30 = *v1;
      v29 = v1[1];
      v32 = v1[2];
      v31 = v1[3];
      v33 = qword_1EF177160;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v33 != -1)
        swift_once();
      swift_beginAccess();
      if (!off_1EF1775A8)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return sub_1B765DE88((uint64_t)v42, &qword_1EF1793F8);
      }
      v34 = v43;
      v35 = v44;
      v38 = v30;
      v39 = v29;
      v40 = v32;
      v41 = v31;
      v36 = v45;
      swift_retain();
      sub_1B765ED7C(0, v34, v35, &v38, v36);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_release();
    return sub_1B765DE88((uint64_t)v42, &qword_1EF1793F8);
  }
  if (*(_BYTE *)(a1 + 16))
  {
    sub_1B7691698(*(_QWORD *)a1, v2, 1);
    if (qword_1EF177390 != -1)
      swift_once();
    sub_1B76638C0((uint64_t)&qword_1EF179218, (uint64_t)v42, &qword_1EF1793F8);
    v22 = *v1;
    v21 = v1[1];
    v24 = v1[2];
    v23 = v1[3];
    sub_1B76C4808(v3, v2, 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25 = (void *)sub_1B76C12B4(v3, v2, 1);
    sub_1B76C4828(v3, v2, 1);
    if (qword_1EF177160 != -1)
      swift_once();
    swift_beginAccess();
    if (off_1EF1775A8)
    {
      v26 = v43;
      v27 = v44;
      v38 = v22;
      v39 = v21;
      v40 = v24;
      v41 = v23;
      v28 = v45;
      swift_retain();
      sub_1B765ED7C(v25, v26, v27, &v38, v28);

      swift_release();
    }
    else
    {

    }
    sub_1B76C4828(v3, v2, 1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B765DE88((uint64_t)v42, &qword_1EF1793F8);
    return sub_1B76C4828(v3, v2, 1);
  }
  else
  {
    v4 = qword_1EF177390;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v4 != -1)
      swift_once();
    sub_1B76638C0((uint64_t)&qword_1EF179218, (uint64_t)v42, &qword_1EF1793F8);
    v6 = *v1;
    v5 = v1[1];
    v8 = v1[2];
    v7 = v1[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B76C4808(v3, v2, 0);
    v9 = (void *)sub_1B76C12B4(v3, v2, 0);
    sub_1B76C4828(v3, v2, 0);
    if (qword_1EF177160 != -1)
      swift_once();
    swift_beginAccess();
    if (off_1EF1775A8)
    {
      v10 = v43;
      v11 = v44;
      v38 = v6;
      v39 = v5;
      v40 = v8;
      v41 = v7;
      v12 = v45;
      swift_retain();
      sub_1B765ED7C(v9, v10, v11, &v38, v12);

      swift_release();
    }
    else
    {

    }
    sub_1B76C4828(v3, v2, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B765DE88((uint64_t)v42, &qword_1EF1793F8);
    return sub_1B76C4828(v3, v2, 0);
  }
}

uint64_t (*ShieldSettings.applicationCategories.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(a1 + 24) = v1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177390 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B76591C8((uint64_t)&qword_1EF179218, v3, v4, v6, v5, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1B76C424C;
}

uint64_t sub_1B76C424C(uint64_t *a1, char a2)
{
  return sub_1B76C61DC(a1, a2, (uint64_t (*)(_QWORD *))ShieldSettings.applicationCategories.setter, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B76C4808, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B76C4828);
}

uint64_t ShieldSettings.untokenizedApplicationCategories.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B76C428C(&qword_1EF177390, (uint64_t)&qword_1EF179218, sub_1B7675660, a1);
}

uint64_t sub_1B76C428C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void *)@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v9 = *v4;
  v8 = v4[1];
  v11 = v4[2];
  v10 = v4[3];
  if (*a1 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B76C1CA8(a2, v9, v8, v11, v10, a3, a4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

double sub_1B76C4324@<D0>(uint64_t *a1@<X0>, uint64_t *a2@<X3>, uint64_t a3@<X4>, uint64_t (*a4)(void *)@<X5>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  double result;
  __int128 v15;
  char v16;

  v9 = *a1;
  v8 = a1[1];
  v11 = a1[2];
  v10 = a1[3];
  v12 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B76C1CA8(a3, v9, v8, v11, v10, a4, (uint64_t)&v15);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  v13 = v16;
  result = *(double *)&v15;
  *(_OWORD *)a5 = v15;
  *(_BYTE *)(a5 + 16) = v13;
  return result;
}

uint64_t ShieldSettings.untokenizedApplicationCategories.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v12[4];
  _BYTE v13[24];
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (qword_1EF177390 != -1)
    swift_once();
  sub_1B76638C0((uint64_t)&qword_1EF179218, (uint64_t)v13, &qword_1EF1793F8);
  v6 = *v1;
  v5 = v1[1];
  v8 = v1[2];
  v7 = v1[3];
  v9 = qword_1EF177160;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9 != -1)
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    swift_retain();
    if (v4 == 255)
      v10 = 0;
    else
      v10 = (void *)sub_1B76C16C4(v2, v3, v4, sub_1B7665174);
    v12[0] = v6;
    v12[1] = v5;
    v12[2] = v8;
    v12[3] = v7;
    sub_1B765ED7C(v10, v14, v15, v12, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();

  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1B765DE88((uint64_t)v13, &qword_1EF1793F8);
  return sub_1B76C4828(v2, v3, v4);
}

uint64_t (*ShieldSettings.untokenizedApplicationCategories.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(a1 + 24) = v1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177390 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B76C1CA8((uint64_t)&qword_1EF179218, v3, v4, v6, v5, sub_1B7675660, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1B76C4644;
}

uint64_t sub_1B76C4644(uint64_t *a1, char a2)
{
  return sub_1B76C61DC(a1, a2, (uint64_t (*)(_QWORD *))ShieldSettings.untokenizedApplicationCategories.setter, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B76C7070, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B76C706C);
}

uint64_t ShieldSettings.effectiveApplicationCategories.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char v6;
  __int128 v8;
  unsigned __int8 v9;
  _BYTE v10[24];
  uint64_t v11;
  uint64_t v12;

  if (qword_1EF177390 != -1)
    swift_once();
  sub_1B76638C0((uint64_t)&qword_1EF179218, (uint64_t)v10, &qword_1EF1793F8);
  if (qword_1EF1771A8 != -1)
    swift_once();
  swift_beginAccess();
  if (!qword_1EF1778A8)
    goto LABEL_9;
  v2 = v11;
  v3 = v12;
  swift_retain();
  v4 = sub_1B7667778(v2, v3);
  swift_release();
  if (!v4)
    goto LABEL_9;
  v5 = v4;
  sub_1B76C18A4(v4, sub_1B7675660, (uint64_t)&v8);

  v6 = v9;
  if (v9 != 255)
  {
    *(_OWORD *)a1 = v8;
  }
  else
  {
LABEL_9:
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    v6 = 2;
  }
  *(_BYTE *)(a1 + 16) = v6;
  return sub_1B765DE88((uint64_t)v10, &qword_1EF1793F8);
}

uint64_t sub_1B76C4798()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF179450);
  qword_1EF179258 = result;
  unk_1EF179260 = &off_1E6CB0740;
  qword_1EF179218 = 0;
  unk_1EF179220 = 0;
  byte_1EF179228 = 2;
  qword_1EF179230 = 0xD00000000000001CLL;
  unk_1EF179238 = 0x80000001B76E1C10;
  word_1EF179268 = 257;
  byte_1EF17926A = 0;
  qword_1EF179270 = 0;
  byte_1EF179278 = 1;
  return result;
}

uint64_t sub_1B76C4808(uint64_t result, uint64_t a2, char a3)
{
  if (a3 != -1)
    return sub_1B7691698(result, a2, a3);
  return result;
}

uint64_t sub_1B76C4828(uint64_t result, uint64_t a2, char a3)
{
  if (a3 != -1)
    return sub_1B76916E0(result, a2, a3);
  return result;
}

uint64_t static ShieldSettings.applicationCategories.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B76B37A0(&qword_1EF177390, (uint64_t)&qword_1EF179218, &qword_1EF1793F8, a1);
}

uint64_t ShieldSettings.unshieldableApplications.getter()
{
  return sub_1B76B3818(&qword_1EF177398, (uint64_t)&xmmword_1EF179280, sub_1B7658794);
}

uint64_t ShieldSettings.unshieldableApplications.setter(uint64_t a1)
{
  sub_1B76C6890(a1);
  return swift_bridgeObjectRelease();
}

void (*ShieldSettings.unshieldableApplications.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x98uLL);
  *a1 = v3;
  v4 = v3 + 17;
  v3[18] = v1;
  v5 = *v1;
  v6 = v1[1];
  v8 = v1[2];
  v7 = v1[3];
  if (qword_1EF177398 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = sub_1B7658794((uint64_t)&xmmword_1EF179280, v5, v6, v8, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v4 = v9;
  return sub_1B76C4974;
}

void sub_1B76C4974(uint64_t *a1, char a2)
{
  sub_1B76C4BC8(a1, a2, (uint64_t)&xmmword_1EF179280, &qword_1ED53B420, sub_1B7665174);
}

uint64_t ShieldSettings.effectiveUnshieldableApplications.getter()
{
  return sub_1B76B3CE4(&qword_1EF177398, (uint64_t)&xmmword_1EF179280, sub_1B7659DBC);
}

double sub_1B76C49B4()
{
  double result;
  __int128 v1;
  _OWORD v2[3];
  __int128 v3;
  char v4;
  _BYTE v5[24];
  uint64_t v6;
  _UNKNOWN **v7;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED53B380);
  v7 = &off_1E6CB05D8;
  v5[0] = 1;
  *(_QWORD *)&v1 = MEMORY[0x1E0DEE9E8];
  *((_QWORD *)&v1 + 1) = 0xD00000000000001FLL;
  *(_QWORD *)&v2[0] = 0x80000001B76E1C30;
  sub_1B76638C0((uint64_t)v5, (uint64_t)v2 + 8, &qword_1ED53B410);
  LOWORD(v3) = 0;
  BYTE2(v3) = 0;
  *((_QWORD *)&v3 + 1) = 0x7FFFFFFFFFFFFFFFLL;
  v4 = 0;
  sub_1B765DE88((uint64_t)v5, &qword_1ED53B410);
  xmmword_1EF1792A0 = v2[1];
  unk_1EF1792B0 = v2[2];
  xmmword_1EF1792C0 = v3;
  byte_1EF1792D0 = v4;
  result = *(double *)&v1;
  xmmword_1EF179280 = v1;
  *(_OWORD *)algn_1EF179290 = v2[0];
  return result;
}

uint64_t static ShieldSettings.unshieldableApplications.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B76B37A0(&qword_1EF177398, (uint64_t)&xmmword_1EF179280, &qword_1ED53B420, a1);
}

uint64_t ShieldSettings.unshieldableWebDomains.getter()
{
  return sub_1B76B3818(&qword_1EF1773A0, (uint64_t)&xmmword_1EF1792D8, sub_1B76591E4);
}

uint64_t ShieldSettings.unshieldableWebDomains.setter(uint64_t a1)
{
  sub_1B76C6A0C(a1);
  return swift_bridgeObjectRelease();
}

void (*ShieldSettings.unshieldableWebDomains.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x98uLL);
  *a1 = v3;
  v4 = v3 + 17;
  v3[18] = v1;
  v5 = *v1;
  v6 = v1[1];
  v8 = v1[2];
  v7 = v1[3];
  if (qword_1EF1773A0 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = sub_1B76591E4((uint64_t)&xmmword_1EF1792D8, v5, v6, v8, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v4 = v9;
  return sub_1B76C4BAC;
}

void sub_1B76C4BAC(uint64_t *a1, char a2)
{
  sub_1B76C4BC8(a1, a2, (uint64_t)&xmmword_1EF1792D8, &qword_1EF179400, sub_1B76651A0);
}

void sub_1B76C4BC8(uint64_t *a1, char a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v8 = *a1;
  v9 = *(_QWORD *)(*a1 + 136);
  v10 = *(uint64_t **)(*a1 + 144);
  sub_1B76638C0(a3, *a1, a4);
  v12 = *v10;
  v11 = v10[1];
  v14 = v10[2];
  v13 = v10[3];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v9)
    {
      swift_bridgeObjectRetain();
      v15 = (void *)a5(v9);
    }
    else
    {
      v15 = 0;
    }
    if (qword_1EF177160 != -1)
      swift_once();
    swift_beginAccess();
    if (off_1EF1775A8)
    {
      v17 = v14;
      v18 = *(_QWORD *)(v8 + 8);
      v19 = *(_QWORD *)(v8 + 16);
      v25 = v12;
      v26 = v11;
      v27 = v17;
      v28 = v13;
      v20 = *(unsigned __int8 *)(v8 + 66);
      swift_retain();
      sub_1B765ED7C(v15, v18, v19, &v25, v20);
      swift_release();
    }
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    sub_1B765DE88(v8, a4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v9)
    {
      swift_bridgeObjectRetain();
      v16 = (void *)a5(v9);
      swift_bridgeObjectRelease();
    }
    else
    {
      v16 = 0;
    }
    if (qword_1EF177160 != -1)
      swift_once();
    swift_beginAccess();
    if (off_1EF1775A8)
    {
      v21 = v14;
      v22 = *(_QWORD *)(v8 + 8);
      v23 = *(_QWORD *)(v8 + 16);
      v25 = v12;
      v26 = v11;
      v27 = v21;
      v28 = v13;
      v24 = *(unsigned __int8 *)(v8 + 66);
      swift_retain();
      sub_1B765ED7C(v16, v22, v23, &v25, v24);
      swift_release();
    }
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    sub_1B765DE88(v8, a4);
  }
  swift_bridgeObjectRelease();
  free((void *)v8);
}

uint64_t ShieldSettings.effectiveUnshieldableWebDomains.getter()
{
  return sub_1B76B3CE4(&qword_1EF1773A0, (uint64_t)&xmmword_1EF1792D8, sub_1B7659F60);
}

double sub_1B76C4E58()
{
  double result;
  __int128 v1;
  _OWORD v2[3];
  __int128 v3;
  char v4;
  _BYTE v5[24];
  uint64_t v6;
  _UNKNOWN **v7;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF179440);
  v7 = &off_1E6CB05D8;
  v5[0] = 1;
  *(_QWORD *)&v1 = MEMORY[0x1E0DEE9E8];
  *((_QWORD *)&v1 + 1) = 0xD00000000000001DLL;
  *(_QWORD *)&v2[0] = 0x80000001B76E1C50;
  sub_1B76638C0((uint64_t)v5, (uint64_t)v2 + 8, &qword_1EF179448);
  LOWORD(v3) = 0;
  BYTE2(v3) = 0;
  *((_QWORD *)&v3 + 1) = 0x7FFFFFFFFFFFFFFFLL;
  v4 = 0;
  sub_1B765DE88((uint64_t)v5, &qword_1EF179448);
  xmmword_1EF1792F8 = v2[1];
  unk_1EF179308 = v2[2];
  xmmword_1EF179318 = v3;
  byte_1EF179328 = v4;
  result = *(double *)&v1;
  xmmword_1EF1792D8 = v1;
  unk_1EF1792E8 = v2[0];
  return result;
}

uint64_t static ShieldSettings.unshieldableWebDomains.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B76B37A0(&qword_1EF1773A0, (uint64_t)&xmmword_1EF1792D8, &qword_1EF179400, a1);
}

uint64_t ShieldSettings.webDomains.getter()
{
  return sub_1B76B3818(&qword_1EF1773A8, (uint64_t)&xmmword_1EF179330, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B76C2428);
}

uint64_t sub_1B76C4F6C(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v10 = *a1;
  v11 = *a5;
  swift_bridgeObjectRetain();
  if (v11 != -1)
    swift_once();
  v12 = *a2;
  v13 = a2[1];
  v15 = a2[2];
  v14 = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a7(v10, a6, v12, v13, v15, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t ShieldSettings.webDomains.setter(uint64_t a1)
{
  return sub_1B76C5044(a1, &qword_1EF1773A8, (uint64_t)&xmmword_1EF179330, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B76C2B78);
}

uint64_t sub_1B76C5044(uint64_t a1, _QWORD *a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (*a2 != -1)
    swift_once();
  v8 = *v4;
  v9 = v4[1];
  v11 = v4[2];
  v10 = v4[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a4(a1, a3, v8, v9, v11, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*ShieldSettings.webDomains.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  void *v6;
  uint64_t v7;

  a1[1] = (uint64_t)v1;
  v3 = *v1;
  v4 = v1[1];
  v6 = (void *)v1[2];
  v5 = (uint64_t *)v1[3];
  if (qword_1EF1773A8 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76C2428((uint64_t)&xmmword_1EF179330, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a1 = v7;
  return sub_1B76C5194;
}

uint64_t sub_1B76C5194(uint64_t *a1, char a2)
{
  return sub_1B76C51A8(a1, a2, (uint64_t)&xmmword_1EF179330, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B76C2B78);
}

uint64_t sub_1B76C51A8(uint64_t *a1, char a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7 = *a1;
  v6 = (uint64_t *)a1[1];
  v9 = *v6;
  v8 = v6[1];
  v11 = v6[2];
  v10 = v6[3];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a4(v7, a3, v9, v8, v11, v10);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a4(v7, a3, v9, v8, v11, v10);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t ShieldSettings.untokenizedWebDomains.getter()
{
  return sub_1B76C52A0(&qword_1EF1773A8, (uint64_t)&xmmword_1EF179330, (uint64_t (*)(_QWORD))sub_1B7675B20);
}

uint64_t sub_1B76C52A0(_QWORD *a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7 = *v3;
  v6 = v3[1];
  v9 = v3[2];
  v8 = v3[3];
  if (*a1 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = sub_1B76C2E28(a2, v7, v6, v9, v8, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1B76C5334@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X3>, uint64_t a3@<X4>, uint64_t (*a4)(_QWORD)@<X5>, uint64_t *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  v9 = *a1;
  v8 = a1[1];
  v11 = a1[2];
  v10 = a1[3];
  v12 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = sub_1B76C2E28(a3, v9, v8, v11, v10, a4);
  swift_bridgeObjectRelease_n();
  result = swift_bridgeObjectRelease_n();
  *a5 = v13;
  return result;
}

uint64_t ShieldSettings.untokenizedWebDomains.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v10[4];
  _BYTE v11[8];
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;

  if (qword_1EF1773A8 != -1)
    swift_once();
  sub_1B76638C0((uint64_t)&xmmword_1EF179330, (uint64_t)v11, &qword_1EF179408);
  v4 = *v1;
  v3 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v7 = qword_1EF177160;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 != -1)
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    swift_retain();
    if (a1)
      v8 = (void *)sub_1B76651A0(a1);
    else
      v8 = 0;
    v10[0] = v4;
    v10[1] = v3;
    v10[2] = v6;
    v10[3] = v5;
    sub_1B765ED7C(v8, v12, v13, v10, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();

  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return sub_1B765DE88((uint64_t)v11, &qword_1EF179408);
}

uint64_t (*ShieldSettings.untokenizedWebDomains.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  a1[1] = (uint64_t)v1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF1773A8 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76C2E28((uint64_t)&xmmword_1EF179330, v3, v4, v6, v5, (uint64_t (*)(_QWORD))sub_1B7675B20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a1 = v7;
  return sub_1B76C5624;
}

uint64_t sub_1B76C5624(uint64_t *a1, char a2)
{
  return sub_1B76C5630(a1, a2, ShieldSettings.untokenizedWebDomains.setter);
}

uint64_t sub_1B76C5630(uint64_t *a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;

  if ((a2 & 1) == 0)
    return a3(*a1);
  v4 = swift_bridgeObjectRetain();
  a3(v4);
  return swift_bridgeObjectRelease();
}

uint64_t ShieldSettings.effectiveWebDomains.getter()
{
  return sub_1B76B3CE4(&qword_1EF1773A8, (uint64_t)&xmmword_1EF179330, (uint64_t (*)(_QWORD))sub_1B76C33B8);
}

double sub_1B76C56A8()
{
  double result;
  __int128 v1;
  _OWORD v2[3];
  __int128 v3;
  char v4;
  _BYTE v5[24];
  uint64_t v6;
  _UNKNOWN **v7;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF179430);
  v7 = &off_1E6CB05D8;
  v5[0] = 1;
  *(_QWORD *)&v1 = MEMORY[0x1E0DEE9E8];
  *((_QWORD *)&v1 + 1) = 0xD000000000000011;
  *(_QWORD *)&v2[0] = 0x80000001B76E1C70;
  sub_1B76638C0((uint64_t)v5, (uint64_t)v2 + 8, &qword_1EF179438);
  LOWORD(v3) = 257;
  BYTE2(v3) = 0;
  *((_QWORD *)&v3 + 1) = 50;
  v4 = 0;
  sub_1B765DE88((uint64_t)v5, &qword_1EF179438);
  xmmword_1EF179350 = v2[1];
  unk_1EF179360 = v2[2];
  xmmword_1EF179370 = v3;
  byte_1EF179380 = v4;
  result = *(double *)&v1;
  xmmword_1EF179330 = v1;
  unk_1EF179340 = v2[0];
  return result;
}

uint64_t static ShieldSettings.webDomains.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B76B37A0(&qword_1EF1773A8, (uint64_t)&xmmword_1EF179330, &qword_1EF179408, a1);
}

uint64_t ShieldSettings.webDomainCategories.getter()
{
  return sub_1B76C57C0(&qword_1EF1773B0, (uint64_t)&qword_1EF179388, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B7659200);
}

uint64_t sub_1B76C57C0(_QWORD *a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = *v3;
  v7 = v3[1];
  v9 = v3[2];
  v8 = v3[3];
  if (*a1 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a3(a2, v6, v7, v9, v8);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

double sub_1B76C5854@<D0>(uint64_t *a1@<X0>, uint64_t *a2@<X3>, uint64_t a3@<X4>, void (*a4)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X5>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  double result;
  __int128 v15;
  char v16;

  v9 = *a1;
  v8 = a1[1];
  v11 = a1[2];
  v10 = a1[3];
  v12 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a4(&v15, a3, v9, v8, v11, v10);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  v13 = v16;
  result = *(double *)&v15;
  *(_OWORD *)a5 = v15;
  *(_BYTE *)(a5 + 16) = v13;
  return result;
}

uint64_t ShieldSettings.webDomainCategories.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[24];
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  if (*(unsigned __int8 *)(a1 + 16) > 1u)
  {
    if (*(_BYTE *)(a1 + 16) == 2)
    {
      if (qword_1EF1773B0 != -1)
        swift_once();
      sub_1B76638C0((uint64_t)&qword_1EF179388, (uint64_t)v42, &qword_1EF179410);
      v14 = *v1;
      v13 = v1[1];
      v16 = v1[2];
      v15 = v1[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v17 = (void *)sub_1B76C14D4(v3, v2, 2);
      if (qword_1EF177160 != -1)
        swift_once();
      swift_beginAccess();
      if (!off_1EF1775A8)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return sub_1B765DE88((uint64_t)v42, &qword_1EF179410);
      }
      v18 = v43;
      v19 = v44;
      v38 = v14;
      v39 = v13;
      v40 = v16;
      v41 = v15;
      v20 = v45;
      swift_retain();
      sub_1B765ED7C(v17, v18, v19, &v38, v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    else
    {
      if (qword_1EF1773B0 != -1)
        swift_once();
      sub_1B76638C0((uint64_t)&qword_1EF179388, (uint64_t)v42, &qword_1EF179410);
      v30 = *v1;
      v29 = v1[1];
      v32 = v1[2];
      v31 = v1[3];
      v33 = qword_1EF177160;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v33 != -1)
        swift_once();
      swift_beginAccess();
      if (!off_1EF1775A8)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return sub_1B765DE88((uint64_t)v42, &qword_1EF179410);
      }
      v34 = v43;
      v35 = v44;
      v38 = v30;
      v39 = v29;
      v40 = v32;
      v41 = v31;
      v36 = v45;
      swift_retain();
      sub_1B765ED7C(0, v34, v35, &v38, v36);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_release();
    return sub_1B765DE88((uint64_t)v42, &qword_1EF179410);
  }
  if (*(_BYTE *)(a1 + 16))
  {
    sub_1B7691698(*(_QWORD *)a1, v2, 1);
    if (qword_1EF1773B0 != -1)
      swift_once();
    sub_1B76638C0((uint64_t)&qword_1EF179388, (uint64_t)v42, &qword_1EF179410);
    v22 = *v1;
    v21 = v1[1];
    v24 = v1[2];
    v23 = v1[3];
    sub_1B76C4808(v3, v2, 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25 = (void *)sub_1B76C14D4(v3, v2, 1);
    sub_1B76C4828(v3, v2, 1);
    if (qword_1EF177160 != -1)
      swift_once();
    swift_beginAccess();
    if (off_1EF1775A8)
    {
      v26 = v43;
      v27 = v44;
      v38 = v22;
      v39 = v21;
      v40 = v24;
      v41 = v23;
      v28 = v45;
      swift_retain();
      sub_1B765ED7C(v25, v26, v27, &v38, v28);

      swift_release();
    }
    else
    {

    }
    sub_1B76C4828(v3, v2, 1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B765DE88((uint64_t)v42, &qword_1EF179410);
    return sub_1B76C4828(v3, v2, 1);
  }
  else
  {
    v4 = qword_1EF1773B0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v4 != -1)
      swift_once();
    sub_1B76638C0((uint64_t)&qword_1EF179388, (uint64_t)v42, &qword_1EF179410);
    v6 = *v1;
    v5 = v1[1];
    v8 = v1[2];
    v7 = v1[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B76C4808(v3, v2, 0);
    v9 = (void *)sub_1B76C14D4(v3, v2, 0);
    sub_1B76C4828(v3, v2, 0);
    if (qword_1EF177160 != -1)
      swift_once();
    swift_beginAccess();
    if (off_1EF1775A8)
    {
      v10 = v43;
      v11 = v44;
      v38 = v6;
      v39 = v5;
      v40 = v8;
      v41 = v7;
      v12 = v45;
      swift_retain();
      sub_1B765ED7C(v9, v10, v11, &v38, v12);

      swift_release();
    }
    else
    {

    }
    sub_1B76C4828(v3, v2, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B765DE88((uint64_t)v42, &qword_1EF179410);
    return sub_1B76C4828(v3, v2, 0);
  }
}

uint64_t (*ShieldSettings.webDomainCategories.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(a1 + 24) = v1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF1773B0 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B7659200((uint64_t)&qword_1EF179388, v3, v4, v6, v5, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1B76C5F40;
}

uint64_t sub_1B76C5F40(uint64_t *a1, char a2)
{
  return sub_1B76C61DC(a1, a2, (uint64_t (*)(_QWORD *))ShieldSettings.webDomainCategories.setter, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B76C7070, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B76C706C);
}

uint64_t ShieldSettings.untokenizedWebDomainCategories.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B76C428C(&qword_1EF1773B0, (uint64_t)&qword_1EF179388, sub_1B7675B20, a1);
}

uint64_t ShieldSettings.untokenizedWebDomainCategories.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v12[4];
  _BYTE v13[24];
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (qword_1EF1773B0 != -1)
    swift_once();
  sub_1B76638C0((uint64_t)&qword_1EF179388, (uint64_t)v13, &qword_1EF179410);
  v6 = *v1;
  v5 = v1[1];
  v8 = v1[2];
  v7 = v1[3];
  v9 = qword_1EF177160;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9 != -1)
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    swift_retain();
    if (v4 == 255)
      v10 = 0;
    else
      v10 = (void *)sub_1B76C16C4(v2, v3, v4, sub_1B76651A0);
    v12[0] = v6;
    v12[1] = v5;
    v12[2] = v8;
    v12[3] = v7;
    sub_1B765ED7C(v10, v14, v15, v12, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();

  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1B765DE88((uint64_t)v13, &qword_1EF179410);
  return sub_1B76C4828(v2, v3, v4);
}

uint64_t (*ShieldSettings.untokenizedWebDomainCategories.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(a1 + 24) = v1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF1773B0 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B76C1CA8((uint64_t)&qword_1EF179388, v3, v4, v6, v5, sub_1B7675B20, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1B76C61C0;
}

uint64_t sub_1B76C61C0(uint64_t *a1, char a2)
{
  return sub_1B76C61DC(a1, a2, (uint64_t (*)(_QWORD *))ShieldSettings.untokenizedWebDomainCategories.setter, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B76C7070, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B76C706C);
}

uint64_t sub_1B76C61DC(uint64_t *a1, char a2, uint64_t (*a3)(_QWORD *), void (*a4)(uint64_t, uint64_t, uint64_t), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v11[2];
  char v12;

  v7 = *a1;
  v6 = a1[1];
  v8 = *((unsigned __int8 *)a1 + 16);
  v11[0] = *a1;
  v11[1] = v6;
  v12 = v8;
  if ((a2 & 1) == 0)
    return a3(v11);
  a4(v7, v6, v8);
  a3(v11);
  return a5(v7, v6, v8);
}

uint64_t ShieldSettings.effectiveWebDomainCategories.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char v6;
  __int128 v8;
  unsigned __int8 v9;
  _BYTE v10[24];
  uint64_t v11;
  uint64_t v12;

  if (qword_1EF1773B0 != -1)
    swift_once();
  sub_1B76638C0((uint64_t)&qword_1EF179388, (uint64_t)v10, &qword_1EF179410);
  if (qword_1EF1771A8 != -1)
    swift_once();
  swift_beginAccess();
  if (!qword_1EF1778A8)
    goto LABEL_9;
  v2 = v11;
  v3 = v12;
  swift_retain();
  v4 = sub_1B7667778(v2, v3);
  swift_release();
  if (!v4)
    goto LABEL_9;
  v5 = v4;
  sub_1B76C18A4(v4, sub_1B7675B20, (uint64_t)&v8);

  v6 = v9;
  if (v9 != 255)
  {
    *(_OWORD *)a1 = v8;
  }
  else
  {
LABEL_9:
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    v6 = 2;
  }
  *(_BYTE *)(a1 + 16) = v6;
  return sub_1B765DE88((uint64_t)v10, &qword_1EF179410);
}

uint64_t sub_1B76C63B4()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178268);
  qword_1EF1793C8 = result;
  unk_1EF1793D0 = &off_1E6CB0740;
  qword_1EF179388 = 0;
  unk_1EF179390 = 0;
  byte_1EF179398 = 2;
  qword_1EF1793A0 = 0xD00000000000001ALL;
  unk_1EF1793A8 = 0x80000001B76E1C90;
  word_1EF1793D8 = 257;
  byte_1EF1793DA = 0;
  qword_1EF1793E0 = 0;
  byte_1EF1793E8 = 1;
  return result;
}

uint64_t static ShieldSettings.webDomainCategories.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B76B37A0(&qword_1EF1773B0, (uint64_t)&qword_1EF179388, &qword_1EF179410, a1);
}

uint64_t sub_1B76C6448(uint64_t a1, void (*a2)(_BYTE *, _QWORD *), void (*a3)(uint64_t, uint64_t), uint64_t (*a4)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v23;
  int64_t v24;
  _BYTE v26[8];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[6];

  v29 = MEMORY[0x1E0DEE9E8];
  v23 = a1 + 56;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 56);
  v24 = (unint64_t)(v6 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v18 >= v24)
      goto LABEL_25;
    v19 = *(_QWORD *)(v23 + 8 * v18);
    ++v10;
    if (!v19)
    {
      v10 = v18 + 1;
      if (v18 + 1 >= v24)
        goto LABEL_25;
      v19 = *(_QWORD *)(v23 + 8 * v10);
      if (!v19)
      {
        v10 = v18 + 2;
        if (v18 + 2 >= v24)
          goto LABEL_25;
        v19 = *(_QWORD *)(v23 + 8 * v10);
        if (!v19)
        {
          v10 = v18 + 3;
          if (v18 + 3 >= v24)
            goto LABEL_25;
          v19 = *(_QWORD *)(v23 + 8 * v10);
          if (!v19)
          {
            v10 = v18 + 4;
            if (v18 + 4 >= v24)
              goto LABEL_25;
            v19 = *(_QWORD *)(v23 + 8 * v10);
            if (!v19)
              break;
          }
        }
      }
    }
LABEL_24:
    v8 = (v19 - 1) & v19;
    v12 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_5:
    v13 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v14 = *v13;
    v15 = v13[1];
    v30[0] = 0;
    v30[1] = 0;
    v30[2] = v14;
    v30[3] = v15;
    v30[4] = 0;
    v30[5] = 0;
    sub_1B765DDFC(v14, v15);
    sub_1B765DDFC(v14, v15);
    a2(v26, v30);
    v16 = v27;
    v17 = v28;
    swift_bridgeObjectRelease();
    a3(v16, v17);
    swift_bridgeObjectRelease();
    result = sub_1B765DEC4(v14, v15);
  }
  v20 = v18 + 5;
  if (v20 >= v24)
  {
LABEL_25:
    swift_release();
    v21 = a4(v29);
    swift_bridgeObjectRelease();
    return v21;
  }
  v19 = *(_QWORD *)(v23 + 8 * v20);
  if (v19)
  {
    v10 = v20;
    goto LABEL_24;
  }
  while (1)
  {
    v10 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v10 >= v24)
      goto LABEL_25;
    v19 = *(_QWORD *)(v23 + 8 * v10);
    ++v20;
    if (v19)
      goto LABEL_24;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1B76C66A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20[4];
  uint64_t v21;

  v21 = MEMORY[0x1E0DEE9E8];
  v2 = a1 + 56;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    v16 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v16 >= v6)
      goto LABEL_25;
    v17 = *(_QWORD *)(v2 + 8 * v16);
    ++v8;
    if (!v17)
    {
      v8 = v16 + 1;
      if (v16 + 1 >= v6)
        goto LABEL_25;
      v17 = *(_QWORD *)(v2 + 8 * v8);
      if (!v17)
      {
        v8 = v16 + 2;
        if (v16 + 2 >= v6)
          goto LABEL_25;
        v17 = *(_QWORD *)(v2 + 8 * v8);
        if (!v17)
        {
          v8 = v16 + 3;
          if (v16 + 3 >= v6)
            goto LABEL_25;
          v17 = *(_QWORD *)(v2 + 8 * v8);
          if (!v17)
          {
            v8 = v16 + 4;
            if (v16 + 4 >= v6)
              goto LABEL_25;
            v17 = *(_QWORD *)(v2 + 8 * v8);
            if (!v17)
              break;
          }
        }
      }
    }
LABEL_24:
    v5 = (v17 - 1) & v17;
    v10 = __clz(__rbit64(v17)) + (v8 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    sub_1B765DDFC(*v11, v13);
    sub_1B765DDFC(v12, v13);
    sub_1B767E4FC(v20, 0, 0, v12, v13);
    v14 = v20[2];
    v15 = v20[3];
    swift_bridgeObjectRelease();
    sub_1B765DF1C(v14, v15);
    result = sub_1B765DEC4(v12, v13);
  }
  v18 = v16 + 5;
  if (v18 >= v6)
  {
LABEL_25:
    swift_release();
    v19 = sub_1B76651A0(v21);
    swift_bridgeObjectRelease();
    return v19;
  }
  v17 = *(_QWORD *)(v2 + 8 * v18);
  if (v17)
  {
    v8 = v18;
    goto LABEL_24;
  }
  while (1)
  {
    v8 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v8 >= v6)
      goto LABEL_25;
    v17 = *(_QWORD *)(v2 + 8 * v8);
    ++v18;
    if (v17)
      goto LABEL_24;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1B76C6890(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v12[4];
  _BYTE v13[8];
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;

  if (qword_1EF177398 != -1)
    swift_once();
  sub_1B76638C0((uint64_t)&xmmword_1EF179280, (uint64_t)v13, &qword_1ED53B420);
  v4 = *v1;
  v3 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (a1)
  {
    swift_bridgeObjectRetain();
    v7 = (void *)sub_1B7665174(a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    v8 = v14;
    v9 = v15;
    v12[0] = v4;
    v12[1] = v3;
    v12[2] = v6;
    v12[3] = v5;
    v10 = v16;
    swift_retain();
    sub_1B765ED7C(v7, v8, v9, v12, v10);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  return sub_1B765DE88((uint64_t)v13, &qword_1ED53B420);
}

uint64_t sub_1B76C6A0C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v12[4];
  _BYTE v13[8];
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;

  if (qword_1EF1773A0 != -1)
    swift_once();
  sub_1B76638C0((uint64_t)&xmmword_1EF1792D8, (uint64_t)v13, &qword_1EF179400);
  v4 = *v1;
  v3 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (a1)
  {
    swift_bridgeObjectRetain();
    v7 = (void *)sub_1B76651A0(a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    v8 = v14;
    v9 = v15;
    v12[0] = v4;
    v12[1] = v3;
    v12[2] = v6;
    v12[3] = v5;
    v10 = v16;
    swift_retain();
    sub_1B765ED7C(v7, v8, v9, v12, v10);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  return sub_1B765DE88((uint64_t)v13, &qword_1EF179400);
}

unint64_t sub_1B76C6B8C()
{
  unint64_t result;

  result = qword_1EF179418;
  if (!qword_1EF179418)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for ShieldSettings.Name, &type metadata for ShieldSettings.Name);
    atomic_store(result, (unint64_t *)&qword_1EF179418);
  }
  return result;
}

unint64_t sub_1B76C6BD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF179420;
  if (!qword_1EF179420)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF179428);
    result = MEMORY[0x1BCCA94E8](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF179420);
  }
  return result;
}

uint64_t sub_1B76C6C20@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B76B38A8(a1, &qword_1EF177388, (uint64_t)&xmmword_1EF1791C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B76C1F7C, a2);
}

uint64_t sub_1B76C6C54(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1B76C4F6C(a1, a2, a3, a4, &qword_1EF177388, (uint64_t)&xmmword_1EF1791C0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B76C2894);
}

uint64_t sub_1B76C6C88@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B76C5334(a1, &qword_1EF177388, (uint64_t)&xmmword_1EF1791C0, (uint64_t (*)(_QWORD))sub_1B7675660, a2);
}

uint64_t sub_1B76C6CBC()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return ShieldSettings.untokenizedApplications.setter(v0);
}

double sub_1B76C6CE4@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B76C5854(a1, &qword_1EF177390, (uint64_t)&qword_1EF179218, (void (*)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B76591C8, a2);
}

uint64_t sub_1B76C6D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_4Tm(a1, a2, a3, a4, (void (*)(_QWORD))sub_1B76C4808, (uint64_t (*)(_QWORD *))ShieldSettings.applicationCategories.setter);
}

double sub_1B76C6D2C@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B76C4324(a1, &qword_1EF177390, (uint64_t)&qword_1EF179218, sub_1B7675660, a2);
}

uint64_t sub_1B76C6D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_4Tm(a1, a2, a3, a4, (void (*)(_QWORD))sub_1B76C7070, (uint64_t (*)(_QWORD *))ShieldSettings.untokenizedApplicationCategories.setter);
}

uint64_t sub_1B76C6D74@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B76B38A8(a1, &qword_1EF177398, (uint64_t)&xmmword_1EF179280, sub_1B7658794, a2);
}

uint64_t sub_1B76C6DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm_0(a1, a2, a3, a4, (void (*)(uint64_t))sub_1B76C6890);
}

uint64_t sub_1B76C6DB4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B76B38A8(a1, &qword_1EF1773A0, (uint64_t)&xmmword_1EF1792D8, sub_1B76591E4, a2);
}

uint64_t sub_1B76C6DE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm_0(a1, a2, a3, a4, (void (*)(uint64_t))sub_1B76C6A0C);
}

uint64_t sub_1B76C6DF4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B76B38A8(a1, &qword_1EF1773A8, (uint64_t)&xmmword_1EF179330, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B76C2428, a2);
}

uint64_t sub_1B76C6E28(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1B76C4F6C(a1, a2, a3, a4, &qword_1EF1773A8, (uint64_t)&xmmword_1EF179330, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B76C2B78);
}

uint64_t sub_1B76C6E5C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B76C5334(a1, &qword_1EF1773A8, (uint64_t)&xmmword_1EF179330, (uint64_t (*)(_QWORD))sub_1B7675B20, a2);
}

uint64_t sub_1B76C6E90()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return ShieldSettings.untokenizedWebDomains.setter(v0);
}

double sub_1B76C6EB8@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B76C5854(a1, &qword_1EF1773B0, (uint64_t)&qword_1EF179388, (void (*)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B7659200, a2);
}

uint64_t sub_1B76C6EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_4Tm(a1, a2, a3, a4, (void (*)(_QWORD))sub_1B76C7070, (uint64_t (*)(_QWORD *))ShieldSettings.webDomainCategories.setter);
}

double sub_1B76C6F00@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B76C4324(a1, &qword_1EF1773B0, (uint64_t)&qword_1EF179388, sub_1B7675B20, a2);
}

uint64_t sub_1B76C6F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_4Tm(a1, a2, a3, a4, (void (*)(_QWORD))sub_1B76C7070, (uint64_t (*)(_QWORD *))ShieldSettings.untokenizedWebDomainCategories.setter);
}

uint64_t keypath_set_4Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t (*a6)(_QWORD *))
{
  uint64_t v7;
  char v8;
  _QWORD v10[2];
  char v11;

  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  v10[0] = *(_QWORD *)a1;
  v10[1] = v7;
  v11 = v8;
  a5(v10[0]);
  return a6(v10);
}

ValueMetadata *type metadata accessor for ShieldSettings()
{
  return &type metadata for ShieldSettings;
}

uint64_t storeEnumTagSinglePayload for ShieldSettings.Name(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1B76C6FEC + 4 * byte_1B76DFCBB[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1B76C7020 + 4 * byte_1B76DFCB6[v4]))();
}

uint64_t sub_1B76C7020(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76C7028(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B76C7030);
  return result;
}

uint64_t sub_1B76C703C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B76C7044);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1B76C7048(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76C7050(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ShieldSettings.Name()
{
  return &type metadata for ShieldSettings.Name;
}

uint64_t UserSafetySettings.ScannableService.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B76C70A4 + 4 * byte_1B76DFDE0[*v0]))(0x706F7244726961, 0xE700000000000000);
}

uint64_t sub_1B76C70A4()
{
  return 0x73746361746E6F63;
}

uint64_t sub_1B76C70BC()
{
  return 0x736567617373656DLL;
}

uint64_t sub_1B76C70D4()
{
  return 0x736F746F6870;
}

uint64_t sub_1B76C70E8()
{
  return 0x696F566F65646976;
}

ManagedSettings::UserSafetySettings::ScannableService_optional __swiftcall UserSafetySettings.ScannableService.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ManagedSettings::UserSafetySettings::ScannableService_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1B76DBE70();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t UserSafetySettings.InterventionType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 1852138868;
  else
    return 0x646C696863;
}

ManagedSettings::UserSafetySettings::InterventionType_optional __swiftcall UserSafetySettings.InterventionType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (ManagedSettings::UserSafetySettings::InterventionType_optional)sub_1B76C71B0(v1);
}

ManagedSettings::UserSafetySettings::Name_optional __swiftcall UserSafetySettings.Name.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (ManagedSettings::UserSafetySettings::Name_optional)sub_1B76C71B0(v1);
}

uint64_t sub_1B76C71B0@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1B76DBE70();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void *static UserSafetySettings.Name.allCases.getter()
{
  return &unk_1E6CAC458;
}

unint64_t UserSafetySettings.Name.rawValue.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_1B76C7248(char *a1, char *a2)
{
  return sub_1B76A1F10(*a1, *a2);
}

uint64_t sub_1B76C7254()
{
  return sub_1B76D933C();
}

uint64_t sub_1B76C725C()
{
  sub_1B76DBB1C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76C72B4()
{
  return sub_1B76D9DEC();
}

ManagedSettings::UserSafetySettings::Name_optional sub_1B76C72BC(Swift::String *a1)
{
  return UserSafetySettings.Name.init(rawValue:)(*a1);
}

void sub_1B76C72C8(_QWORD *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;

  v2 = 0x80000001B76E1CB0;
  if (*v1)
    v2 = 0x80000001B76E1CD0;
  *a1 = 0xD000000000000019;
  a1[1] = v2;
}

void sub_1B76C7304(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6CAC4D0;
}

void *static UserSafetySettings.ScannableService.allCases.getter()
{
  return &unk_1E6CAC370;
}

void sub_1B76C7320(char *a1)
{
  sub_1B76A1FAC(*a1);
}

void sub_1B76C732C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1B76DBF54();
  __asm { BR              X9 }
}

uint64_t sub_1B76C7378()
{
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

void sub_1B76C7408()
{
  __asm { BR              X10 }
}

uint64_t sub_1B76C7444()
{
  sub_1B76DBB1C();
  return swift_bridgeObjectRelease();
}

void sub_1B76C74C0()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1B76DBF54();
  __asm { BR              X9 }
}

uint64_t sub_1B76C7508()
{
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

ManagedSettings::UserSafetySettings::ScannableService_optional sub_1B76C7598(Swift::String *a1)
{
  return UserSafetySettings.ScannableService.init(rawValue:)(*a1);
}

uint64_t sub_1B76C75A4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1B76C75D4 + 4 * byte_1B76DFDF4[*v0]))();
}

void sub_1B76C75D4(_QWORD *a1@<X8>)
{
  *a1 = 0x73746361746E6F63;
  a1[1] = 0xE800000000000000;
}

void sub_1B76C75F0(_QWORD *a1@<X8>)
{
  *a1 = 0x736567617373656DLL;
  a1[1] = 0xE800000000000000;
}

void sub_1B76C760C(_QWORD *a1@<X8>)
{
  *a1 = 0x736F746F6870;
  a1[1] = 0xE600000000000000;
}

void sub_1B76C7624(char *a1@<X8>)
{
  strcpy(a1, "videoVoiceMail");
  a1[15] = -18;
}

void sub_1B76C764C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6CAC430;
}

uint64_t static UserSafetySettings.InterventionType.< infix(_:_:)(_BYTE *a1, _BYTE *a2)
{
  return *a2 & ~*a1 & 1;
}

void *static UserSafetySettings.InterventionType.allCases.getter()
{
  return &unk_1E6CAC2D0;
}

uint64_t sub_1B76C767C(char *a1, char *a2)
{
  return sub_1B76A214C(*a1, *a2);
}

uint64_t sub_1B76C7688()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

uint64_t sub_1B76C76FC()
{
  sub_1B76DBB1C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76C774C()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

ManagedSettings::UserSafetySettings::InterventionType_optional sub_1B76C77BC(Swift::String *a1)
{
  return UserSafetySettings.InterventionType.init(rawValue:)(*a1);
}

void sub_1B76C77C8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1852138868;
  if (!*v1)
    v2 = 0x646C696863;
  v3 = 0xE500000000000000;
  if (*v1)
    v3 = 0xE400000000000000;
  *a1 = v2;
  a1[1] = v3;
}

void sub_1B76C77FC(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6CAC348;
}

uint64_t sub_1B76C780C(_BYTE *a1, _BYTE *a2)
{
  return *a2 & ~*a1 & 1;
}

uint64_t sub_1B76C7820(_BYTE *a1, _BYTE *a2)
{
  return *a2 & 1 | ((*a1 & 1) == 0);
}

uint64_t sub_1B76C7834(_BYTE *a1, _BYTE *a2)
{
  return *a1 & 1 | ((*a2 & 1) == 0);
}

uint64_t sub_1B76C7848(_BYTE *a1, _BYTE *a2)
{
  return *a1 & ~*a2 & 1;
}

uint64_t static UserSafetySettings.ScanningPolicy.maximumNudityDetectionApplicationsCount.getter()
{
  return 0x7FFFFFFFFFFFFFFFLL;
}

uint64_t UserSafetySettings.allowedClients.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v0;
  v1 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  if (qword_1EF1773B8 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = sub_1B7658794((uint64_t)&xmmword_1EF179468, v2, v1, v4, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1B76C78FC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  v7 = qword_1EF1773B8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_1B7658794((uint64_t)&xmmword_1EF179468, v4, v3, v6, v5);
  swift_bridgeObjectRelease_n();
  result = swift_bridgeObjectRelease_n();
  *a2 = v8;
  return result;
}

uint64_t UserSafetySettings.allowedClients.setter(uint64_t a1)
{
  sub_1B76C8700(a1);
  return swift_bridgeObjectRelease();
}

void (*UserSafetySettings.allowedClients.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x98uLL);
  *a1 = v3;
  v4 = v3 + 17;
  v3[18] = v1;
  v5 = *v1;
  v6 = v1[1];
  v8 = v1[2];
  v7 = v1[3];
  if (qword_1EF1773B8 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = sub_1B7658794((uint64_t)&xmmword_1EF179468, v5, v6, v8, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v4 = v9;
  return sub_1B76C7A98;
}

void sub_1B76C7A98(uint64_t *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = *a1;
  v4 = *(_QWORD *)(*a1 + 136);
  v5 = *(uint64_t **)(*a1 + 144);
  sub_1B76638C0((uint64_t)&xmmword_1EF179468, *a1, &qword_1ED53B420);
  v7 = *v5;
  v6 = v5[1];
  v9 = v5[2];
  v8 = v5[3];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v4)
    {
      swift_bridgeObjectRetain();
      v10 = (void *)sub_1B7665174(v4);
    }
    else
    {
      v10 = 0;
    }
    if (qword_1EF177160 != -1)
      swift_once();
    swift_beginAccess();
    if (off_1EF1775A8)
    {
      v12 = *(_QWORD *)(v3 + 8);
      v13 = *(_QWORD *)(v3 + 16);
      v18 = v7;
      v19 = v6;
      v20 = v9;
      v21 = v8;
      v14 = *(unsigned __int8 *)(v3 + 66);
      swift_retain();
      sub_1B765ED7C(v10, v12, v13, &v18, v14);
      swift_release();
    }
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    sub_1B765DE88(v3, &qword_1ED53B420);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v4)
    {
      swift_bridgeObjectRetain();
      v11 = (void *)sub_1B7665174(v4);
      swift_bridgeObjectRelease();
    }
    else
    {
      v11 = 0;
    }
    if (qword_1EF177160 != -1)
      swift_once();
    swift_beginAccess();
    if (off_1EF1775A8)
    {
      v15 = *(_QWORD *)(v3 + 8);
      v16 = *(_QWORD *)(v3 + 16);
      v18 = v7;
      v19 = v6;
      v20 = v9;
      v21 = v8;
      v17 = *(unsigned __int8 *)(v3 + 66);
      swift_retain();
      sub_1B765ED7C(v11, v15, v16, &v18, v17);
      swift_release();
    }
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    sub_1B765DE88(v3, &qword_1ED53B420);
  }
  swift_bridgeObjectRelease();
  free((void *)v3);
}

uint64_t UserSafetySettings.effectiveAllowedClients.getter()
{
  if (qword_1EF1773B8 != -1)
    swift_once();
  return sub_1B7659DBC((uint64_t)&xmmword_1EF179468);
}

double sub_1B76C7D44()
{
  double result;
  __int128 v1;
  _OWORD v2[3];
  __int128 v3;
  char v4;
  _BYTE v5[24];
  uint64_t v6;
  _UNKNOWN **v7;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED53B380);
  v7 = &off_1E6CB05D8;
  v5[0] = 1;
  *(_QWORD *)&v1 = MEMORY[0x1E0DEE9E8];
  *((_QWORD *)&v1 + 1) = 0xD000000000000019;
  *(_QWORD *)&v2[0] = 0x80000001B76E1CB0;
  sub_1B76638C0((uint64_t)v5, (uint64_t)v2 + 8, &qword_1ED53B410);
  LOWORD(v3) = 256;
  BYTE2(v3) = 0;
  *((_QWORD *)&v3 + 1) = 0x7FFFFFFFFFFFFFFFLL;
  v4 = 0;
  sub_1B765DE88((uint64_t)v5, &qword_1ED53B410);
  xmmword_1EF179488 = v2[1];
  unk_1EF179498 = v2[2];
  xmmword_1EF1794A8 = v3;
  byte_1EF1794B8 = v4;
  result = *(double *)&v1;
  xmmword_1EF179468 = v1;
  unk_1EF179478 = v2[0];
  return result;
}

uint64_t static UserSafetySettings.allowedClients.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EF1773B8 != -1)
    swift_once();
  return sub_1B76638C0((uint64_t)&xmmword_1EF179468, a1, &qword_1ED53B420);
}

uint64_t UserSafetySettings.scanningPolicy.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *v1;
  v3 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1ED53B550 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B7659530((uint64_t)&qword_1ED53B4E8, v4, v3, v6, v5, a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

double sub_1B76C7F08@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  double result;
  __int128 v10;
  char v11;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  v7 = qword_1ED53B550;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B7659530((uint64_t)&qword_1ED53B4E8, v4, v3, v6, v5, (uint64_t)&v10);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  v8 = v11;
  result = *(double *)&v10;
  *(_OWORD *)a2 = v10;
  *(_BYTE *)(a2 + 16) = v8;
  return result;
}

uint64_t sub_1B76C7FD4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_BYTE *)(a1 + 16);
  sub_1B76C8890(*(_QWORD *)a1, v4, v5);
  if (qword_1ED53B550 != -1)
    swift_once();
  v6 = *a2;
  v7 = a2[1];
  v9 = a2[2];
  v8 = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B76AE4DC(v3, v4, v5, (uint64_t)&qword_1ED53B4E8, v6, v7, v9, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1B76C887C(v3, v4, v5);
}

uint64_t UserSafetySettings.scanningPolicy.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (qword_1ED53B550 != -1)
    swift_once();
  v6 = *v1;
  v5 = v1[1];
  v8 = v1[2];
  v7 = v1[3];
  v15 = v3;
  v16 = v2;
  LOBYTE(v17) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v4 == 255)
  {
    v9.isa = 0;
  }
  else
  {
    sub_1B76C8890(v3, v2, v4);
    v9.isa = UserSafetySettings.ScanningPolicy.persistableValue()().isa;
    sub_1B76AD46C(v15, v16, v17);
  }
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    v10 = v8;
    v11 = qword_1ED53B500;
    v12 = unk_1ED53B508;
    v15 = v6;
    v16 = v5;
    v17 = v10;
    v18 = v7;
    v13 = byte_1ED53B53A;
    swift_retain();
    sub_1B765ED7C(v9.isa, v11, v12, &v15, v13);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  return sub_1B76C887C(v3, v2, v4);
}

uint64_t (*UserSafetySettings.scanningPolicy.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(a1 + 24) = v1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1ED53B550 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B7659530((uint64_t)&qword_1ED53B4E8, v3, v4, v6, v5, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1B76C82D8;
}

uint64_t sub_1B76C82D8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(uint64_t **)(a1 + 24);
  v3 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_BYTE *)(a1 + 16);
  v7 = *v2;
  v6 = v2[1];
  v9 = v2[2];
  v8 = v2[3];
  if ((a2 & 1) != 0)
  {
    sub_1B76C8890(*(_QWORD *)a1, v4, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B76AE4DC(v3, v4, v5, (uint64_t)&qword_1ED53B4E8, v7, v6, v9, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B76C887C(v3, v4, v5);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B76AE4DC(v3, v4, v5, (uint64_t)&qword_1ED53B4E8, v7, v6, v9, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return sub_1B76C887C(v3, v4, v5);
}

uint64_t UserSafetySettings.effectiveScanningPolicy.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __int128 v10;
  char v11;
  _BYTE v12[24];

  if (qword_1ED53B550 != -1)
    swift_once();
  if (qword_1EF1771A8 != -1)
    swift_once();
  swift_beginAccess();
  if (!qword_1EF1778A8)
    goto LABEL_9;
  v2 = qword_1ED53B500;
  v3 = unk_1ED53B508;
  swift_retain();
  v4 = sub_1B7667778(v2, v3);
  swift_release();
  if (!v4)
    goto LABEL_9;
  v5 = v4;
  static UserSafetySettings.ScanningPolicy.value(from:)((uint64_t)v4, (int64_t)v12);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774E0);
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    *(_OWORD *)a1 = v10;
    *(_BYTE *)(a1 + 16) = v11;
  }
  else
  {
LABEL_9:
    v7 = qword_1ED53B4E8;
    v8 = unk_1ED53B4F0;
    *(_QWORD *)a1 = qword_1ED53B4E8;
    *(_QWORD *)(a1 + 8) = v8;
    v9 = byte_1ED53B4F8;
    *(_BYTE *)(a1 + 16) = byte_1ED53B4F8;
    return sub_1B76AD43C(v7, v8, v9);
  }
  return result;
}

uint64_t sub_1B76C8528()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B4C8);
  qword_1ED53B528 = result;
  unk_1ED53B530 = &off_1E6CB0740;
  qword_1ED53B4E8 = 0;
  unk_1ED53B4F0 = 0;
  byte_1ED53B4F8 = 2;
  qword_1ED53B500 = 0xD000000000000019;
  unk_1ED53B508 = 0x80000001B76E1CD0;
  word_1ED53B538 = 256;
  byte_1ED53B53A = 0;
  qword_1ED53B540 = 0;
  byte_1ED53B548 = 1;
  return result;
}

uint64_t static UserSafetySettings.scanningPolicy.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1ED53B550 != -1)
    swift_once();
  return sub_1B76638C0((uint64_t)&qword_1ED53B4E8, a1, &qword_1ED53B5D8);
}

uint64_t _s15ManagedSettings010UserSafetyB0V14ScanningPolicyO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  BOOL v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v13;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)a2;
  v6 = *(unsigned __int8 *)(a2 + 16);
  if (!*(_BYTE *)(a1 + 16))
  {
    if (!*(_BYTE *)(a2 + 16))
    {
      v15 = *(_QWORD *)(a2 + 8);
      v16 = *(_QWORD *)(a1 + 8);
      sub_1B76A7D6C(v4, v5);
      if ((v17 & 1) != 0)
        return sub_1B76A7EE8(v16, v15);
    }
    return 0;
  }
  if (*(_BYTE *)(a1 + 16) != 1)
    return (v6 & 7) == 2;
  if (v6 != 1)
    return 0;
  v7 = (v4 & 1) == 0;
  if ((v4 & 1) != 0)
    v8 = 1852138868;
  else
    v8 = 0x646C696863;
  if (v7)
    v9 = 0xE500000000000000;
  else
    v9 = 0xE400000000000000;
  if ((v5 & 1) != 0)
    v10 = 1852138868;
  else
    v10 = 0x646C696863;
  if ((v5 & 1) != 0)
    v11 = 0xE400000000000000;
  else
    v11 = 0xE500000000000000;
  if (v8 == v10 && v9 == v11)
  {
    swift_bridgeObjectRelease_n();
    return 1;
  }
  else
  {
    v13 = sub_1B76DBED0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v13 & 1;
  }
}

uint64_t sub_1B76C8700(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v12[4];
  _BYTE v13[8];
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;

  if (qword_1EF1773B8 != -1)
    swift_once();
  sub_1B76638C0((uint64_t)&xmmword_1EF179468, (uint64_t)v13, &qword_1ED53B420);
  v4 = *v1;
  v3 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (a1)
  {
    swift_bridgeObjectRetain();
    v7 = (void *)sub_1B7665174(a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    v8 = v14;
    v9 = v15;
    v12[0] = v4;
    v12[1] = v3;
    v12[2] = v6;
    v12[3] = v5;
    v10 = v16;
    swift_retain();
    sub_1B765ED7C(v7, v8, v9, v12, v10);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  return sub_1B765DE88((uint64_t)v13, &qword_1ED53B420);
}

uint64_t sub_1B76C887C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != -1)
    return sub_1B76AD46C(a1, a2, a3);
  return a1;
}

uint64_t sub_1B76C8890(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != -1)
    return sub_1B76AD43C(a1, a2, a3);
  return a1;
}

unint64_t sub_1B76C88A8()
{
  unint64_t result;

  result = qword_1EF1794C0;
  if (!qword_1EF1794C0)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for UserSafetySettings.Name, &type metadata for UserSafetySettings.Name);
    atomic_store(result, (unint64_t *)&qword_1EF1794C0);
  }
  return result;
}

uint64_t sub_1B76C88EC()
{
  return sub_1B76B1904(&qword_1EF1794C8, &qword_1EF1794D0);
}

unint64_t sub_1B76C8914()
{
  unint64_t result;

  result = qword_1EF1794D8;
  if (!qword_1EF1794D8)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for UserSafetySettings.ScannableService, &type metadata for UserSafetySettings.ScannableService);
    atomic_store(result, (unint64_t *)&qword_1EF1794D8);
  }
  return result;
}

uint64_t sub_1B76C8958()
{
  return sub_1B76B1904(&qword_1EF1794E0, &qword_1EF1794E8);
}

unint64_t sub_1B76C8980()
{
  unint64_t result;

  result = qword_1EF1794F0;
  if (!qword_1EF1794F0)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for UserSafetySettings.InterventionType, &type metadata for UserSafetySettings.InterventionType);
    atomic_store(result, (unint64_t *)&qword_1EF1794F0);
  }
  return result;
}

uint64_t sub_1B76C89C4()
{
  return sub_1B76B1904(&qword_1EF1794F8, &qword_1EF179500);
}

uint64_t sub_1B76C89EC()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  sub_1B76C8700(v0);
  return swift_bridgeObjectRelease();
}

ValueMetadata *type metadata accessor for UserSafetySettings()
{
  return &type metadata for UserSafetySettings;
}

ValueMetadata *type metadata accessor for UserSafetySettings.Name()
{
  return &type metadata for UserSafetySettings.Name;
}

uint64_t storeEnumTagSinglePayload for UserSafetySettings.ScannableService(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1B76C8A94 + 4 * byte_1B76DFDFE[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1B76C8AC8 + 4 * byte_1B76DFDF9[v4]))();
}

uint64_t sub_1B76C8AC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76C8AD0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B76C8AD8);
  return result;
}

uint64_t sub_1B76C8AE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B76C8AECLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1B76C8AF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76C8AF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UserSafetySettings.ScannableService()
{
  return &type metadata for UserSafetySettings.ScannableService;
}

uint64_t _s15ManagedSettings18UserSafetySettingsV4NameOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B76C8B60 + 4 * byte_1B76DFE08[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B76C8B94 + 4 * byte_1B76DFE03[v4]))();
}

uint64_t sub_1B76C8B94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76C8B9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B76C8BA4);
  return result;
}

uint64_t sub_1B76C8BB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B76C8BB8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B76C8BBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76C8BC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UserSafetySettings.InterventionType()
{
  return &type metadata for UserSafetySettings.InterventionType;
}

uint64_t destroy for UserSafetySettings.ScanningPolicy(uint64_t a1)
{
  return sub_1B76AD46C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s15ManagedSettings18UserSafetySettingsV14ScanningPolicyOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1B76AD43C(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for UserSafetySettings.ScanningPolicy(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1B76AD43C(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1B76AD46C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for UserSafetySettings.ScanningPolicy(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1B76AD46C(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for UserSafetySettings.ScanningPolicy()
{
  return &type metadata for UserSafetySettings.ScanningPolicy;
}

uint64_t BoundedSettingMetadata.bound(value:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B76DBEF4();
  sub_1B76DBA98();
  sub_1B76DBF00();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

BOOL static SettingScope.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

ManagedSettings::SettingScope_optional __swiftcall SettingScope.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ManagedSettings::SettingScope_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1B76DBE70();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t SettingScope.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1919251317;
  if (*v0 != 1)
    v1 = 0x6D6574737973;
  if (*v0)
    return v1;
  else
    return 0x6E6F436C61636F6CLL;
}

uint64_t sub_1B76C8E70(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B76A0D9C(*a1, *a2);
}

uint64_t sub_1B76C8E7C()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

uint64_t sub_1B76C8F1C()
{
  sub_1B76DBB1C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76C8F98()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

ManagedSettings::SettingScope_optional sub_1B76C9034(Swift::String *a1)
{
  return SettingScope.init(rawValue:)(*a1);
}

void sub_1B76C9040(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEE0072656E696174;
  v4 = 0xE400000000000000;
  v5 = 1919251317;
  if (v2 != 1)
  {
    v5 = 0x6D6574737973;
    v4 = 0xE600000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E6F436C61636F6CLL;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t SettingMetadata.defaultValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t SettingMetadata.name.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 28));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t SettingMetadata.combineOperator.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  v6 = v4 + *(int *)(a1 + 32);
  v7 = type metadata accessor for CombineOperator(0, *(_QWORD *)(a1 + 16), a2, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a4, v6, v7);
}

uint64_t SettingMetadata.isPublic.getter(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 36));
}

uint64_t SettingMetadata.scope.getter@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_BYTE *)(v2 + *(int *)(result + 40));
  return result;
}

uint64_t SettingMetadata.isPrivacySensitive.getter(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 44));
}

uint64_t SettingMetadata.maximumCount.getter(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 48));
}

uint64_t SettingMetadata.responsibleClients.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  _QWORD *v13;
  _QWORD v15[5];

  if (qword_1ED53B6B8 != -1)
    swift_once();
  v3 = (uint64_t *)(v1 + *(int *)(a1 + 28));
  v5 = *v3;
  v4 = v3[1];
  swift_beginAccess();
  if (byte_1ED53B740 != 2)
  {
    if ((byte_1ED53B740 & 1) == 0)
      return MEMORY[0x1E0DEE9E8];
LABEL_7:
    v8 = MEMORY[0x1E0DEE9E8];
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = v8;
    sub_1B7695184();
    v11 = v10;
    ObjectType = swift_getObjectType();
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = v5;
    v13[3] = v4;
    v13[4] = v9;
    swift_bridgeObjectRetain();
    swift_retain();
    XPCConnectable.synchronousRemoteObjectProxy(retryCount:proxyHandler:)(1, (void (*)(_QWORD *))sub_1B76A0660, (uint64_t)v13, ObjectType, v11);
    swift_unknownObjectRelease();
    swift_release();
    swift_beginAccess();
    v7 = *(_QWORD *)(v9 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    return v7;
  }
  v15[3] = &type metadata for Feature.FeatureFlags;
  v15[4] = sub_1B7658114();
  v6 = sub_1B76DB894();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
  if ((v6 & 1) != 0)
    goto LABEL_7;
  return MEMORY[0x1E0DEE9E8];
}

uint64_t BoundedSettingMetadata.bounds.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 36);
  v5 = sub_1B76DBA98();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t BoundedSettingMetadata.name.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 40));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t BoundedSettingMetadata.combineOperator.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  v6 = v4 + *(int *)(a1 + 44);
  v7 = type metadata accessor for CombineOperator(0, *(_QWORD *)(a1 + 16), a2, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a4, v6, v7);
}

uint64_t BoundedSettingMetadata.isPublic.getter(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 48));
}

uint64_t BoundedSettingMetadata.scope.getter@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_BYTE *)(v2 + *(int *)(result + 52));
  return result;
}

uint64_t BoundedSettingMetadata.isPrivacySensitive.getter(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 56));
}

uint64_t sub_1B76C93F4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t BoundedSettingMetadata.responsibleClients.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  _QWORD *v13;
  _QWORD v15[5];

  if (qword_1ED53B6B8 != -1)
    swift_once();
  v3 = (uint64_t *)(v1 + *(int *)(a1 + 40));
  v5 = *v3;
  v4 = v3[1];
  swift_beginAccess();
  if (byte_1ED53B740 != 2)
  {
    if ((byte_1ED53B740 & 1) == 0)
      return MEMORY[0x1E0DEE9E8];
LABEL_7:
    v8 = MEMORY[0x1E0DEE9E8];
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = v8;
    sub_1B7695184();
    v11 = v10;
    ObjectType = swift_getObjectType();
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = v5;
    v13[3] = v4;
    v13[4] = v9;
    swift_bridgeObjectRetain();
    swift_retain();
    XPCConnectable.synchronousRemoteObjectProxy(retryCount:proxyHandler:)(1, (void (*)(_QWORD *))sub_1B76CB9D4, (uint64_t)v13, ObjectType, v11);
    swift_unknownObjectRelease();
    swift_release();
    swift_beginAccess();
    v7 = *(_QWORD *)(v9 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    return v7;
  }
  v15[3] = &type metadata for Feature.FeatureFlags;
  v15[4] = sub_1B7658114();
  v6 = sub_1B76DB894();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
  if ((v6 & 1) != 0)
    goto LABEL_7;
  return MEMORY[0x1E0DEE9E8];
}

uint64_t SettingMetadata<A>.defaultEffectiveValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  uint64_t result;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  _BYTE v19[8];
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *v0;
  v22 = MEMORY[0x1E0DEE9E8];
  v18 = v1 + 56;
  v2 = 1 << *(_BYTE *)(v1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(v1 + 56);
  v5 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain_n();
  v7 = 0;
  while (1)
  {
    if (v4)
    {
      v8 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      v9 = v8 | (v7 << 6);
      goto LABEL_5;
    }
    v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v15 >= v5)
      goto LABEL_25;
    v16 = *(_QWORD *)(v18 + 8 * v15);
    ++v7;
    if (!v16)
    {
      v7 = v15 + 1;
      if (v15 + 1 >= v5)
        goto LABEL_25;
      v16 = *(_QWORD *)(v18 + 8 * v7);
      if (!v16)
      {
        v7 = v15 + 2;
        if (v15 + 2 >= v5)
          goto LABEL_25;
        v16 = *(_QWORD *)(v18 + 8 * v7);
        if (!v16)
        {
          v7 = v15 + 3;
          if (v15 + 3 >= v5)
            goto LABEL_25;
          v16 = *(_QWORD *)(v18 + 8 * v7);
          if (!v16)
          {
            v7 = v15 + 4;
            if (v15 + 4 >= v5)
              goto LABEL_25;
            v16 = *(_QWORD *)(v18 + 8 * v7);
            if (!v16)
              break;
          }
        }
      }
    }
LABEL_24:
    v4 = (v16 - 1) & v16;
    v9 = __clz(__rbit64(v16)) + (v7 << 6);
LABEL_5:
    v10 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v9);
    v11 = *v10;
    v12 = v10[1];
    v23 = 0uLL;
    v24 = v11;
    v25 = v12;
    v26 = 0;
    v27 = 0;
    sub_1B765DDFC(v11, v12);
    sub_1B765DDFC(v11, v12);
    sub_1B767E11C((uint64_t)v19, &v23);
    v13 = v20;
    v14 = v21;
    swift_bridgeObjectRelease();
    sub_1B765DF1C(v13, v14);
    swift_bridgeObjectRelease();
    result = sub_1B765DEC4(v11, v12);
  }
  v17 = v15 + 5;
  if (v17 >= v5)
  {
LABEL_25:
    swift_release();
    swift_bridgeObjectRelease();
    return v22;
  }
  v16 = *(_QWORD *)(v18 + 8 * v17);
  if (v16)
  {
    v7 = v17;
    goto LABEL_24;
  }
  while (1)
  {
    v7 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v7 >= v5)
      goto LABEL_25;
    v16 = *(_QWORD *)(v18 + 8 * v7);
    ++v17;
    if (v16)
      goto LABEL_24;
  }
LABEL_27:
  __break(1u);
  return result;
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19[4];
  uint64_t v20;

  v1 = *v0;
  v20 = MEMORY[0x1E0DEE9E8];
  v2 = v1 + 56;
  v3 = 1 << *(_BYTE *)(v1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(v1 + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain_n();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    v16 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v16 >= v6)
      goto LABEL_25;
    v17 = *(_QWORD *)(v2 + 8 * v16);
    ++v8;
    if (!v17)
    {
      v8 = v16 + 1;
      if (v16 + 1 >= v6)
        goto LABEL_25;
      v17 = *(_QWORD *)(v2 + 8 * v8);
      if (!v17)
      {
        v8 = v16 + 2;
        if (v16 + 2 >= v6)
          goto LABEL_25;
        v17 = *(_QWORD *)(v2 + 8 * v8);
        if (!v17)
        {
          v8 = v16 + 3;
          if (v16 + 3 >= v6)
            goto LABEL_25;
          v17 = *(_QWORD *)(v2 + 8 * v8);
          if (!v17)
          {
            v8 = v16 + 4;
            if (v16 + 4 >= v6)
              goto LABEL_25;
            v17 = *(_QWORD *)(v2 + 8 * v8);
            if (!v17)
              break;
          }
        }
      }
    }
LABEL_24:
    v5 = (v17 - 1) & v17;
    v10 = __clz(__rbit64(v17)) + (v8 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    sub_1B765DDFC(*v11, v13);
    sub_1B765DDFC(v12, v13);
    sub_1B767E4FC(v19, 0, 0, v12, v13);
    v14 = v19[2];
    v15 = v19[3];
    swift_bridgeObjectRelease();
    sub_1B765DF1C(v14, v15);
    result = sub_1B765DEC4(v12, v13);
  }
  v18 = v16 + 5;
  if (v18 >= v6)
  {
LABEL_25:
    swift_release();
    swift_bridgeObjectRelease();
    return v20;
  }
  v17 = *(_QWORD *)(v2 + 8 * v18);
  if (v17)
  {
    v8 = v18;
    goto LABEL_24;
  }
  while (1)
  {
    v8 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v8 >= v6)
      goto LABEL_25;
    v17 = *(_QWORD *)(v2 + 8 * v8);
    ++v18;
    if (v17)
      goto LABEL_24;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t SettingMetadata<A>.effectiveCombineOperator.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B76C9FE0(&qword_1EF179460, &qword_1EF179458, qword_1ED53B380, a1);
}

{
  return sub_1B76C9FE0(&qword_1EF179438, &qword_1EF179430, &qword_1EF179440, a1);
}

uint64_t SettingMetadata<A>.defaultEffectiveValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  int64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  int64_t v39;
  int64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  int64_t v48;
  unint64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[5];
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v2 = *v1;
  if (!*((_BYTE *)v1 + 16))
  {
    v57 = v1[1];
    v58[0] = MEMORY[0x1E0DEE9E8];
    v54 = v2 + 56;
    v20 = 1 << *(_BYTE *)(v2 + 32);
    v21 = -1;
    if (v20 < 64)
      v21 = ~(-1 << v20);
    v22 = v21 & *(_QWORD *)(v2 + 56);
    v23 = (unint64_t)(v20 + 63) >> 6;
    result = swift_bridgeObjectRetain();
    v24 = 0;
    while (1)
    {
      if (v22)
      {
        v25 = __clz(__rbit64(v22));
        v22 &= v22 - 1;
        v26 = v25 | (v24 << 6);
      }
      else
      {
        v32 = v24 + 1;
        if (__OFADD__(v24, 1))
        {
LABEL_80:
          __break(1u);
LABEL_81:
          __break(1u);
          goto LABEL_82;
        }
        if (v32 >= v23)
          goto LABEL_53;
        v33 = *(_QWORD *)(v54 + 8 * v32);
        ++v24;
        if (!v33)
        {
          v24 = v32 + 1;
          if (v32 + 1 >= v23)
            goto LABEL_53;
          v33 = *(_QWORD *)(v54 + 8 * v24);
          if (!v33)
          {
            v24 = v32 + 2;
            if (v32 + 2 >= v23)
              goto LABEL_53;
            v33 = *(_QWORD *)(v54 + 8 * v24);
            if (!v33)
            {
              v24 = v32 + 3;
              if (v32 + 3 >= v23)
                goto LABEL_53;
              v33 = *(_QWORD *)(v54 + 8 * v24);
              if (!v33)
              {
                v24 = v32 + 4;
                if (v32 + 4 >= v23)
                  goto LABEL_53;
                v33 = *(_QWORD *)(v54 + 8 * v24);
                if (!v33)
                {
                  v34 = v32 + 5;
                  if (v34 >= v23)
                    goto LABEL_53;
                  v33 = *(_QWORD *)(v54 + 8 * v34);
                  if (!v33)
                  {
                    while (1)
                    {
                      v24 = v34 + 1;
                      if (__OFADD__(v34, 1))
                        goto LABEL_83;
                      if (v24 >= v23)
                        break;
                      v33 = *(_QWORD *)(v54 + 8 * v24);
                      ++v34;
                      if (v33)
                        goto LABEL_50;
                    }
LABEL_53:
                    swift_release();
                    v55 = v58[0];
                    v59 = MEMORY[0x1E0DEE9E8];
                    v35 = v57 + 56;
                    v36 = 1 << *(_BYTE *)(v57 + 32);
                    v37 = -1;
                    if (v36 < 64)
                      v37 = ~(-1 << v36);
                    v38 = v37 & *(_QWORD *)(v57 + 56);
                    v39 = (unint64_t)(v36 + 63) >> 6;
                    result = swift_bridgeObjectRetain();
                    v40 = 0;
                    while (1)
                    {
                      if (v38)
                      {
                        v41 = __clz(__rbit64(v38));
                        v38 &= v38 - 1;
                        v42 = v41 | (v40 << 6);
                      }
                      else
                      {
                        v48 = v40 + 1;
                        if (__OFADD__(v40, 1))
                          goto LABEL_81;
                        if (v48 >= v39)
                          goto LABEL_77;
                        v49 = *(_QWORD *)(v35 + 8 * v48);
                        ++v40;
                        if (!v49)
                        {
                          v40 = v48 + 1;
                          if (v48 + 1 >= v39)
                            goto LABEL_77;
                          v49 = *(_QWORD *)(v35 + 8 * v40);
                          if (!v49)
                          {
                            v40 = v48 + 2;
                            if (v48 + 2 >= v39)
                              goto LABEL_77;
                            v49 = *(_QWORD *)(v35 + 8 * v40);
                            if (!v49)
                            {
                              v40 = v48 + 3;
                              if (v48 + 3 >= v39)
                                goto LABEL_77;
                              v49 = *(_QWORD *)(v35 + 8 * v40);
                              if (!v49)
                              {
                                v40 = v48 + 4;
                                if (v48 + 4 >= v39)
                                  goto LABEL_77;
                                v49 = *(_QWORD *)(v35 + 8 * v40);
                                if (!v49)
                                {
                                  v50 = v48 + 5;
                                  if (v50 >= v39)
                                    goto LABEL_77;
                                  v49 = *(_QWORD *)(v35 + 8 * v50);
                                  if (!v49)
                                  {
                                    while (1)
                                    {
                                      v40 = v50 + 1;
                                      if (__OFADD__(v50, 1))
                                        goto LABEL_84;
                                      if (v40 >= v39)
                                        break;
                                      v49 = *(_QWORD *)(v35 + 8 * v40);
                                      ++v50;
                                      if (v49)
                                        goto LABEL_76;
                                    }
LABEL_77:
                                    result = swift_release();
                                    v51 = v59;
                                    *(_QWORD *)a1 = v55;
                                    *(_QWORD *)(a1 + 8) = v51;
                                    *(_BYTE *)(a1 + 16) = 0;
                                    return result;
                                  }
                                  v40 = v50;
                                }
                              }
                            }
                          }
                        }
LABEL_76:
                        v38 = (v49 - 1) & v49;
                        v42 = __clz(__rbit64(v49)) + (v40 << 6);
                      }
                      v43 = (uint64_t *)(*(_QWORD *)(v57 + 48) + 16 * v42);
                      v44 = *v43;
                      v45 = v43[1];
                      v65 = 0uLL;
                      v66 = v44;
                      v67 = v45;
                      v68 = 0;
                      v69 = 0;
                      sub_1B765DDFC(v44, v45);
                      sub_1B765DDFC(v44, v45);
                      sub_1B767E11C((uint64_t)v58, &v65);
                      v46 = v58[2];
                      v47 = v58[3];
                      swift_bridgeObjectRelease();
                      sub_1B765DF1C(v46, v47);
                      swift_bridgeObjectRelease();
                      result = sub_1B765DEC4(v44, v45);
                    }
                  }
                  v24 = v34;
                }
              }
            }
          }
        }
LABEL_50:
        v22 = (v33 - 1) & v33;
        v26 = __clz(__rbit64(v33)) + (v24 << 6);
      }
      v27 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v26);
      v28 = *v27;
      v29 = v27[1];
      v60 = 0uLL;
      v61 = v28;
      v62 = v29;
      v63 = 0;
      v64 = 0;
      sub_1B765DDFC(v28, v29);
      sub_1B765DDFC(v28, v29);
      sub_1B767F26C((uint64_t)&v65, &v60);
      v30 = v66;
      v31 = v67;
      swift_bridgeObjectRelease();
      sub_1B765DF1C(v30, v31);
      swift_bridgeObjectRelease();
      result = sub_1B765DEC4(v28, v29);
    }
  }
  if (*((_BYTE *)v1 + 16) != 1)
  {
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_BYTE *)(a1 + 16) = 2;
    return result;
  }
  v3 = *(_QWORD *)(v2 + 56);
  v56 = v2 + 56;
  v58[0] = MEMORY[0x1E0DEE9E8];
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & v3;
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_7;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_80;
    }
    if (v17 >= v7)
      goto LABEL_52;
    v18 = *(_QWORD *)(v56 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v7)
        goto LABEL_52;
      v18 = *(_QWORD *)(v56 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v7)
          goto LABEL_52;
        v18 = *(_QWORD *)(v56 + 8 * v9);
        if (!v18)
        {
          v9 = v17 + 3;
          if (v17 + 3 >= v7)
            goto LABEL_52;
          v18 = *(_QWORD *)(v56 + 8 * v9);
          if (!v18)
          {
            v9 = v17 + 4;
            if (v17 + 4 >= v7)
              goto LABEL_52;
            v18 = *(_QWORD *)(v56 + 8 * v9);
            if (!v18)
              break;
          }
        }
      }
    }
LABEL_26:
    v6 = (v18 - 1) & v18;
    v11 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_7:
    v12 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v11);
    v13 = *v12;
    v14 = v12[1];
    v65 = 0uLL;
    v66 = v13;
    v67 = v14;
    v68 = 0;
    v69 = 0;
    sub_1B765DDFC(v13, v14);
    sub_1B765DDFC(v13, v14);
    sub_1B767E11C((uint64_t)&v60, &v65);
    v15 = v61;
    v16 = v62;
    swift_bridgeObjectRelease();
    sub_1B765DF1C(v15, v16);
    swift_bridgeObjectRelease();
    result = sub_1B765DEC4(v13, v14);
  }
  v19 = v17 + 5;
  if (v19 >= v7)
  {
LABEL_52:
    result = swift_release();
    *(_QWORD *)a1 = v58[0];
    *(_QWORD *)(a1 + 8) = 0;
    *(_BYTE *)(a1 + 16) = 1;
    return result;
  }
  v18 = *(_QWORD *)(v56 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v7)
      goto LABEL_52;
    v18 = *(_QWORD *)(v56 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
  return result;
}

{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  int64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int64_t v41;
  int64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  int64_t v50;
  unint64_t v51;
  int64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v2 = *v1;
  if (!*((_BYTE *)v1 + 16))
  {
    v55 = v1[1];
    v60 = MEMORY[0x1E0DEE9E8];
    v56 = v2 + 56;
    v21 = 1 << *(_BYTE *)(v2 + 32);
    v22 = -1;
    if (v21 < 64)
      v22 = ~(-1 << v21);
    v23 = v22 & *(_QWORD *)(v2 + 56);
    v24 = (unint64_t)(v21 + 63) >> 6;
    result = swift_bridgeObjectRetain();
    v25 = 0;
    while (1)
    {
      if (v23)
      {
        v26 = __clz(__rbit64(v23));
        v23 &= v23 - 1;
        v27 = v26 | (v25 << 6);
      }
      else
      {
        v33 = v25 + 1;
        if (__OFADD__(v25, 1))
        {
LABEL_80:
          __break(1u);
LABEL_81:
          __break(1u);
          goto LABEL_82;
        }
        if (v33 >= v24)
          goto LABEL_53;
        v34 = *(_QWORD *)(v56 + 8 * v33);
        ++v25;
        if (!v34)
        {
          v25 = v33 + 1;
          if (v33 + 1 >= v24)
            goto LABEL_53;
          v34 = *(_QWORD *)(v56 + 8 * v25);
          if (!v34)
          {
            v25 = v33 + 2;
            if (v33 + 2 >= v24)
              goto LABEL_53;
            v34 = *(_QWORD *)(v56 + 8 * v25);
            if (!v34)
            {
              v25 = v33 + 3;
              if (v33 + 3 >= v24)
                goto LABEL_53;
              v34 = *(_QWORD *)(v56 + 8 * v25);
              if (!v34)
              {
                v25 = v33 + 4;
                if (v33 + 4 >= v24)
                  goto LABEL_53;
                v34 = *(_QWORD *)(v56 + 8 * v25);
                if (!v34)
                {
                  v35 = v33 + 5;
                  if (v35 >= v24)
                    goto LABEL_53;
                  v34 = *(_QWORD *)(v56 + 8 * v35);
                  if (!v34)
                  {
                    while (1)
                    {
                      v25 = v35 + 1;
                      if (__OFADD__(v35, 1))
                        goto LABEL_83;
                      if (v25 >= v24)
                        break;
                      v34 = *(_QWORD *)(v56 + 8 * v25);
                      ++v35;
                      if (v34)
                        goto LABEL_50;
                    }
LABEL_53:
                    swift_release();
                    v36 = v60;
                    v60 = MEMORY[0x1E0DEE9E8];
                    v37 = v55 + 56;
                    v38 = 1 << *(_BYTE *)(v55 + 32);
                    v39 = -1;
                    if (v38 < 64)
                      v39 = ~(-1 << v38);
                    v40 = v39 & *(_QWORD *)(v55 + 56);
                    v41 = (unint64_t)(v38 + 63) >> 6;
                    result = swift_bridgeObjectRetain();
                    v42 = 0;
                    while (1)
                    {
                      if (v40)
                      {
                        v43 = __clz(__rbit64(v40));
                        v40 &= v40 - 1;
                        v44 = v43 | (v42 << 6);
                      }
                      else
                      {
                        v50 = v42 + 1;
                        if (__OFADD__(v42, 1))
                          goto LABEL_81;
                        if (v50 >= v41)
                          goto LABEL_77;
                        v51 = *(_QWORD *)(v37 + 8 * v50);
                        ++v42;
                        if (!v51)
                        {
                          v42 = v50 + 1;
                          if (v50 + 1 >= v41)
                            goto LABEL_77;
                          v51 = *(_QWORD *)(v37 + 8 * v42);
                          if (!v51)
                          {
                            v42 = v50 + 2;
                            if (v50 + 2 >= v41)
                              goto LABEL_77;
                            v51 = *(_QWORD *)(v37 + 8 * v42);
                            if (!v51)
                            {
                              v42 = v50 + 3;
                              if (v50 + 3 >= v41)
                                goto LABEL_77;
                              v51 = *(_QWORD *)(v37 + 8 * v42);
                              if (!v51)
                              {
                                v42 = v50 + 4;
                                if (v50 + 4 >= v41)
                                  goto LABEL_77;
                                v51 = *(_QWORD *)(v37 + 8 * v42);
                                if (!v51)
                                {
                                  v52 = v50 + 5;
                                  if (v52 >= v41)
                                    goto LABEL_77;
                                  v51 = *(_QWORD *)(v37 + 8 * v52);
                                  if (!v51)
                                  {
                                    while (1)
                                    {
                                      v42 = v52 + 1;
                                      if (__OFADD__(v52, 1))
                                        goto LABEL_84;
                                      if (v42 >= v41)
                                        break;
                                      v51 = *(_QWORD *)(v37 + 8 * v42);
                                      ++v52;
                                      if (v51)
                                        goto LABEL_76;
                                    }
LABEL_77:
                                    result = swift_release();
                                    v53 = v60;
                                    *(_QWORD *)a1 = v36;
                                    *(_QWORD *)(a1 + 8) = v53;
                                    *(_BYTE *)(a1 + 16) = 0;
                                    return result;
                                  }
                                  v42 = v52;
                                }
                              }
                            }
                          }
                        }
LABEL_76:
                        v40 = (v51 - 1) & v51;
                        v44 = __clz(__rbit64(v51)) + (v42 << 6);
                      }
                      v45 = (uint64_t *)(*(_QWORD *)(v55 + 48) + 16 * v44);
                      v46 = *v45;
                      v47 = v45[1];
                      sub_1B765DDFC(*v45, v47);
                      sub_1B765DDFC(v46, v47);
                      sub_1B767E4FC(&v57, 0, 0, v46, v47);
                      v48 = v58;
                      v49 = v59;
                      swift_bridgeObjectRelease();
                      sub_1B765DF1C(v48, v49);
                      result = sub_1B765DEC4(v46, v47);
                    }
                  }
                  v25 = v35;
                }
              }
            }
          }
        }
LABEL_50:
        v23 = (v34 - 1) & v34;
        v27 = __clz(__rbit64(v34)) + (v25 << 6);
      }
      v28 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v27);
      v29 = *v28;
      v30 = v28[1];
      v61 = 0uLL;
      v62 = v29;
      v63 = v30;
      v64 = 0;
      v65 = 0;
      sub_1B765DDFC(v29, v30);
      sub_1B765DDFC(v29, v30);
      sub_1B767F26C((uint64_t)&v57, &v61);
      v31 = v58;
      v32 = v59;
      swift_bridgeObjectRelease();
      sub_1B765DF1C(v31, v32);
      swift_bridgeObjectRelease();
      result = sub_1B765DEC4(v29, v30);
    }
  }
  if (*((_BYTE *)v1 + 16) != 1)
  {
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_BYTE *)(a1 + 16) = 2;
    return result;
  }
  v57 = MEMORY[0x1E0DEE9E8];
  v4 = v2 + 56;
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_7;
    }
    v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_80;
    }
    if (v18 >= v8)
      goto LABEL_52;
    v19 = *(_QWORD *)(v4 + 8 * v18);
    ++v10;
    if (!v19)
    {
      v10 = v18 + 1;
      if (v18 + 1 >= v8)
        goto LABEL_52;
      v19 = *(_QWORD *)(v4 + 8 * v10);
      if (!v19)
      {
        v10 = v18 + 2;
        if (v18 + 2 >= v8)
          goto LABEL_52;
        v19 = *(_QWORD *)(v4 + 8 * v10);
        if (!v19)
        {
          v10 = v18 + 3;
          if (v18 + 3 >= v8)
            goto LABEL_52;
          v19 = *(_QWORD *)(v4 + 8 * v10);
          if (!v19)
          {
            v10 = v18 + 4;
            if (v18 + 4 >= v8)
              goto LABEL_52;
            v19 = *(_QWORD *)(v4 + 8 * v10);
            if (!v19)
              break;
          }
        }
      }
    }
LABEL_26:
    v7 = (v19 - 1) & v19;
    v12 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_7:
    v13 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v12);
    v14 = *v13;
    v15 = v13[1];
    sub_1B765DDFC(*v13, v15);
    sub_1B765DDFC(v14, v15);
    sub_1B767E4FC((uint64_t *)&v61, 0, 0, v14, v15);
    v16 = v62;
    v17 = v63;
    swift_bridgeObjectRelease();
    sub_1B765DF1C(v16, v17);
    result = sub_1B765DEC4(v14, v15);
  }
  v20 = v18 + 5;
  if (v20 >= v8)
  {
LABEL_52:
    result = swift_release();
    *(_QWORD *)a1 = v57;
    *(_QWORD *)(a1 + 8) = 0;
    *(_BYTE *)(a1 + 16) = 1;
    return result;
  }
  v19 = *(_QWORD *)(v4 + 8 * v20);
  if (v19)
  {
    v10 = v20;
    goto LABEL_26;
  }
  while (1)
  {
    v10 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v10 >= v8)
      goto LABEL_52;
    v19 = *(_QWORD *)(v4 + 8 * v10);
    ++v20;
    if (v19)
      goto LABEL_26;
  }
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
  return result;
}

uint64_t sub_1B76C9FE0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t result;
  char v9;
  _BYTE v10[40];
  __int128 v11[2];

  sub_1B76638C0(v4 + 24, (uint64_t)v11, a1);
  sub_1B7672DE4(v11, (uint64_t)v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B5E0);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  if (swift_dynamicCast())
  {
    result = __swift_instantiateConcreteTypeFromMangledName(a3);
    *(_QWORD *)(a4 + 24) = result;
    *(_QWORD *)(a4 + 32) = &off_1E6CB05D8;
    *(_BYTE *)a4 = v9;
  }
  else
  {
    result = sub_1B76DBE28();
    __break(1u);
  }
  return result;
}

unint64_t sub_1B76CA668()
{
  unint64_t result;

  result = qword_1EF179508;
  if (!qword_1EF179508)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for SettingScope, &type metadata for SettingScope);
    atomic_store(result, (unint64_t *)&qword_1EF179508);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SettingScope(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B76CA6F8 + 4 * byte_1B76E01B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B76CA72C + 4 * byte_1B76E01B0[v4]))();
}

uint64_t sub_1B76CA72C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76CA734(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B76CA73CLL);
  return result;
}

uint64_t sub_1B76CA748(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B76CA750);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B76CA754(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76CA75C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SettingScope()
{
  return &type metadata for SettingScope;
}

uint64_t sub_1B76CA778()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1B76CA780()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1B76CA820(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void (*v15)(unint64_t, unint64_t, uint64_t);
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 50) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v10 = *v11;
    v10[1] = v11[1];
    v12 = ((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8;
    v13 = ((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8;
    v14 = *(_QWORD *)(v13 + 24);
    *(_QWORD *)(v12 + 24) = v14;
    *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
    v15 = **(void (***)(unint64_t, unint64_t, uint64_t))(v14 - 8);
    swift_bridgeObjectRetain();
    v15(v12, v13, v14);
    *(_BYTE *)(v12 + 40) = *(_BYTE *)(v13 + 40);
    *(_BYTE *)(v12 + 41) = *(_BYTE *)(v13 + 41);
    *(_BYTE *)(v12 + 42) = *(_BYTE *)(v13 + 42);
    v16 = (v12 + 50) & 0xFFFFFFFFFFFFFFF8;
    v17 = (v13 + 50) & 0xFFFFFFFFFFFFFFF8;
    v18 = *(_QWORD *)v17;
    *(_BYTE *)(v16 + 8) = *(_BYTE *)(v17 + 8);
    *(_QWORD *)v16 = v18;
  }
  return v4;
}

uint64_t sub_1B76CA964(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_0((v4 + 23) & 0xFFFFFFFFFFFFFFF8);
}

uint64_t sub_1B76CA9B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void (*v12)(unint64_t, unint64_t, uint64_t);
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 24) = v11;
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  v12 = **(void (***)(unint64_t, unint64_t, uint64_t))(v11 - 8);
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  *(_BYTE *)(v9 + 40) = *(_BYTE *)(v10 + 40);
  *(_BYTE *)(v9 + 41) = *(_BYTE *)(v10 + 41);
  *(_BYTE *)(v9 + 42) = *(_BYTE *)(v10 + 42);
  v13 = (v9 + 50) & 0xFFFFFFFFFFFFFFF8;
  v14 = (v10 + 50) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  *(_QWORD *)v13 = v15;
  return a1;
}

uint64_t sub_1B76CAA90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v9, (uint64_t *)v10);
  *(_BYTE *)(v9 + 40) = *(_BYTE *)(v10 + 40);
  *(_BYTE *)(v9 + 41) = *(_BYTE *)(v10 + 41);
  *(_BYTE *)(v9 + 42) = *(_BYTE *)(v10 + 42);
  v11 = (v9 + 50) & 0xFFFFFFFFFFFFFFF8;
  v12 = (v10 + 50) & 0xFFFFFFFFFFFFFFF8;
  v13 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  *(_QWORD *)v11 = v13;
  return a1;
}

uint64_t sub_1B76CAB58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  unint64_t v9;
  unint64_t v10;
  __int128 v11;
  __int128 v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_OWORD *)v10;
  v12 = *(_OWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  *(_OWORD *)v9 = v11;
  *(_OWORD *)(v9 + 16) = v12;
  *(_BYTE *)(v9 + 40) = *(_BYTE *)(v10 + 40);
  *(_BYTE *)(v9 + 41) = *(_BYTE *)(v10 + 41);
  *(_BYTE *)(v9 + 42) = *(_BYTE *)(v10 + 42);
  v13 = (v9 + 50) & 0xFFFFFFFFFFFFFFF8;
  v14 = (v10 + 50) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  *(_QWORD *)v13 = v15;
  return a1;
}

uint64_t sub_1B76CAC04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  __int128 v11;
  __int128 v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_0(v9);
  v11 = *(_OWORD *)v10;
  v12 = *(_OWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  *(_OWORD *)v9 = v11;
  *(_OWORD *)(v9 + 16) = v12;
  *(_BYTE *)(v9 + 40) = *(_BYTE *)(v10 + 40);
  *(_BYTE *)(v9 + 41) = *(_BYTE *)(v10 + 41);
  *(_BYTE *)(v9 + 42) = *(_BYTE *)(v10 + 42);
  v13 = (v9 + 50) & 0xFFFFFFFFFFFFFFF8;
  v14 = (v10 + 50) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  *(_QWORD *)v13 = v15;
  return a1;
}

uint64_t sub_1B76CACD0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v14 = *(_QWORD *)(((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 8);
      if (v14 >= 0xFFFFFFFF)
        LODWORD(v14) = -1;
      return (v14 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    v8 = ((((((v7 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 50) & 0xFFFFFFF8) + 9;
    v9 = (a2 - v6 + 255) >> (8 * v8);
    if (v8 < 4)
      v10 = v9 + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1B76CAD68 + 4 * byte_1B76E01BA[v12]))();
  }
}

void sub_1B76CADFC(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 50) & 0xFFFFFFFFFFFFFFF8)
     + 9;
  if (v6 >= a3)
  {
    v10 = 0u;
    if (v6 >= a2)
      goto LABEL_17;
  }
  else
  {
    if (v7 <= 3)
      v8 = ((a3 - v6 + 255) >> (8 * v7)) + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (v6 >= a2)
LABEL_17:
      __asm { BR              X12 }
  }
  if (v7 >= 4)
    v11 = ~v6 + a2;
  else
    v11 = (~(_BYTE)v6 + a2);
  bzero(a1, v7);
  if ((_DWORD)v7 == 1)
    *a1 = v11;
  else
    *(_DWORD *)a1 = v11;
  __asm { BR              X10 }
}

void sub_1B76CAF28()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1B76CAFA0);
}

void sub_1B76CAF30(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1B76CAF38);
  JUMPOUT(0x1B76CAFA0);
}

void sub_1B76CAF7C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1B76CAFA0);
}

void sub_1B76CAF84()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1B76CAFA0);
}

uint64_t sub_1B76CAF8C(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
    goto LABEL_6;
  if (a3 < 0x7FFFFFFF)
  {
    if (a2 < 0)
      JUMPOUT(0x1B76CAF98);
    *(_QWORD *)(((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) = (a2 - 1);
LABEL_6:
    JUMPOUT(0x1B76CAFA0);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

uint64_t type metadata accessor for SettingMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SettingMetadata);
}

uint64_t sub_1B76CAFC4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1B76CAFCC()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;

  v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    v0 = sub_1B76DBA98();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return v0;
}

uint64_t *sub_1B76CB090(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t *, uint64_t *, uint64_t);
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void (*v25)(unint64_t, unint64_t, uint64_t);

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_DWORD *)(v6 + 80);
  v9 = v7 + v8;
  v10 = (v7 + v8) & ~v8;
  v11 = v10 + v7;
  v12 = ((((v10 + v7 + v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 43;
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v12 > 0x18)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v8 & 0xF8 ^ 0x1F8) & (v8 + 16)));
    swift_retain();
  }
  else
  {
    v16 = ~v8;
    v17 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v17(a1, a2, *(_QWORD *)(a3 + 16));
    v18 = ((unint64_t)v4 + v9) & v16;
    v19 = ((unint64_t)a2 + v9) & v16;
    v17((uint64_t *)v18, (uint64_t *)v19, v5);
    v17((uint64_t *)((v9 + v18) & v16), (uint64_t *)((v9 + v19) & v16), v5);
    v20 = (_QWORD *)((v18 + v11 + 7) & 0xFFFFFFFFFFFFFFF8);
    v21 = (_QWORD *)((v19 + v11 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v20 = *v21;
    v20[1] = v21[1];
    v22 = ((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8;
    v23 = ((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8;
    v24 = *(_QWORD *)(v23 + 24);
    *(_QWORD *)(v22 + 24) = v24;
    *(_QWORD *)(v22 + 32) = *(_QWORD *)(v23 + 32);
    v25 = **(void (***)(unint64_t, unint64_t, uint64_t))(v24 - 8);
    swift_bridgeObjectRetain();
    v25(v22, v23, v24);
    *(_BYTE *)(v22 + 40) = *(_BYTE *)(v23 + 40);
    *(_BYTE *)(v22 + 41) = *(_BYTE *)(v23 + 41);
    *(_BYTE *)(v22 + 42) = *(_BYTE *)(v23 + 42);
  }
  return v4;
}

uint64_t sub_1B76CB208(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v5(a1, v3);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = (v6 + v7 + a1) & ~v7;
  v5(v8, v3);
  v5((v6 + v7 + v8) & ~v7, v3);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_0((((v8 + v6 + ((v6 + v7) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
}

uint64_t sub_1B76CB29C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void (*v18)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (v8 + v9 + a1) & ~v9;
  v11 = (v8 + v9 + a2) & ~v9;
  v7(v10, v11, v5);
  v7((v8 + v9 + v10) & ~v9, (v8 + v9 + v11) & ~v9, v5);
  v12 = ((v8 + v9) & ~v9) + v8 + 7;
  v13 = (_QWORD *)((v12 + v10) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)((v12 + v11) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  v13[1] = v14[1];
  v15 = ((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8;
  v16 = ((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8;
  v17 = *(_QWORD *)(v16 + 24);
  *(_QWORD *)(v15 + 24) = v17;
  *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
  v18 = **(void (***)(unint64_t, unint64_t, uint64_t))(v17 - 8);
  swift_bridgeObjectRetain();
  v18(v15, v16, v17);
  *(_BYTE *)(v15 + 40) = *(_BYTE *)(v16 + 40);
  *(_BYTE *)(v15 + 41) = *(_BYTE *)(v16 + 41);
  *(_BYTE *)(v15 + 42) = *(_BYTE *)(v16 + 42);
  return a1;
}

uint64_t sub_1B76CB3B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (v8 + v9 + a1) & ~v9;
  v11 = (v8 + v9 + a2) & ~v9;
  v7(v10, v11, v5);
  v7((v8 + v9 + v10) & ~v9, (v8 + v9 + v11) & ~v9, v5);
  v12 = ((v8 + v9) & ~v9) + v8 + 7;
  v13 = (_QWORD *)((v12 + v10) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)((v12 + v11) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = ((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8;
  v16 = ((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v15, (uint64_t *)v16);
  *(_BYTE *)(v15 + 40) = *(_BYTE *)(v16 + 40);
  *(_BYTE *)(v15 + 41) = *(_BYTE *)(v16 + 41);
  *(_BYTE *)(v15 + 42) = *(_BYTE *)(v16 + 42);
  return a1;
}

uint64_t sub_1B76CB4B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __int128 v18;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (v8 + v9 + a1) & ~v9;
  v11 = (v8 + v9 + a2) & ~v9;
  v7(v10, v11, v5);
  v7((v8 + v9 + v10) & ~v9, (v8 + v9 + v11) & ~v9, v5);
  v12 = ((v8 + v9) & ~v9) + v8 + 7;
  v13 = (_OWORD *)((v12 + v10) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_OWORD *)((v12 + v11) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  v15 = ((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8;
  v16 = ((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8;
  v17 = *(_QWORD *)(v16 + 32);
  v18 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v18;
  *(_QWORD *)(v15 + 32) = v17;
  *(_BYTE *)(v15 + 40) = *(_BYTE *)(v16 + 40);
  *(_BYTE *)(v15 + 41) = *(_BYTE *)(v16 + 41);
  *(_BYTE *)(v15 + 42) = *(_BYTE *)(v16 + 42);
  return a1;
}

uint64_t sub_1B76CB59C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  __int128 v17;
  __int128 v18;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (v8 + v9 + a1) & ~v9;
  v11 = (v8 + v9 + a2) & ~v9;
  v7(v10, v11, v5);
  v7((v8 + v9 + v10) & ~v9, (v8 + v9 + v11) & ~v9, v5);
  v12 = ((v8 + v9) & ~v9) + v8 + 7;
  v13 = (_QWORD *)((v12 + v10) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)((v12 + v11) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRelease();
  v15 = ((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8;
  v16 = ((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_0(v15);
  v17 = *(_OWORD *)v16;
  v18 = *(_OWORD *)(v16 + 16);
  *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
  *(_OWORD *)v15 = v17;
  *(_OWORD *)(v15 + 16) = v18;
  *(_BYTE *)(v15 + 40) = *(_BYTE *)(v16 + 40);
  *(_BYTE *)(v15 + 41) = *(_BYTE *)(v16 + 41);
  *(_BYTE *)(v15 + 42) = *(_BYTE *)(v16 + 42);
  return a1;
}

uint64_t sub_1B76CB6A4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  unint64_t v18;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = *(unsigned __int8 *)(v4 + 80);
  v9 = v7 + v8;
  v10 = (v7 + v8) & ~v8;
  v11 = v10 + v7;
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v18 = *(_QWORD *)(((((v9 + a1) & ~v8) + v11 + 7) & 0xFFFFFFFFFFFFF8) + 8);
      if (v18 >= 0xFFFFFFFF)
        LODWORD(v18) = -1;
      return (v18 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    v12 = ((((v11 + v10 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 43;
    v13 = (a2 - v6 + 0xFFFFFF) >> (8 * v12);
    if (v12 == 3)
      v14 = v13 + 1;
    else
      v14 = 2;
    if (v14 >= 0x10000)
      v15 = 4;
    else
      v15 = 2;
    if (v14 < 0x100)
      v15 = 1;
    if (v14 >= 2)
      v16 = v15;
    else
      v16 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1B76CB74C + 4 * byte_1B76E01C9[v16]))();
  }
}

void sub_1B76CB7F0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = ((((((v7 + v8) & ~(_DWORD)v8) + v7 + ((v7 + v8) & ~(_DWORD)v8) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 43;
  if (v6 >= a3)
  {
    v12 = 0u;
    if (v6 >= a2)
      goto LABEL_17;
  }
  else
  {
    if ((((((((_DWORD)v7 + (_DWORD)v8) & ~(_DWORD)v8) + (_DWORD)v7 + (((_DWORD)v7 + (_DWORD)v8) & ~(_DWORD)v8) + 7) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8) == 0xFFFFFFD8)
      v10 = ((a3 - v6 + 0xFFFFFF) >> (8 * v9)) + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
    if (v6 >= a2)
LABEL_17:
      __asm { BR              X14 }
  }
  v13 = ~v6 + a2;
  bzero(a1, ((((((v7 + v8) & ~v8) + v7 + ((v7 + v8) & ~v8) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 43);
  if (v9 == 3)
  {
    *a1 = v13;
    *((_BYTE *)a1 + 2) = BYTE2(v13);
  }
  else
  {
    *(_DWORD *)a1 = v13;
  }
  __asm { BR              X11 }
}

void sub_1B76CB92C(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = a1;
  JUMPOUT(0x1B76CB9ACLL);
}

void sub_1B76CB934(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1B76CB93CLL);
  JUMPOUT(0x1B76CB9ACLL);
}

void sub_1B76CB988(__int16 a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = a1;
  JUMPOUT(0x1B76CB9ACLL);
}

void sub_1B76CB990(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = a1;
  JUMPOUT(0x1B76CB9ACLL);
}

uint64_t sub_1B76CB998@<X0>(int a1@<W1>, unsigned int a2@<W2>, uint64_t a3@<X8>)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_WORD *)(v8 + v9) = 0;
  if (!a1)
    goto LABEL_6;
  if (a2 < 0x7FFFFFFF)
  {
    v4 = (((v6 + v8) & a3) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
    if (a1 < 0)
      JUMPOUT(0x1B76CB9A4);
    *(_QWORD *)(v4 + 8) = (a1 - 1);
LABEL_6:
    JUMPOUT(0x1B76CB9ACLL);
  }
  return (*(uint64_t (**)(uint64_t))(v5 + 56))(v8);
}

uint64_t type metadata accessor for BoundedSettingMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BoundedSettingMetadata);
}

uint64_t sub_1B76CB9D8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  void (*v11)(void (*)(uint64_t), _QWORD *);
  _QWORD *v12;
  uint64_t v14;

  v3 = v2;
  if (qword_1ED53C0C0 != -1)
    swift_once();
  v6 = sub_1B76DB8B8();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED53B750);
  swift_bridgeObjectRetain_n();
  v7 = sub_1B76DB8A0();
  v8 = sub_1B76DBC84();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v14 = v10;
    *(_DWORD *)v9 = 136446210;
    swift_bridgeObjectRetain();
    sub_1B7669B50(a1, a2, &v14);
    sub_1B76DBD38();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1B7656000, v7, v8, "Fetching effective value for %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCA9590](v10, -1, -1);
    MEMORY[0x1BCCA9590](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v11 = *(void (**)(void (*)(uint64_t), _QWORD *))(v3 + 32);
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a1;
  v12[3] = a2;
  v12[4] = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  v11(sub_1B76D2EC4, v12);
  return swift_release();
}

void sub_1B76CBBCC(void *a1, uint64_t a2, char a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  void *v38;
  _QWORD *v39;
  void *v40;
  _QWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  uint64_t aBlock;
  uint64_t v50;
  uint64_t (*v51)(uint64_t);
  void *v52;
  uint64_t (*v53)();
  _QWORD *v54;
  uint64_t v55;

  v47 = a4;
  v11 = sub_1B76DB9D8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v13);
  v15 = (char *)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1B76DB9F0();
  MEMORY[0x1E0C80A78](v16, v17);
  v20 = (char *)v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
  {
    v30 = a1;
    if (qword_1ED53C0C0 != -1)
      swift_once();
    v31 = sub_1B76DB8B8();
    __swift_project_value_buffer(v31, (uint64_t)qword_1ED53B750);
    swift_bridgeObjectRetain();
    sub_1B76D2EDC(a1, a2, 1);
    swift_bridgeObjectRetain();
    sub_1B76D2EDC(a1, a2, 1);
    v48 = sub_1B76DB8A0();
    v32 = sub_1B76DBC90();
    if (os_log_type_enabled(v48, v32))
    {
      v33 = swift_slowAlloc();
      v34 = swift_slowAlloc();
      aBlock = v34;
      *(_DWORD *)v33 = 136446466;
      swift_bridgeObjectRetain();
      v55 = sub_1B7669B50(v47, a5, &aBlock);
      sub_1B76DBD38();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v33 + 12) = 2082;
      v55 = (uint64_t)a1;
      v35 = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B678);
      v36 = sub_1B76DBB10();
      v55 = sub_1B7669B50(v36, v37, &aBlock);
      sub_1B76DBD38();
      swift_bridgeObjectRelease();
      sub_1B76D2EE8(a1, a2, 1);
      sub_1B76D2EE8(a1, a2, 1);
      _os_log_impl(&dword_1B7656000, v48, v32, "Failed to fetch effective value for %{public}s: %{public}s", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v34, -1, -1);
      MEMORY[0x1BCCA9590](v33, -1, -1);

      sub_1B76D2EE8(a1, a2, 1);
    }
    else
    {
      sub_1B76D2EE8(a1, a2, 1);
      swift_bridgeObjectRelease_n();
      sub_1B76D2EE8(a1, a2, 1);
      sub_1B76D2EE8(a1, a2, 1);

    }
  }
  else
  {
    v46 = a6;
    v48 = v18;
    if (qword_1ED53C0C0 != -1)
      swift_once();
    v21 = sub_1B76DB8B8();
    __swift_project_value_buffer(v21, (uint64_t)qword_1ED53B750);
    swift_bridgeObjectRetain_n();
    v22 = sub_1B76DB8A0();
    v23 = sub_1B76DBC84();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc();
      v43 = v16;
      v25 = v24;
      v42 = swift_slowAlloc();
      v55 = v42;
      *(_DWORD *)v25 = 136446466;
      v41[1] = v25 + 4;
      aBlock = (uint64_t)a1;
      v50 = a2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF179530);
      v45 = a2;
      v26 = sub_1B76DBB10();
      v44 = v12;
      aBlock = sub_1B7669B50(v26, v27, &v55);
      sub_1B76DBD38();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2082;
      swift_bridgeObjectRetain();
      aBlock = sub_1B7669B50(v47, a5, &v55);
      v12 = v44;
      a2 = v45;
      sub_1B76DBD38();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1B7656000, v22, v23, "Setting effective value %{public}s for %{public}s", (uint8_t *)v25, 0x16u);
      v28 = v42;
      swift_arrayDestroy();
      MEMORY[0x1BCCA9590](v28, -1, -1);
      v29 = v25;
      v16 = v43;
      MEMORY[0x1BCCA9590](v29, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1B7672EAC();
    v38 = (void *)sub_1B76DBCB4();
    v39 = (_QWORD *)swift_allocObject();
    v39[2] = v46;
    v39[3] = a1;
    v39[4] = a2;
    v53 = sub_1B76D2F18;
    v54 = v39;
    aBlock = MEMORY[0x1E0C809B0];
    v50 = 1107296256;
    v51 = sub_1B768C184;
    v52 = &block_descriptor_5;
    v40 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    sub_1B76DB9E4();
    aBlock = MEMORY[0x1E0DEE9D8];
    sub_1B7672F84();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B098);
    sub_1B7672FCC();
    sub_1B76DBD5C();
    MEMORY[0x1BCCA8DEC](0, v20, v15, v40);
    _Block_release(v40);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    ((void (*)(char *, uint64_t))v48[1].isa)(v20, v16);
  }
}

uint64_t sub_1B76CC1F4(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  __int128 v12[2];
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;

  if ((*(_BYTE *)(v2 + 24) & 1) == 0)
  {
    v3 = v2;
    v4 = *(_QWORD *)(v2 + 48);
    *(_QWORD *)(v3 + 48) = result;
    *(_QWORD *)(v3 + 56) = a2;
    swift_retain();
    sub_1B7671FB8(v4);
    sub_1B76CB9D8(0x6C616974696E49, 0xE700000000000000);
    result = *(_QWORD *)(v3 + 16);
    v5 = *(_QWORD *)(result + 16);
    if (v5)
    {
      v6 = result + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_1B7672D50(v6, (uint64_t)v13);
        v7 = v14;
        v8 = v15;
        __swift_project_boxed_opaque_existential_1(v13, v14);
        v9 = swift_allocObject();
        swift_weakInit();
        sub_1B7672D50((uint64_t)v13, (uint64_t)v12);
        v10 = swift_allocObject();
        *(_QWORD *)(v10 + 16) = v9;
        sub_1B7672DE4(v12, v10 + 24);
        v11 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v8 + 16);
        swift_retain();
        v11(sub_1B76D2E8C, v10, v7, v8);
        swift_release();
        swift_release();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
        v6 += 40;
        --v5;
      }
      while (v5);
      result = swift_bridgeObjectRelease();
    }
    *(_BYTE *)(v3 + 24) = 1;
  }
  return result;
}

uint64_t sub_1B76CC368(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = a2[3];
    v5 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v4);
    v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
    v7 = sub_1B76DBAD4();
    v9 = v8;

    sub_1B76CB9D8(v7, v9);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void static ManagedSettingsStore.Name.default.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x746C7561666544;
  a1[1] = 0xE700000000000000;
}

uint64_t ManagedSettingsStore.Name.rawValue.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

ManagedSettings::ManagedSettingsStore::Name __swiftcall ManagedSettingsStore.Name.init(rawValue:)(ManagedSettings::ManagedSettingsStore::Name rawValue)
{
  ManagedSettings::ManagedSettingsStore::Name *v1;

  *v1 = rawValue;
  return rawValue;
}

_QWORD *sub_1B76CC464@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = result[1];
  *a2 = *result;
  a2[1] = v2;
  return result;
}

uint64_t sub_1B76CC470@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76CC47C(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1B76DBED0();
}

uint64_t sub_1B76CC4AC()
{
  sub_1B76DBF54();
  swift_bridgeObjectRetain();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

uint64_t sub_1B76CC504()
{
  swift_bridgeObjectRetain();
  sub_1B76DBB1C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76CC548()
{
  sub_1B76DBF54();
  swift_bridgeObjectRetain();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

uint64_t static ManagedSettingsStore.PropertyKeys.active.getter()
{
  return 0x657669746361;
}

uint64_t static ManagedSettingsStore.PropertyKeys.syncToWatch.getter()
{
  return 0x61576F54636E7973;
}

uint64_t ManagedSettingsStore.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  ManagedSettingsStore.init()();
  return v0;
}

_QWORD *ManagedSettingsStore.init()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  void (*v8)(char *, char *, uint64_t);
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B780);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (char *)v1 + OBJC_IVAR____TtC15ManagedSettings20ManagedSettingsStore__effectiveMaximumMovieRating;
  v25 = 1000;
  sub_1B76DB96C();
  v8 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v8(v7, v6, v2);
  v9 = (char *)v1 + OBJC_IVAR____TtC15ManagedSettings20ManagedSettingsStore__effectiveMaximumTVShowRating;
  v25 = 1000;
  sub_1B76DB96C();
  v8(v9, v6, v2);
  v1[3] = 0x746C7561666544;
  v1[4] = 0xE700000000000000;
  v1[5] = 0;
  v1[6] = 0;
  v1[7] = 0x746C7561666544;
  v1[8] = 0xE700000000000000;
  v1[9] = 0;
  v1[10] = 0;
  v1[11] = 0x746C7561666544;
  v1[12] = 0xE700000000000000;
  v1[13] = 0;
  v1[14] = 0;
  v1[15] = 0x746C7561666544;
  v1[16] = 0xE700000000000000;
  v1[17] = 0;
  v1[18] = 0;
  v1[19] = 0x746C7561666544;
  v1[20] = 0xE700000000000000;
  v1[21] = 0;
  v1[22] = 0;
  v1[23] = 0x746C7561666544;
  v1[24] = 0xE700000000000000;
  v1[25] = 0;
  v1[26] = 0;
  v1[27] = 0x746C7561666544;
  v1[28] = 0xE700000000000000;
  v1[29] = 0;
  v1[30] = 0;
  v1[31] = 0x746C7561666544;
  v1[32] = 0xE700000000000000;
  v1[33] = 0;
  v1[34] = 0;
  v1[35] = 0x746C7561666544;
  v1[36] = 0xE700000000000000;
  v1[37] = 0;
  v1[38] = 0;
  v1[39] = 0x746C7561666544;
  v1[40] = 0xE700000000000000;
  v1[41] = 0;
  v1[42] = 0;
  v1[43] = 0x746C7561666544;
  v1[44] = 0xE700000000000000;
  v1[45] = 0;
  v1[46] = 0;
  v1[47] = 0x746C7561666544;
  v1[48] = 0xE700000000000000;
  v1[49] = 0;
  v1[50] = 0;
  v1[51] = 0x746C7561666544;
  v1[52] = 0xE700000000000000;
  v1[53] = 0;
  v1[54] = 0;
  v1[55] = 0x746C7561666544;
  v1[56] = 0xE700000000000000;
  v1[57] = 0;
  v1[58] = 0;
  v1[59] = 0x746C7561666544;
  v1[60] = 0xE700000000000000;
  v1[61] = 0;
  v1[62] = 0;
  v1[63] = 0x746C7561666544;
  v1[64] = 0xE700000000000000;
  v1[66] = 0;
  v1[65] = 0;
  v1[67] = 0x746C7561666544;
  v1[68] = 0xE700000000000000;
  v1[70] = 0;
  v1[69] = 0;
  v1[71] = 0x746C7561666544;
  v1[72] = 0xE700000000000000;
  v1[74] = 0;
  v1[73] = 0;
  v1[75] = 0x746C7561666544;
  v1[76] = 0xE700000000000000;
  v1[78] = 0;
  v1[77] = 0;
  v1[79] = 0x746C7561666544;
  v1[80] = 0xE700000000000000;
  v1[82] = 0;
  v1[81] = 0;
  v1[83] = 0x746C7561666544;
  v1[84] = 0xE700000000000000;
  v1[86] = 0;
  v1[85] = 0;
  v1[87] = 0x746C7561666544;
  v1[88] = 0xE700000000000000;
  v1[90] = 0;
  v1[89] = 0;
  v1[91] = 0x746C7561666544;
  v1[92] = 0xE700000000000000;
  v1[94] = 0;
  v1[93] = 0;
  v1[95] = 0x746C7561666544;
  v1[96] = 0xE700000000000000;
  v1[98] = 0;
  v1[97] = 0;
  v1[99] = 0x746C7561666544;
  v1[100] = 0xE700000000000000;
  v1[102] = 0;
  v1[101] = 0;
  v1[103] = 0x746C7561666544;
  v1[104] = 0xE700000000000000;
  v1[106] = 0;
  v1[105] = 0;
  v1[107] = 0x746C7561666544;
  v1[108] = 0xE700000000000000;
  v1[110] = 0;
  v1[109] = 0;
  v1[111] = 0x746C7561666544;
  v1[112] = 0xE700000000000000;
  v1[114] = 0;
  v1[113] = 0;
  v1[115] = 0x746C7561666544;
  v1[116] = 0xE700000000000000;
  v1[118] = 0;
  v1[117] = 0;
  v1[119] = 0x746C7561666544;
  v1[120] = 0xE700000000000000;
  v1[122] = 0;
  v1[121] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B008);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1B76DDBB0;
  if (qword_1ED53B0B0 != -1)
    swift_once();
  v11 = (void *)qword_1ED53B0A8;
  v12 = type metadata accessor for DarwinNotificationReceiver();
  v13 = swift_allocObject();
  *(_DWORD *)(v13 + 24) = -1;
  *(_QWORD *)(v13 + 16) = v11;
  *(_QWORD *)(v10 + 56) = v12;
  *(_QWORD *)(v10 + 64) = &off_1E6CB0A00;
  *(_QWORD *)(v10 + 32) = v13;
  v14 = type metadata accessor for NotificationCenterReceiver();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v11;
  *(_QWORD *)(v15 + 24) = 0;
  *(_QWORD *)(v10 + 96) = v14;
  *(_QWORD *)(v10 + 104) = &off_1E6CB0A20;
  *(_QWORD *)(v10 + 72) = v15;
  v16 = qword_1ED53B6B8;
  v17 = v11;
  if (v16 != -1)
    swift_once();
  v18 = qword_1ED53B6B0;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = sub_1B76D2F78;
  *(_QWORD *)(v19 + 24) = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B778);
  v20 = swift_allocObject();
  *(_BYTE *)(v20 + 24) = 0;
  *(_QWORD *)(v20 + 48) = 0;
  *(_QWORD *)(v20 + 56) = 0;
  *(_QWORD *)(v20 + 16) = v10;
  *(_QWORD *)(v20 + 32) = sub_1B76CCAB4;
  *(_QWORD *)(v20 + 40) = v19;
  v1[2] = v20;
  v21 = swift_allocObject();
  swift_weakInit();
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = sub_1B76CD1A0;
  *(_QWORD *)(v22 + 24) = v21;
  swift_retain();
  sub_1B76CC1F4((uint64_t)sub_1B76CD1A8, v22);
  swift_release();
  return v1;
}

uint64_t sub_1B76CCA20(uint64_t a1, uint64_t a2, void (*a3)(uint64_t (*)(uint64_t a1, uint64_t a2, char a3), uint64_t))
{
  uint64_t v6;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  swift_retain();
  a3(sub_1B76D2F3C, v6);
  return swift_release();
}

uint64_t sub_1B76CCA90()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B76CCAB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1B76CCA20(a1, a2, *(void (**)(uint64_t (*)(uint64_t, uint64_t, char), uint64_t))(v2 + 16));
}

uint64_t sub_1B76CCABC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

_QWORD *ManagedSettingsStore.__allocating_init(named:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3[4];

  v1 = a1[1];
  v3[0] = *a1;
  v3[1] = v1;
  type metadata accessor for ManagedSettingsStore();
  v3[2] = 0;
  v3[3] = 0;
  swift_allocObject();
  return sub_1B76CCBD4(v3);
}

_QWORD *ManagedSettingsStore.__allocating_init(sharedContainer:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3[4];

  v3[0] = 0x746C7561666544;
  v3[1] = 0xE700000000000000;
  v3[2] = a1;
  v3[3] = a2;
  type metadata accessor for ManagedSettingsStore();
  swift_allocObject();
  return sub_1B76CCBD4(v3);
}

_QWORD *ManagedSettingsStore.__allocating_init(named:sharedContainer:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5[4];

  v3 = a1[1];
  v5[0] = *a1;
  v5[1] = v3;
  v5[2] = a2;
  v5[3] = a3;
  type metadata accessor for ManagedSettingsStore();
  swift_allocObject();
  return sub_1B76CCBD4(v5);
}

_QWORD *sub_1B76CCBD4(uint64_t *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, char *, uint64_t);
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B780);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v9 = a1[1];
  v12 = a1[2];
  v11 = a1[3];
  v13 = (char *)v2 + OBJC_IVAR____TtC15ManagedSettings20ManagedSettingsStore__effectiveMaximumMovieRating;
  v32 = 1000;
  sub_1B76DB96C();
  v14 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v14(v13, v8, v4);
  v15 = (char *)v2 + OBJC_IVAR____TtC15ManagedSettings20ManagedSettingsStore__effectiveMaximumTVShowRating;
  v32 = 1000;
  sub_1B76DB96C();
  v14(v15, v8, v4);
  v2[3] = v10;
  v2[4] = v9;
  v2[5] = v12;
  v2[6] = v11;
  v2[7] = v10;
  v2[8] = v9;
  v2[9] = v12;
  v2[10] = v11;
  v2[11] = v10;
  v2[12] = v9;
  v2[13] = v12;
  v2[14] = v11;
  v2[15] = v10;
  v2[16] = v9;
  v2[17] = v12;
  v2[18] = v11;
  v2[19] = v10;
  v2[20] = v9;
  v2[21] = v12;
  v2[22] = v11;
  v2[23] = v10;
  v2[24] = v9;
  v2[25] = v12;
  v2[26] = v11;
  v2[27] = v10;
  v2[28] = v9;
  v2[29] = v12;
  v2[30] = v11;
  v2[31] = v10;
  v2[32] = v9;
  v2[33] = v12;
  v2[34] = v11;
  v2[35] = v10;
  v2[36] = v9;
  v2[37] = v12;
  v2[38] = v11;
  v2[39] = v10;
  v2[40] = v9;
  v2[41] = v12;
  v2[42] = v11;
  v2[43] = v10;
  v2[44] = v9;
  v2[45] = v12;
  v2[46] = v11;
  v2[47] = v10;
  v2[48] = v9;
  v2[49] = v12;
  v2[50] = v11;
  v2[51] = v10;
  v2[52] = v9;
  v2[53] = v12;
  v2[54] = v11;
  v2[55] = v10;
  v2[56] = v9;
  v2[57] = v12;
  v2[58] = v11;
  v2[59] = v10;
  v2[60] = v9;
  v2[61] = v12;
  v2[62] = v11;
  v2[63] = v10;
  v2[64] = v9;
  v2[65] = v12;
  v2[66] = v11;
  v2[67] = v10;
  v2[68] = v9;
  v2[69] = v12;
  v2[70] = v11;
  v2[71] = v10;
  v2[72] = v9;
  v2[73] = v12;
  v2[74] = v11;
  v2[75] = v10;
  v2[76] = v9;
  v2[77] = v12;
  v2[78] = v11;
  v2[79] = v10;
  v2[80] = v9;
  v2[81] = v12;
  v2[82] = v11;
  v2[83] = v10;
  v2[84] = v9;
  v2[85] = v12;
  v2[86] = v11;
  v2[87] = v10;
  v2[88] = v9;
  v2[89] = v12;
  v2[90] = v11;
  v2[91] = v10;
  v2[92] = v9;
  v2[93] = v12;
  v2[94] = v11;
  v2[95] = v10;
  v2[96] = v9;
  v2[97] = v12;
  v2[98] = v11;
  v2[99] = v10;
  v2[100] = v9;
  v2[101] = v12;
  v2[102] = v11;
  v2[103] = v10;
  v2[104] = v9;
  v2[105] = v12;
  v2[106] = v11;
  v2[107] = v10;
  v2[108] = v9;
  v2[109] = v12;
  v2[110] = v11;
  v2[111] = v10;
  v2[112] = v9;
  v2[113] = v12;
  v2[114] = v11;
  v2[115] = v10;
  v2[116] = v9;
  v2[117] = v12;
  v2[118] = v11;
  v2[119] = v10;
  v2[120] = v9;
  v2[121] = v12;
  v2[122] = v11;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B008);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1B76DDBB0;
  v17 = qword_1ED53B0B0;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  if (v17 != -1)
    swift_once();
  v18 = (void *)qword_1ED53B0A8;
  v19 = type metadata accessor for DarwinNotificationReceiver();
  v20 = swift_allocObject();
  *(_DWORD *)(v20 + 24) = -1;
  *(_QWORD *)(v20 + 16) = v18;
  *(_QWORD *)(v16 + 56) = v19;
  *(_QWORD *)(v16 + 64) = &off_1E6CB0A00;
  *(_QWORD *)(v16 + 32) = v20;
  v21 = type metadata accessor for NotificationCenterReceiver();
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v18;
  *(_QWORD *)(v22 + 24) = 0;
  *(_QWORD *)(v16 + 96) = v21;
  *(_QWORD *)(v16 + 104) = &off_1E6CB0A20;
  *(_QWORD *)(v16 + 72) = v22;
  v23 = qword_1ED53B6B8;
  v24 = v18;
  if (v23 != -1)
    swift_once();
  v25 = qword_1ED53B6B0;
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = sub_1B76D2E5C;
  *(_QWORD *)(v26 + 24) = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B778);
  v27 = swift_allocObject();
  *(_BYTE *)(v27 + 24) = 0;
  *(_QWORD *)(v27 + 48) = 0;
  *(_QWORD *)(v27 + 56) = 0;
  *(_QWORD *)(v27 + 16) = v16;
  *(_QWORD *)(v27 + 32) = sub_1B76D2F90;
  *(_QWORD *)(v27 + 40) = v26;
  v2[2] = v27;
  v28 = swift_allocObject();
  swift_weakInit();
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = sub_1B76CD1A0;
  *(_QWORD *)(v29 + 24) = v28;
  swift_retain();
  sub_1B76CC1F4((uint64_t)sub_1B76D2F94, v29);
  swift_release();
  return v2;
}

uint64_t sub_1B76CD020(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1B76DB990();
    swift_release();
    swift_release();
    if (v5 != a1)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      v5 = a1;
      swift_retain();
      sub_1B76DB99C();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1B76DB990();
    swift_release();
    swift_release();
    if (v5 == a2)
    {
      return swift_release();
    }
    else
    {
      swift_getKeyPath();
      swift_getKeyPath();
      return sub_1B76DB99C();
    }
  }
  return result;
}

uint64_t sub_1B76CD1A0(uint64_t a1, uint64_t a2)
{
  return sub_1B76CD020(a1, a2);
}

uint64_t sub_1B76CD1A8(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*a1, a1[1]);
}

uint64_t type metadata accessor for ManagedSettingsStore()
{
  uint64_t result;

  result = qword_1ED53C0B0;
  if (!qword_1ED53C0B0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ManagedSettingsStore.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);

  v1 = v0;
  sub_1B7672C48();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = v0 + OBJC_IVAR____TtC15ManagedSettings20ManagedSettingsStore__effectiveMaximumMovieRating;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B780);
  v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
  v4(v2, v3);
  v4(v1 + OBJC_IVAR____TtC15ManagedSettings20ManagedSettingsStore__effectiveMaximumTVShowRating, v3);
  return v1;
}

uint64_t ManagedSettingsStore.__deallocating_deinit()
{
  ManagedSettingsStore.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1B76CD504()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  id v27;
  char v28;
  uint64_t v30;
  uint64_t v31;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  MEMORY[0x1E0C80A78](v1, v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  v5 = off_1EF1775A8;
  if (off_1EF1775A8)
  {
    v7 = v0[3];
    v6 = v0[4];
    if (v0[6])
    {
      v8 = v0[5];
      v9 = v0[6];
    }
    else
    {
      v8 = *((_QWORD *)off_1EF1775A8 + 2);
      v9 = *((_QWORD *)off_1EF1775A8 + 3);
      swift_bridgeObjectRetain();
    }
    v11 = (void *)*((_QWORD *)v5 + 5);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    objc_msgSend(v11, sel_lock);
    swift_beginAccess();
    v12 = *((_QWORD *)v5 + 4);
    if (*(_QWORD *)(v12 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13 = sub_1B76606E0(v8, v9);
      if ((v14 & 1) != 0)
      {
        v15 = v13;
        v31 = v6;
        v16 = v7;
        v17 = *(_QWORD *)(v12 + 56);
        v18 = sub_1B76DB888();
        v30 = v8;
        v19 = *(_QWORD *)(v18 - 8);
        v20 = v17 + *(_QWORD *)(v19 + 72) * v15;
        v7 = v16;
        v6 = v31;
        (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v4, v20, v18);
        v21 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56);
        v8 = v30;
        v21(v4, 0, 1, v18);
      }
      else
      {
        v23 = sub_1B76DB888();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v4, 1, 1, v23);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v22 = sub_1B76DB888();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v4, 1, 1, v22);
    }
    objc_msgSend(*((id *)v5 + 5), sel_unlock);
    if (qword_1ED53B6B8 != -1)
      swift_once();
    v24 = sub_1B769BEA8((uint64_t)v4, v8, v9, v7, v6);
    swift_bridgeObjectRelease();
    sub_1B7668FB8((uint64_t)v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    if (*(_QWORD *)(v24 + 16) && (v25 = sub_1B76606E0(0x657669746361, 0xE600000000000000), (v26 & 1) != 0))
    {
      v10 = *(void **)(*(_QWORD *)(v24 + 56) + 8 * v25);
      v27 = v10;
    }
    else
    {
      v10 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
  }
  v28 = _sSb15ManagedSettingsE5value4fromSbSgSo8NSObjectCSg_tFZ_0(v10);

  return (v28 == 2) | v28 & 1u;
}

uint64_t sub_1B76CD804(char a1)
{
  return sub_1B76CDB90(a1, 0x657669746361, 0xE600000000000000);
}

uint64_t (*sub_1B76CD818(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = sub_1B76CD504() & 1;
  return sub_1B76CD850;
}

uint64_t sub_1B76CD850(uint64_t a1)
{
  return sub_1B76CD804(*(_BYTE *)(a1 + 8));
}

uint64_t sub_1B76CD874()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  id v27;
  char v28;
  uint64_t v30;
  uint64_t v31;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  MEMORY[0x1E0C80A78](v1, v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  v5 = off_1EF1775A8;
  if (off_1EF1775A8)
  {
    v7 = v0[3];
    v6 = v0[4];
    if (v0[6])
    {
      v8 = v0[5];
      v9 = v0[6];
    }
    else
    {
      v8 = *((_QWORD *)off_1EF1775A8 + 2);
      v9 = *((_QWORD *)off_1EF1775A8 + 3);
      swift_bridgeObjectRetain();
    }
    v11 = (void *)*((_QWORD *)v5 + 5);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    objc_msgSend(v11, sel_lock);
    swift_beginAccess();
    v12 = *((_QWORD *)v5 + 4);
    if (*(_QWORD *)(v12 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13 = sub_1B76606E0(v8, v9);
      if ((v14 & 1) != 0)
      {
        v15 = v13;
        v31 = v6;
        v16 = v7;
        v17 = *(_QWORD *)(v12 + 56);
        v18 = sub_1B76DB888();
        v30 = v8;
        v19 = *(_QWORD *)(v18 - 8);
        v20 = v17 + *(_QWORD *)(v19 + 72) * v15;
        v7 = v16;
        v6 = v31;
        (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v4, v20, v18);
        v21 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56);
        v8 = v30;
        v21(v4, 0, 1, v18);
      }
      else
      {
        v23 = sub_1B76DB888();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v4, 1, 1, v23);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v22 = sub_1B76DB888();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v4, 1, 1, v22);
    }
    objc_msgSend(*((id *)v5 + 5), sel_unlock);
    if (qword_1ED53B6B8 != -1)
      swift_once();
    v24 = sub_1B769BEA8((uint64_t)v4, v8, v9, v7, v6);
    swift_bridgeObjectRelease();
    sub_1B7668FB8((uint64_t)v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    if (*(_QWORD *)(v24 + 16) && (v25 = sub_1B76606E0(0x61576F54636E7973, 0xEB00000000686374), (v26 & 1) != 0))
    {
      v10 = *(void **)(*(_QWORD *)(v24 + 56) + 8 * v25);
      v27 = v10;
    }
    else
    {
      v10 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
  }
  v28 = _sSb15ManagedSettingsE5value4fromSbSgSo8NSObjectCSg_tFZ_0(v10);

  return v28 & 1;
}

uint64_t sub_1B76CDB70(char a1)
{
  return sub_1B76CDB90(a1, 0x61576F54636E7973, 0xEB00000000686374);
}

uint64_t sub_1B76CDB90(char a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t result;
  uint64_t inited;
  id v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14[4];

  if (qword_1EF177160 != -1)
    swift_once();
  result = swift_beginAccess();
  if (off_1EF1775A8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF179510);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B76DCB70;
    *(_QWORD *)(inited + 32) = a2;
    *(_QWORD *)(inited + 40) = a3;
    v9 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    swift_retain();
    *(_QWORD *)(inited + 48) = objc_msgSend(v9, sel_initWithBool_, a1 & 1);
    v10 = sub_1B765E41C(inited);
    v11 = v3[4];
    v12 = v3[5];
    v13 = v3[6];
    v14[0] = v3[3];
    v14[1] = v11;
    v14[2] = v12;
    v14[3] = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B765F7E4(v10, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t (*sub_1B76CDCCC(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = sub_1B76CD874() & 1;
  return sub_1B76CDD04;
}

uint64_t sub_1B76CDD04(uint64_t a1)
{
  return sub_1B76CDB70(*(_BYTE *)(a1 + 8));
}

uint64_t sub_1B76CDD28@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)*a1;
  swift_beginAccess();
  v4 = v3[8];
  v6 = v3[9];
  v5 = v3[10];
  *a2 = v3[7];
  a2[1] = v4;
  a2[2] = v6;
  a2[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76CDD88(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = (_QWORD *)*a2;
  swift_beginAccess();
  v6[7] = v3;
  v6[8] = v2;
  v6[9] = v5;
  v6[10] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76CDE10@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  v3 = v1[8];
  v5 = v1[9];
  v4 = v1[10];
  *a1 = v1[7];
  a1[1] = v3;
  a1[2] = v5;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76CDE6C(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  swift_beginAccess();
  *(_OWORD *)(v1 + 56) = v5;
  *(_QWORD *)(v1 + 72) = v2;
  *(_QWORD *)(v1 + 80) = v3;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1B76CDED4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B76CDF10@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)*a1;
  swift_beginAccess();
  v4 = v3[12];
  v6 = v3[13];
  v5 = v3[14];
  *a2 = v3[11];
  a2[1] = v4;
  a2[2] = v6;
  a2[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76CDF70(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = (_QWORD *)*a2;
  swift_beginAccess();
  v6[11] = v3;
  v6[12] = v2;
  v6[13] = v5;
  v6[14] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76CDFF8@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  v3 = v1[12];
  v5 = v1[13];
  v4 = v1[14];
  *a1 = v1[11];
  a1[1] = v3;
  a1[2] = v5;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76CE054(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  swift_beginAccess();
  *(_OWORD *)(v1 + 88) = v5;
  *(_QWORD *)(v1 + 104) = v2;
  *(_QWORD *)(v1 + 112) = v3;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1B76CE0BC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B76CE0F8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)*a1;
  swift_beginAccess();
  v4 = v3[16];
  v6 = v3[17];
  v5 = v3[18];
  *a2 = v3[15];
  a2[1] = v4;
  a2[2] = v6;
  a2[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76CE158(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = (_QWORD *)*a2;
  swift_beginAccess();
  v6[15] = v3;
  v6[16] = v2;
  v6[17] = v5;
  v6[18] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76CE1E0@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  v3 = v1[16];
  v5 = v1[17];
  v4 = v1[18];
  *a1 = v1[15];
  a1[1] = v3;
  a1[2] = v5;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76CE23C(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  swift_beginAccess();
  *(_OWORD *)(v1 + 120) = v5;
  *(_QWORD *)(v1 + 136) = v2;
  *(_QWORD *)(v1 + 144) = v3;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1B76CE2A4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B76CE2E0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)*a1;
  swift_beginAccess();
  v4 = v3[20];
  v6 = v3[21];
  v5 = v3[22];
  *a2 = v3[19];
  a2[1] = v4;
  a2[2] = v6;
  a2[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76CE340(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = (_QWORD *)*a2;
  swift_beginAccess();
  v6[19] = v3;
  v6[20] = v2;
  v6[21] = v5;
  v6[22] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76CE3C8@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  v3 = v1[20];
  v5 = v1[21];
  v4 = v1[22];
  *a1 = v1[19];
  a1[1] = v3;
  a1[2] = v5;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76CE424(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  swift_beginAccess();
  *(_OWORD *)(v1 + 152) = v5;
  *(_QWORD *)(v1 + 168) = v2;
  *(_QWORD *)(v1 + 176) = v3;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1B76CE48C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B76CE4C8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)*a1;
  swift_beginAccess();
  v4 = v3[24];
  v6 = v3[25];
  v5 = v3[26];
  *a2 = v3[23];
  a2[1] = v4;
  a2[2] = v6;
  a2[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76CE528(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = (_QWORD *)*a2;
  swift_beginAccess();
  v6[23] = v3;
  v6[24] = v2;
  v6[25] = v5;
  v6[26] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76CE5B0@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  v3 = v1[24];
  v5 = v1[25];
  v4 = v1[26];
  *a1 = v1[23];
  a1[1] = v3;
  a1[2] = v5;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76CE60C(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  swift_beginAccess();
  *(_OWORD *)(v1 + 184) = v5;
  *(_QWORD *)(v1 + 200) = v2;
  *(_QWORD *)(v1 + 208) = v3;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1B76CE674())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1B76CE6B0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)*a1;
  swift_beginAccess();
  v4 = v3[28];
  v6 = v3[29];
  v5 = v3[30];
  *a2 = v3[27];
  a2[1] = v4;
  a2[2] = v6;
  a2[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76CE710(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = (_QWORD *)*a2;
  swift_beginAccess();
  v6[27] = v3;
  v6[28] = v2;
  v6[29] = v5;
  v6[30] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76CE798@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  v3 = v1[28];
  v5 = v1[29];
  v4 = v1[30];
  *a1 = v1[27];
  a1[1] = v3;
  a1[2] = v5;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76CE7F4(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  swift_beginAccess();
  *(_OWORD *)(v1 + 216) = v5;
  *(_QWORD *)(v1 + 232) = v2;
  *(_QWORD *)(v1 + 240) = v3;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1B76CE85C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B76CE898@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)*a1;
  swift_beginAccess();
  v4 = v3[32];
  v6 = v3[33];
  v5 = v3[34];
  *a2 = v3[31];
  a2[1] = v4;
  a2[2] = v6;
  a2[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76CE8F8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = (_QWORD *)*a2;
  swift_beginAccess();
  v6[31] = v3;
  v6[32] = v2;
  v6[33] = v5;
  v6[34] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76CE980@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  v3 = v1[32];
  v5 = v1[33];
  v4 = v1[34];
  *a1 = v1[31];
  a1[1] = v3;
  a1[2] = v5;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76CE9DC(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  swift_beginAccess();
  *(_OWORD *)(v1 + 248) = v5;
  *(_QWORD *)(v1 + 264) = v2;
  *(_QWORD *)(v1 + 272) = v3;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1B76CEA44())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B76CEA80@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)*a1;
  swift_beginAccess();
  v4 = v3[36];
  v6 = v3[37];
  v5 = v3[38];
  *a2 = v3[35];
  a2[1] = v4;
  a2[2] = v6;
  a2[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76CEAE0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = (_QWORD *)*a2;
  swift_beginAccess();
  v6[35] = v3;
  v6[36] = v2;
  v6[37] = v5;
  v6[38] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76CEB68@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  v3 = v1[36];
  v5 = v1[37];
  v4 = v1[38];
  *a1 = v1[35];
  a1[1] = v3;
  a1[2] = v5;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76CEBC4(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  swift_beginAccess();
  *(_OWORD *)(v1 + 280) = v5;
  *(_QWORD *)(v1 + 296) = v2;
  *(_QWORD *)(v1 + 304) = v3;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1B76CEC38())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B76CEC74@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)*a1;
  swift_beginAccess();
  v4 = v3[40];
  v6 = v3[41];
  v5 = v3[42];
  *a2 = v3[39];
  a2[1] = v4;
  a2[2] = v6;
  a2[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76CECD4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = (_QWORD *)*a2;
  swift_beginAccess();
  v6[39] = v3;
  v6[40] = v2;
  v6[41] = v5;
  v6[42] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76CED5C@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  v3 = v1[40];
  v5 = v1[41];
  v4 = v1[42];
  *a1 = v1[39];
  a1[1] = v3;
  a1[2] = v5;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76CEDB8(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  swift_beginAccess();
  *(_OWORD *)(v1 + 312) = v5;
  *(_QWORD *)(v1 + 328) = v2;
  *(_QWORD *)(v1 + 336) = v3;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1B76CEE2C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B76CEE68@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)*a1;
  swift_beginAccess();
  v4 = v3[44];
  v6 = v3[45];
  v5 = v3[46];
  *a2 = v3[43];
  a2[1] = v4;
  a2[2] = v6;
  a2[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76CEEC8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = (_QWORD *)*a2;
  swift_beginAccess();
  v6[43] = v3;
  v6[44] = v2;
  v6[45] = v5;
  v6[46] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76CEF50@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  v3 = v1[44];
  v5 = v1[45];
  v4 = v1[46];
  *a1 = v1[43];
  a1[1] = v3;
  a1[2] = v5;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76CEFAC(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  swift_beginAccess();
  *(_OWORD *)(v1 + 344) = v5;
  *(_QWORD *)(v1 + 360) = v2;
  *(_QWORD *)(v1 + 368) = v3;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1B76CF020())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B76CF05C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)*a1;
  swift_beginAccess();
  v4 = v3[48];
  v6 = v3[49];
  v5 = v3[50];
  *a2 = v3[47];
  a2[1] = v4;
  a2[2] = v6;
  a2[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76CF0BC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = (_QWORD *)*a2;
  swift_beginAccess();
  v6[47] = v3;
  v6[48] = v2;
  v6[49] = v5;
  v6[50] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76CF144@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  v3 = v1[48];
  v5 = v1[49];
  v4 = v1[50];
  *a1 = v1[47];
  a1[1] = v3;
  a1[2] = v5;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76CF1A0(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  swift_beginAccess();
  *(_OWORD *)(v1 + 376) = v5;
  *(_QWORD *)(v1 + 392) = v2;
  *(_QWORD *)(v1 + 400) = v3;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1B76CF214())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B76CF250@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)*a1;
  swift_beginAccess();
  v4 = v3[52];
  v6 = v3[53];
  v5 = v3[54];
  *a2 = v3[51];
  a2[1] = v4;
  a2[2] = v6;
  a2[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76CF2B0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = (_QWORD *)*a2;
  swift_beginAccess();
  v6[51] = v3;
  v6[52] = v2;
  v6[53] = v5;
  v6[54] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76CF338@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  v3 = v1[52];
  v5 = v1[53];
  v4 = v1[54];
  *a1 = v1[51];
  a1[1] = v3;
  a1[2] = v5;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76CF394(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  swift_beginAccess();
  *(_OWORD *)(v1 + 408) = v5;
  *(_QWORD *)(v1 + 424) = v2;
  *(_QWORD *)(v1 + 432) = v3;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1B76CF408())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B76CF444@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)*a1;
  swift_beginAccess();
  v4 = v3[56];
  v6 = v3[57];
  v5 = v3[58];
  *a2 = v3[55];
  a2[1] = v4;
  a2[2] = v6;
  a2[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76CF4A4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = (_QWORD *)*a2;
  swift_beginAccess();
  v6[55] = v3;
  v6[56] = v2;
  v6[57] = v5;
  v6[58] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76CF52C@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  v3 = v1[56];
  v5 = v1[57];
  v4 = v1[58];
  *a1 = v1[55];
  a1[1] = v3;
  a1[2] = v5;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76CF588(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  swift_beginAccess();
  *(_OWORD *)(v1 + 440) = v5;
  *(_QWORD *)(v1 + 456) = v2;
  *(_QWORD *)(v1 + 464) = v3;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1B76CF5FC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B76CF638@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)*a1;
  swift_beginAccess();
  v4 = v3[60];
  v6 = v3[61];
  v5 = v3[62];
  *a2 = v3[59];
  a2[1] = v4;
  a2[2] = v6;
  a2[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76CF698(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = (_QWORD *)*a2;
  swift_beginAccess();
  v6[59] = v3;
  v6[60] = v2;
  v6[61] = v5;
  v6[62] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76CF720@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  v3 = v1[60];
  v5 = v1[61];
  v4 = v1[62];
  *a1 = v1[59];
  a1[1] = v3;
  a1[2] = v5;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76CF77C(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  swift_beginAccess();
  *(_OWORD *)(v1 + 472) = v5;
  *(_QWORD *)(v1 + 488) = v2;
  *(_QWORD *)(v1 + 496) = v3;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1B76CF7F0())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B76CF82C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)*a1;
  swift_beginAccess();
  v4 = v3[64];
  v5 = v3[65];
  v6 = v3[66];
  *a2 = v3[63];
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76CF890(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = (_QWORD *)*a2;
  swift_beginAccess();
  v6[63] = v3;
  v6[64] = v2;
  v6[65] = v5;
  v6[66] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76CF91C@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  v3 = v1[64];
  v4 = v1[65];
  v5 = v1[66];
  *a1 = v1[63];
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76CF97C(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  swift_beginAccess();
  *(_OWORD *)(v1 + 504) = v5;
  *(_QWORD *)(v1 + 520) = v2;
  *(_QWORD *)(v1 + 528) = v3;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1B76CF9F4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B76CFA30@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)*a1;
  swift_beginAccess();
  v4 = v3[68];
  v5 = v3[69];
  v6 = v3[70];
  *a2 = v3[67];
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76CFA98(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = (_QWORD *)*a2;
  swift_beginAccess();
  v6[67] = v3;
  v6[68] = v2;
  v6[69] = v5;
  v6[70] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76CFB28@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  v3 = v1[68];
  v4 = v1[69];
  v5 = v1[70];
  *a1 = v1[67];
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76CFB8C(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  swift_beginAccess();
  *(_OWORD *)(v1 + 536) = v5;
  *(_QWORD *)(v1 + 552) = v2;
  *(_QWORD *)(v1 + 560) = v3;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1B76CFC04())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B76CFC40@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)*a1;
  swift_beginAccess();
  v4 = v3[72];
  v5 = v3[73];
  v6 = v3[74];
  *a2 = v3[71];
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76CFCA8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = (_QWORD *)*a2;
  swift_beginAccess();
  v6[71] = v3;
  v6[72] = v2;
  v6[73] = v5;
  v6[74] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76CFD38@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  v3 = v1[72];
  v4 = v1[73];
  v5 = v1[74];
  *a1 = v1[71];
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76CFD9C(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  swift_beginAccess();
  *(_OWORD *)(v1 + 568) = v5;
  *(_QWORD *)(v1 + 584) = v2;
  *(_QWORD *)(v1 + 592) = v3;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1B76CFE14())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B76CFE50@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)*a1;
  swift_beginAccess();
  v4 = v3[76];
  v5 = v3[77];
  v6 = v3[78];
  *a2 = v3[75];
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76CFEB8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = (_QWORD *)*a2;
  swift_beginAccess();
  v6[75] = v3;
  v6[76] = v2;
  v6[77] = v5;
  v6[78] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76CFF48@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  v3 = v1[76];
  v4 = v1[77];
  v5 = v1[78];
  *a1 = v1[75];
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76CFFAC(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  swift_beginAccess();
  *(_OWORD *)(v1 + 600) = v5;
  *(_QWORD *)(v1 + 616) = v2;
  *(_QWORD *)(v1 + 624) = v3;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1B76D0024())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B76D0060@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)*a1;
  swift_beginAccess();
  v4 = v3[80];
  v5 = v3[81];
  v6 = v3[82];
  *a2 = v3[79];
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76D00C8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = (_QWORD *)*a2;
  swift_beginAccess();
  v6[79] = v3;
  v6[80] = v2;
  v6[81] = v5;
  v6[82] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76D0158@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  v3 = v1[80];
  v4 = v1[81];
  v5 = v1[82];
  *a1 = v1[79];
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76D01BC(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  swift_beginAccess();
  *(_OWORD *)(v1 + 632) = v5;
  *(_QWORD *)(v1 + 648) = v2;
  *(_QWORD *)(v1 + 656) = v3;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1B76D0234())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B76D0270@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)*a1;
  swift_beginAccess();
  v4 = v3[84];
  v5 = v3[85];
  v6 = v3[86];
  *a2 = v3[83];
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76D02D8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = (_QWORD *)*a2;
  swift_beginAccess();
  v6[83] = v3;
  v6[84] = v2;
  v6[85] = v5;
  v6[86] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76D0368@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  v3 = v1[84];
  v4 = v1[85];
  v5 = v1[86];
  *a1 = v1[83];
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76D03CC(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  swift_beginAccess();
  *(_OWORD *)(v1 + 664) = v5;
  *(_QWORD *)(v1 + 680) = v2;
  *(_QWORD *)(v1 + 688) = v3;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1B76D0444())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B76D0480@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)*a1;
  swift_beginAccess();
  v4 = v3[88];
  v5 = v3[89];
  v6 = v3[90];
  *a2 = v3[87];
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76D04E8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = (_QWORD *)*a2;
  swift_beginAccess();
  v6[87] = v3;
  v6[88] = v2;
  v6[89] = v5;
  v6[90] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76D0578@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  v3 = v1[88];
  v4 = v1[89];
  v5 = v1[90];
  *a1 = v1[87];
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76D05DC(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  swift_beginAccess();
  *(_OWORD *)(v1 + 696) = v5;
  *(_QWORD *)(v1 + 712) = v2;
  *(_QWORD *)(v1 + 720) = v3;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1B76D0654())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B76D0690@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)*a1;
  swift_beginAccess();
  v4 = v3[92];
  v5 = v3[93];
  v6 = v3[94];
  *a2 = v3[91];
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76D06F8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = (_QWORD *)*a2;
  swift_beginAccess();
  v6[91] = v3;
  v6[92] = v2;
  v6[93] = v5;
  v6[94] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76D0788@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  v3 = v1[92];
  v4 = v1[93];
  v5 = v1[94];
  *a1 = v1[91];
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76D07EC(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  swift_beginAccess();
  *(_OWORD *)(v1 + 728) = v5;
  *(_QWORD *)(v1 + 744) = v2;
  *(_QWORD *)(v1 + 752) = v3;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1B76D0864())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B76D08A0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)*a1;
  swift_beginAccess();
  v4 = v3[96];
  v5 = v3[97];
  v6 = v3[98];
  *a2 = v3[95];
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76D0908(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = (_QWORD *)*a2;
  swift_beginAccess();
  v6[95] = v3;
  v6[96] = v2;
  v6[97] = v5;
  v6[98] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76D0998@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  v3 = v1[96];
  v4 = v1[97];
  v5 = v1[98];
  *a1 = v1[95];
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76D09FC(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  swift_beginAccess();
  *(_OWORD *)(v1 + 760) = v5;
  *(_QWORD *)(v1 + 776) = v2;
  *(_QWORD *)(v1 + 784) = v3;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1B76D0A74())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B76D0AB0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)*a1;
  swift_beginAccess();
  v4 = v3[100];
  v5 = v3[101];
  v6 = v3[102];
  *a2 = v3[99];
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76D0B18(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = (_QWORD *)*a2;
  swift_beginAccess();
  v6[99] = v3;
  v6[100] = v2;
  v6[101] = v5;
  v6[102] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76D0BA8@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  v3 = v1[100];
  v4 = v1[101];
  v5 = v1[102];
  *a1 = v1[99];
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76D0C0C(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  swift_beginAccess();
  *(_OWORD *)(v1 + 792) = v5;
  *(_QWORD *)(v1 + 808) = v2;
  *(_QWORD *)(v1 + 816) = v3;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1B76D0C84())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B76D0CC0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)*a1;
  swift_beginAccess();
  v4 = v3[104];
  v5 = v3[105];
  v6 = v3[106];
  *a2 = v3[103];
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76D0D28(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = (_QWORD *)*a2;
  swift_beginAccess();
  v6[103] = v3;
  v6[104] = v2;
  v6[105] = v5;
  v6[106] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76D0DB8@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  v3 = v1[104];
  v4 = v1[105];
  v5 = v1[106];
  *a1 = v1[103];
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76D0E1C(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  swift_beginAccess();
  *(_OWORD *)(v1 + 824) = v5;
  *(_QWORD *)(v1 + 840) = v2;
  *(_QWORD *)(v1 + 848) = v3;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1B76D0E94())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B76D0ED0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)*a1;
  swift_beginAccess();
  v4 = v3[108];
  v5 = v3[109];
  v6 = v3[110];
  *a2 = v3[107];
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76D0F38(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = (_QWORD *)*a2;
  swift_beginAccess();
  v6[107] = v3;
  v6[108] = v2;
  v6[109] = v5;
  v6[110] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76D0FC8@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  v3 = v1[108];
  v4 = v1[109];
  v5 = v1[110];
  *a1 = v1[107];
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76D102C(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  swift_beginAccess();
  *(_OWORD *)(v1 + 856) = v5;
  *(_QWORD *)(v1 + 872) = v2;
  *(_QWORD *)(v1 + 880) = v3;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1B76D10A4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B76D10E0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)*a1;
  swift_beginAccess();
  v4 = v3[112];
  v5 = v3[113];
  v6 = v3[114];
  *a2 = v3[111];
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76D1148(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = (_QWORD *)*a2;
  swift_beginAccess();
  v6[111] = v3;
  v6[112] = v2;
  v6[113] = v5;
  v6[114] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76D11D8@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  v3 = v1[112];
  v4 = v1[113];
  v5 = v1[114];
  *a1 = v1[111];
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76D123C(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  swift_beginAccess();
  *(_OWORD *)(v1 + 888) = v5;
  *(_QWORD *)(v1 + 904) = v2;
  *(_QWORD *)(v1 + 912) = v3;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1B76D12B4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B76D12F0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)*a1;
  swift_beginAccess();
  v4 = v3[116];
  v5 = v3[117];
  v6 = v3[118];
  *a2 = v3[115];
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76D1358(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = (_QWORD *)*a2;
  swift_beginAccess();
  v6[115] = v3;
  v6[116] = v2;
  v6[117] = v5;
  v6[118] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76D13E8@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  v3 = v1[116];
  v4 = v1[117];
  v5 = v1[118];
  *a1 = v1[115];
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76D144C(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  swift_beginAccess();
  *(_OWORD *)(v1 + 920) = v5;
  *(_QWORD *)(v1 + 936) = v2;
  *(_QWORD *)(v1 + 944) = v3;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1B76D14C4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B76D1500@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)*a1;
  swift_beginAccess();
  v4 = v3[120];
  v5 = v3[121];
  v6 = v3[122];
  *a2 = v3[119];
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76D1568(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = (_QWORD *)*a2;
  swift_beginAccess();
  v6[119] = v3;
  v6[120] = v2;
  v6[121] = v5;
  v6[122] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76D15F8@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  v3 = v1[120];
  v4 = v1[121];
  v5 = v1[122];
  *a1 = v1[119];
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B76D165C(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  swift_beginAccess();
  *(_OWORD *)(v1 + 952) = v5;
  *(_QWORD *)(v1 + 968) = v2;
  *(_QWORD *)(v1 + 976) = v3;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1B76D16D4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1B76D1710()
{
  _QWORD *v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[4];

  if (qword_1EF177160 != -1)
    swift_once();
  result = swift_beginAccess();
  if (off_1EF1775A8)
  {
    v2 = v0[4];
    v3 = v0[5];
    v4 = v0[6];
    v5[0] = v0[3];
    v5[1] = v2;
    v5[2] = v3;
    v5[3] = v4;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1B765F098(v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B76D17D0()
{
  _QWORD *v0;
  uint64_t result;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF177160 != -1)
    swift_once();
  result = swift_beginAccess();
  if (off_1EF1775A8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF179518);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B76DCB70;
    v3 = v0[4];
    *(_QWORD *)(inited + 32) = v0[3];
    *(_QWORD *)(inited + 40) = v3;
    swift_retain();
    swift_bridgeObjectRetain();
    v4 = sub_1B76D232C(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    sub_1B765F384(v4, v0[5], v0[6]);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t static ManagedSettingsStore.delete(stores:)(uint64_t a1)
{
  uint64_t result;

  if (qword_1EF177160 != -1)
    swift_once();
  result = swift_beginAccess();
  if (off_1EF1775A8)
  {
    swift_retain();
    sub_1B765F384(a1, 0, 0);
    return swift_release();
  }
  return result;
}

uint64_t static ManagedSettingsStore.delete(stores:for:)(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  if (*(_QWORD *)(result + 16))
  {
    v5 = result;
    if (qword_1EF177160 != -1)
      swift_once();
    result = swift_beginAccess();
    if (off_1EF1775A8)
    {
      swift_retain();
      sub_1B765F384(v5, a2, a3);
      return swift_release();
    }
  }
  return result;
}

uint64_t static ManagedSettingsStore.stores.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  MEMORY[0x1E0C80A78](v0, v1);
  v3 = &v19[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  v4 = off_1EF1775A8;
  if (!off_1EF1775A8)
    return MEMORY[0x1E0DEE9E8];
  v6 = *((_QWORD *)off_1EF1775A8 + 2);
  v5 = *((_QWORD *)off_1EF1775A8 + 3);
  v7 = (void *)*((_QWORD *)off_1EF1775A8 + 5);
  swift_retain();
  swift_bridgeObjectRetain();
  objc_msgSend(v7, sel_lock);
  swift_beginAccess();
  v8 = *((_QWORD *)v4 + 4);
  if (*(_QWORD *)(v8 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = sub_1B76606E0(v6, v5);
    if ((v10 & 1) != 0)
    {
      v11 = v9;
      v12 = *(_QWORD *)(v8 + 56);
      v13 = sub_1B76DB888();
      v14 = *(_QWORD *)(v13 - 8);
      (*(void (**)(_BYTE *, unint64_t, uint64_t))(v14 + 16))(v3, v12 + *(_QWORD *)(v14 + 72) * v11, v13);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v3, 0, 1, v13);
    }
    else
    {
      v17 = sub_1B76DB888();
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v3, 1, 1, v17);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = sub_1B76DB888();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v3, 1, 1, v16);
  }
  objc_msgSend(*((id *)v4 + 5), sel_unlock);
  if (qword_1ED53B6B8 != -1)
    swift_once();
  v15 = sub_1B769DFD8((uint64_t)v3, v6, v5);
  swift_bridgeObjectRelease();
  sub_1B7668FB8((uint64_t)v3);
  swift_release();
  return v15;
}

uint64_t static ManagedSettingsStore.stores(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[24];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = &v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  v8 = off_1EF1775A8;
  if (!off_1EF1775A8)
    return MEMORY[0x1E0DEE9E8];
  if (a2)
  {
    v9 = a2;
  }
  else
  {
    a1 = *((_QWORD *)off_1EF1775A8 + 2);
    v9 = *((_QWORD *)off_1EF1775A8 + 3);
    swift_bridgeObjectRetain();
  }
  v11 = (void *)*((_QWORD *)v8 + 5);
  swift_retain();
  swift_bridgeObjectRetain();
  objc_msgSend(v11, sel_lock);
  swift_beginAccess();
  v12 = *((_QWORD *)v8 + 4);
  if (*(_QWORD *)(v12 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13 = sub_1B76606E0(a1, v9);
    if ((v14 & 1) != 0)
    {
      v15 = v13;
      v16 = *(_QWORD *)(v12 + 56);
      v17 = sub_1B76DB888();
      v18 = *(_QWORD *)(v17 - 8);
      (*(void (**)(_BYTE *, unint64_t, uint64_t))(v18 + 16))(v7, v16 + *(_QWORD *)(v18 + 72) * v15, v17);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v7, 0, 1, v17);
    }
    else
    {
      v20 = sub_1B76DB888();
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v7, 1, 1, v20);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = sub_1B76DB888();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v7, 1, 1, v19);
  }
  objc_msgSend(*((id *)v8 + 5), sel_unlock);
  if (qword_1ED53B6B8 != -1)
    swift_once();
  v10 = sub_1B769DFD8((uint64_t)v7, a1, v9);
  swift_bridgeObjectRelease();
  sub_1B7668FB8((uint64_t)v7);
  swift_release();
  return v10;
}

uint64_t sub_1B76D1EC8@<X0>(_QWORD *a1@<X8>)
{
  return sub_1B76D1F24(a1);
}

uint64_t sub_1B76D1EDC()
{
  return sub_1B76D1FB0();
}

uint64_t sub_1B76D1EF0()
{
  return sub_1B76D2030();
}

uint64_t sub_1B76D1F04()
{
  return sub_1B76D2214();
}

uint64_t sub_1B76D1F10@<X0>(_QWORD *a1@<X8>)
{
  return sub_1B76D1F24(a1);
}

uint64_t sub_1B76D1F24@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B76DB990();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1B76D1F9C()
{
  return sub_1B76D1FB0();
}

uint64_t sub_1B76D1FB0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1B76DB99C();
}

uint64_t sub_1B76D201C()
{
  return sub_1B76D2030();
}

uint64_t sub_1B76D2030()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B76DB990();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1B76D2098()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B780);
  sub_1B76DB978();
  return swift_endAccess();
}

uint64_t sub_1B76D20F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v13;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF179528);
  v3 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x1E0C80A78](v2, v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5, v8);
  v10 = (char *)&v13 - v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v11((char *)&v13 - v9, a1, v2);
  v11(v7, (uint64_t)v10, v2);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B780);
  sub_1B76DB984();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v10, v2);
}

uint64_t sub_1B76D2208()
{
  return sub_1B76D2214();
}

uint64_t sub_1B76D2214()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED53B780);
  sub_1B76DB978();
  return swift_endAccess();
}

uint64_t static ManagedSettingsStore.effectivePublisher(for:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  v2 = swift_bridgeObjectRetain();
  return sub_1B76B7180(v2, a1);
}

uint64_t sub_1B76D2294@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for ManagedSettingsStore();
  result = sub_1B76DB948();
  *a1 = result;
  return result;
}

uint64_t sub_1B76D22D0(uint64_t result, __int128 *a2)
{
  void (*v2)(__int128 *);
  __int128 v3;

  v3 = *a2;
  v2 = *(void (**)(__int128 *))(result + 48);
  if (v2)
  {
    swift_retain();
    v2(&v3);
    return sub_1B7671FB8((uint64_t)v2);
  }
  return result;
}

uint64_t sub_1B76D232C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1780A0);
    v3 = sub_1B76DBDA4();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      sub_1B76DBF54();
      swift_bridgeObjectRetain_n();
      sub_1B76DBB1C();
      swift_bridgeObjectRelease();
      result = sub_1B76DBF78();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = sub_1B76DBED0(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = sub_1B76DBED0();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

unint64_t sub_1B76D24EC()
{
  unint64_t result;

  result = qword_1EF179520;
  if (!qword_1EF179520)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for ManagedSettingsStore.Name, &type metadata for ManagedSettingsStore.Name);
    atomic_store(result, (unint64_t *)&qword_1EF179520);
  }
  return result;
}

uint64_t sub_1B76D2530()
{
  return MEMORY[0x1E0C96020];
}

uint64_t sub_1B76D253C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B76CD504();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1B76D2568(char *a1)
{
  return sub_1B76CD804(*a1);
}

uint64_t sub_1B76D258C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B76CD874();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1B76D25B8(char *a1)
{
  return sub_1B76CDB70(*a1);
}

uint64_t sub_1B76D26C4()
{
  return sub_1B76D2098();
}

uint64_t sub_1B76D26E0(uint64_t a1)
{
  return sub_1B76D20F8(a1);
}

uint64_t sub_1B76D26FC()
{
  return sub_1B76D2098();
}

uint64_t sub_1B76D2718(uint64_t a1)
{
  return sub_1B76D20F8(a1);
}

uint64_t sub_1B76D2734()
{
  return type metadata accessor for ManagedSettingsStore();
}

void sub_1B76D273C()
{
  unint64_t v0;

  sub_1B76D2CB0();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for ManagedSettingsStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ManagedSettingsStore.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 344))();
}

uint64_t dispatch thunk of ManagedSettingsStore.active.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of ManagedSettingsStore.active.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of ManagedSettingsStore.active.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of ManagedSettingsStore.syncToWatch.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t dispatch thunk of ManagedSettingsStore.syncToWatch.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of ManagedSettingsStore.syncToWatch.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t dispatch thunk of ManagedSettingsStore.account.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of ManagedSettingsStore.account.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of ManagedSettingsStore.account.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t dispatch thunk of ManagedSettingsStore.airDrop.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t dispatch thunk of ManagedSettingsStore.airDrop.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t dispatch thunk of ManagedSettingsStore.airDrop.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 464))();
}

uint64_t dispatch thunk of ManagedSettingsStore.allowedClient.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 472))();
}

uint64_t dispatch thunk of ManagedSettingsStore.allowedClient.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 480))();
}

uint64_t dispatch thunk of ManagedSettingsStore.allowedClient.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 488))();
}

uint64_t dispatch thunk of ManagedSettingsStore.application.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 496))();
}

uint64_t dispatch thunk of ManagedSettingsStore.application.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 504))();
}

uint64_t dispatch thunk of ManagedSettingsStore.application.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 512))();
}

uint64_t dispatch thunk of ManagedSettingsStore.appStore.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 520))();
}

uint64_t dispatch thunk of ManagedSettingsStore.appStore.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 528))();
}

uint64_t dispatch thunk of ManagedSettingsStore.appStore.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 536))();
}

uint64_t dispatch thunk of ManagedSettingsStore.calculator.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 544))();
}

uint64_t dispatch thunk of ManagedSettingsStore.calculator.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 552))();
}

uint64_t dispatch thunk of ManagedSettingsStore.calculator.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 560))();
}

uint64_t dispatch thunk of ManagedSettingsStore.camera.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 568))();
}

uint64_t dispatch thunk of ManagedSettingsStore.camera.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 576))();
}

uint64_t dispatch thunk of ManagedSettingsStore.camera.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 584))();
}

uint64_t dispatch thunk of ManagedSettingsStore.carPlay.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 592))();
}

uint64_t dispatch thunk of ManagedSettingsStore.carPlay.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 600))();
}

uint64_t dispatch thunk of ManagedSettingsStore.carPlay.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 608))();
}

uint64_t dispatch thunk of ManagedSettingsStore.cellular.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 616))();
}

uint64_t dispatch thunk of ManagedSettingsStore.cellular.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 624))();
}

uint64_t dispatch thunk of ManagedSettingsStore.cellular.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 632))();
}

uint64_t dispatch thunk of ManagedSettingsStore.dateAndTime.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 640))();
}

uint64_t dispatch thunk of ManagedSettingsStore.dateAndTime.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 648))();
}

uint64_t dispatch thunk of ManagedSettingsStore.dateAndTime.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 656))();
}

uint64_t dispatch thunk of ManagedSettingsStore.deviceActivity.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 664))();
}

uint64_t dispatch thunk of ManagedSettingsStore.deviceActivity.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 672))();
}

uint64_t dispatch thunk of ManagedSettingsStore.deviceActivity.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 680))();
}

uint64_t dispatch thunk of ManagedSettingsStore.faceTime.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 688))();
}

uint64_t dispatch thunk of ManagedSettingsStore.faceTime.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 696))();
}

uint64_t dispatch thunk of ManagedSettingsStore.faceTime.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 704))();
}

uint64_t dispatch thunk of ManagedSettingsStore.findMy.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 712))();
}

uint64_t dispatch thunk of ManagedSettingsStore.findMy.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 720))();
}

uint64_t dispatch thunk of ManagedSettingsStore.findMy.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 728))();
}

uint64_t dispatch thunk of ManagedSettingsStore.gameCenter.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 736))();
}

uint64_t dispatch thunk of ManagedSettingsStore.gameCenter.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 744))();
}

uint64_t dispatch thunk of ManagedSettingsStore.gameCenter.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 752))();
}

uint64_t dispatch thunk of ManagedSettingsStore.keyboard.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 760))();
}

uint64_t dispatch thunk of ManagedSettingsStore.keyboard.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 768))();
}

uint64_t dispatch thunk of ManagedSettingsStore.keyboard.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 776))();
}

uint64_t dispatch thunk of ManagedSettingsStore.managedSettings.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 784))();
}

uint64_t dispatch thunk of ManagedSettingsStore.managedSettings.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 792))();
}

uint64_t dispatch thunk of ManagedSettingsStore.managedSettings.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 800))();
}

uint64_t dispatch thunk of ManagedSettingsStore.media.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 808))();
}

uint64_t dispatch thunk of ManagedSettingsStore.media.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 816))();
}

uint64_t dispatch thunk of ManagedSettingsStore.media.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 824))();
}

uint64_t dispatch thunk of ManagedSettingsStore.messages.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 832))();
}

uint64_t dispatch thunk of ManagedSettingsStore.messages.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 840))();
}

uint64_t dispatch thunk of ManagedSettingsStore.messages.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 848))();
}

uint64_t dispatch thunk of ManagedSettingsStore.news.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 856))();
}

uint64_t dispatch thunk of ManagedSettingsStore.news.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 864))();
}

uint64_t dispatch thunk of ManagedSettingsStore.news.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 872))();
}

uint64_t dispatch thunk of ManagedSettingsStore.notification.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 880))();
}

uint64_t dispatch thunk of ManagedSettingsStore.notification.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 888))();
}

uint64_t dispatch thunk of ManagedSettingsStore.notification.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 896))();
}

uint64_t dispatch thunk of ManagedSettingsStore.passcode.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 904))();
}

uint64_t dispatch thunk of ManagedSettingsStore.passcode.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 912))();
}

uint64_t dispatch thunk of ManagedSettingsStore.passcode.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 920))();
}

uint64_t dispatch thunk of ManagedSettingsStore.privacy.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 928))();
}

uint64_t dispatch thunk of ManagedSettingsStore.privacy.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 936))();
}

uint64_t dispatch thunk of ManagedSettingsStore.privacy.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 944))();
}

uint64_t dispatch thunk of ManagedSettingsStore.safari.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 952))();
}

uint64_t dispatch thunk of ManagedSettingsStore.safari.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 960))();
}

uint64_t dispatch thunk of ManagedSettingsStore.safari.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 968))();
}

uint64_t dispatch thunk of ManagedSettingsStore.screenTime.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 976))();
}

uint64_t dispatch thunk of ManagedSettingsStore.screenTime.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 984))();
}

uint64_t dispatch thunk of ManagedSettingsStore.screenTime.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 992))();
}

uint64_t dispatch thunk of ManagedSettingsStore.shield.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1000))();
}

uint64_t dispatch thunk of ManagedSettingsStore.shield.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1008))();
}

uint64_t dispatch thunk of ManagedSettingsStore.shield.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1016))();
}

uint64_t dispatch thunk of ManagedSettingsStore.siri.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1024))();
}

uint64_t dispatch thunk of ManagedSettingsStore.siri.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1032))();
}

uint64_t dispatch thunk of ManagedSettingsStore.siri.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1040))();
}

uint64_t dispatch thunk of ManagedSettingsStore.user.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1048))();
}

uint64_t dispatch thunk of ManagedSettingsStore.user.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1056))();
}

uint64_t dispatch thunk of ManagedSettingsStore.user.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1064))();
}

uint64_t dispatch thunk of ManagedSettingsStore.userSafety.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1072))();
}

uint64_t dispatch thunk of ManagedSettingsStore.userSafety.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1080))();
}

uint64_t dispatch thunk of ManagedSettingsStore.userSafety.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1088))();
}

uint64_t dispatch thunk of ManagedSettingsStore.webContent.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1096))();
}

uint64_t dispatch thunk of ManagedSettingsStore.webContent.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1104))();
}

uint64_t dispatch thunk of ManagedSettingsStore.webContent.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1112))();
}

uint64_t dispatch thunk of ManagedSettingsStore.clearAllSettings()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1120))();
}

uint64_t dispatch thunk of ManagedSettingsStore.deleteStore()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1128))();
}

uint64_t dispatch thunk of ManagedSettingsStore.effectiveMaximumMovieRating.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1136))();
}

uint64_t dispatch thunk of ManagedSettingsStore.$effectiveMaximumMovieRating.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1160))();
}

uint64_t dispatch thunk of ManagedSettingsStore.effectiveMaximumTVShowRating.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1184))();
}

uint64_t dispatch thunk of ManagedSettingsStore.$effectiveMaximumTVShowRating.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1208))();
}

void sub_1B76D2CB0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED53B788)
  {
    v0 = sub_1B76DB9A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED53B788);
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for ManagedSettingsStore.Name(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ManagedSettingsStore.Name()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for ManagedSettingsStore.Name(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for ManagedSettingsStore.Name(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ManagedSettingsStore.Name(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ManagedSettingsStore.Name(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ManagedSettingsStore.Name()
{
  return &type metadata for ManagedSettingsStore.Name;
}

ValueMetadata *type metadata accessor for ManagedSettingsStore.PropertyKeys()
{
  return &type metadata for ManagedSettingsStore.PropertyKeys;
}

ValueMetadata *type metadata accessor for ManagedSettingsStore.Identity()
{
  return &type metadata for ManagedSettingsStore.Identity;
}

uint64_t sub_1B76D2E60()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  return swift_deallocObject();
}

uint64_t sub_1B76D2E8C()
{
  uint64_t v0;

  return sub_1B76CC368(*(_QWORD *)(v0 + 16), (_QWORD *)(v0 + 24));
}

uint64_t sub_1B76D2E98()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1B76D2EC4(uint64_t a1)
{
  uint64_t v1;

  sub_1B76CBBCC(*(void **)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

id sub_1B76D2EDC(id result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return result;
  return result;
}

void sub_1B76D2EE8(id a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)

}

uint64_t sub_1B76D2EF4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B76D2F18()
{
  uint64_t v0;

  return sub_1B76D22D0(*(_QWORD *)(v0 + 16), (__int128 *)(v0 + 24));
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_1B76D2F3C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t (*v4)(_QWORD *);
  _QWORD v6[2];
  char v7;

  v4 = *(uint64_t (**)(_QWORD *))(v3 + 16);
  v6[0] = a1;
  v6[1] = a2;
  v7 = a3 & 1;
  return v4(v6);
}

uint64_t SafariSettings.CookiePolicy.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B76D2FCC + 4 * byte_1B76E06EC[*v0]))(0x726576656ELL, 0xE500000000000000);
}

uint64_t sub_1B76D2FCC()
{
  return 0x57746E6572727563;
}

uint64_t sub_1B76D2FF0()
{
  return 0x5764657469736976;
}

uint64_t sub_1B76D3014()
{
  return 0x737961776C61;
}

ManagedSettings::SafariSettings::CookiePolicy_optional __swiftcall SafariSettings.CookiePolicy.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ManagedSettings::SafariSettings::CookiePolicy_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1B76DBE70();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

ManagedSettings::SafariSettings::Name_optional __swiftcall SafariSettings.Name.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ManagedSettings::SafariSettings::Name_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1B76DBE70();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static SafariSettings.Name.allCases.getter()
{
  return &unk_1E6CAD468;
}

unint64_t SafariSettings.Name.rawValue.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000011;
  if (*v0 == 1)
    v1 = 0xD000000000000013;
  if (*v0)
    return v1;
  else
    return 0xD000000000000013;
}

uint64_t sub_1B76D3140(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B76A14D8(*a1, *a2);
}

uint64_t sub_1B76D314C()
{
  return sub_1B76D93B8();
}

uint64_t sub_1B76D3154()
{
  return sub_1B76D994C();
}

uint64_t sub_1B76D315C()
{
  return sub_1B76DA254();
}

ManagedSettings::SafariSettings::Name_optional sub_1B76D3164(Swift::String *a1)
{
  return SafariSettings.Name.init(rawValue:)(*a1);
}

unint64_t sub_1B76D3170@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;
  unint64_t v3;

  result = SafariSettings.Name.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1B76D3194(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6CAD490;
}

BOOL static SafariSettings.CookiePolicy.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

void sub_1B76D31B8(char *a1)
{
  sub_1B76A15CC(*a1);
}

void sub_1B76D31C4()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1B76DBF54();
  __asm { BR              X9 }
}

uint64_t sub_1B76D320C()
{
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

void sub_1B76D3290()
{
  __asm { BR              X10 }
}

uint64_t sub_1B76D32C8()
{
  sub_1B76DBB1C();
  return swift_bridgeObjectRelease();
}

void sub_1B76D3338()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1B76DBF54();
  __asm { BR              X9 }
}

uint64_t sub_1B76D337C()
{
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

ManagedSettings::SafariSettings::CookiePolicy_optional sub_1B76D3400(Swift::String *a1)
{
  return SafariSettings.CookiePolicy.init(rawValue:)(*a1);
}

uint64_t sub_1B76D340C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1B76D3438 + 4 * byte_1B76E06FC[*v0]))();
}

void sub_1B76D3438(char *a1@<X8>)
{
  strcpy(a1, "currentWebsite");
  a1[15] = -18;
}

void sub_1B76D3460(_QWORD *a1@<X8>)
{
  *a1 = 0x5764657469736976;
  a1[1] = 0xEF73657469736265;
}

void sub_1B76D3488(_QWORD *a1@<X8>)
{
  *a1 = 0x737961776C61;
  a1[1] = 0xE600000000000000;
}

uint64_t SafariSettings.cookiePolicy.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *v1;
  v3 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF1773C0 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B765954C((uint64_t)&byte_1EF179538, v4, v3, v6, v5, a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76D3538@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  char v9;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  v7 = qword_1EF1773C0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B765954C((uint64_t)&byte_1EF179538, v4, v3, v6, v5, &v9);
  swift_bridgeObjectRelease_n();
  result = swift_bridgeObjectRelease_n();
  *a2 = v9;
  return result;
}

void SafariSettings.cookiePolicy.setter(unsigned __int8 *a1)
{
  uint64_t v1;
  _BYTE v2[8];

  v1 = *a1;
  if (qword_1EF1773C0 != -1)
    swift_once();
  sub_1B76638C0((uint64_t)&byte_1EF179538, (uint64_t)v2, &qword_1EF179640);
  __asm { BR              X9 }
}

void (*SafariSettings.cookiePolicy.modify(uint64_t **a1))(uint64_t a1, char a2)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF1773C0 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B765954C((uint64_t)&byte_1EF179538, v3, v4, v6, v5, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1B76D38CC;
}

void sub_1B76D38CC(uint64_t a1, char a2)
{
  unsigned __int8 *v2;
  char v3;
  char v4;

  if ((a2 & 1) != 0)
  {
    v3 = *(_BYTE *)(a1 + 8);
    v2 = (unsigned __int8 *)&v3;
  }
  else
  {
    v4 = *(_BYTE *)(a1 + 8);
    v2 = (unsigned __int8 *)&v4;
  }
  SafariSettings.cookiePolicy.setter(v2);
}

uint64_t SafariSettings.effectiveCookiePolicy.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char v6;
  char v8;
  char v9;
  _BYTE v10[8];
  uint64_t v11;
  uint64_t v12;

  if (qword_1EF1773C0 != -1)
    swift_once();
  sub_1B76638C0((uint64_t)&byte_1EF179538, (uint64_t)v10, &qword_1EF179640);
  if (qword_1EF1771A8 != -1)
    swift_once();
  swift_beginAccess();
  if (!qword_1EF1778A8)
    goto LABEL_9;
  v2 = v11;
  v3 = v12;
  swift_retain();
  v4 = sub_1B7667778(v2, v3);
  swift_release();
  if (!v4)
    goto LABEL_9;
  v5 = v4;
  static SafariSettings.CookiePolicy.value(from:)(v4, &v9);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774D8);
  if ((swift_dynamicCast() & 1) != 0)
    v6 = v8;
  else
LABEL_9:
    v6 = v10[0];
  *a1 = v6;
  return sub_1B765DE88((uint64_t)v10, &qword_1EF179640);
}

uint64_t sub_1B76D3A58()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF179678);
  qword_1EF179568 = result;
  unk_1EF179570 = &off_1E6CB0650;
  byte_1EF179550 = 0;
  byte_1EF179538 = 3;
  qword_1EF179540 = 0xD000000000000013;
  unk_1EF179548 = 0x80000001B76E1D00;
  word_1EF179578 = 257;
  byte_1EF17957A = 0;
  qword_1EF179580 = 0;
  byte_1EF179588 = 1;
  return result;
}

uint64_t static SafariSettings.cookiePolicy.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EF1773C0 != -1)
    swift_once();
  return sub_1B76638C0((uint64_t)&byte_1EF179538, a1, &qword_1EF179640);
}

uint64_t SafariSettings.denyAutoFill.getter()
{
  return sub_1B765A148(&qword_1EF1773C8, (uint64_t)&byte_1EF179590);
}

uint64_t SafariSettings.denyAutoFill.setter(unsigned __int8 a1)
{
  return sub_1B766413C(a1, &qword_1EF1773C8, (uint64_t)&byte_1EF179590);
}

uint64_t (*SafariSettings.denyAutoFill.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF1773C8 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF179590, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B76D3C0C;
}

uint64_t sub_1B76D3C0C(uint64_t a1)
{
  return SafariSettings.denyAutoFill.setter(*(_BYTE *)(a1 + 8));
}

uint64_t SafariSettings.effectiveDenyAutoFill.getter()
{
  return sub_1B765A568(&qword_1EF1773C8, &byte_1EF179590);
}

uint64_t sub_1B76D3C4C()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF1795C0 = result;
  unk_1EF1795C8 = &off_1E6CB07B8;
  byte_1EF1795A8 = 0;
  byte_1EF179590 = 0;
  qword_1EF179598 = 0xD000000000000013;
  unk_1EF1795A0 = 0x80000001B76E1D20;
  word_1EF1795D0 = 257;
  byte_1EF1795D2 = 0;
  qword_1EF1795D8 = 0;
  byte_1EF1795E0 = 1;
  return result;
}

uint64_t static SafariSettings.denyAutoFill.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7664440(&qword_1EF1773C8, (uint64_t)&byte_1EF179590, a1);
}

uint64_t SafariSettings.denySafari.getter()
{
  return sub_1B765A148(&qword_1EF1773D0, (uint64_t)&byte_1EF1795E8);
}

uint64_t SafariSettings.denySafari.setter(unsigned __int8 a1)
{
  return sub_1B766413C(a1, &qword_1EF1773D0, (uint64_t)&byte_1EF1795E8);
}

uint64_t (*SafariSettings.denySafari.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF1773D0 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF1795E8, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B76D3DBC;
}

uint64_t sub_1B76D3DBC(uint64_t a1)
{
  return SafariSettings.denySafari.setter(*(_BYTE *)(a1 + 8));
}

uint64_t SafariSettings.effectiveDenySafari.getter()
{
  return sub_1B765A568(&qword_1EF1773D0, &byte_1EF1795E8);
}

uint64_t sub_1B76D3DFC()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF179618 = result;
  unk_1EF179620 = &off_1E6CB07B8;
  byte_1EF179600 = 0;
  byte_1EF1795E8 = 0;
  qword_1EF1795F0 = 0xD000000000000011;
  unk_1EF1795F8 = 0x80000001B76E1D40;
  word_1EF179628 = 256;
  byte_1EF17962A = 0;
  qword_1EF179630 = 0;
  byte_1EF179638 = 1;
  return result;
}

uint64_t static SafariSettings.denySafari.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B7664440(&qword_1EF1773D0, (uint64_t)&byte_1EF1795E8, a1);
}

void *static SafariSettings.CookiePolicy.allCases.getter()
{
  return &unk_1E6CAD398;
}

unint64_t sub_1B76D3E94()
{
  unint64_t result;

  result = qword_1EF179648;
  if (!qword_1EF179648)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for SafariSettings.Name, &type metadata for SafariSettings.Name);
    atomic_store(result, (unint64_t *)&qword_1EF179648);
  }
  return result;
}

uint64_t sub_1B76D3ED8()
{
  return sub_1B76B1904(&qword_1EF179650, &qword_1EF179658);
}

unint64_t sub_1B76D3F00()
{
  unint64_t result;

  result = qword_1EF179660;
  if (!qword_1EF179660)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for SafariSettings.CookiePolicy, &type metadata for SafariSettings.CookiePolicy);
    atomic_store(result, (unint64_t *)&qword_1EF179660);
  }
  return result;
}

uint64_t sub_1B76D3F44()
{
  return sub_1B76B1904(&qword_1EF179668, &qword_1EF179670);
}

void sub_1B76D3F68(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6CAD440;
}

void sub_1B76D3F7C(unsigned __int8 *a1)
{
  unsigned __int8 v1;

  v1 = *a1;
  SafariSettings.cookiePolicy.setter(&v1);
}

uint64_t sub_1B76D3FB0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF1773C8, (uint64_t)&byte_1EF179590, a2);
}

uint64_t sub_1B76D3FDC(unsigned __int8 *a1)
{
  return SafariSettings.denyAutoFill.setter(*a1);
}

uint64_t sub_1B76D4000@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF1773D0, (uint64_t)&byte_1EF1795E8, a2);
}

uint64_t sub_1B76D402C(unsigned __int8 *a1)
{
  return SafariSettings.denySafari.setter(*a1);
}

ValueMetadata *type metadata accessor for SafariSettings()
{
  return &type metadata for SafariSettings;
}

uint64_t storeEnumTagSinglePayload for SafariSettings.Name(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B76D40AC + 4 * byte_1B76E070A[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B76D40E0 + 4 * byte_1B76E0705[v4]))();
}

uint64_t sub_1B76D40E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76D40E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B76D40F0);
  return result;
}

uint64_t sub_1B76D40FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B76D4104);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B76D4108(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76D4110(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SafariSettings.Name()
{
  return &type metadata for SafariSettings.Name;
}

uint64_t getEnumTagSinglePayload for SafariSettings.CookiePolicy(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SafariSettings.CookiePolicy(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1B76D4208 + 4 * byte_1B76E0714[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1B76D423C + 4 * byte_1B76E070F[v4]))();
}

uint64_t sub_1B76D423C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76D4244(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B76D424CLL);
  return result;
}

uint64_t sub_1B76D4258(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B76D4260);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1B76D4264(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76D426C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SafariSettings.CookiePolicy()
{
  return &type metadata for SafariSettings.CookiePolicy;
}

ManagedSettings::CameraSettings::Name_optional __swiftcall CameraSettings.Name.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  ManagedSettings::CameraSettings::Name_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1B76DBE70();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

void *static CameraSettings.Name.allCases.getter()
{
  return &unk_1E6CAD008;
}

unint64_t CameraSettings.Name.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD00000000000001ALL;
  else
    return 0xD000000000000011;
}

uint64_t sub_1B76D4334(char *a1, char *a2)
{
  return sub_1B76A1748(*a1, *a2);
}

uint64_t sub_1B76D4340()
{
  return sub_1B76D945C();
}

uint64_t sub_1B76D4348()
{
  sub_1B76DBB1C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76D43A8()
{
  return sub_1B76DA1D4();
}

ManagedSettings::CameraSettings::Name_optional sub_1B76D43B0(Swift::String *a1)
{
  return CameraSettings.Name.init(rawValue:)(*a1);
}

void sub_1B76D43BC(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD00000000000001ALL;
  else
    v2 = 0xD000000000000011;
  v3 = 0x80000001B76E1D60;
  if (*v1)
    v3 = 0x80000001B76E1D80;
  *a1 = v2;
  a1[1] = v3;
}

void sub_1B76D4400(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6CAD110;
}

uint64_t CameraSettings.denyCamera.getter()
{
  return sub_1B765A148(&qword_1EF1773D8, (uint64_t)&byte_1EF179680);
}

uint64_t CameraSettings.denyCamera.setter(unsigned __int8 a1)
{
  return sub_1B766BF24(a1, &qword_1EF1773D8, (uint64_t)&byte_1EF179680);
}

uint64_t (*CameraSettings.denyCamera.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF1773D8 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF179680, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B76D44F8;
}

uint64_t sub_1B76D44F8(uint64_t a1)
{
  return CameraSettings.denyCamera.setter(*(_BYTE *)(a1 + 8));
}

uint64_t CameraSettings.effectiveDenyCamera.getter()
{
  return sub_1B765A568(&qword_1EF1773D8, &byte_1EF179680);
}

uint64_t sub_1B76D4538()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF1796B0 = result;
  unk_1EF1796B8 = &off_1E6CB07B8;
  byte_1EF179698 = 0;
  byte_1EF179680 = 0;
  qword_1EF179688 = 0xD000000000000011;
  unk_1EF179690 = 0x80000001B76E1D60;
  word_1EF1796C0 = 256;
  byte_1EF1796C2 = 0;
  qword_1EF1796C8 = 0;
  byte_1EF1796D0 = 1;
  return result;
}

uint64_t static CameraSettings.denyCamera.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B765A628(&qword_1EF1773D8, (uint64_t)&byte_1EF179680, a1);
}

uint64_t CameraSettings.denyScreenRecording.getter()
{
  return sub_1B765A148(&qword_1EF1773E0, (uint64_t)&byte_1EF1796D8);
}

uint64_t CameraSettings.denyScreenRecording.setter(unsigned __int8 a1)
{
  return sub_1B766BF24(a1, &qword_1EF1773E0, (uint64_t)&byte_1EF1796D8);
}

uint64_t (*CameraSettings.denyScreenRecording.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF1773E0 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF1796D8, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B76D46A8;
}

uint64_t sub_1B76D46A8(uint64_t a1)
{
  return CameraSettings.denyScreenRecording.setter(*(_BYTE *)(a1 + 8));
}

uint64_t CameraSettings.effectiveDenyScreenRecording.getter()
{
  return sub_1B765A568(&qword_1EF1773E0, &byte_1EF1796D8);
}

uint64_t sub_1B76D46E8()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF179708 = result;
  unk_1EF179710 = &off_1E6CB07B8;
  byte_1EF1796F0 = 0;
  byte_1EF1796D8 = 0;
  qword_1EF1796E0 = 0xD00000000000001ALL;
  unk_1EF1796E8 = 0x80000001B76E1D80;
  word_1EF179718 = 256;
  byte_1EF17971A = 0;
  qword_1EF179720 = 0;
  byte_1EF179728 = 1;
  return result;
}

uint64_t static CameraSettings.denyScreenRecording.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B765A628(&qword_1EF1773E0, (uint64_t)&byte_1EF1796D8, a1);
}

unint64_t sub_1B76D4774()
{
  unint64_t result;

  result = qword_1EF179730;
  if (!qword_1EF179730)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for CameraSettings.Name, &type metadata for CameraSettings.Name);
    atomic_store(result, (unint64_t *)&qword_1EF179730);
  }
  return result;
}

unint64_t sub_1B76D47BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF179738;
  if (!qword_1EF179738)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF179740);
    result = MEMORY[0x1BCCA94E8](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF179738);
  }
  return result;
}

uint64_t sub_1B76D4808@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF1773D8, (uint64_t)&byte_1EF179680, a2);
}

uint64_t sub_1B76D4834(unsigned __int8 *a1)
{
  return CameraSettings.denyCamera.setter(*a1);
}

uint64_t sub_1B76D4858@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF1773E0, (uint64_t)&byte_1EF1796D8, a2);
}

uint64_t sub_1B76D4884(unsigned __int8 *a1)
{
  return CameraSettings.denyScreenRecording.setter(*a1);
}

ValueMetadata *type metadata accessor for CameraSettings()
{
  return &type metadata for CameraSettings;
}

uint64_t storeEnumTagSinglePayload for CameraSettings.Name(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B76D4904 + 4 * byte_1B76E096D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B76D4938 + 4 * byte_1B76E0968[v4]))();
}

uint64_t sub_1B76D4938(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76D4940(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B76D4948);
  return result;
}

uint64_t sub_1B76D4954(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B76D495CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B76D4960(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76D4968(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CameraSettings.Name()
{
  return &type metadata for CameraSettings.Name;
}

ManagedSettings::SiriSettings::Name_optional __swiftcall SiriSettings.Name.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ManagedSettings::SiriSettings::Name_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1B76DBE70();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static SiriSettings.Name.allCases.getter()
{
  return &unk_1E6CACC70;
}

uint64_t SiriSettings.Name.rawValue.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000021;
  if (*v0 != 1)
    v1 = 0xD00000000000001DLL;
  if (*v0)
    return v1;
  else
    return 0x6E65642E69726973;
}

uint64_t sub_1B76D4A5C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B76A1AB0(*a1, *a2);
}

uint64_t sub_1B76D4A68()
{
  return sub_1B76D94E0();
}

uint64_t sub_1B76D4A70()
{
  sub_1B76DBB1C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76D4B04()
{
  return sub_1B76DA07C();
}

ManagedSettings::SiriSettings::Name_optional sub_1B76D4B0C(Swift::String *a1)
{
  return SiriSettings.Name.init(rawValue:)(*a1);
}

void sub_1B76D4B18(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xED00006972695379;
  v4 = 0xD000000000000021;
  v5 = 0x80000001B76E1DB0;
  if (v2 != 1)
  {
    v4 = 0xD00000000000001DLL;
    v5 = 0x80000001B76E1DE0;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v4;
  else
    v7 = 0x6E65642E69726973;
  if (!v6)
    v3 = v5;
  *a1 = v7;
  a1[1] = v3;
}

void sub_1B76D4B90(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6CACD00;
}

uint64_t SiriSettings.denySiri.getter()
{
  return sub_1B765A148(&qword_1EF1773E8, (uint64_t)&byte_1EF179748);
}

uint64_t SiriSettings.denySiri.setter(unsigned __int8 a1)
{
  return sub_1B766BF24(a1, &qword_1EF1773E8, (uint64_t)&byte_1EF179748);
}

uint64_t (*SiriSettings.denySiri.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF1773E8 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF179748, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B76D4C88;
}

uint64_t sub_1B76D4C88(uint64_t a1)
{
  return SiriSettings.denySiri.setter(*(_BYTE *)(a1 + 8));
}

uint64_t SiriSettings.effectiveDenySiri.getter()
{
  return sub_1B765A568(&qword_1EF1773E8, &byte_1EF179748);
}

uint64_t sub_1B76D4CC8()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF179778 = result;
  unk_1EF179780 = &off_1E6CB07B8;
  byte_1EF179760 = 0;
  byte_1EF179748 = 0;
  strcpy((char *)&qword_1EF179750, "siri.denySiri");
  unk_1EF17975E = -4864;
  word_1EF179788 = 257;
  byte_1EF17978A = 0;
  qword_1EF179790 = 0;
  byte_1EF179798 = 1;
  return result;
}

uint64_t static SiriSettings.denySiri.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B765A628(&qword_1EF1773E8, (uint64_t)&byte_1EF179748, a1);
}

uint64_t SiriSettings.denySiriUserGeneratedContent.getter()
{
  return sub_1B765A148(&qword_1EF1773F0, (uint64_t)&byte_1EF1797A0);
}

uint64_t SiriSettings.denySiriUserGeneratedContent.setter(unsigned __int8 a1)
{
  return sub_1B766BF24(a1, &qword_1EF1773F0, (uint64_t)&byte_1EF1797A0);
}

uint64_t (*SiriSettings.denySiriUserGeneratedContent.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF1773F0 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF1797A0, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B76D4E40;
}

uint64_t sub_1B76D4E40(uint64_t a1)
{
  return SiriSettings.denySiriUserGeneratedContent.setter(*(_BYTE *)(a1 + 8));
}

uint64_t SiriSettings.effectiveDenySiriUserGeneratedContent.getter()
{
  return sub_1B765A568(&qword_1EF1773F0, &byte_1EF1797A0);
}

uint64_t sub_1B76D4E80()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF1797D0 = result;
  unk_1EF1797D8 = &off_1E6CB07B8;
  byte_1EF1797B8 = 0;
  byte_1EF1797A0 = 0;
  qword_1EF1797A8 = 0xD000000000000021;
  unk_1EF1797B0 = 0x80000001B76E1DB0;
  word_1EF1797E0 = 256;
  byte_1EF1797E2 = 0;
  qword_1EF1797E8 = 0;
  byte_1EF1797F0 = 1;
  return result;
}

uint64_t static SiriSettings.denySiriUserGeneratedContent.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B765A628(&qword_1EF1773F0, (uint64_t)&byte_1EF1797A0, a1);
}

uint64_t SiriSettings.forceSiriProfanityFilter.getter()
{
  return sub_1B765A148(&qword_1EF1773F8, (uint64_t)&byte_1EF1797F8);
}

uint64_t SiriSettings.forceSiriProfanityFilter.setter(unsigned __int8 a1)
{
  return sub_1B766BF24(a1, &qword_1EF1773F8, (uint64_t)&byte_1EF1797F8);
}

uint64_t (*SiriSettings.forceSiriProfanityFilter.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF1773F8 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF1797F8, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B76D4FF0;
}

uint64_t sub_1B76D4FF0(uint64_t a1)
{
  return SiriSettings.forceSiriProfanityFilter.setter(*(_BYTE *)(a1 + 8));
}

uint64_t SiriSettings.effectiveForceSiriProfanityFilter.getter()
{
  return sub_1B765A568(&qword_1EF1773F8, &byte_1EF1797F8);
}

uint64_t sub_1B76D5030()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF179828 = result;
  unk_1EF179830 = &off_1E6CB07B8;
  byte_1EF179810 = 0;
  byte_1EF1797F8 = 0;
  qword_1EF179800 = 0xD00000000000001DLL;
  unk_1EF179808 = 0x80000001B76E1DE0;
  word_1EF179838 = 256;
  byte_1EF17983A = 0;
  qword_1EF179840 = 0;
  byte_1EF179848 = 1;
  return result;
}

uint64_t static SiriSettings.forceSiriProfanityFilter.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B765A628(&qword_1EF1773F8, (uint64_t)&byte_1EF1797F8, a1);
}

unint64_t sub_1B76D50BC()
{
  unint64_t result;

  result = qword_1EF179850;
  if (!qword_1EF179850)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for SiriSettings.Name, &type metadata for SiriSettings.Name);
    atomic_store(result, (unint64_t *)&qword_1EF179850);
  }
  return result;
}

unint64_t sub_1B76D5104()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF179858;
  if (!qword_1EF179858)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF179860);
    result = MEMORY[0x1BCCA94E8](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF179858);
  }
  return result;
}

uint64_t sub_1B76D5150@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF1773E8, (uint64_t)&byte_1EF179748, a2);
}

uint64_t sub_1B76D517C(unsigned __int8 *a1)
{
  return SiriSettings.denySiri.setter(*a1);
}

uint64_t sub_1B76D51A0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF1773F0, (uint64_t)&byte_1EF1797A0, a2);
}

uint64_t sub_1B76D51CC(unsigned __int8 *a1)
{
  return SiriSettings.denySiriUserGeneratedContent.setter(*a1);
}

uint64_t sub_1B76D51F0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B765A1F0(a1, &qword_1EF1773F8, (uint64_t)&byte_1EF1797F8, a2);
}

uint64_t sub_1B76D521C(unsigned __int8 *a1)
{
  return SiriSettings.forceSiriProfanityFilter.setter(*a1);
}

ValueMetadata *type metadata accessor for SiriSettings()
{
  return &type metadata for SiriSettings;
}

uint64_t storeEnumTagSinglePayload for SiriSettings.Name(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B76D529C + 4 * byte_1B76E0A81[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B76D52D0 + 4 * byte_1B76E0A7C[v4]))();
}

uint64_t sub_1B76D52D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76D52D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B76D52E0);
  return result;
}

uint64_t sub_1B76D52EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B76D52F4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B76D52F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76D5300(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SiriSettings.Name()
{
  return &type metadata for SiriSettings.Name;
}

uint64_t AirDropSettings.Name.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1B76DBE70();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void *static AirDropSettings.Name.allCases.getter()
{
  return &unk_1E6CAD630;
}

unint64_t AirDropSettings.Name.rawValue.getter()
{
  return 0xD000000000000013;
}

uint64_t sub_1B76D5398()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  return sub_1B76DBF78();
}

uint64_t sub_1B76D53EC()
{
  return sub_1B76DBB1C();
}

uint64_t sub_1B76D5408()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  return sub_1B76DBF78();
}

uint64_t sub_1B76D5458@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1B76DBE70();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1B76D54A8(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x80000001B76E1E00;
}

void sub_1B76D54C8(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6CAD758;
}

uint64_t AirDropSettings.denyAirDrop.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v0;
  v1 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  if (qword_1EF177400 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = sub_1B76584AC((uint64_t)&byte_1EF179868, v2, v1, v4, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1B76D556C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  v7 = qword_1EF177400;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_1B76584AC((uint64_t)&byte_1EF179868, v4, v3, v6, v5);
  swift_bridgeObjectRelease_n();
  result = swift_bridgeObjectRelease_n();
  *a2 = v8;
  return result;
}

uint64_t AirDropSettings.denyAirDrop.setter(unsigned __int8 a1)
{
  uint64_t *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v14[4];
  _BYTE v15[8];
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;

  v2 = a1;
  if (qword_1EF177400 != -1)
    swift_once();
  sub_1B765A668((uint64_t)&byte_1EF179868, (uint64_t)v15);
  v4 = *v1;
  v3 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (v2 == 2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = 0;
  }
  else
  {
    v8 = v2 & 1;
    v9 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = objc_msgSend(v9, sel_initWithBool_, v8);
  }
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    v10 = v16;
    v11 = v17;
    v14[0] = v4;
    v14[1] = v3;
    v14[2] = v6;
    v14[3] = v5;
    v12 = v18;
    swift_retain();
    sub_1B765ED7C(v7, v10, v11, v14, v12);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  return sub_1B76671D4((uint64_t)v15);
}

uint64_t (*AirDropSettings.denyAirDrop.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177400 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF179868, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B76D585C;
}

uint64_t sub_1B76D585C(uint64_t a1)
{
  return AirDropSettings.denyAirDrop.setter(*(_BYTE *)(a1 + 8));
}

uint64_t AirDropSettings.effectiveDenyAirDrop.getter()
{
  if (qword_1EF177400 != -1)
    swift_once();
  return sub_1B7659CC4(&byte_1EF179868);
}

uint64_t sub_1B76D58C0()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF179898 = result;
  unk_1EF1798A0 = &off_1E6CB07B8;
  byte_1EF179880 = 0;
  byte_1EF179868 = 0;
  qword_1EF179870 = 0xD000000000000013;
  unk_1EF179878 = 0x80000001B76E1E00;
  word_1EF1798A8 = 256;
  byte_1EF1798AA = 0;
  qword_1EF1798B0 = 0;
  byte_1EF1798B8 = 1;
  return result;
}

uint64_t static AirDropSettings.denyAirDrop.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EF177400 != -1)
    swift_once();
  return sub_1B765A668((uint64_t)&byte_1EF179868, a1);
}

unint64_t sub_1B76D5980()
{
  unint64_t result;

  result = qword_1EF1798C0;
  if (!qword_1EF1798C0)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for AirDropSettings.Name, &type metadata for AirDropSettings.Name);
    atomic_store(result, (unint64_t *)&qword_1EF1798C0);
  }
  return result;
}

unint64_t sub_1B76D59C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF1798C8;
  if (!qword_1EF1798C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1798D0);
    result = MEMORY[0x1BCCA94E8](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF1798C8);
  }
  return result;
}

uint64_t sub_1B76D5A18(unsigned __int8 *a1)
{
  return AirDropSettings.denyAirDrop.setter(*a1);
}

ValueMetadata *type metadata accessor for AirDropSettings()
{
  return &type metadata for AirDropSettings;
}

uint64_t storeEnumTagSinglePayload for AirDropSettings.Name(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B76D5A8C + 4 * byte_1B76E0B94[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B76D5AAC + 4 * byte_1B76E0B99[v4]))();
}

_BYTE *sub_1B76D5A8C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B76D5AAC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B76D5AB4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B76D5ABC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B76D5AC4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B76D5ACC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AirDropSettings.Name()
{
  return &type metadata for AirDropSettings.Name;
}

uint64_t static Data.none.getter()
{
  return 0;
}

ManagedSettings::ManagedSettingsSettings::Name_optional __swiftcall ManagedSettingsSettings.Name.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ManagedSettings::ManagedSettingsSettings::Name_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1B76DBE70();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static ManagedSettingsSettings.Name.allCases.getter()
{
  return &unk_1E6CAE668;
}

unint64_t ManagedSettingsSettings.Name.rawValue.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000020;
  if (*v0 != 1)
    v1 = 0xD000000000000021;
  if (*v0)
    return v1;
  else
    return 0xD00000000000001ELL;
}

uint64_t sub_1B76D5BB8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B76A0EAC(*a1, *a2);
}

uint64_t sub_1B76D5BC4()
{
  return sub_1B76D9598();
}

uint64_t sub_1B76D5BCC()
{
  return sub_1B76D96E4();
}

uint64_t sub_1B76D5BD4()
{
  return sub_1B76DA6D0();
}

ManagedSettings::ManagedSettingsSettings::Name_optional sub_1B76D5BDC(Swift::String *a1)
{
  return ManagedSettingsSettings.Name.init(rawValue:)(*a1);
}

unint64_t sub_1B76D5BE8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;
  unint64_t v3;

  result = ManagedSettingsSettings.Name.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1B76D5C0C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6CAE6F8;
}

uint64_t ManagedSettingsSettings.allowedClients.getter()
{
  return sub_1B76B3818(&qword_1ED53B248, (uint64_t)&unk_1ED53B020, sub_1B7658794);
}

uint64_t ManagedSettingsSettings.allowedClients.setter(uint64_t a1)
{
  sub_1B76D64B0(a1);
  return swift_bridgeObjectRelease();
}

void (*ManagedSettingsSettings.allowedClients.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x98uLL);
  *a1 = v3;
  v4 = v3 + 17;
  v3[18] = v1;
  v5 = *v1;
  v6 = v1[1];
  v8 = v1[2];
  v7 = v1[3];
  if (qword_1ED53B248 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = sub_1B7658794((uint64_t)&unk_1ED53B020, v5, v6, v8, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v4 = v9;
  return sub_1B76D5D24;
}

void sub_1B76D5D24(uint64_t *a1, char a2)
{
  sub_1B76C4BC8(a1, a2, (uint64_t)&unk_1ED53B020, &qword_1ED53B420, sub_1B7665174);
}

uint64_t ManagedSettingsSettings.effectiveAllowedClients.getter()
{
  return sub_1B76B3CE4(&qword_1ED53B248, (uint64_t)&unk_1ED53B020, sub_1B7659DBC);
}

double sub_1B76D5D64()
{
  double result;
  __int128 v1;
  _OWORD v2[3];
  __int128 v3;
  char v4;
  _BYTE v5[24];
  uint64_t v6;
  _UNKNOWN **v7;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED53B380);
  v7 = &off_1E6CB05D8;
  v5[0] = 1;
  *(_QWORD *)&v1 = MEMORY[0x1E0DEE9E8];
  *((_QWORD *)&v1 + 1) = 0xD00000000000001ELL;
  *(_QWORD *)&v2[0] = 0x80000001B76E1E20;
  sub_1B76638C0((uint64_t)v5, (uint64_t)v2 + 8, &qword_1ED53B410);
  LOWORD(v3) = 256;
  BYTE2(v3) = 0;
  *((_QWORD *)&v3 + 1) = 0x7FFFFFFFFFFFFFFFLL;
  v4 = 0;
  sub_1B765DE88((uint64_t)v5, &qword_1ED53B410);
  xmmword_1ED53B040 = v2[1];
  unk_1ED53B050 = v2[2];
  xmmword_1ED53B060 = v3;
  byte_1ED53B070 = v4;
  result = *(double *)&v1;
  unk_1ED53B020 = v1;
  *(_OWORD *)algn_1ED53B030 = v2[0];
  return result;
}

uint64_t static ManagedSettingsSettings.allowedClients.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B76B37A0(&qword_1ED53B248, (uint64_t)&unk_1ED53B020, &qword_1ED53B420, a1);
}

uint64_t ManagedSettingsSettings.tokenEncodingKey.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;

  v2 = *v0;
  v1 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  if (qword_1EF177408 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B7659588((uint64_t)&xmmword_1EF1798D8, v2, v1, v4, v3, &v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

double sub_1B76D5EF4@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  __int128 v9;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  v7 = qword_1EF177408;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B7659588((uint64_t)&xmmword_1EF1798D8, v4, v3, v6, v5, &v9);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  result = *(double *)&v9;
  *a2 = v9;
  return result;
}

uint64_t sub_1B76D5FB8(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  sub_1B765DF08(*a1, v2);
  sub_1B76D662C(v1, v2);
  return sub_1B765DF1C(v1, v2);
}

uint64_t ManagedSettingsSettings.tokenEncodingKey.setter(uint64_t a1, unint64_t a2)
{
  sub_1B76D662C(a1, a2);
  return sub_1B765DF1C(a1, a2);
}

uint64_t (*ManagedSettingsSettings.tokenEncodingKey.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177408 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B7659588((uint64_t)&xmmword_1EF1798D8, v3, v4, v6, v5, &v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = v8;
  return sub_1B76D60F0;
}

uint64_t sub_1B76D60F0(uint64_t *a1, char a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    sub_1B765DF08(v4, v3);
    sub_1B76D662C(v2, v3);
    sub_1B765DF1C(v2, v3);
  }
  else
  {
    sub_1B76D662C(v4, v3);
  }
  return sub_1B765DF1C(v2, v3);
}

uint64_t ManagedSettingsSettings.effectiveTokenEncodingKey.getter()
{
  uint64_t v1;

  if (qword_1EF177408 != -1)
    swift_once();
  sub_1B7659F7C((uint64_t *)&xmmword_1EF1798D8, (uint64_t)&v1);
  return v1;
}

double sub_1B76D61A8()
{
  double result;

  qword_1EF179910 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178230);
  unk_1EF179918 = &off_1E6CB06C8;
  result = 0.0;
  xmmword_1EF1798D8 = xmmword_1B76E0CB0;
  qword_1EF1798E8 = 0xD000000000000020;
  unk_1EF1798F0 = 0x80000001B76E1E40;
  word_1EF179920 = 256;
  byte_1EF179922 = 0;
  qword_1EF179928 = 0;
  byte_1EF179930 = 1;
  return result;
}

uint64_t static ManagedSettingsSettings.tokenEncodingKey.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EF177408 != -1)
    swift_once();
  return sub_1B76638C0((uint64_t)&xmmword_1EF1798D8, a1, &qword_1EF179990);
}

uint64_t ManagedSettingsSettings.tokenDecodingKeys.getter()
{
  return sub_1B76B3818(&qword_1EF177410, (uint64_t)&unk_1EF179938, sub_1B7658AC4);
}

uint64_t ManagedSettingsSettings.tokenDecodingKeys.setter(uint64_t a1)
{
  sub_1B76D67F8(a1);
  return swift_bridgeObjectRelease();
}

void (*ManagedSettingsSettings.tokenDecodingKeys.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x98uLL);
  *a1 = v3;
  v4 = v3 + 17;
  v3[18] = v1;
  v5 = *v1;
  v6 = v1[1];
  v8 = v1[2];
  v7 = v1[3];
  if (qword_1EF177410 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = sub_1B7658AC4((uint64_t)&unk_1EF179938, v5, v6, v8, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v4 = v9;
  return sub_1B76D637C;
}

void sub_1B76D637C(uint64_t *a1, char a2)
{
  sub_1B76C4BC8(a1, a2, (uint64_t)&unk_1EF179938, &qword_1EF178418, sub_1B7665948);
}

uint64_t ManagedSettingsSettings.effectiveTokenDecodingKeys.getter()
{
  return sub_1B76B3CE4(&qword_1EF177410, (uint64_t)&unk_1EF179938, sub_1B7659DD8);
}

double sub_1B76D63BC()
{
  double result;
  __int128 v1;
  _OWORD v2[3];
  __int128 v3;
  char v4;
  _BYTE v5[24];
  uint64_t v6;
  _UNKNOWN **v7;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF178438);
  v7 = &off_1E6CB05D8;
  v5[0] = 1;
  *(_QWORD *)&v1 = MEMORY[0x1E0DEE9E8];
  *((_QWORD *)&v1 + 1) = 0xD000000000000021;
  *(_QWORD *)&v2[0] = 0x80000001B76E1E70;
  sub_1B76638C0((uint64_t)v5, (uint64_t)v2 + 8, &qword_1EF178440);
  LOWORD(v3) = 256;
  BYTE2(v3) = 0;
  *((_QWORD *)&v3 + 1) = 0x7FFFFFFFFFFFFFFFLL;
  v4 = 0;
  sub_1B765DE88((uint64_t)v5, &qword_1EF178440);
  xmmword_1EF179958 = v2[1];
  unk_1EF179968 = v2[2];
  xmmword_1EF179978 = v3;
  byte_1EF179988 = v4;
  result = *(double *)&v1;
  unk_1EF179938 = v1;
  unk_1EF179948 = v2[0];
  return result;
}

uint64_t static ManagedSettingsSettings.tokenDecodingKeys.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B76B37A0(&qword_1EF177410, (uint64_t)&unk_1EF179938, &qword_1EF178418, a1);
}

uint64_t sub_1B76D64B0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v12[4];
  _BYTE v13[8];
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;

  if (qword_1ED53B248 != -1)
    swift_once();
  sub_1B76638C0((uint64_t)&unk_1ED53B020, (uint64_t)v13, &qword_1ED53B420);
  v4 = *v1;
  v3 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (a1)
  {
    swift_bridgeObjectRetain();
    v7 = (void *)sub_1B7665174(a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    v8 = v14;
    v9 = v15;
    v12[0] = v4;
    v12[1] = v3;
    v12[2] = v6;
    v12[3] = v5;
    v10 = v16;
    swift_retain();
    sub_1B765ED7C(v7, v8, v9, v12, v10);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  return sub_1B765DE88((uint64_t)v13, &qword_1ED53B420);
}

uint64_t sub_1B76D662C(uint64_t a1, unint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v16[4];
  _BYTE v17[16];
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;

  if (qword_1EF177408 != -1)
    swift_once();
  sub_1B76638C0((uint64_t)&xmmword_1EF1798D8, (uint64_t)v17, &qword_1EF179990);
  v6 = *v2;
  v5 = v2[1];
  v8 = v2[2];
  v7 = v2[3];
  if (a2 >> 60 == 15)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = 0;
  }
  else
  {
    v10 = objc_allocWithZone(MEMORY[0x1E0C99D50]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B765DF08(a1, a2);
    v11 = (void *)sub_1B76DB81C();
    v9 = objc_msgSend(v10, sel_initWithData_, v11);

    sub_1B765DF1C(a1, a2);
  }
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    v12 = v18;
    v13 = v19;
    v16[0] = v6;
    v16[1] = v5;
    v16[2] = v8;
    v16[3] = v7;
    v14 = v20;
    swift_retain();
    sub_1B765ED7C(v9, v12, v13, v16, v14);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  return sub_1B765DE88((uint64_t)v17, &qword_1EF179990);
}

uint64_t sub_1B76D67F8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v12[4];
  _BYTE v13[8];
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;

  if (qword_1EF177410 != -1)
    swift_once();
  sub_1B76638C0((uint64_t)&unk_1EF179938, (uint64_t)v13, &qword_1EF178418);
  v4 = *v1;
  v3 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (a1)
  {
    swift_bridgeObjectRetain();
    v7 = (void *)sub_1B7665948(a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    v8 = v14;
    v9 = v15;
    v12[0] = v4;
    v12[1] = v3;
    v12[2] = v6;
    v12[3] = v5;
    v10 = v16;
    swift_retain();
    sub_1B765ED7C(v7, v8, v9, v12, v10);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  return sub_1B765DE88((uint64_t)v13, &qword_1EF178418);
}

unint64_t sub_1B76D6978()
{
  unint64_t result;

  result = qword_1EF179998;
  if (!qword_1EF179998)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for ManagedSettingsSettings.Name, &type metadata for ManagedSettingsSettings.Name);
    atomic_store(result, (unint64_t *)&qword_1EF179998);
  }
  return result;
}

unint64_t sub_1B76D69C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF1799A0;
  if (!qword_1EF1799A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1799A8);
    result = MEMORY[0x1BCCA94E8](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF1799A0);
  }
  return result;
}

uint64_t sub_1B76D6A0C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B76B38A8(a1, &qword_1ED53B248, (uint64_t)&unk_1ED53B020, sub_1B7658794, a2);
}

uint64_t sub_1B76D6A40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm_0(a1, a2, a3, a4, (void (*)(uint64_t))sub_1B76D64B0);
}

uint64_t sub_1B76D6A54@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B76B38A8(a1, &qword_1EF177410, (uint64_t)&unk_1EF179938, sub_1B7658AC4, a2);
}

uint64_t sub_1B76D6A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm_0(a1, a2, a3, a4, (void (*)(uint64_t))sub_1B76D67F8);
}

ValueMetadata *type metadata accessor for ManagedSettingsSettings()
{
  return &type metadata for ManagedSettingsSettings;
}

uint64_t storeEnumTagSinglePayload for ManagedSettingsSettings.Name(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B76D6AF0 + 4 * byte_1B76E0CC5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B76D6B24 + 4 * byte_1B76E0CC0[v4]))();
}

uint64_t sub_1B76D6B24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76D6B2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B76D6B34);
  return result;
}

uint64_t sub_1B76D6B40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B76D6B48);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B76D6B4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76D6B54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ManagedSettingsSettings.Name()
{
  return &type metadata for ManagedSettingsSettings.Name;
}

void sub_1B76D6B70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = sub_1B76DB798();
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);

}

void sub_1B76D6BC8(uint64_t a1)
{
  sub_1B76685A8(a1, (void **)&protocolRef__TtP15ManagedSettings29OverrideSettingsExtensionHost_, &qword_1EF1799B0);
}

void sub_1B76D6BDC(uint64_t a1)
{
  sub_1B76685A8(a1, (void **)&protocolRef__TtP15ManagedSettings31OverrideSettingsExtensionVendor_, &qword_1EF1799B8);
}

void *sub_1B76D6CF4()
{
  char *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v1 = OBJC_IVAR____TtC15ManagedSettings32OverrideSettingsExtensionContext____lazy_storage___overrideSettingsHandler;
  v2 = *(void **)&v0[OBJC_IVAR____TtC15ManagedSettings32OverrideSettingsExtensionContext____lazy_storage___overrideSettingsHandler];
  v3 = v2;
  if (v2 == (void *)1)
  {
    if (objc_msgSend(v0, sel__principalObject))
    {
      type metadata accessor for OverrideSettingsHandler();
      v3 = (void *)swift_dynamicCastClass();
      if (!v3)
        swift_unknownObjectRelease();
    }
    else
    {
      v3 = 0;
    }
    v4 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v3;
    v5 = v3;
    sub_1B7668F50(v4);
  }
  sub_1B7668F60(v2);
  return v3;
}

id sub_1B76D6F78(uint64_t a1)
{
  char *v1;
  void *v2;
  id v3;
  objc_super v5;

  *(_QWORD *)&v1[OBJC_IVAR____TtC15ManagedSettings32OverrideSettingsExtensionContext____lazy_storage___overrideSettingsHandler] = 1;
  if (a1)
  {
    v2 = (void *)sub_1B76DBB64();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = 0;
  }
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for OverrideSettingsExtensionContext();
  v3 = objc_msgSendSuper2(&v5, sel_initWithInputItems_, v2);

  if (v3)
  return v3;
}

id sub_1B76D7054(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  objc_class *v14;
  id v15;
  id v16;
  objc_super v18;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v3[OBJC_IVAR____TtC15ManagedSettings32OverrideSettingsExtensionContext____lazy_storage___overrideSettingsHandler] = 1;
  if (a1)
  {
    v10 = (void *)sub_1B76DBB64();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
  }
  sub_1B7668F70(a2, (uint64_t)v9);
  v11 = sub_1B76DB888();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11) != 1)
  {
    v13 = (void *)sub_1B76DB870();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
  }
  v14 = (objc_class *)type metadata accessor for OverrideSettingsExtensionContext();
  v18.receiver = v3;
  v18.super_class = v14;
  v15 = objc_msgSendSuper2(&v18, sel_initWithInputItems_contextUUID_, v10, v13);

  v16 = v15;
  sub_1B7668FB8(a2);
  if (v16)

  return v16;
}

id sub_1B76D728C(uint64_t a1, void *a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  objc_class *v16;
  id v17;
  id v18;
  objc_super v20;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C0);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC15ManagedSettings32OverrideSettingsExtensionContext____lazy_storage___overrideSettingsHandler] = 1;
  if (a1)
  {
    v12 = (void *)sub_1B76DBB64();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = 0;
  }
  sub_1B7668F70(a3, (uint64_t)v11);
  v13 = sub_1B76DB888();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1)
  {
    v15 = (void *)sub_1B76DB870();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
  }
  v16 = (objc_class *)type metadata accessor for OverrideSettingsExtensionContext();
  v20.receiver = v4;
  v20.super_class = v16;
  v17 = objc_msgSendSuper2(&v20, sel_initWithInputItems_listenerEndpoint_contextUUID_, v12, a2, v15);

  v18 = v17;
  sub_1B7668FB8(a3);
  if (v18)

  return v18;
}

id sub_1B76D74E4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OverrideSettingsExtensionContext();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for OverrideSettingsExtensionContext()
{
  return objc_opt_self();
}

uint64_t sub_1B76D7544()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

unint64_t sub_1B76D7568()
{
  unint64_t result;

  result = qword_1EF1799C8;
  if (!qword_1EF1799C8)
  {
    result = MEMORY[0x1BCCA94E8](&unk_1B76E0E98, &type metadata for OverrideSettingsExtensionContext.ExtensionError);
    atomic_store(result, (unint64_t *)&qword_1EF1799C8);
  }
  return result;
}

uint64_t sub_1B76D75AC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1B76D75D0(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_1B766881C(a1, *(void (**)(id, _QWORD))(v1 + 16));
}

uint64_t storeEnumTagSinglePayload for OverrideSettingsExtensionContext.ExtensionError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B76D7618 + 4 * byte_1B76E0DF0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B76D7638 + 4 * byte_1B76E0DF5[v4]))();
}

_BYTE *sub_1B76D7618(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B76D7638(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B76D7640(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B76D7648(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B76D7650(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B76D7658(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for OverrideSettingsExtensionContext.ExtensionError()
{
  return &type metadata for OverrideSettingsExtensionContext.ExtensionError;
}

unint64_t sub_1B76D7678()
{
  unint64_t result;

  result = qword_1EF1799E8;
  if (!qword_1EF1799E8)
  {
    result = MEMORY[0x1BCCA94E8](&unk_1B76E0E70, &type metadata for OverrideSettingsExtensionContext.ExtensionError);
    atomic_store(result, (unint64_t *)&qword_1EF1799E8);
  }
  return result;
}

double WebDomain.init(domain:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  double result;

  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  result = 0.0;
  *(_OWORD *)(a3 + 16) = xmmword_1B76DC6F0;
  return result;
}

__n128 sub_1B76D76D0@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  result = *a1;
  a2[1] = *a1;
  return result;
}

__n128 WebDomain.init(token:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  result = *a1;
  a2[1] = *a1;
  return result;
}

uint64_t WebDomain.token.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  *a1 = v2;
  a1[1] = v3;
  return sub_1B765DF08(v2, v3);
}

__n128 WebDomain.init(domain:token:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X2>, __n128 *a4@<X8>)
{
  __n128 result;

  a4->n128_u64[0] = a1;
  a4->n128_u64[1] = a2;
  result = *a3;
  a4[1] = *a3;
  return result;
}

id static WebDomain.compare(_:with:outExactMatch:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  void *v6;
  void *v7;
  void *v8;
  id v9;
  char v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v11 = 0;
  v6 = (void *)objc_opt_self();
  v7 = (void *)sub_1B76DBAB0();
  v8 = (void *)sub_1B76DBAB0();
  v9 = objc_msgSend(v6, sel_compareDomain_withDomainPattern_outExactMatch_, v7, v8, &v11);

  if (a5)
    *a5 = v11;
  return v9;
}

uint64_t WebDomain.domain.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WebDomain.hash(into:)()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;

  v1 = v0[2];
  v2 = v0[3];
  if (v0[1])
  {
    sub_1B76DBF6C();
    swift_bridgeObjectRetain();
    sub_1B76DBB1C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B76DBF6C();
  }
  if (v2 >> 60 == 15)
    return sub_1B76DBF6C();
  sub_1B76DBF6C();
  sub_1B765DDFC(v1, v2);
  sub_1B76DB834();
  return sub_1B765DF1C(v1, v2);
}

uint64_t WebDomain.hashValue.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = v0[1];
  v2 = v0[2];
  v3 = v0[3];
  sub_1B76DBF54();
  sub_1B76DBF6C();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_1B76DBB1C();
    swift_bridgeObjectRelease();
  }
  sub_1B76DBF6C();
  if (v3 >> 60 != 15)
  {
    sub_1B765DDFC(v2, v3);
    sub_1B76DB834();
    sub_1B765DF1C(v2, v3);
  }
  return sub_1B76DBF78();
}

uint64_t sub_1B76D79CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = v0[1];
  v2 = v0[2];
  v3 = v0[3];
  sub_1B76DBF54();
  sub_1B76DBF6C();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_1B76DBB1C();
    swift_bridgeObjectRelease();
  }
  sub_1B76DBF6C();
  if (v3 >> 60 != 15)
  {
    sub_1B765DDFC(v2, v3);
    sub_1B76DB834();
    sub_1B765DF1C(v2, v3);
  }
  return sub_1B76DBF78();
}

uint64_t WebContentSettings.Name.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1B76DBE70();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void *static WebContentSettings.Name.allCases.getter()
{
  return &unk_1E6CAC4F8;
}

unint64_t WebContentSettings.Name.rawValue.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1B76D7B18()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  return sub_1B76DBF78();
}

uint64_t sub_1B76D7B6C()
{
  return sub_1B76DBB1C();
}

uint64_t sub_1B76D7B88()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  return sub_1B76DBF78();
}

uint64_t sub_1B76D7BD8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1B76DBE70();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1B76D7C28(_QWORD *a1@<X8>)
{
  *a1 = 0xD00000000000001ALL;
  a1[1] = 0x80000001B76E1EA0;
}

void sub_1B76D7C48(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6CAC590;
}

uint64_t static WebContentSettings.FilterPolicy.maximumSpecificDomainsCount.getter()
{
  return 50;
}

uint64_t static WebContentSettings.FilterPolicy.maximumAutoDomainsCount.getter()
{
  return 50;
}

uint64_t static WebContentSettings.FilterPolicy.maximumAutoExceptionsCount.getter()
{
  return 50;
}

uint64_t static WebContentSettings.FilterPolicy.maximumAllExceptionsCount.getter()
{
  return 50;
}

uint64_t WebContentSettings.blockedByFilter.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *v1;
  v3 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177428 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B7659894((uint64_t)&qword_1EF1799F0, v4, v3, v6, v5, a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

double sub_1B76D7D18@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  double result;
  __int128 v10;
  char v11;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  v7 = qword_1EF177428;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B7659894((uint64_t)&qword_1EF1799F0, v4, v3, v6, v5, (uint64_t)&v10);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  v8 = v11;
  result = *(double *)&v10;
  *(_OWORD *)a2 = v10;
  *(_BYTE *)(a2 + 16) = v8;
  return result;
}

uint64_t sub_1B76D7DE4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_BYTE *)(a1 + 16);
  sub_1B76D85D0(*(_QWORD *)a1, v4, v5);
  if (qword_1EF177428 != -1)
    swift_once();
  v6 = *a2;
  v7 = a2[1];
  v9 = a2[2];
  v8 = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B76AE518(v3, v4, v5, (uint64_t)&qword_1EF1799F0, v6, v7, v9, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1B76D85BC(v3, v4, v5);
}

uint64_t WebContentSettings.blockedByFilter.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (qword_1EF177428 != -1)
    swift_once();
  v6 = *v1;
  v5 = v1[1];
  v8 = v1[2];
  v7 = v1[3];
  v15 = v3;
  v16 = v2;
  LOBYTE(v17) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v4 == 255)
  {
    v9.isa = 0;
  }
  else
  {
    sub_1B76D85D0(v3, v2, v4);
    v9.isa = WebContentSettings.FilterPolicy.persistableValue()().isa;
    sub_1B76AD3A8(v15, v16, v17);
  }
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    v10 = v8;
    v11 = qword_1EF179A08;
    v12 = unk_1EF179A10;
    v15 = v6;
    v16 = v5;
    v17 = v10;
    v18 = v7;
    v13 = byte_1EF179A42;
    swift_retain();
    sub_1B765ED7C(v9.isa, v11, v12, &v15, v13);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  return sub_1B76D85BC(v3, v2, v4);
}

uint64_t (*WebContentSettings.blockedByFilter.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(a1 + 24) = v1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177428 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B7659894((uint64_t)&qword_1EF1799F0, v3, v4, v6, v5, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1B76D80E8;
}

uint64_t sub_1B76D80E8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(uint64_t **)(a1 + 24);
  v3 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_BYTE *)(a1 + 16);
  v7 = *v2;
  v6 = v2[1];
  v9 = v2[2];
  v8 = v2[3];
  if ((a2 & 1) != 0)
  {
    sub_1B76D85D0(*(_QWORD *)a1, v4, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B76AE518(v3, v4, v5, (uint64_t)&qword_1EF1799F0, v7, v6, v9, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B76D85BC(v3, v4, v5);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B76AE518(v3, v4, v5, (uint64_t)&qword_1EF1799F0, v7, v6, v9, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return sub_1B76D85BC(v3, v4, v5);
}

uint64_t WebContentSettings.effectiveBlockedByFilter.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __int128 v10;
  char v11;
  _BYTE v12[24];

  if (qword_1EF177428 != -1)
    swift_once();
  if (qword_1EF1771A8 != -1)
    swift_once();
  swift_beginAccess();
  if (!qword_1EF1778A8)
    goto LABEL_9;
  v2 = qword_1EF179A08;
  v3 = unk_1EF179A10;
  swift_retain();
  v4 = sub_1B7667778(v2, v3);
  swift_release();
  if (!v4)
    goto LABEL_9;
  v5 = v4;
  static WebContentSettings.FilterPolicy.value(from:)(v4, (uint64_t)v12);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1774C8);
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    *(_OWORD *)a1 = v10;
    *(_BYTE *)(a1 + 16) = v11;
  }
  else
  {
LABEL_9:
    v7 = qword_1EF1799F0;
    v8 = *(_QWORD *)algn_1EF1799F8;
    *(_QWORD *)a1 = qword_1EF1799F0;
    *(_QWORD *)(a1 + 8) = v8;
    v9 = byte_1EF179A00;
    *(_BYTE *)(a1 + 16) = byte_1EF179A00;
    return sub_1B76AD358(v7, v8, v9);
  }
  return result;
}

uint64_t sub_1B76D8338()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(qword_1EF178270);
  qword_1EF179A30 = result;
  unk_1EF179A38 = &off_1E6CB0740;
  qword_1EF1799F0 = 0;
  *(_QWORD *)algn_1EF1799F8 = 0;
  byte_1EF179A00 = 3;
  qword_1EF179A08 = 0xD00000000000001ALL;
  unk_1EF179A10 = 0x80000001B76E1EA0;
  word_1EF179A40 = 257;
  byte_1EF179A42 = 0;
  qword_1EF179A48 = 0;
  byte_1EF179A50 = 1;
  return result;
}

uint64_t static WebContentSettings.blockedByFilter.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EF177428 != -1)
    swift_once();
  return sub_1B76D85E4((uint64_t)&qword_1EF1799F0, a1);
}

void _s15ManagedSettings010WebContentB0V12FilterPolicyO2eeoiySbAE_AEtFZ_0(uint64_t a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1B76D8438(uint64_t a1, uint64_t a2)
{
  int v2;

  if (v2)
    return 0;
  else
    return sub_1B768F960(a1, a2);
}

BOOL _s15ManagedSettings9WebDomainV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  BOOL v9;
  char v10;
  _BOOL8 result;
  char v12;
  char v13;

  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a2[1];
  v7 = a2[2];
  v8 = a2[3];
  if (!v3)
  {
    if (v6)
      return 0;
    goto LABEL_10;
  }
  if (!v6)
    return 0;
  v9 = *a1 == *a2 && v3 == v6;
  if (v9 || (v10 = sub_1B76DBED0(), result = 0, (v10 & 1) != 0))
  {
LABEL_10:
    if (v5 >> 60 == 15)
    {
      if (v8 >> 60 == 15)
        return 1;
      goto LABEL_14;
    }
    if (v8 >> 60 == 15)
    {
LABEL_14:
      sub_1B765DF08(v4, v5);
      sub_1B765DF08(v7, v8);
      sub_1B765DF1C(v4, v5);
      sub_1B765DF1C(v7, v8);
      return 0;
    }
    sub_1B765DF08(v4, v5);
    sub_1B765DF08(v7, v8);
    sub_1B766B5F0(v4, v5);
    v13 = v12;
    sub_1B765DF1C(v7, v8);
    sub_1B765DF1C(v4, v5);
    return (v13 & 1) != 0;
  }
  return result;
}

uint64_t sub_1B76D85BC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != -1)
    return sub_1B76AD3A8(a1, a2, a3);
  return a1;
}

uint64_t sub_1B76D85D0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != -1)
    return sub_1B76AD358(a1, a2, a3);
  return a1;
}

uint64_t sub_1B76D85E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF179A58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B76D8630()
{
  unint64_t result;

  result = qword_1EF179A60;
  if (!qword_1EF179A60)
  {
    result = MEMORY[0x1BCCA94E8]("\t.]/d{", &type metadata for WebDomain);
    atomic_store(result, (unint64_t *)&qword_1EF179A60);
  }
  return result;
}

unint64_t sub_1B76D8678()
{
  unint64_t result;

  result = qword_1EF179A68;
  if (!qword_1EF179A68)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for WebContentSettings.Name, &type metadata for WebContentSettings.Name);
    atomic_store(result, (unint64_t *)&qword_1EF179A68);
  }
  return result;
}

unint64_t sub_1B76D86C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF179A70;
  if (!qword_1EF179A70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF179A78);
    result = MEMORY[0x1BCCA94E8](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF179A70);
  }
  return result;
}

uint64_t destroy for WebDomain(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >> 60 != 15)
    return sub_1B765DEC4(*(_QWORD *)(a1 + 16), v3);
  return result;
}

uint64_t initializeWithCopy for WebDomain(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _OWORD *v4;
  unint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = a2 + 2;
  v5 = a2[3];
  swift_bridgeObjectRetain();
  if (v5 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *v4;
  }
  else
  {
    v6 = *(_QWORD *)v4;
    sub_1B765DDFC(v6, v5);
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = v5;
  }
  return a1;
}

_QWORD *assignWithCopy for WebDomain(_QWORD *a1, _QWORD *a2)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2 + 2;
  v5 = a2[3];
  if (a1[3] >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      v7 = *v4;
      sub_1B765DDFC(*v4, v5);
      v8 = a1[2];
      v9 = a1[3];
      a1[2] = v7;
      a1[3] = v5;
      sub_1B765DEC4(v8, v9);
      return a1;
    }
    sub_1B76D888C((uint64_t)(a1 + 2));
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 1) = *(_OWORD *)v4;
    return a1;
  }
  v6 = *v4;
  sub_1B765DDFC(*v4, v5);
  a1[2] = v6;
  a1[3] = v5;
  return a1;
}

uint64_t sub_1B76D888C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177FA0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *assignWithTake for WebDomain(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2 + 2;
  v6 = a1[3];
  if (v6 >> 60 != 15)
  {
    v7 = a2[3];
    if (v7 >> 60 != 15)
    {
      v8 = a1[2];
      a1[2] = *v5;
      a1[3] = v7;
      sub_1B765DEC4(v8, v6);
      return a1;
    }
    sub_1B76D888C((uint64_t)(a1 + 2));
  }
  *((_OWORD *)a1 + 1) = *(_OWORD *)v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for WebDomain(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for WebDomain(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for WebDomain()
{
  return &type metadata for WebDomain;
}

ValueMetadata *type metadata accessor for WebContentSettings()
{
  return &type metadata for WebContentSettings;
}

uint64_t storeEnumTagSinglePayload for WebContentSettings.Name(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B76D8A64 + 4 * byte_1B76E0EE4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B76D8A84 + 4 * byte_1B76E0EE9[v4]))();
}

_BYTE *sub_1B76D8A64(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B76D8A84(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B76D8A8C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B76D8A94(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B76D8A9C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B76D8AA4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for WebContentSettings.Name()
{
  return &type metadata for WebContentSettings.Name;
}

uint64_t destroy for WebContentSettings.FilterPolicy(uint64_t a1)
{
  return sub_1B76AD3A8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s15ManagedSettings18WebContentSettingsV12FilterPolicyOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1B76AD358(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for WebContentSettings.FilterPolicy(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1B76AD358(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1B76AD3A8(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for WebContentSettings.FilterPolicy(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1B76AD3A8(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for WebContentSettings.FilterPolicy(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for WebContentSettings.FilterPolicy(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1B76D8C40(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_1B76D8C58(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for WebContentSettings.FilterPolicy()
{
  return &type metadata for WebContentSettings.FilterPolicy;
}

uint64_t sub_1B76D8C80()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

void sub_1B76D8D04(char a1)
{
  sub_1B76DBF54();
  __asm { BR              X10 }
}

uint64_t sub_1B76D8D5C()
{
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

uint64_t sub_1B76D8DE0()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

void sub_1B76D8E60(char a1)
{
  sub_1B76DBF54();
  __asm { BR              X10 }
}

uint64_t sub_1B76D8EB8()
{
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

uint64_t sub_1B76D8F3C()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

uint64_t sub_1B76D8FE0()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

uint64_t sub_1B76D9064()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

uint64_t sub_1B76D9108()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

uint64_t sub_1B76D91A8()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

void sub_1B76D9250(char a1)
{
  sub_1B76DBF54();
  __asm { BR              X10 }
}

uint64_t sub_1B76D92AC()
{
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

uint64_t sub_1B76D933C()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

uint64_t sub_1B76D93B8()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

uint64_t sub_1B76D945C()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

uint64_t sub_1B76D94E0()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

uint64_t sub_1B76D9598()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

uint64_t sub_1B76D9640()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

uint64_t sub_1B76D96E4()
{
  sub_1B76DBB1C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76D9764()
{
  sub_1B76DBB1C();
  return swift_bridgeObjectRelease();
}

void sub_1B76D97E0(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1B76D9824()
{
  sub_1B76DBB1C();
  return swift_bridgeObjectRelease();
}

void sub_1B76D988C(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1B76D98D4()
{
  sub_1B76DBB1C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76D994C()
{
  sub_1B76DBB1C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76D99C8()
{
  sub_1B76DBB1C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76D9A48()
{
  sub_1B76DBB1C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76D9AC4()
{
  sub_1B76DBB1C();
  return swift_bridgeObjectRelease();
}

void sub_1B76D9B40(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1B76D9B84()
{
  sub_1B76DBB1C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76D9BEC()
{
  sub_1B76DBB1C();
  return swift_bridgeObjectRelease();
}

void sub_1B76D9C64(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1B76D9CAC()
{
  sub_1B76DBB1C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B76D9D50()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

uint64_t sub_1B76D9DEC()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

void sub_1B76D9E64(uint64_t a1, char a2)
{
  sub_1B76DBF54();
  __asm { BR              X10 }
}

uint64_t sub_1B76D9EB8()
{
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

uint64_t sub_1B76D9F3C()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

uint64_t sub_1B76D9FDC()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

uint64_t sub_1B76DA07C()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

uint64_t sub_1B76DA130()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

uint64_t sub_1B76DA1D4()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

uint64_t sub_1B76DA254()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

void sub_1B76DA2F4(uint64_t a1, char a2)
{
  sub_1B76DBF54();
  __asm { BR              X10 }
}

uint64_t sub_1B76DA34C()
{
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

uint64_t sub_1B76DA3DC()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

void sub_1B76DA45C(uint64_t a1, char a2)
{
  sub_1B76DBF54();
  __asm { BR              X10 }
}

uint64_t sub_1B76DA4B0()
{
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

uint64_t sub_1B76DA534()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

uint64_t sub_1B76DA5D4()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

uint64_t sub_1B76DA650()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

uint64_t sub_1B76DA6D0()
{
  sub_1B76DBF54();
  sub_1B76DBB1C();
  swift_bridgeObjectRelease();
  return sub_1B76DBF78();
}

ManagedSettings::DeviceActivitySettings::Name_optional __swiftcall DeviceActivitySettings.Name.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ManagedSettings::DeviceActivitySettings::Name_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1B76DBE70();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static DeviceActivitySettings.Name.allCases.getter()
{
  return &unk_1E6CAC9E0;
}

unint64_t DeviceActivitySettings.Name.rawValue.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000021;
  if (*v0 == 1)
    v1 = 0xD00000000000001ELL;
  if (*v0)
    return v1;
  else
    return 0xD00000000000001DLL;
}

uint64_t sub_1B76DA834(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B76A1BC8(*a1, *a2);
}

uint64_t sub_1B76DA840()
{
  return sub_1B76D9640();
}

uint64_t sub_1B76DA848()
{
  return sub_1B76D9A48();
}

uint64_t sub_1B76DA850()
{
  return sub_1B76D9FDC();
}

ManagedSettings::DeviceActivitySettings::Name_optional sub_1B76DA858(Swift::String *a1)
{
  return DeviceActivitySettings.Name.init(rawValue:)(*a1);
}

unint64_t sub_1B76DA864@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;
  unint64_t v3;

  result = DeviceActivitySettings.Name.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1B76DA888(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6CACA70;
}

uint64_t DeviceActivitySettings.allowedClients.getter()
{
  return sub_1B76B3818(&qword_1EF177430, (uint64_t)&unk_1EF179A80, sub_1B7658794);
}

uint64_t DeviceActivitySettings.allowedClients.setter(uint64_t a1)
{
  sub_1B76DB1D0(a1);
  return swift_bridgeObjectRelease();
}

void (*DeviceActivitySettings.allowedClients.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x98uLL);
  *a1 = v3;
  v4 = v3 + 17;
  v3[18] = v1;
  v5 = *v1;
  v6 = v1[1];
  v8 = v1[2];
  v7 = v1[3];
  if (qword_1EF177430 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = sub_1B7658794((uint64_t)&unk_1EF179A80, v5, v6, v8, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v4 = v9;
  return sub_1B76DA9A0;
}

void sub_1B76DA9A0(uint64_t *a1, char a2)
{
  sub_1B76C4BC8(a1, a2, (uint64_t)&unk_1EF179A80, &qword_1ED53B420, sub_1B7665174);
}

uint64_t DeviceActivitySettings.effectiveAllowedClients.getter()
{
  return sub_1B76B3CE4(&qword_1EF177430, (uint64_t)&unk_1EF179A80, sub_1B7659DBC);
}

double sub_1B76DA9E0()
{
  double result;
  __int128 v1;
  _OWORD v2[3];
  __int128 v3;
  char v4;
  _BYTE v5[24];
  uint64_t v6;
  _UNKNOWN **v7;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED53B380);
  v7 = &off_1E6CB05D8;
  v5[0] = 1;
  *(_QWORD *)&v1 = MEMORY[0x1E0DEE9E8];
  *((_QWORD *)&v1 + 1) = 0xD00000000000001DLL;
  *(_QWORD *)&v2[0] = 0x80000001B76E1EC0;
  sub_1B76638C0((uint64_t)v5, (uint64_t)v2 + 8, &qword_1ED53B410);
  LOWORD(v3) = 256;
  BYTE2(v3) = 0;
  *((_QWORD *)&v3 + 1) = 0x7FFFFFFFFFFFFFFFLL;
  v4 = 0;
  sub_1B765DE88((uint64_t)v5, &qword_1ED53B410);
  xmmword_1EF179AA0 = v2[1];
  unk_1EF179AB0 = v2[2];
  xmmword_1EF179AC0 = v3;
  byte_1EF179AD0 = v4;
  result = *(double *)&v1;
  unk_1EF179A80 = v1;
  *(_OWORD *)algn_1EF179A90 = v2[0];
  return result;
}

uint64_t static DeviceActivitySettings.allowedClients.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B76B37A0(&qword_1EF177430, (uint64_t)&unk_1EF179A80, &qword_1ED53B420, a1);
}

uint64_t DeviceActivitySettings.sharingAppleIDs.getter()
{
  return sub_1B76B3818(&qword_1EF177438, (uint64_t)&xmmword_1EF179AD8, sub_1B7659BB8);
}

uint64_t DeviceActivitySettings.sharingAppleIDs.setter(uint64_t a1)
{
  sub_1B76DB34C(a1);
  return swift_bridgeObjectRelease();
}

void (*DeviceActivitySettings.sharingAppleIDs.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x98uLL);
  *a1 = v3;
  v4 = v3 + 17;
  v3[18] = v1;
  v5 = *v1;
  v6 = v1[1];
  v8 = v1[2];
  v7 = v1[3];
  if (qword_1EF177438 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = sub_1B7659BB8((uint64_t)&xmmword_1EF179AD8, v5, v6, v8, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v4 = v9;
  return sub_1B76DABDC;
}

void sub_1B76DABDC(uint64_t *a1, char a2)
{
  sub_1B76C4BC8(a1, a2, (uint64_t)&xmmword_1EF179AD8, &qword_1EF179B88, sub_1B7665B70);
}

uint64_t DeviceActivitySettings.effectiveSharingAppleIDs.getter()
{
  return sub_1B76B3CE4(&qword_1EF177438, (uint64_t)&xmmword_1EF179AD8, sub_1B765A088);
}

double sub_1B76DAC1C()
{
  double result;
  __int128 v1;
  _OWORD v2[3];
  __int128 v3;
  char v4;
  _BYTE v5[24];
  uint64_t v6;
  _UNKNOWN **v7;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF179BA8);
  v7 = &off_1E6CB05D8;
  *(_QWORD *)&v1 = MEMORY[0x1E0DEE9E8];
  *((_QWORD *)&v1 + 1) = 0xD00000000000001ELL;
  v5[0] = 1;
  *(_QWORD *)&v2[0] = 0x80000001B76E1EE0;
  sub_1B76638C0((uint64_t)v5, (uint64_t)v2 + 8, (uint64_t *)&unk_1EF179BB0);
  LOWORD(v3) = 256;
  BYTE2(v3) = 1;
  *((_QWORD *)&v3 + 1) = 0x7FFFFFFFFFFFFFFFLL;
  v4 = 0;
  sub_1B765DE88((uint64_t)v5, (uint64_t *)&unk_1EF179BB0);
  xmmword_1EF179AF8 = v2[1];
  unk_1EF179B08 = v2[2];
  xmmword_1EF179B18 = v3;
  byte_1EF179B28 = v4;
  result = *(double *)&v1;
  xmmword_1EF179AD8 = v1;
  unk_1EF179AE8 = v2[0];
  return result;
}

uint64_t static DeviceActivitySettings.sharingAppleIDs.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B76B37A0(&qword_1EF177438, (uint64_t)&xmmword_1EF179AD8, &qword_1EF179B88, a1);
}

uint64_t DeviceActivitySettings.shareAcrossDevices.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v0;
  v1 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  if (qword_1EF177440 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = sub_1B76584AC((uint64_t)&byte_1EF179B30, v2, v1, v4, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1B76DADA4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  v7 = qword_1EF177440;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_1B76584AC((uint64_t)&byte_1EF179B30, v4, v3, v6, v5);
  swift_bridgeObjectRelease_n();
  result = swift_bridgeObjectRelease_n();
  *a2 = v8;
  return result;
}

uint64_t DeviceActivitySettings.shareAcrossDevices.setter(unsigned __int8 a1)
{
  uint64_t *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v14[4];
  _BYTE v15[8];
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;

  v2 = a1;
  if (qword_1EF177440 != -1)
    swift_once();
  sub_1B76638C0((uint64_t)&byte_1EF179B30, (uint64_t)v15, &qword_1EF177448);
  v4 = *v1;
  v3 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (v2 == 2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = 0;
  }
  else
  {
    v8 = v2 & 1;
    v9 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = objc_msgSend(v9, sel_initWithBool_, v8);
  }
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    v10 = v16;
    v11 = v17;
    v14[0] = v4;
    v14[1] = v3;
    v14[2] = v6;
    v14[3] = v5;
    v12 = v18;
    swift_retain();
    sub_1B765ED7C(v7, v10, v11, v14, v12);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  return sub_1B765DE88((uint64_t)v15, &qword_1EF177448);
}

uint64_t (*DeviceActivitySettings.shareAcrossDevices.modify(uint64_t **a1))(uint64_t a1)
{
  uint64_t *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  if (qword_1EF177440 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B76584AC((uint64_t)&byte_1EF179B30, v3, v4, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v7;
  return sub_1B76DB0A4;
}

uint64_t sub_1B76DB0A4(uint64_t a1)
{
  return DeviceActivitySettings.shareAcrossDevices.setter(*(_BYTE *)(a1 + 8));
}

uint64_t DeviceActivitySettings.effectiveShareAcrossDevices.getter()
{
  if (qword_1EF177440 != -1)
    swift_once();
  return sub_1B7659CC4(&byte_1EF179B30);
}

uint64_t sub_1B76DB108()
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF177598);
  qword_1EF179B60 = result;
  unk_1EF179B68 = &off_1E6CB07B8;
  byte_1EF179B48 = 1;
  byte_1EF179B30 = 1;
  qword_1EF179B38 = 0xD000000000000021;
  unk_1EF179B40 = 0x80000001B76E1F00;
  word_1EF179B70 = 256;
  byte_1EF179B72 = 0;
  qword_1EF179B78 = 0;
  byte_1EF179B80 = 1;
  return result;
}

uint64_t static DeviceActivitySettings.shareAcrossDevices.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EF177440 != -1)
    swift_once();
  return sub_1B76638C0((uint64_t)&byte_1EF179B30, a1, &qword_1EF177448);
}

uint64_t sub_1B76DB1D0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v12[4];
  _BYTE v13[8];
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;

  if (qword_1EF177430 != -1)
    swift_once();
  sub_1B76638C0((uint64_t)&unk_1EF179A80, (uint64_t)v13, &qword_1ED53B420);
  v4 = *v1;
  v3 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (a1)
  {
    swift_bridgeObjectRetain();
    v7 = (void *)sub_1B7665174(a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    v8 = v14;
    v9 = v15;
    v12[0] = v4;
    v12[1] = v3;
    v12[2] = v6;
    v12[3] = v5;
    v10 = v16;
    swift_retain();
    sub_1B765ED7C(v7, v8, v9, v12, v10);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  return sub_1B765DE88((uint64_t)v13, &qword_1ED53B420);
}

uint64_t sub_1B76DB34C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v12[4];
  _BYTE v13[8];
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;

  if (qword_1EF177438 != -1)
    swift_once();
  sub_1B76638C0((uint64_t)&xmmword_1EF179AD8, (uint64_t)v13, &qword_1EF179B88);
  v4 = *v1;
  v3 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (a1)
  {
    swift_bridgeObjectRetain();
    v7 = (void *)sub_1B7665B70(a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  if (qword_1EF177160 != -1)
    swift_once();
  swift_beginAccess();
  if (off_1EF1775A8)
  {
    v8 = v14;
    v9 = v15;
    v12[0] = v4;
    v12[1] = v3;
    v12[2] = v6;
    v12[3] = v5;
    v10 = v16;
    swift_retain();
    sub_1B765ED7C(v7, v8, v9, v12, v10);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  return sub_1B765DE88((uint64_t)v13, &qword_1EF179B88);
}

unint64_t sub_1B76DB4CC()
{
  unint64_t result;

  result = qword_1EF179B90;
  if (!qword_1EF179B90)
  {
    result = MEMORY[0x1BCCA94E8](&protocol conformance descriptor for DeviceActivitySettings.Name, &type metadata for DeviceActivitySettings.Name);
    atomic_store(result, (unint64_t *)&qword_1EF179B90);
  }
  return result;
}

unint64_t sub_1B76DB514()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF179B98;
  if (!qword_1EF179B98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF179BA0);
    result = MEMORY[0x1BCCA94E8](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF179B98);
  }
  return result;
}

uint64_t sub_1B76DB560@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B76B38A8(a1, &qword_1EF177430, (uint64_t)&unk_1EF179A80, sub_1B7658794, a2);
}

uint64_t sub_1B76DB594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm_0(a1, a2, a3, a4, (void (*)(uint64_t))sub_1B76DB1D0);
}

uint64_t sub_1B76DB5A0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B76B38A8(a1, &qword_1EF177438, (uint64_t)&xmmword_1EF179AD8, sub_1B7659BB8, a2);
}

uint64_t sub_1B76DB5D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm_0(a1, a2, a3, a4, (void (*)(uint64_t))sub_1B76DB34C);
}

uint64_t sub_1B76DB5E4(unsigned __int8 *a1)
{
  return DeviceActivitySettings.shareAcrossDevices.setter(*a1);
}

ValueMetadata *type metadata accessor for DeviceActivitySettings()
{
  return &type metadata for DeviceActivitySettings;
}

uint64_t storeEnumTagSinglePayload for DeviceActivitySettings.Name(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B76DB664 + 4 * byte_1B76E1104[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B76DB698 + 4 * byte_1B76E10FF[v4]))();
}

uint64_t sub_1B76DB698(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76DB6A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B76DB6A8);
  return result;
}

uint64_t sub_1B76DB6B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B76DB6BCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B76DB6C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B76DB6C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DeviceActivitySettings.Name()
{
  return &type metadata for DeviceActivitySettings.Name;
}

uint64_t sub_1B76DB6E4()
{
  return MEMORY[0x1E0CADD40]();
}

uint64_t sub_1B76DB6F0()
{
  return MEMORY[0x1E0CADD60]();
}

uint64_t sub_1B76DB6FC()
{
  return MEMORY[0x1E0CADD78]();
}

uint64_t sub_1B76DB708()
{
  return MEMORY[0x1E0CADD98]();
}

uint64_t sub_1B76DB714()
{
  return MEMORY[0x1E0CADDB8]();
}

uint64_t sub_1B76DB720()
{
  return MEMORY[0x1E0CADDD0]();
}

uint64_t sub_1B76DB72C()
{
  return MEMORY[0x1E0CADE20]();
}

uint64_t sub_1B76DB738()
{
  return MEMORY[0x1E0CADE48]();
}

uint64_t sub_1B76DB744()
{
  return MEMORY[0x1E0CAE628]();
}

uint64_t sub_1B76DB750()
{
  return MEMORY[0x1E0CAE648]();
}

uint64_t sub_1B76DB75C()
{
  return MEMORY[0x1E0CAE8D0]();
}

uint64_t sub_1B76DB768()
{
  return MEMORY[0x1E0CAE8F0]();
}

uint64_t sub_1B76DB774()
{
  return MEMORY[0x1E0CAE8F8]();
}

uint64_t sub_1B76DB780()
{
  return MEMORY[0x1E0CAF548]();
}

uint64_t sub_1B76DB78C()
{
  return MEMORY[0x1E0CAF940]();
}

uint64_t sub_1B76DB798()
{
  return MEMORY[0x1E0CAF980]();
}

uint64_t sub_1B76DB7A4()
{
  return MEMORY[0x1E0CAF990]();
}

uint64_t sub_1B76DB7B0()
{
  return MEMORY[0x1E0CAFB50]();
}

uint64_t sub_1B76DB7BC()
{
  return MEMORY[0x1E0CAFB58]();
}

uint64_t sub_1B76DB7C8()
{
  return MEMORY[0x1E0CAFD90]();
}

uint64_t sub_1B76DB7D4()
{
  return MEMORY[0x1E0CAFE38]();
}

uint64_t sub_1B76DB7E0()
{
  return MEMORY[0x1E0CAFF40]();
}

uint64_t sub_1B76DB7EC()
{
  return MEMORY[0x1E0CAFF98]();
}

uint64_t sub_1B76DB7F8()
{
  return MEMORY[0x1E0CAFFD0]();
}

uint64_t sub_1B76DB804()
{
  return MEMORY[0x1E0CAFFF8]();
}

uint64_t sub_1B76DB810()
{
  return MEMORY[0x1E0CB00A0]();
}

uint64_t sub_1B76DB81C()
{
  return MEMORY[0x1E0CB01F0]();
}

uint64_t sub_1B76DB828()
{
  return MEMORY[0x1E0CB0228]();
}

uint64_t sub_1B76DB834()
{
  return MEMORY[0x1E0CB0240]();
}

uint64_t sub_1B76DB840()
{
  return MEMORY[0x1E0CB0270]();
}

uint64_t sub_1B76DB84C()
{
  return MEMORY[0x1E0CB02B8]();
}

uint64_t sub_1B76DB858()
{
  return MEMORY[0x1E0CB02C0]();
}

uint64_t sub_1B76DB864()
{
  return MEMORY[0x1E0CB02D8]();
}

uint64_t sub_1B76DB870()
{
  return MEMORY[0x1E0CB0930]();
}

uint64_t sub_1B76DB87C()
{
  return MEMORY[0x1E0CB0958]();
}

uint64_t sub_1B76DB888()
{
  return MEMORY[0x1E0CB0998]();
}

uint64_t sub_1B76DB894()
{
  return MEMORY[0x1E0D20EF8]();
}

uint64_t sub_1B76DB8A0()
{
  return MEMORY[0x1E0DF2240]();
}

uint64_t sub_1B76DB8AC()
{
  return MEMORY[0x1E0DF2248]();
}

uint64_t sub_1B76DB8B8()
{
  return MEMORY[0x1E0DF2258]();
}

uint64_t sub_1B76DB8C4()
{
  return MEMORY[0x1E0C95640]();
}

uint64_t sub_1B76DB8D0()
{
  return MEMORY[0x1E0C95660]();
}

uint64_t sub_1B76DB8DC()
{
  return MEMORY[0x1E0C95CD8]();
}

uint64_t sub_1B76DB8E8()
{
  return MEMORY[0x1E0C95CE0]();
}

uint64_t sub_1B76DB8F4()
{
  return MEMORY[0x1E0C95CE8]();
}

uint64_t sub_1B76DB900()
{
  return MEMORY[0x1E0C95D08]();
}

uint64_t sub_1B76DB90C()
{
  return MEMORY[0x1E0C95D40]();
}

uint64_t sub_1B76DB918()
{
  return MEMORY[0x1E0C95D48]();
}

uint64_t sub_1B76DB924()
{
  return MEMORY[0x1E0C95D50]();
}

uint64_t sub_1B76DB930()
{
  return MEMORY[0x1E0C95DB0]();
}

uint64_t sub_1B76DB93C()
{
  return MEMORY[0x1E0C95DE8]();
}

uint64_t sub_1B76DB948()
{
  return MEMORY[0x1E0C95ED8]();
}

uint64_t sub_1B76DB954()
{
  return MEMORY[0x1E0C95F08]();
}

uint64_t sub_1B76DB960()
{
  return MEMORY[0x1E0C95F20]();
}

uint64_t sub_1B76DB96C()
{
  return MEMORY[0x1E0C96150]();
}

uint64_t sub_1B76DB978()
{
  return MEMORY[0x1E0C96158]();
}

uint64_t sub_1B76DB984()
{
  return MEMORY[0x1E0C96160]();
}

uint64_t sub_1B76DB990()
{
  return MEMORY[0x1E0C96170]();
}

uint64_t sub_1B76DB99C()
{
  return MEMORY[0x1E0C96178]();
}

uint64_t sub_1B76DB9A8()
{
  return MEMORY[0x1E0C96198]();
}

uint64_t sub_1B76DB9B4()
{
  return MEMORY[0x1E0C961D0]();
}

uint64_t sub_1B76DB9C0()
{
  return MEMORY[0x1E0C963D8]();
}

uint64_t sub_1B76DB9CC()
{
  return MEMORY[0x1E0C96410]();
}

uint64_t sub_1B76DB9D8()
{
  return MEMORY[0x1E0DEF4F8]();
}

uint64_t sub_1B76DB9E4()
{
  return MEMORY[0x1E0DEF578]();
}

uint64_t sub_1B76DB9F0()
{
  return MEMORY[0x1E0DEF5B0]();
}

uint64_t sub_1B76DB9FC()
{
  return MEMORY[0x1E0DE9D60]();
}

uint64_t sub_1B76DBA08()
{
  return MEMORY[0x1E0DE9D78]();
}

uint64_t sub_1B76DBA14()
{
  return MEMORY[0x1E0CB17D8]();
}

uint64_t sub_1B76DBA20()
{
  return MEMORY[0x1E0CB17F8]();
}

uint64_t sub_1B76DBA2C()
{
  return MEMORY[0x1E0CB1808]();
}

uint64_t sub_1B76DBA38()
{
  return MEMORY[0x1E0DE9E38]();
}

uint64_t sub_1B76DBA44()
{
  return MEMORY[0x1E0DE9F50]();
}

uint64_t sub_1B76DBA50()
{
  return MEMORY[0x1E0DEA048]();
}

uint64_t sub_1B76DBA5C()
{
  return MEMORY[0x1E0DEA0A0]();
}

uint64_t sub_1B76DBA68()
{
  return MEMORY[0x1E0DEA0A8]();
}

uint64_t sub_1B76DBA74()
{
  return MEMORY[0x1E0DEA1B8]();
}

uint64_t sub_1B76DBA80()
{
  return MEMORY[0x1E0DEA3C8]();
}

uint64_t sub_1B76DBA8C()
{
  return MEMORY[0x1E0DEA3D0]();
}

uint64_t sub_1B76DBA98()
{
  return MEMORY[0x1E0DEA4B0]();
}

uint64_t sub_1B76DBAA4()
{
  return MEMORY[0x1E0DEA568]();
}

uint64_t sub_1B76DBAB0()
{
  return MEMORY[0x1E0CB1940]();
}

uint64_t sub_1B76DBABC()
{
  return MEMORY[0x1E0CB1960]();
}

uint64_t sub_1B76DBAC8()
{
  return MEMORY[0x1E0CB1970]();
}

uint64_t sub_1B76DBAD4()
{
  return MEMORY[0x1E0CB1980]();
}

uint64_t sub_1B76DBAE0()
{
  return MEMORY[0x1E0CB1990]();
}

uint64_t sub_1B76DBAEC()
{
  return MEMORY[0x1E0CB19C0]();
}

uint64_t sub_1B76DBAF8()
{
  return MEMORY[0x1E0CB19E8]();
}

uint64_t sub_1B76DBB04()
{
  return MEMORY[0x1E0CB1A18]();
}

uint64_t sub_1B76DBB10()
{
  return MEMORY[0x1E0DEA5F8]();
}

uint64_t sub_1B76DBB1C()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t sub_1B76DBB28()
{
  return MEMORY[0x1E0DEA800]();
}

uint64_t sub_1B76DBB34()
{
  return MEMORY[0x1E0DEA850]();
}

uint64_t sub_1B76DBB40()
{
  return MEMORY[0x1E0DEAB20]();
}

uint64_t sub_1B76DBB4C()
{
  return MEMORY[0x1E0DEAB78]();
}

uint64_t sub_1B76DBB58()
{
  return MEMORY[0x1E0DEAB80]();
}

uint64_t sub_1B76DBB64()
{
  return MEMORY[0x1E0CB1AC0]();
}

uint64_t sub_1B76DBB70()
{
  return MEMORY[0x1E0CB1AE8]();
}

uint64_t sub_1B76DBB7C()
{
  return MEMORY[0x1E0DEADC0]();
}

uint64_t sub_1B76DBB88()
{
  return MEMORY[0x1E0DEADC8]();
}

uint64_t sub_1B76DBB94()
{
  return MEMORY[0x1E0DEAE10]();
}

uint64_t sub_1B76DBBA0()
{
  return MEMORY[0x1E0DEAE38]();
}

uint64_t sub_1B76DBBAC()
{
  return MEMORY[0x1E0DEAE98]();
}

uint64_t sub_1B76DBBB8()
{
  return MEMORY[0x1E0DEAEC8]();
}

uint64_t sub_1B76DBBC4()
{
  return MEMORY[0x1E0CB1BB0]();
}

uint64_t sub_1B76DBBD0()
{
  return MEMORY[0x1E0CB1BC0]();
}

uint64_t sub_1B76DBBDC()
{
  return MEMORY[0x1E0CB1BD8]();
}

uint64_t sub_1B76DBBE8()
{
  return MEMORY[0x1E0DEB220]();
}

uint64_t sub_1B76DBBF4()
{
  return MEMORY[0x1E0DEB240]();
}

uint64_t sub_1B76DBC00()
{
  return MEMORY[0x1E0DEB288]();
}

uint64_t sub_1B76DBC0C()
{
  return MEMORY[0x1E0DEB2D8]();
}

uint64_t sub_1B76DBC18()
{
  return MEMORY[0x1E0DEB2E8]();
}

uint64_t sub_1B76DBC24()
{
  return MEMORY[0x1E0DEB340]();
}

uint64_t sub_1B76DBC30()
{
  return MEMORY[0x1E0DEB388]();
}

uint64_t sub_1B76DBC3C()
{
  return MEMORY[0x1E0DEB528]();
}

uint64_t sub_1B76DBC48()
{
  return MEMORY[0x1E0DEB560]();
}

uint64_t sub_1B76DBC54()
{
  return MEMORY[0x1E0DEB5B0]();
}

uint64_t sub_1B76DBC60()
{
  return MEMORY[0x1E0DEB6D0]();
}

uint64_t sub_1B76DBC6C()
{
  return MEMORY[0x1E0CB1CA0]();
}

uint64_t sub_1B76DBC78()
{
  return MEMORY[0x1E0CB1CB0]();
}

uint64_t sub_1B76DBC84()
{
  return MEMORY[0x1E0DF2278]();
}

uint64_t sub_1B76DBC90()
{
  return MEMORY[0x1E0DF2280]();
}

uint64_t sub_1B76DBC9C()
{
  return MEMORY[0x1E0DF2288]();
}

uint64_t sub_1B76DBCA8()
{
  return MEMORY[0x1E0DF2290]();
}

uint64_t sub_1B76DBCB4()
{
  return MEMORY[0x1E0DEF8E8]();
}

uint64_t sub_1B76DBCC0()
{
  return MEMORY[0x1E0DEF900]();
}

uint64_t sub_1B76DBCCC()
{
  return MEMORY[0x1E0CB1F30]();
}

uint64_t sub_1B76DBCD8()
{
  return MEMORY[0x1E0CB1F50]();
}

uint64_t sub_1B76DBCE4()
{
  return MEMORY[0x1E0CB1F98]();
}

uint64_t sub_1B76DBCF0()
{
  return MEMORY[0x1E0CB1FA0]();
}

uint64_t sub_1B76DBCFC()
{
  return MEMORY[0x1E0CB1FB0]();
}

uint64_t sub_1B76DBD08()
{
  return MEMORY[0x1E0CB1FF0]();
}

uint64_t sub_1B76DBD14()
{
  return MEMORY[0x1E0DEB930]();
}

uint64_t sub_1B76DBD20()
{
  return MEMORY[0x1E0DEB940]();
}

uint64_t sub_1B76DBD2C()
{
  return MEMORY[0x1E0DEBB68]();
}

uint64_t sub_1B76DBD38()
{
  return MEMORY[0x1E0DEBC20]();
}

uint64_t sub_1B76DBD44()
{
  return MEMORY[0x1E0DEBC90]();
}

uint64_t sub_1B76DBD50()
{
  return MEMORY[0x1E0DEBE50]();
}

uint64_t sub_1B76DBD5C()
{
  return MEMORY[0x1E0DEC060]();
}

uint64_t sub_1B76DBD68()
{
  return MEMORY[0x1E0DEC068]();
}

uint64_t sub_1B76DBD74()
{
  return MEMORY[0x1E0DEC078]();
}

uint64_t sub_1B76DBD80()
{
  return MEMORY[0x1E0DEC168]();
}

uint64_t sub_1B76DBD8C()
{
  return MEMORY[0x1E0DEC248]();
}

uint64_t sub_1B76DBD98()
{
  return MEMORY[0x1E0DEC250]();
}

uint64_t sub_1B76DBDA4()
{
  return MEMORY[0x1E0DEC260]();
}

uint64_t sub_1B76DBDB0()
{
  return MEMORY[0x1E0DEC280]();
}

uint64_t sub_1B76DBDBC()
{
  return MEMORY[0x1E0DEC2B0]();
}

uint64_t sub_1B76DBDC8()
{
  return MEMORY[0x1E0DEC3D8]();
}

uint64_t sub_1B76DBDD4()
{
  return MEMORY[0x1E0DEC588]();
}

uint64_t sub_1B76DBDE0()
{
  return MEMORY[0x1E0DEC680]();
}

uint64_t sub_1B76DBDEC()
{
  return MEMORY[0x1E0DEC6E0]();
}

uint64_t sub_1B76DBDF8()
{
  return MEMORY[0x1E0DEC700]();
}

uint64_t sub_1B76DBE04()
{
  return MEMORY[0x1E0DEC708]();
}

uint64_t sub_1B76DBE10()
{
  return MEMORY[0x1E0DEC8E0]();
}

uint64_t sub_1B76DBE1C()
{
  return MEMORY[0x1E0DECBE0]();
}

uint64_t sub_1B76DBE28()
{
  return MEMORY[0x1E0DECBE8]();
}

uint64_t sub_1B76DBE34()
{
  return MEMORY[0x1E0DECD38]();
}

uint64_t sub_1B76DBE40()
{
  return MEMORY[0x1E0DECD40]();
}

uint64_t sub_1B76DBE4C()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t sub_1B76DBE58()
{
  return MEMORY[0x1E0DECD70]();
}

uint64_t sub_1B76DBE64()
{
  return MEMORY[0x1E0DECE70]();
}

uint64_t sub_1B76DBE70()
{
  return MEMORY[0x1E0DECF28]();
}

uint64_t sub_1B76DBE7C()
{
  return MEMORY[0x1E0DECFF0]();
}

uint64_t sub_1B76DBE88()
{
  return MEMORY[0x1E0DED048]();
}

uint64_t sub_1B76DBE94()
{
  return MEMORY[0x1E0DED120]();
}

uint64_t sub_1B76DBEA0()
{
  return MEMORY[0x1E0DED170]();
}

uint64_t sub_1B76DBEAC()
{
  return MEMORY[0x1E0DED1D0]();
}

uint64_t sub_1B76DBEB8()
{
  return MEMORY[0x1E0DED1E8]();
}

uint64_t sub_1B76DBEC4()
{
  return MEMORY[0x1E0DED5F0]();
}

uint64_t sub_1B76DBED0()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t sub_1B76DBEDC()
{
  return MEMORY[0x1E0DED998]();
}

uint64_t sub_1B76DBEE8()
{
  return MEMORY[0x1E0DED9F8]();
}

uint64_t sub_1B76DBEF4()
{
  return MEMORY[0x1E0DEDA10]();
}

uint64_t sub_1B76DBF00()
{
  return MEMORY[0x1E0DEDA20]();
}

uint64_t sub_1B76DBF0C()
{
  return MEMORY[0x1E0DEDAE0]();
}

uint64_t sub_1B76DBF18()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t sub_1B76DBF24()
{
  return MEMORY[0x1E0DEDB10]();
}

uint64_t sub_1B76DBF30()
{
  return MEMORY[0x1E0DEDB18]();
}

uint64_t sub_1B76DBF3C()
{
  return MEMORY[0x1E0DEDB20]();
}

uint64_t sub_1B76DBF48()
{
  return MEMORY[0x1E0DEDB28]();
}

uint64_t sub_1B76DBF54()
{
  return MEMORY[0x1E0DEDEF8]();
}

uint64_t sub_1B76DBF60()
{
  return MEMORY[0x1E0DEDF10]();
}

uint64_t sub_1B76DBF6C()
{
  return MEMORY[0x1E0DEDF18]();
}

uint64_t sub_1B76DBF78()
{
  return MEMORY[0x1E0DEDF40]();
}

uint64_t sub_1B76DBF84()
{
  return MEMORY[0x1E0DEE030]();
}

uint64_t sub_1B76DBF90()
{
  return MEMORY[0x1E0DEE240]();
}

uint64_t sub_1B76DBF9C()
{
  return MEMORY[0x1E0DEE270]();
}

uint64_t sub_1B76DBFA8()
{
  return MEMORY[0x1E0DEE8E0]();
}

uint64_t sub_1B76DBFB4()
{
  return MEMORY[0x1E0DEE8E8]();
}

NSString *NSHomeDirectory(void)
{
  return (NSString *)MEMORY[0x1E0CB2C00]();
}

CFTypeRef SecTaskCopyValueForEntitlement(SecTaskRef task, CFStringRef entitlement, CFErrorRef *error)
{
  return (CFTypeRef)MEMORY[0x1E0CD65F0](task, entitlement, error);
}

SecTaskRef SecTaskCreateFromSelf(CFAllocatorRef allocator)
{
  return (SecTaskRef)MEMORY[0x1E0CD6610](allocator);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1E0C83E68](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x1E0C84078](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x1E0C843D8](*(_QWORD *)&token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x1E0C84408](name, out_token, queue, handler);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1E0DE7BB0](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7BE8](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D20](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E60](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1E0DEEA98]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1E0DEEAA8]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1E0DEEAB0]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1E0DEEAB8]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x1E0DEEAC0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1E0DEEAD8]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1E0DEEAE0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1E0DEEAE8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1E0DEEAF0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1E0DEEAF8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1E0DEEB08]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1E0DEEB10]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1E0DEEB18]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1E0DEEB20]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1E0DEEB28]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1E0DEEB50]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1E0DEEB60]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1E0DEEB68]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1E0DEEB80]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x1E0DEEB88]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1E0DEEBA8]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1E0DEEBE0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1E0DEEBF0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1E0DEEBF8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1E0DEEC08]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1E0DEEC40]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1E0DEEC78]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1E0DEECB0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x1E0DEECB8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1E0DEECC8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1E0DEECD8]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1E0DEECE0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1E0DEECF8]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1E0DEED20]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1E0DEED38]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1E0DEED40]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1E0DEED50]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1E0DEED58]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1E0DEED78]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1E0DEED88]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1E0DEEDD0]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x1E0DEEDE0]();
}

uint64_t swift_once()
{
  return MEMORY[0x1E0DEEE00]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x1E0DEEE08]();
}

uint64_t swift_release()
{
  return MEMORY[0x1E0DEEE30]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1E0DEEE38]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1E0DEEE48]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1E0DEEE50]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1E0DEEE70]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1E0DEEE78]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1E0DEEE80]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x1E0DEEE88]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1E0DEEEC0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1E0DEEEC8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1E0DEEED0]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1E0DEEF78]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1E0DEEF98]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1E0DEEFA0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1E0DEEFA8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1E0DEEFC0]();
}

