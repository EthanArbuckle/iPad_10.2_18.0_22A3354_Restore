uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x23493E2E8]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x23493E294](a1, v6, a5);
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t sub_233B6E528(uint64_t a1)
{
  return sub_233B6E57C(a1, qword_25424FCB8);
}

uint64_t static Logger.ald.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_233B6E60C(&qword_25424FCD0, (uint64_t)qword_25424FCB8, a1);
}

uint64_t sub_233B6E55C(uint64_t a1)
{
  return sub_233B6E57C(a1, qword_25424FCD8);
}

uint64_t sub_233B6E57C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_233BD8780();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_233BD8774();
}

uint64_t static Logger.general.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_233B6E60C(&qword_25424FCA0, (uint64_t)qword_25424FCD8, a1);
}

uint64_t sub_233B6E60C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_233BD8780();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

void type metadata accessor for CGColor(uint64_t a1)
{
  sub_233B6E88C(a1, &qword_2561237B8);
}

uint64_t sub_233B6E688(uint64_t a1)
{
  MEMORY[0x23493E300](&unk_233BD9558, a1);
  return sub_233BD85DC();
}

uint64_t sub_233B6E6C4()
{
  MEMORY[0x23493E300](&unk_233BD9558);
  return sub_233BD85D0();
}

uint64_t sub_233B6E70C(uint64_t a1, uint64_t a2)
{
  sub_233BD8CFC();
  MEMORY[0x23493E300](&unk_233BD9558, a2);
  sub_233BD85D0();
  return sub_233BD8D38();
}

uint64_t sub_233B6E764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x23493E300](&unk_233BD9558, a3);
  return sub_233BD85C4();
}

uint64_t sub_233B6E7B0()
{
  return sub_233B6E7F8(&qword_2561237C0, (uint64_t)&unk_233BD94E8);
}

uint64_t sub_233B6E7D4()
{
  return sub_233B6E7F8(&qword_2561237C8, (uint64_t)&unk_233BD9514);
}

uint64_t sub_233B6E7F8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for CGColor(255);
    result = MEMORY[0x23493E300](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_233B6E88C(a1, &qword_25424FEE8);
}

void sub_233B6E88C(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t AppVersion.appleItemID.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t AppVersion.appleVersionID.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t AppVersion.init(appleItemID:appleVersionID:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t AppVersion.description.getter()
{
  uint64_t v1;

  v1 = sub_233BD8C60();
  sub_233BD8828();
  sub_233BD8C60();
  sub_233BD8828();
  swift_bridgeObjectRelease();
  return v1;
}

BOOL sub_233B6E978(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_233B6E990()
{
  sub_233BD8CFC();
  sub_233BD8D08();
  return sub_233BD8D38();
}

uint64_t sub_233B6E9D4()
{
  return sub_233BD8D08();
}

uint64_t sub_233B6E9FC()
{
  sub_233BD8CFC();
  sub_233BD8D08();
  return sub_233BD8D38();
}

uint64_t sub_233B6EA3C()
{
  _BYTE *v0;

  if (*v0)
    return 0x726556656C707061;
  else
    return 0x657449656C707061;
}

uint64_t sub_233B6EA8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233B70718(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233B6EAB0()
{
  return 0;
}

void sub_233B6EABC(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_233B6EAC8()
{
  sub_233B6EC3C();
  return sub_233BD8D8C();
}

uint64_t sub_233B6EAF0()
{
  sub_233B6EC3C();
  return sub_233BD8D98();
}

uint64_t AppVersion.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];
  char v10;
  char v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123830);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8]();
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = *(_QWORD *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233B6EC3C();
  sub_233BD8D80();
  v11 = 0;
  sub_233BD8C48();
  if (!v2)
  {
    v10 = 1;
    sub_233BD8C48();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_233B6EC3C()
{
  unint64_t result;

  result = qword_256123838;
  if (!qword_256123838)
  {
    result = MEMORY[0x23493E300](&unk_233BD99F0, &type metadata for AppVersion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256123838);
  }
  return result;
}

uint64_t AppVersion.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  char v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123840);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233B6EC3C();
  sub_233BD8D68();
  if (!v2)
  {
    v14 = 0;
    v9 = sub_233BD8BB8();
    v13 = 1;
    v10 = sub_233BD8BB8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_233B6EDC8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return AppVersion.init(from:)(a1, a2);
}

uint64_t sub_233B6EDDC(_QWORD *a1)
{
  return AppVersion.encode(to:)(a1);
}

uint64_t AutomaticUpdate.appleItemID.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t AutomaticUpdate.alternativeDistributionPackage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AutomaticUpdate() + 20);
  v4 = sub_233BD851C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for AutomaticUpdate()
{
  uint64_t result;

  result = qword_2561238D0;
  if (!qword_2561238D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t AutomaticUpdate.account.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AutomaticUpdate() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AutomaticUpdate.installVerificationToken.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AutomaticUpdate() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AutomaticUpdate.appShareURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for AutomaticUpdate();
  return sub_233B71D78(v1 + *(int *)(v3 + 32), a1, &qword_256123848);
}

uint64_t AutomaticUpdate.appShareURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for AutomaticUpdate() + 32);
  return sub_233B6EF60(a1, v3);
}

uint64_t sub_233B6EF60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*AutomaticUpdate.appShareURL.modify())()
{
  type metadata accessor for AutomaticUpdate();
  return nullsub_1;
}

uint64_t AutomaticUpdate.init(appleItemID:alternativeDistributionPackage:account:installVerificationToken:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  void (*v21)(uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (int *)type metadata accessor for AutomaticUpdate();
  v14 = (uint64_t)&a7[v13[8]];
  v15 = sub_233BD851C();
  v16 = *(_QWORD *)(v15 - 8);
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
  v21(v14, 1, 1, v15);
  *(_QWORD *)a7 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(&a7[v13[5]], a2, v15);
  v17 = &a7[v13[6]];
  *(_QWORD *)v17 = a3;
  *((_QWORD *)v17 + 1) = a4;
  v18 = &a7[v13[7]];
  *(_QWORD *)v18 = a5;
  *((_QWORD *)v18 + 1) = a6;
  sub_233B71DBC(v14, &qword_256123848);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v21)(v14, 1, 1, v15);
}

uint64_t sub_233B6F0D0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_233B6F10C + 4 * byte_233BD95B0[a1]))(0x657449656C707061, 0xEB0000000044496DLL);
}

unint64_t sub_233B6F10C()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_233B6F12C()
{
  return 0x746E756F636361;
}

unint64_t sub_233B6F144()
{
  return 0xD000000000000018;
}

uint64_t sub_233B6F160()
{
  return 0x6572616853707061;
}

BOOL sub_233B6F180(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_233B6F194()
{
  unsigned __int8 *v0;

  return sub_233B6F0D0(*v0);
}

uint64_t sub_233B6F19C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233B70844(a1, a2);
  *a3 = result;
  return result;
}

void sub_233B6F1C0(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_233B6F1CC()
{
  sub_233B6F408();
  return sub_233BD8D8C();
}

uint64_t sub_233B6F1F4()
{
  sub_233B6F408();
  return sub_233BD8D98();
}

uint64_t AutomaticUpdate.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123850);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233B6F408();
  sub_233BD8D80();
  v13 = 0;
  sub_233BD8C48();
  if (!v1)
  {
    type metadata accessor for AutomaticUpdate();
    v12 = 1;
    sub_233BD851C();
    sub_233B6F860(&qword_256123860, MEMORY[0x24BDCDAE0]);
    sub_233BD8C30();
    v11 = 2;
    sub_233BD8C18();
    v10 = 3;
    sub_233BD8C18();
    v9 = 4;
    sub_233BD8C00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_233B6F408()
{
  unint64_t result;

  result = qword_256123858;
  if (!qword_256123858)
  {
    result = MEMORY[0x23493E300](&unk_233BD99A0, &type metadata for AutomaticUpdate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256123858);
  }
  return result;
}

uint64_t AutomaticUpdate.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  void (*v15)(void);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;

  v29 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
  MEMORY[0x24BDAC7A8]();
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_233BD851C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123868);
  v9 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8]();
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AutomaticUpdate();
  v35 = MEMORY[0x24BDAC7A8]();
  v13 = (uint64_t *)((char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = (uint64_t)v13 + *(int *)(v35 + 32);
  v30 = v6;
  v31 = v5;
  v15 = *(void (**)(void))(v6 + 56);
  v34 = v14;
  v15();
  v16 = a1[3];
  v33 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_233B6F408();
  v17 = (uint64_t)v36;
  sub_233BD8D68();
  if (v17)
  {
    v18 = v34;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    return sub_233B71DBC(v18, &qword_256123848);
  }
  else
  {
    v36 = v4;
    v41 = 0;
    v19 = (uint64_t)v13;
    *v13 = sub_233BD8BB8();
    v40 = 1;
    sub_233B6F860(&qword_256123870, MEMORY[0x24BDCDB10]);
    v20 = v31;
    sub_233BD8BA0();
    v21 = v35;
    (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v19 + *(int *)(v35 + 20), v8, v20);
    v39 = 2;
    v22 = sub_233BD8B88();
    v23 = (uint64_t *)(v19 + *(int *)(v21 + 24));
    *v23 = v22;
    v23[1] = v24;
    v38 = 3;
    v25 = sub_233BD8B88();
    v26 = (uint64_t *)(v19 + *(int *)(v21 + 28));
    *v26 = v25;
    v26[1] = v27;
    v37 = 4;
    sub_233BD8B70();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v32);
    sub_233B6EF60((uint64_t)v36, v34);
    sub_233B6F8A0(v19, v29);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    return sub_233B6F8E4(v19);
  }
}

uint64_t sub_233B6F860(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_233BD851C();
    result = MEMORY[0x23493E300](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_233B6F8A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AutomaticUpdate();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_233B6F8E4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AutomaticUpdate();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_233B6F920@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AutomaticUpdate.init(from:)(a1, a2);
}

uint64_t sub_233B6F934(_QWORD *a1)
{
  return AutomaticUpdate.encode(to:)(a1);
}

id MarketplaceExtension.configuration.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id result;

  v6 = type metadata accessor for _MarketplaceExtensionConfiguration.ExportedObject(0, a1, a2, a3);
  result = sub_233B70B00(v4, v6, v7, v8);
  *a4 = result;
  return result;
}

uint64_t sub_233B6F988(void *a1, uint64_t a2)
{
  id v4;

  v4 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_25613EF58);
  objc_msgSend(a1, sel_setExportedInterface_, v4);

  objc_msgSend(a1, sel_setExportedObject_, a2);
  objc_msgSend(a1, sel_resume);
  return 1;
}

uint64_t sub_233B6FA20(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  _QWORD *v4;

  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x58) + 16))(a1, a2, a3, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x50));
  a4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_233B6FA80(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, const void *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v17;

  v7 = sub_233BD8414();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8]();
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = _Block_copy(a5);
  sub_233BD8408();
  v12 = sub_233BD8804();
  v14 = v13;
  *(_QWORD *)(swift_allocObject() + 16) = v11;
  v15 = a1;
  sub_233B6FA20((uint64_t)v10, v12, v14, (void (*)(void))sub_233B72018);

  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_233B6FB88(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;

  if (a1)
    v3 = sub_233BD87C8();
  else
    v3 = 0;
  v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);

}

uint64_t sub_233B6FBE8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  _QWORD *v2;
  char v4;

  v4 = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v2) + 0x58) + 32))(a1, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v2) + 0x50));
  return a2(v4 & 1);
}

uint64_t sub_233B6FC44(void *a1, int a2, void *a3, void *aBlock)
{
  void *v6;
  id v7;
  id v8;

  v6 = _Block_copy(aBlock);
  *(_QWORD *)(swift_allocObject() + 16) = v6;
  v7 = a3;
  v8 = a1;
  sub_233B6FBE8((uint64_t)v7, (uint64_t (*)(_QWORD))sub_233B72004);

  return swift_release();
}

uint64_t sub_233B6FCC4(uint64_t a1, void (*a2)(uint64_t, unint64_t))
{
  _QWORD *v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD v8[2];
  uint64_t v9;
  _QWORD v10[2];

  v10[0] = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v2) + 0x58) + 24))(a1, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v2) + 0x50));
  v10[1] = v10;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123A88);
  v8[0] = sub_233B71E84();
  v8[1] = MEMORY[0x23493E300](MEMORY[0x24BEE4AA8], v9, v8);
  v4 = sub_233BD8648();
  v6 = v5;
  swift_bridgeObjectRelease();
  a2(v4, v6);
  return sub_233B71B8C(v4, v6);
}

uint64_t sub_233B6FDD0(void *a1, int a2, int a3, void *aBlock)
{
  void *v5;
  uint64_t v6;
  id v7;

  v5 = _Block_copy(aBlock);
  v6 = sub_233BD884C();
  *(_QWORD *)(swift_allocObject() + 16) = v5;
  v7 = a1;
  sub_233B6FCC4(v6, (void (*)(uint64_t, unint64_t))sub_233B71F9C);

  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_233B6FE60(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  uint64_t v15;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256123A58);
  MEMORY[0x24BDAC7A8]();
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_233BD88DC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = a1;
  v12[5] = a2;
  v12[6] = v4;
  v12[7] = a3;
  v12[8] = a4;
  sub_233B71CAC(a1, a2);
  v13 = v4;
  swift_retain();
  sub_233BD08AC((uint64_t)v10, (uint64_t)&unk_256123A68, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_233B6FF58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;

  v8[19] = a7;
  v8[20] = a8;
  v8[17] = a5;
  v8[18] = a6;
  v8[16] = a4;
  v9 = *MEMORY[0x24BEE4EA0];
  v8[21] = *a6;
  v8[22] = v9;
  v8[23] = type metadata accessor for MarketplaceKitError();
  v8[24] = swift_task_alloc();
  v8[25] = __swift_instantiateConcreteTypeFromMangledName(&qword_256123A70);
  v8[26] = swift_task_alloc();
  v8[27] = swift_task_alloc();
  v8[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233B70014()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  v1 = v0[16];
  v2 = v0[17];
  v0[6] = v0 + 4;
  v0[2] = v1;
  v0[3] = v2;
  v0[5] = v0 + 2;
  sub_233B71CAC(v1, v2);
  v0[7] = MEMORY[0x24BDCDDE8];
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123A78);
  v0[8] = v3;
  v0[9] = sub_233B71CF0();
  v0[11] = sub_233B71D34();
  v0[10] = MEMORY[0x23493E300](MEMORY[0x24BEE12D0], v3, v0 + 11);
  sub_233BD863C();
  v4 = v0[21] & v0[22];
  sub_233B71B8C(v0[2], v0[3]);
  v5 = v0[4];
  v0[29] = v5;
  v8 = v4 + 80;
  v7 = *(_QWORD *)(v4 + 80);
  v6 = *(_QWORD *)(v8 + 8);
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v6 + 40) + *(_QWORD *)(v6 + 40));
  v9 = (_QWORD *)swift_task_alloc();
  v0[30] = v9;
  *v9 = v0;
  v9[1] = sub_233B701AC;
  return v11(v5, v7, v6);
}

uint64_t sub_233B701AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 248) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v1)
    *(_QWORD *)(v4 + 256) = a1;
  return swift_task_switch();
}

uint64_t sub_233B70228()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, unint64_t);

  v1 = *(_QWORD **)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 224);
  *v1 = *(_QWORD *)(v0 + 256);
  swift_storeEnumTagMultiPayload();
  sub_233B71E3C((uint64_t)v1, v2);
  v3 = *(_QWORD *)(v0 + 248);
  v4 = *(_QWORD *)(v0 + 200);
  v5 = *(_QWORD *)(v0 + 208);
  sub_233B71D78(*(_QWORD *)(v0 + 224), v5, &qword_256123A70);
  *(_QWORD *)(v0 + 104) = v5;
  *(_QWORD *)(v0 + 112) = v4;
  *(_QWORD *)(v0 + 120) = MEMORY[0x23493E300](&protocol conformance descriptor for MarketplaceKitServiceResult<A>, v4);
  v6 = sub_233BD8648();
  if (v3)
  {
    sub_233B71DBC(*(_QWORD *)(v0 + 208), &qword_256123A70);
    return swift_unexpectedError();
  }
  else
  {
    v9 = v6;
    v10 = v7;
    v11 = *(_QWORD *)(v0 + 224);
    v12 = *(void (**)(uint64_t, unint64_t))(v0 + 152);
    sub_233B71DBC(*(_QWORD *)(v0 + 208), &qword_256123A70);
    v12(v9, v10);
    sub_233B71B8C(v9, v10);
    sub_233B71DBC(v11, &qword_256123A70);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_233B703A8()
{
  uint64_t v0;
  void *v1;
  id v2;
  char v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, unint64_t);

  v1 = *(void **)(v0 + 248);
  *(_QWORD *)(v0 + 96) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25424FDB0);
  v3 = swift_dynamicCast();
  v4 = *(void **)(v0 + 248);
  v5 = *(_QWORD *)(v0 + 224);
  if ((v3 & 1) != 0)
  {
    v6 = *(_QWORD *)(v0 + 192);

    sub_233B71DF8(v6, v5);
    swift_storeEnumTagMultiPayload();

  }
  else
  {

    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
  }
  v8 = *(_QWORD *)(v0 + 200);
  v7 = *(_QWORD *)(v0 + 208);
  sub_233B71D78(*(_QWORD *)(v0 + 224), v7, &qword_256123A70);
  *(_QWORD *)(v0 + 104) = v7;
  *(_QWORD *)(v0 + 112) = v8;
  *(_QWORD *)(v0 + 120) = MEMORY[0x23493E300](&protocol conformance descriptor for MarketplaceKitServiceResult<A>, v8);
  v9 = sub_233BD8648();
  v11 = v10;
  v12 = *(_QWORD *)(v0 + 224);
  v13 = *(void (**)(uint64_t, unint64_t))(v0 + 152);
  sub_233B71DBC(*(_QWORD *)(v0 + 208), &qword_256123A70);
  v13(v9, v11);
  sub_233B71B8C(v9, v11);
  sub_233B71DBC(v12, &qword_256123A70);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_233B705B0(void *a1, int a2, void *a3, void *aBlock)
{
  void *v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;

  v6 = _Block_copy(aBlock);
  v7 = a3;
  v12 = a1;
  v8 = sub_233BD8540();
  v10 = v9;

  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v6;
  sub_233B6FE60(v8, v10, (uint64_t)sub_233B71F9C, v11);
  swift_release();
  sub_233B71B8C(v8, v10);

}

void sub_233B70668()
{
  sub_233B71F70();
}

id sub_233B70684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for _MarketplaceExtensionConfiguration.ExportedObject(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x50), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x58), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

uint64_t sub_233B706D0(char *a1)
{
  return (*(uint64_t (**)(char *))(*(_QWORD *)(*(_QWORD *)((*MEMORY[0x24BEE4EA0] & *(_QWORD *)a1) + 0x50)
                                                       - 8)
                                           + 8))(&a1[*(_QWORD *)((*MEMORY[0x24BEE4EA0] & *(_QWORD *)a1) + 0x60)]);
}

uint64_t sub_233B706FC(void *a1)
{
  uint64_t *v1;

  sub_233B6F988(a1, *v1);
  return 1;
}

uint64_t sub_233B70718(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x657449656C707061 && a2 == 0xEB0000000044496DLL;
  if (v2 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726556656C707061 && a2 == 0xEE0044496E6F6973)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_233B70844(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x657449656C707061 && a2 == 0xEB0000000044496DLL;
  if (v2 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x8000000233BE4E00 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E756F636361 && a2 == 0xE700000000000000 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000233BE4E20 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6572616853707061 && a2 == 0xEB000000004C5255)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

id sub_233B70A80(uint64_t a1)
{
  char *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  objc_super v7;

  v2 = (_QWORD *)(*MEMORY[0x24BEE4EA0] & *(_QWORD *)v1);
  v3 = v2[10];
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(&v1[v2[12]], a1, v3);
  v5 = (objc_class *)type metadata accessor for _MarketplaceExtensionConfiguration.ExportedObject(0, v3, v2[11], v4);
  v7.receiver = v1;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_init);
}

id sub_233B70B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  id v6;

  v6 = objc_allocWithZone((Class)type metadata accessor for _MarketplaceExtensionConfiguration.ExportedObject(0, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), a4));
  return sub_233B70A80(a1);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for AppVersion(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AppVersion(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for AppVersion()
{
  return &type metadata for AppVersion;
}

uint64_t *initializeBufferWithCopyOfBuffer for AutomaticUpdate(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_233BD851C();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    v12(v8, v9, v10);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (uint64_t *)((char *)v4 + v13);
    v16 = (uint64_t *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = (uint64_t *)((char *)v4 + v14);
    v19 = (uint64_t *)((char *)a2 + v14);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = a3[8];
    v22 = (char *)v4 + v21;
    v23 = (char *)a2 + v21;
    v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v24(v23, 1, v10))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v12(v22, v23, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v22, 0, 1, v10);
    }
  }
  return v4;
}

uint64_t destroy for AutomaticUpdate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  void (*v9)(uint64_t, uint64_t);

  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_233BD851C();
  v6 = *(_QWORD *)(v5 - 8);
  v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v9(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = a1 + *(int *)(a2 + 32);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v7, v5);
  return result;
}

_QWORD *initializeWithCopy for AutomaticUpdate(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_233BD851C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v11(v7, v8, v9);
  v12 = a3[6];
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v12);
  v15 = (_QWORD *)((char *)a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (_QWORD *)((char *)a1 + v13);
  v18 = (_QWORD *)((char *)a2 + v13);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = a3[8];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v23(v22, 1, v9))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v11(v21, v22, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v21, 0, 1, v9);
  }
  return a1;
}

char *assignWithCopy for AutomaticUpdate(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  uint64_t v23;

  *(_QWORD *)a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_233BD851C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = (_QWORD *)((char *)a2 + v12);
  *(_QWORD *)v13 = *v14;
  *((_QWORD *)v13 + 1) = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[7];
  v16 = &a1[v15];
  v17 = (_QWORD *)((char *)a2 + v15);
  *(_QWORD *)v16 = *v17;
  *((_QWORD *)v16 + 1) = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[8];
  v19 = &a1[v18];
  v20 = (char *)a2 + v18;
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  LODWORD(v7) = v21(&a1[v18], 1, v9);
  v22 = v21(v20, 1, v9);
  if (!(_DWORD)v7)
  {
    if (!v22)
    {
      v11(v19, v20, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v19, v9);
    goto LABEL_6;
  }
  if (v22)
  {
LABEL_6:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v19, v20, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
  return a1;
}

_QWORD *initializeWithTake for AutomaticUpdate(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_233BD851C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  v12 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  v13 = a3[8];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v11(v14, v15, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  return a1;
}

char *assignWithTake for AutomaticUpdate(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  int v26;
  uint64_t v27;

  *(_QWORD *)a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_233BD851C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = (_QWORD *)((char *)a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *(_QWORD *)v13 = v16;
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = &a1[v17];
  v19 = (_QWORD *)((char *)a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *(_QWORD *)v18 = v21;
  *((_QWORD *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  v22 = a3[8];
  v23 = &a1[v22];
  v24 = (char *)a2 + v22;
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  LODWORD(v7) = v25(&a1[v22], 1, v9);
  v26 = v25(v24, 1, v9);
  if (!(_DWORD)v7)
  {
    if (!v26)
    {
      v11(v23, v24, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
    goto LABEL_6;
  }
  if (v26)
  {
LABEL_6:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v23, v24, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for AutomaticUpdate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233B712B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v6 = sub_233BD851C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
    v7 = *(_QWORD *)(v8 - 8);
    v9 = a3[8];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = *(_QWORD *)(a1 + a3[6] + 8);
  if (v10 >= 0xFFFFFFFF)
    LODWORD(v10) = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for AutomaticUpdate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_233B71368(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = sub_233BD851C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[5];
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[6] + 8) = (a2 - 1);
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
    v9 = *(_QWORD *)(v10 - 8);
    v11 = a4[8];
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

void sub_233B71410()
{
  unint64_t v0;
  unint64_t v1;

  sub_233BD851C();
  if (v0 <= 0x3F)
  {
    sub_233B714B0();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_233B714B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2561238E0)
  {
    sub_233BD851C();
    v0 = sub_233BD89C0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2561238E0);
  }
}

uint64_t dispatch thunk of MarketplaceExtension.additionalHeaders(for:account:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of MarketplaceExtension.availableAppVersions(forAppleItemIDs:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of MarketplaceExtension.requestFailed(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of MarketplaceExtension.automaticUpdates(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 40) + *(_QWORD *)(a3 + 40));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_233B71594;
  return v9(a1, a2, a3);
}

uint64_t sub_233B71594(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_233B715E8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for _MarketplaceExtensionConfiguration.ExportedObject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _MarketplaceExtensionConfiguration.ExportedObject);
}

void sub_233B71664(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for _MarketplaceExtensionConfiguration(255, *a1, a1[1], a4);
  JUMPOUT(0x23493E300);
}

uint64_t type metadata accessor for _MarketplaceExtensionConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _MarketplaceExtensionConfiguration);
}

uint64_t sub_233B71698()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t getEnumTagSinglePayload for AutomaticUpdate.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AutomaticUpdate.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_233B7177C + 4 * byte_233BD95BA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_233B717B0 + 4 * byte_233BD95B5[v4]))();
}

uint64_t sub_233B717B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233B717B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233B717C0);
  return result;
}

uint64_t sub_233B717CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233B717D4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_233B717D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233B717E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233B717EC(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_233B717F4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for AutomaticUpdate.CodingKeys()
{
  return &type metadata for AutomaticUpdate.CodingKeys;
}

uint64_t getEnumTagSinglePayload for AppVersion.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AppVersion.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_233B718E8 + 4 * byte_233BD95C4[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_233B7191C + 4 * byte_233BD95BF[v4]))();
}

uint64_t sub_233B7191C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233B71924(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233B7192CLL);
  return result;
}

uint64_t sub_233B71938(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233B71940);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_233B71944(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233B7194C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_233B71958(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for AppVersion.CodingKeys()
{
  return &type metadata for AppVersion.CodingKeys;
}

unint64_t sub_233B71978()
{
  unint64_t result;

  result = qword_256123A28;
  if (!qword_256123A28)
  {
    result = MEMORY[0x23493E300](&unk_233BD987C, &type metadata for AppVersion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256123A28);
  }
  return result;
}

unint64_t sub_233B719C0()
{
  unint64_t result;

  result = qword_256123A30;
  if (!qword_256123A30)
  {
    result = MEMORY[0x23493E300](&unk_233BD9934, &type metadata for AutomaticUpdate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256123A30);
  }
  return result;
}

uint64_t sub_233B71A04(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x23493E300](&unk_233BD995C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_233B71A34()
{
  unint64_t result;

  result = qword_256123A38;
  if (!qword_256123A38)
  {
    result = MEMORY[0x23493E300](&unk_233BD98A4, &type metadata for AutomaticUpdate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256123A38);
  }
  return result;
}

unint64_t sub_233B71A7C()
{
  unint64_t result;

  result = qword_256123A40;
  if (!qword_256123A40)
  {
    result = MEMORY[0x23493E300](&unk_233BD98CC, &type metadata for AutomaticUpdate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256123A40);
  }
  return result;
}

unint64_t sub_233B71AC4()
{
  unint64_t result;

  result = qword_256123A48;
  if (!qword_256123A48)
  {
    result = MEMORY[0x23493E300](&unk_233BD97EC, &type metadata for AppVersion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256123A48);
  }
  return result;
}

unint64_t sub_233B71B0C()
{
  unint64_t result;

  result = qword_256123A50;
  if (!qword_256123A50)
  {
    result = MEMORY[0x23493E300](&unk_233BD9814, &type metadata for AppVersion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256123A50);
  }
  return result;
}

uint64_t sub_233B71B50()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  sub_233B71B8C(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_233B71B8C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_233B71BD0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = (_QWORD *)v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_233B71C64;
  return sub_233B6FF58(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_233B71C64()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_233B71CAC(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

unint64_t sub_233B71CF0()
{
  unint64_t result;

  result = qword_25424FE98;
  if (!qword_25424FE98)
  {
    result = MEMORY[0x23493E300](MEMORY[0x24BDCDDC0], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_25424FE98);
  }
  return result;
}

unint64_t sub_233B71D34()
{
  unint64_t result;

  result = qword_256123A80;
  if (!qword_256123A80)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for AppVersion, &type metadata for AppVersion);
    atomic_store(result, (unint64_t *)&qword_256123A80);
  }
  return result;
}

uint64_t sub_233B71D78(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_233B71DBC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_233B71DF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MarketplaceKitError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_233B71E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123A70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_233B71E84()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_256123A90;
  if (!qword_256123A90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256123A78);
    v2 = sub_233B71F2C();
    result = MEMORY[0x23493E300](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256123A90);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x23493E2F4](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_233B71F2C()
{
  unint64_t result;

  result = qword_256123A98;
  if (!qword_256123A98)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for AppVersion, &type metadata for AppVersion);
    atomic_store(result, (unint64_t *)&qword_256123A98);
  }
  return result;
}

void sub_233B71F70()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_233B71FA0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (id)sub_233BD8534();
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);

}

uint64_t sub_233B71FE0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_233B72004(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 16) + 16))(*(_QWORD *)(v1 + 16), a1 & 1);
}

void sub_233B72018(uint64_t a1)
{
  uint64_t v1;

  sub_233B6FB88(a1, *(_QWORD *)(v1 + 16));
}

uint64_t InstallRequirements.minimumSystemVersion.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InstallRequirements.minimumSystemVersion.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*InstallRequirements.minimumSystemVersion.modify())()
{
  return nullsub_1;
}

uint64_t InstallRequirements.requiredDeviceCapabilities.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t InstallRequirements.requiredDeviceCapabilities.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*InstallRequirements.requiredDeviceCapabilities.modify())()
{
  return nullsub_1;
}

uint64_t InstallRequirements.ageRatingRank.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t InstallRequirements.ageRatingRank.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = result;
  *(_BYTE *)(v2 + 32) = a2 & 1;
  return result;
}

uint64_t (*InstallRequirements.ageRatingRank.modify())()
{
  return nullsub_1;
}

uint64_t InstallRequirements.expectedInstallSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t InstallRequirements.expectedInstallSize.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = result;
  *(_BYTE *)(v2 + 48) = a2 & 1;
  return result;
}

uint64_t (*InstallRequirements.expectedInstallSize.modify())()
{
  return nullsub_1;
}

double InstallRequirements.init()@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 32) = 1;
  *(_QWORD *)(a1 + 40) = 0;
  *(_BYTE *)(a1 + 48) = 1;
  return result;
}

Swift::Bool __swiftcall InstallRequirements.satisfiedByDevice()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  char v4;
  uint64_t v5;
  int v6;
  int v7;
  char v9;
  __int128 v10;
  _QWORD v11[2];
  __int128 v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t *v16;

  v2 = *v0;
  v1 = v0[1];
  v3 = *((_OWORD *)v0 + 1);
  v4 = *((_BYTE *)v0 + 32);
  v5 = v0[5];
  v6 = *((unsigned __int8 *)v0 + 48);
  if (!v1)
  {
    v7 = (_QWORD)v3 ? 0 : *((unsigned __int8 *)v0 + 32);
    if ((v7 & v6 & 1) != 0)
      return 1;
  }
  if (qword_25424FEB8 != -1)
  {
    v10 = *((_OWORD *)v0 + 1);
    swift_once();
    v3 = v10;
  }
  v11[0] = v2;
  v11[1] = v1;
  v12 = v3;
  v13 = v4;
  v14 = v5;
  v15 = v6;
  v16 = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = sub_233B7233C(&v16, (void (*)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))sub_233B7227C, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v9 == 2)
    return 0;
  else
    return v9 & 1;
}

void sub_233B7227C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  void *v9;
  _QWORD v10[6];

  v8 = (void *)sub_233BD8534();
  v10[4] = a4;
  v10[5] = a5;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_233BC37F0;
  v10[3] = &block_descriptor_13;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_checkDeviceCabilityForADPInstallation_reply_, v8, v9);
  _Block_release(v9);

}

uint64_t sub_233B7233C(uint64_t **a1, void (*a2)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t);
  uint64_t v47;
  uint64_t **v48;
  uint64_t v49;
  unint64_t v50;
  ValueMetadata *v51;
  uint64_t aBlock;
  uint64_t v53;
  __int128 v54;
  uint64_t (*v55)(void *);
  uint64_t v56;
  char v57;
  _BYTE v58[40];
  uint64_t *p_aBlock;

  v48 = a1;
  v45 = a3;
  v46 = a2;
  v47 = *v3;
  v4 = type metadata accessor for MarketplaceKitError();
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (char *)&v40 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123B20);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (unsigned __int8 *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256123B28);
  swift_allocObject();
  v16 = sub_233BD8630();
  v17 = (void *)sub_233BD8654();
  v55 = sub_233B744B8;
  v56 = v16;
  aBlock = MEMORY[0x24BDAC760];
  v53 = 1107296256;
  *(_QWORD *)&v54 = sub_233B7BCE4;
  *((_QWORD *)&v54 + 1) = &block_descriptor_8;
  v18 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v19 = objc_msgSend(v17, sel_synchronousRemoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);

  sub_233BD89E4();
  swift_unknownObjectRelease();
  sub_233B7410C((uint64_t)v58, (uint64_t)&aBlock);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25424FEE0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v24 = sub_233BD860C();
    sub_233B74300(&qword_256123AF8, (uint64_t (*)(uint64_t))MEMORY[0x24BDDAD00], MEMORY[0x24BDDAD10]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v31, *MEMORY[0x24BDDACF8], v24);
    swift_willThrow();
    swift_release();
LABEL_5:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
    return v24;
  }
  v20 = v47;
  v44 = v12;
  v41 = v11;
  v42 = v4;
  v43 = v8;
  v21 = p_aBlock;
  sub_233B744D8();
  v22 = sub_233B7451C();
  v23 = *v48;
  v24 = (*v48)[1];
  v25 = *((_BYTE *)*v48 + 32);
  v26 = (*v48)[5];
  v27 = *((_BYTE *)*v48 + 48);
  aBlock = **v48;
  v53 = v24;
  v54 = *((_OWORD *)v23 + 1);
  LOBYTE(v55) = v25;
  v56 = v26;
  v57 = v27;
  p_aBlock = &aBlock;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v50 = v22;
  v51 = &type metadata for InstallRequirements;
  v28 = v49;
  v29 = sub_233BD8648();
  if (!v28)
  {
    v33 = v29;
    v34 = v30;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v35 = swift_allocObject();
    *(_QWORD *)(v35 + 16) = v16;
    *(_QWORD *)(v35 + 24) = v20;
    swift_retain();
    v46(v21, v33, v34, sub_233B74560, v35);
    swift_release();
    sub_233BD8618();
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v24 = *v15;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
      swift_release();
      sub_233B71B8C(v33, v34);
      swift_unknownObjectRelease();
      return v24;
    }
    v36 = (uint64_t)v41;
    sub_233B71DF8((uint64_t)v15, (uint64_t)v41);
    v24 = sub_233B74300((unint64_t *)&qword_256123B10, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    swift_willThrowTypedImpl();
    v37 = v36;
    v38 = (uint64_t)v43;
    sub_233B71DF8(v37, (uint64_t)v43);
    swift_allocError();
    sub_233B71DF8(v38, v39);
    sub_233B71B8C(v33, v34);
    swift_release();
    swift_unknownObjectRelease();
    goto LABEL_5;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_233B727E4@<X0>(uint64_t **a1@<X0>, void (*a2)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t)@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, void *);
  void *v26;
  uint64_t (*v27)(void *);
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  _OWORD *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  _OWORD *v49;
  void (*v50)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t **v53;
  uint64_t v54;
  unint64_t v55;
  ValueMetadata *v56;
  uint64_t aBlock;
  uint64_t v58;
  void (*v59)(uint64_t, void *);
  void *v60;
  uint64_t (*v61)(void *);
  unint64_t v62;
  char v63;
  _BYTE v64[40];
  uint64_t *p_aBlock;

  v53 = a1;
  v49 = a4;
  v50 = a2;
  v51 = *v4;
  v52 = a3;
  v5 = type metadata accessor for MarketplaceKitError();
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)&v45 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(qword_25424FFB0);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25424FDB8);
  swift_allocObject();
  v17 = sub_233BD8630();
  v18 = (void *)sub_233BD8654();
  v61 = sub_233B74340;
  v62 = v17;
  aBlock = MEMORY[0x24BDAC760];
  v58 = 1107296256;
  v59 = sub_233B7BCE4;
  v60 = &block_descriptor_3;
  v19 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v20 = objc_msgSend(v18, sel_synchronousRemoteObjectProxyWithErrorHandler_, v19);
  _Block_release(v19);

  sub_233BD89E4();
  swift_unknownObjectRelease();
  sub_233B7410C((uint64_t)v64, (uint64_t)&aBlock);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25424FEE0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v34 = sub_233BD860C();
    sub_233B74300(&qword_256123AF8, (uint64_t (*)(uint64_t))MEMORY[0x24BDDAD00], MEMORY[0x24BDDAD10]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v35, *MEMORY[0x24BDDACF8], v34);
    swift_willThrow();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
  }
  v48 = v13;
  v21 = v51;
  v46 = v12;
  v45 = v5;
  v47 = v9;
  v22 = p_aBlock;
  sub_233B74360();
  v23 = sub_233B743A4();
  v24 = (*v53)[1];
  v25 = (void (*)(uint64_t, void *))(*v53)[2];
  v26 = (void *)(*v53)[3];
  v27 = (uint64_t (*)(void *))(*v53)[4];
  v28 = (*v53)[5];
  v29 = *((_BYTE *)*v53 + 48);
  aBlock = **v53;
  v58 = v24;
  v59 = v25;
  v60 = v26;
  v61 = v27;
  v62 = v28;
  v63 = v29;
  p_aBlock = &aBlock;
  sub_233B743E8(aBlock, v24, (uint64_t)v25, (uint64_t)v26, (uint64_t)v27, v28, v29);
  v55 = v23;
  v56 = &type metadata for FetchPrivateDataRequest;
  v30 = v54;
  v31 = sub_233BD8648();
  if (v30)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
    swift_unknownObjectRelease();
    swift_release();
    return sub_233B7443C(aBlock, v58, (uint64_t)v59, (uint64_t)v60, (uint64_t)v61, v62, v63);
  }
  v36 = v31;
  v37 = v32;
  sub_233B7443C(aBlock, v58, (uint64_t)v59, (uint64_t)v60, (uint64_t)v61, v62, v63);
  v38 = swift_allocObject();
  *(_QWORD *)(v38 + 16) = v17;
  *(_QWORD *)(v38 + 24) = v21;
  swift_retain();
  v50(v22, v36, v37, sub_233B74490, v38);
  swift_release();
  sub_233BD8618();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v39 = (uint64_t)v46;
    sub_233B71DF8((uint64_t)v16, (uint64_t)v46);
    sub_233B74300((unint64_t *)&qword_256123B10, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    swift_willThrowTypedImpl();
    v40 = v39;
    v41 = (uint64_t)v47;
    sub_233B71DF8(v40, (uint64_t)v47);
    swift_allocError();
    sub_233B71DF8(v41, v42);
    sub_233B71B8C(v36, v37);
    swift_release();
    swift_unknownObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
  }
  v43 = v16[16];
  v44 = v49;
  *v49 = *(_OWORD *)v16;
  *((_BYTE *)v44 + 16) = v43;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
  swift_release();
  sub_233B71B8C(v36, v37);
  return swift_unknownObjectRelease();
}

unint64_t sub_233B72C78(uint64_t **a1, void (*a2)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  void (*v25)(uint64_t, void *);
  void *v26;
  uint64_t (*v27)(void *);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[2];
  char *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t **v49;
  uint64_t v50;
  unint64_t v51;
  ValueMetadata *v52;
  uint64_t aBlock;
  uint64_t v54;
  void (*v55)(uint64_t, void *);
  void *v56;
  uint64_t (*v57)(void *);
  uint64_t v58;
  char v59;
  _BYTE v60[40];
  uint64_t *p_aBlock;

  v49 = a1;
  v46 = a2;
  v47 = *v3;
  v48 = a3;
  v4 = type metadata accessor for MarketplaceKitError();
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v8 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (char *)v42 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123AE8);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (unsigned __int8 *)v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256123AF0);
  swift_allocObject();
  v16 = sub_233BD8630();
  v17 = (void *)sub_233BD8654();
  v57 = sub_233B740D4;
  v58 = v16;
  aBlock = MEMORY[0x24BDAC760];
  v54 = 1107296256;
  v55 = sub_233B7BCE4;
  v56 = &block_descriptor;
  v18 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v19 = objc_msgSend(v17, sel_synchronousRemoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);

  sub_233BD89E4();
  swift_unknownObjectRelease();
  sub_233B7410C((uint64_t)v60, (uint64_t)&aBlock);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25424FEE0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v22 = sub_233BD860C();
    sub_233B74300(&qword_256123AF8, (uint64_t (*)(uint64_t))MEMORY[0x24BDDAD00], MEMORY[0x24BDDAD10]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, unint64_t))(*(_QWORD *)(v22 - 8) + 104))(v32, *MEMORY[0x24BDDACF8], v22);
    swift_willThrow();
    swift_release();
LABEL_5:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
    return v22;
  }
  v45 = v12;
  v20 = v47;
  v43 = v11;
  v42[1] = v4;
  v44 = v8;
  v21 = p_aBlock;
  sub_233B74148();
  v22 = sub_233B7418C();
  v23 = *v49;
  v24 = (*v49)[1];
  v25 = (void (*)(uint64_t, void *))(*v49)[2];
  v26 = (void *)(*v49)[3];
  v27 = (uint64_t (*)(void *))(*v49)[4];
  v28 = (*v49)[5];
  aBlock = **v49;
  v54 = v24;
  v55 = v25;
  v56 = v26;
  v57 = v27;
  v58 = v28;
  v59 = *((_BYTE *)v23 + 48);
  p_aBlock = &aBlock;
  sub_233B741D0(aBlock, v24, (uint64_t)v25, (uint64_t)v26, (uint64_t)v27, v28, v59);
  v51 = v22;
  v52 = &type metadata for SetPrivateDataRequest;
  v29 = v50;
  v30 = sub_233BD8648();
  if (!v29)
  {
    v34 = v30;
    v35 = v31;
    sub_233B74238(aBlock, v54, (uint64_t)v55, (uint64_t)v56, (uint64_t)v57, v58, v59);
    v36 = swift_allocObject();
    *(_QWORD *)(v36 + 16) = v16;
    *(_QWORD *)(v36 + 24) = v20;
    swift_retain();
    v37 = v35;
    v46(v21, v34, v35, sub_233B742D8, v36);
    swift_release();
    sub_233BD8618();
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v22 = *v15;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
      swift_release();
      sub_233B71B8C(v34, v37);
      swift_unknownObjectRelease();
      return v22;
    }
    v38 = (uint64_t)v43;
    sub_233B71DF8((uint64_t)v15, (uint64_t)v43);
    v22 = sub_233B74300((unint64_t *)&qword_256123B10, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    swift_willThrowTypedImpl();
    v39 = v38;
    v40 = (uint64_t)v44;
    sub_233B71DF8(v39, (uint64_t)v44);
    swift_allocError();
    sub_233B71DF8(v40, v41);
    sub_233B71B8C(v34, v37);
    swift_release();
    swift_unknownObjectRelease();
    goto LABEL_5;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
  swift_unknownObjectRelease();
  swift_release();
  sub_233B74238(aBlock, v54, (uint64_t)v55, (uint64_t)v56, (uint64_t)v57, v58, v59);
  return v22;
}

uint64_t sub_233B73124(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_233B73160 + 4 * byte_233BD9A50[a1]))(0xD000000000000014, 0x8000000233BE4F80);
}

uint64_t sub_233B73160()
{
  uint64_t v0;

  return v0 + 7;
}

uint64_t sub_233B73178()
{
  return 0x6E69746152656761;
}

unint64_t sub_233B7319C()
{
  return 0xD000000000000013;
}

uint64_t sub_233B731B8()
{
  unsigned __int8 *v0;

  return sub_233B73124(*v0);
}

uint64_t sub_233B731C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233B73F08(a1, a2);
  *a3 = result;
  return result;
}

void sub_233B731E4(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_233B731F0()
{
  sub_233B736DC();
  return sub_233BD8D8C();
}

uint64_t sub_233B73218()
{
  sub_233B736DC();
  return sub_233BD8D98();
}

uint64_t InstallRequirements.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _DWORD v11[2];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  char v18;
  char v19;
  char v20;
  char v21;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123AA0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 16);
  v13 = *(_QWORD *)(v1 + 24);
  v14 = v8;
  v17 = *(unsigned __int8 *)(v1 + 32);
  v12 = *(_QWORD *)(v1 + 40);
  v11[1] = *(unsigned __int8 *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233B736DC();
  sub_233BD8D80();
  v21 = 0;
  v9 = v15;
  sub_233BD8BE8();
  if (!v9)
  {
    v16 = v14;
    v20 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256123AB0);
    sub_233B73720(&qword_256123AB8, MEMORY[0x24BEE0D08], MEMORY[0x24BEE1700]);
    sub_233BD8C00();
    v19 = 2;
    sub_233BD8BF4();
    v18 = 3;
    sub_233BD8C0C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t InstallRequirements.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  char *v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  char v27;
  char v28;
  char v29;
  char v30;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123AC0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233B736DC();
  sub_233BD8D68();
  if (!v2)
  {
    v30 = 0;
    v11 = sub_233BD8B58();
    v13 = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256123AB0);
    v29 = 1;
    sub_233B73720(&qword_256123AC8, MEMORY[0x24BEE0D38], MEMORY[0x24BEE1720]);
    swift_bridgeObjectRetain();
    sub_233BD8B70();
    v24 = v11;
    v14 = v25;
    v28 = 2;
    swift_bridgeObjectRetain();
    v15 = sub_233BD8B64();
    v26 = v16;
    v23 = v15;
    v27 = 3;
    v17 = sub_233BD8B7C();
    v18 = v9;
    v20 = v19;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v18, v5);
    *(_QWORD *)a2 = v24;
    *(_QWORD *)(a2 + 8) = v13;
    v21 = v23;
    *(_QWORD *)(a2 + 16) = v14;
    *(_QWORD *)(a2 + 24) = v21;
    *(_BYTE *)(a2 + 32) = v26 & 1;
    *(_QWORD *)(a2 + 40) = v17;
    *(_BYTE *)(a2 + 48) = v20 & 1;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_233B736B4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return InstallRequirements.init(from:)(a1, a2);
}

uint64_t sub_233B736C8(_QWORD *a1)
{
  return InstallRequirements.encode(to:)(a1);
}

unint64_t sub_233B736DC()
{
  unint64_t result;

  result = qword_256123AA8;
  if (!qword_256123AA8)
  {
    result = MEMORY[0x23493E300](&unk_233BD9BB8, &type metadata for InstallRequirements.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256123AA8);
  }
  return result;
}

uint64_t sub_233B73720(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256123AB0);
    v8 = a2;
    result = MEMORY[0x23493E300](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for InstallRequirements(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for InstallRequirements()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InstallRequirements(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for InstallRequirements(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v5;
  return a1;
}

uint64_t assignWithTake for InstallRequirements(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for InstallRequirements(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for InstallRequirements(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for InstallRequirements()
{
  return &type metadata for InstallRequirements;
}

uint64_t getEnumTagSinglePayload for InstallRequirements.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for InstallRequirements.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_233B73AC0 + 4 * byte_233BD9A59[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_233B73AF4 + 4 * byte_233BD9A54[v4]))();
}

uint64_t sub_233B73AF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233B73AFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233B73B04);
  return result;
}

uint64_t sub_233B73B10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233B73B18);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_233B73B1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233B73B24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InstallRequirements.CodingKeys()
{
  return &type metadata for InstallRequirements.CodingKeys;
}

unint64_t sub_233B73B44()
{
  unint64_t result;

  result = qword_256123AD0;
  if (!qword_256123AD0)
  {
    result = MEMORY[0x23493E300](&unk_233BD9B90, &type metadata for InstallRequirements.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256123AD0);
  }
  return result;
}

unint64_t sub_233B73B8C()
{
  unint64_t result;

  result = qword_256123AD8;
  if (!qword_256123AD8)
  {
    result = MEMORY[0x23493E300](&unk_233BD9B00, &type metadata for InstallRequirements.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256123AD8);
  }
  return result;
}

unint64_t sub_233B73BD4()
{
  unint64_t result;

  result = qword_256123AE0;
  if (!qword_256123AE0)
  {
    result = MEMORY[0x23493E300](&unk_233BD9B28, &type metadata for InstallRequirements.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256123AE0);
  }
  return result;
}

uint64_t sub_233B73C18(void *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;

  v3 = a3;
  v29 = __swift_instantiateConcreteTypeFromMangledName(a3);
  MEMORY[0x24BDAC7A8]();
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_233BD8780();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8]();
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_233BD8738();
  v12 = a1;
  v13 = a1;
  v14 = sub_233BD8768();
  v15 = sub_233BD896C();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v28 = v3;
    v17 = (uint8_t *)v16;
    v18 = swift_slowAlloc();
    v27 = a2;
    v19 = (_QWORD *)v18;
    v26 = v9;
    *(_DWORD *)v17 = 138543362;
    v25 = v17 + 4;
    v20 = a1;
    v21 = v8;
    v22 = _swift_stdlib_bridgeErrorToNSError();
    v30 = v22;
    v9 = v26;
    sub_233BD89CC();
    *v19 = v22;
    v8 = v21;

    _os_log_impl(&dword_233B6C000, v14, v15, "Error fetching synchronous remote object proxy: %{public}@", v17, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256123B18);
    swift_arrayDestroy();
    MEMORY[0x23493E3B4](v19, -1, -1);
    v23 = v17;
    v3 = v28;
    MEMORY[0x23493E3B4](v23, -1, -1);
  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  type metadata accessor for MarketplaceKitError();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_233BD8624();
  return sub_233B71DBC((uint64_t)v7, v3);
}

uint64_t sub_233B73E70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t, uint64_t))
{
  uint64_t v10;
  char *v11;
  uint64_t v13;

  __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x24BDAC7A8]();
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  a6(a1, a2);
  sub_233BD8624();
  return sub_233B71DBC((uint64_t)v11, a5);
}

uint64_t sub_233B73F08(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000014 && a2 == 0x8000000233BE4F80 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000233BE4FA0 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E69746152656761 && a2 == 0xED00006B6E615267 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000233BE4FC0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_233B740D4(void *a1)
{
  uint64_t v1;

  return sub_233B73C18(a1, v1, &qword_256123AE8);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_233B7410C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_233B74148()
{
  unint64_t result;

  result = qword_256123B00;
  if (!qword_256123B00)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for SetPrivateDataRequest, &type metadata for SetPrivateDataRequest);
    atomic_store(result, (unint64_t *)&qword_256123B00);
  }
  return result;
}

unint64_t sub_233B7418C()
{
  unint64_t result;

  result = qword_256123B08;
  if (!qword_256123B08)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for SetPrivateDataRequest, &type metadata for SetPrivateDataRequest);
    atomic_store(result, (unint64_t *)&qword_256123B08);
  }
  return result;
}

uint64_t sub_233B741D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t result;

  switch(a7)
  {
    case 0:
      swift_bridgeObjectRetain();
      goto LABEL_3;
    case 1:
    case 2:
    case 3:
      goto LABEL_4;
    case 4:
LABEL_3:
      swift_bridgeObjectRetain();
LABEL_4:
      result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_233B74238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t result;

  switch(a7)
  {
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_4;
    case 1:
    case 2:
    case 3:
      goto LABEL_4;
    case 4:
      swift_bridgeObjectRelease();
LABEL_4:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_233B742B4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_233B742D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_233B73E70(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), &qword_256123AE8, (void (*)(uint64_t, uint64_t))sub_233B7C724);
}

uint64_t sub_233B74300(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x23493E300](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_233B74340(void *a1)
{
  uint64_t v1;

  return sub_233B73C18(a1, v1, qword_25424FFB0);
}

unint64_t sub_233B74360()
{
  unint64_t result;

  result = qword_25424FED0;
  if (!qword_25424FED0)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for FetchPrivateDataRequest, &type metadata for FetchPrivateDataRequest);
    atomic_store(result, (unint64_t *)&qword_25424FED0);
  }
  return result;
}

unint64_t sub_233B743A4()
{
  unint64_t result;

  result = qword_25424FEC8;
  if (!qword_25424FEC8)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for FetchPrivateDataRequest, &type metadata for FetchPrivateDataRequest);
    atomic_store(result, (unint64_t *)&qword_25424FEC8);
  }
  return result;
}

uint64_t sub_233B743E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, char a7)
{
  int v7;
  uint64_t result;

  if ((a7 & 1) != 0)
    v7 = 4;
  else
    v7 = 0;
  switch((a6 >> 60) & 3 | v7)
  {
    case 0uLL:
    case 1uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      result = swift_bridgeObjectRetain();
      break;
    case 2uLL:
      result = sub_233B71CAC(a5, a6 & 0xCFFFFFFFFFFFFFFFLL);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_233B7443C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, char a7)
{
  int v7;
  uint64_t result;

  if ((a7 & 1) != 0)
    v7 = 4;
  else
    v7 = 0;
  switch((a6 >> 60) & 3 | v7)
  {
    case 0uLL:
    case 1uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      result = swift_bridgeObjectRelease();
      break;
    case 2uLL:
      result = sub_233B71B8C(a5, a6 & 0xCFFFFFFFFFFFFFFFLL);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_233B74490(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_233B73E70(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), qword_25424FFB0, (void (*)(uint64_t, uint64_t))sub_233B7C2DC);
}

uint64_t sub_233B744B8(void *a1)
{
  uint64_t v1;

  return sub_233B73C18(a1, v1, &qword_256123B20);
}

unint64_t sub_233B744D8()
{
  unint64_t result;

  result = qword_256123B30;
  if (!qword_256123B30)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for InstallRequirements, &type metadata for InstallRequirements);
    atomic_store(result, (unint64_t *)&qword_256123B30);
  }
  return result;
}

unint64_t sub_233B7451C()
{
  unint64_t result;

  result = qword_256123B38;
  if (!qword_256123B38)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for InstallRequirements, &type metadata for InstallRequirements);
    atomic_store(result, (unint64_t *)&qword_256123B38);
  }
  return result;
}

uint64_t sub_233B74560(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_233B73E70(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), &qword_256123B20, (void (*)(uint64_t, uint64_t))sub_233B7BE9C);
}

ValueMetadata *type metadata accessor for MarketplaceSceneConnectionOptionDefinition()
{
  return &type metadata for MarketplaceSceneConnectionOptionDefinition;
}

uint64_t LocalizedStringsRequest.LocalizedString.key.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LocalizedStringsRequest.LocalizedString.replacementTokens.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LocalizedStringsRequest.LocalizedString.init(key:replacementTokens:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t sub_233B745F8()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000011;
  else
    return 7955819;
}

uint64_t sub_233B74630@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233B7F914(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233B74654()
{
  sub_233B74810();
  return sub_233BD8D8C();
}

uint64_t sub_233B7467C()
{
  sub_233B74810();
  return sub_233BD8D98();
}

uint64_t LocalizedStringsRequest.LocalizedString.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123B40);
  v11 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233B74810();
  sub_233BD8D80();
  v14 = 0;
  sub_233BD8C18();
  if (!v2)
  {
    v12 = v10;
    v13 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256123B50);
    sub_233B74A34(&qword_256123B58, MEMORY[0x24BEE0D08], MEMORY[0x24BEE04C0]);
    sub_233BD8C30();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v7, v4);
}

unint64_t sub_233B74810()
{
  unint64_t result;

  result = qword_256123B48;
  if (!qword_256123B48)
  {
    result = MEMORY[0x23493E300](&unk_233BDA08C, &type metadata for LocalizedStringsRequest.LocalizedString.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256123B48);
  }
  return result;
}

uint64_t LocalizedStringsRequest.LocalizedString.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];
  char v16;
  char v17;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123B60);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233B74810();
  sub_233BD8D68();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v17 = 0;
  v10 = sub_233BD8B88();
  v12 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256123B50);
  v16 = 1;
  sub_233B74A34(&qword_256123B68, MEMORY[0x24BEE0D38], MEMORY[0x24BEE04E0]);
  swift_bridgeObjectRetain();
  sub_233BD8BA0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v13 = v15[1];
  *a2 = v10;
  a2[1] = v12;
  a2[2] = v13;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_233B74A34(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  _QWORD v8[2];

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256123B50);
    v8[0] = a2;
    v8[1] = a2;
    result = MEMORY[0x23493E300](a3, v7, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_233B74A94@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return LocalizedStringsRequest.LocalizedString.init(from:)(a1, a2);
}

uint64_t sub_233B74AA8(_QWORD *a1)
{
  return LocalizedStringsRequest.LocalizedString.encode(to:)(a1);
}

uint64_t LocalizedStringsRequest.strings.getter()
{
  return swift_bridgeObjectRetain();
}

void __swiftcall LocalizedStringsRequest.init(strings:)(Swift::OpaquePointer strings)
{
  Swift::OpaquePointer *v1;

  v1->_rawValue = strings._rawValue;
}

uint64_t LocalizedStringsRequest.run()(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 112) = v3;
  return swift_task_switch();
}

uint64_t sub_233B74AE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  char *v5;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = qword_25424FEB8;
  swift_bridgeObjectRetain();
  if (v2 != -1)
    swift_once();
  *(_QWORD *)(v0 + 16) = v1;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_QWORD *)(v0 + 56) = 0x1000000000000000;
  *(_BYTE *)(v0 + 64) = 1;
  *(_QWORD *)(v0 + 96) = v0 + 16;
  sub_233B743E8(v1, 0, 0, 0, 0, 0x1000000000000000uLL, 1);
  v5 = (char *)&dword_256123B78 + dword_256123B78;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v3;
  *v3 = v0;
  v3[1] = sub_233B74BF0;
  return ((uint64_t (*)(uint64_t, uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v5)(v0 + 72, v0 + 96, sub_233B9EFE0, 0);
}

uint64_t sub_233B74BF0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_233B7443C(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_BYTE *)(v2 + 64));
  return swift_task_switch();
}

uint64_t sub_233B74C68()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(unsigned __int8 *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 112);
  if (v2 == 8)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 80);
    v5 = *(_QWORD *)(v3 + 16);
    v6 = MEMORY[0x24BEE4AF8];
    if (v5)
    {
      v18 = *(_QWORD *)(v0 + 80);
      v19 = *(_BYTE *)(v0 + 88);
      v20 = *(_QWORD *)(v0 + 72);
      v21 = MEMORY[0x24BEE4AF8];
      swift_bridgeObjectRetain();
      sub_233B7EE24(0, v5, 0);
      v6 = v21;
      v7 = *(_QWORD *)(v21 + 16);
      v8 = 32 * v7 + 32;
      v9 = (uint64_t *)(v3 + 40);
      do
      {
        v10 = *(v9 - 1);
        v11 = *v9;
        v12 = v7 + 1;
        v13 = *(_QWORD *)(v21 + 24);
        swift_bridgeObjectRetain_n();
        if (v7 >= v13 >> 1)
          sub_233B7EE24(v13 > 1, v12, 1);
        *(_QWORD *)(v21 + 16) = v12;
        v14 = (_QWORD *)(v21 + v8);
        *v14 = v10;
        v14[1] = v11;
        v8 += 32;
        v9 += 3;
        ++v7;
        v14[2] = v10;
        v14[3] = v11;
        --v5;
      }
      while (v5);
      swift_bridgeObjectRelease();
      v1 = v20;
      LOBYTE(v2) = v19;
      v4 = v18;
    }
    if (*(_QWORD *)(v6 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256123B80);
      v15 = sub_233BD8B1C();
    }
    else
    {
      v15 = MEMORY[0x24BEE4B00];
    }
    v16 = *(_QWORD *)(v0 + 128);
    v22 = v15;
    sub_233B7EAE0(v6, 1, (void (*)(uint64_t *__return_ptr, id *, _QWORD *))sub_233B74E94);
    if (v16)
      return swift_release();
    swift_bridgeObjectRelease();
    sub_233B7EE40(v1, v4, v2);
    v1 = v22;
  }
  **(_QWORD **)(v0 + 104) = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233B74E48()
{
  uint64_t v0;

  sub_233B7443C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233B74E94@<X0>(_QWORD *a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_233B74EB0()
{
  return 1;
}

uint64_t sub_233B74EBC()
{
  return sub_233BD8D08();
}

uint64_t sub_233B74EE4()
{
  return 0x73676E69727473;
}

uint64_t sub_233B74EFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x73676E69727473 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_233BD8C6C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_233B74F90(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_233B74F9C()
{
  sub_233B7EE7C();
  return sub_233BD8D8C();
}

uint64_t sub_233B74FC4()
{
  sub_233B7EE7C();
  return sub_233BD8D98();
}

uint64_t LocalizedStringsRequest.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123B88);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233B7EE7C();
  sub_233BD8D80();
  v10[1] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256123B98);
  sub_233B7EF04(&qword_256123BA0, (uint64_t (*)(void))sub_233B7EEC0, MEMORY[0x24BEE12A0]);
  sub_233BD8C30();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t LocalizedStringsRequest.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123BB0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233B7EE7C();
  sub_233BD8D68();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256123B98);
    sub_233B7EF04(&qword_256123BB8, (uint64_t (*)(void))sub_233B7EF6C, MEMORY[0x24BEE12D0]);
    sub_233BD8BA0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_233B7524C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return LocalizedStringsRequest.init(from:)(a1, a2);
}

uint64_t sub_233B75260(_QWORD *a1)
{
  return LocalizedStringsRequest.encode(to:)(a1);
}

uint64_t sub_233B75274()
{
  sub_233BD8CFC();
  sub_233BD8D08();
  return sub_233BD8D38();
}

uint64_t sub_233B752B4()
{
  sub_233BD8CFC();
  sub_233BD8D08();
  return sub_233BD8D38();
}

unint64_t sub_233B752F0()
{
  return 0xD000000000000010;
}

uint64_t sub_233B7530C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233B7F9F0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_233B75334()
{
  sub_233B7EFB0();
  return sub_233BD8D8C();
}

uint64_t sub_233B7535C()
{
  sub_233B7EFB0();
  return sub_233BD8D98();
}

uint64_t LocalizedStringsResponse.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123BC8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233B7EFB0();
  sub_233BD8D80();
  v10[1] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256123B50);
  sub_233B74A34(&qword_256123B58, MEMORY[0x24BEE0D08], MEMORY[0x24BEE04C0]);
  sub_233BD8C30();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t LocalizedStringsResponse.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123BD8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233B7EFB0();
  sub_233BD8D68();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256123B50);
    sub_233B74A34(&qword_256123B68, MEMORY[0x24BEE0D38], MEMORY[0x24BEE04E0]);
    sub_233BD8BA0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_233B755E4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return LocalizedStringsResponse.init(from:)(a1, a2);
}

uint64_t sub_233B755F8(_QWORD *a1)
{
  return LocalizedStringsResponse.encode(to:)(a1);
}

uint64_t sub_233B7560C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;

  v5[15] = a4;
  v5[16] = v4;
  v5[13] = a2;
  v5[14] = a3;
  v5[12] = a1;
  v5[17] = *v4;
  return swift_task_switch();
}

uint64_t sub_233B75634()
{
  uint64_t v0;
  uint64_t **v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  __int128 v19;

  v1 = *(uint64_t ***)(v0 + 104);
  sub_233B74360();
  v2 = sub_233B743A4();
  v3 = **v1;
  v4 = (*v1)[1];
  v5 = (*v1)[2];
  v6 = (*v1)[3];
  v7 = (*v1)[4];
  v8 = (*v1)[5];
  v9 = *((_BYTE *)*v1 + 48);
  *(_QWORD *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 72) = v0 + 16;
  *(_QWORD *)(v0 + 24) = v4;
  *(_QWORD *)(v0 + 32) = v5;
  *(_QWORD *)(v0 + 40) = v6;
  *(_QWORD *)(v0 + 48) = v7;
  *(_QWORD *)(v0 + 56) = v8;
  *(_BYTE *)(v0 + 64) = v9;
  sub_233B743E8(v3, v4, v5, v6, v7, v8, v9);
  *(_QWORD *)(v0 + 80) = &type metadata for FetchPrivateDataRequest;
  *(_QWORD *)(v0 + 88) = v2;
  v10 = sub_233BD8648();
  *(_QWORD *)(v0 + 144) = v10;
  *(_QWORD *)(v0 + 152) = v11;
  v12 = v10;
  v13 = v11;
  v14 = *(_QWORD *)(v0 + 136);
  v19 = *(_OWORD *)(v0 + 112);
  sub_233B7443C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  v15 = sub_233BD8654();
  *(_QWORD *)(v0 + 160) = v15;
  v16 = swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v16;
  *(_QWORD *)(v16 + 16) = v15;
  *(_OWORD *)(v16 + 24) = v19;
  *(_QWORD *)(v16 + 40) = v12;
  *(_QWORD *)(v16 + 48) = v13;
  *(_QWORD *)(v16 + 56) = v14;
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v17;
  *v17 = v0;
  v17[1] = sub_233B757D4;
  return sub_233BD8C90();
}

uint64_t sub_233B757D4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 184) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_233B75848()
{
  uint64_t v0;

  sub_233B71B8C(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233B7587C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 144);
  v1 = *(_QWORD *)(v0 + 152);

  sub_233B71B8C(v2, v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233B758D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;

  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  v4[9] = *v3;
  v4[10] = type metadata accessor for ManifestValidationRequest();
  v4[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233B75938()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  __int128 v13;

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(uint64_t **)(v0 + 40);
  sub_233B74300(&qword_256123EA0, (uint64_t (*)(uint64_t))type metadata accessor for ManifestValidationRequest, (uint64_t)&protocol conformance descriptor for ManifestValidationRequest);
  v4 = sub_233B74300(&qword_256123EA8, (uint64_t (*)(uint64_t))type metadata accessor for ManifestValidationRequest, (uint64_t)&protocol conformance descriptor for ManifestValidationRequest);
  sub_233B806F8(*v3, v1, (uint64_t (*)(_QWORD))type metadata accessor for ManifestValidationRequest);
  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 24) = v2;
  *(_QWORD *)(v0 + 32) = v4;
  v5 = sub_233BD8648();
  *(_QWORD *)(v0 + 96) = v5;
  *(_QWORD *)(v0 + 104) = v6;
  v7 = v6;
  v8 = *(_QWORD *)(v0 + 72);
  v13 = *(_OWORD *)(v0 + 48);
  sub_233B8073C(*(_QWORD *)(v0 + 88), (uint64_t (*)(_QWORD))type metadata accessor for ManifestValidationRequest);
  v9 = sub_233BD8654();
  *(_QWORD *)(v0 + 112) = v9;
  v10 = swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v10;
  *(_QWORD *)(v10 + 16) = v9;
  *(_OWORD *)(v10 + 24) = v13;
  *(_QWORD *)(v10 + 40) = v5;
  *(_QWORD *)(v10 + 48) = v7;
  *(_QWORD *)(v10 + 56) = v8;
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256123C30);
  *v11 = v0;
  v11[1] = sub_233B75AF4;
  return sub_233BD8C90();
}

uint64_t sub_233B75AF4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_233B75B68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;

  v4[14] = a3;
  v4[15] = v3;
  v4[12] = a1;
  v4[13] = a2;
  v4[16] = *v3;
  return swift_task_switch();
}

uint64_t sub_233B75B8C()
{
  uint64_t v0;
  uint64_t **v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  __int128 v19;

  v1 = *(uint64_t ***)(v0 + 96);
  sub_233B74148();
  v2 = sub_233B7418C();
  v3 = **v1;
  v4 = (*v1)[1];
  v5 = (*v1)[2];
  v6 = (*v1)[3];
  v7 = (*v1)[4];
  v8 = (*v1)[5];
  v9 = *((_BYTE *)*v1 + 48);
  *(_QWORD *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 72) = v0 + 16;
  *(_QWORD *)(v0 + 24) = v4;
  *(_QWORD *)(v0 + 32) = v5;
  *(_QWORD *)(v0 + 40) = v6;
  *(_QWORD *)(v0 + 48) = v7;
  *(_QWORD *)(v0 + 56) = v8;
  *(_BYTE *)(v0 + 64) = v9;
  sub_233B741D0(v3, v4, v5, v6, v7, v8, v9);
  *(_QWORD *)(v0 + 80) = &type metadata for SetPrivateDataRequest;
  *(_QWORD *)(v0 + 88) = v2;
  v10 = sub_233BD8648();
  *(_QWORD *)(v0 + 136) = v10;
  *(_QWORD *)(v0 + 144) = v11;
  v12 = v10;
  v13 = v11;
  v14 = *(_QWORD *)(v0 + 128);
  v19 = *(_OWORD *)(v0 + 104);
  sub_233B74238(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  v15 = sub_233BD8654();
  *(_QWORD *)(v0 + 152) = v15;
  v16 = swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v16;
  *(_QWORD *)(v16 + 16) = v15;
  *(_OWORD *)(v16 + 24) = v19;
  *(_QWORD *)(v16 + 40) = v12;
  *(_QWORD *)(v16 + 48) = v13;
  *(_QWORD *)(v16 + 56) = v14;
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256123C30);
  *v17 = v0;
  v17[1] = sub_233B75D44;
  return sub_233BD8C90();
}

uint64_t sub_233B75D44()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_233B75DB8()
{
  uint64_t v0;

  sub_233B71B8C(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 65));
}

uint64_t sub_233B75DF0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 136);
  v1 = *(_QWORD *)(v0 + 144);

  sub_233B71B8C(v2, v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233B75E44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;

  v4[11] = a3;
  v4[12] = v3;
  v4[9] = a1;
  v4[10] = a2;
  v4[13] = *v3;
  return swift_task_switch();
}

uint64_t sub_233B75E68()
{
  uint64_t v0;
  uint64_t **v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  __int128 v15;

  v1 = *(uint64_t ***)(v0 + 72);
  sub_233B805F0();
  v2 = sub_233B80634();
  v4 = **v1;
  v3 = (*v1)[1];
  v5 = (*v1)[2];
  *(_QWORD *)(v0 + 16) = v4;
  *(_QWORD *)(v0 + 24) = v3;
  *(_QWORD *)(v0 + 32) = v5;
  *(_QWORD *)(v0 + 48) = v0 + 16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(_QWORD *)(v0 + 56) = &type metadata for AvailableAppMetadataRequest;
  *(_QWORD *)(v0 + 64) = v2;
  v6 = sub_233BD8648();
  *(_QWORD *)(v0 + 112) = v6;
  *(_QWORD *)(v0 + 120) = v7;
  v8 = v6;
  v9 = v7;
  v10 = *(_QWORD *)(v0 + 104);
  v15 = *(_OWORD *)(v0 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = sub_233BD8654();
  *(_QWORD *)(v0 + 128) = v11;
  v12 = swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v12;
  *(_QWORD *)(v12 + 16) = v11;
  *(_OWORD *)(v12 + 24) = v15;
  *(_QWORD *)(v12 + 40) = v8;
  *(_QWORD *)(v12 + 48) = v9;
  *(_QWORD *)(v12 + 56) = v10;
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256123A88);
  *v13 = v0;
  v13[1] = sub_233B7600C;
  return sub_233BD8C90();
}

uint64_t sub_233B7600C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 152) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_233B76080()
{
  uint64_t v0;

  sub_233B71B8C(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 40));
}

uint64_t sub_233B760B8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 112);
  v1 = *(_QWORD *)(v0 + 120);

  sub_233B71B8C(v2, v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233B7610C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;

  v4[3] = a3;
  v4[4] = v3;
  v4[2] = a2;
  v4[5] = *v3;
  return swift_task_switch();
}

uint64_t sub_233B76130()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  __int128 v10;

  v1 = sub_233BD8648();
  *(_QWORD *)(v0 + 48) = v1;
  *(_QWORD *)(v0 + 56) = v2;
  v3 = v1;
  v4 = v2;
  v5 = *(_QWORD *)(v0 + 40);
  v10 = *(_OWORD *)(v0 + 16);
  v6 = sub_233BD8654();
  *(_QWORD *)(v0 + 64) = v6;
  v7 = swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v7;
  *(_QWORD *)(v7 + 16) = v6;
  *(_OWORD *)(v7 + 24) = v10;
  *(_QWORD *)(v7 + 40) = v3;
  *(_QWORD *)(v7 + 48) = v4;
  *(_QWORD *)(v7 + 56) = v5;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256123C30);
  *v8 = v0;
  v8[1] = sub_233B76264;
  return sub_233BD8C90();
}

uint64_t sub_233B76264()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_233B762D8()
{
  uint64_t v0;

  sub_233B71B8C(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 96));
}

uint64_t sub_233B76310()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);

  sub_233B71B8C(v2, v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233B76364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;

  v4[9] = a3;
  v4[10] = v3;
  v4[7] = a1;
  v4[8] = a2;
  v4[11] = *v3;
  return swift_task_switch();
}

uint64_t sub_233B76388()
{
  uint64_t v0;
  _QWORD **v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  __int128 v13;

  v1 = *(_QWORD ***)(v0 + 56);
  sub_233B80520();
  v2 = sub_233B80564();
  v3 = (*v1)[1];
  *(_QWORD *)(v0 + 16) = **v1;
  *(_QWORD *)(v0 + 32) = v0 + 16;
  *(_QWORD *)(v0 + 24) = v3;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v0 + 40) = &type metadata for DiscoverRestoresRequest;
  *(_QWORD *)(v0 + 48) = v2;
  v4 = sub_233BD8648();
  *(_QWORD *)(v0 + 96) = v4;
  *(_QWORD *)(v0 + 104) = v5;
  v6 = v4;
  v7 = v5;
  v8 = *(_QWORD *)(v0 + 88);
  v13 = *(_OWORD *)(v0 + 64);
  swift_bridgeObjectRelease();
  v9 = sub_233BD8654();
  *(_QWORD *)(v0 + 112) = v9;
  v10 = swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v10;
  *(_QWORD *)(v10 + 16) = v9;
  *(_OWORD *)(v10 + 24) = v13;
  *(_QWORD *)(v10 + 40) = v6;
  *(_QWORD *)(v10 + 48) = v7;
  *(_QWORD *)(v10 + 56) = v8;
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256123C30);
  *v11 = v0;
  v11[1] = sub_233B76510;
  return sub_233BD8C90();
}

uint64_t sub_233B76510()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_233B76584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;

  v4[9] = a3;
  v4[10] = v3;
  v4[7] = a1;
  v4[8] = a2;
  v4[11] = *v3;
  return swift_task_switch();
}

uint64_t sub_233B765A8()
{
  uint64_t v0;
  _QWORD **v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  __int128 v13;

  v1 = *(_QWORD ***)(v0 + 56);
  sub_233B80474();
  v2 = sub_233B804B8();
  v3 = (*v1)[1];
  *(_QWORD *)(v0 + 16) = **v1;
  *(_QWORD *)(v0 + 32) = v0 + 16;
  *(_QWORD *)(v0 + 24) = v3;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v0 + 40) = &type metadata for PrioritizeAppRequest;
  *(_QWORD *)(v0 + 48) = v2;
  v4 = sub_233BD8648();
  *(_QWORD *)(v0 + 96) = v4;
  *(_QWORD *)(v0 + 104) = v5;
  v6 = v4;
  v7 = v5;
  v8 = *(_QWORD *)(v0 + 88);
  v13 = *(_OWORD *)(v0 + 64);
  swift_bridgeObjectRelease();
  v9 = sub_233BD8654();
  *(_QWORD *)(v0 + 112) = v9;
  v10 = swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v10;
  *(_QWORD *)(v10 + 16) = v9;
  *(_OWORD *)(v10 + 24) = v13;
  *(_QWORD *)(v10 + 40) = v6;
  *(_QWORD *)(v10 + 48) = v7;
  *(_QWORD *)(v10 + 56) = v8;
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256123C30);
  *v11 = v0;
  v11[1] = sub_233B76730;
  return sub_233BD8C90();
}

uint64_t sub_233B76730()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_233B767A4()
{
  uint64_t v0;

  sub_233B71B8C(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 144));
}

uint64_t sub_233B767DC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 96);
  v1 = *(_QWORD *)(v0 + 104);

  sub_233B71B8C(v2, v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233B76830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;

  v4[8] = a3;
  v4[9] = v3;
  v4[6] = a1;
  v4[7] = a2;
  v4[10] = *v3;
  return swift_task_switch();
}

uint64_t sub_233B76854()
{
  uint64_t v0;
  _QWORD **v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  __int128 v12;

  v1 = *(_QWORD ***)(v0 + 48);
  sub_233B803C8();
  v2 = sub_233B8040C();
  *(_QWORD *)(v0 + 24) = **v1;
  *(_QWORD *)(v0 + 16) = v0 + 24;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v0 + 32) = &type metadata for PromoteAppsRequest;
  *(_QWORD *)(v0 + 40) = v2;
  v3 = sub_233BD8648();
  *(_QWORD *)(v0 + 88) = v3;
  *(_QWORD *)(v0 + 96) = v4;
  v5 = v3;
  v6 = v4;
  v7 = *(_QWORD *)(v0 + 80);
  v12 = *(_OWORD *)(v0 + 56);
  swift_bridgeObjectRelease();
  v8 = sub_233BD8654();
  *(_QWORD *)(v0 + 104) = v8;
  v9 = swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v9;
  *(_QWORD *)(v9 + 16) = v8;
  *(_OWORD *)(v9 + 24) = v12;
  *(_QWORD *)(v9 + 40) = v5;
  *(_QWORD *)(v9 + 48) = v6;
  *(_QWORD *)(v9 + 56) = v7;
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256123C30);
  *v10 = v0;
  v10[1] = sub_233B769D8;
  return sub_233BD8C90();
}

uint64_t sub_233B769D8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_233B76A4C()
{
  uint64_t v0;

  sub_233B71B8C(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 136));
}

uint64_t sub_233B76A84()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);

  sub_233B71B8C(v2, v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233B76AD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;

  v5[11] = a4;
  v5[12] = v4;
  v5[9] = a2;
  v5[10] = a3;
  v5[8] = a1;
  v5[13] = *v4;
  return swift_task_switch();
}

uint64_t sub_233B76B00()
{
  uint64_t v0;
  _QWORD **v1;
  unint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  __int128 v14;

  v1 = *(_QWORD ***)(v0 + 72);
  sub_233B802E4();
  v2 = sub_233B80328();
  v3 = (*v1)[1];
  v4 = *((_BYTE *)*v1 + 16);
  *(_QWORD *)(v0 + 16) = **v1;
  *(_QWORD *)(v0 + 40) = v0 + 16;
  *(_QWORD *)(v0 + 24) = v3;
  *(_BYTE *)(v0 + 32) = v4;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v0 + 48) = &type metadata for UpdateMetadataRequest;
  *(_QWORD *)(v0 + 56) = v2;
  v5 = sub_233BD8648();
  *(_QWORD *)(v0 + 112) = v5;
  *(_QWORD *)(v0 + 120) = v6;
  v7 = v5;
  v8 = v6;
  v9 = *(_QWORD *)(v0 + 104);
  v14 = *(_OWORD *)(v0 + 80);
  swift_bridgeObjectRelease();
  v10 = sub_233BD8654();
  *(_QWORD *)(v0 + 128) = v10;
  v11 = swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v11;
  *(_QWORD *)(v11 + 16) = v10;
  *(_OWORD *)(v11 + 24) = v14;
  *(_QWORD *)(v11 + 40) = v7;
  *(_QWORD *)(v11 + 48) = v8;
  *(_QWORD *)(v11 + 56) = v9;
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256123DE0);
  *v12 = v0;
  v12[1] = sub_233B76C80;
  return sub_233BD8C90();
}

uint64_t sub_233B76C80()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 152) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_233B76CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;

  v4[15] = a3;
  v4[16] = v3;
  v4[13] = a1;
  v4[14] = a2;
  v4[17] = *v3;
  return swift_task_switch();
}

uint64_t sub_233B76D18()
{
  uint64_t v0;
  uint64_t **v1;
  unint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  __int128 v21;

  v1 = *(uint64_t ***)(v0 + 104);
  sub_233B80238();
  v2 = sub_233B8027C();
  v3 = *v1;
  v5 = **v1;
  v4 = (*v1)[1];
  v6 = (*v1)[2];
  v7 = (*v1)[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = v3[6];
  v11 = v3[7];
  *(_QWORD *)(v0 + 16) = v5;
  *(_QWORD *)(v0 + 80) = v0 + 16;
  *(_QWORD *)(v0 + 24) = v4;
  *(_QWORD *)(v0 + 32) = v6;
  *(_QWORD *)(v0 + 40) = v7;
  *(_QWORD *)(v0 + 48) = v8;
  *(_QWORD *)(v0 + 56) = v9;
  *(_QWORD *)(v0 + 64) = v10;
  *(_QWORD *)(v0 + 72) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(_QWORD *)(v0 + 88) = &type metadata for UpdateMetadata;
  *(_QWORD *)(v0 + 96) = v2;
  v12 = sub_233BD8648();
  *(_QWORD *)(v0 + 144) = v12;
  *(_QWORD *)(v0 + 152) = v13;
  v14 = v12;
  v15 = v13;
  v16 = *(_QWORD *)(v0 + 136);
  v21 = *(_OWORD *)(v0 + 112);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = sub_233BD8654();
  *(_QWORD *)(v0 + 160) = v17;
  v18 = swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v18;
  *(_QWORD *)(v18 + 16) = v17;
  *(_OWORD *)(v18 + 24) = v21;
  *(_QWORD *)(v18 + 40) = v14;
  *(_QWORD *)(v18 + 48) = v15;
  *(_QWORD *)(v18 + 56) = v16;
  v19 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256123C30);
  *v19 = v0;
  v19[1] = sub_233B76F24;
  return sub_233BD8C90();
}

uint64_t sub_233B76F24()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 184) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_233B76F98()
{
  uint64_t v0;

  sub_233B71B8C(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 192));
}

uint64_t sub_233B76FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;

  v5[12] = a4;
  v5[13] = v4;
  v5[10] = a2;
  v5[11] = a3;
  v5[9] = a1;
  v5[14] = *v4;
  return swift_task_switch();
}

uint64_t sub_233B76FF8()
{
  uint64_t v0;
  uint64_t **v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  __int128 v16;

  v1 = *(uint64_t ***)(v0 + 80);
  sub_233B80114();
  v2 = sub_233B80158();
  v3 = **v1;
  v4 = (*v1)[1];
  v5 = (*v1)[2];
  v6 = *((_BYTE *)*v1 + 24);
  *(_QWORD *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 48) = v0 + 16;
  *(_QWORD *)(v0 + 24) = v4;
  *(_QWORD *)(v0 + 32) = v5;
  *(_BYTE *)(v0 + 40) = v6;
  sub_233B8019C(v3, v4, v5, v6);
  *(_QWORD *)(v0 + 56) = &type metadata for PerformPrivateActionRequest;
  *(_QWORD *)(v0 + 64) = v2;
  v7 = sub_233BD8648();
  *(_QWORD *)(v0 + 120) = v7;
  *(_QWORD *)(v0 + 128) = v8;
  v9 = v7;
  v10 = v8;
  v11 = *(_QWORD *)(v0 + 112);
  v16 = *(_OWORD *)(v0 + 88);
  sub_233B801BC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  v12 = sub_233BD8654();
  *(_QWORD *)(v0 + 136) = v12;
  v13 = swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v13;
  *(_QWORD *)(v13 + 16) = v12;
  *(_OWORD *)(v13 + 24) = v16;
  *(_QWORD *)(v13 + 40) = v9;
  *(_QWORD *)(v13 + 48) = v10;
  *(_QWORD *)(v13 + 56) = v11;
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v14;
  *v14 = v0;
  v14[1] = sub_233B77184;
  return sub_233BD8C90();
}

uint64_t sub_233B77184()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 160) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_233B771F8()
{
  uint64_t v0;

  sub_233B71B8C(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233B7722C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 128);

  sub_233B71B8C(v2, v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233B77280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;

  v5[7] = a4;
  v5[8] = v4;
  v5[5] = a1;
  v5[6] = a3;
  v5[9] = *v4;
  return swift_task_switch();
}

uint64_t sub_233B772A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  __int128 v10;

  sub_233B80030();
  *(_QWORD *)(v0 + 32) = sub_233B80074();
  *(_QWORD *)(v0 + 24) = &type metadata for FetchPublicDataRequest;
  v1 = sub_233BD8648();
  *(_QWORD *)(v0 + 80) = v1;
  *(_QWORD *)(v0 + 88) = v2;
  v3 = v1;
  v4 = v2;
  v5 = *(_QWORD *)(v0 + 72);
  v10 = *(_OWORD *)(v0 + 48);
  v6 = sub_233BD8654();
  *(_QWORD *)(v0 + 96) = v6;
  v7 = swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v7;
  *(_QWORD *)(v7 + 16) = v6;
  *(_OWORD *)(v7 + 24) = v10;
  *(_QWORD *)(v7 + 40) = v3;
  *(_QWORD *)(v7 + 48) = v4;
  *(_QWORD *)(v7 + 56) = v5;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v8;
  *v8 = v0;
  v8[1] = sub_233B773DC;
  return sub_233BD8C90();
}

uint64_t sub_233B773DC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 120) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_233B77450()
{
  uint64_t v0;

  sub_233B71B8C(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233B77484()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);

  sub_233B71B8C(v2, v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233B774D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;

  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  v4[9] = *v3;
  v4[10] = type metadata accessor for SetPublicDataRequest(0);
  v4[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233B77540()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  __int128 v13;

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(uint64_t **)(v0 + 40);
  sub_233B74300(&qword_256123D50, type metadata accessor for SetPublicDataRequest, (uint64_t)&protocol conformance descriptor for SetPublicDataRequest);
  v4 = sub_233B74300(&qword_256123D58, type metadata accessor for SetPublicDataRequest, (uint64_t)&protocol conformance descriptor for SetPublicDataRequest);
  sub_233B806F8(*v3, v1, type metadata accessor for SetPublicDataRequest);
  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 24) = v2;
  *(_QWORD *)(v0 + 32) = v4;
  v5 = sub_233BD8648();
  *(_QWORD *)(v0 + 96) = v5;
  *(_QWORD *)(v0 + 104) = v6;
  v7 = v6;
  v8 = *(_QWORD *)(v0 + 72);
  v13 = *(_OWORD *)(v0 + 48);
  sub_233B8073C(*(_QWORD *)(v0 + 88), type metadata accessor for SetPublicDataRequest);
  v9 = sub_233BD8654();
  *(_QWORD *)(v0 + 112) = v9;
  v10 = swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v10;
  *(_QWORD *)(v10 + 16) = v9;
  *(_OWORD *)(v10 + 24) = v13;
  *(_QWORD *)(v10 + 40) = v5;
  *(_QWORD *)(v10 + 48) = v7;
  *(_QWORD *)(v10 + 56) = v8;
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256123C30);
  *v11 = v0;
  v11[1] = sub_233B776FC;
  return sub_233BD8C90();
}

uint64_t sub_233B776FC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_233B77770()
{
  uint64_t v0;
  uint64_t v1;

  sub_233B71B8C(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
  v1 = *(unsigned __int8 *)(v0 + 144);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_233B777B8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 96);
  v1 = *(_QWORD *)(v0 + 104);

  sub_233B71B8C(v2, v1);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233B77814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;

  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  v4[9] = *v3;
  v4[10] = type metadata accessor for AppInstallRequest();
  v4[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233B7787C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  __int128 v13;

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(uint64_t **)(v0 + 40);
  sub_233B74300(&qword_256123D38, (uint64_t (*)(uint64_t))type metadata accessor for AppInstallRequest, (uint64_t)&protocol conformance descriptor for AppInstallRequest);
  v4 = sub_233B74300(&qword_256123D40, (uint64_t (*)(uint64_t))type metadata accessor for AppInstallRequest, (uint64_t)&protocol conformance descriptor for AppInstallRequest);
  sub_233B806F8(*v3, v1, (uint64_t (*)(_QWORD))type metadata accessor for AppInstallRequest);
  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 24) = v2;
  *(_QWORD *)(v0 + 32) = v4;
  v5 = sub_233BD8648();
  *(_QWORD *)(v0 + 96) = v5;
  *(_QWORD *)(v0 + 104) = v6;
  v7 = v6;
  v8 = *(_QWORD *)(v0 + 72);
  v13 = *(_OWORD *)(v0 + 48);
  sub_233B8073C(*(_QWORD *)(v0 + 88), (uint64_t (*)(_QWORD))type metadata accessor for AppInstallRequest);
  v9 = sub_233BD8654();
  *(_QWORD *)(v0 + 112) = v9;
  v10 = swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v10;
  *(_QWORD *)(v10 + 16) = v9;
  *(_OWORD *)(v10 + 24) = v13;
  *(_QWORD *)(v10 + 40) = v5;
  *(_QWORD *)(v10 + 48) = v7;
  *(_QWORD *)(v10 + 56) = v8;
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256123C30);
  *v11 = v0;
  v11[1] = sub_233B75AF4;
  return sub_233BD8C90();
}

uint64_t sub_233B77A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;

  v5[11] = a4;
  v5[12] = v4;
  v5[9] = a2;
  v5[10] = a3;
  v5[8] = a1;
  v5[13] = *v4;
  return swift_task_switch();
}

uint64_t sub_233B77A60()
{
  uint64_t v0;
  _QWORD **v1;
  unint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  __int128 v14;

  v1 = *(_QWORD ***)(v0 + 72);
  sub_233B7FE54();
  v2 = sub_233B7FE98();
  v3 = (*v1)[1];
  v4 = *((_BYTE *)*v1 + 16);
  *(_QWORD *)(v0 + 16) = **v1;
  *(_QWORD *)(v0 + 40) = v0 + 16;
  *(_QWORD *)(v0 + 24) = v3;
  *(_BYTE *)(v0 + 32) = v4;
  sub_233B7FEDC();
  *(_QWORD *)(v0 + 48) = &type metadata for PerformActionRequest;
  *(_QWORD *)(v0 + 56) = v2;
  v5 = sub_233BD8648();
  *(_QWORD *)(v0 + 112) = v5;
  *(_QWORD *)(v0 + 120) = v6;
  v7 = v5;
  v8 = v6;
  v9 = *(_QWORD *)(v0 + 104);
  v14 = *(_OWORD *)(v0 + 80);
  sub_233B7FEE8();
  v10 = sub_233BD8654();
  *(_QWORD *)(v0 + 128) = v10;
  v11 = swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v11;
  *(_QWORD *)(v11 + 16) = v10;
  *(_OWORD *)(v11 + 24) = v14;
  *(_QWORD *)(v11 + 40) = v7;
  *(_QWORD *)(v11 + 48) = v8;
  *(_QWORD *)(v11 + 56) = v9;
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v12;
  *v12 = v0;
  v12[1] = sub_233B77BE0;
  return sub_233BD8C90();
}

uint64_t sub_233B77BE0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 152) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_233B77C54()
{
  uint64_t v0;

  sub_233B71B8C(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233B77C88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;

  v4[8] = a3;
  v4[9] = v3;
  v4[6] = a1;
  v4[7] = a2;
  v4[10] = *v3;
  return swift_task_switch();
}

uint64_t sub_233B77CAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  __int128 v10;

  *(_QWORD *)(v0 + 24) = ***(_QWORD ***)(v0 + 48);
  *(_QWORD *)(v0 + 16) = v0 + 24;
  *(_QWORD *)(v0 + 32) = MEMORY[0x24BEE4568];
  *(_QWORD *)(v0 + 40) = MEMORY[0x24BEE4570];
  v1 = sub_233BD8648();
  *(_QWORD *)(v0 + 88) = v1;
  *(_QWORD *)(v0 + 96) = v2;
  v3 = v1;
  v4 = v2;
  v5 = *(_QWORD *)(v0 + 80);
  v10 = *(_OWORD *)(v0 + 56);
  v6 = sub_233BD8654();
  *(_QWORD *)(v0 + 104) = v6;
  v7 = swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v7;
  *(_QWORD *)(v7 + 16) = v6;
  *(_OWORD *)(v7 + 24) = v10;
  *(_QWORD *)(v7 + 40) = v3;
  *(_QWORD *)(v7 + 48) = v4;
  *(_QWORD *)(v7 + 56) = v5;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256123C30);
  *v8 = v0;
  v8[1] = sub_233B77E14;
  return sub_233BD8C90();
}

uint64_t sub_233B77E14()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_233B77E88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;

  v4[10] = a3;
  v4[11] = v3;
  v4[8] = a1;
  v4[9] = a2;
  v4[12] = *v3;
  return swift_task_switch();
}

uint64_t sub_233B77EAC()
{
  uint64_t v0;
  _QWORD **v1;
  unint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  __int128 v14;

  v1 = *(_QWORD ***)(v0 + 64);
  sub_233B7FDA8();
  v2 = sub_233B7FDEC();
  v3 = (*v1)[1];
  v4 = *((_BYTE *)*v1 + 16);
  *(_QWORD *)(v0 + 16) = **v1;
  *(_QWORD *)(v0 + 40) = v0 + 16;
  *(_QWORD *)(v0 + 24) = v3;
  *(_BYTE *)(v0 + 32) = v4;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v0 + 48) = &type metadata for PollForUpdatesRequest;
  *(_QWORD *)(v0 + 56) = v2;
  v5 = sub_233BD8648();
  *(_QWORD *)(v0 + 104) = v5;
  *(_QWORD *)(v0 + 112) = v6;
  v7 = v5;
  v8 = v6;
  v9 = *(_QWORD *)(v0 + 96);
  v14 = *(_OWORD *)(v0 + 72);
  swift_bridgeObjectRelease();
  v10 = sub_233BD8654();
  *(_QWORD *)(v0 + 120) = v10;
  v11 = swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v11;
  *(_QWORD *)(v11 + 16) = v10;
  *(_OWORD *)(v11 + 24) = v14;
  *(_QWORD *)(v11 + 40) = v7;
  *(_QWORD *)(v11 + 48) = v8;
  *(_QWORD *)(v11 + 56) = v9;
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256123C30);
  *v12 = v0;
  v12[1] = sub_233B7803C;
  return sub_233BD8C90();
}

uint64_t sub_233B7803C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 144) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_233B780B0()
{
  uint64_t v0;

  sub_233B71B8C(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 33));
}

uint64_t sub_233B780E8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);

  sub_233B71B8C(v2, v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233B7813C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;

  v5[11] = a4;
  v5[12] = v4;
  v5[9] = a2;
  v5[10] = a3;
  v5[8] = a1;
  v5[13] = *v4;
  return swift_task_switch();
}

uint64_t sub_233B78164()
{
  uint64_t v0;
  uint64_t **v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  __int128 v17;

  v1 = *(uint64_t ***)(v0 + 72);
  sub_233B7FC60();
  v2 = sub_233B7FCA4();
  v3 = **v1;
  v4 = (*v1)[1];
  v5 = (void *)(*v1)[2];
  *(_QWORD *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 40) = v0 + 16;
  *(_QWORD *)(v0 + 24) = v4;
  *(_QWORD *)(v0 + 32) = v5;
  sub_233B7FCE8(v3, v4);
  v6 = v5;
  *(_QWORD *)(v0 + 48) = &type metadata for SecureButtonActionRequest;
  *(_QWORD *)(v0 + 56) = v2;
  v7 = sub_233BD8648();
  *(_QWORD *)(v0 + 112) = v7;
  *(_QWORD *)(v0 + 120) = v8;
  v9 = v7;
  v10 = v8;
  v11 = *(_QWORD *)(v0 + 104);
  v12 = *(void **)(v0 + 32);
  v17 = *(_OWORD *)(v0 + 80);
  sub_233B7FCF8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));

  v13 = sub_233BD8654();
  *(_QWORD *)(v0 + 128) = v13;
  v14 = swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v14;
  *(_QWORD *)(v14 + 16) = v13;
  *(_OWORD *)(v14 + 24) = v17;
  *(_QWORD *)(v14 + 40) = v9;
  *(_QWORD *)(v14 + 48) = v10;
  *(_QWORD *)(v14 + 56) = v11;
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v15;
  type metadata accessor for SecureButtonActionResponse(0);
  *v15 = v0;
  v15[1] = sub_233B77BE0;
  return sub_233BD8C90();
}

uint64_t sub_233B782F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;

  v5[10] = a4;
  v5[11] = v4;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  v5[12] = *v4;
  return swift_task_switch();
}

uint64_t sub_233B78318()
{
  uint64_t v0;
  _QWORD **v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  __int128 v14;

  v1 = *(_QWORD ***)(v0 + 64);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123C60);
  sub_233B7FBA4(&qword_256123C68, MEMORY[0x24BEE0D38], MEMORY[0x24BEE4AC0]);
  v3 = sub_233B7FBA4(&qword_256123C70, MEMORY[0x24BEE0D08], MEMORY[0x24BEE4AA8]);
  v4 = (*v1)[1];
  *(_QWORD *)(v0 + 16) = **v1;
  *(_QWORD *)(v0 + 32) = v0 + 16;
  *(_QWORD *)(v0 + 24) = v4;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v0 + 40) = v2;
  *(_QWORD *)(v0 + 48) = v3;
  v5 = sub_233BD8648();
  *(_QWORD *)(v0 + 104) = v5;
  *(_QWORD *)(v0 + 112) = v6;
  v7 = v5;
  v8 = v6;
  v9 = *(_QWORD *)(v0 + 96);
  v14 = *(_OWORD *)(v0 + 72);
  swift_bridgeObjectRelease();
  v10 = sub_233BD8654();
  *(_QWORD *)(v0 + 120) = v10;
  v11 = swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v11;
  *(_QWORD *)(v11 + 16) = v10;
  *(_OWORD *)(v11 + 24) = v14;
  *(_QWORD *)(v11 + 40) = v7;
  *(_QWORD *)(v11 + 48) = v8;
  *(_QWORD *)(v11 + 56) = v9;
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256123C78);
  *v12 = v0;
  v12[1] = sub_233B784C8;
  return sub_233BD8C90();
}

uint64_t sub_233B784C8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 144) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_233B7853C()
{
  uint64_t v0;

  sub_233B71B8C(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233B78570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;

  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  v4[9] = *v3;
  return swift_task_switch();
}

uint64_t sub_233B78594()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  __int128 v10;

  *(_BYTE *)(v0 + 129) = ***(_BYTE ***)(v0 + 40);
  *(_QWORD *)(v0 + 16) = v0 + 129;
  *(_QWORD *)(v0 + 24) = MEMORY[0x24BEE1328];
  *(_QWORD *)(v0 + 32) = MEMORY[0x24BEE1330];
  v1 = sub_233BD8648();
  *(_QWORD *)(v0 + 80) = v1;
  *(_QWORD *)(v0 + 88) = v2;
  v3 = v1;
  v4 = v2;
  v5 = *(_QWORD *)(v0 + 72);
  v10 = *(_OWORD *)(v0 + 48);
  v6 = sub_233BD8654();
  *(_QWORD *)(v0 + 96) = v6;
  v7 = swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v7;
  *(_QWORD *)(v7 + 16) = v6;
  *(_OWORD *)(v7 + 24) = v10;
  *(_QWORD *)(v7 + 40) = v3;
  *(_QWORD *)(v7 + 48) = v4;
  *(_QWORD *)(v7 + 56) = v5;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256123C30);
  *v8 = v0;
  v8[1] = sub_233B786FC;
  return sub_233BD8C90();
}

uint64_t sub_233B786FC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 120) = v0;
  swift_task_dealloc();
  if (!v0)
  {

    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_233B78770()
{
  uint64_t v0;

  sub_233B71B8C(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 128));
}

uint64_t sub_233B787A8(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  unint64_t v15;
  uint64_t v16;
  void (*v17)(unint64_t, char *, uint64_t);
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t);
  uint64_t v30;
  uint64_t v31[4];
  _QWORD aBlock[6];

  v25 = a7;
  v26 = a5;
  v27 = a6;
  v28 = a4;
  v29 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FDA8);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9, v12);
  v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v14(v13, a1, v9);
  v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v16 = swift_allocObject();
  v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_233B800D0;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_233B7BCE4;
  aBlock[3] = &block_descriptor_175;
  v18 = _Block_copy(aBlock);
  swift_release();
  v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_233BD89E4();
  swift_unknownObjectRelease();
  sub_233B7410C((uint64_t)aBlock, (uint64_t)v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25424FEE0);
  if (swift_dynamicCast())
  {
    v20 = v30;
    v14(v13, a1, v9);
    v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    v22 = v26;
    *(_QWORD *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v25;
    v29(v20, v22, v27, sub_233B800F0, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_233B74300((unint64_t *)&qword_256123B10, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v31[0] = v23;
    sub_233BD8894();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_233B78A34(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  unint64_t v15;
  uint64_t v16;
  void (*v17)(unint64_t, char *, uint64_t);
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t);
  uint64_t v30;
  uint64_t v31[4];
  _QWORD aBlock[6];

  v25 = a7;
  v26 = a5;
  v27 = a6;
  v28 = a4;
  v29 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123C38);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9, v12);
  v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v14(v13, a1, v9);
  v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v16 = swift_allocObject();
  v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_233B7FA8C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_233B7BCE4;
  aBlock[3] = &block_descriptor_166;
  v18 = _Block_copy(aBlock);
  swift_release();
  v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_233BD89E4();
  swift_unknownObjectRelease();
  sub_233B7410C((uint64_t)aBlock, (uint64_t)v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25424FEE0);
  if (swift_dynamicCast())
  {
    v20 = v30;
    v14(v13, a1, v9);
    v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    v22 = v26;
    *(_QWORD *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v25;
    v29(v20, v22, v27, sub_233B7FAC4, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_233B74300((unint64_t *)&qword_256123B10, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v31[0] = v23;
    sub_233BD8894();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_233B78CC0(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  unint64_t v15;
  uint64_t v16;
  void (*v17)(unint64_t, char *, uint64_t);
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t);
  uint64_t v30;
  uint64_t v31[4];
  _QWORD aBlock[6];

  v25 = a7;
  v26 = a5;
  v27 = a6;
  v28 = a4;
  v29 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123C38);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9, v12);
  v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v14(v13, a1, v9);
  v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v16 = swift_allocObject();
  v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_233B7FA8C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_233B7BCE4;
  aBlock[3] = &block_descriptor_157;
  v18 = _Block_copy(aBlock);
  swift_release();
  v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_233BD89E4();
  swift_unknownObjectRelease();
  sub_233B7410C((uint64_t)aBlock, (uint64_t)v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25424FEE0);
  if (swift_dynamicCast())
  {
    v20 = v30;
    v14(v13, a1, v9);
    v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    v22 = v26;
    *(_QWORD *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v25;
    v29(v20, v22, v27, sub_233B7FAC4, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_233B74300((unint64_t *)&qword_256123B10, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v31[0] = v23;
    sub_233BD8894();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_233B78F4C(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  unint64_t v15;
  uint64_t v16;
  void (*v17)(unint64_t, char *, uint64_t);
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t);
  uint64_t v30;
  uint64_t v31[4];
  _QWORD aBlock[6];

  v25 = a7;
  v26 = a5;
  v27 = a6;
  v28 = a4;
  v29 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123E70);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9, v12);
  v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v14(v13, a1, v9);
  v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v16 = swift_allocObject();
  v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_233B80690;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_233B7BCE4;
  aBlock[3] = &block_descriptor_148;
  v18 = _Block_copy(aBlock);
  swift_release();
  v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_233BD89E4();
  swift_unknownObjectRelease();
  sub_233B7410C((uint64_t)aBlock, (uint64_t)v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25424FEE0);
  if (swift_dynamicCast())
  {
    v20 = v30;
    v14(v13, a1, v9);
    v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    v22 = v26;
    *(_QWORD *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v25;
    v29(v20, v22, v27, sub_233B806B0, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_233B74300((unint64_t *)&qword_256123B10, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v31[0] = v23;
    sub_233BD8894();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_233B791D8(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  unint64_t v15;
  uint64_t v16;
  void (*v17)(unint64_t, char *, uint64_t);
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t);
  uint64_t v30;
  uint64_t v31[4];
  _QWORD aBlock[6];

  v25 = a7;
  v26 = a5;
  v27 = a6;
  v28 = a4;
  v29 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123C38);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9, v12);
  v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v14(v13, a1, v9);
  v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v16 = swift_allocObject();
  v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_233B7FA8C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_233B7BCE4;
  aBlock[3] = &block_descriptor_139;
  v18 = _Block_copy(aBlock);
  swift_release();
  v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_233BD89E4();
  swift_unknownObjectRelease();
  sub_233B7410C((uint64_t)aBlock, (uint64_t)v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25424FEE0);
  if (swift_dynamicCast())
  {
    v20 = v30;
    v14(v13, a1, v9);
    v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    v22 = v26;
    *(_QWORD *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v25;
    v29(v20, v22, v27, sub_233B7FAC4, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_233B74300((unint64_t *)&qword_256123B10, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v31[0] = v23;
    sub_233BD8894();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_233B79464(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  unint64_t v15;
  uint64_t v16;
  void (*v17)(unint64_t, char *, uint64_t);
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t);
  uint64_t v30;
  uint64_t v31[4];
  _QWORD aBlock[6];

  v25 = a7;
  v26 = a5;
  v27 = a6;
  v28 = a4;
  v29 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123C38);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9, v12);
  v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v14(v13, a1, v9);
  v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v16 = swift_allocObject();
  v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_233B7FA8C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_233B7BCE4;
  aBlock[3] = &block_descriptor_130;
  v18 = _Block_copy(aBlock);
  swift_release();
  v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_233BD89E4();
  swift_unknownObjectRelease();
  sub_233B7410C((uint64_t)aBlock, (uint64_t)v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25424FEE0);
  if (swift_dynamicCast())
  {
    v20 = v30;
    v14(v13, a1, v9);
    v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    v22 = v26;
    *(_QWORD *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v25;
    v29(v20, v22, v27, sub_233B7FAC4, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_233B74300((unint64_t *)&qword_256123B10, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v31[0] = v23;
    sub_233BD8894();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_233B796F0(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  unint64_t v15;
  uint64_t v16;
  void (*v17)(unint64_t, char *, uint64_t);
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t);
  uint64_t v30;
  uint64_t v31[4];
  _QWORD aBlock[6];

  v25 = a7;
  v26 = a5;
  v27 = a6;
  v28 = a4;
  v29 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123C38);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9, v12);
  v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v14(v13, a1, v9);
  v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v16 = swift_allocObject();
  v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_233B7FA8C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_233B7BCE4;
  aBlock[3] = &block_descriptor_121;
  v18 = _Block_copy(aBlock);
  swift_release();
  v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_233BD89E4();
  swift_unknownObjectRelease();
  sub_233B7410C((uint64_t)aBlock, (uint64_t)v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25424FEE0);
  if (swift_dynamicCast())
  {
    v20 = v30;
    v14(v13, a1, v9);
    v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    v22 = v26;
    *(_QWORD *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v25;
    v29(v20, v22, v27, sub_233B7FAC4, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_233B74300((unint64_t *)&qword_256123B10, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v31[0] = v23;
    sub_233BD8894();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_233B7997C(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  unint64_t v15;
  uint64_t v16;
  void (*v17)(unint64_t, char *, uint64_t);
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t);
  uint64_t v30;
  uint64_t v31[4];
  _QWORD aBlock[6];

  v25 = a7;
  v26 = a5;
  v27 = a6;
  v28 = a4;
  v29 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123C38);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9, v12);
  v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v14(v13, a1, v9);
  v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v16 = swift_allocObject();
  v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_233B7FA8C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_233B7BCE4;
  aBlock[3] = &block_descriptor_112;
  v18 = _Block_copy(aBlock);
  swift_release();
  v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_233BD89E4();
  swift_unknownObjectRelease();
  sub_233B7410C((uint64_t)aBlock, (uint64_t)v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25424FEE0);
  if (swift_dynamicCast())
  {
    v20 = v30;
    v14(v13, a1, v9);
    v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    v22 = v26;
    *(_QWORD *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v25;
    v29(v20, v22, v27, sub_233B7FAC4, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_233B74300((unint64_t *)&qword_256123B10, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v31[0] = v23;
    sub_233BD8894();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_233B79C08(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  unint64_t v15;
  uint64_t v16;
  void (*v17)(unint64_t, char *, uint64_t);
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t);
  uint64_t v30;
  uint64_t v31[4];
  _QWORD aBlock[6];

  v25 = a7;
  v26 = a5;
  v27 = a6;
  v28 = a4;
  v29 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123DE8);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9, v12);
  v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v14(v13, a1, v9);
  v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v16 = swift_allocObject();
  v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_233B80384;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_233B7BCE4;
  aBlock[3] = &block_descriptor_103;
  v18 = _Block_copy(aBlock);
  swift_release();
  v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_233BD89E4();
  swift_unknownObjectRelease();
  sub_233B7410C((uint64_t)aBlock, (uint64_t)v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25424FEE0);
  if (swift_dynamicCast())
  {
    v20 = v30;
    v14(v13, a1, v9);
    v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    v22 = v26;
    *(_QWORD *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v25;
    v29(v20, v22, v27, sub_233B803A4, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_233B74300((unint64_t *)&qword_256123B10, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v31[0] = v23;
    sub_233BD8894();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_233B79E94(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  unint64_t v15;
  uint64_t v16;
  void (*v17)(unint64_t, char *, uint64_t);
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t);
  uint64_t v30;
  uint64_t v31[4];
  _QWORD aBlock[6];

  v25 = a7;
  v26 = a5;
  v27 = a6;
  v28 = a4;
  v29 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123C38);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9, v12);
  v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v14(v13, a1, v9);
  v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v16 = swift_allocObject();
  v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_233B7FA8C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_233B7BCE4;
  aBlock[3] = &block_descriptor_94;
  v18 = _Block_copy(aBlock);
  swift_release();
  v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_233BD89E4();
  swift_unknownObjectRelease();
  sub_233B7410C((uint64_t)aBlock, (uint64_t)v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25424FEE0);
  if (swift_dynamicCast())
  {
    v20 = v30;
    v14(v13, a1, v9);
    v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    v22 = v26;
    *(_QWORD *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v25;
    v29(v20, v22, v27, sub_233B7FAC4, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_233B74300((unint64_t *)&qword_256123B10, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v31[0] = v23;
    sub_233BD8894();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_233B7A120(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, unint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  unint64_t v15;
  uint64_t v16;
  void (*v17)(unint64_t, char *, uint64_t);
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, unint64_t), uint64_t);
  uint64_t v30;
  uint64_t v31[4];
  _QWORD aBlock[6];

  v25 = a7;
  v26 = a5;
  v27 = a6;
  v28 = a4;
  v29 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123D90);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9, v12);
  v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v14(v13, a1, v9);
  v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v16 = swift_allocObject();
  v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_233B801F4;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_233B7BCE4;
  aBlock[3] = &block_descriptor_85;
  v18 = _Block_copy(aBlock);
  swift_release();
  v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_233BD89E4();
  swift_unknownObjectRelease();
  sub_233B7410C((uint64_t)aBlock, (uint64_t)v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25424FEE0);
  if (swift_dynamicCast())
  {
    v20 = v30;
    v14(v13, a1, v9);
    v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    v22 = v26;
    *(_QWORD *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v25;
    v29(v20, v22, v27, sub_233B80214, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_233B74300((unint64_t *)&qword_256123B10, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v31[0] = v23;
    sub_233BD8894();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_233B7A3AC(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  unint64_t v15;
  uint64_t v16;
  void (*v17)(unint64_t, char *, uint64_t);
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t);
  uint64_t v30;
  uint64_t v31[4];
  _QWORD aBlock[6];

  v25 = a7;
  v26 = a5;
  v27 = a6;
  v28 = a4;
  v29 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FDA8);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9, v12);
  v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v14(v13, a1, v9);
  v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v16 = swift_allocObject();
  v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_233B800D0;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_233B7BCE4;
  aBlock[3] = &block_descriptor_76;
  v18 = _Block_copy(aBlock);
  swift_release();
  v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_233BD89E4();
  swift_unknownObjectRelease();
  sub_233B7410C((uint64_t)aBlock, (uint64_t)v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25424FEE0);
  if (swift_dynamicCast())
  {
    v20 = v30;
    v14(v13, a1, v9);
    v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    v22 = v26;
    *(_QWORD *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v25;
    v29(v20, v22, v27, sub_233B800F0, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_233B74300((unint64_t *)&qword_256123B10, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v31[0] = v23;
    sub_233BD8894();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_233B7A638(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  unint64_t v15;
  uint64_t v16;
  void (*v17)(unint64_t, char *, uint64_t);
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t);
  uint64_t v30;
  uint64_t v31[4];
  _QWORD aBlock[6];

  v25 = a7;
  v26 = a5;
  v27 = a6;
  v28 = a4;
  v29 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123C38);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9, v12);
  v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v14(v13, a1, v9);
  v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v16 = swift_allocObject();
  v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_233B7FA8C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_233B7BCE4;
  aBlock[3] = &block_descriptor_67;
  v18 = _Block_copy(aBlock);
  swift_release();
  v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_233BD89E4();
  swift_unknownObjectRelease();
  sub_233B7410C((uint64_t)aBlock, (uint64_t)v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25424FEE0);
  if (swift_dynamicCast())
  {
    v20 = v30;
    v14(v13, a1, v9);
    v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    v22 = v26;
    *(_QWORD *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v25;
    v29(v20, v22, v27, sub_233B7FAC4, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_233B74300((unint64_t *)&qword_256123B10, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v31[0] = v23;
    sub_233BD8894();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_233B7A8C4(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  unint64_t v15;
  uint64_t v16;
  void (*v17)(unint64_t, char *, uint64_t);
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t);
  uint64_t v30;
  uint64_t v31[4];
  _QWORD aBlock[6];

  v25 = a7;
  v26 = a5;
  v27 = a6;
  v28 = a4;
  v29 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123C38);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9, v12);
  v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v14(v13, a1, v9);
  v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v16 = swift_allocObject();
  v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_233B7FA8C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_233B7BCE4;
  aBlock[3] = &block_descriptor_58;
  v18 = _Block_copy(aBlock);
  swift_release();
  v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_233BD89E4();
  swift_unknownObjectRelease();
  sub_233B7410C((uint64_t)aBlock, (uint64_t)v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25424FEE0);
  if (swift_dynamicCast())
  {
    v20 = v30;
    v14(v13, a1, v9);
    v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    v22 = v26;
    *(_QWORD *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v25;
    v29(v20, v22, v27, sub_233B7FAC4, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_233B74300((unint64_t *)&qword_256123B10, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v31[0] = v23;
    sub_233BD8894();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_233B7AB50(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, unint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  unint64_t v15;
  uint64_t v16;
  void (*v17)(unint64_t, char *, uint64_t);
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, unint64_t), uint64_t);
  uint64_t v30;
  uint64_t v31[4];
  _QWORD aBlock[6];

  v25 = a7;
  v26 = a5;
  v27 = a6;
  v28 = a4;
  v29 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123D08);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9, v12);
  v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v14(v13, a1, v9);
  v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v16 = swift_allocObject();
  v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_233B7FF0C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_233B7BCE4;
  aBlock[3] = &block_descriptor_49;
  v18 = _Block_copy(aBlock);
  swift_release();
  v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_233BD89E4();
  swift_unknownObjectRelease();
  sub_233B7410C((uint64_t)aBlock, (uint64_t)v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25424FEE0);
  if (swift_dynamicCast())
  {
    v20 = v30;
    v14(v13, a1, v9);
    v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    v22 = v26;
    *(_QWORD *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v25;
    v29(v20, v22, v27, sub_233B7FF2C, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_233B74300((unint64_t *)&qword_256123B10, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v31[0] = v23;
    sub_233BD8894();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_233B7ADDC(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  unint64_t v15;
  uint64_t v16;
  void (*v17)(unint64_t, char *, uint64_t);
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t);
  uint64_t v30;
  uint64_t v31[4];
  _QWORD aBlock[6];

  v25 = a7;
  v26 = a5;
  v27 = a6;
  v28 = a4;
  v29 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123C38);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9, v12);
  v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v14(v13, a1, v9);
  v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v16 = swift_allocObject();
  v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_233B7FA8C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_233B7BCE4;
  aBlock[3] = &block_descriptor_0;
  v18 = _Block_copy(aBlock);
  swift_release();
  v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_233BD89E4();
  swift_unknownObjectRelease();
  sub_233B7410C((uint64_t)aBlock, (uint64_t)v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25424FEE0);
  if (swift_dynamicCast())
  {
    v20 = v30;
    v14(v13, a1, v9);
    v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    v22 = v26;
    *(_QWORD *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v25;
    v29(v20, v22, v27, sub_233B7FAC4, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_233B74300((unint64_t *)&qword_256123B10, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v31[0] = v23;
    sub_233BD8894();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_233B7B068(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  unint64_t v15;
  uint64_t v16;
  void (*v17)(unint64_t, char *, uint64_t);
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t);
  uint64_t v30;
  uint64_t v31[4];
  _QWORD aBlock[6];

  v25 = a7;
  v26 = a5;
  v27 = a6;
  v28 = a4;
  v29 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123C38);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9, v12);
  v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v14(v13, a1, v9);
  v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v16 = swift_allocObject();
  v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_233B7FA8C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_233B7BCE4;
  aBlock[3] = &block_descriptor_40;
  v18 = _Block_copy(aBlock);
  swift_release();
  v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_233BD89E4();
  swift_unknownObjectRelease();
  sub_233B7410C((uint64_t)aBlock, (uint64_t)v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25424FEE0);
  if (swift_dynamicCast())
  {
    v20 = v30;
    v14(v13, a1, v9);
    v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    v22 = v26;
    *(_QWORD *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v25;
    v29(v20, v22, v27, sub_233B7FAC4, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_233B74300((unint64_t *)&qword_256123B10, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v31[0] = v23;
    sub_233BD8894();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_233B7B2F4(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  unint64_t v15;
  uint64_t v16;
  void (*v17)(unint64_t, char *, uint64_t);
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t);
  uint64_t v30;
  uint64_t v31[4];
  _QWORD aBlock[6];

  v25 = a7;
  v26 = a5;
  v27 = a6;
  v28 = a4;
  v29 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123CB8);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9, v12);
  v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v14(v13, a1, v9);
  v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v16 = swift_allocObject();
  v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_233B7FD20;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_233B7BCE4;
  aBlock[3] = &block_descriptor_31;
  v18 = _Block_copy(aBlock);
  swift_release();
  v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_233BD89E4();
  swift_unknownObjectRelease();
  sub_233B7410C((uint64_t)aBlock, (uint64_t)v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25424FEE0);
  if (swift_dynamicCast())
  {
    v20 = v30;
    v14(v13, a1, v9);
    v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    v22 = v26;
    *(_QWORD *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v25;
    v29(v20, v22, v27, sub_233B7FD40, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_233B74300((unint64_t *)&qword_256123B10, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v31[0] = v23;
    sub_233BD8894();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_233B7B580(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  unint64_t v15;
  uint64_t v16;
  void (*v17)(unint64_t, char *, uint64_t);
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t);
  uint64_t v30;
  uint64_t v31[4];
  _QWORD aBlock[6];

  v25 = a7;
  v26 = a5;
  v27 = a6;
  v28 = a4;
  v29 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123C80);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9, v12);
  v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v14(v13, a1, v9);
  v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v16 = swift_allocObject();
  v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_233B7FC1C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_233B7BCE4;
  aBlock[3] = &block_descriptor_22;
  v18 = _Block_copy(aBlock);
  swift_release();
  v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_233BD89E4();
  swift_unknownObjectRelease();
  sub_233B7410C((uint64_t)aBlock, (uint64_t)v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25424FEE0);
  if (swift_dynamicCast())
  {
    v20 = v30;
    v14(v13, a1, v9);
    v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    v22 = v26;
    *(_QWORD *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v25;
    v29(v20, v22, v27, sub_233B7FC3C, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_233B74300((unint64_t *)&qword_256123B10, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v31[0] = v23;
    sub_233BD8894();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_233B7B80C(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2), uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  unint64_t v15;
  uint64_t v16;
  void (*v17)(unint64_t, char *, uint64_t);
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t);
  uint64_t v30;
  uint64_t v31[4];
  _QWORD aBlock[6];

  v25 = a7;
  v26 = a5;
  v27 = a6;
  v28 = a4;
  v29 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123C38);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9, v12);
  v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v14(v13, a1, v9);
  v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v16 = swift_allocObject();
  v17 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v17(v16 + v15, v13, v9);
  aBlock[4] = sub_233B7FB00;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_233B7BCE4;
  aBlock[3] = &block_descriptor_13_0;
  v18 = _Block_copy(aBlock);
  swift_release();
  v19 = objc_msgSend(a2, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_233BD89E4();
  swift_unknownObjectRelease();
  sub_233B7410C((uint64_t)aBlock, (uint64_t)v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25424FEE0);
  if (swift_dynamicCast())
  {
    v20 = v30;
    v14(v13, a1, v9);
    v21 = swift_allocObject();
    v17(v21 + v15, v13, v9);
    v22 = v26;
    *(_QWORD *)(v21 + ((v15 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v25;
    v29(v20, v22, v27, sub_233B7FAC4, v21);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_233B74300((unint64_t *)&qword_256123B10, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v31[0] = v23;
    sub_233BD8894();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
}

uint64_t sub_233B7BA98(void *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  uint8_t *v19;
  uint64_t v20;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v5 = sub_233BD8780();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_233BD8738();
  v10 = a1;
  v11 = a1;
  v12 = sub_233BD8768();
  v13 = sub_233BD896C();
  if (os_log_type_enabled(v12, v13))
  {
    v24 = v5;
    v14 = swift_slowAlloc();
    v23 = v6;
    v15 = (uint8_t *)v14;
    v22 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v15 = 138543362;
    v16 = a1;
    v17 = _swift_stdlib_bridgeErrorToNSError();
    v25 = v17;
    v5 = v24;
    sub_233BD89CC();
    v18 = v22;
    *v22 = v17;

    _os_log_impl(&dword_233B6C000, v12, v13, "Error fetching remote object proxy: %{public}@", v15, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256123B18);
    swift_arrayDestroy();
    MEMORY[0x23493E3B4](v18, -1, -1);
    v19 = v15;
    v6 = v23;
    MEMORY[0x23493E3B4](v19, -1, -1);
  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  type metadata accessor for MarketplaceKitError();
  sub_233B74300((unint64_t *)&qword_256123B10, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
  v20 = swift_allocError();
  swift_storeEnumTagMultiPayload();
  v25 = v20;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  return sub_233BD8894();
}

void sub_233B7BCE4(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_233B7BD34(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6, unint64_t *a7, uint64_t *a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v19;

  v14 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_233B7D3EC(a1, a2, a5, a6, a7, (uint64_t)v17);
  sub_233B7E670((uint64_t)v17, a5, a8);
  return sub_233B71DBC((uint64_t)v17, a5);
}

uint64_t sub_233B7BDF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t, uint64_t), void (*a7)(char *))
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;

  v12 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  a6(a1, a2);
  a7(v15);
  return sub_233B71DBC((uint64_t)v15, a5);
}

uint64_t sub_233B7BE9C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t *v31;
  char *v32;

  v24 = a3;
  v5 = sub_233BD8780();
  v22[0] = *(_QWORD *)(v5 - 8);
  v22[1] = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v7 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x24BDAC7A8](v7, v8);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123B20);
  MEMORY[0x24BDAC7A8](v23, v9);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123EC0);
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v17);
  v19 = (char *)v22 - v18;
  v29 = a1;
  v30 = a2;
  v31 = &v29;
  v32 = (char *)v22 - v18;
  sub_233B71CAC(a1, a2);
  v27 = v12;
  v28 = MEMORY[0x24BDCDDE8];
  v26 = sub_233B71CF0();
  v25 = sub_233B808EC(&qword_256123EC8, &qword_256123EC0);
  sub_233BD863C();
  sub_233B71B8C(v29, v30);
  sub_233B71D78((uint64_t)v19, (uint64_t)v16, &qword_256123EC0);
  if (swift_getEnumCaseMultiPayload() == 1)
    sub_233B7FD64((uint64_t)v16, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
  else
    *v11 = *v16;
  v20 = v24;
  swift_storeEnumTagMultiPayload();
  sub_233B8092C((uint64_t)v11, v20, &qword_256123B20);
  return sub_233B71DBC((uint64_t)v19, &qword_256123EC0);
}

uint64_t sub_233B7C2DC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char v20;
  uint64_t v21;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  char *v33;

  v25 = a3;
  v5 = sub_233BD8780();
  v23[0] = *(_QWORD *)(v5 - 8);
  v23[1] = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v7 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x24BDAC7A8](v7, v8);
  v24 = __swift_instantiateConcreteTypeFromMangledName(qword_25424FFB0);
  MEMORY[0x24BDAC7A8](v24, v9);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FEA8);
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v16 = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v17);
  v19 = (char *)v23 - v18;
  v30 = a1;
  v31 = a2;
  v32 = &v30;
  v33 = (char *)v23 - v18;
  sub_233B71CAC(a1, a2);
  v28 = v12;
  v29 = MEMORY[0x24BDCDDE8];
  v27 = sub_233B71CF0();
  v26 = sub_233B808EC(&qword_25424FEA0, &qword_25424FEA8);
  sub_233BD863C();
  sub_233B71B8C(v30, v31);
  sub_233B71D78((uint64_t)v19, (uint64_t)v16, &qword_25424FEA8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233B7FD64((uint64_t)v16, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
  }
  else
  {
    v20 = v16[16];
    *(_OWORD *)v11 = *(_OWORD *)v16;
    v11[16] = v20;
  }
  v21 = v25;
  swift_storeEnumTagMultiPayload();
  sub_233B8092C((uint64_t)v11, v21, qword_25424FFB0);
  return sub_233B71DBC((uint64_t)v19, &qword_25424FEA8);
}

uint64_t sub_233B7C724@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t *v31;
  char *v32;

  v24 = a3;
  v5 = sub_233BD8780();
  v22[0] = *(_QWORD *)(v5 - 8);
  v22[1] = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v7 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x24BDAC7A8](v7, v8);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123AE8);
  MEMORY[0x24BDAC7A8](v23, v9);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123C40);
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v17);
  v19 = (char *)v22 - v18;
  v29 = a1;
  v30 = a2;
  v31 = &v29;
  v32 = (char *)v22 - v18;
  sub_233B71CAC(a1, a2);
  v27 = v12;
  v28 = MEMORY[0x24BDCDDE8];
  v26 = sub_233B71CF0();
  v25 = sub_233B808EC(&qword_256123C48, &qword_256123C40);
  sub_233BD863C();
  sub_233B71B8C(v29, v30);
  sub_233B71D78((uint64_t)v19, (uint64_t)v16, &qword_256123C40);
  if (swift_getEnumCaseMultiPayload() == 1)
    sub_233B7FD64((uint64_t)v16, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
  else
    *v11 = *v16;
  v20 = v24;
  swift_storeEnumTagMultiPayload();
  sub_233B8092C((uint64_t)v11, v20, &qword_256123AE8);
  return sub_233B71DBC((uint64_t)v19, &qword_256123C40);
}

uint64_t sub_233B7CB64@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t *v31;
  char *v32;

  v24 = a3;
  v5 = sub_233BD8780();
  v22[0] = *(_QWORD *)(v5 - 8);
  v22[1] = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v7 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x24BDAC7A8](v7, v8);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123E78);
  MEMORY[0x24BDAC7A8](v23, v9);
  v11 = (_QWORD *)((char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123E80);
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v16 = (_QWORD *)((char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v14, v17);
  v19 = (char *)v22 - v18;
  v29 = a1;
  v30 = a2;
  v31 = &v29;
  v32 = (char *)v22 - v18;
  sub_233B71CAC(a1, a2);
  v27 = v12;
  v28 = MEMORY[0x24BDCDDE8];
  v26 = sub_233B71CF0();
  v25 = sub_233B808EC(&qword_256123E88, &qword_256123E80);
  sub_233BD863C();
  sub_233B71B8C(v29, v30);
  sub_233B71D78((uint64_t)v19, (uint64_t)v16, &qword_256123E80);
  if (swift_getEnumCaseMultiPayload() == 1)
    sub_233B7FD64((uint64_t)v16, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
  else
    *v11 = *v16;
  v20 = v24;
  swift_storeEnumTagMultiPayload();
  sub_233B8092C((uint64_t)v11, v20, &qword_256123E78);
  return sub_233B71DBC((uint64_t)v19, &qword_256123E80);
}

uint64_t sub_233B7CFA4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  char *v34;

  v26 = a3;
  v5 = sub_233BD8780();
  v24[0] = *(_QWORD *)(v5 - 8);
  v24[1] = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v7 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x24BDAC7A8](v7, v8);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123DF0);
  MEMORY[0x24BDAC7A8](v25, v9);
  v11 = (_OWORD *)((char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123DF8);
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v16 = (_OWORD *)((char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v14, v17);
  v19 = (char *)v24 - v18;
  v31 = a1;
  v32 = a2;
  v33 = &v31;
  v34 = (char *)v24 - v18;
  sub_233B71CAC(a1, a2);
  v29 = v12;
  v30 = MEMORY[0x24BDCDDE8];
  v28 = sub_233B71CF0();
  v27 = sub_233B808EC(&qword_256123E00, &qword_256123DF8);
  sub_233BD863C();
  sub_233B71B8C(v31, v32);
  sub_233B71D78((uint64_t)v19, (uint64_t)v16, &qword_256123DF8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233B7FD64((uint64_t)v16, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
  }
  else
  {
    v20 = v16[1];
    *v11 = *v16;
    v11[1] = v20;
    v21 = v16[3];
    v11[2] = v16[2];
    v11[3] = v21;
  }
  v22 = v26;
  swift_storeEnumTagMultiPayload();
  sub_233B8092C((uint64_t)v11, v22, &qword_256123DF0);
  return sub_233B71DBC((uint64_t)v19, &qword_256123DF8);
}

uint64_t sub_233B7D3EC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, unint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t *v27;
  uint64_t v28;
  _QWORD v30[3];
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t *v40;
  char *v41;

  v33 = a6;
  v11 = sub_233BD8780();
  v30[1] = *(_QWORD *)(v11 - 8);
  v30[2] = v11;
  MEMORY[0x24BDAC7A8](v11, v12);
  v30[0] = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x24BDAC7A8](v14, v15);
  v31 = a3;
  v32 = __swift_instantiateConcreteTypeFromMangledName(a3);
  MEMORY[0x24BDAC7A8](v32, v16);
  v18 = (char *)v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v21 = MEMORY[0x24BDAC7A8](v19, v20);
  v23 = (char *)v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21, v24);
  v26 = (char *)v30 - v25;
  v38 = a1;
  v39 = a2;
  v40 = &v38;
  v41 = (char *)v30 - v25;
  sub_233B71CAC(a1, a2);
  v36 = v19;
  v37 = MEMORY[0x24BDCDDE8];
  v35 = sub_233B71CF0();
  v34 = sub_233B808EC(a5, a4);
  sub_233BD863C();
  v27 = v31;
  sub_233B71B8C(v38, v39);
  sub_233B71D78((uint64_t)v26, (uint64_t)v23, a4);
  if (swift_getEnumCaseMultiPayload() == 1)
    sub_233B7FD64((uint64_t)v23, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
  v28 = v33;
  swift_storeEnumTagMultiPayload();
  sub_233B8092C((uint64_t)v18, v28, v27);
  return sub_233B71DBC((uint64_t)v26, a4);
}

uint64_t sub_233B7D828@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t (*v22)(_QWORD);
  _QWORD v24[5];
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  char *v33;

  v25 = a3;
  v5 = sub_233BD8780();
  v24[2] = *(_QWORD *)(v5 - 8);
  v24[3] = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v24[4] = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x24BDAC7A8](v8, v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123CC0);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123CC8);
  v16 = MEMORY[0x24BDAC7A8](v14, v15);
  v18 = (char *)v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16, v19);
  v21 = (char *)v24 - v20;
  v30 = a1;
  v31 = a2;
  v32 = &v30;
  v33 = (char *)v24 - v20;
  sub_233B71CAC(a1, a2);
  v28 = v14;
  v29 = MEMORY[0x24BDCDDE8];
  v27 = sub_233B71CF0();
  v26 = sub_233B808EC(&qword_256123CD0, &qword_256123CC8);
  sub_233BD863C();
  sub_233B71B8C(v30, v31);
  sub_233B71D78((uint64_t)v21, (uint64_t)v18, &qword_256123CC8);
  if (swift_getEnumCaseMultiPayload() == 1)
    v22 = (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError;
  else
    v22 = type metadata accessor for SecureButtonActionResponse;
  sub_233B7FD64((uint64_t)v18, (uint64_t)v13, v22);
  swift_storeEnumTagMultiPayload();
  sub_233B8092C((uint64_t)v13, v25, &qword_256123CC0);
  return sub_233B71DBC((uint64_t)v21, &qword_256123CC8);
}

uint64_t sub_233B7DC70@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  __int128 v20;
  uint64_t v21;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  char *v33;

  v25 = a3;
  v5 = sub_233BD8780();
  v23[0] = *(_QWORD *)(v5 - 8);
  v23[1] = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v7 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x24BDAC7A8](v7, v8);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123C88);
  MEMORY[0x24BDAC7A8](v24, v9);
  v11 = (_OWORD *)((char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123C90);
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v16 = (_OWORD *)((char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v14, v17);
  v19 = (char *)v23 - v18;
  v30 = a1;
  v31 = a2;
  v32 = &v30;
  v33 = (char *)v23 - v18;
  sub_233B71CAC(a1, a2);
  v28 = v12;
  v29 = MEMORY[0x24BDCDDE8];
  v27 = sub_233B71CF0();
  v26 = sub_233B808EC(&qword_256123C98, &qword_256123C90);
  sub_233BD863C();
  sub_233B71B8C(v30, v31);
  sub_233B71D78((uint64_t)v19, (uint64_t)v16, &qword_256123C90);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233B7FD64((uint64_t)v16, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
  }
  else
  {
    v20 = v16[1];
    *v11 = *v16;
    v11[1] = v20;
  }
  v21 = v25;
  swift_storeEnumTagMultiPayload();
  sub_233B8092C((uint64_t)v11, v21, &qword_256123C88);
  return sub_233B71DBC((uint64_t)v19, &qword_256123C90);
}

uint64_t sub_233B7E0B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  __int128 v14;
  char v15;

  v2 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_25424FFB0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_233B71D78(a1, (uint64_t)v9, qword_25424FFB0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233B7FD64((uint64_t)v9, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
    sub_233B74300((unint64_t *)&qword_256123B10, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v10 = swift_allocError();
    sub_233B7FD64((uint64_t)v5, v11, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
    *(_QWORD *)&v14 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25424FDA8);
    return sub_233BD8894();
  }
  else
  {
    v13 = v9[16];
    v14 = *(_OWORD *)v9;
    v15 = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25424FDA8);
    return sub_233BD88A0();
  }
}

uint64_t sub_233B7E224(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[8];
  uint64_t v14;

  v2 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123AE8);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_233B71D78(a1, (uint64_t)v9, &qword_256123AE8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233B7FD64((uint64_t)v9, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
    sub_233B74300((unint64_t *)&qword_256123B10, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v10 = swift_allocError();
    sub_233B7FD64((uint64_t)v5, v11, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
    v14 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256123C38);
    return sub_233BD8894();
  }
  else
  {
    v13[7] = *v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256123C38);
    return sub_233BD88A0();
  }
}

uint64_t sub_233B7E390(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v2 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123E78);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (uint64_t *)((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_233B71D78(a1, (uint64_t)v9, &qword_256123E78);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233B7FD64((uint64_t)v9, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
    sub_233B74300((unint64_t *)&qword_256123B10, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v10 = swift_allocError();
    sub_233B7FD64((uint64_t)v5, v11, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
    v14 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256123E70);
    return sub_233BD8894();
  }
  else
  {
    v14 = *v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256123E70);
    return sub_233BD88A0();
  }
}

uint64_t sub_233B7E4FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  _OWORD v15[4];

  v2 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123DF0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (_OWORD *)((char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_233B71D78(a1, (uint64_t)v9, &qword_256123DF0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233B7FD64((uint64_t)v9, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
    sub_233B74300((unint64_t *)&qword_256123B10, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v10 = swift_allocError();
    sub_233B7FD64((uint64_t)v5, v11, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
    *(_QWORD *)&v15[0] = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256123DE8);
    return sub_233BD8894();
  }
  else
  {
    v13 = v9[1];
    v15[0] = *v9;
    v15[1] = v13;
    v14 = v9[3];
    v15[2] = v9[2];
    v15[3] = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256123DE8);
    return sub_233BD88A0();
  }
}

uint64_t sub_233B7E670(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];

  v6 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(a2);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_233B71D78(a1, (uint64_t)v13, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233B7FD64((uint64_t)v13, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
    sub_233B74300((unint64_t *)&qword_256123B10, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v14 = swift_allocError();
    sub_233B7FD64((uint64_t)v9, v15, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
    v17[1] = v14;
    __swift_instantiateConcreteTypeFromMangledName(a3);
    return sub_233BD8894();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    return sub_233BD88A0();
  }
}

uint64_t sub_233B7E7C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];

  v2 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SecureButtonActionResponse(0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123CC0);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_233B71D78(a1, (uint64_t)v13, &qword_256123CC0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233B7FD64((uint64_t)v13, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
    sub_233B74300((unint64_t *)&qword_256123B10, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v14 = swift_allocError();
    sub_233B7FD64((uint64_t)v5, v15, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
    v17[1] = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256123CB8);
    return sub_233BD8894();
  }
  else
  {
    sub_233B7FD64((uint64_t)v13, (uint64_t)v9, type metadata accessor for SecureButtonActionResponse);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256123CB8);
    return sub_233BD88A0();
  }
}

uint64_t sub_233B7E974(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  _OWORD v14[2];

  v2 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123C88);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (_OWORD *)((char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_233B71D78(a1, (uint64_t)v9, &qword_256123C88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_233B7FD64((uint64_t)v9, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
    sub_233B74300((unint64_t *)&qword_256123B10, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v10 = swift_allocError();
    sub_233B7FD64((uint64_t)v5, v11, (uint64_t (*)(_QWORD))type metadata accessor for MarketplaceKitError);
    *(_QWORD *)&v14[0] = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256123C80);
    return sub_233BD8894();
  }
  else
  {
    v13 = v9[1];
    v14[0] = *v9;
    v14[1] = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256123C80);
    return sub_233BD88A0();
  }
}

void sub_233B7EAE0(uint64_t a1, char a2, void (*a3)(uint64_t *__return_ptr, id *, _QWORD *))
{
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t *v7;
  _QWORD *v8;
  uint64_t *v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  _QWORD *v27;
  uint64_t v28;
  void *v29;
  _QWORD *v30;
  uint64_t v31;
  unint64_t v32;
  id v33;
  id v35;
  uint64_t v36;
  id v37[2];
  uint64_t v38;
  unint64_t v39;
  _QWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v4 = v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v35 = v4;
  v7 = (uint64_t *)(swift_bridgeObjectRetain() + 56);
  while (1)
  {
    v36 = v5;
    v14 = *(v7 - 2);
    v16 = *(v7 - 1);
    v17 = *v7;
    v41 = *(v7 - 3);
    v15 = v41;
    v42 = v14;
    v40[0] = v16;
    v40[1] = v17;
    v18 = *(_QWORD **)v43;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = sub_233BBFEEC(v15, v14);
    v21 = v18[2];
    v22 = (v19 & 1) == 0;
    v23 = v21 + v22;
    if (__OFADD__(v21, v22))
    {
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_233BD8CA8();
      __break(1u);
      goto LABEL_24;
    }
    v24 = v19;
    if (v18[3] < v23)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v19 & 1) != 0)
        goto LABEL_13;
    }
    else
    {
      sub_233BC0144();
      if ((v24 & 1) != 0)
        goto LABEL_13;
    }
LABEL_3:
    v8 = *(_QWORD **)v43;
    v8[(v20 >> 6) + 8] |= 1 << v20;
    v9 = (uint64_t *)(v8[6] + 16 * v20);
    *v9 = v15;
    v9[1] = v14;
    v10 = (_QWORD *)(v8[7] + 16 * v20);
    *v10 = v16;
    v10[1] = v17;
    v11 = v8[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_22;
    v8[2] = v13;
LABEL_5:
    v7 += 4;
    a2 = 1;
    --v5;
    if (v36 == 1)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_233BC049C(v23, a2 & 1);
  v25 = sub_233BBFEEC(v15, v14);
  if ((v24 & 1) != (v26 & 1))
    goto LABEL_23;
  v20 = v25;
  if ((v24 & 1) == 0)
    goto LABEL_3;
LABEL_13:
  v27 = *(_QWORD **)v43;
  v28 = *(_QWORD *)(*(_QWORD *)v43 + 56) + 16 * v20;
  v29 = *(void **)(v28 + 8);
  v37[0] = *(id *)v28;
  v37[1] = v29;
  swift_bridgeObjectRetain();
  a3(&v38, v37, v40);
  if (!v35)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v30 = (_QWORD *)(v27[7] + 16 * v20);
    v31 = v38;
    v32 = v39;
    swift_bridgeObjectRelease();
    *v30 = v31;
    v30[1] = v32;
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  v37[0] = v35;
  v33 = v35;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25424FDB0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_24:
  v38 = 0;
  v39 = 0xE000000000000000;
  sub_233BD8A8C();
  sub_233BD8828();
  sub_233BD8AD4();
  sub_233BD8828();
  sub_233BD8AEC();
  __break(1u);
}

uint64_t sub_233B7EE24(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_233B7F624(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_233B7EE40(uint64_t result, unint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 2:
    case 3:
    case 7:
    case 8:
      result = swift_bridgeObjectRelease();
      break;
    case 4:
      result = sub_233B71B8C(result, a2);
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_233B7EE7C()
{
  unint64_t result;

  result = qword_256123B90;
  if (!qword_256123B90)
  {
    result = MEMORY[0x23493E300](&unk_233BDA03C, &type metadata for LocalizedStringsRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256123B90);
  }
  return result;
}

unint64_t sub_233B7EEC0()
{
  unint64_t result;

  result = qword_256123BA8;
  if (!qword_256123BA8)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for LocalizedStringsRequest.LocalizedString, &type metadata for LocalizedStringsRequest.LocalizedString);
    atomic_store(result, (unint64_t *)&qword_256123BA8);
  }
  return result;
}

uint64_t sub_233B7EF04(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256123B98);
    v8 = a2();
    result = MEMORY[0x23493E300](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_233B7EF6C()
{
  unint64_t result;

  result = qword_256123BC0;
  if (!qword_256123BC0)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for LocalizedStringsRequest.LocalizedString, &type metadata for LocalizedStringsRequest.LocalizedString);
    atomic_store(result, (unint64_t *)&qword_256123BC0);
  }
  return result;
}

unint64_t sub_233B7EFB0()
{
  unint64_t result;

  result = qword_256123BD0;
  if (!qword_256123BD0)
  {
    result = MEMORY[0x23493E300](&unk_233BD9FEC, &type metadata for LocalizedStringsResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256123BD0);
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizedStringsRequest()
{
  return &type metadata for LocalizedStringsRequest;
}

_QWORD *sub_233B7F008(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for LocalizedStringsRequest.LocalizedString(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for LocalizedStringsRequest.LocalizedString(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalizedStringsRequest.LocalizedString(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocalizedStringsRequest.LocalizedString(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizedStringsRequest.LocalizedString()
{
  return &type metadata for LocalizedStringsRequest.LocalizedString;
}

ValueMetadata *type metadata accessor for LocalizedStringsResponse()
{
  return &type metadata for LocalizedStringsResponse;
}

uint64_t sub_233B7F1B0()
{
  return 0;
}

ValueMetadata *type metadata accessor for LocalizedStringsResponse.CodingKeys()
{
  return &type metadata for LocalizedStringsResponse.CodingKeys;
}

uint64_t getEnumTagSinglePayload for InstallSheetContext.Source.AppStoreWithContextCodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s14MarketplaceKit24LocalizedStringsResponseV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_233B7F258 + 4 * byte_233BD9C45[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_233B7F278 + 4 * byte_233BD9C4A[v4]))();
}

_BYTE *sub_233B7F258(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_233B7F278(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233B7F280(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233B7F288(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233B7F290(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233B7F298(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for LocalizedStringsRequest.CodingKeys()
{
  return &type metadata for LocalizedStringsRequest.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for LocalizedStringsRequest.LocalizedString.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_233B7F300 + 4 * byte_233BD9C54[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_233B7F334 + 4 * byte_233BD9C4F[v4]))();
}

uint64_t sub_233B7F334(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233B7F33C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233B7F344);
  return result;
}

uint64_t sub_233B7F350(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233B7F358);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_233B7F35C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233B7F364(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LocalizedStringsRequest.LocalizedString.CodingKeys()
{
  return &type metadata for LocalizedStringsRequest.LocalizedString.CodingKeys;
}

unint64_t sub_233B7F384()
{
  unint64_t result;

  result = qword_256123BE0;
  if (!qword_256123BE0)
  {
    result = MEMORY[0x23493E300](&unk_233BD9E54, &type metadata for LocalizedStringsRequest.LocalizedString.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256123BE0);
  }
  return result;
}

unint64_t sub_233B7F3CC()
{
  unint64_t result;

  result = qword_256123BE8;
  if (!qword_256123BE8)
  {
    result = MEMORY[0x23493E300](&unk_233BD9F0C, &type metadata for LocalizedStringsRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256123BE8);
  }
  return result;
}

unint64_t sub_233B7F414()
{
  unint64_t result;

  result = qword_256123BF0;
  if (!qword_256123BF0)
  {
    result = MEMORY[0x23493E300](&unk_233BD9FC4, &type metadata for LocalizedStringsResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256123BF0);
  }
  return result;
}

unint64_t sub_233B7F45C()
{
  unint64_t result;

  result = qword_256123BF8;
  if (!qword_256123BF8)
  {
    result = MEMORY[0x23493E300](&unk_233BD9F34, &type metadata for LocalizedStringsResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256123BF8);
  }
  return result;
}

unint64_t sub_233B7F4A4()
{
  unint64_t result;

  result = qword_256123C00;
  if (!qword_256123C00)
  {
    result = MEMORY[0x23493E300](&unk_233BD9F5C, &type metadata for LocalizedStringsResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256123C00);
  }
  return result;
}

unint64_t sub_233B7F4EC()
{
  unint64_t result;

  result = qword_256123C08;
  if (!qword_256123C08)
  {
    result = MEMORY[0x23493E300](&unk_233BD9E7C, &type metadata for LocalizedStringsRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256123C08);
  }
  return result;
}

unint64_t sub_233B7F534()
{
  unint64_t result;

  result = qword_256123C10;
  if (!qword_256123C10)
  {
    result = MEMORY[0x23493E300](&unk_233BD9EA4, &type metadata for LocalizedStringsRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256123C10);
  }
  return result;
}

unint64_t sub_233B7F57C()
{
  unint64_t result;

  result = qword_256123C18;
  if (!qword_256123C18)
  {
    result = MEMORY[0x23493E300](&unk_233BD9DC4, &type metadata for LocalizedStringsRequest.LocalizedString.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256123C18);
  }
  return result;
}

unint64_t sub_233B7F5C4()
{
  unint64_t result;

  result = qword_256123C20;
  if (!qword_256123C20)
  {
    result = MEMORY[0x23493E300](&unk_233BD9DEC, &type metadata for LocalizedStringsRequest.LocalizedString.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256123C20);
  }
  return result;
}

uint64_t sub_233B7F608(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_233B7F7AC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_233B7F624(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256123EB0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8)
      memmove(v10 + 4, a4 + 4, 32 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256123EB8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_233BD8B28();
  __break(1u);
  return result;
}

uint64_t sub_233B7F7AC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256123D28);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_233BD8B28();
  __break(1u);
  return result;
}

uint64_t sub_233B7F914(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7955819 && a2 == 0xE300000000000000;
  if (v2 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000233BE5030)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_233B7F9F0(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000010 && a2 == 0x8000000233BE5050)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_233B7FA74(uint64_t a1)
{
  return sub_233B807A8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_233B7ADDC);
}

uint64_t sub_233B7FA80()
{
  return objectdestroyTm(&qword_256123C38);
}

uint64_t sub_233B7FA8C(uint64_t a1)
{
  return sub_233B80824(a1, &qword_256123C38, (uint64_t (*)(uint64_t, uint64_t, uint64_t *))sub_233B7BA98);
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_233B7FAB8()
{
  return objectdestroy_5Tm(&qword_256123C38);
}

uint64_t sub_233B7FAC4(uint64_t a1, uint64_t a2)
{
  return sub_233B7FB20(a1, a2, &qword_256123C38, &qword_256123AE8, (void (*)(uint64_t, uint64_t))sub_233B7C724, (void (*)(char *))sub_233B7E224);
}

uint64_t sub_233B7FAE8(uint64_t a1)
{
  return sub_233B807A8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_233B7B80C);
}

uint64_t sub_233B7FAF4()
{
  return objectdestroyTm(&qword_256123C38);
}

uint64_t sub_233B7FB00(uint64_t a1)
{
  return sub_233B80824(a1, &qword_256123C38, (uint64_t (*)(uint64_t, uint64_t, uint64_t *))sub_233B80A34);
}

uint64_t sub_233B7FB14()
{
  return objectdestroy_5Tm(&qword_256123C38);
}

uint64_t sub_233B7FB20(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, void (*a5)(uint64_t, uint64_t), void (*a6)(char *))
{
  uint64_t v6;
  uint64_t v12;
  unint64_t v13;

  v12 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  return sub_233B7BDF4(a1, a2, v6 + v13, *(_QWORD *)(v6 + ((*(_QWORD *)(v12 + 64) + v13 + 7) & 0xFFFFFFFFFFFFF8)), a4, a5, a6);
}

uint64_t sub_233B7FBA4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256123C60);
    v8 = a2;
    result = MEMORY[0x23493E300](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_233B7FC04(uint64_t a1)
{
  return sub_233B807A8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_233B7B580);
}

uint64_t sub_233B7FC10()
{
  return objectdestroyTm(&qword_256123C80);
}

uint64_t sub_233B7FC1C(uint64_t a1)
{
  return sub_233B80824(a1, &qword_256123C80, (uint64_t (*)(uint64_t, uint64_t, uint64_t *))sub_233B80A34);
}

uint64_t sub_233B7FC30()
{
  return objectdestroy_5Tm(&qword_256123C80);
}

uint64_t sub_233B7FC3C(uint64_t a1, uint64_t a2)
{
  return sub_233B7FB20(a1, a2, &qword_256123C80, &qword_256123C88, (void (*)(uint64_t, uint64_t))sub_233B7DC70, (void (*)(char *))sub_233B7E974);
}

unint64_t sub_233B7FC60()
{
  unint64_t result;

  result = qword_256123CA8;
  if (!qword_256123CA8)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for SecureButtonActionRequest, &type metadata for SecureButtonActionRequest);
    atomic_store(result, (unint64_t *)&qword_256123CA8);
  }
  return result;
}

unint64_t sub_233B7FCA4()
{
  unint64_t result;

  result = qword_256123CB0;
  if (!qword_256123CB0)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for SecureButtonActionRequest, &type metadata for SecureButtonActionRequest);
    atomic_store(result, (unint64_t *)&qword_256123CB0);
  }
  return result;
}

uint64_t sub_233B7FCE8(uint64_t result, uint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0)
    return sub_233B71CAC(result, a2 & 0xCFFFFFFFFFFFFFFFLL);
  return result;
}

uint64_t sub_233B7FCF8(uint64_t result, uint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0)
    return sub_233B71B8C(result, a2 & 0xCFFFFFFFFFFFFFFFLL);
  return result;
}

uint64_t sub_233B7FD08(uint64_t a1)
{
  return sub_233B807A8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_233B7B2F4);
}

uint64_t sub_233B7FD14()
{
  return objectdestroyTm(&qword_256123CB8);
}

uint64_t sub_233B7FD20(uint64_t a1)
{
  return sub_233B80824(a1, &qword_256123CB8, (uint64_t (*)(uint64_t, uint64_t, uint64_t *))sub_233B7BA98);
}

uint64_t sub_233B7FD34()
{
  return objectdestroy_5Tm(&qword_256123CB8);
}

uint64_t sub_233B7FD40(uint64_t a1, uint64_t a2)
{
  return sub_233B7FB20(a1, a2, &qword_256123CB8, &qword_256123CC0, (void (*)(uint64_t, uint64_t))sub_233B7D828, (void (*)(char *))sub_233B7E7C8);
}

uint64_t sub_233B7FD64(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_233B7FDA8()
{
  unint64_t result;

  result = qword_256123CE0;
  if (!qword_256123CE0)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for PollForUpdatesRequest, &type metadata for PollForUpdatesRequest);
    atomic_store(result, (unint64_t *)&qword_256123CE0);
  }
  return result;
}

unint64_t sub_233B7FDEC()
{
  unint64_t result;

  result = qword_256123CE8;
  if (!qword_256123CE8)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for PollForUpdatesRequest, &type metadata for PollForUpdatesRequest);
    atomic_store(result, (unint64_t *)&qword_256123CE8);
  }
  return result;
}

uint64_t sub_233B7FE30(uint64_t a1)
{
  return sub_233B807A8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_233B7B068);
}

uint64_t sub_233B7FE3C()
{
  return objectdestroyTm(&qword_256123C38);
}

uint64_t sub_233B7FE48()
{
  return objectdestroy_5Tm(&qword_256123C38);
}

unint64_t sub_233B7FE54()
{
  unint64_t result;

  result = qword_256123CF8;
  if (!qword_256123CF8)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for PerformActionRequest, &type metadata for PerformActionRequest);
    atomic_store(result, (unint64_t *)&qword_256123CF8);
  }
  return result;
}

unint64_t sub_233B7FE98()
{
  unint64_t result;

  result = qword_256123D00;
  if (!qword_256123D00)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for PerformActionRequest, &type metadata for PerformActionRequest);
    atomic_store(result, (unint64_t *)&qword_256123D00);
  }
  return result;
}

uint64_t sub_233B7FEDC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_233B7FEE8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_233B7FEF4(uint64_t a1)
{
  return sub_233B807A8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_233B7AB50);
}

uint64_t sub_233B7FF00()
{
  return objectdestroyTm(&qword_256123D08);
}

uint64_t sub_233B7FF0C(uint64_t a1)
{
  return sub_233B80824(a1, &qword_256123D08, (uint64_t (*)(uint64_t, uint64_t, uint64_t *))sub_233B7BA98);
}

uint64_t sub_233B7FF20()
{
  return objectdestroy_5Tm(&qword_256123D08);
}

uint64_t sub_233B7FF2C(uint64_t a1, unint64_t a2)
{
  return sub_233B7FF50(a1, a2, &qword_256123D08, &qword_256123D10, &qword_256123D18, &qword_256123D20);
}

uint64_t sub_233B7FF50(uint64_t a1, unint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, unint64_t *a6)
{
  uint64_t v6;
  uint64_t v13;
  unint64_t v14;

  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  return sub_233B7BD34(a1, a2, v6 + v14, *(_QWORD *)(v6 + ((*(_QWORD *)(v13 + 64) + v14 + 7) & 0xFFFFFFFFFFFFF8)), a4, a5, a6, a3);
}

uint64_t sub_233B7FFE8(uint64_t a1)
{
  return sub_233B807A8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_233B7A8C4);
}

uint64_t sub_233B7FFF4()
{
  return objectdestroyTm(&qword_256123C38);
}

uint64_t sub_233B80000()
{
  return objectdestroy_5Tm(&qword_256123C38);
}

uint64_t sub_233B8000C(uint64_t a1)
{
  return sub_233B807A8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_233B7A638);
}

uint64_t sub_233B80018()
{
  return objectdestroyTm(&qword_256123C38);
}

uint64_t sub_233B80024()
{
  return objectdestroy_5Tm(&qword_256123C38);
}

unint64_t sub_233B80030()
{
  unint64_t result;

  result = qword_256123D68;
  if (!qword_256123D68)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for FetchPublicDataRequest, &type metadata for FetchPublicDataRequest);
    atomic_store(result, (unint64_t *)&qword_256123D68);
  }
  return result;
}

unint64_t sub_233B80074()
{
  unint64_t result;

  result = qword_256123D70;
  if (!qword_256123D70)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for FetchPublicDataRequest, &type metadata for FetchPublicDataRequest);
    atomic_store(result, (unint64_t *)&qword_256123D70);
  }
  return result;
}

uint64_t sub_233B800B8(uint64_t a1)
{
  return sub_233B807A8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_233B7A3AC);
}

uint64_t sub_233B800C4()
{
  return objectdestroyTm(&qword_25424FDA8);
}

uint64_t sub_233B800D0(uint64_t a1)
{
  return sub_233B80824(a1, &qword_25424FDA8, (uint64_t (*)(uint64_t, uint64_t, uint64_t *))sub_233B7BA98);
}

uint64_t sub_233B800E4()
{
  return objectdestroy_5Tm(&qword_25424FDA8);
}

uint64_t sub_233B800F0(uint64_t a1, uint64_t a2)
{
  return sub_233B7FB20(a1, a2, &qword_25424FDA8, qword_25424FFB0, (void (*)(uint64_t, uint64_t))sub_233B7C2DC, (void (*)(char *))sub_233B7E0B0);
}

unint64_t sub_233B80114()
{
  unint64_t result;

  result = qword_256123D80;
  if (!qword_256123D80)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for PerformPrivateActionRequest, &type metadata for PerformPrivateActionRequest);
    atomic_store(result, (unint64_t *)&qword_256123D80);
  }
  return result;
}

unint64_t sub_233B80158()
{
  unint64_t result;

  result = qword_256123D88;
  if (!qword_256123D88)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for PerformPrivateActionRequest, &type metadata for PerformPrivateActionRequest);
    atomic_store(result, (unint64_t *)&qword_256123D88);
  }
  return result;
}

uint64_t sub_233B8019C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t result;

  if (a4 <= 2u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_233B801BC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t result;

  if (a4 <= 2u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_233B801DC(uint64_t a1)
{
  return sub_233B807A8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_233B7A120);
}

uint64_t sub_233B801E8()
{
  return objectdestroyTm(&qword_256123D90);
}

uint64_t sub_233B801F4(uint64_t a1)
{
  return sub_233B80824(a1, &qword_256123D90, (uint64_t (*)(uint64_t, uint64_t, uint64_t *))sub_233B7BA98);
}

uint64_t sub_233B80208()
{
  return objectdestroy_5Tm(&qword_256123D90);
}

uint64_t sub_233B80214(uint64_t a1, unint64_t a2)
{
  return sub_233B7FF50(a1, a2, &qword_256123D90, &qword_256123D98, &qword_256123DA0, &qword_256123DA8);
}

unint64_t sub_233B80238()
{
  unint64_t result;

  result = qword_256123DB8;
  if (!qword_256123DB8)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for UpdateMetadata, &type metadata for UpdateMetadata);
    atomic_store(result, (unint64_t *)&qword_256123DB8);
  }
  return result;
}

unint64_t sub_233B8027C()
{
  unint64_t result;

  result = qword_256123DC0;
  if (!qword_256123DC0)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for UpdateMetadata, &type metadata for UpdateMetadata);
    atomic_store(result, (unint64_t *)&qword_256123DC0);
  }
  return result;
}

uint64_t sub_233B802C0(uint64_t a1)
{
  return sub_233B807A8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_233B79E94);
}

uint64_t sub_233B802CC()
{
  return objectdestroyTm(&qword_256123C38);
}

uint64_t sub_233B802D8()
{
  return objectdestroy_5Tm(&qword_256123C38);
}

unint64_t sub_233B802E4()
{
  unint64_t result;

  result = qword_256123DD0;
  if (!qword_256123DD0)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for UpdateMetadataRequest, &type metadata for UpdateMetadataRequest);
    atomic_store(result, (unint64_t *)&qword_256123DD0);
  }
  return result;
}

unint64_t sub_233B80328()
{
  unint64_t result;

  result = qword_256123DD8;
  if (!qword_256123DD8)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for UpdateMetadataRequest, &type metadata for UpdateMetadataRequest);
    atomic_store(result, (unint64_t *)&qword_256123DD8);
  }
  return result;
}

uint64_t sub_233B8036C(uint64_t a1)
{
  return sub_233B807A8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_233B79C08);
}

uint64_t sub_233B80378()
{
  return objectdestroyTm(&qword_256123DE8);
}

uint64_t sub_233B80384(uint64_t a1)
{
  return sub_233B80824(a1, &qword_256123DE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t *))sub_233B7BA98);
}

uint64_t sub_233B80398()
{
  return objectdestroy_5Tm(&qword_256123DE8);
}

uint64_t sub_233B803A4(uint64_t a1, uint64_t a2)
{
  return sub_233B7FB20(a1, a2, &qword_256123DE8, &qword_256123DF0, (void (*)(uint64_t, uint64_t))sub_233B7CFA4, (void (*)(char *))sub_233B7E4FC);
}

unint64_t sub_233B803C8()
{
  unint64_t result;

  result = qword_256123E10;
  if (!qword_256123E10)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for PromoteAppsRequest, &type metadata for PromoteAppsRequest);
    atomic_store(result, (unint64_t *)&qword_256123E10);
  }
  return result;
}

unint64_t sub_233B8040C()
{
  unint64_t result;

  result = qword_256123E18;
  if (!qword_256123E18)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for PromoteAppsRequest, &type metadata for PromoteAppsRequest);
    atomic_store(result, (unint64_t *)&qword_256123E18);
  }
  return result;
}

uint64_t sub_233B80450(uint64_t a1)
{
  return sub_233B807A8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_233B7997C);
}

uint64_t sub_233B8045C()
{
  return objectdestroyTm(&qword_256123C38);
}

uint64_t sub_233B80468()
{
  return objectdestroy_5Tm(&qword_256123C38);
}

unint64_t sub_233B80474()
{
  unint64_t result;

  result = qword_256123E28;
  if (!qword_256123E28)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for PrioritizeAppRequest, &type metadata for PrioritizeAppRequest);
    atomic_store(result, (unint64_t *)&qword_256123E28);
  }
  return result;
}

unint64_t sub_233B804B8()
{
  unint64_t result;

  result = qword_256123E30;
  if (!qword_256123E30)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for PrioritizeAppRequest, &type metadata for PrioritizeAppRequest);
    atomic_store(result, (unint64_t *)&qword_256123E30);
  }
  return result;
}

uint64_t sub_233B804FC(uint64_t a1)
{
  return sub_233B807A8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_233B796F0);
}

uint64_t sub_233B80508()
{
  return objectdestroyTm(&qword_256123C38);
}

uint64_t sub_233B80514()
{
  return objectdestroy_5Tm(&qword_256123C38);
}

unint64_t sub_233B80520()
{
  unint64_t result;

  result = qword_256123E40;
  if (!qword_256123E40)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for DiscoverRestoresRequest, &type metadata for DiscoverRestoresRequest);
    atomic_store(result, (unint64_t *)&qword_256123E40);
  }
  return result;
}

unint64_t sub_233B80564()
{
  unint64_t result;

  result = qword_256123E48;
  if (!qword_256123E48)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for DiscoverRestoresRequest, &type metadata for DiscoverRestoresRequest);
    atomic_store(result, (unint64_t *)&qword_256123E48);
  }
  return result;
}

uint64_t sub_233B805A8(uint64_t a1)
{
  return sub_233B807A8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_233B79464);
}

uint64_t sub_233B805B4()
{
  return objectdestroyTm(&qword_256123C38);
}

uint64_t sub_233B805C0()
{
  return objectdestroy_5Tm(&qword_256123C38);
}

uint64_t sub_233B805CC(uint64_t a1)
{
  return sub_233B807A8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_233B791D8);
}

uint64_t sub_233B805D8()
{
  return objectdestroyTm(&qword_256123C38);
}

uint64_t sub_233B805E4()
{
  return objectdestroy_5Tm(&qword_256123C38);
}

unint64_t sub_233B805F0()
{
  unint64_t result;

  result = qword_256123E60;
  if (!qword_256123E60)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for AvailableAppMetadataRequest, &type metadata for AvailableAppMetadataRequest);
    atomic_store(result, (unint64_t *)&qword_256123E60);
  }
  return result;
}

unint64_t sub_233B80634()
{
  unint64_t result;

  result = qword_256123E68;
  if (!qword_256123E68)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for AvailableAppMetadataRequest, &type metadata for AvailableAppMetadataRequest);
    atomic_store(result, (unint64_t *)&qword_256123E68);
  }
  return result;
}

uint64_t sub_233B80678(uint64_t a1)
{
  return sub_233B807A8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_233B78F4C);
}

uint64_t sub_233B80684()
{
  return objectdestroyTm(&qword_256123E70);
}

uint64_t sub_233B80690(uint64_t a1)
{
  return sub_233B80824(a1, &qword_256123E70, (uint64_t (*)(uint64_t, uint64_t, uint64_t *))sub_233B7BA98);
}

uint64_t sub_233B806A4()
{
  return objectdestroy_5Tm(&qword_256123E70);
}

uint64_t sub_233B806B0(uint64_t a1, uint64_t a2)
{
  return sub_233B7FB20(a1, a2, &qword_256123E70, &qword_256123E78, (void (*)(uint64_t, uint64_t))sub_233B7CB64, (void (*)(char *))sub_233B7E390);
}

uint64_t sub_233B806D4(uint64_t a1)
{
  return sub_233B807A8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_233B78CC0);
}

uint64_t sub_233B806E0()
{
  return objectdestroyTm(&qword_256123C38);
}

uint64_t sub_233B806EC()
{
  return objectdestroy_5Tm(&qword_256123C38);
}

uint64_t sub_233B806F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_233B8073C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_233B80778(uint64_t a1)
{
  return sub_233B807A8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_233B78A34);
}

uint64_t sub_233B80784()
{
  return objectdestroyTm(&qword_256123C38);
}

uint64_t sub_233B80790()
{
  return objectdestroy_5Tm(&qword_256123C38);
}

uint64_t sub_233B8079C(uint64_t a1)
{
  return sub_233B807A8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_233B787A8);
}

uint64_t sub_233B807A8(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_233B807BC()
{
  return objectdestroyTm(&qword_25424FDA8);
}

uint64_t objectdestroyTm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  return swift_deallocObject();
}

uint64_t sub_233B80824(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t *))
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8) + 80);
  return a3(a1, v3 + ((v7 + 16) & ~v7), a2);
}

uint64_t sub_233B80878()
{
  return objectdestroy_5Tm(&qword_25424FDA8);
}

uint64_t objectdestroy_5Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  return swift_deallocObject();
}

uint64_t sub_233B808EC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x23493E300](&protocol conformance descriptor for MarketplaceKitServiceResult<A>, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_233B8092C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_233B80A38(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_233B80A70 + 4 * byte_233BDA0F0[a1]))(0xD000000000000012, 0x8000000233BE5170);
}

uint64_t sub_233B80A70(uint64_t a1)
{
  return a1 + 2;
}

uint64_t sub_233B80ACC()
{
  unsigned __int8 *v0;

  return sub_233B80A38(*v0);
}

uint64_t sub_233B80AD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233B867C8(a1, a2);
  *a3 = result;
  return result;
}

void sub_233B80AF8(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_233B80B04()
{
  sub_233B817FC();
  return sub_233BD8D8C();
}

uint64_t sub_233B80B2C()
{
  sub_233B817FC();
  return sub_233BD8D98();
}

uint64_t sub_233B80B54()
{
  _BYTE *v0;

  if (*v0)
    return 0x7562697274736964;
  else
    return 0x746E756F636361;
}

uint64_t sub_233B80B9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233B86A00(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233B80BC0()
{
  sub_233B81AC8();
  return sub_233BD8D8C();
}

uint64_t sub_233B80BE8()
{
  sub_233B81AC8();
  return sub_233BD8D98();
}

uint64_t sub_233B80C10()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x496E6F6973726576;
  if (*v0 != 1)
    v1 = 0x7562697274736964;
  if (*v0)
    return v1;
  else
    return 0x44496D657469;
}

uint64_t sub_233B80C78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233B86B14(a1, a2);
  *a3 = result;
  return result;
}

void sub_233B80C9C(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_233B80CA8()
{
  sub_233B81B50();
  return sub_233BD8D8C();
}

uint64_t sub_233B80CD0()
{
  sub_233B81B50();
  return sub_233BD8D98();
}

uint64_t sub_233B80CF8()
{
  _BYTE *v0;

  if (*v0)
    return 0x7562697274736964;
  else
    return 0x7972657571;
}

uint64_t sub_233B80D3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233B86C90(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233B80D60()
{
  sub_233B81B0C();
  return sub_233BD8D8C();
}

uint64_t sub_233B80D88()
{
  sub_233B81B0C();
  return sub_233BD8D98();
}

uint64_t sub_233B80DB0()
{
  return 0x747865746E6F63;
}

uint64_t sub_233B80DCC()
{
  sub_233B8190C();
  return sub_233BD8D8C();
}

uint64_t sub_233B80DF4()
{
  sub_233B8190C();
  return sub_233BD8D98();
}

uint64_t sub_233B80E1C()
{
  sub_233B81884();
  return sub_233BD8D8C();
}

uint64_t sub_233B80E44()
{
  sub_233B81884();
  return sub_233BD8D98();
}

uint64_t sub_233B80E6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x747865746E6F63 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_233BD8C6C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_233B80F00()
{
  sub_233B818C8();
  return sub_233BD8D8C();
}

uint64_t sub_233B80F28()
{
  sub_233B818C8();
  return sub_233BD8D98();
}

void LaunchAngelXPCRequest.RequestType.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  _QWORD v27[4];
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123ED0);
  v42 = *(_QWORD *)(v2 - 8);
  v43 = v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  v41 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for LicenseResolutionContext();
  MEMORY[0x24BDAC7A8](v38, v5);
  v40 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123ED8);
  v37 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39, v7);
  v35 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for OAuthAuthorizationContext();
  MEMORY[0x24BDAC7A8](v28, v9);
  v34 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123EE0);
  v33 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36, v11);
  v31 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123EE8);
  v30 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32, v13);
  v29 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123EF0);
  v27[2] = *(_QWORD *)(v15 - 8);
  v27[3] = v15;
  MEMORY[0x24BDAC7A8](v15, v16);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123EF8);
  v27[0] = *(_QWORD *)(v17 - 8);
  v27[1] = v17;
  MEMORY[0x24BDAC7A8](v17, v18);
  v19 = type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = (char *)v27 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123F00);
  v44 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46, v23);
  v25 = (char *)v27 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233B817FC();
  v47 = v25;
  sub_233BD8D80();
  sub_233B81840(v45, (uint64_t)v22);
  v26 = (char *)sub_233B81264 + 4 * byte_233BDA0F6[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_233B81264()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;

  v0[22] = *(_QWORD *)(v1 + 8);
  *(_BYTE *)(v3 - 224) = 0;
  sub_233B81B50();
  v4 = v0[23];
  v5 = *(_QWORD *)(v3 - 72);
  sub_233BD8BDC();
  *(_BYTE *)(v3 - 224) = 0;
  v6 = v0[1];
  v7 = v0[20];
  sub_233BD8C48();
  if (v7)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*v0 + 8))(v2, v6);
    v8 = *(uint64_t (**)(uint64_t, uint64_t))(v0[21] + 8);
    v9 = v5;
  }
  else
  {
    *(_BYTE *)(v3 - 224) = 1;
    sub_233BD8C0C();
    *(_BYTE *)(v3 - 224) = 2;
    sub_233BD8C18();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*v0 + 8))(v2, v6);
    v8 = *(uint64_t (**)(uint64_t, uint64_t))(v0[21] + 8);
    v9 = *(_QWORD *)(v3 - 72);
  }
  return v8(v9, v4);
}

uint64_t type metadata accessor for LaunchAngelXPCRequest.RequestType(uint64_t a1)
{
  return sub_233B82D70(a1, qword_256124160);
}

unint64_t sub_233B817FC()
{
  unint64_t result;

  result = qword_256123F08;
  if (!qword_256123F08)
  {
    result = MEMORY[0x23493E300](&unk_233BDB154, &type metadata for LaunchAngelXPCRequest.RequestType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256123F08);
  }
  return result;
}

uint64_t sub_233B81840(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_233B81884()
{
  unint64_t result;

  result = qword_256123F10;
  if (!qword_256123F10)
  {
    result = MEMORY[0x23493E300](&unk_233BDB104, &type metadata for LaunchAngelXPCRequest.RequestType.HandleLicenseResolutionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256123F10);
  }
  return result;
}

unint64_t sub_233B818C8()
{
  unint64_t result;

  result = qword_256123F20;
  if (!qword_256123F20)
  {
    result = MEMORY[0x23493E300](&unk_233BDB0B4, &type metadata for LaunchAngelXPCRequest.RequestType.OauthAuthorizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256123F20);
  }
  return result;
}

unint64_t sub_233B8190C()
{
  unint64_t result;

  result = qword_256123F30;
  if (!qword_256123F30)
  {
    result = MEMORY[0x23493E300](&unk_233BDB064, &type metadata for LaunchAngelXPCRequest.RequestType.GetInstallConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256123F30);
  }
  return result;
}

unint64_t sub_233B81950()
{
  unint64_t result;

  result = qword_256123F38;
  if (!qword_256123F38)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for InstallSheetContext, &type metadata for InstallSheetContext);
    atomic_store(result, (unint64_t *)&qword_256123F38);
  }
  return result;
}

uint64_t sub_233B81994(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(_QWORD *)(a1 + 80);
  v7 = *(_QWORD *)(a1 + 104);
  v10 = *(_QWORD *)(a1 + 96);
  v8 = *(_BYTE *)(a1 + 88);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_233B81A48(v2, v3, v4, v5, v6, v8);
  sub_233B81AB4(v10, v7);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_233B81A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, char a6)
{
  uint64_t result;

  if (a6 == 2 || a6 == 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else if (!a6)
  {
    swift_bridgeObjectRelease();
    return sub_233B81AB4(a4, a5);
  }
  return result;
}

uint64_t sub_233B81AB4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_233B71B8C(a1, a2);
  return a1;
}

unint64_t sub_233B81AC8()
{
  unint64_t result;

  result = qword_256123F40;
  if (!qword_256123F40)
  {
    result = MEMORY[0x23493E300](&unk_233BDB014, &type metadata for LaunchAngelXPCRequest.RequestType.DisplayAuthorizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256123F40);
  }
  return result;
}

unint64_t sub_233B81B0C()
{
  unint64_t result;

  result = qword_256123F48;
  if (!qword_256123F48)
  {
    result = MEMORY[0x23493E300](&unk_233BDAFC4, &type metadata for LaunchAngelXPCRequest.RequestType.DisplaySearchResultsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256123F48);
  }
  return result;
}

unint64_t sub_233B81B50()
{
  unint64_t result;

  result = qword_256123F50;
  if (!qword_256123F50)
  {
    result = MEMORY[0x23493E300](&unk_233BDAF74, &type metadata for LaunchAngelXPCRequest.RequestType.DisplayProductPageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256123F50);
  }
  return result;
}

uint64_t LaunchAngelXPCRequest.RequestType.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t *v50;
  _QWORD v52[13];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;

  v59 = a2;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123F58);
  v52[10] = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57, v3);
  v69 = (char *)v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123F60);
  v68 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58, v5);
  v66 = (char *)v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123F68);
  v52[8] = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55, v7);
  v62 = (char *)v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123F70);
  v52[9] = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56, v9);
  v63 = (char *)v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123F78);
  v52[7] = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53, v11);
  v60 = (char *)v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123F80);
  v52[6] = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54, v13);
  v61 = (char *)v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123F88);
  v64 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65, v15);
  v17 = (char *)v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  v19 = MEMORY[0x24BDAC7A8](v70, v18);
  v52[12] = (char *)v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v19, v21);
  v52[11] = (char *)v52 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22, v24);
  v27 = (char *)v52 - v26;
  v29 = MEMORY[0x24BDAC7A8](v25, v28);
  v31 = (char *)v52 - v30;
  v33 = MEMORY[0x24BDAC7A8](v29, v32);
  v35 = (char *)v52 - v34;
  v37 = MEMORY[0x24BDAC7A8](v33, v36);
  v39 = (char *)v52 - v38;
  MEMORY[0x24BDAC7A8](v37, v40);
  v42 = (char *)v52 - v41;
  v43 = a1[3];
  v71 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v43);
  sub_233B817FC();
  v67 = v17;
  v44 = v72;
  sub_233BD8D68();
  if (!v44)
  {
    v52[1] = v35;
    v52[2] = v31;
    v52[4] = v27;
    v52[0] = v39;
    v72 = 0;
    v52[5] = v42;
    v45 = v65;
    v46 = v67;
    v47 = sub_233BD8BC4();
    if (*(_QWORD *)(v47 + 16) == 1)
    {
      v52[3] = v47;
      __asm { BR              X10 }
    }
    v48 = sub_233BD8ABC();
    swift_allocError();
    v50 = v49;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256123F90);
    *v50 = v70;
    sub_233BD8B4C();
    sub_233BD8AB0();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v48 - 8) + 104))(v50, *MEMORY[0x24BEE26D0], v48);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v46, v45);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
}

unint64_t sub_233B82888()
{
  unint64_t result;

  result = qword_256123FA8;
  if (!qword_256123FA8)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for InstallSheetContext, &type metadata for InstallSheetContext);
    atomic_store(result, (unint64_t *)&qword_256123FA8);
  }
  return result;
}

uint64_t sub_233B828CC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return LaunchAngelXPCRequest.RequestType.init(from:)(a1, a2);
}

void sub_233B828E0(_QWORD *a1)
{
  LaunchAngelXPCRequest.RequestType.encode(to:)(a1);
}

uint64_t LaunchAngelXPCRequest.requestType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_233B81840(v1, a1);
}

uint64_t LaunchAngelXPCRequest.init(requestType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_233B7FD64(a1, a2, type metadata accessor for LaunchAngelXPCRequest.RequestType);
}

uint64_t sub_233B82920()
{
  return 0x5474736575716572;
}

uint64_t sub_233B82940@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x5474736575716572 && a2 == 0xEB00000000657079)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_233BD8C6C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_233B829EC()
{
  sub_233B82B4C();
  return sub_233BD8D8C();
}

uint64_t sub_233B82A14()
{
  sub_233B82B4C();
  return sub_233BD8D98();
}

uint64_t LaunchAngelXPCRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123FB0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233B82B4C();
  sub_233BD8D80();
  type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  sub_233B74300(&qword_256123FC0, type metadata accessor for LaunchAngelXPCRequest.RequestType, (uint64_t)&protocol conformance descriptor for LaunchAngelXPCRequest.RequestType);
  sub_233BD8C30();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

unint64_t sub_233B82B4C()
{
  unint64_t result;

  result = qword_256123FB8;
  if (!qword_256123FB8)
  {
    result = MEMORY[0x23493E300](&unk_233BDAF24, &type metadata for LaunchAngelXPCRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256123FB8);
  }
  return result;
}

uint64_t LaunchAngelXPCRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v16 = a2;
  v4 = type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v18 = (uint64_t)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123FC8);
  v17 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LaunchAngelXPCRequest(0);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233B82B4C();
  sub_233BD8D68();
  if (!v2)
  {
    sub_233B74300(&qword_256123FD0, type metadata accessor for LaunchAngelXPCRequest.RequestType, (uint64_t)&protocol conformance descriptor for LaunchAngelXPCRequest.RequestType);
    sub_233BD8BA0();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v7);
    sub_233B7FD64(v18, (uint64_t)v14, type metadata accessor for LaunchAngelXPCRequest.RequestType);
    sub_233B7FD64((uint64_t)v14, v16, type metadata accessor for LaunchAngelXPCRequest);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t type metadata accessor for LaunchAngelXPCRequest(uint64_t a1)
{
  return sub_233B82D70(a1, qword_2561240B8);
}

uint64_t sub_233B82D70(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_233B82DA4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return LaunchAngelXPCRequest.init(from:)(a1, a2);
}

uint64_t sub_233B82DB8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123FB0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233B82B4C();
  sub_233BD8D80();
  type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  sub_233B74300(&qword_256123FC0, type metadata accessor for LaunchAngelXPCRequest.RequestType, (uint64_t)&protocol conformance descriptor for LaunchAngelXPCRequest.RequestType);
  sub_233BD8C30();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_233B82EC8()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000018;
  if (*v0 != 1)
    v1 = 0xD000000000000012;
  if (*v0)
    return v1;
  else
    return 0x6465726F6E6769;
}

uint64_t sub_233B82F30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233B86D9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233B82F54()
{
  sub_233B83544();
  return sub_233BD8D8C();
}

uint64_t sub_233B82F7C()
{
  sub_233B83544();
  return sub_233BD8D98();
}

uint64_t sub_233B82FA4()
{
  return 0;
}

uint64_t sub_233B82FB0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_233B82FDC()
{
  sub_233B83610();
  return sub_233BD8D8C();
}

uint64_t sub_233B83004()
{
  sub_233B83610();
  return sub_233BD8D98();
}

uint64_t sub_233B8302C()
{
  return 0x656D7269666E6F63;
}

uint64_t sub_233B83048@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x656D7269666E6F63 && a2 == 0xE900000000000064)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_233BD8C6C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_233B830E8()
{
  sub_233B835CC();
  return sub_233BD8D8C();
}

uint64_t sub_233B83110()
{
  sub_233B835CC();
  return sub_233BD8D98();
}

uint64_t sub_233B83138()
{
  return 0x65736E6F70736572;
}

uint64_t sub_233B83150@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x65736E6F70736572 && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_233BD8C6C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_233B831E4()
{
  sub_233B83588();
  return sub_233BD8D8C();
}

uint64_t sub_233B8320C()
{
  sub_233B83588();
  return sub_233BD8D98();
}

uint64_t LaunchAngelXPCResponse.ResponseType.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123FD8);
  v30 = *(_QWORD *)(v4 - 8);
  v31 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v29 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123FE0);
  v27 = *(_QWORD *)(v7 - 8);
  v28 = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123FE8);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123FF0);
  v33 = *(_QWORD *)(v16 - 8);
  v34 = v16;
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = *v2;
  v20 = *((unsigned __int8 *)v2 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233B83544();
  sub_233BD8D80();
  if (!v20)
  {
    v37 = 1;
    sub_233B835CC();
    v22 = v34;
    sub_233BD8BDC();
    v24 = v28;
    sub_233BD8C24();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v24);
    return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v19, v22);
  }
  if (v20 == 1)
  {
    v38 = 2;
    sub_233B83588();
    v21 = v29;
    v22 = v34;
    sub_233BD8BDC();
    v35 = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256123B50);
    sub_233B74A34(&qword_256123B58, MEMORY[0x24BEE0D08], MEMORY[0x24BEE04C0]);
    v23 = v31;
    sub_233BD8C30();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v21, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v19, v22);
  }
  v36 = 0;
  sub_233B83610();
  v26 = v34;
  sub_233BD8BDC();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v19, v26);
}

unint64_t sub_233B83544()
{
  unint64_t result;

  result = qword_256123FF8;
  if (!qword_256123FF8)
  {
    result = MEMORY[0x23493E300](&unk_233BDAED4, &type metadata for LaunchAngelXPCResponse.ResponseType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256123FF8);
  }
  return result;
}

unint64_t sub_233B83588()
{
  unint64_t result;

  result = qword_256124000;
  if (!qword_256124000)
  {
    result = MEMORY[0x23493E300](&unk_233BDAE84, &type metadata for LaunchAngelXPCResponse.ResponseType.OauthAuthorizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124000);
  }
  return result;
}

unint64_t sub_233B835CC()
{
  unint64_t result;

  result = qword_256124008;
  if (!qword_256124008)
  {
    result = MEMORY[0x23493E300](&unk_233BDAE34, &type metadata for LaunchAngelXPCResponse.ResponseType.InstallSheetConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124008);
  }
  return result;
}

unint64_t sub_233B83610()
{
  unint64_t result;

  result = qword_256124010;
  if (!qword_256124010)
  {
    result = MEMORY[0x23493E300](&unk_233BDADE4, &type metadata for LaunchAngelXPCResponse.ResponseType.IgnoredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124010);
  }
  return result;
}

uint64_t LaunchAngelXPCResponse.ResponseType.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  char v54;

  v46 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124018);
  v4 = *(_QWORD *)(v3 - 8);
  v44 = v3;
  v45 = v4;
  MEMORY[0x24BDAC7A8](v3, v5);
  v48 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124020);
  v8 = *(_QWORD *)(v7 - 8);
  v42 = v7;
  v43 = v8;
  MEMORY[0x24BDAC7A8](v7, v9);
  v47 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124028);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124030);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v18);
  v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1[3];
  v49 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_233B83544();
  v22 = v50;
  sub_233BD8D68();
  if (v22)
    goto LABEL_9;
  v41 = v11;
  v23 = v47;
  v24 = v48;
  v50 = v17;
  v25 = sub_233BD8BC4();
  if (*(_QWORD *)(v25 + 16) != 1)
  {
    v34 = sub_233BD8ABC();
    swift_allocError();
    v36 = v35;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256123F90);
    *v36 = &type metadata for LaunchAngelXPCResponse.ResponseType;
    sub_233BD8B4C();
    sub_233BD8AB0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v36, *MEMORY[0x24BEE26D0], v34);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v20, v16);
LABEL_9:
    v30 = (uint64_t)v49;
    return __swift_destroy_boxed_opaque_existential_1(v30);
  }
  v26 = *(unsigned __int8 *)(v25 + 32);
  if (*(_BYTE *)(v25 + 32))
  {
    v40 = v25;
    if (v26 == 1)
    {
      v53 = 1;
      sub_233B835CC();
      v27 = v16;
      sub_233BD8B40();
      v28 = v42;
      v29 = sub_233BD8B94();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v23, v28);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v20, v27);
      v30 = (uint64_t)v49;
      v31 = 0;
      v32 = v29 & 1;
      v33 = v46;
    }
    else
    {
      v54 = 2;
      sub_233B83588();
      sub_233BD8B40();
      v33 = v46;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256123B50);
      sub_233B74A34(&qword_256123B68, MEMORY[0x24BEE0D38], MEMORY[0x24BEE04E0]);
      v38 = v44;
      sub_233BD8BA0();
      v39 = v50;
      (*(void (**)(char *, uint64_t))(v45 + 8))(v24, v38);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v20, v16);
      v32 = v51;
      v31 = 1;
      v30 = (uint64_t)v49;
    }
  }
  else
  {
    v52 = 0;
    sub_233B83610();
    sub_233BD8B40();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v41);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v20, v16);
    v32 = 0;
    v31 = 2;
    v30 = (uint64_t)v49;
    v33 = v46;
  }
  *(_QWORD *)v33 = v32;
  *(_BYTE *)(v33 + 8) = v31;
  return __swift_destroy_boxed_opaque_existential_1(v30);
}

uint64_t sub_233B83B28@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return LaunchAngelXPCResponse.ResponseType.init(from:)(a1, a2);
}

uint64_t sub_233B83B3C(_QWORD *a1)
{
  return LaunchAngelXPCResponse.ResponseType.encode(to:)(a1);
}

uint64_t LaunchAngelXPCResponse.responseType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)v1;
  *(_QWORD *)a1 = *(_QWORD *)v1;
  v3 = *(_BYTE *)(v1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  return sub_233B83B64(v2, v3);
}

uint64_t sub_233B83B64(uint64_t a1, char a2)
{
  uint64_t result;

  if (a2 == 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t LaunchAngelXPCResponse.init(responseType:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)a2 = *(_QWORD *)result;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_233B83B8C()
{
  return 0x65736E6F70736572;
}

uint64_t sub_233B83BAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x65736E6F70736572 && a2 == 0xEC00000065707954)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_233BD8C6C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_233B83C58()
{
  sub_233B83DB0();
  return sub_233BD8D8C();
}

uint64_t sub_233B83C80()
{
  sub_233B83DB0();
  return sub_233BD8D98();
}

uint64_t LaunchAngelXPCResponse.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  uint64_t v11;
  char v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124038);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = *((_BYTE *)v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233B83DB0();
  sub_233BD8D80();
  v11 = v8;
  v12 = v9;
  sub_233B83DF4();
  sub_233BD8C30();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

unint64_t sub_233B83DB0()
{
  unint64_t result;

  result = qword_256124040;
  if (!qword_256124040)
  {
    result = MEMORY[0x23493E300](&unk_233BDAD94, &type metadata for LaunchAngelXPCResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124040);
  }
  return result;
}

unint64_t sub_233B83DF4()
{
  unint64_t result;

  result = qword_256124048;
  if (!qword_256124048)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for LaunchAngelXPCResponse.ResponseType, &type metadata for LaunchAngelXPCResponse.ResponseType);
    atomic_store(result, (unint64_t *)&qword_256124048);
  }
  return result;
}

uint64_t LaunchAngelXPCResponse.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v12;
  char v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124050);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233B83DB0();
  sub_233BD8D68();
  if (!v2)
  {
    sub_233B83F60();
    sub_233BD8BA0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v10 = v13;
    *(_QWORD *)a2 = v12;
    *(_BYTE *)(a2 + 8) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_233B83F60()
{
  unint64_t result;

  result = qword_256124058;
  if (!qword_256124058)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for LaunchAngelXPCResponse.ResponseType, &type metadata for LaunchAngelXPCResponse.ResponseType);
    atomic_store(result, (unint64_t *)&qword_256124058);
  }
  return result;
}

uint64_t sub_233B83FA4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return LaunchAngelXPCResponse.init(from:)(a1, a2);
}

uint64_t sub_233B83FB8(_QWORD *a1)
{
  return LaunchAngelXPCResponse.encode(to:)(a1);
}

uint64_t initializeBufferWithCopyOfBuffer for LaunchAngelXPCRequest(uint64_t *a1, uint64_t *a2)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(type metadata accessor for LaunchAngelXPCRequest.RequestType(0) - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_233B84034 + 4 * byte_233BDA102[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t sub_233B84280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, char a6)
{
  uint64_t result;

  if (a6 == 2 || a6 == 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else if (!a6)
  {
    swift_bridgeObjectRetain();
    return sub_233B842EC(a4, a5);
  }
  return result;
}

uint64_t sub_233B842EC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_233B71CAC(a1, a2);
  return a1;
}

uint64_t destroy for LaunchAngelXPCRequest(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      return swift_bridgeObjectRelease();
    case 1:
    case 2:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_233B81A48(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88));
      v3 = *(_QWORD *)(a1 + 104);
      if (v3 >> 60 != 15)
        sub_233B71B8C(*(_QWORD *)(a1 + 96), v3);
      return swift_bridgeObjectRelease();
    case 4:
      swift_bridgeObjectRelease();
      v4 = type metadata accessor for OAuthAuthorizationContext();
      goto LABEL_8;
    case 5:
      swift_bridgeObjectRelease();
      v4 = type metadata accessor for LicenseResolutionContext();
LABEL_8:
      v5 = a1 + *(int *)(v4 + 20);
      v6 = sub_233BD851C();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for LaunchAngelXPCRequest()
{
  char *v0;

  type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  v0 = (char *)sub_233B84470 + 4 * byte_233BDA10E[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_233B84470()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  v3 = v1[2];
  v4 = v1[3];
  v0[2] = v3;
  v0[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for LaunchAngelXPCRequest(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_233B8073C(result, type metadata accessor for LaunchAngelXPCRequest.RequestType);
    type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
    v2 = (char *)&loc_233B84680 + 4 * byte_233BDA114[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

_OWORD *initializeWithTake for LaunchAngelXPCRequest(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v4 = type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 5)
  {
    *a1 = *a2;
    v10 = *(int *)(type metadata accessor for LicenseResolutionContext() + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_233BD851C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 4)
  {
    *a1 = *a2;
    v6 = *(int *)(type metadata accessor for OAuthAuthorizationContext() + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_233BD851C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for LaunchAngelXPCRequest(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  if (a1 != a2)
  {
    sub_233B8073C((uint64_t)a1, type metadata accessor for LaunchAngelXPCRequest.RequestType);
    v4 = type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 5)
    {
      *a1 = *a2;
      v10 = *(int *)(type metadata accessor for LicenseResolutionContext() + 20);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_233BD851C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 4)
    {
      *a1 = *a2;
      v6 = *(int *)(type metadata accessor for OAuthAuthorizationContext() + 20);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_233BD851C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for LaunchAngelXPCRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233B84A9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for LaunchAngelXPCRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_233B84AE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_233B84B24()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for LaunchAngelXPCRequest.RequestType(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for LaunchAngelXPCRequest.RequestType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_233B84BEC + 4 * byte_233BDA11A[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for LaunchAngelXPCRequest.RequestType(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      return swift_bridgeObjectRelease();
    case 1:
    case 2:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_233B81A48(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88));
      v3 = *(_QWORD *)(a1 + 104);
      if (v3 >> 60 != 15)
        sub_233B71B8C(*(_QWORD *)(a1 + 96), v3);
      return swift_bridgeObjectRelease();
    case 4:
      swift_bridgeObjectRelease();
      v4 = type metadata accessor for OAuthAuthorizationContext();
      goto LABEL_8;
    case 5:
      swift_bridgeObjectRelease();
      v4 = type metadata accessor for LicenseResolutionContext();
LABEL_8:
      v5 = a1 + *(int *)(v4 + 20);
      v6 = sub_233BD851C();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for LaunchAngelXPCRequest.RequestType()
{
  char *v0;

  v0 = (char *)sub_233B84F90 + 4 * byte_233BDA126[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_233B84F90()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  v3 = v1[2];
  v4 = v1[3];
  v0[2] = v3;
  v0[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for LaunchAngelXPCRequest.RequestType(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_233B8073C(result, type metadata accessor for LaunchAngelXPCRequest.RequestType);
    v2 = (char *)&loc_233B85198 + 4 * byte_233BDA12C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

_OWORD *initializeWithTake for LaunchAngelXPCRequest.RequestType(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 5)
  {
    *a1 = *a2;
    v11 = *(int *)(type metadata accessor for LicenseResolutionContext() + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_233BD851C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 4)
  {
    *a1 = *a2;
    v7 = *(int *)(type metadata accessor for OAuthAuthorizationContext() + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_233BD851C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for LaunchAngelXPCRequest.RequestType(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  if (a1 != a2)
  {
    sub_233B8073C((uint64_t)a1, type metadata accessor for LaunchAngelXPCRequest.RequestType);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 5)
    {
      *a1 = *a2;
      v11 = *(int *)(type metadata accessor for LicenseResolutionContext() + 20);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_233BD851C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 4)
    {
      *a1 = *a2;
      v7 = *(int *)(type metadata accessor for OAuthAuthorizationContext() + 20);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_233BD851C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for LaunchAngelXPCRequest.RequestType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for LaunchAngelXPCRequest.RequestType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_233B855B4()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_233B855C4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for OAuthAuthorizationContext();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for LicenseResolutionContext();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_233B85664(uint64_t a1, char a2)
{
  uint64_t result;

  if (a2 == 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCResponse()
{
  return &type metadata for LaunchAngelXPCResponse;
}

uint64_t initializeBufferWithCopyOfBuffer for LaunchAngelXPCResponse.ResponseType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_233B83B64(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for LaunchAngelXPCResponse.ResponseType(uint64_t a1)
{
  return sub_233B85664(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t _s14MarketplaceKit22LaunchAngelXPCResponseVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_233B83B64(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_233B85664(v5, v6);
  return a1;
}

uint64_t assignWithTake for LaunchAngelXPCResponse.ResponseType(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_233B85664(v4, v5);
  return a1;
}

uint64_t _s14MarketplaceKit22LaunchAngelXPCResponseVwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s14MarketplaceKit22LaunchAngelXPCResponseVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_233B85814(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_233B8582C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCResponse.ResponseType()
{
  return &type metadata for LaunchAngelXPCResponse.ResponseType;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCResponse.CodingKeys()
{
  return &type metadata for LaunchAngelXPCResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCResponse.ResponseType.CodingKeys()
{
  return &type metadata for LaunchAngelXPCResponse.ResponseType.CodingKeys;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCResponse.ResponseType.IgnoredCodingKeys()
{
  return &type metadata for LaunchAngelXPCResponse.ResponseType.IgnoredCodingKeys;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCResponse.ResponseType.InstallSheetConfirmationCodingKeys()
{
  return &type metadata for LaunchAngelXPCResponse.ResponseType.InstallSheetConfirmationCodingKeys;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCResponse.ResponseType.OauthAuthorizationCodingKeys()
{
  return &type metadata for LaunchAngelXPCResponse.ResponseType.OauthAuthorizationCodingKeys;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCRequest.CodingKeys()
{
  return &type metadata for LaunchAngelXPCRequest.CodingKeys;
}

uint64_t getEnumTagSinglePayload for LaunchAngelXPCRequest.RequestType.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for LaunchAngelXPCRequest.RequestType.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_233B8599C + 4 * byte_233BDA137[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_233B859D0 + 4 * byte_233BDA132[v4]))();
}

uint64_t sub_233B859D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233B859D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233B859E0);
  return result;
}

uint64_t sub_233B859EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233B859F4);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_233B859F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233B85A00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCRequest.RequestType.CodingKeys()
{
  return &type metadata for LaunchAngelXPCRequest.RequestType.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ApprovedDeveloper.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s14MarketplaceKit22LaunchAngelXPCResponseV12ResponseTypeO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_233B85AF8 + 4 * byte_233BDA141[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_233B85B2C + 4 * byte_233BDA13C[v4]))();
}

uint64_t sub_233B85B2C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233B85B34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233B85B3CLL);
  return result;
}

uint64_t sub_233B85B48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233B85B50);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_233B85B54(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233B85B5C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCRequest.RequestType.DisplayProductPageCodingKeys()
{
  return &type metadata for LaunchAngelXPCRequest.RequestType.DisplayProductPageCodingKeys;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCRequest.RequestType.DisplaySearchResultsCodingKeys()
{
  return &type metadata for LaunchAngelXPCRequest.RequestType.DisplaySearchResultsCodingKeys;
}

uint64_t _s14MarketplaceKit21LaunchAngelXPCRequestV11RequestTypeO30DisplaySearchResultsCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_233B85BDC + 4 * byte_233BDA14B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_233B85C10 + 4 * byte_233BDA146[v4]))();
}

uint64_t sub_233B85C10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233B85C18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233B85C20);
  return result;
}

uint64_t sub_233B85C2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233B85C34);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_233B85C38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233B85C40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCRequest.RequestType.DisplayAuthorizationCodingKeys()
{
  return &type metadata for LaunchAngelXPCRequest.RequestType.DisplayAuthorizationCodingKeys;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCRequest.RequestType.GetInstallConfirmationCodingKeys()
{
  return &type metadata for LaunchAngelXPCRequest.RequestType.GetInstallConfirmationCodingKeys;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCRequest.RequestType.OauthAuthorizationCodingKeys()
{
  return &type metadata for LaunchAngelXPCRequest.RequestType.OauthAuthorizationCodingKeys;
}

uint64_t _s14MarketplaceKit22LaunchAngelXPCResponseV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_233B85CBC + 4 * byte_233BDA150[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_233B85CDC + 4 * byte_233BDA155[v4]))();
}

_BYTE *sub_233B85CBC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_233B85CDC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233B85CE4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233B85CEC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233B85CF4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233B85CFC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for LaunchAngelXPCRequest.RequestType.HandleLicenseResolutionCodingKeys()
{
  return &type metadata for LaunchAngelXPCRequest.RequestType.HandleLicenseResolutionCodingKeys;
}

unint64_t sub_233B85D1C()
{
  unint64_t result;

  result = qword_256124198;
  if (!qword_256124198)
  {
    result = MEMORY[0x23493E300](&unk_233BDA534, &type metadata for LaunchAngelXPCRequest.RequestType.HandleLicenseResolutionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124198);
  }
  return result;
}

unint64_t sub_233B85D64()
{
  unint64_t result;

  result = qword_2561241A0;
  if (!qword_2561241A0)
  {
    result = MEMORY[0x23493E300](&unk_233BDA5EC, &type metadata for LaunchAngelXPCRequest.RequestType.OauthAuthorizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561241A0);
  }
  return result;
}

unint64_t sub_233B85DAC()
{
  unint64_t result;

  result = qword_2561241A8;
  if (!qword_2561241A8)
  {
    result = MEMORY[0x23493E300](&unk_233BDA6A4, &type metadata for LaunchAngelXPCRequest.RequestType.GetInstallConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561241A8);
  }
  return result;
}

unint64_t sub_233B85DF4()
{
  unint64_t result;

  result = qword_2561241B0;
  if (!qword_2561241B0)
  {
    result = MEMORY[0x23493E300](&unk_233BDA75C, &type metadata for LaunchAngelXPCRequest.RequestType.DisplayAuthorizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561241B0);
  }
  return result;
}

unint64_t sub_233B85E3C()
{
  unint64_t result;

  result = qword_2561241B8;
  if (!qword_2561241B8)
  {
    result = MEMORY[0x23493E300](&unk_233BDA814, &type metadata for LaunchAngelXPCRequest.RequestType.DisplaySearchResultsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561241B8);
  }
  return result;
}

unint64_t sub_233B85E84()
{
  unint64_t result;

  result = qword_2561241C0;
  if (!qword_2561241C0)
  {
    result = MEMORY[0x23493E300](&unk_233BDA8CC, &type metadata for LaunchAngelXPCRequest.RequestType.DisplayProductPageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561241C0);
  }
  return result;
}

unint64_t sub_233B85ECC()
{
  unint64_t result;

  result = qword_2561241C8;
  if (!qword_2561241C8)
  {
    result = MEMORY[0x23493E300](&unk_233BDA984, &type metadata for LaunchAngelXPCRequest.RequestType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561241C8);
  }
  return result;
}

unint64_t sub_233B85F14()
{
  unint64_t result;

  result = qword_2561241D0;
  if (!qword_2561241D0)
  {
    result = MEMORY[0x23493E300](&unk_233BDAA3C, &type metadata for LaunchAngelXPCRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561241D0);
  }
  return result;
}

unint64_t sub_233B85F5C()
{
  unint64_t result;

  result = qword_2561241D8;
  if (!qword_2561241D8)
  {
    result = MEMORY[0x23493E300](&unk_233BDAAF4, &type metadata for LaunchAngelXPCResponse.ResponseType.OauthAuthorizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561241D8);
  }
  return result;
}

unint64_t sub_233B85FA4()
{
  unint64_t result;

  result = qword_2561241E0;
  if (!qword_2561241E0)
  {
    result = MEMORY[0x23493E300](&unk_233BDABAC, &type metadata for LaunchAngelXPCResponse.ResponseType.InstallSheetConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561241E0);
  }
  return result;
}

unint64_t sub_233B85FEC()
{
  unint64_t result;

  result = qword_2561241E8;
  if (!qword_2561241E8)
  {
    result = MEMORY[0x23493E300](&unk_233BDACB4, &type metadata for LaunchAngelXPCResponse.ResponseType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561241E8);
  }
  return result;
}

unint64_t sub_233B86034()
{
  unint64_t result;

  result = qword_2561241F0;
  if (!qword_2561241F0)
  {
    result = MEMORY[0x23493E300](&unk_233BDAD6C, &type metadata for LaunchAngelXPCResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561241F0);
  }
  return result;
}

unint64_t sub_233B8607C()
{
  unint64_t result;

  result = qword_2561241F8;
  if (!qword_2561241F8)
  {
    result = MEMORY[0x23493E300](&unk_233BDACDC, &type metadata for LaunchAngelXPCResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561241F8);
  }
  return result;
}

unint64_t sub_233B860C4()
{
  unint64_t result;

  result = qword_256124200;
  if (!qword_256124200)
  {
    result = MEMORY[0x23493E300](&unk_233BDAD04, &type metadata for LaunchAngelXPCResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124200);
  }
  return result;
}

unint64_t sub_233B8610C()
{
  unint64_t result;

  result = qword_256124208;
  if (!qword_256124208)
  {
    result = MEMORY[0x23493E300](&unk_233BDABD4, &type metadata for LaunchAngelXPCResponse.ResponseType.IgnoredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124208);
  }
  return result;
}

unint64_t sub_233B86154()
{
  unint64_t result;

  result = qword_256124210;
  if (!qword_256124210)
  {
    result = MEMORY[0x23493E300](&unk_233BDABFC, &type metadata for LaunchAngelXPCResponse.ResponseType.IgnoredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124210);
  }
  return result;
}

unint64_t sub_233B8619C()
{
  unint64_t result;

  result = qword_256124218;
  if (!qword_256124218)
  {
    result = MEMORY[0x23493E300](&unk_233BDAB1C, &type metadata for LaunchAngelXPCResponse.ResponseType.InstallSheetConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124218);
  }
  return result;
}

unint64_t sub_233B861E4()
{
  unint64_t result;

  result = qword_256124220;
  if (!qword_256124220)
  {
    result = MEMORY[0x23493E300](&unk_233BDAB44, &type metadata for LaunchAngelXPCResponse.ResponseType.InstallSheetConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124220);
  }
  return result;
}

unint64_t sub_233B8622C()
{
  unint64_t result;

  result = qword_256124228;
  if (!qword_256124228)
  {
    result = MEMORY[0x23493E300](&unk_233BDAA64, &type metadata for LaunchAngelXPCResponse.ResponseType.OauthAuthorizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124228);
  }
  return result;
}

unint64_t sub_233B86274()
{
  unint64_t result;

  result = qword_256124230;
  if (!qword_256124230)
  {
    result = MEMORY[0x23493E300](&unk_233BDAA8C, &type metadata for LaunchAngelXPCResponse.ResponseType.OauthAuthorizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124230);
  }
  return result;
}

unint64_t sub_233B862BC()
{
  unint64_t result;

  result = qword_256124238;
  if (!qword_256124238)
  {
    result = MEMORY[0x23493E300](&unk_233BDAC24, &type metadata for LaunchAngelXPCResponse.ResponseType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124238);
  }
  return result;
}

unint64_t sub_233B86304()
{
  unint64_t result;

  result = qword_256124240;
  if (!qword_256124240)
  {
    result = MEMORY[0x23493E300](&unk_233BDAC4C, &type metadata for LaunchAngelXPCResponse.ResponseType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124240);
  }
  return result;
}

unint64_t sub_233B8634C()
{
  unint64_t result;

  result = qword_256124248;
  if (!qword_256124248)
  {
    result = MEMORY[0x23493E300](&unk_233BDA9AC, &type metadata for LaunchAngelXPCRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124248);
  }
  return result;
}

unint64_t sub_233B86394()
{
  unint64_t result;

  result = qword_256124250;
  if (!qword_256124250)
  {
    result = MEMORY[0x23493E300](&unk_233BDA9D4, &type metadata for LaunchAngelXPCRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124250);
  }
  return result;
}

unint64_t sub_233B863DC()
{
  unint64_t result;

  result = qword_256124258;
  if (!qword_256124258)
  {
    result = MEMORY[0x23493E300](&unk_233BDA83C, &type metadata for LaunchAngelXPCRequest.RequestType.DisplayProductPageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124258);
  }
  return result;
}

unint64_t sub_233B86424()
{
  unint64_t result;

  result = qword_256124260;
  if (!qword_256124260)
  {
    result = MEMORY[0x23493E300](&unk_233BDA864, &type metadata for LaunchAngelXPCRequest.RequestType.DisplayProductPageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124260);
  }
  return result;
}

unint64_t sub_233B8646C()
{
  unint64_t result;

  result = qword_256124268;
  if (!qword_256124268)
  {
    result = MEMORY[0x23493E300](&unk_233BDA784, &type metadata for LaunchAngelXPCRequest.RequestType.DisplaySearchResultsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124268);
  }
  return result;
}

unint64_t sub_233B864B4()
{
  unint64_t result;

  result = qword_256124270;
  if (!qword_256124270)
  {
    result = MEMORY[0x23493E300](&unk_233BDA7AC, &type metadata for LaunchAngelXPCRequest.RequestType.DisplaySearchResultsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124270);
  }
  return result;
}

unint64_t sub_233B864FC()
{
  unint64_t result;

  result = qword_256124278;
  if (!qword_256124278)
  {
    result = MEMORY[0x23493E300](&unk_233BDA6CC, &type metadata for LaunchAngelXPCRequest.RequestType.DisplayAuthorizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124278);
  }
  return result;
}

unint64_t sub_233B86544()
{
  unint64_t result;

  result = qword_256124280;
  if (!qword_256124280)
  {
    result = MEMORY[0x23493E300](&unk_233BDA6F4, &type metadata for LaunchAngelXPCRequest.RequestType.DisplayAuthorizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124280);
  }
  return result;
}

unint64_t sub_233B8658C()
{
  unint64_t result;

  result = qword_256124288;
  if (!qword_256124288)
  {
    result = MEMORY[0x23493E300](&unk_233BDA614, &type metadata for LaunchAngelXPCRequest.RequestType.GetInstallConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124288);
  }
  return result;
}

unint64_t sub_233B865D4()
{
  unint64_t result;

  result = qword_256124290;
  if (!qword_256124290)
  {
    result = MEMORY[0x23493E300](&unk_233BDA63C, &type metadata for LaunchAngelXPCRequest.RequestType.GetInstallConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124290);
  }
  return result;
}

unint64_t sub_233B8661C()
{
  unint64_t result;

  result = qword_256124298;
  if (!qword_256124298)
  {
    result = MEMORY[0x23493E300](&unk_233BDA55C, &type metadata for LaunchAngelXPCRequest.RequestType.OauthAuthorizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124298);
  }
  return result;
}

unint64_t sub_233B86664()
{
  unint64_t result;

  result = qword_2561242A0;
  if (!qword_2561242A0)
  {
    result = MEMORY[0x23493E300](&unk_233BDA584, &type metadata for LaunchAngelXPCRequest.RequestType.OauthAuthorizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561242A0);
  }
  return result;
}

unint64_t sub_233B866AC()
{
  unint64_t result;

  result = qword_2561242A8;
  if (!qword_2561242A8)
  {
    result = MEMORY[0x23493E300](&unk_233BDA4A4, &type metadata for LaunchAngelXPCRequest.RequestType.HandleLicenseResolutionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561242A8);
  }
  return result;
}

unint64_t sub_233B866F4()
{
  unint64_t result;

  result = qword_2561242B0;
  if (!qword_2561242B0)
  {
    result = MEMORY[0x23493E300](&unk_233BDA4CC, &type metadata for LaunchAngelXPCRequest.RequestType.HandleLicenseResolutionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561242B0);
  }
  return result;
}

unint64_t sub_233B8673C()
{
  unint64_t result;

  result = qword_2561242B8;
  if (!qword_2561242B8)
  {
    result = MEMORY[0x23493E300](&unk_233BDA8F4, &type metadata for LaunchAngelXPCRequest.RequestType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561242B8);
  }
  return result;
}

unint64_t sub_233B86784()
{
  unint64_t result;

  result = qword_2561242C0;
  if (!qword_2561242C0)
  {
    result = MEMORY[0x23493E300](&unk_233BDA91C, &type metadata for LaunchAngelXPCRequest.RequestType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561242C0);
  }
  return result;
}

uint64_t sub_233B867C8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000012 && a2 == 0x8000000233BE5170 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000233BE5190 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000233BE51B0 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000233BE51D0 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000233BE51F0 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000233BE5210)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v5 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_233B86A00(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E756F636361 && a2 == 0xE700000000000000;
  if (v2 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7562697274736964 && a2 == 0xED00004449726F74)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_233B86B14(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x44496D657469 && a2 == 0xE600000000000000;
  if (v2 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x496E6F6973726576 && a2 == 0xE900000000000044 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7562697274736964 && a2 == 0xED00004449726F74)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_233B86C90(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7972657571 && a2 == 0xE500000000000000;
  if (v2 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7562697274736964 && a2 == 0xED00004449726F74)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_233B86D9C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6465726F6E6769 && a2 == 0xE700000000000000;
  if (v2 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000233BE5230 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000233BE51F0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t MarketplaceKitURIScheme.getter()
{
  return 0x6C7074656B72616DLL;
}

unint64_t sub_233B86F30(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256123B80);
  v2 = (_QWORD *)sub_233BD8B1C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_233BBFEEC(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t OAuthAuthorizationRequest.context.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_233B806F8(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for OAuthAuthorizationContext);
}

void __swiftcall OAuthAuthorizationRequest.init(context:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_233B8707C(v0, v1);
}

uint64_t sub_233B8707C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for OAuthAuthorizationContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t OAuthAuthorizationRequest.run()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[5] = v0;
  type metadata accessor for LaunchAngelXPCRequest(0);
  v1[6] = swift_task_alloc();
  type metadata accessor for OAuthAuthorizationRequest();
  v1[7] = swift_task_alloc();
  v2 = sub_233BD8780();
  v1[8] = v2;
  v1[9] = *(_QWORD *)(v2 - 8);
  v1[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233B87160()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t *v5;
  uint8_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = v0[5];
  v2 = v0[7];
  sub_233BD8744();
  sub_233B806F8(v1, v2, (uint64_t (*)(_QWORD))type metadata accessor for OAuthAuthorizationRequest);
  v3 = sub_233BD8768();
  v4 = sub_233BD8978();
  if (os_log_type_enabled(v3, v4))
  {
    v15 = v0[9];
    v5 = (uint64_t *)v0[7];
    v16 = v0[8];
    v17 = v0[10];
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v18 = v7;
    *(_DWORD *)v6 = 136315138;
    v9 = *v5;
    v8 = v5[1];
    swift_bridgeObjectRetain();
    v0[4] = sub_233B87524(v9, v8, &v18);
    sub_233BD89CC();
    swift_bridgeObjectRelease();
    sub_233B8073C((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for OAuthAuthorizationRequest);
    _os_log_impl(&dword_233B6C000, v3, v4, "[%s] Requesting OAuth Authorization using Launch Angel...", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23493E3B4](v7, -1, -1);
    MEMORY[0x23493E3B4](v6, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v16);
  }
  else
  {
    v11 = v0[9];
    v10 = v0[10];
    v12 = v0[8];
    sub_233B8073C(v0[7], (uint64_t (*)(_QWORD))type metadata accessor for OAuthAuthorizationRequest);

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  sub_233B806F8(v0[5], v0[6], (uint64_t (*)(_QWORD))type metadata accessor for OAuthAuthorizationContext);
  type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  swift_storeEnumTagMultiPayload();
  v13 = (_QWORD *)swift_task_alloc();
  v0[11] = v13;
  *v13 = v0;
  v13[1] = sub_233B87390;
  return static LaunchAngelConnectionUtilities.handleLaunchAngelRequest(_:)((uint64_t)(v0 + 2), v0[6]);
}

uint64_t sub_233B87390()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_233B873F4()
{
  uint64_t v0;
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(unsigned __int8 *)(v0 + 24);
  if (v2 != 1)
  {
    sub_233B85664(*(_QWORD *)(v0 + 16), v2);
    v1 = sub_233B86F30(MEMORY[0x24BEE4AF8]);
  }
  sub_233B8073C(*(_QWORD *)(v0 + 48), type metadata accessor for LaunchAngelXPCRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v1);
}

uint64_t sub_233B87484()
{
  uint64_t v0;

  sub_233B8073C(*(_QWORD *)(v0 + 48), type metadata accessor for LaunchAngelXPCRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for OAuthAuthorizationRequest()
{
  uint64_t result;

  result = qword_256124328;
  if (!qword_256124328)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_233B87524(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_233B875F4(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_233B7410C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_233B7410C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_233B875F4(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_233BD89D8();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_233B877AC(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_233BD8AC8();
  if (!v8)
  {
    sub_233BD8AE0();
    __break(1u);
LABEL_17:
    result = sub_233BD8B28();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_233B877AC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_233B87840(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_233B87A18(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_233B87A18(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_233B87840(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_233B879B4(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_233BD8A98();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_233BD8AE0();
      __break(1u);
LABEL_10:
      v2 = sub_233BD8834();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_233BD8B28();
    __break(1u);
LABEL_14:
    result = sub_233BD8AE0();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_233B879B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256124368);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_233B87A18(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256124368);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_233BD8B28();
  __break(1u);
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for OAuthAuthorizationRequest(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v4 = type metadata accessor for OAuthAuthorizationContext();
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = *(int *)(v4 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_233BD851C();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t destroy for OAuthAuthorizationRequest(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for OAuthAuthorizationContext() + 20);
  v3 = sub_233BD851C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *initializeWithCopy for OAuthAuthorizationRequest(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(type metadata accessor for OAuthAuthorizationContext() + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_233BD851C();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for OAuthAuthorizationRequest(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for OAuthAuthorizationContext() + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_233BD851C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *initializeWithTake for OAuthAuthorizationRequest(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for OAuthAuthorizationContext() + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_233BD851C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for OAuthAuthorizationRequest(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = *(int *)(type metadata accessor for OAuthAuthorizationContext() + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_233BD851C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 40))(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for OAuthAuthorizationRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233B87E38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for OAuthAuthorizationContext();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for OAuthAuthorizationRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_233B87E80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for OAuthAuthorizationContext();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_233B87EC0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for OAuthAuthorizationContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_233B87F28(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256124360);
  v3 = (_QWORD *)sub_233BD8B1C();
  v5 = a1[4];
  v4 = a1[5];
  result = sub_233BBFF50(v5);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  v8 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v3[6] + v9) = v5;
    *(_QWORD *)(v3[7] + v9) = v4;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v5 = *(v8 - 1);
    v14 = *v8;
    swift_retain();
    result = sub_233BBFF50(v5);
    v8 = v13;
    v4 = v14;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

BOOL sub_233B88024(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_233B88034()
{
  return sub_233BD8D08();
}

uint64_t sub_233B88058(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73736563637573 && a2 == 0xE700000000000000;
  if (v2 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6572756C696166 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_233B88148()
{
  sub_233BD8CFC();
  sub_233BD8D08();
  return sub_233BD8D38();
}

uint64_t sub_233B8818C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6572756C696166;
  else
    return 0x73736563637573;
}

uint64_t sub_233B881BC(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

BOOL sub_233B88228(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_233B88024(*a1, *a2);
}

uint64_t sub_233B88240()
{
  return sub_233B88148();
}

uint64_t sub_233B88254()
{
  return sub_233B88034();
}

uint64_t sub_233B88268()
{
  sub_233BD8CFC();
  sub_233B88034();
  return sub_233BD8D38();
}

uint64_t sub_233B882B0()
{
  char *v0;

  return sub_233B8818C(*v0);
}

uint64_t sub_233B882C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233B88058(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233B882F4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_233B8BCD8();
  *a1 = result;
  return result;
}

uint64_t sub_233B88324(uint64_t a1)
{
  MEMORY[0x23493E300](&unk_233BDB590, a1);
  return sub_233BD8D8C();
}

uint64_t sub_233B88358(uint64_t a1)
{
  MEMORY[0x23493E300](&unk_233BDB590, a1);
  return sub_233BD8D98();
}

uint64_t sub_233B8838C()
{
  return 12383;
}

uint64_t sub_233B8839C@<X0>(_QWORD *a1@<X1>, _BYTE *a2@<X8>)
{
  return sub_233B88444(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_233B74EB0, a2);
}

uint64_t sub_233B883A8(uint64_t a1)
{
  MEMORY[0x23493E300](&unk_233BDB630, a1);
  return sub_233BD8D8C();
}

uint64_t sub_233B883DC(uint64_t a1)
{
  MEMORY[0x23493E300](&unk_233BDB630, a1);
  return sub_233BD8D98();
}

uint64_t sub_233B88410@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233B881BC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_233B88444@<X0>(_QWORD *a1@<X1>, uint64_t (*a2)(_QWORD, _QWORD, _QWORD)@<X3>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = a2(a1[2], a1[3], a1[4]);
  *a3 = result & 1;
  return result;
}

uint64_t sub_233B88478(uint64_t a1)
{
  MEMORY[0x23493E300](&unk_233BDB5E0, a1);
  return sub_233BD8D8C();
}

uint64_t sub_233B884AC(uint64_t a1)
{
  MEMORY[0x23493E300](&unk_233BDB5E0, a1);
  return sub_233BD8D98();
}

uint64_t MarketplaceKitServiceResult.encode(to:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  _QWORD v39[3];
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;

  v4 = a2[2];
  v5 = a2[3];
  v6 = a2[4];
  v7 = type metadata accessor for MarketplaceKitServiceResult.FailureCodingKeys(255, v4, v5, v6);
  v46 = MEMORY[0x23493E300](&unk_233BDB630, v7);
  v47 = v7;
  v8 = sub_233BD8C54();
  v51 = *(_QWORD *)(v8 - 8);
  v52 = v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v50 = (char *)v39 - v10;
  v45 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x24BDAC7A8](v45, v11);
  v48 = (uint64_t)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for MarketplaceKitServiceResult.SuccessCodingKeys(255, v4, v5, v6);
  v39[1] = MEMORY[0x23493E300](&unk_233BDB5E0, v13);
  v39[2] = v13;
  v44 = sub_233BD8C54();
  v42 = *(_QWORD *)(v44 - 8);
  v15 = MEMORY[0x24BDAC7A8](v44, v14);
  v40 = (char *)v39 - v16;
  v43 = *(_QWORD *)(v4 - 8);
  v18 = MEMORY[0x24BDAC7A8](v15, v17);
  v41 = (char *)v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(a2 - 1);
  MEMORY[0x24BDAC7A8](v18, v21);
  v23 = (char *)v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = v4;
  v53 = v6;
  v24 = type metadata accessor for MarketplaceKitServiceResult.CodingKeys(255, v4, v5, v6);
  MEMORY[0x23493E300](&unk_233BDB590, v24);
  v25 = sub_233BD8C54();
  v54 = *(_QWORD *)(v25 - 8);
  v55 = v25;
  MEMORY[0x24BDAC7A8](v25, v26);
  v28 = (char *)v39 - v27;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BD8D80();
  (*(void (**)(char *, uint64_t, _QWORD *))(v20 + 16))(v23, v56, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v29 = v48;
    sub_233B71DF8((uint64_t)v23, v48);
    v58 = 1;
    v30 = v50;
    v31 = v55;
    sub_233BD8BDC();
    sub_233B890B0(&qword_256124370, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v32 = v52;
    sub_233BD8C30();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v30, v32);
    sub_233B888D4(v29);
  }
  else
  {
    v33 = v43;
    v34 = v41;
    v35 = v49;
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v41, v23, v49);
    v57 = 0;
    v36 = v40;
    v31 = v55;
    sub_233BD8BDC();
    v37 = v44;
    sub_233BD8C30();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v36, v37);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v35);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v28, v31);
}

uint64_t type metadata accessor for MarketplaceKitServiceResult.FailureCodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MarketplaceKitServiceResult.FailureCodingKeys);
}

uint64_t type metadata accessor for MarketplaceKitServiceResult.SuccessCodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MarketplaceKitServiceResult.SuccessCodingKeys);
}

uint64_t type metadata accessor for MarketplaceKitServiceResult.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MarketplaceKitServiceResult.CodingKeys);
}

uint64_t sub_233B888D4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MarketplaceKitError();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t MarketplaceKitServiceResult.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  _QWORD *v31;
  _QWORD *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t *v46;
  uint64_t v47;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t);
  char *v56;
  char *v57;
  __int128 v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  _QWORD *v84;

  v74 = a5;
  v9 = type metadata accessor for MarketplaceKitServiceResult.FailureCodingKeys(255, a2, a3, a4);
  v71 = MEMORY[0x23493E300](&unk_233BDB630, v9);
  v72 = v9;
  v65 = sub_233BD8BD0();
  v67 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65, v10);
  v73 = (char *)&v58 - v11;
  v12 = type metadata accessor for MarketplaceKitServiceResult.SuccessCodingKeys(255, a2, a3, a4);
  v68 = MEMORY[0x23493E300](&unk_233BDB5E0, v12);
  v69 = v12;
  v62 = sub_233BD8BD0();
  v66 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62, v13);
  v70 = (char *)&v58 - v14;
  v15 = type metadata accessor for MarketplaceKitServiceResult.CodingKeys(255, a2, a3, a4);
  v79 = MEMORY[0x23493E300](&unk_233BDB590, v15);
  v16 = sub_233BD8BD0();
  v76 = *(_QWORD *)(v16 - 8);
  v77 = v16;
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)&v58 - v18;
  v63 = a2;
  v64 = a3;
  v75 = type metadata accessor for MarketplaceKitServiceResult(0, a2, a3, a4);
  v61 = *(_QWORD *)(v75 - 8);
  v21 = MEMORY[0x24BDAC7A8](v75, v20);
  v23 = (char *)&v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v21, v24);
  v27 = (char *)&v58 - v26;
  MEMORY[0x24BDAC7A8](v25, v28);
  v30 = (char *)&v58 - v29;
  v31 = a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v78 = v19;
  v32 = v84;
  sub_233BD8D68();
  if (v32)
    goto LABEL_7;
  v60 = v27;
  v79 = (uint64_t)v23;
  v59 = v30;
  v84 = a1;
  v33 = v78;
  v34 = v77;
  *(_QWORD *)&v80 = sub_233BD8BC4();
  v35 = sub_233BD887C();
  MEMORY[0x23493E300](MEMORY[0x24BEE12C8], v35);
  *(_QWORD *)&v82 = sub_233BD89FC();
  *((_QWORD *)&v82 + 1) = v36;
  *(_QWORD *)&v83 = v37;
  *((_QWORD *)&v83 + 1) = v38;
  v39 = sub_233BD89F0();
  MEMORY[0x23493E300](MEMORY[0x24BEE2190], v39);
  sub_233BD893C();
  v40 = v80;
  if (v80 == 2 || (v58 = v82, v80 = v82, v81 = v83, (sub_233BD8948() & 1) == 0))
  {
    v44 = sub_233BD8ABC();
    swift_allocError();
    v46 = v45;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256123F90);
    *v46 = v75;
    sub_233BD8B4C();
    sub_233BD8AB0();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v44 - 8) + 104))(v46, *MEMORY[0x24BEE26D0], v44);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v33, v34);
    v31 = v84;
LABEL_7:
    v47 = (uint64_t)v31;
    return __swift_destroy_boxed_opaque_existential_1(v47);
  }
  if ((v40 & 1) != 0)
  {
    LOBYTE(v80) = 1;
    v49 = v73;
    sub_233BD8B40();
    v57 = v74;
    type metadata accessor for MarketplaceKitError();
    sub_233B890B0(&qword_256124378, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v52 = v79;
    v53 = v65;
    sub_233BD8BA0();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v49, v53);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v33, v34);
    v54 = v75;
    swift_storeEnumTagMultiPayload();
    v55 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 32);
    v56 = v59;
    v55(v59, v52, v54);
  }
  else
  {
    LOBYTE(v80) = 0;
    v41 = v70;
    v42 = v34;
    sub_233BD8B40();
    v43 = v76;
    v50 = v60;
    v51 = v62;
    sub_233BD8BA0();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v41, v51);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v33, v42);
    v54 = v75;
    swift_storeEnumTagMultiPayload();
    v55 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 32);
    v56 = v59;
    v55(v59, (uint64_t)v50, v54);
    v57 = v74;
  }
  v55(v57, (uint64_t)v56, v54);
  v47 = (uint64_t)v84;
  return __swift_destroy_boxed_opaque_existential_1(v47);
}

uint64_t type metadata accessor for MarketplaceKitServiceResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MarketplaceKitServiceResult);
}

uint64_t sub_233B88FC4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, char *a3@<X8>)
{
  return MarketplaceKitServiceResult.init(from:)(a1, a2[2], a2[3], a2[4], a3);
}

uint64_t sub_233B88FE4(_QWORD *a1, _QWORD *a2)
{
  return MarketplaceKitServiceResult.encode(to:)(a1, a2);
}

uint64_t Result.init<>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  type metadata accessor for MarketplaceKitServiceResult(0, a2, a3, a4);
  if (swift_getEnumCaseMultiPayload() == 1)
    sub_233B71DF8(a1, a5);
  else
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a5, a1, a2);
  type metadata accessor for MarketplaceKitError();
  sub_233B890B0((unint64_t *)&qword_256123B10, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
  sub_233BD8D50();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_233B890B0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for MarketplaceKitError();
    result = MEMORY[0x23493E300](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_233B890F0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_233B890F8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for MarketplaceKitError();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_233B8917C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int v15;
  uint64_t v17;
  unint64_t v18;
  unsigned int v19;
  unsigned __int8 *v20;
  unsigned int v21;
  unint64_t v22;
  unsigned int v23;
  uint64_t v24;
  unint64_t v25;
  unsigned int v26;
  unint64_t v27;
  unsigned int v28;
  unint64_t v29;
  uint64_t v30;
  unsigned int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int v35;
  char v36;
  uint64_t v37;
  int v38;
  unsigned int v39;
  uint64_t v40;
  unsigned int v41;
  unint64_t v42;
  BOOL v43;
  unint64_t v44;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254250060);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_QWORD *)(v9 + 64) <= 0x10uLL)
    v10 = 16;
  else
    v10 = *(_QWORD *)(v9 + 64);
  if (v10 > 3)
    goto LABEL_8;
  v11 = ((1 << (8 * v10)) + 17) >> (8 * v10);
  v12 = 2;
  if (v11 > 0xFFFC)
    v12 = 4;
  if (v11 <= 0xFC)
LABEL_8:
    v12 = 1;
  v13 = v12 + v10;
  if (v13 <= v7)
    v13 = v7;
  v14 = v13 + 1;
  v15 = *(_DWORD *)(v9 + 80) | *(_DWORD *)(v6 + 80);
  if (v14 > 0x18 || (v15 & 0x1000F8) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + (((v15 & 0xF8 | 7u) + 16) & ~(unint64_t)(v15 & 0xF8 | 7u)));
    swift_retain();
    return a1;
  }
  if (v10 > 3)
  {
    if (v10 + 1 > v7)
      v18 = v10 + 1;
    else
      v18 = v7;
    v19 = *((unsigned __int8 *)a2 + v18);
    if (v19 <= 1)
    {
      if (v19 != 1)
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
LABEL_89:
        v34 = 1;
LABEL_90:
        v42 = v34 + v10;
        if (v42 <= v7)
          v42 = v7;
        *((_BYTE *)a1 + v42) = 0;
        return a1;
      }
      v20 = (unsigned __int8 *)a2 + v10;
LABEL_51:
      v32 = *v20;
      if (v32 < 3)
        goto LABEL_65;
LABEL_58:
      if (v10 <= 3)
        v33 = v10;
      else
        v33 = 4;
      __asm { BR              X13 }
    }
    goto LABEL_30;
  }
  v21 = ((1 << (8 * v10)) + 17) >> (8 * v10);
  if (v21 > 0xFFFC)
  {
    v25 = v10 + 4;
    if (v10 + 4 <= v7)
      v25 = v7;
    v26 = *((unsigned __int8 *)a2 + v25);
    if (v26 >= 2)
      goto LABEL_39;
    if (v26 == 1)
    {
      v20 = (unsigned __int8 *)a2 + v10;
      goto LABEL_53;
    }
    goto LABEL_62;
  }
  if (v21 > 0xFC)
  {
    v27 = v10 + 2;
    if (v10 + 2 <= v7)
      v27 = v7;
    v28 = *((unsigned __int8 *)a2 + v27);
    if (v28 > 1)
    {
LABEL_39:
      v24 = 2;
      if (v21 > 0xFFFC)
        v24 = 4;
LABEL_41:
      v29 = v24 + v10;
      if (v29 <= v7)
        LODWORD(v29) = v7;
      if (v29 <= 3)
        v30 = v29;
      else
        v30 = 4;
      __asm { BR              X13 }
    }
    if (v28 == 1)
    {
      v20 = (unsigned __int8 *)a2 + v10;
      goto LABEL_57;
    }
LABEL_62:
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    v34 = 2;
    if (v21 > 0xFFFC)
      v34 = 4;
    goto LABEL_90;
  }
  if (v10 + 1 > v7)
    v22 = v10 + 1;
  else
    v22 = v7;
  v23 = *((unsigned __int8 *)a2 + v22);
  if (v23 > 1)
  {
LABEL_30:
    v24 = 1;
    goto LABEL_41;
  }
  if (v23 != 1)
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    v41 = ((1 << (8 * v10)) + 17) >> (8 * v10);
    v34 = 2;
    if (v41 > 0xFFFC)
      v34 = 4;
    if (v41 > 0xFC)
      goto LABEL_90;
    goto LABEL_89;
  }
  v20 = (unsigned __int8 *)a2 + v10;
  v31 = ((1 << (8 * v10)) + 17) >> (8 * v10);
  if (v31 <= 0xFFFC)
  {
    if (v31 <= 0xFC)
      goto LABEL_51;
LABEL_57:
    v32 = *(unsigned __int16 *)v20;
    if (v32 < 3)
      goto LABEL_65;
    goto LABEL_58;
  }
LABEL_53:
  v32 = *(_DWORD *)v20;
  if (v32 >= 3)
    goto LABEL_58;
LABEL_65:
  if (v32 == 2)
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 16))(a1, a2, v8);
    if (v10 <= 3)
    {
      v35 = ((1 << (8 * v10)) + 17) >> (8 * v10);
      if (v35 > 0xFFFC)
      {
        v38 = 2;
        goto LABEL_94;
      }
      if (v35 > 0xFC)
      {
        LOWORD(v38) = 2;
        goto LABEL_97;
      }
    }
    v36 = 2;
    goto LABEL_78;
  }
  if (v32 != 1)
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
    if (v10 > 3)
      goto LABEL_68;
    v35 = ((1 << (8 * v10)) + 17) >> (8 * v10);
    if (v35 > 0xFFFC)
    {
      *(_DWORD *)((char *)a1 + v10) = 0;
    }
    else
    {
      if (v35 <= 0xFC)
      {
LABEL_68:
        *((_BYTE *)a1 + v10) = 0;
        if (v10 > 3)
          goto LABEL_82;
LABEL_79:
        v39 = ((1 << (8 * v10)) + 17) >> (8 * v10);
        v40 = 2;
        if (v39 > 0xFFFC)
          v40 = 4;
        if (v39 > 0xFC)
          goto LABEL_100;
        goto LABEL_82;
      }
      *(_WORD *)((char *)a1 + v10) = 0;
    }
LABEL_98:
    v43 = v35 > 0xFFFC;
    v40 = 2;
    if (v43)
      v40 = 4;
    goto LABEL_100;
  }
  v37 = a2[1];
  *a1 = *a2;
  a1[1] = v37;
  swift_bridgeObjectRetain();
  if (v10 > 3)
    goto LABEL_77;
  v38 = 1;
  v35 = ((1 << (8 * v10)) + 17) >> (8 * v10);
  if (v35 > 0xFFFC)
  {
LABEL_94:
    *(_DWORD *)((char *)a1 + v10) = v38;
    goto LABEL_98;
  }
  if (v35 > 0xFC)
  {
LABEL_97:
    *(_WORD *)((char *)a1 + v10) = v38;
    goto LABEL_98;
  }
LABEL_77:
  v36 = 1;
LABEL_78:
  *((_BYTE *)a1 + v10) = v36;
  if (v10 <= 3)
    goto LABEL_79;
LABEL_82:
  v40 = 1;
LABEL_100:
  v44 = v40 + v10;
  if (v44 <= v7)
    v44 = v7;
  *((_BYTE *)a1 + v44) = 1;
  return a1;
}

uint64_t sub_233B8973C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  unint64_t v13;
  unsigned int v14;
  unsigned __int16 *v15;
  unint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unsigned int v19;
  BOOL v20;
  unint64_t v21;
  uint64_t v22;
  unsigned int v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  uint64_t v27;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254250060);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  if (v8 <= 0x10)
    v8 = 16;
  if (v8 > 3)
  {
    if (v8 + 1 > v5)
      v9 = v8 + 1;
    else
      v9 = v5;
    v10 = *(unsigned __int8 *)(a1 + v9);
    if (v10 > 1)
    {
LABEL_8:
      v11 = 1;
      goto LABEL_29;
    }
    if (v10 == 1)
    {
      v15 = (unsigned __int16 *)(a1 + v8);
      goto LABEL_37;
    }
LABEL_48:
    v26 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
    v27 = a1;
    v6 = v3;
    return v26(v27, v6);
  }
  v12 = ((1 << (8 * v8)) + 17) >> (8 * v8);
  if (v12 > 0xFFFC)
  {
    v16 = v8 + 4;
    if (v8 + 4 <= v5)
      v16 = v5;
    v17 = *(unsigned __int8 *)(a1 + v16);
    if (v17 < 2)
    {
      if (v17 != 1)
        goto LABEL_48;
      v15 = (unsigned __int16 *)(a1 + v8);
      goto LABEL_39;
    }
LABEL_27:
    v20 = v12 > 0xFFFC;
    v11 = 2;
    if (v20)
      v11 = 4;
LABEL_29:
    v21 = v11 + v8;
    if (v21 <= v5)
      LODWORD(v21) = v5;
    if (v21 <= 3)
      v22 = v21;
    else
      v22 = 4;
    __asm { BR              X14 }
  }
  if (v12 > 0xFC)
  {
    v18 = v8 + 2;
    if (v8 + 2 <= v5)
      v18 = v5;
    v19 = *(unsigned __int8 *)(a1 + v18);
    if (v19 <= 1)
    {
      if (v19 != 1)
        goto LABEL_48;
      v15 = (unsigned __int16 *)(a1 + v8);
LABEL_43:
      v24 = *v15;
      if (v24 < 3)
        goto LABEL_50;
      goto LABEL_44;
    }
    goto LABEL_27;
  }
  if (v8 + 1 > v5)
    v13 = v8 + 1;
  else
    v13 = v5;
  v14 = *(unsigned __int8 *)(a1 + v13);
  if (v14 > 1)
    goto LABEL_8;
  if (v14 != 1)
    goto LABEL_48;
  v15 = (unsigned __int16 *)(a1 + v8);
  v23 = ((1 << (8 * v8)) + 17) >> (8 * v8);
  if (v23 <= 0xFFFC)
  {
    if (v23 <= 0xFC)
    {
LABEL_37:
      v24 = *(unsigned __int8 *)v15;
      if (v24 < 3)
        goto LABEL_50;
LABEL_44:
      if (v8 <= 3)
        v25 = v8;
      else
        v25 = 4;
      __asm { BR              X14 }
    }
    goto LABEL_43;
  }
LABEL_39:
  v24 = *(_DWORD *)v15;
  if (v24 >= 3)
    goto LABEL_44;
LABEL_50:
  if (v24 == 2)
  {
    v26 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
    v27 = a1;
    return v26(v27, v6);
  }
  return swift_bridgeObjectRelease();
}

_QWORD *sub_233B89A04(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unsigned int v12;
  unsigned __int8 *v13;
  unsigned int v14;
  unint64_t v15;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  unsigned int v29;
  char v30;
  uint64_t v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  unint64_t v35;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254250060);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_QWORD *)(v9 + 64) <= 0x10uLL)
    v10 = 16;
  else
    v10 = *(_QWORD *)(v9 + 64);
  if (v10 > 3)
  {
    if (v10 + 1 > v7)
      v11 = v10 + 1;
    else
      v11 = v7;
    v12 = *((unsigned __int8 *)a2 + v11);
    if (v12 <= 1)
    {
      if (v12 != 1)
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
LABEL_78:
        v27 = 0;
        v28 = 1;
        goto LABEL_87;
      }
      v13 = (unsigned __int8 *)a2 + v10;
LABEL_39:
      v25 = *v13;
      if (v25 < 3)
        goto LABEL_53;
LABEL_46:
      if (v10 <= 3)
        v26 = v10;
      else
        v26 = 4;
      __asm { BR              X13 }
    }
    goto LABEL_18;
  }
  v14 = ((1 << (8 * v10)) + 17) >> (8 * v10);
  if (v14 > 0xFFFC)
  {
    v18 = v10 + 4;
    if (v10 + 4 <= v7)
      v18 = v7;
    v19 = *((unsigned __int8 *)a2 + v18);
    if (v19 >= 2)
      goto LABEL_27;
    if (v19 == 1)
    {
      v13 = (unsigned __int8 *)a2 + v10;
      goto LABEL_41;
    }
    goto LABEL_50;
  }
  if (v14 > 0xFC)
  {
    v20 = v10 + 2;
    if (v10 + 2 <= v7)
      v20 = v7;
    v21 = *((unsigned __int8 *)a2 + v20);
    if (v21 > 1)
    {
LABEL_27:
      v17 = 2;
      if (v14 > 0xFFFC)
        v17 = 4;
LABEL_29:
      v22 = v17 + v10;
      if (v22 <= v7)
        LODWORD(v22) = v7;
      if (v22 <= 3)
        v23 = v22;
      else
        v23 = 4;
      __asm { BR              X13 }
    }
    if (v21 == 1)
    {
      v13 = (unsigned __int8 *)a2 + v10;
      goto LABEL_45;
    }
LABEL_50:
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
    v27 = 0;
    v28 = 2;
    if (v14 > 0xFFFC)
      v28 = 4;
    goto LABEL_87;
  }
  if (v10 + 1 > v7)
    v15 = v10 + 1;
  else
    v15 = v7;
  v16 = *((unsigned __int8 *)a2 + v15);
  if (v16 > 1)
  {
LABEL_18:
    v17 = 1;
    goto LABEL_29;
  }
  if (v16 != 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
    v34 = ((1 << (8 * v10)) + 17) >> (8 * v10);
    v28 = 2;
    if (v34 > 0xFFFC)
      v28 = 4;
    if (v34 > 0xFC)
    {
      v27 = 0;
      goto LABEL_87;
    }
    goto LABEL_78;
  }
  v13 = (unsigned __int8 *)a2 + v10;
  v24 = ((1 << (8 * v10)) + 17) >> (8 * v10);
  if (v24 <= 0xFFFC)
  {
    if (v24 <= 0xFC)
      goto LABEL_39;
LABEL_45:
    v25 = *(unsigned __int16 *)v13;
    if (v25 < 3)
      goto LABEL_53;
    goto LABEL_46;
  }
LABEL_41:
  v25 = *(_DWORD *)v13;
  if (v25 >= 3)
    goto LABEL_46;
LABEL_53:
  if (v25 == 2)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v9 + 16))(a1, a2, v8);
    if (v10 <= 3)
    {
      v29 = ((1 << (8 * v10)) + 17) >> (8 * v10);
      if (v29 > 0xFFFC)
      {
        v32 = 2;
        goto LABEL_80;
      }
      if (v29 > 0xFC)
      {
        LOWORD(v32) = 2;
        goto LABEL_83;
      }
    }
    v30 = 2;
    goto LABEL_66;
  }
  if (v25 == 1)
  {
    v31 = a2[1];
    *a1 = *a2;
    a1[1] = v31;
    swift_bridgeObjectRetain();
    if (v10 > 3)
    {
LABEL_65:
      v30 = 1;
LABEL_66:
      *((_BYTE *)a1 + v10) = v30;
      if (v10 > 3)
      {
LABEL_70:
        v28 = 1;
LABEL_86:
        v27 = 1;
        goto LABEL_87;
      }
      goto LABEL_67;
    }
    v32 = 1;
    v29 = ((1 << (8 * v10)) + 17) >> (8 * v10);
    if (v29 <= 0xFFFC)
    {
      if (v29 <= 0xFC)
        goto LABEL_65;
LABEL_83:
      *(_WORD *)((char *)a1 + v10) = v32;
LABEL_84:
      v28 = 4;
      if (v29 <= 0xFFFC)
        v28 = 2;
      goto LABEL_86;
    }
LABEL_80:
    *(_DWORD *)((char *)a1 + v10) = v32;
    goto LABEL_84;
  }
  *a1 = *a2;
  swift_bridgeObjectRetain();
  if (v10 > 3)
    goto LABEL_56;
  v29 = ((1 << (8 * v10)) + 17) >> (8 * v10);
  if (v29 > 0xFFFC)
  {
    *(_DWORD *)((char *)a1 + v10) = 0;
    goto LABEL_84;
  }
  if (v29 > 0xFC)
  {
    *(_WORD *)((char *)a1 + v10) = 0;
    goto LABEL_84;
  }
LABEL_56:
  *((_BYTE *)a1 + v10) = 0;
  if (v10 > 3)
    goto LABEL_70;
LABEL_67:
  v27 = 1;
  v33 = ((1 << (8 * v10)) + 17) >> (8 * v10);
  v28 = 2;
  if (v33 > 0xFFFC)
    v28 = 4;
  if (v33 <= 0xFC)
    goto LABEL_70;
LABEL_87:
  v35 = v28 + v10;
  if (v35 <= v7)
    v35 = v7;
  *((_BYTE *)a1 + v35) = v27;
  return a1;
}

_QWORD *sub_233B89F30(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  unsigned int v13;
  unsigned __int16 *v14;
  unsigned int v15;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  unsigned int v20;
  unint64_t v21;
  unsigned int v22;
  BOOL v23;
  unint64_t v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  unsigned int v30;
  unsigned __int8 *v31;
  unsigned int v32;
  unint64_t v33;
  unsigned int v34;
  uint64_t v35;
  unint64_t v36;
  unsigned int v37;
  unint64_t v38;
  unsigned int v39;
  unint64_t v40;
  uint64_t v41;
  unsigned int v42;
  unsigned int v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  unsigned int v47;
  char v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  unint64_t v52;

  if (a1 == a2)
    return a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254250060);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_QWORD *)(v9 + 64) <= 0x10uLL)
    v10 = 16;
  else
    v10 = *(_QWORD *)(v9 + 64);
  v11 = 8 * v10;
  if (v10 > 3)
  {
    if (v10 + 1 > v7)
      v12 = v10 + 1;
    else
      v12 = v7;
    v13 = *((unsigned __int8 *)a1 + v12);
    if (v13 <= 1)
    {
      if (v13 == 1)
      {
        v14 = (unsigned __int16 *)((char *)a1 + v10);
        goto LABEL_38;
      }
LABEL_49:
      (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(a1, v5);
      goto LABEL_52;
    }
    goto LABEL_18;
  }
  v15 = ((1 << v11) + 17) >> v11;
  if (v15 > 0xFFFC)
  {
    v19 = v10 + 4;
    if (v10 + 4 <= v7)
      v19 = v7;
    v20 = *((unsigned __int8 *)a1 + v19);
    if (v20 < 2)
    {
      if (v20 != 1)
        goto LABEL_49;
      v14 = (unsigned __int16 *)((char *)a1 + v10);
      goto LABEL_40;
    }
LABEL_27:
    v23 = v15 > 0xFFFC;
    v18 = 2;
    if (v23)
      v18 = 4;
LABEL_29:
    v24 = v18 + v10;
    if (v24 <= v7)
      LODWORD(v24) = v7;
    if (v24 <= 3)
      v25 = v24;
    else
      v25 = 4;
    __asm { BR              X12 }
  }
  if (v15 > 0xFC)
  {
    v21 = v10 + 2;
    if (v10 + 2 <= v7)
      v21 = v7;
    v22 = *((unsigned __int8 *)a1 + v21);
    if (v22 <= 1)
    {
      if (v22 != 1)
        goto LABEL_49;
      v14 = (unsigned __int16 *)((char *)a1 + v10);
LABEL_44:
      v27 = *v14;
      if (v27 < 3)
        goto LABEL_50;
      goto LABEL_45;
    }
    goto LABEL_27;
  }
  if (v10 + 1 > v7)
    v16 = v10 + 1;
  else
    v16 = v7;
  v17 = *((unsigned __int8 *)a1 + v16);
  if (v17 > 1)
  {
LABEL_18:
    v18 = 1;
    goto LABEL_29;
  }
  if (v17 != 1)
    goto LABEL_49;
  v14 = (unsigned __int16 *)((char *)a1 + v10);
  v26 = ((1 << v11) + 17) >> v11;
  if (v26 <= 0xFFFC)
  {
    if (v26 <= 0xFC)
    {
LABEL_38:
      v27 = *(unsigned __int8 *)v14;
      if (v27 < 3)
        goto LABEL_50;
LABEL_45:
      if (v10 <= 3)
        v28 = v10;
      else
        v28 = 4;
      __asm { BR              X12 }
    }
    goto LABEL_44;
  }
LABEL_40:
  v27 = *(_DWORD *)v14;
  if (v27 >= 3)
    goto LABEL_45;
LABEL_50:
  if (v27 == 2)
  {
    (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(a1, v8);
LABEL_52:
    if (v10 > 3)
      goto LABEL_53;
    goto LABEL_61;
  }
  swift_bridgeObjectRelease();
  if (v10 > 3)
  {
LABEL_53:
    if (v10 + 1 > v7)
      v29 = v10 + 1;
    else
      v29 = v7;
    v30 = *((unsigned __int8 *)a2 + v29);
    if (v30 <= 1)
    {
      if (v30 != 1)
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
LABEL_127:
        v45 = 0;
        v46 = 1;
        goto LABEL_136;
      }
      v31 = (unsigned __int8 *)a2 + v10;
LABEL_88:
      v43 = *v31;
      if (v43 < 3)
        goto LABEL_102;
      goto LABEL_95;
    }
    goto LABEL_67;
  }
LABEL_61:
  v32 = ((1 << v11) + 17) >> v11;
  if (v32 > 0xFFFC)
  {
    v36 = v10 + 4;
    if (v10 + 4 <= v7)
      v36 = v7;
    v37 = *((unsigned __int8 *)a2 + v36);
    if (v37 >= 2)
      goto LABEL_76;
    if (v37 == 1)
    {
      v31 = (unsigned __int8 *)a2 + v10;
      goto LABEL_90;
    }
    goto LABEL_99;
  }
  if (v32 > 0xFC)
  {
    v38 = v10 + 2;
    if (v10 + 2 <= v7)
      v38 = v7;
    v39 = *((unsigned __int8 *)a2 + v38);
    if (v39 > 1)
    {
LABEL_76:
      v35 = 2;
      if (v32 > 0xFFFC)
        v35 = 4;
LABEL_78:
      v40 = v35 + v10;
      if (v40 <= v7)
        LODWORD(v40) = v7;
      if (v40 <= 3)
        v41 = v40;
      else
        v41 = 4;
      __asm { BR              X12 }
    }
    if (v39 == 1)
    {
      v31 = (unsigned __int8 *)a2 + v10;
      goto LABEL_94;
    }
LABEL_99:
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
    v45 = 0;
    v46 = 2;
    if (v32 > 0xFFFC)
      v46 = 4;
    goto LABEL_136;
  }
  if (v10 + 1 > v7)
    v33 = v10 + 1;
  else
    v33 = v7;
  v34 = *((unsigned __int8 *)a2 + v33);
  if (v34 > 1)
  {
LABEL_67:
    v35 = 1;
    goto LABEL_78;
  }
  if (v34 == 1)
  {
    v31 = (unsigned __int8 *)a2 + v10;
    v42 = ((1 << v11) + 17) >> v11;
    if (v42 <= 0xFFFC)
    {
      if (v42 <= 0xFC)
        goto LABEL_88;
LABEL_94:
      v43 = *(unsigned __int16 *)v31;
      if (v43 < 3)
        goto LABEL_102;
      goto LABEL_95;
    }
LABEL_90:
    v43 = *(_DWORD *)v31;
    if (v43 < 3)
    {
LABEL_102:
      if (v43 != 2)
      {
        if (v43 != 1)
        {
          *a1 = *a2;
          swift_bridgeObjectRetain();
          if (v10 > 3)
            goto LABEL_105;
          v47 = ((1 << v11) + 17) >> v11;
          if (v47 > 0xFFFC)
          {
            *(_DWORD *)((char *)a1 + v10) = 0;
          }
          else
          {
            if (v47 <= 0xFC)
            {
LABEL_105:
              *((_BYTE *)a1 + v10) = 0;
              if (v10 > 3)
                goto LABEL_119;
              goto LABEL_116;
            }
            *(_WORD *)((char *)a1 + v10) = 0;
          }
LABEL_133:
          v46 = 4;
          if (v47 <= 0xFFFC)
            v46 = 2;
          goto LABEL_135;
        }
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        if (v10 > 3)
          goto LABEL_114;
        v49 = 1;
        v47 = ((1 << v11) + 17) >> v11;
        if (v47 <= 0xFFFC)
        {
          if (v47 <= 0xFC)
          {
LABEL_114:
            v48 = 1;
LABEL_115:
            *((_BYTE *)a1 + v10) = v48;
            if (v10 > 3)
            {
LABEL_119:
              v46 = 1;
LABEL_135:
              v45 = 1;
              goto LABEL_136;
            }
LABEL_116:
            v45 = 1;
            v50 = ((1 << v11) + 17) >> v11;
            v46 = 2;
            if (v50 > 0xFFFC)
              v46 = 4;
            if (v50 > 0xFC)
              goto LABEL_136;
            goto LABEL_119;
          }
LABEL_132:
          *(_WORD *)((char *)a1 + v10) = v49;
          goto LABEL_133;
        }
LABEL_129:
        *(_DWORD *)((char *)a1 + v10) = v49;
        goto LABEL_133;
      }
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v9 + 16))(a1, a2, v8);
      if (v10 <= 3)
      {
        v47 = ((1 << v11) + 17) >> v11;
        if (v47 > 0xFFFC)
        {
          v49 = 2;
          goto LABEL_129;
        }
        if (v47 > 0xFC)
        {
          LOWORD(v49) = 2;
          goto LABEL_132;
        }
      }
      v48 = 2;
      goto LABEL_115;
    }
LABEL_95:
    if (v10 <= 3)
      v44 = v10;
    else
      v44 = 4;
    __asm { BR              X12 }
  }
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
  v51 = ((1 << v11) + 17) >> v11;
  v46 = 2;
  if (v51 > 0xFFFC)
    v46 = 4;
  if (v51 <= 0xFC)
    goto LABEL_127;
  v45 = 0;
LABEL_136:
  v52 = v46 + v10;
  if (v52 <= v7)
    v52 = v7;
  *((_BYTE *)a1 + v52) = v45;
  return a1;
}

_OWORD *sub_233B8A6D4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unsigned int v12;
  unsigned __int8 *v13;
  unsigned int v14;
  unint64_t v15;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  unsigned int v29;
  char v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  unint64_t v34;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254250060);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_QWORD *)(v9 + 64) <= 0x10uLL)
    v10 = 16;
  else
    v10 = *(_QWORD *)(v9 + 64);
  if (v10 > 3)
  {
    if (v10 + 1 > v7)
      v11 = v10 + 1;
    else
      v11 = v7;
    v12 = *((unsigned __int8 *)a2 + v11);
    if (v12 <= 1)
    {
      if (v12 != 1)
      {
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
LABEL_78:
        v27 = 0;
        v28 = 1;
        goto LABEL_87;
      }
      v13 = (unsigned __int8 *)a2 + v10;
LABEL_39:
      v25 = *v13;
      if (v25 < 3)
        goto LABEL_53;
LABEL_46:
      if (v10 <= 3)
        v26 = v10;
      else
        v26 = 4;
      __asm { BR              X13 }
    }
    goto LABEL_18;
  }
  v14 = ((1 << (8 * v10)) + 17) >> (8 * v10);
  if (v14 > 0xFFFC)
  {
    v18 = v10 + 4;
    if (v10 + 4 <= v7)
      v18 = v7;
    v19 = *((unsigned __int8 *)a2 + v18);
    if (v19 >= 2)
      goto LABEL_27;
    if (v19 == 1)
    {
      v13 = (unsigned __int8 *)a2 + v10;
      goto LABEL_41;
    }
    goto LABEL_50;
  }
  if (v14 > 0xFC)
  {
    v20 = v10 + 2;
    if (v10 + 2 <= v7)
      v20 = v7;
    v21 = *((unsigned __int8 *)a2 + v20);
    if (v21 > 1)
    {
LABEL_27:
      v17 = 2;
      if (v14 > 0xFFFC)
        v17 = 4;
LABEL_29:
      v22 = v17 + v10;
      if (v22 <= v7)
        LODWORD(v22) = v7;
      if (v22 <= 3)
        v23 = v22;
      else
        v23 = 4;
      __asm { BR              X13 }
    }
    if (v21 == 1)
    {
      v13 = (unsigned __int8 *)a2 + v10;
      goto LABEL_45;
    }
LABEL_50:
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
    v27 = 0;
    v28 = 2;
    if (v14 > 0xFFFC)
      v28 = 4;
    goto LABEL_87;
  }
  if (v10 + 1 > v7)
    v15 = v10 + 1;
  else
    v15 = v7;
  v16 = *((unsigned __int8 *)a2 + v15);
  if (v16 > 1)
  {
LABEL_18:
    v17 = 1;
    goto LABEL_29;
  }
  if (v16 != 1)
  {
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
    v33 = ((1 << (8 * v10)) + 17) >> (8 * v10);
    v28 = 2;
    if (v33 > 0xFFFC)
      v28 = 4;
    if (v33 > 0xFC)
    {
      v27 = 0;
      goto LABEL_87;
    }
    goto LABEL_78;
  }
  v13 = (unsigned __int8 *)a2 + v10;
  v24 = ((1 << (8 * v10)) + 17) >> (8 * v10);
  if (v24 <= 0xFFFC)
  {
    if (v24 <= 0xFC)
      goto LABEL_39;
LABEL_45:
    v25 = *(unsigned __int16 *)v13;
    if (v25 < 3)
      goto LABEL_53;
    goto LABEL_46;
  }
LABEL_41:
  v25 = *(_DWORD *)v13;
  if (v25 >= 3)
    goto LABEL_46;
LABEL_53:
  if (v25 == 2)
  {
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v9 + 32))(a1, a2, v8);
    if (v10 <= 3)
    {
      v29 = ((1 << (8 * v10)) + 17) >> (8 * v10);
      if (v29 > 0xFFFC)
      {
        v31 = 2;
        goto LABEL_80;
      }
      if (v29 > 0xFC)
      {
        LOWORD(v31) = 2;
        goto LABEL_83;
      }
    }
    v30 = 2;
    goto LABEL_66;
  }
  if (v25 == 1)
  {
    *a1 = *a2;
    if (v10 > 3)
    {
LABEL_65:
      v30 = 1;
LABEL_66:
      *((_BYTE *)a1 + v10) = v30;
      if (v10 > 3)
      {
LABEL_70:
        v28 = 1;
LABEL_86:
        v27 = 1;
        goto LABEL_87;
      }
      goto LABEL_67;
    }
    v31 = 1;
    v29 = ((1 << (8 * v10)) + 17) >> (8 * v10);
    if (v29 <= 0xFFFC)
    {
      if (v29 <= 0xFC)
        goto LABEL_65;
LABEL_83:
      *(_WORD *)((char *)a1 + v10) = v31;
LABEL_84:
      v28 = 4;
      if (v29 <= 0xFFFC)
        v28 = 2;
      goto LABEL_86;
    }
LABEL_80:
    *(_DWORD *)((char *)a1 + v10) = v31;
    goto LABEL_84;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  if (v10 > 3)
    goto LABEL_56;
  v29 = ((1 << (8 * v10)) + 17) >> (8 * v10);
  if (v29 > 0xFFFC)
  {
    *(_DWORD *)((char *)a1 + v10) = 0;
    goto LABEL_84;
  }
  if (v29 > 0xFC)
  {
    *(_WORD *)((char *)a1 + v10) = 0;
    goto LABEL_84;
  }
LABEL_56:
  *((_BYTE *)a1 + v10) = 0;
  if (v10 > 3)
    goto LABEL_70;
LABEL_67:
  v27 = 1;
  v32 = ((1 << (8 * v10)) + 17) >> (8 * v10);
  v28 = 2;
  if (v32 > 0xFFFC)
    v28 = 4;
  if (v32 <= 0xFC)
    goto LABEL_70;
LABEL_87:
  v34 = v28 + v10;
  if (v34 <= v7)
    v34 = v7;
  *((_BYTE *)a1 + v34) = v27;
  return a1;
}

_QWORD *sub_233B8ABF8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  unsigned int v13;
  unsigned __int16 *v14;
  unsigned int v15;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  unsigned int v20;
  unint64_t v21;
  unsigned int v22;
  BOOL v23;
  unint64_t v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  unsigned int v30;
  unsigned __int8 *v31;
  unsigned int v32;
  unint64_t v33;
  unsigned int v34;
  uint64_t v35;
  unint64_t v36;
  unsigned int v37;
  unint64_t v38;
  unsigned int v39;
  unint64_t v40;
  uint64_t v41;
  unsigned int v42;
  unsigned int v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  unsigned int v47;
  char v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  unint64_t v52;

  if (a1 == a2)
    return a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254250060);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_QWORD *)(v9 + 64) <= 0x10uLL)
    v10 = 16;
  else
    v10 = *(_QWORD *)(v9 + 64);
  v11 = 8 * v10;
  if (v10 > 3)
  {
    if (v10 + 1 > v7)
      v12 = v10 + 1;
    else
      v12 = v7;
    v13 = *((unsigned __int8 *)a1 + v12);
    if (v13 <= 1)
    {
      if (v13 == 1)
      {
        v14 = (unsigned __int16 *)((char *)a1 + v10);
        goto LABEL_38;
      }
LABEL_49:
      (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(a1, v5);
      goto LABEL_52;
    }
    goto LABEL_18;
  }
  v15 = ((1 << v11) + 17) >> v11;
  if (v15 > 0xFFFC)
  {
    v19 = v10 + 4;
    if (v10 + 4 <= v7)
      v19 = v7;
    v20 = *((unsigned __int8 *)a1 + v19);
    if (v20 < 2)
    {
      if (v20 != 1)
        goto LABEL_49;
      v14 = (unsigned __int16 *)((char *)a1 + v10);
      goto LABEL_40;
    }
LABEL_27:
    v23 = v15 > 0xFFFC;
    v18 = 2;
    if (v23)
      v18 = 4;
LABEL_29:
    v24 = v18 + v10;
    if (v24 <= v7)
      LODWORD(v24) = v7;
    if (v24 <= 3)
      v25 = v24;
    else
      v25 = 4;
    __asm { BR              X12 }
  }
  if (v15 > 0xFC)
  {
    v21 = v10 + 2;
    if (v10 + 2 <= v7)
      v21 = v7;
    v22 = *((unsigned __int8 *)a1 + v21);
    if (v22 <= 1)
    {
      if (v22 != 1)
        goto LABEL_49;
      v14 = (unsigned __int16 *)((char *)a1 + v10);
LABEL_44:
      v27 = *v14;
      if (v27 < 3)
        goto LABEL_50;
      goto LABEL_45;
    }
    goto LABEL_27;
  }
  if (v10 + 1 > v7)
    v16 = v10 + 1;
  else
    v16 = v7;
  v17 = *((unsigned __int8 *)a1 + v16);
  if (v17 > 1)
  {
LABEL_18:
    v18 = 1;
    goto LABEL_29;
  }
  if (v17 != 1)
    goto LABEL_49;
  v14 = (unsigned __int16 *)((char *)a1 + v10);
  v26 = ((1 << v11) + 17) >> v11;
  if (v26 <= 0xFFFC)
  {
    if (v26 <= 0xFC)
    {
LABEL_38:
      v27 = *(unsigned __int8 *)v14;
      if (v27 < 3)
        goto LABEL_50;
LABEL_45:
      if (v10 <= 3)
        v28 = v10;
      else
        v28 = 4;
      __asm { BR              X12 }
    }
    goto LABEL_44;
  }
LABEL_40:
  v27 = *(_DWORD *)v14;
  if (v27 >= 3)
    goto LABEL_45;
LABEL_50:
  if (v27 == 2)
  {
    (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(a1, v8);
LABEL_52:
    if (v10 > 3)
      goto LABEL_53;
    goto LABEL_61;
  }
  swift_bridgeObjectRelease();
  if (v10 > 3)
  {
LABEL_53:
    if (v10 + 1 > v7)
      v29 = v10 + 1;
    else
      v29 = v7;
    v30 = *((unsigned __int8 *)a2 + v29);
    if (v30 <= 1)
    {
      if (v30 != 1)
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
LABEL_127:
        v45 = 0;
        v46 = 1;
        goto LABEL_136;
      }
      v31 = (unsigned __int8 *)a2 + v10;
LABEL_88:
      v43 = *v31;
      if (v43 < 3)
        goto LABEL_102;
      goto LABEL_95;
    }
    goto LABEL_67;
  }
LABEL_61:
  v32 = ((1 << v11) + 17) >> v11;
  if (v32 > 0xFFFC)
  {
    v36 = v10 + 4;
    if (v10 + 4 <= v7)
      v36 = v7;
    v37 = *((unsigned __int8 *)a2 + v36);
    if (v37 >= 2)
      goto LABEL_76;
    if (v37 == 1)
    {
      v31 = (unsigned __int8 *)a2 + v10;
      goto LABEL_90;
    }
    goto LABEL_99;
  }
  if (v32 > 0xFC)
  {
    v38 = v10 + 2;
    if (v10 + 2 <= v7)
      v38 = v7;
    v39 = *((unsigned __int8 *)a2 + v38);
    if (v39 > 1)
    {
LABEL_76:
      v35 = 2;
      if (v32 > 0xFFFC)
        v35 = 4;
LABEL_78:
      v40 = v35 + v10;
      if (v40 <= v7)
        LODWORD(v40) = v7;
      if (v40 <= 3)
        v41 = v40;
      else
        v41 = 4;
      __asm { BR              X12 }
    }
    if (v39 == 1)
    {
      v31 = (unsigned __int8 *)a2 + v10;
      goto LABEL_94;
    }
LABEL_99:
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
    v45 = 0;
    v46 = 2;
    if (v32 > 0xFFFC)
      v46 = 4;
    goto LABEL_136;
  }
  if (v10 + 1 > v7)
    v33 = v10 + 1;
  else
    v33 = v7;
  v34 = *((unsigned __int8 *)a2 + v33);
  if (v34 > 1)
  {
LABEL_67:
    v35 = 1;
    goto LABEL_78;
  }
  if (v34 == 1)
  {
    v31 = (unsigned __int8 *)a2 + v10;
    v42 = ((1 << v11) + 17) >> v11;
    if (v42 <= 0xFFFC)
    {
      if (v42 <= 0xFC)
        goto LABEL_88;
LABEL_94:
      v43 = *(unsigned __int16 *)v31;
      if (v43 < 3)
        goto LABEL_102;
      goto LABEL_95;
    }
LABEL_90:
    v43 = *(_DWORD *)v31;
    if (v43 < 3)
    {
LABEL_102:
      if (v43 != 2)
      {
        if (v43 != 1)
        {
          *a1 = *a2;
          if (v10 > 3)
            goto LABEL_105;
          v47 = ((1 << v11) + 17) >> v11;
          if (v47 > 0xFFFC)
          {
            *(_DWORD *)((char *)a1 + v10) = 0;
          }
          else
          {
            if (v47 <= 0xFC)
            {
LABEL_105:
              *((_BYTE *)a1 + v10) = 0;
              if (v10 > 3)
                goto LABEL_119;
              goto LABEL_116;
            }
            *(_WORD *)((char *)a1 + v10) = 0;
          }
LABEL_133:
          v46 = 4;
          if (v47 <= 0xFFFC)
            v46 = 2;
          goto LABEL_135;
        }
        *(_OWORD *)a1 = *(_OWORD *)a2;
        if (v10 > 3)
          goto LABEL_114;
        v49 = 1;
        v47 = ((1 << v11) + 17) >> v11;
        if (v47 <= 0xFFFC)
        {
          if (v47 <= 0xFC)
          {
LABEL_114:
            v48 = 1;
LABEL_115:
            *((_BYTE *)a1 + v10) = v48;
            if (v10 > 3)
            {
LABEL_119:
              v46 = 1;
LABEL_135:
              v45 = 1;
              goto LABEL_136;
            }
LABEL_116:
            v45 = 1;
            v50 = ((1 << v11) + 17) >> v11;
            v46 = 2;
            if (v50 > 0xFFFC)
              v46 = 4;
            if (v50 > 0xFC)
              goto LABEL_136;
            goto LABEL_119;
          }
LABEL_132:
          *(_WORD *)((char *)a1 + v10) = v49;
          goto LABEL_133;
        }
LABEL_129:
        *(_DWORD *)((char *)a1 + v10) = v49;
        goto LABEL_133;
      }
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v9 + 32))(a1, a2, v8);
      if (v10 <= 3)
      {
        v47 = ((1 << v11) + 17) >> v11;
        if (v47 > 0xFFFC)
        {
          v49 = 2;
          goto LABEL_129;
        }
        if (v47 > 0xFC)
        {
          LOWORD(v49) = 2;
          goto LABEL_132;
        }
      }
      v48 = 2;
      goto LABEL_115;
    }
LABEL_95:
    if (v10 <= 3)
      v44 = v10;
    else
      v44 = 4;
    __asm { BR              X12 }
  }
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
  v51 = ((1 << v11) + 17) >> v11;
  v46 = 2;
  if (v51 > 0xFFFC)
    v46 = 4;
  if (v51 <= 0xFC)
    goto LABEL_127;
  v45 = 0;
LABEL_136:
  v52 = v46 + v10;
  if (v52 <= v7)
    v52 = v7;
  *((_BYTE *)a1 + v52) = v45;
  return a1;
}

uint64_t sub_233B8B38C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  int v12;
  unsigned int v14;
  int v15;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unsigned int v19;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  v6 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254250060) - 8) + 64);
  if (v6 <= 0x10)
    v6 = 16;
  if (v6 > 3)
    goto LABEL_7;
  v7 = ((1 << (8 * v6)) + 17) >> (8 * v6);
  v8 = 2;
  if (v7 > 0xFFFC)
    v8 = 4;
  if (v7 <= 0xFC)
LABEL_7:
    v8 = 1;
  v9 = v8 + v6;
  if (v9 <= v5)
    v9 = v5;
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_28;
  v10 = v9 + 1;
  v11 = 8 * v10;
  if (v10 <= 3)
  {
    v14 = ((a2 + ~(-1 << v11) - 254) >> v11) + 1;
    if (HIWORD(v14))
    {
      v12 = *(_DWORD *)(a1 + v10);
      if (!v12)
        goto LABEL_28;
      goto LABEL_21;
    }
    if (v14 > 0xFF)
    {
      v12 = *(unsigned __int16 *)(a1 + v10);
      if (!*(_WORD *)(a1 + v10))
        goto LABEL_28;
      goto LABEL_21;
    }
    if (v14 < 2)
    {
LABEL_28:
      if (v6 > 3)
        goto LABEL_32;
      v16 = ((1 << (8 * v6)) + 17) >> (8 * v6);
      v17 = 2;
      if (v16 > 0xFFFC)
        v17 = 4;
      if (v16 <= 0xFC)
LABEL_32:
        v17 = 1;
      v18 = v17 + v6;
      if (v18 <= v5)
        v18 = v5;
      v19 = *(unsigned __int8 *)(a1 + v18);
      if (v19 >= 2)
        return (v19 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v12 = *(unsigned __int8 *)(a1 + v10);
  if (!*(_BYTE *)(a1 + v10))
    goto LABEL_28;
LABEL_21:
  v15 = (v12 - 1) << v11;
  if (v10 > 3)
    v15 = 0;
  if ((_DWORD)v10)
  {
    if (v10 > 3)
      LODWORD(v10) = 4;
    __asm { BR              X11 }
  }
  return (v15 + 255);
}

void sub_233B8B564(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v7;
  unint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v11;
  size_t v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;

  v7 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254250060) - 8) + 64);
  if (v8 <= 0x10)
    v8 = 16;
  if (v8 > 3)
    goto LABEL_7;
  v9 = ((1 << (8 * v8)) + 17) >> (8 * v8);
  v10 = 2;
  if (v9 > 0xFFFC)
    v10 = 4;
  if (v9 <= 0xFC)
LABEL_7:
    v10 = 1;
  v11 = v10 + v8;
  if (v11 <= v7)
    v11 = v7;
  v12 = v11 + 1;
  if (a3 < 0xFF)
  {
    v13 = 0;
  }
  else if (v12 <= 3)
  {
    v15 = ((a3 + ~(-1 << (8 * v12)) - 254) >> (8 * v12)) + 1;
    if (HIWORD(v15))
    {
      v13 = 4u;
    }
    else if (v15 >= 0x100)
    {
      v13 = 2;
    }
    else
    {
      v13 = v15 > 1;
    }
  }
  else
  {
    v13 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v14 = a2 - 255;
  if (v12 < 4)
  {
    if ((_DWORD)v12)
    {
      v16 = v14 & ~(-1 << (8 * v12));
      bzero(a1, v12);
      if ((_DWORD)v12 == 3)
      {
        *(_WORD *)a1 = v16;
        a1[2] = BYTE2(v16);
      }
      else if ((_DWORD)v12 == 2)
      {
        *(_WORD *)a1 = v16;
      }
      else
      {
        *a1 = v16;
      }
    }
  }
  else
  {
    bzero(a1, v12);
    *(_DWORD *)a1 = v14;
  }
  __asm { BR              X10 }
}

uint64_t sub_233B8B7B8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  unsigned int v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  unint64_t v12;
  uint64_t v13;

  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  v4 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254250060) - 8) + 64);
  if (v4 <= 0x10)
    v4 = 16;
  if (v4 <= 3)
  {
    v8 = ((1 << (8 * v4)) + 17) >> (8 * v4);
    if (v8 > 0xFFFC)
    {
      v10 = v4 + 4;
      if (v4 + 4 <= v3)
        v10 = v3;
      result = *(unsigned __int8 *)(a1 + v10);
      if (result < 2)
        return result;
    }
    else
    {
      if (v8 <= 0xFC)
        goto LABEL_4;
      v9 = v4 + 2;
      if (v4 + 2 <= v3)
        v9 = v3;
      result = *(unsigned __int8 *)(a1 + v9);
      if (result <= 1)
        return result;
    }
    v11 = v8 > 0xFFFC;
    v7 = 2;
    if (v11)
      v7 = 4;
LABEL_20:
    v12 = v7 + v4;
    if (v12 <= v3)
      LODWORD(v12) = v3;
    if (v12 <= 3)
      v13 = v12;
    else
      v13 = 4;
    __asm { BR              X11 }
  }
LABEL_4:
  if (v4 + 1 > v3)
    v5 = v4 + 1;
  else
    v5 = v3;
  result = *(unsigned __int8 *)(a1 + v5);
  if (result > 1)
  {
    v7 = 1;
    goto LABEL_20;
  }
  return result;
}

uint64_t sub_233B8B90C(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v5;
  uint64_t result;
  unint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unsigned int v12;
  uint64_t v13;
  unint64_t v14;
  BOOL v15;
  unsigned int v16;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  size_t v22;
  size_t v23;
  int v24;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_254250060);
  v7 = *(_QWORD *)(*(_QWORD *)(result - 8) + 64);
  if (v7 <= 0x10)
    v7 = 16;
  if (a2 > 1)
  {
    v11 = 8 * v7;
    if (v7 > 3)
      goto LABEL_16;
    v12 = ((1 << v11) + 17) >> v11;
    v13 = 2;
    if (v12 > 0xFFFC)
      v13 = 4;
    if (v12 <= 0xFC)
LABEL_16:
      v13 = 1;
    v14 = v13 + v7;
    if (v14 <= v5)
      LODWORD(v14) = v5;
    v15 = v14 > 3;
    v16 = ((a2 - 2) >> (8 * v14)) + 2;
    if (v15)
      LOBYTE(v16) = 2;
    if (v7 < 4)
    {
      v18 = ((1 << v11) + 17) >> v11;
      v19 = 4;
      if (v18 >= 0xFFFD)
        v20 = 4;
      else
        v20 = 2;
      if (v18 < 0xFD)
        v20 = 1;
      v21 = v20 + v7;
      if (v21 <= v5)
        v21 = v5;
      a1[v21] = v16;
      if (v18 <= 0xFFFC)
        v19 = 2;
      if (v18 > 0xFC)
      {
LABEL_37:
        v22 = v19 + v7;
        if (v22 <= v5)
          v23 = v5;
        else
          v23 = v22;
        if (v23 >= 4)
          v24 = 4;
        else
          v24 = v23;
        bzero(a1, v23);
        __asm { BR              X10 }
      }
    }
    else
    {
      if (v7 + 1 > v5)
        v17 = v7 + 1;
      else
        v17 = v5;
      a1[v17] = v16;
    }
    v19 = 1;
    goto LABEL_37;
  }
  if (v7 > 3)
    goto LABEL_8;
  v8 = ((1 << (8 * v7)) + 17) >> (8 * v7);
  v9 = 2;
  if (v8 > 0xFFFC)
    v9 = 4;
  if (v8 <= 0xFC)
LABEL_8:
    v9 = 1;
  v10 = v9 + v7;
  if (v10 <= v5)
    v10 = v5;
  a1[v10] = a2;
  return result;
}

uint64_t sub_233B8BAFC(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_233B8BB48 + 4 * byte_233BDB24C[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_233B8BB7C + 4 * byte_233BDB247[v4]))();
}

uint64_t sub_233B8BB7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233B8BB84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233B8BB8CLL);
  return result;
}

uint64_t sub_233B8BB98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233B8BBA0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_233B8BBA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233B8BBAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233B8BBBC(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_233B8BBFC + 4 * byte_233BDB251[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_233B8BC1C + 4 * byte_233BDB256[v4]))();
}

_BYTE *sub_233B8BBFC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_233B8BC1C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233B8BC24(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233B8BC2C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233B8BC34(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233B8BC3C(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_233B8BC48()
{
  JUMPOUT(0x23493E300);
}

void sub_233B8BC58()
{
  JUMPOUT(0x23493E300);
}

void sub_233B8BC68()
{
  JUMPOUT(0x23493E300);
}

void sub_233B8BC78()
{
  JUMPOUT(0x23493E300);
}

void sub_233B8BC88()
{
  JUMPOUT(0x23493E300);
}

void sub_233B8BC98()
{
  JUMPOUT(0x23493E300);
}

void sub_233B8BCA8()
{
  JUMPOUT(0x23493E300);
}

void sub_233B8BCB8()
{
  JUMPOUT(0x23493E300);
}

void sub_233B8BCC8()
{
  JUMPOUT(0x23493E300);
}

uint64_t sub_233B8BCD8()
{
  return 2;
}

uint64_t InstallConfirmationRequest.context.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD v14[2];
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  char v21;

  v2 = *(_OWORD *)(v1 + 80);
  v3 = *(_OWORD *)(v1 + 112);
  v19 = *(_OWORD *)(v1 + 96);
  v20 = v3;
  v4 = *(_OWORD *)(v1 + 16);
  v5 = *(_OWORD *)(v1 + 48);
  v15 = *(_OWORD *)(v1 + 32);
  v6 = v15;
  v16 = v5;
  v7 = *(_OWORD *)(v1 + 48);
  v8 = *(_OWORD *)(v1 + 80);
  v17 = *(_OWORD *)(v1 + 64);
  v9 = v17;
  v18 = v8;
  v10 = *(_OWORD *)(v1 + 16);
  v14[0] = *(_OWORD *)v1;
  v11 = v14[0];
  v14[1] = v10;
  v12 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(a1 + 96) = v19;
  *(_OWORD *)(a1 + 112) = v12;
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = v9;
  *(_OWORD *)(a1 + 80) = v2;
  v21 = *(_BYTE *)(v1 + 128);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(v1 + 128);
  *(_OWORD *)a1 = v11;
  *(_OWORD *)(a1 + 16) = v4;
  return sub_233B8BD54((uint64_t)v14);
}

uint64_t sub_233B8BD54(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(_QWORD *)(a1 + 80);
  v7 = *(_QWORD *)(a1 + 104);
  v10 = *(_QWORD *)(a1 + 96);
  v8 = *(_BYTE *)(a1 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_233B84280(v2, v3, v4, v5, v6, v8);
  sub_233B842EC(v10, v7);
  swift_bridgeObjectRetain();
  return a1;
}

__n128 InstallConfirmationRequest.init(context:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;

  v2 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(a2 + 96) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(a2 + 112) = v2;
  *(_BYTE *)(a2 + 128) = *(_BYTE *)(a1 + 128);
  v3 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v3;
  v4 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a2 + 80) = v4;
  result = *(__n128 *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t InstallConfirmationRequest.run()()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;

  *(_QWORD *)(v1 + 168) = v0;
  type metadata accessor for LaunchAngelXPCRequest(0);
  *(_QWORD *)(v1 + 176) = swift_task_alloc();
  v2 = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v1 + 112) = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v1 + 128) = v2;
  *(_BYTE *)(v1 + 144) = *(_BYTE *)(v0 + 128);
  v3 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v1 + 48) = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v1 + 64) = v3;
  v4 = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v1 + 80) = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v1 + 96) = v4;
  v5 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)v0;
  *(_OWORD *)(v1 + 32) = v5;
  return swift_task_switch();
}

uint64_t sub_233B8BEB0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _QWORD *v9;

  v1 = v0[21];
  v2 = v0[22];
  v3 = *(_OWORD *)(v1 + 64);
  v5 = *(_OWORD *)(v1 + 16);
  v4 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v2 + 64) = v3;
  *(_OWORD *)(v2 + 16) = v5;
  *(_OWORD *)(v2 + 32) = v4;
  v7 = *(_OWORD *)(v1 + 96);
  v6 = *(_OWORD *)(v1 + 112);
  v8 = *(_OWORD *)(v1 + 80);
  *(_BYTE *)(v2 + 128) = *(_BYTE *)(v1 + 128);
  *(_OWORD *)(v2 + 96) = v7;
  *(_OWORD *)(v2 + 112) = v6;
  *(_OWORD *)(v2 + 80) = v8;
  *(_OWORD *)v2 = *(_OWORD *)v1;
  type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  swift_storeEnumTagMultiPayload();
  sub_233B8BD54((uint64_t)(v0 + 2));
  v9 = (_QWORD *)swift_task_alloc();
  v0[23] = v9;
  *v9 = v0;
  v9[1] = sub_233B8BF68;
  return static LaunchAngelConnectionUtilities.handleLaunchAngelRequest(_:)((uint64_t)(v0 + 19), v0[22]);
}

uint64_t sub_233B8BF68()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_233B8BFCC()
{
  uint64_t v0;
  uint64_t v1;

  sub_233B8C06C(*(_QWORD *)(v0 + 176));
  if (*(_BYTE *)(v0 + 160))
  {
    sub_233B85664(*(_QWORD *)(v0 + 152), *(_BYTE *)(v0 + 160));
    v1 = 0;
  }
  else
  {
    v1 = *(_QWORD *)(v0 + 152) & 1;
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_233B8C028()
{
  uint64_t v0;

  sub_233B8C06C(*(_QWORD *)(v0 + 176));
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_233B8C06C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LaunchAngelXPCRequest(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for InstallConfirmationRequest(uint64_t a1)
{
  unint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_233B81A48(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88));
  v2 = *(_QWORD *)(a1 + 104);
  if (v2 >> 60 != 15)
    sub_233B71B8C(*(_QWORD *)(a1 + 96), v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InstallConfirmationRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 72);
  v11 = *(_QWORD *)(a2 + 80);
  v12 = *(_BYTE *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_233B84280(v7, v8, v9, v10, v11, v12);
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v10;
  *(_QWORD *)(a1 + 80) = v11;
  *(_BYTE *)(a1 + 88) = v12;
  *(_BYTE *)(a1 + 89) = *(_BYTE *)(a2 + 89);
  v13 = (uint64_t *)(a2 + 96);
  v14 = *(_QWORD *)(a2 + 104);
  if (v14 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 96) = *(_OWORD *)v13;
  }
  else
  {
    v15 = *v13;
    sub_233B71CAC(*v13, *(_QWORD *)(a2 + 104));
    *(_QWORD *)(a1 + 96) = v15;
    *(_QWORD *)(a1 + 104) = v14;
  }
  v16 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v16;
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for InstallConfirmationRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 72);
  v8 = *(_QWORD *)(a2 + 80);
  v9 = *(_BYTE *)(a2 + 88);
  sub_233B84280(v4, v5, v6, v7, v8, v9);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_QWORD *)(a1 + 64);
  v13 = *(_QWORD *)(a1 + 72);
  v14 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 72) = v7;
  *(_QWORD *)(a1 + 80) = v8;
  v15 = *(_BYTE *)(a1 + 88);
  *(_BYTE *)(a1 + 88) = v9;
  sub_233B81A48(v10, v11, v12, v13, v14, v15);
  *(_BYTE *)(a1 + 89) = *(_BYTE *)(a2 + 89);
  v16 = (uint64_t *)(a2 + 96);
  v17 = *(_QWORD *)(a2 + 104);
  if (*(_QWORD *)(a1 + 104) >> 60 != 15)
  {
    if (v17 >> 60 != 15)
    {
      v19 = *v16;
      sub_233B71CAC(*v16, *(_QWORD *)(a2 + 104));
      v20 = *(_QWORD *)(a1 + 96);
      v21 = *(_QWORD *)(a1 + 104);
      *(_QWORD *)(a1 + 96) = v19;
      *(_QWORD *)(a1 + 104) = v17;
      sub_233B71B8C(v20, v21);
      goto LABEL_8;
    }
    sub_233B8C3A4(a1 + 96);
    goto LABEL_6;
  }
  if (v17 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 96) = *(_OWORD *)v16;
    goto LABEL_8;
  }
  v18 = *v16;
  sub_233B71CAC(*v16, *(_QWORD *)(a2 + 104));
  *(_QWORD *)(a1 + 96) = v18;
  *(_QWORD *)(a1 + 104) = v17;
LABEL_8:
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  return a1;
}

uint64_t sub_233B8C3A4(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BDCDDE8] - 8) + 8))();
  return a1;
}

__n128 __swift_memcpy129_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for InstallConfirmationRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __int128 v14;
  char v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 80);
  v8 = *(_BYTE *)(a2 + 88);
  v9 = *(_QWORD *)(a1 + 48);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_QWORD *)(a1 + 64);
  v12 = *(_QWORD *)(a1 + 72);
  v13 = *(_QWORD *)(a1 + 80);
  v14 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v14;
  *(_QWORD *)(a1 + 80) = v7;
  v15 = *(_BYTE *)(a1 + 88);
  *(_BYTE *)(a1 + 88) = v8;
  sub_233B81A48(v9, v10, v11, v12, v13, v15);
  *(_BYTE *)(a1 + 89) = *(_BYTE *)(a2 + 89);
  v16 = (_QWORD *)(a2 + 96);
  v17 = *(_QWORD *)(a1 + 104);
  if (v17 >> 60 != 15)
  {
    v18 = *(_QWORD *)(a2 + 104);
    if (v18 >> 60 != 15)
    {
      v19 = *(_QWORD *)(a1 + 96);
      *(_QWORD *)(a1 + 96) = *v16;
      *(_QWORD *)(a1 + 104) = v18;
      sub_233B71B8C(v19, v17);
      goto LABEL_6;
    }
    sub_233B8C3A4(a1 + 96);
  }
  *(_OWORD *)(a1 + 96) = *(_OWORD *)v16;
LABEL_6:
  v20 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v20;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  return a1;
}

uint64_t getEnumTagSinglePayload for InstallConfirmationRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 129))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InstallConfirmationRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 128) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 129) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 129) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for InstallConfirmationRequest()
{
  return &type metadata for InstallConfirmationRequest;
}

uint64_t ManifestValidationRequest.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_233BD851C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t ManifestValidationRequest.primaryProductVariant.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ManifestValidationRequest() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for ManifestValidationRequest()
{
  uint64_t result;

  result = qword_256124400;
  if (!qword_256124400)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ManifestValidationRequest.compatibleProductVariants.getter()
{
  type metadata accessor for ManifestValidationRequest();
  return swift_bridgeObjectRetain();
}

uint64_t ManifestValidationRequest.osVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ManifestValidationRequest() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

int *ManifestValidationRequest.init(url:primaryProductVariant:compatibleProductVariants:osVersion:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14;
  int *result;
  _QWORD *v16;
  _QWORD *v17;

  v14 = sub_233BD851C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a7, a1, v14);
  result = (int *)type metadata accessor for ManifestValidationRequest();
  v16 = (_QWORD *)(a7 + result[5]);
  *v16 = a2;
  v16[1] = a3;
  *(_QWORD *)(a7 + result[6]) = a4;
  v17 = (_QWORD *)(a7 + result[7]);
  *v17 = a5;
  v17[1] = a6;
  return result;
}

uint64_t ManifestValidationRequest.run()()
{
  uint64_t v0;
  _QWORD *v1;

  v1[3] = v0;
  type metadata accessor for ManifestValidationRequest();
  v1[4] = swift_task_alloc();
  v1[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233B8C7C4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  char *v5;

  if (qword_25424FEB8 != -1)
    swift_once();
  v1 = v0[4];
  v2 = v0[5];
  sub_233B8D108(v0[3], v2);
  sub_233B74300(&qword_256123EA0, (uint64_t (*)(uint64_t))type metadata accessor for ManifestValidationRequest, (uint64_t)&protocol conformance descriptor for ManifestValidationRequest);
  sub_233B74300(&qword_256123EA8, (uint64_t (*)(uint64_t))type metadata accessor for ManifestValidationRequest, (uint64_t)&protocol conformance descriptor for ManifestValidationRequest);
  sub_233B8D108(v2, v1);
  v0[2] = v1;
  v5 = (char *)&dword_256123E98 + dword_256123E98;
  v3 = (_QWORD *)swift_task_alloc();
  v0[6] = v3;
  *v3 = v0;
  v3[1] = sub_233B8C8C4;
  return ((uint64_t (*)(_QWORD *, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v5)(v0 + 2, sub_233B8C9C8, 0);
}

uint64_t sub_233B8C8C4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_233B8D14C(*(_QWORD *)(v2 + 32));
  return swift_task_switch();
}

uint64_t sub_233B8C930()
{
  uint64_t v0;

  sub_233B8D14C(*(_QWORD *)(v0 + 40));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233B8C978()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  sub_233B8D14C(*(_QWORD *)(v0 + 32));
  sub_233B8D14C(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_233B8C9C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  void *v9;
  _QWORD v10[6];

  v8 = (void *)sub_233BD8534();
  v10[4] = a4;
  v10[5] = a5;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_233BC37F0;
  v10[3] = &block_descriptor_1;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_runManifestValidation_reply_, v8, v9);
  _Block_release(v9);

}

uint64_t sub_233B8CA88()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_233B8CAB0 + 4 * byte_233BDB6B0[*v0]))(7107189, 0xE300000000000000);
}

unint64_t sub_233B8CAB0()
{
  return 0xD000000000000015;
}

unint64_t sub_233B8CACC()
{
  return 0xD000000000000019;
}

uint64_t sub_233B8CAEC()
{
  return 0x6F6973726556736FLL;
}

uint64_t sub_233B8CB08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233B8D8F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233B8CB2C()
{
  sub_233B8D188();
  return sub_233BD8D8C();
}

uint64_t sub_233B8CB54()
{
  sub_233B8D188();
  return sub_233BD8D98();
}

uint64_t ManifestValidationRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE v12[16];
  uint64_t v13;
  char v14;
  char v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124390);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233B8D188();
  sub_233BD8D80();
  v15 = 0;
  sub_233BD851C();
  sub_233B74300(&qword_256123860, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
  sub_233BD8C30();
  if (!v2)
  {
    v10 = type metadata accessor for ManifestValidationRequest();
    v14 = 1;
    sub_233BD8BE8();
    v13 = *(_QWORD *)(v3 + *(int *)(v10 + 24));
    v12[15] = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25424FDD0);
    sub_233B8D1CC(&qword_25424FCF0, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    sub_233BD8C00();
    v12[14] = 3;
    sub_233BD8BE8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t ManifestValidationRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  _QWORD *v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;
  char v39;

  v29 = a2;
  v30 = sub_233BD851C();
  v3 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30, v4);
  v31 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561243A0);
  v6 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32, v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for ManifestValidationRequest();
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233B8D188();
  v33 = v9;
  v14 = (uint64_t)v34;
  sub_233BD8D68();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v15 = v6;
  v34 = a1;
  v16 = (uint64_t)v13;
  v39 = 0;
  sub_233B74300(&qword_256123870, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
  v17 = v30;
  v18 = v31;
  v19 = v32;
  sub_233BD8BA0();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v16, v18, v17);
  v38 = 1;
  v20 = sub_233BD8B58();
  v21 = (uint64_t *)(v16 + v10[5]);
  *v21 = v20;
  v21[1] = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25424FDD0);
  v37 = 2;
  sub_233B8D1CC(&qword_25424FDC0, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
  sub_233BD8B70();
  *(_QWORD *)(v16 + v10[6]) = v35;
  v36 = 3;
  v23 = sub_233BD8B58();
  v25 = v24;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v33, v19);
  v26 = (uint64_t *)(v16 + v10[7]);
  *v26 = v23;
  v26[1] = v25;
  sub_233B8D108(v16, v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  return sub_233B8D14C(v16);
}

uint64_t sub_233B8D0E0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ManifestValidationRequest.init(from:)(a1, a2);
}

uint64_t sub_233B8D0F4(_QWORD *a1)
{
  return ManifestValidationRequest.encode(to:)(a1);
}

uint64_t sub_233B8D108(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ManifestValidationRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_233B8D14C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ManifestValidationRequest();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_233B8D188()
{
  unint64_t result;

  result = qword_256124398;
  if (!qword_256124398)
  {
    result = MEMORY[0x23493E300](&unk_233BDB844, &type metadata for ManifestValidationRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124398);
  }
  return result;
}

uint64_t sub_233B8D1CC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25424FDD0);
    v8 = a2;
    result = MEMORY[0x23493E300](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ManifestValidationRequest(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_233BD851C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    v13 = a3[7];
    v14 = (uint64_t *)((char *)a1 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ManifestValidationRequest(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_233BD851C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ManifestValidationRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v6 = sub_233BD851C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ManifestValidationRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v6 = sub_233BD851C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[7];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ManifestValidationRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_233BD851C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for ManifestValidationRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_233BD851C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ManifestValidationRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233B8D5C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_233BD851C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for ManifestValidationRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_233B8D658(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_233BD851C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  return result;
}

uint64_t sub_233B8D6D4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_233BD851C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ManifestValidationRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_233B8D79C + 4 * byte_233BDB6B9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_233B8D7D0 + 4 * byte_233BDB6B4[v4]))();
}

uint64_t sub_233B8D7D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233B8D7D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233B8D7E0);
  return result;
}

uint64_t sub_233B8D7EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233B8D7F4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_233B8D7F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233B8D800(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ManifestValidationRequest.CodingKeys()
{
  return &type metadata for ManifestValidationRequest.CodingKeys;
}

unint64_t sub_233B8D820()
{
  unint64_t result;

  result = qword_256124440;
  if (!qword_256124440)
  {
    result = MEMORY[0x23493E300](&unk_233BDB81C, &type metadata for ManifestValidationRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124440);
  }
  return result;
}

unint64_t sub_233B8D868()
{
  unint64_t result;

  result = qword_256124448;
  if (!qword_256124448)
  {
    result = MEMORY[0x23493E300](&unk_233BDB78C, &type metadata for ManifestValidationRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124448);
  }
  return result;
}

unint64_t sub_233B8D8B0()
{
  unint64_t result;

  result = qword_256124450;
  if (!qword_256124450)
  {
    result = MEMORY[0x23493E300](&unk_233BDB7B4, &type metadata for ManifestValidationRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124450);
  }
  return result;
}

uint64_t sub_233B8D8F4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7107189 && a2 == 0xE300000000000000;
  if (v2 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000233BE5430 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000233BE5450 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F6973726556736FLL && a2 == 0xE90000000000006ELL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t ApprovedDeveloper.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ApprovedDeveloper.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ApprovedDeveloper.supportURL.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ApprovedDeveloper.init(name:identifier:supportURL:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

uint64_t sub_233B8DB48()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x696669746E656469;
  if (*v0 != 1)
    v1 = 0x5574726F70707573;
  if (*v0)
    return v1;
  else
    return 1701667182;
}

uint64_t sub_233B8DBA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233B8E8C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233B8DBC8()
{
  sub_233B8DD80();
  return sub_233BD8D8C();
}

uint64_t sub_233B8DBF0()
{
  sub_233B8DD80();
  return sub_233BD8D98();
}

uint64_t ApprovedDeveloper.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[6];
  char v13;
  char v14;
  char v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124458);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1[2];
  v12[3] = v1[3];
  v12[4] = v8;
  v9 = v1[4];
  v12[1] = v1[5];
  v12[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233B8DD80();
  sub_233BD8D80();
  v15 = 0;
  v10 = v12[5];
  sub_233BD8C18();
  if (!v10)
  {
    v14 = 1;
    sub_233BD8C18();
    v13 = 2;
    sub_233BD8BE8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

unint64_t sub_233B8DD80()
{
  unint64_t result;

  result = qword_256124460;
  if (!qword_256124460)
  {
    result = MEMORY[0x23493E300](&unk_233BDB9E8, &type metadata for ApprovedDeveloper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124460);
  }
  return result;
}

uint64_t ApprovedDeveloper.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124468);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233B8DD80();
  sub_233BD8D68();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v28 = 0;
  v10 = sub_233BD8B88();
  v12 = v11;
  v25 = v10;
  v27 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_233BD8B88();
  v15 = v14;
  v23 = v13;
  v26 = 2;
  swift_bridgeObjectRetain();
  v24 = v15;
  v16 = sub_233BD8B58();
  v18 = v17;
  v19 = v16;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  swift_bridgeObjectRetain();
  v20 = v24;
  *a2 = v25;
  a2[1] = v12;
  a2[2] = v23;
  a2[3] = v20;
  a2[4] = v19;
  a2[5] = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_233B8DFF0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ApprovedDeveloper.init(from:)(a1, a2);
}

uint64_t sub_233B8E004(_QWORD *a1)
{
  return ApprovedDeveloper.encode(to:)(a1);
}

uint64_t static AppDistributor.allApprovedDevelopers()()
{
  uint64_t v0;
  char v1;
  unint64_t v2;
  void *v3;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  __int128 *v10;
  __int128 v11;
  char v12;

  if (qword_25424FEB8 != -1)
    swift_once();
  v5 = 0u;
  v6 = 0u;
  v7 = 0;
  v8 = 0x2000000000000000;
  v9 = 1;
  v10 = &v5;
  sub_233B727E4((uint64_t **)&v10, (void (*)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))sub_233B9EFF4, 0, &v11);
  sub_233B7443C(v5, *((uint64_t *)&v5 + 1), v6, *((uint64_t *)&v6 + 1), v7, v8, v9);
  v0 = v11;
  v1 = v12;
  if (v12)
  {
    v2 = *((_QWORD *)&v11 + 1);
    type metadata accessor for MarketplaceKitError();
    sub_233B8E4B8();
    v3 = (void *)swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_233B7EE40(v0, v2, v1);

    return MEMORY[0x24BEE4AF8];
  }
  return v0;
}

uint64_t static AppDistributor.revokeDeveloperApproval(_:removeInstalledApps:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t *v15;

  v6 = qword_25424FEB8;
  swift_bridgeObjectRetain();
  if (v6 != -1)
    swift_once();
  sub_233B74148();
  sub_233B7418C();
  v8 = a1;
  v9 = a2;
  v10 = a3 & 1;
  v11 = 0;
  v12 = 0;
  v13 = 0;
  v14 = 2;
  v15 = &v8;
  sub_233B741D0(a1, a2, v10, 0, 0, 0, 2);
  sub_233B72C78(&v15, (void (*)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))sub_233B8E270, 0);
  sub_233B74238(v8, v9, v10, v11, v12, v13, v14);
  return sub_233B74238(a1, a2, a3 & 1, 0, 0, 0, 2);
}

void sub_233B8E270(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  void *v9;
  _QWORD v10[6];

  v8 = (void *)sub_233BD8534();
  v10[4] = a4;
  v10[5] = a5;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_233BC37F0;
  v10[3] = &block_descriptor_2;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_setPrivateDataRequest_reply_, v8, v9);
  _Block_release(v9);

}

uint64_t static AppDistributor.isDeveloperApproved(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  char v6;
  uint64_t v7;
  void *v8;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  char v14;
  uint64_t *v15;
  __int128 v16;
  char v17;

  v4 = qword_25424FEB8;
  swift_bridgeObjectRetain();
  if (v4 != -1)
    swift_once();
  v10 = a1;
  v11 = a2;
  v12 = 0u;
  v13 = 0u;
  v14 = 0;
  v15 = &v10;
  sub_233B743E8(a1, a2, 0, 0, 0, 0, 0);
  sub_233B727E4(&v15, (void (*)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))sub_233B9EFF4, 0, &v16);
  sub_233B7443C(v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((unint64_t *)&v13 + 1), v14);
  v5 = v16;
  v6 = v17;
  if (v17 == 1)
  {
    v7 = v16 & 1;
    sub_233B7EE40(v16, *((unint64_t *)&v16 + 1), 1);
    swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_233B8E4B8();
    v8 = (void *)swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_233B7EE40(v5, *((unint64_t *)&v5 + 1), v6);
    swift_bridgeObjectRelease();

    return 0;
  }
  return v7;
}

unint64_t sub_233B8E4B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256123B10;
  if (!qword_256123B10)
  {
    v1 = type metadata accessor for MarketplaceKitError();
    result = MEMORY[0x23493E300](&protocol conformance descriptor for MarketplaceKitError, v1);
    atomic_store(result, (unint64_t *)&qword_256123B10);
  }
  return result;
}

uint64_t destroy for ApprovedDeveloper()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ApprovedDeveloper(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ApprovedDeveloper(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *assignWithTake for ApprovedDeveloper(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ApprovedDeveloper(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ApprovedDeveloper(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ApprovedDeveloper()
{
  return &type metadata for ApprovedDeveloper;
}

uint64_t storeEnumTagSinglePayload for ApprovedDeveloper.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_233B8E768 + 4 * byte_233BDB8A4[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_233B8E79C + 4 * byte_233BDB89F[v4]))();
}

uint64_t sub_233B8E79C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233B8E7A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233B8E7ACLL);
  return result;
}

uint64_t sub_233B8E7B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233B8E7C0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_233B8E7C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233B8E7CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ApprovedDeveloper.CodingKeys()
{
  return &type metadata for ApprovedDeveloper.CodingKeys;
}

unint64_t sub_233B8E7EC()
{
  unint64_t result;

  result = qword_256124470;
  if (!qword_256124470)
  {
    result = MEMORY[0x23493E300](&unk_233BDB9C0, &type metadata for ApprovedDeveloper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124470);
  }
  return result;
}

unint64_t sub_233B8E834()
{
  unint64_t result;

  result = qword_256124478;
  if (!qword_256124478)
  {
    result = MEMORY[0x23493E300](&unk_233BDB930, &type metadata for ApprovedDeveloper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124478);
  }
  return result;
}

unint64_t sub_233B8E87C()
{
  unint64_t result;

  result = qword_256124480;
  if (!qword_256124480)
  {
    result = MEMORY[0x23493E300](&unk_233BDB958, &type metadata for ApprovedDeveloper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124480);
  }
  return result;
}

uint64_t sub_233B8E8C0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x5574726F70707573 && a2 == 0xEA00000000004C52)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

unint64_t static PrivateNotifications.priorityOrAllowedDevelopersChangedNotificationName.getter()
{
  return 0xD000000000000044;
}

void *sub_233B8EA50()
{
  void *result;

  result = (void *)sub_233B90E24();
  off_25424FED8 = result;
  return result;
}

void sub_233B8EA6C(uint64_t a1, uint64_t a2)
{
  os_unfair_lock_s *v3;
  id v4;
  id v5;

  v3 = (os_unfair_lock_s *)(a2 + 32);
  os_unfair_lock_lock((os_unfair_lock_t)(a2 + 32));
  swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 16) = 0;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 24) = 0;
  os_unfair_lock_unlock(v3);
  v4 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v5 = (id)sub_233BD87EC();
  objc_msgSend(v4, sel_postNotificationName_object_, v5, 0);

}

uint64_t static AppDistributor.AppDistributorsOrTrustedDevelopersChangedNotification.getter()
{
  return sub_233BD87EC();
}

uint64_t sub_233B8EB3C(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t static AppDistributor.distributorPriorityList.getter()
{
  return swift_task_switch();
}

uint64_t sub_233B8EB8C()
{
  uint64_t v0;
  _QWORD *v1;
  os_unfair_lock_s *v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);

  if (qword_25424FE18 != -1)
    swift_once();
  v1 = off_25424FED8;
  v2 = (os_unfair_lock_s *)((char *)off_25424FED8 + 32);
  os_unfair_lock_lock((os_unfair_lock_t)off_25424FED8 + 8);
  v3 = v1[2];
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v2);
  if (v3)
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
  if (qword_25424FEB8 != -1)
    swift_once();
  *(_QWORD *)(v0 + 16) = 1;
  *(_QWORD *)(v0 + 56) = 0x2000000000000000;
  *(_BYTE *)(v0 + 64) = 1;
  *(_QWORD *)(v0 + 96) = v0 + 16;
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_256123B78 + dword_256123B78);
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v5;
  *v5 = v0;
  v5[1] = sub_233B8ECD4;
  return v6(v0 + 72, v0 + 96, (uint64_t)sub_233B9EFE0, 0);
}

uint64_t sub_233B8ECD4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_233B7443C(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_BYTE *)(v2 + 64));
  return swift_task_switch();
}

uint64_t sub_233B8ED4C()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  int v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v2 = *(void **)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(unsigned __int8 *)(v0 + 88);
  if (v3 == 3)
  {
    v4 = (os_unfair_lock_s *)off_25424FED8;
    v5 = swift_task_alloc();
    *(_QWORD *)(v5 + 16) = v2;
    sub_233B90D44((uint64_t)v2, v1, 3);
    sub_233B90D44((uint64_t)v2, v1, 3);
    sub_233B90D44((uint64_t)v2, v1, 3);
    os_unfair_lock_lock(v4 + 8);
    v6 = *(_QWORD *)(v5 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v4[4]._os_unfair_lock_opaque = v6;
    os_unfair_lock_unlock(v4 + 8);
    sub_233B7EE40((uint64_t)v2, v1, 3);
    sub_233B7EE40((uint64_t)v2, v1, 3);
    sub_233B7EE40((uint64_t)v2, v1, 3);
    swift_task_dealloc();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_233B8E4B8();
    v7 = (void *)swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_233B7EE40((uint64_t)v2, v1, v3);

    v2 = &unk_2504E30D0;
  }
  return (*(uint64_t (**)(void *))(v0 + 8))(v2);
}

uint64_t sub_233B8EEB8()
{
  uint64_t v0;

  sub_233B7443C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));

  return (*(uint64_t (**)(void *))(v0 + 8))(&unk_2504E30D0);
}

uint64_t static AppDistributor.setDistributorPriorityList(_:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = a1;
  return swift_task_switch();
}

uint64_t sub_233B8EF1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 80);
  v2 = qword_25424FEB8;
  swift_bridgeObjectRetain();
  if (v2 != -1)
    swift_once();
  sub_233B74148();
  sub_233B7418C();
  *(_QWORD *)(v0 + 16) = v1;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_QWORD *)(v0 + 56) = 0;
  *(_BYTE *)(v0 + 64) = 1;
  *(_QWORD *)(v0 + 72) = v0 + 16;
  sub_233B741D0(v1, 0, 0, 0, 0, 0, 1);
  v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_256123E90 + dword_256123E90);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v3;
  *v3 = v0;
  v3[1] = sub_233B8F018;
  return v5(v0 + 72, (uint64_t)sub_233B8F140, 0);
}

uint64_t sub_233B8F018()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_233B74238(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_BYTE *)(v2 + 64));
  return swift_task_switch();
}

uint64_t sub_233B8F090()
{
  uint64_t v0;

  sub_233B74238(*(_QWORD *)(v0 + 80), 0, 0, 0, 0, 0, 1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233B8F0DC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  sub_233B74238(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  sub_233B74238(v1, 0, 0, 0, 0, 0, 1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_233B8F140(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_233B90C88(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_27, (SEL *)&selRef_setPrivateDataRequest_reply_);
}

void *static AppDistributor.synchronousDistributorPriorityList.getter()
{
  _QWORD *v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  os_unfair_lock_s *v5;
  void *v6;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  unint64_t v11;
  char v12;
  uint64_t *v13;
  __int128 v14;
  char v15;

  if (qword_25424FE18 != -1)
    swift_once();
  v0 = off_25424FED8;
  v1 = (os_unfair_lock_s *)((char *)off_25424FED8 + 32);
  os_unfair_lock_lock((os_unfair_lock_t)off_25424FED8 + 8);
  v2 = v0[2];
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v1);
  if (!v2)
  {
    if (qword_25424FEB8 != -1)
      swift_once();
    v8 = 1;
    v9 = 0u;
    v10 = 0u;
    v11 = 0x2000000000000000;
    v12 = 1;
    v13 = &v8;
    sub_233B727E4(&v13, (void (*)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))sub_233B9EFF4, 0, &v14);
    sub_233B7443C(v8, v9, *((uint64_t *)&v9 + 1), v10, *((uint64_t *)&v10 + 1), v11, v12);
    v3 = *((_QWORD *)&v14 + 1);
    v2 = v14;
    v4 = v15;
    if (v15 == 3)
    {
      v5 = (os_unfair_lock_s *)off_25424FED8;
      sub_233B90D44(v14, *((unint64_t *)&v14 + 1), 3);
      sub_233B90D44(v2, v3, 3);
      sub_233B90D44(v2, v3, 3);
      os_unfair_lock_lock(v5 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v5[4]._os_unfair_lock_opaque = v2;
      os_unfair_lock_unlock(v5 + 8);
      sub_233B7EE40(v2, v3, 3);
      sub_233B7EE40(v2, v3, 3);
      sub_233B7EE40(v2, v3, 3);
    }
    else
    {
      type metadata accessor for MarketplaceKitError();
      sub_233B8E4B8();
      v6 = (void *)swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      sub_233B7EE40(v2, v3, v4);

      return &unk_2504E3100;
    }
  }
  return (void *)v2;
}

uint64_t static AppDistributor.synchronousAllApprovedDevelopers.getter()
{
  _QWORD *v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  void *v5;
  os_unfair_lock_s *v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  __int128 *v13;
  __int128 v14;
  char v15;

  if (qword_25424FE18 != -1)
    swift_once();
  v0 = off_25424FED8;
  v1 = (os_unfair_lock_s *)((char *)off_25424FED8 + 32);
  os_unfair_lock_lock((os_unfair_lock_t)off_25424FED8 + 8);
  v2 = v0[3];
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v1);
  if (!v2)
  {
    if (qword_25424FEB8 != -1)
      swift_once();
    v8 = 0u;
    v9 = 0u;
    v10 = 0;
    v11 = 0x2000000000000000;
    v12 = 1;
    v13 = &v8;
    sub_233B727E4((uint64_t **)&v13, (void (*)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))sub_233B9EFF4, 0, &v14);
    sub_233B7443C(v8, *((uint64_t *)&v8 + 1), v9, *((uint64_t *)&v9 + 1), v10, v11, v12);
    v3 = *((_QWORD *)&v14 + 1);
    v2 = v14;
    v4 = v15;
    if (v15)
    {
      type metadata accessor for MarketplaceKitError();
      sub_233B8E4B8();
      v5 = (void *)swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      sub_233B7EE40(v2, v3, v4);

      return MEMORY[0x24BEE4AF8];
    }
    else
    {
      v7 = (os_unfair_lock_s *)off_25424FED8;
      sub_233B90D44(v14, *((unint64_t *)&v14 + 1), 0);
      sub_233B90D44(v2, v3, 0);
      sub_233B90D44(v2, v3, 0);
      os_unfair_lock_lock(v7 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v7[6]._os_unfair_lock_opaque = v2;
      os_unfair_lock_unlock(v7 + 8);
      sub_233B7EE40(v2, v3, 0);
      sub_233B7EE40(v2, v3, 0);
      sub_233B7EE40(v2, v3, 0);
    }
  }
  return v2;
}

uint64_t static AppDistributor.setShouldShowInstallConfirmations(for:shouldShow:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  *(_BYTE *)(v3 + 65) = a3;
  *(_QWORD *)(v3 + 72) = a1;
  *(_QWORD *)(v3 + 80) = a2;
  return swift_task_switch();
}

uint64_t sub_233B8F5DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(unsigned __int8 *)(v0 + 65);
  v2 = *(_QWORD *)(v0 + 80);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 24) = v2;
  *(_QWORD *)(v0 + 32) = v1;
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 56) = 0;
  *(_QWORD *)(v0 + 40) = 0;
  *(_BYTE *)(v0 + 64) = 3;
  swift_bridgeObjectRetain();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v3;
  *v3 = v0;
  v3[1] = sub_233B8F650;
  return SetPrivateDataRequest.run()();
}

uint64_t sub_233B8F650()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {

    return swift_task_switch();
  }
  else
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void))(v2 + 8))();
  }
}

uint64_t sub_233B8F6C8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static AppDistributor.synchronousSetShouldShowInstallConfirmations(for:shouldShow:)()
{
  void *v0;

  swift_bridgeObjectRetain();
  SetPrivateDataRequest.runSynchronously()();
  if (v0)

  return swift_bridgeObjectRelease();
}

uint64_t static AppDistributor.synchronousShouldShowInstallConfirmations(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  char v6;
  uint64_t v7;
  void *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t *v17;
  __int128 v18;
  char v19;

  v4 = qword_25424FEB8;
  swift_bridgeObjectRetain();
  if (v4 != -1)
    swift_once();
  v10 = a1;
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = 0;
  v15 = 0x3000000000000000;
  v16 = 0;
  v17 = &v10;
  sub_233B743E8(a1, a2, 0, 0, 0, 0x3000000000000000uLL, 0);
  sub_233B727E4(&v17, (void (*)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))sub_233B9EFF4, 0, &v18);
  sub_233B7443C(v10, v11, v12, v13, v14, v15, v16);
  v5 = v18;
  v6 = v19;
  if (v19 == 5)
  {
    v7 = v18 & 1;
    sub_233B7EE40(v18, *((unint64_t *)&v18 + 1), 5);
    swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_233B8E4B8();
    v8 = (void *)swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_233B7EE40(v5, *((unint64_t *)&v5 + 1), v6);
    swift_bridgeObjectRelease();

    return 1;
  }
  return v7;
}

uint64_t static AppDistributor.shouldShowInstallConfirmations(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 112) = a2;
  return swift_task_switch();
}

uint64_t sub_233B8F900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v6;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = qword_25424FEB8;
  swift_bridgeObjectRetain();
  if (v2 != -1)
    swift_once();
  v3 = *(_QWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 24) = v1;
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0;
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 56) = 0x3000000000000000;
  *(_BYTE *)(v0 + 64) = 0;
  *(_QWORD *)(v0 + 96) = v0 + 16;
  sub_233B743E8(v3, v1, 0, 0, 0, 0x3000000000000000uLL, 0);
  v6 = (char *)&dword_256123B78 + dword_256123B78;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v4;
  *v4 = v0;
  v4[1] = sub_233B8FA00;
  return ((uint64_t (*)(uint64_t, uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v6)(v0 + 72, v0 + 96, sub_233B9EFE0, 0);
}

uint64_t sub_233B8FA00()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_233B7443C(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_BYTE *)(v2 + 64));
  return swift_task_switch();
}

uint64_t sub_233B8FA78()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  int v3;
  uint64_t v4;
  void *v5;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(unsigned __int8 *)(v0 + 88);
  if (v3 == 5)
  {
    v4 = *(_QWORD *)(v0 + 72) & 1;
    sub_233B7EE40(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), 5);
    swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_233B8E4B8();
    v5 = (void *)swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_233B7EE40(v1, v2, v3);
    swift_bridgeObjectRelease();

    v4 = 1;
  }
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
}

uint64_t sub_233B8FB58()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 128);
  sub_233B7443C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  swift_bridgeObjectRelease();

  return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
}

uint64_t static AppDistributor.shouldShowAppInstallationSettings()()
{
  return swift_task_switch();
}

uint64_t sub_233B8FBC4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);

  if (qword_25424FE18 != -1)
    swift_once();
  if (qword_25424FEB8 != -1)
    swift_once();
  *(_QWORD *)(v0 + 16) = 2;
  *(_QWORD *)(v0 + 56) = 0x2000000000000000;
  *(_BYTE *)(v0 + 64) = 1;
  *(_QWORD *)(v0 + 96) = v0 + 16;
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_256123B78 + dword_256123B78);
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v1;
  *v1 = v0;
  v1[1] = sub_233B8FCC8;
  return v3(v0 + 72, v0 + 96, (uint64_t)sub_233B9EFE0, 0);
}

uint64_t sub_233B8FCC8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_233B7443C(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_BYTE *)(v2 + 64));
  return swift_task_switch();
}

uint64_t sub_233B8FD40()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  void *v5;

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(unsigned __int8 *)(v0 + 88);
  if (v3 == 6)
  {
    v4 = *(_QWORD *)(v0 + 72) & 1;
    sub_233B7EE40(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), 6);
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_233B8E4B8();
    v5 = (void *)swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_233B7EE40(v2, v1, v3);

    v4 = 0;
  }
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
}

uint64_t sub_233B8FE04()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 112);
  sub_233B7443C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t AvailableAppMetadataRequest.distributorID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AvailableAppMetadataRequest.ids.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AvailableAppMetadataRequest.init(distributorID:ids:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t sub_233B8FE90()
{
  _BYTE *v0;

  if (*v0)
    return 7562345;
  else
    return 0x7562697274736964;
}

uint64_t sub_233B8FED0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233B90FA4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233B8FEF4()
{
  sub_233B90D80();
  return sub_233BD8D8C();
}

uint64_t sub_233B8FF1C()
{
  sub_233B90D80();
  return sub_233BD8D98();
}

uint64_t AvailableAppMetadataRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561244B0);
  v11 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233B90D80();
  sub_233BD8D80();
  v14 = 0;
  sub_233BD8C18();
  if (!v2)
  {
    v12 = v10;
    v13 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2561244C0);
    sub_233B90DC4(&qword_2561244C8, MEMORY[0x24BEE4570], MEMORY[0x24BEE12A0]);
    sub_233BD8C30();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v7, v4);
}

uint64_t AvailableAppMetadataRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];
  char v16;
  char v17;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561244D0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233B90D80();
  sub_233BD8D68();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v17 = 0;
  v10 = sub_233BD8B88();
  v12 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2561244C0);
  v16 = 1;
  sub_233B90DC4(&qword_2561244D8, MEMORY[0x24BEE4598], MEMORY[0x24BEE12D0]);
  swift_bridgeObjectRetain();
  sub_233BD8BA0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v13 = v15[1];
  *a2 = v10;
  a2[1] = v12;
  a2[2] = v13;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_233B90290@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return AvailableAppMetadataRequest.init(from:)(a1, a2);
}

uint64_t sub_233B902A4(_QWORD *a1)
{
  return AvailableAppMetadataRequest.encode(to:)(a1);
}

uint64_t static AppDistributor.availableApp(for:distributor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_233B902D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  char *v5;

  v1 = v0[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2561244E8);
  v2 = swift_allocObject();
  v0[6] = v2;
  *(_OWORD *)(v2 + 16) = xmmword_233BDBA40;
  *(_QWORD *)(v2 + 32) = v1;
  v5 = (char *)&dword_2561244F0 + dword_2561244F0;
  v3 = (_QWORD *)swift_task_alloc();
  v0[7] = v3;
  *v3 = v0;
  v3[1] = sub_233B9036C;
  return ((uint64_t (*)(uint64_t, _QWORD, _QWORD))v5)(v2, v0[4], v0[5]);
}

uint64_t sub_233B9036C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_233B903D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 64);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 16);
    if (*(_QWORD *)(v1 + 16))
    {
      *(_OWORD *)v2 = *(_OWORD *)(v1 + 32);
      *(_BYTE *)(v2 + 16) = 0;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      *(_QWORD *)v2 = 0;
      *(_QWORD *)(v2 + 8) = 0;
      *(_BYTE *)(v2 + 16) = 1;
    }
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 16);
    *(_QWORD *)v3 = 0;
    *(_QWORD *)(v3 + 8) = 0;
    *(_BYTE *)(v3 + 16) = 1;
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static AppDistributor.availableApps(for:distributor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_2561244F0 + dword_2561244F0);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_233B904BC;
  return v9(a1, a2, a3);
}

uint64_t sub_233B904BC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

void sub_233B9050C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_233B90C88(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_24, (SEL *)&selRef_fetchAvailableAppMetadata_reply_);
}

uint64_t static AppDistributor.requestProductPage(_:itemID:versionID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  *(_BYTE *)(v5 + 25) = a5;
  *(_QWORD *)(v5 + 48) = a3;
  *(_QWORD *)(v5 + 56) = a4;
  *(_QWORD *)(v5 + 32) = a1;
  *(_QWORD *)(v5 + 40) = a2;
  type metadata accessor for LaunchAngelXPCRequest(0);
  *(_QWORD *)(v5 + 64) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233B90580()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_BYTE *)(v0 + 25);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  *(_OWORD *)v1 = *(_OWORD *)(v0 + 48);
  *(_BYTE *)(v1 + 16) = v2 & 1;
  *(_QWORD *)(v1 + 24) = v3;
  *(_QWORD *)(v1 + 32) = v4;
  type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v5;
  *v5 = v0;
  v5[1] = sub_233B90624;
  return static LaunchAngelConnectionUtilities.handleLaunchAngelRequest(_:)(v0 + 16, *(_QWORD *)(v0 + 64));
}

uint64_t sub_233B90624()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 80) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_233B85664(*(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24));
  return swift_task_switch();
}

uint64_t static AppDistributor.requestSearchPage(_:searchString:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[6] = a3;
  v4[7] = a4;
  v4[4] = a1;
  v4[5] = a2;
  type metadata accessor for LaunchAngelXPCRequest(0);
  v4[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233B906F0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[7];
  v1 = (_QWORD *)v0[8];
  v3 = v0[5];
  v4 = v0[4];
  *v1 = v0[6];
  v1[1] = v2;
  v1[2] = v4;
  v1[3] = v3;
  type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = (_QWORD *)swift_task_alloc();
  v0[9] = v5;
  *v5 = v0;
  v5[1] = sub_233B90790;
  return static LaunchAngelConnectionUtilities.handleLaunchAngelRequest(_:)((uint64_t)(v0 + 2), v0[8]);
}

uint64_t sub_233B90790()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 80) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_233B85664(*(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24));
  return swift_task_switch();
}

uint64_t sub_233B90800()
{
  uint64_t v0;

  sub_233B8C06C(*(_QWORD *)(v0 + 64));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233B90840()
{
  uint64_t v0;

  sub_233B8C06C(*(_QWORD *)(v0 + 64));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static AppDistributor.requestAuthorization(_:account:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[6] = a3;
  v4[7] = a4;
  v4[4] = a1;
  v4[5] = a2;
  type metadata accessor for LaunchAngelXPCRequest(0);
  v4[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233B908DC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[7];
  v1 = (_QWORD *)v0[8];
  v3 = v0[5];
  v4 = v0[4];
  *v1 = v0[6];
  v1[1] = v2;
  v1[2] = v4;
  v1[3] = v3;
  type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = (_QWORD *)swift_task_alloc();
  v0[9] = v5;
  *v5 = v0;
  v5[1] = sub_233B90624;
  return static LaunchAngelConnectionUtilities.handleLaunchAngelRequest(_:)((uint64_t)(v0 + 2), v0[8]);
}

uint64_t static AppDistributor.handleEmergencyReset()()
{
  return swift_task_switch();
}

uint64_t sub_233B90990()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  if (qword_25424FEB8 != -1)
    swift_once();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_256123E50 + dword_256123E50);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_233B90A2C;
  return v3(v0 + 16, (uint64_t)sub_233B90AA8, 0);
}

uint64_t sub_233B90A2C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 24) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_233B90A90()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233B90A9C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_233B90AA8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  _QWORD v7[6];

  v7[4] = a4;
  v7[5] = a5;
  v7[0] = MEMORY[0x24BDAC760];
  v7[1] = 1107296256;
  v7[2] = sub_233BC37F0;
  v7[3] = &block_descriptor_20;
  v6 = _Block_copy(v7);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_handleEmergencyResetRequestWithReply_, v6);
  _Block_release(v6);
}

uint64_t static AppDistributor.addAllowedDeveloper(_:name:supportURL:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t *v21;

  v12 = qword_25424FEB8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12 != -1)
    swift_once();
  sub_233B74148();
  sub_233B7418C();
  v14 = a1;
  v15 = a2;
  v16 = a3;
  v17 = a4;
  v18 = a5;
  v19 = a6;
  v20 = 0;
  v21 = &v14;
  sub_233B741D0(a1, a2, a3, a4, a5, a6, 0);
  sub_233B72C78(&v21, (void (*)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))sub_233B90C74, 0);
  sub_233B74238(v14, v15, v16, v17, v18, v19, v20);
  return sub_233B74238(a1, a2, a3, a4, a5, a6, 0);
}

void sub_233B90C74(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_233B90C88(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_3, (SEL *)&selRef_setPrivateDataRequest_reply_);
}

void sub_233B90C88(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, SEL *a7)
{
  void *v12;
  void *v13;
  _QWORD v14[6];

  v12 = (void *)sub_233BD8534();
  v14[4] = a4;
  v14[5] = a5;
  v14[0] = MEMORY[0x24BDAC760];
  v14[1] = 1107296256;
  v14[2] = sub_233BC37F0;
  v14[3] = a6;
  v13 = _Block_copy(v14);
  swift_retain();
  swift_release();
  objc_msgSend(a1, *a7, v12, v13);
  _Block_release(v13);

}

uint64_t sub_233B90D44(uint64_t result, unint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 2:
    case 3:
    case 7:
    case 8:
      result = swift_bridgeObjectRetain();
      break;
    case 4:
      result = sub_233B71CAC(result, a2);
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_233B90D80()
{
  unint64_t result;

  result = qword_2561244B8;
  if (!qword_2561244B8)
  {
    result = MEMORY[0x23493E300](&unk_233BDBBD0, &type metadata for AvailableAppMetadataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561244B8);
  }
  return result;
}

uint64_t sub_233B90DC4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2561244C0);
    v8 = a2;
    result = MEMORY[0x23493E300](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_233B90E24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  void *v7;
  _QWORD aBlock[6];
  int out_token;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v0 = sub_233BD87A4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25424FEF8);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = 0;
  *(_DWORD *)(v5 + 32) = 0;
  out_token = -1;
  sub_233B9144C();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v4, *MEMORY[0x24BEE5490], v0);
  swift_retain();
  v6 = sub_233BD89A8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  aBlock[4] = sub_233B91488;
  aBlock[5] = v5;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_233B8EB3C;
  aBlock[3] = &block_descriptor_30;
  v7 = _Block_copy(aBlock);
  swift_release();
  notify_register_dispatch("com.apple.managedappdistributiond.priorityOrAllowedDevelopersChanged", &out_token, v6, v7);
  _Block_release(v7);

  return v5;
}

uint64_t sub_233B90FA4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7562697274736964 && a2 == 0xED00004449726F74;
  if (v2 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7562345 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_233B910A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return swift_task_switch();
}

uint64_t sub_233B910C4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v6;

  v1 = v0[8];
  v2 = v0[6];
  v3 = qword_25424FEB8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v3 != -1)
  {
    swift_once();
    v1 = v0[8];
    v2 = v0[6];
  }
  v0[2] = v0[7];
  v0[5] = v0 + 2;
  v0[3] = v1;
  v0[4] = v2;
  v6 = (char *)&dword_256123E58 + dword_256123E58;
  v4 = (_QWORD *)swift_task_alloc();
  v0[9] = v4;
  *v4 = v0;
  v4[1] = sub_233B911A0;
  return ((uint64_t (*)(_QWORD *, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v6)(v0 + 5, sub_233B9050C, 0);
}

uint64_t sub_233B911A0(uint64_t a1)
{
  void *v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  swift_task_dealloc();
  if (v1)
  {

    return swift_task_switch();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
  }
}

uint64_t sub_233B91234()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

ValueMetadata *type metadata accessor for PrivateNotifications()
{
  return &type metadata for PrivateNotifications;
}

ValueMetadata *type metadata accessor for AvailableAppMetadataRequest()
{
  return &type metadata for AvailableAppMetadataRequest;
}

uint64_t storeEnumTagSinglePayload for AvailableAppMetadataRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_233B912DC + 4 * byte_233BDBA6D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_233B91310 + 4 * byte_233BDBA68[v4]))();
}

uint64_t sub_233B91310(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233B91318(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233B91320);
  return result;
}

uint64_t sub_233B9132C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233B91334);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_233B91338(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233B91340(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AvailableAppMetadataRequest.CodingKeys()
{
  return &type metadata for AvailableAppMetadataRequest.CodingKeys;
}

unint64_t sub_233B91360()
{
  unint64_t result;

  result = qword_256124520;
  if (!qword_256124520)
  {
    result = MEMORY[0x23493E300](&unk_233BDBBA8, &type metadata for AvailableAppMetadataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124520);
  }
  return result;
}

unint64_t sub_233B913A8()
{
  unint64_t result;

  result = qword_256124528;
  if (!qword_256124528)
  {
    result = MEMORY[0x23493E300](&unk_233BDBB18, &type metadata for AvailableAppMetadataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124528);
  }
  return result;
}

unint64_t sub_233B913F0()
{
  unint64_t result;

  result = qword_256124530;
  if (!qword_256124530)
  {
    result = MEMORY[0x23493E300](&unk_233BDBB40, &type metadata for AvailableAppMetadataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124530);
  }
  return result;
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

unint64_t sub_233B9144C()
{
  unint64_t result;

  result = qword_25424FEF0;
  if (!qword_25424FEF0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25424FEF0);
  }
  return result;
}

void sub_233B91488(uint64_t a1)
{
  uint64_t v1;

  sub_233B8EA6C(a1, v1);
}

ValueMetadata *type metadata accessor for _AppDistributionNotificationRelay()
{
  return &type metadata for _AppDistributionNotificationRelay;
}

uint64_t destroy for _AppDistributionNotificationRelay.Cache()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s14MarketplaceKit33_AppDistributionNotificationRelayV5CacheVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for _AppDistributionNotificationRelay.Cache(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for _AppDistributionNotificationRelay.Cache(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for _AppDistributionNotificationRelay.Cache(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for _AppDistributionNotificationRelay.Cache(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for _AppDistributionNotificationRelay.Cache()
{
  return &type metadata for _AppDistributionNotificationRelay.Cache;
}

uint64_t LicenseResolutionContext.logKey.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LicenseResolutionContext.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LicenseResolutionContext() + 20);
  v4 = sub_233BD851C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for LicenseResolutionContext()
{
  uint64_t result;

  result = qword_2561245A8;
  if (!qword_2561245A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t LicenseResolutionContext.init(logKey:url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  char *v5;
  uint64_t v6;

  *a4 = a1;
  a4[1] = a2;
  v5 = (char *)a4 + *(int *)(type metadata accessor for LicenseResolutionContext() + 20);
  v6 = sub_233BD851C();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a3, v6);
}

uint64_t sub_233B9177C()
{
  _BYTE *v0;

  if (*v0)
    return 7107189;
  else
    return 0x79654B676F6CLL;
}

uint64_t sub_233B917AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233B92250(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233B917D0()
{
  sub_233B9196C();
  return sub_233BD8D8C();
}

uint64_t sub_233B917F8()
{
  sub_233B9196C();
  return sub_233BD8D98();
}

uint64_t LicenseResolutionContext.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124538);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233B9196C();
  sub_233BD8D80();
  v9[15] = 0;
  sub_233BD8C18();
  if (!v1)
  {
    type metadata accessor for LicenseResolutionContext();
    v9[14] = 1;
    sub_233BD851C();
    sub_233B6F860(&qword_256123860, MEMORY[0x24BDCDAE0]);
    sub_233BD8C30();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
}

unint64_t sub_233B9196C()
{
  unint64_t result;

  result = qword_256124540;
  if (!qword_256124540)
  {
    result = MEMORY[0x23493E300](&unk_233BDBDBC, &type metadata for LicenseResolutionContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124540);
  }
  return result;
}

uint64_t LicenseResolutionContext.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;

  v22 = a2;
  v24 = sub_233BD851C();
  v21 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24, v4);
  v23 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124548);
  v6 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25, v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LicenseResolutionContext();
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (uint64_t *)((char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233B9196C();
  sub_233BD8D68();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v20 = a1;
  v14 = v13;
  v16 = v23;
  v15 = v24;
  v27 = 0;
  v17 = v25;
  *v14 = sub_233BD8B88();
  v14[1] = v18;
  v26 = 1;
  sub_233B6F860(&qword_256123870, MEMORY[0x24BDCDB10]);
  sub_233BD8BA0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v17);
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))((char *)v14 + *(int *)(v10 + 20), v16, v15);
  sub_233B91BF0((uint64_t)v14, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return sub_233B91C34((uint64_t)v14);
}

uint64_t sub_233B91BF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LicenseResolutionContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_233B91C34(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LicenseResolutionContext();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_233B91C70@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return LicenseResolutionContext.init(from:)(a1, a2);
}

uint64_t sub_233B91C84(_QWORD *a1)
{
  return LicenseResolutionContext.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for LicenseResolutionContext(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_233BD851C();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for LicenseResolutionContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_233BD851C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for LicenseResolutionContext(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_233BD851C();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for LicenseResolutionContext(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_233BD851C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for LicenseResolutionContext(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_233BD851C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for LicenseResolutionContext(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_233BD851C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for LicenseResolutionContext()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233B91F3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_233BD851C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for LicenseResolutionContext()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_233B91FC4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_233BD851C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_233B92038()
{
  uint64_t result;
  unint64_t v1;

  result = sub_233BD851C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LicenseResolutionContext.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_233B920F8 + 4 * byte_233BDBC55[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_233B9212C + 4 * asc_233BDBC50[v4]))();
}

uint64_t sub_233B9212C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233B92134(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233B9213CLL);
  return result;
}

uint64_t sub_233B92148(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233B92150);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_233B92154(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233B9215C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LicenseResolutionContext.CodingKeys()
{
  return &type metadata for LicenseResolutionContext.CodingKeys;
}

unint64_t sub_233B9217C()
{
  unint64_t result;

  result = qword_2561245E0;
  if (!qword_2561245E0)
  {
    result = MEMORY[0x23493E300](&unk_233BDBD94, &type metadata for LicenseResolutionContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561245E0);
  }
  return result;
}

unint64_t sub_233B921C4()
{
  unint64_t result;

  result = qword_2561245E8;
  if (!qword_2561245E8)
  {
    result = MEMORY[0x23493E300](&unk_233BDBD04, &type metadata for LicenseResolutionContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561245E8);
  }
  return result;
}

unint64_t sub_233B9220C()
{
  unint64_t result;

  result = qword_2561245F0;
  if (!qword_2561245F0)
  {
    result = MEMORY[0x23493E300](&unk_233BDBD2C, &type metadata for LicenseResolutionContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561245F0);
  }
  return result;
}

uint64_t sub_233B92250(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x79654B676F6CLL && a2 == 0xE600000000000000;
  if (v2 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t static Restores.discover()()
{
  return swift_task_switch();
}

uint64_t sub_233B9233C()
{
  _QWORD *v0;
  _QWORD *v1;
  char *v3;

  if (qword_25424FEB8 != -1)
    swift_once();
  sub_233B80520();
  sub_233B80564();
  v0[2] = 0;
  v0[4] = v0 + 2;
  v0[3] = 0;
  v3 = (char *)&dword_256123E38 + dword_256123E38;
  v1 = (_QWORD *)swift_task_alloc();
  v0[5] = v1;
  *v1 = v0;
  v1[1] = sub_233B923F4;
  return ((uint64_t (*)(_QWORD *, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v3)(v0 + 4, sub_233B924DC, 0);
}

uint64_t sub_233B923F4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_233B92460()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233B92494()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void DiscoverRestoresRequest.init()(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

void sub_233B924DC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_233B90C88(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_17, (SEL *)&selRef_discoverRestores_reply_);
}

uint64_t static Restores.discover(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return swift_task_switch();
}

uint64_t sub_233B92508()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  char *v5;

  if (qword_25424FEB8 != -1)
    swift_once();
  v2 = v0[5];
  v1 = v0[6];
  swift_bridgeObjectRetain();
  sub_233B80520();
  sub_233B80564();
  v0[2] = v2;
  v0[4] = v0 + 2;
  v0[3] = v1;
  v5 = (char *)&dword_256123E38 + dword_256123E38;
  swift_bridgeObjectRetain();
  v3 = (_QWORD *)swift_task_alloc();
  v0[7] = v3;
  *v3 = v0;
  v3[1] = sub_233B925E0;
  return ((uint64_t (*)(_QWORD *, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v5)(v0 + 4, sub_233B92694, 0);
}

uint64_t sub_233B925E0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_233B9264C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t DiscoverRestoresRequest.init(accountID:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

void sub_233B92694(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_233B90C88(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_14, (SEL *)&selRef_discoverRestores_reply_);
}

uint64_t static Restores.prioritize(app:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return swift_task_switch();
}

uint64_t sub_233B926C0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  char *v5;

  if (qword_25424FEB8 != -1)
    swift_once();
  v2 = v0[5];
  v1 = v0[6];
  swift_bridgeObjectRetain();
  sub_233B80474();
  sub_233B804B8();
  v0[2] = v2;
  v0[4] = v0 + 2;
  v0[3] = v1;
  v5 = (char *)&dword_256123E20 + dword_256123E20;
  swift_bridgeObjectRetain();
  v3 = (_QWORD *)swift_task_alloc();
  v0[7] = v3;
  *v3 = v0;
  v3[1] = sub_233B92798;
  return ((uint64_t (*)(_QWORD *, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v5)(v0 + 4, sub_233B92880, 0);
}

uint64_t sub_233B92798()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_233B92804()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233B92838()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PrioritizeAppRequest.init(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

void sub_233B92880(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_233B90C88(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_11, (SEL *)&selRef_prioritizeApp_reply_);
}

uint64_t static Restores.promote(apps:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return swift_task_switch();
}

uint64_t sub_233B928AC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  char *v4;

  if (qword_25424FEB8 != -1)
    swift_once();
  v1 = v0[4];
  swift_bridgeObjectRetain();
  sub_233B803C8();
  sub_233B8040C();
  v0[3] = v1;
  v0[2] = v0 + 3;
  v4 = (char *)&dword_256123E08 + dword_256123E08;
  swift_bridgeObjectRetain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[5] = v2;
  *v2 = v0;
  v2[1] = sub_233B92980;
  return ((uint64_t (*)(_QWORD *, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v4)(v0 + 2, sub_233B92A64, 0);
}

uint64_t sub_233B92980()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_233B929EC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233B92A20()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void __swiftcall PromoteAppsRequest.init(_:)(Swift::OpaquePointer a1)
{
  Swift::OpaquePointer *v1;

  v1->_rawValue = a1._rawValue;
}

void sub_233B92A64(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_233B90C88(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_4, (SEL *)&selRef_promoteApps_reply_);
}

uint64_t DiscoverRestoresRequest.accountID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_233B92AA4()
{
  return 0x49746E756F636361;
}

uint64_t sub_233B92AC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x49746E756F636361 && a2 == 0xE900000000000044)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_233BD8C6C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_233B92B60()
{
  sub_233B93668();
  return sub_233BD8D8C();
}

uint64_t sub_233B92B88()
{
  sub_233B93668();
  return sub_233BD8D98();
}

uint64_t DiscoverRestoresRequest.encode(to:)(_QWORD *a1)
{
  return sub_233B9330C(a1, &qword_256124618, (void (*)(void))sub_233B93668, (uint64_t)&type metadata for DiscoverRestoresRequest.CodingKeys, (void (*)(uint64_t, uint64_t))MEMORY[0x24BEE3428]);
}

uint64_t DiscoverRestoresRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124628);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233B93668();
  sub_233BD8D68();
  if (!v2)
  {
    v10 = sub_233BD8B58();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_233B92D00@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return DiscoverRestoresRequest.init(from:)(a1, a2);
}

uint64_t sub_233B92D14(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_233B9356C(a1, a2, a3, &qword_256124618, (void (*)(void))sub_233B93668, (uint64_t)&type metadata for DiscoverRestoresRequest.CodingKeys, (void (*)(uint64_t, uint64_t))MEMORY[0x24BEE3428]);
}

uint64_t PromoteAppsRequest.appsToPromote.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PromoteAppsRequest.appsToPromote.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*PromoteAppsRequest.appsToPromote.modify())()
{
  return nullsub_1;
}

uint64_t sub_233B92D88()
{
  return 0x72506F5473707061;
}

uint64_t sub_233B92DAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x72506F5473707061 && a2 == 0xED000065746F6D6FLL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_233BD8C6C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_233B92E64()
{
  sub_233B936AC();
  return sub_233BD8D8C();
}

uint64_t sub_233B92E8C()
{
  sub_233B936AC();
  return sub_233BD8D98();
}

uint64_t PromoteAppsRequest.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124630);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233B936AC();
  sub_233BD8D80();
  v10[1] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25424FDD0);
  sub_233B8D1CC(&qword_25424FCF0, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
  sub_233BD8C30();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t PromoteAppsRequest.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124640);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233B936AC();
  sub_233BD8D68();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25424FDD0);
    sub_233B8D1CC(&qword_25424FDC0, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    sub_233BD8BA0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_233B93114@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return PromoteAppsRequest.init(from:)(a1, a2);
}

uint64_t sub_233B93128(_QWORD *a1)
{
  return PromoteAppsRequest.encode(to:)(a1);
}

uint64_t PrioritizeAppRequest.appToPrioritize.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PrioritizeAppRequest.appToPrioritize.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PrioritizeAppRequest.appToPrioritize.modify())()
{
  return nullsub_1;
}

uint64_t sub_233B931AC()
{
  return 0x6972506F54707061;
}

uint64_t sub_233B931D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6972506F54707061 && a2 == 0xEF657A697469726FLL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_233BD8C6C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_233B93288()
{
  sub_233B936F0();
  return sub_233BD8D8C();
}

uint64_t sub_233B932B0()
{
  sub_233B936F0();
  return sub_233BD8D98();
}

uint64_t PrioritizeAppRequest.encode(to:)(_QWORD *a1)
{
  return sub_233B9330C(a1, &qword_256124648, (void (*)(void))sub_233B936F0, (uint64_t)&type metadata for PrioritizeAppRequest.CodingKeys, (void (*)(uint64_t, uint64_t))MEMORY[0x24BEE34A0]);
}

uint64_t sub_233B9330C(_QWORD *a1, uint64_t *a2, void (*a3)(void), uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(void);
  void (*v17)(uint64_t, uint64_t);

  v17 = a5;
  v16 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v5[1];
  v15 = *v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v16();
  sub_233BD8D80();
  v17(v15, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t PrioritizeAppRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124658);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233B936F0();
  sub_233BD8D68();
  if (!v2)
  {
    v10 = sub_233BD8B88();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_233B93524@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return PrioritizeAppRequest.init(from:)(a1, a2);
}

uint64_t sub_233B93538(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_233B9356C(a1, a2, a3, &qword_256124648, (void (*)(void))sub_233B936F0, (uint64_t)&type metadata for PrioritizeAppRequest.CodingKeys, (void (*)(uint64_t, uint64_t))MEMORY[0x24BEE34A0]);
}

uint64_t sub_233B9356C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void), uint64_t a6, void (*a7)(uint64_t, uint64_t))
{
  uint64_t *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(void);
  void (*v19)(uint64_t, uint64_t);

  v19 = a7;
  v18 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v7[1];
  v17 = *v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v18();
  sub_233BD8D80();
  v19(v17, v14);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

unint64_t sub_233B93668()
{
  unint64_t result;

  result = qword_256124620;
  if (!qword_256124620)
  {
    result = MEMORY[0x23493E300](&unk_233BDC258, &type metadata for DiscoverRestoresRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124620);
  }
  return result;
}

unint64_t sub_233B936AC()
{
  unint64_t result;

  result = qword_256124638;
  if (!qword_256124638)
  {
    result = MEMORY[0x23493E300](&unk_233BDC208, &type metadata for PromoteAppsRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124638);
  }
  return result;
}

unint64_t sub_233B936F0()
{
  unint64_t result;

  result = qword_256124650;
  if (!qword_256124650)
  {
    result = MEMORY[0x23493E300](&unk_233BDC1B8, &type metadata for PrioritizeAppRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124650);
  }
  return result;
}

ValueMetadata *type metadata accessor for Restores()
{
  return &type metadata for Restores;
}

uint64_t getEnumTagSinglePayload for DiscoverRestoresRequest(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DiscoverRestoresRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DiscoverRestoresRequest()
{
  return &type metadata for DiscoverRestoresRequest;
}

ValueMetadata *type metadata accessor for PromoteAppsRequest()
{
  return &type metadata for PromoteAppsRequest;
}

_QWORD *initializeBufferWithCopyOfBuffer for PrioritizeAppRequest(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for PrioritizeAppRequest()
{
  return swift_bridgeObjectRelease();
}

_QWORD *_s14MarketplaceKit23DiscoverRestoresRequestVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for PrioritizeAppRequest(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PrioritizeAppRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PrioritizeAppRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PrioritizeAppRequest()
{
  return &type metadata for PrioritizeAppRequest;
}

ValueMetadata *type metadata accessor for PrioritizeAppRequest.CodingKeys()
{
  return &type metadata for PrioritizeAppRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for PromoteAppsRequest.CodingKeys()
{
  return &type metadata for PromoteAppsRequest.CodingKeys;
}

uint64_t _s14MarketplaceKit20PrioritizeAppRequestV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_233B939B0 + 4 * byte_233BDBE10[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_233B939D0 + 4 * byte_233BDBE15[v4]))();
}

_BYTE *sub_233B939B0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_233B939D0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233B939D8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233B939E0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233B939E8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233B939F0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DiscoverRestoresRequest.CodingKeys()
{
  return &type metadata for DiscoverRestoresRequest.CodingKeys;
}

unint64_t sub_233B93A10()
{
  unint64_t result;

  result = qword_256124660;
  if (!qword_256124660)
  {
    result = MEMORY[0x23493E300](&unk_233BDC020, &type metadata for DiscoverRestoresRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124660);
  }
  return result;
}

unint64_t sub_233B93A58()
{
  unint64_t result;

  result = qword_256124668;
  if (!qword_256124668)
  {
    result = MEMORY[0x23493E300](&unk_233BDC0D8, &type metadata for PromoteAppsRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124668);
  }
  return result;
}

unint64_t sub_233B93AA0()
{
  unint64_t result;

  result = qword_256124670;
  if (!qword_256124670)
  {
    result = MEMORY[0x23493E300](&unk_233BDC190, &type metadata for PrioritizeAppRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124670);
  }
  return result;
}

unint64_t sub_233B93AE8()
{
  unint64_t result;

  result = qword_256124678;
  if (!qword_256124678)
  {
    result = MEMORY[0x23493E300](&unk_233BDC100, &type metadata for PrioritizeAppRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124678);
  }
  return result;
}

unint64_t sub_233B93B30()
{
  unint64_t result;

  result = qword_256124680;
  if (!qword_256124680)
  {
    result = MEMORY[0x23493E300](&unk_233BDC128, &type metadata for PrioritizeAppRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124680);
  }
  return result;
}

unint64_t sub_233B93B78()
{
  unint64_t result;

  result = qword_256124688;
  if (!qword_256124688)
  {
    result = MEMORY[0x23493E300](&unk_233BDC048, &type metadata for PromoteAppsRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124688);
  }
  return result;
}

unint64_t sub_233B93BC0()
{
  unint64_t result;

  result = qword_256124690;
  if (!qword_256124690)
  {
    result = MEMORY[0x23493E300](&unk_233BDC070, &type metadata for PromoteAppsRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124690);
  }
  return result;
}

unint64_t sub_233B93C08()
{
  unint64_t result;

  result = qword_256124698;
  if (!qword_256124698)
  {
    result = MEMORY[0x23493E300](&unk_233BDBF90, &type metadata for DiscoverRestoresRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124698);
  }
  return result;
}

unint64_t sub_233B93C50()
{
  unint64_t result;

  result = qword_2561246A0;
  if (!qword_2561246A0)
  {
    result = MEMORY[0x23493E300](&unk_233BDBFB8, &type metadata for DiscoverRestoresRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561246A0);
  }
  return result;
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t InstallSheetContext.Source.AppStoreSheetContext.showBiometrics.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t InstallSheetContext.Source.AppStoreSheetContext.installType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InstallSheetContext.Source.AppStoreSheetContext.metricsFieldData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_233B842EC(v1, *(_QWORD *)(v0 + 32));
  return v1;
}

uint64_t InstallSheetContext.Source.AppStoreSheetContext.init(showBiometrics:installType:metricsFieldData:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(_BYTE *)a6 = result;
  *(_QWORD *)(a6 + 8) = a2;
  *(_QWORD *)(a6 + 16) = a3;
  *(_QWORD *)(a6 + 24) = a4;
  *(_QWORD *)(a6 + 32) = a5;
  return result;
}

uint64_t sub_233B93D4C()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x546C6C6174736E69;
  if (*v0 != 1)
    v1 = 0xD000000000000010;
  if (*v0)
    return v1;
  else
    return 0x6D6F6942776F6873;
}

uint64_t sub_233B93DC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233B98748(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233B93DE4()
{
  sub_233B96B2C();
  return sub_233BD8D8C();
}

uint64_t sub_233B93E0C()
{
  sub_233B96B2C();
  return sub_233BD8D98();
}

uint64_t InstallSheetContext.Source.AppStoreSheetContext.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561246A8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v1[1];
  v16 = v1[2];
  v17 = v9;
  v10 = v1[3];
  v14 = v1[4];
  v15 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233B96B2C();
  sub_233BD8D80();
  LOBYTE(v18) = 0;
  sub_233BD8C24();
  if (!v2)
  {
    v12 = v14;
    v11 = v15;
    LOBYTE(v18) = 1;
    sub_233BD8C18();
    v18 = v11;
    v19 = v12;
    v20 = 2;
    sub_233B96B70();
    sub_233BD8C00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t InstallSheetContext.Source.AppStoreSheetContext.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561246C0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233B96B2C();
  sub_233BD8D68();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v19) = 0;
  v10 = sub_233BD8B94();
  LOBYTE(v19) = 1;
  v11 = sub_233BD8B88();
  v13 = v12;
  v18 = v11;
  v21 = 2;
  sub_233B96BB4();
  swift_bridgeObjectRetain();
  sub_233BD8B70();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v14 = v19;
  v15 = v20;
  swift_bridgeObjectRetain();
  sub_233B842EC(v14, v15);
  swift_bridgeObjectRelease();
  *(_BYTE *)a2 = v10 & 1;
  *(_QWORD *)(a2 + 8) = v18;
  *(_QWORD *)(a2 + 16) = v13;
  *(_QWORD *)(a2 + 24) = v14;
  *(_QWORD *)(a2 + 32) = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return sub_233B81AB4(v14, v15);
}

uint64_t sub_233B941B8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return InstallSheetContext.Source.AppStoreSheetContext.init(from:)(a1, a2);
}

uint64_t sub_233B941CC(_QWORD *a1)
{
  return InstallSheetContext.Source.AppStoreSheetContext.encode(to:)(a1);
}

BOOL InstallSheetContext.Source.isAppStore.getter()
{
  uint64_t v0;
  int8x16_t v1;
  _BOOL8 result;

  result = 1;
  if (*(_BYTE *)(v0 + 40))
  {
    if (*(_BYTE *)(v0 + 40) != 3)
      return 0;
    v1 = vorrq_s8(*(int8x16_t *)(v0 + 8), *(int8x16_t *)(v0 + 24));
    if (*(_QWORD *)&vorr_s8(*(int8x8_t *)v1.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v1, v1, 8uLL)) | *(_QWORD *)v0)
      return 0;
  }
  return result;
}

uint64_t sub_233B9422C()
{
  sub_233B972C8();
  return sub_233BD8D8C();
}

uint64_t sub_233B94254()
{
  sub_233B972C8();
  return sub_233BD8D98();
}

uint64_t sub_233B9427C()
{
  sub_233B97240();
  return sub_233BD8D8C();
}

uint64_t sub_233B942A4()
{
  sub_233B97240();
  return sub_233BD8D98();
}

uint64_t sub_233B942CC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_233B942FC + 4 * byte_233BDC2B0[*v0]))(0x65726F7453707061, 0xE800000000000000);
}

unint64_t sub_233B942FC()
{
  return 0xD000000000000013;
}

uint64_t sub_233B94318()
{
  return 0x7562697274736964;
}

uint64_t sub_233B94338()
{
  return 6448503;
}

uint64_t sub_233B94348@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233B988D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233B9436C()
{
  sub_233B97174();
  return sub_233BD8D8C();
}

uint64_t sub_233B94394()
{
  sub_233B97174();
  return sub_233BD8D98();
}

uint64_t sub_233B943BC()
{
  _BYTE *v0;

  if (*v0)
    return 25705;
  else
    return 1701667182;
}

uint64_t sub_233B943E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233B98A8C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233B94408()
{
  sub_233B971FC();
  return sub_233BD8D8C();
}

uint64_t sub_233B94430()
{
  sub_233B971FC();
  return sub_233BD8D98();
}

uint64_t sub_233B94458()
{
  _BYTE *v0;

  if (*v0)
    return 0x65706F6C65766564;
  else
    return 0x6E69616D6F64;
}

uint64_t sub_233B9449C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233B98B54(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233B944C0()
{
  sub_233B971B8();
  return sub_233BD8D8C();
}

uint64_t sub_233B944E8()
{
  sub_233B971B8();
  return sub_233BD8D98();
}

void InstallSheetContext.Source.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[14];
  uint64_t v19;
  uint64_t v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561246D0);
  v18[8] = *(_QWORD *)(v3 - 8);
  v18[9] = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v18[7] = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561246D8);
  v18[5] = *(_QWORD *)(v6 - 8);
  v18[6] = v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  v18[4] = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561246E0);
  v18[2] = *(_QWORD *)(v9 - 8);
  v18[3] = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v18[1] = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561246E8);
  MEMORY[0x24BDAC7A8](v12, v13);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561246F0);
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19, v14);
  v15 = *v1;
  v18[12] = v1[1];
  v18[13] = v15;
  v16 = v1[2];
  v18[10] = v1[3];
  v18[11] = v16;
  v17 = *((unsigned __int8 *)v1 + 40);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233B97174();
  sub_233BD8D80();
  __asm { BR              X9 }
}

uint64_t sub_233B946E4()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(v2 - 128) = 1;
  v3 = *(_QWORD *)(v2 - 168);
  swift_bridgeObjectRetain();
  v4 = *(_QWORD *)(v2 - 176);
  v5 = v0;
  *(_QWORD *)(v2 - 256) = v0;
  sub_233B842EC(v4, v0);
  sub_233B97240();
  v6 = *(_QWORD *)(v2 - 248);
  v7 = *(_QWORD *)(v2 - 144);
  sub_233BD8BDC();
  v9 = *(_QWORD *)(v2 - 160);
  v8 = *(_QWORD *)(v2 - 152);
  *(_BYTE *)(v2 - 128) = *(_BYTE *)(v2 - 152) & 1;
  *(_QWORD *)(v2 - 120) = v9;
  *(_QWORD *)(v2 - 112) = v3;
  *(_QWORD *)(v2 - 104) = v4;
  *(_QWORD *)(v2 - 96) = v5;
  sub_233B97284();
  v10 = *(_QWORD *)(v2 - 232);
  sub_233BD8C30();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 240) + 8))(v6, v10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 72) + 8))(v1, v7);
  return sub_233B81A48(v8, v9, *(_QWORD *)(v2 - 168), v4, *(_QWORD *)(v2 - 256), 0);
}

uint64_t InstallSheetContext.Source.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD v30[12];
  _QWORD *v31;
  char *v32;

  v30[8] = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124728);
  v30[2] = *(_QWORD *)(v3 - 8);
  v30[3] = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v30[11] = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124730);
  v7 = *(_QWORD *)(v6 - 8);
  v30[6] = v6;
  v30[7] = v7;
  MEMORY[0x24BDAC7A8](v6, v8);
  v30[10] = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124738);
  v30[4] = *(_QWORD *)(v10 - 8);
  v30[5] = v10;
  MEMORY[0x24BDAC7A8](v10, v11);
  v30[9] = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124740);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124748);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18, v20);
  v22 = (char *)v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = a1[3];
  v31 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v23);
  sub_233B97174();
  v24 = v32;
  sub_233BD8D68();
  if (!v24)
  {
    v32 = v17;
    v30[0] = v14;
    v30[1] = v13;
    v25 = sub_233BD8BC4();
    if (*(_QWORD *)(v25 + 16) == 1)
      __asm { BR              X10 }
    v26 = sub_233BD8ABC();
    swift_allocError();
    v28 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256123F90);
    *v28 = &type metadata for InstallSheetContext.Source;
    sub_233BD8B4C();
    sub_233BD8AB0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v28, *MEMORY[0x24BEE26D0], v26);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
}

uint64_t sub_233B94FD0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return InstallSheetContext.Source.init(from:)(a1, a2);
}

void sub_233B94FE4(_QWORD *a1)
{
  InstallSheetContext.Source.encode(to:)(a1);
}

BOOL static InstallSheetContext.InstallType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t InstallSheetContext.InstallType.hash(into:)()
{
  return sub_233BD8D08();
}

uint64_t sub_233B9503C()
{
  sub_233B973D8();
  return sub_233BD8D8C();
}

uint64_t sub_233B95064()
{
  sub_233B973D8();
  return sub_233BD8D98();
}

uint64_t sub_233B9508C()
{
  _BYTE *v0;

  if (*v0)
    return 0x6C7074656B72616DLL;
  else
    return 7368801;
}

uint64_t sub_233B950C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233B98C60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233B950EC()
{
  sub_233B97350();
  return sub_233BD8D8C();
}

uint64_t sub_233B95114()
{
  sub_233B97350();
  return sub_233BD8D98();
}

uint64_t sub_233B9513C()
{
  sub_233B97394();
  return sub_233BD8D8C();
}

uint64_t sub_233B95164()
{
  sub_233B97394();
  return sub_233BD8D98();
}

uint64_t InstallSheetContext.InstallType.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124758);
  v19 = *(_QWORD *)(v3 - 8);
  v20 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124760);
  v17 = *(_QWORD *)(v7 - 8);
  v18 = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124768);
  v21 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233B97350();
  sub_233BD8D80();
  if ((v15 & 1) != 0)
  {
    v23 = 1;
    sub_233B97394();
    sub_233BD8BDC();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v20);
  }
  else
  {
    v22 = 0;
    sub_233B973D8();
    sub_233BD8BDC();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v14, v11);
}

uint64_t InstallSheetContext.InstallType.hashValue.getter()
{
  sub_233BD8CFC();
  sub_233BD8D08();
  return sub_233BD8D38();
}

uint64_t InstallSheetContext.InstallType.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;

  v33 = a2;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124788);
  v35 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32, v3);
  v34 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124790);
  v5 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31, v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124798);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233B97350();
  v14 = v36;
  sub_233BD8D68();
  if (v14)
    goto LABEL_7;
  v29 = v5;
  v30 = a1;
  v15 = v34;
  v16 = v35;
  v36 = v10;
  v17 = sub_233BD8BC4();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v22 = sub_233BD8ABC();
    swift_allocError();
    v24 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256123F90);
    *v24 = &type metadata for InstallSheetContext.InstallType;
    sub_233BD8B4C();
    sub_233BD8AB0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *MEMORY[0x24BEE26D0], v22);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v13, v18);
    a1 = v30;
LABEL_7:
    v27 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v27);
  }
  v19 = *(_BYTE *)(v17 + 32);
  if ((v19 & 1) != 0)
  {
    LODWORD(v31) = *(unsigned __int8 *)(v17 + 32);
    v38 = 1;
    sub_233B97394();
    sub_233BD8B40();
    v20 = v36;
    v21 = v33;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v15, v32);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v13, v18);
    v19 = v31;
  }
  else
  {
    v37 = 0;
    sub_233B973D8();
    v25 = v8;
    sub_233BD8B40();
    v26 = v36;
    v21 = v33;
    (*(void (**)(char *, uint64_t))(v29 + 8))(v25, v31);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v18);
  }
  *v21 = v19;
  v27 = (uint64_t)v30;
  return __swift_destroy_boxed_opaque_existential_1(v27);
}

uint64_t sub_233B956FC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return InstallSheetContext.InstallType.init(from:)(a1, a2);
}

uint64_t sub_233B95710(_QWORD *a1)
{
  return InstallSheetContext.InstallType.encode(to:)(a1);
}

uint64_t InstallSheetContext.itemID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InstallSheetContext.versionID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InstallSheetContext.logKey.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InstallSheetContext.source.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = *(_QWORD *)(v1 + 48);
  v3 = *(_QWORD *)(v1 + 56);
  v4 = *(_QWORD *)(v1 + 64);
  v5 = *(_QWORD *)(v1 + 72);
  v6 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  v7 = *(_BYTE *)(v1 + 88);
  *(_BYTE *)(a1 + 40) = v7;
  return sub_233B84280(v2, v3, v4, v5, v6, v7);
}

void InstallSheetContext.type.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 89);
}

uint64_t InstallSheetContext.authenticationContextData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  sub_233B842EC(v1, *(_QWORD *)(v0 + 104));
  return v1;
}

uint64_t InstallSheetContext.learnMoreURL.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InstallSheetContext.showBiometricsForAppStoreInstall.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 128);
}

__n128 InstallSheetContext.init(itemID:versionID:source:type:logKey:learnMoreURL:authenticationContextData:showBiometricsForAppStoreInstall:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, __n128 a12, char a13)
{
  __n128 result;
  uint64_t v14;
  char v15;
  char v16;
  __int128 v17;

  result = a12;
  v14 = *(_QWORD *)(a5 + 32);
  v15 = *(_BYTE *)(a5 + 40);
  v16 = *a6;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a7;
  *(_QWORD *)(a9 + 40) = a8;
  v17 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(a9 + 48) = *(_OWORD *)a5;
  *(_OWORD *)(a9 + 64) = v17;
  *(_QWORD *)(a9 + 80) = v14;
  *(_BYTE *)(a9 + 88) = v15;
  *(_BYTE *)(a9 + 89) = v16;
  *(__n128 *)(a9 + 96) = a12;
  *(_QWORD *)(a9 + 112) = a10;
  *(_QWORD *)(a9 + 120) = a11;
  *(_BYTE *)(a9 + 128) = a13;
  return result;
}

uint64_t sub_233B95884(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_233B958B4 + 4 * byte_233BDC2BC[a1]))(0x44496D657469, 0xE600000000000000);
}

uint64_t sub_233B958B4()
{
  return 0x496E6F6973726576;
}

uint64_t sub_233B958D0()
{
  return 0x79654B676F6CLL;
}

uint64_t sub_233B958E0()
{
  return 0x656372756F73;
}

uint64_t sub_233B958F0()
{
  return 1701869940;
}

unint64_t sub_233B95900()
{
  return 0xD000000000000019;
}

uint64_t sub_233B9591C()
{
  return 0x726F4D6E7261656CLL;
}

unint64_t sub_233B9593C()
{
  return 0xD000000000000020;
}

uint64_t sub_233B9595C()
{
  unsigned __int8 *v0;

  return sub_233B95884(*v0);
}

uint64_t sub_233B95964@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233B98D58(a1, a2);
  *a3 = result;
  return result;
}

void sub_233B95988(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_233B95994()
{
  sub_233B9741C();
  return sub_233BD8D8C();
}

uint64_t sub_233B959BC()
{
  sub_233B9741C();
  return sub_233BD8D98();
}

uint64_t InstallSheetContext.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _DWORD v18[4];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  int v40;
  char v41;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561247A0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 16);
  v31 = *(_QWORD *)(v1 + 24);
  v32 = v8;
  v9 = *(_QWORD *)(v1 + 32);
  v29 = *(_QWORD *)(v1 + 40);
  v30 = v9;
  v10 = *(_QWORD *)(v1 + 48);
  v27 = *(_QWORD *)(v1 + 56);
  v28 = v10;
  v11 = *(_QWORD *)(v1 + 72);
  v24 = *(_QWORD *)(v1 + 64);
  v25 = v11;
  v26 = *(_QWORD *)(v1 + 80);
  v40 = *(unsigned __int8 *)(v1 + 88);
  v23 = *(unsigned __int8 *)(v1 + 89);
  v12 = *(_QWORD *)(v1 + 104);
  v21 = *(_QWORD *)(v1 + 96);
  v22 = v12;
  v13 = *(_QWORD *)(v1 + 120);
  v19 = *(_QWORD *)(v1 + 112);
  v20 = v13;
  v18[3] = *(unsigned __int8 *)(v1 + 128);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233B9741C();
  sub_233BD8D80();
  LOBYTE(v34) = 0;
  v14 = v33;
  sub_233BD8C18();
  if (!v14)
  {
    v15 = v27;
    v16 = v28;
    LOBYTE(v34) = 1;
    sub_233BD8BE8();
    LOBYTE(v34) = 2;
    sub_233BD8C18();
    v34 = v16;
    v35 = v15;
    v36 = v24;
    v37 = v25;
    v38 = v26;
    v39 = v40;
    v41 = 3;
    sub_233B97460();
    sub_233BD8C30();
    LOBYTE(v34) = v23;
    v41 = 4;
    sub_233B974A4();
    sub_233BD8C30();
    v34 = v21;
    v35 = v22;
    v41 = 5;
    sub_233B96B70();
    sub_233BD8C00();
    LOBYTE(v34) = 6;
    sub_233BD8C18();
    LOBYTE(v34) = 7;
    sub_233BD8C24();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t InstallSheetContext.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v34;
  int v35;
  __int128 v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  int v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  unint64_t v66;
  char v67;
  char v68;
  int v69;
  __int16 v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  char v74;
  char v75;
  int v76;
  __int16 v77;
  _QWORD *v78;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561247C0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[3];
  v78 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_233B9741C();
  sub_233BD8D68();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v78);
  LOBYTE(v58) = 0;
  v11 = sub_233BD8B88();
  v13 = v12;
  LOBYTE(v58) = 1;
  swift_bridgeObjectRetain();
  v46 = sub_233BD8B58();
  v47 = v11;
  LOBYTE(v58) = 2;
  v15 = v14;
  swift_bridgeObjectRetain();
  v16 = sub_233BD8B88();
  v48 = v15;
  v18 = v17;
  v41 = v16;
  LOBYTE(v49) = 3;
  sub_233B974E8();
  swift_bridgeObjectRetain();
  sub_233BD8BA0();
  v40 = v18;
  v19 = v58;
  LOBYTE(v49) = 4;
  v45 = v59;
  v44 = v60;
  v42 = v61;
  v43 = v62;
  sub_233B84280(v58, v59, v60, *((uint64_t *)&v60 + 1), v61, v62);
  sub_233B9752C();
  sub_233BD8BA0();
  v37 = v58;
  LOBYTE(v49) = 5;
  sub_233B96BB4();
  sub_233BD8B70();
  v20 = v58;
  LOBYTE(v58) = 6;
  v38 = v59;
  v39 = v20;
  sub_233B842EC(v20, v59);
  *(_QWORD *)&v36 = sub_233BD8B88();
  *((_QWORD *)&v36 + 1) = v21;
  v75 = 7;
  swift_bridgeObjectRetain();
  LOBYTE(v18) = sub_233BD8B94();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v35 = v18 & 1;
  *(_QWORD *)&v49 = v47;
  *((_QWORD *)&v49 + 1) = v13;
  *(_QWORD *)&v50 = v46;
  *((_QWORD *)&v50 + 1) = v48;
  v34 = v19;
  v22 = v42;
  v23 = v39;
  *(_QWORD *)&v51 = v41;
  *((_QWORD *)&v51 + 1) = v40;
  *(_QWORD *)&v52 = v19;
  *((_QWORD *)&v52 + 1) = v45;
  v24 = v44;
  v53 = v44;
  *(_QWORD *)&v54 = v42;
  BYTE8(v54) = v43;
  BYTE9(v54) = v37;
  v25 = v38;
  *(_QWORD *)&v55 = v39;
  *((_QWORD *)&v55 + 1) = v38;
  v56 = v36;
  v57 = v35;
  sub_233B8BD54((uint64_t)&v49);
  swift_bridgeObjectRelease();
  sub_233B81AB4(v23, v25);
  v26 = v34;
  LOBYTE(v23) = v43;
  sub_233B81A48(v34, v45, v24, *((uint64_t *)&v44 + 1), v22, v43);
  swift_bridgeObjectRelease();
  v27 = v48;
  swift_bridgeObjectRelease();
  v28 = v40;
  swift_bridgeObjectRelease();
  v29 = v56;
  *(_OWORD *)(a2 + 96) = v55;
  *(_OWORD *)(a2 + 112) = v29;
  *(_BYTE *)(a2 + 128) = v57;
  v30 = v52;
  *(_OWORD *)(a2 + 32) = v51;
  *(_OWORD *)(a2 + 48) = v30;
  v31 = v54;
  *(_OWORD *)(a2 + 64) = v53;
  *(_OWORD *)(a2 + 80) = v31;
  v32 = v50;
  *(_OWORD *)a2 = v49;
  *(_OWORD *)(a2 + 16) = v32;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v78);
  v58 = v47;
  v59 = v13;
  *(_QWORD *)&v60 = v46;
  *((_QWORD *)&v60 + 1) = v27;
  v61 = v41;
  v62 = v28;
  v63 = v26;
  v64 = v45;
  v65 = v44;
  v66 = v22;
  v67 = v23;
  v68 = v37;
  v69 = v76;
  v70 = v77;
  v71 = v39;
  v72 = v38;
  v73 = v36;
  v74 = v35;
  return sub_233B81994((uint64_t)&v58);
}

uint64_t sub_233B96374@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return InstallSheetContext.init(from:)(a1, a2);
}

uint64_t sub_233B96388(_QWORD *a1)
{
  return InstallSheetContext.encode(to:)(a1);
}

void sub_233B9639C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_233B963FC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x233B965E0);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

uint64_t sub_233B96604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v8 = a1;
  v9 = a2;
  v10 = BYTE2(a2);
  v11 = BYTE3(a2);
  v12 = BYTE4(a2);
  v13 = BYTE5(a2);
  sub_233B9639C((uint64_t)&v8, (uint64_t)&v8 + BYTE6(a2), a3, a4);
  if (!v4)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_233B966D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_233BD84A4();
  v11 = result;
  if (result)
  {
    result = sub_233BD84BC();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_233BD84B0();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_233B9639C(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_233B9678C(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_233B967D8()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_233B9680C + dword_233B969E4[v0 >> 62]))();
}

uint64_t sub_233B9681C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (v1 == BYTE6(v2))
  {
    if (v1 >= 1)
      __asm { BR              X10 }
    v3 = 1;
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

BOOL _s14MarketplaceKit19InstallSheetContextV6SourceO08AppStoredE0V2eeoiySbAG_AGtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  _BOOL8 result;
  char v9;
  char v10;

  if (*(unsigned __int8 *)a1 != *(unsigned __int8 *)a2)
    return 0;
  v2 = a1[3];
  v3 = a1[4];
  v5 = a2[3];
  v4 = a2[4];
  v6 = a1[1] == a2[1] && a1[2] == a2[2];
  if (v6 || (v7 = sub_233BD8C6C(), result = 0, (v7 & 1) != 0))
  {
    if (v3 >> 60 == 15)
    {
      if (v4 >> 60 == 15)
        return 1;
    }
    else if (v4 >> 60 != 15)
    {
      sub_233B842EC(v2, v3);
      sub_233B842EC(v5, v4);
      sub_233B9678C(v2, v3);
      v10 = v9;
      sub_233B81AB4(v5, v4);
      sub_233B81AB4(v2, v3);
      return (v10 & 1) != 0;
    }
    sub_233B842EC(v2, v3);
    sub_233B842EC(v5, v4);
    sub_233B81AB4(v2, v3);
    sub_233B81AB4(v5, v4);
    return 0;
  }
  return result;
}

unint64_t sub_233B96B2C()
{
  unint64_t result;

  result = qword_2561246B0;
  if (!qword_2561246B0)
  {
    result = MEMORY[0x23493E300](&unk_233BDCEFC, &type metadata for InstallSheetContext.Source.AppStoreSheetContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561246B0);
  }
  return result;
}

unint64_t sub_233B96B70()
{
  unint64_t result;

  result = qword_2561246B8;
  if (!qword_2561246B8)
  {
    result = MEMORY[0x23493E300](MEMORY[0x24BDCDDF8], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_2561246B8);
  }
  return result;
}

unint64_t sub_233B96BB4()
{
  unint64_t result;

  result = qword_2561246C8;
  if (!qword_2561246C8)
  {
    result = MEMORY[0x23493E300](MEMORY[0x24BDCDE38], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_2561246C8);
  }
  return result;
}

void _s14MarketplaceKit19InstallSheetContextV6SourceO2eeoiySbAE_AEtFZ_0(uint64_t a1)
{
  __asm { BR              X9 }
}

BOOL sub_233B96C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[5];
  _QWORD v32[17];

  if (v10)
  {
    v24 = v11;
    v25 = v8;
    v29 = v11;
    v27 = v5;
    sub_233B84280(v24, v25, v9, v12, v7, v10);
    sub_233B84280(v27, v15, v14, v13, a5, v6);
    sub_233B81A48(v27, v15, v14, v13, a5, v6);
    sub_233B81A48(v29, v30, v9, v12, v7, v10);
    return 0;
  }
  else
  {
    LOBYTE(v32[0]) = v5 & 1;
    v32[1] = v15;
    v32[2] = v14;
    v32[3] = v13;
    v32[4] = a5;
    LOBYTE(v31[0]) = v11 & 1;
    v31[1] = v8;
    v31[2] = v9;
    v31[3] = v12;
    v31[4] = v7;
    v16 = v8;
    v17 = v8;
    v18 = v9;
    v19 = v9;
    v20 = v7;
    v22 = v5;
    sub_233B84280(v11, v16, v19, v12, v20, 0);
    sub_233B84280(v22, v15, v14, v13, a5, 0);
    sub_233B84280(v11, v17, v18, v12, v20, 0);
    sub_233B84280(v22, v15, v14, v13, a5, 0);
    v23 = _s14MarketplaceKit19InstallSheetContextV6SourceO08AppStoredE0V2eeoiySbAG_AGtFZ_0(v32, v31);
    sub_233B81A48(v22, v15, v14, v13, a5, 0);
    sub_233B81A48(v11, v30, v18, v12, v20, 0);
    sub_233B81A48(v11, v30, v18, v12, v20, 0);
    sub_233B81A48(v22, v15, v14, v13, a5, 0);
  }
  return v23;
}

unint64_t sub_233B97174()
{
  unint64_t result;

  result = qword_2561246F8;
  if (!qword_2561246F8)
  {
    result = MEMORY[0x23493E300](&unk_233BDCEAC, &type metadata for InstallSheetContext.Source.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561246F8);
  }
  return result;
}

unint64_t sub_233B971B8()
{
  unint64_t result;

  result = qword_256124700;
  if (!qword_256124700)
  {
    result = MEMORY[0x23493E300](&unk_233BDCE5C, &type metadata for InstallSheetContext.Source.WebCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124700);
  }
  return result;
}

unint64_t sub_233B971FC()
{
  unint64_t result;

  result = qword_256124708;
  if (!qword_256124708)
  {
    result = MEMORY[0x23493E300](&unk_233BDCE0C, &type metadata for InstallSheetContext.Source.DistributorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124708);
  }
  return result;
}

unint64_t sub_233B97240()
{
  unint64_t result;

  result = qword_256124710;
  if (!qword_256124710)
  {
    result = MEMORY[0x23493E300](&unk_233BDCDBC, &type metadata for InstallSheetContext.Source.AppStoreWithContextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124710);
  }
  return result;
}

unint64_t sub_233B97284()
{
  unint64_t result;

  result = qword_256124718;
  if (!qword_256124718)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for InstallSheetContext.Source.AppStoreSheetContext, &type metadata for InstallSheetContext.Source.AppStoreSheetContext);
    atomic_store(result, (unint64_t *)&qword_256124718);
  }
  return result;
}

unint64_t sub_233B972C8()
{
  unint64_t result;

  result = qword_256124720;
  if (!qword_256124720)
  {
    result = MEMORY[0x23493E300](&unk_233BDCD6C, &type metadata for InstallSheetContext.Source.AppStoreCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124720);
  }
  return result;
}

unint64_t sub_233B9730C()
{
  unint64_t result;

  result = qword_256124750;
  if (!qword_256124750)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for InstallSheetContext.Source.AppStoreSheetContext, &type metadata for InstallSheetContext.Source.AppStoreSheetContext);
    atomic_store(result, (unint64_t *)&qword_256124750);
  }
  return result;
}

unint64_t sub_233B97350()
{
  unint64_t result;

  result = qword_256124770;
  if (!qword_256124770)
  {
    result = MEMORY[0x23493E300](&unk_233BDCD1C, &type metadata for InstallSheetContext.InstallType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124770);
  }
  return result;
}

unint64_t sub_233B97394()
{
  unint64_t result;

  result = qword_256124778;
  if (!qword_256124778)
  {
    result = MEMORY[0x23493E300](&unk_233BDCCCC, &type metadata for InstallSheetContext.InstallType.MarketplaceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124778);
  }
  return result;
}

unint64_t sub_233B973D8()
{
  unint64_t result;

  result = qword_256124780;
  if (!qword_256124780)
  {
    result = MEMORY[0x23493E300](&unk_233BDCC7C, &type metadata for InstallSheetContext.InstallType.AppCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124780);
  }
  return result;
}

unint64_t sub_233B9741C()
{
  unint64_t result;

  result = qword_2561247A8;
  if (!qword_2561247A8)
  {
    result = MEMORY[0x23493E300](&unk_233BDCC2C, &type metadata for InstallSheetContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561247A8);
  }
  return result;
}

unint64_t sub_233B97460()
{
  unint64_t result;

  result = qword_2561247B0;
  if (!qword_2561247B0)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for InstallSheetContext.Source, &type metadata for InstallSheetContext.Source);
    atomic_store(result, (unint64_t *)&qword_2561247B0);
  }
  return result;
}

unint64_t sub_233B974A4()
{
  unint64_t result;

  result = qword_2561247B8;
  if (!qword_2561247B8)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for InstallSheetContext.InstallType, &type metadata for InstallSheetContext.InstallType);
    atomic_store(result, (unint64_t *)&qword_2561247B8);
  }
  return result;
}

unint64_t sub_233B974E8()
{
  unint64_t result;

  result = qword_2561247C8;
  if (!qword_2561247C8)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for InstallSheetContext.Source, &type metadata for InstallSheetContext.Source);
    atomic_store(result, (unint64_t *)&qword_2561247C8);
  }
  return result;
}

unint64_t sub_233B9752C()
{
  unint64_t result;

  result = qword_2561247D0;
  if (!qword_2561247D0)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for InstallSheetContext.InstallType, &type metadata for InstallSheetContext.InstallType);
    atomic_store(result, (unint64_t *)&qword_2561247D0);
  }
  return result;
}

unint64_t sub_233B97574()
{
  unint64_t result;

  result = qword_2561247D8;
  if (!qword_2561247D8)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for InstallSheetContext.InstallType, &type metadata for InstallSheetContext.InstallType);
    atomic_store(result, (unint64_t *)&qword_2561247D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for InstallSheetContext()
{
  return &type metadata for InstallSheetContext;
}

uint64_t destroy for InstallSheetContext.Source(uint64_t a1)
{
  return sub_233B81A48(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
}

uint64_t initializeWithCopy for InstallSheetContext.Source(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_233B84280(*(_QWORD *)a2, v4, v5, v6, v7, v8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for InstallSheetContext.Source(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_233B84280(*(_QWORD *)a2, v4, v5, v6, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  v14 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v8;
  sub_233B81A48(v9, v10, v11, v12, v13, v14);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for InstallSheetContext.Source(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  char v11;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 32) = v3;
  v11 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v4;
  sub_233B81A48(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for InstallSheetContext.Source(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for InstallSheetContext.Source(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_233B977D8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 40) <= 2u)
    return *(unsigned __int8 *)(a1 + 40);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_233B977F0(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for InstallSheetContext.Source()
{
  return &type metadata for InstallSheetContext.Source;
}

uint64_t destroy for InstallSheetContext.Source.AppStoreSheetContext(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(a1 + 32);
  if (v3 >> 60 != 15)
    return sub_233B71B8C(*(_QWORD *)(a1 + 24), v3);
  return result;
}

uint64_t initializeWithCopy for InstallSheetContext.Source.AppStoreSheetContext(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _OWORD *v4;
  unint64_t v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = (_OWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v5 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 24) = *v4;
  }
  else
  {
    v6 = *(_QWORD *)v4;
    sub_233B71CAC(v6, v5);
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = v5;
  }
  return a1;
}

uint64_t assignWithCopy for InstallSheetContext.Source.AppStoreSheetContext(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (uint64_t *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32) >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      v7 = *v4;
      sub_233B71CAC(*v4, v5);
      v8 = *(_QWORD *)(a1 + 24);
      v9 = *(_QWORD *)(a1 + 32);
      *(_QWORD *)(a1 + 24) = v7;
      *(_QWORD *)(a1 + 32) = v5;
      sub_233B71B8C(v8, v9);
      return a1;
    }
    sub_233B8C3A4(a1 + 24);
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)v4;
    return a1;
  }
  v6 = *v4;
  sub_233B71CAC(*v4, v5);
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v5;
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for InstallSheetContext.Source.AppStoreSheetContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = (_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  if (v6 >> 60 != 15)
  {
    v7 = *(_QWORD *)(a2 + 32);
    if (v7 >> 60 != 15)
    {
      v8 = *(_QWORD *)(a1 + 24);
      *(_QWORD *)(a1 + 24) = *v5;
      *(_QWORD *)(a1 + 32) = v7;
      sub_233B71B8C(v8, v6);
      return a1;
    }
    sub_233B8C3A4(a1 + 24);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for InstallSheetContext.Source.AppStoreSheetContext(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InstallSheetContext.Source.AppStoreSheetContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for InstallSheetContext.Source.AppStoreSheetContext()
{
  return &type metadata for InstallSheetContext.Source.AppStoreSheetContext;
}

ValueMetadata *type metadata accessor for InstallSheetContext.InstallType()
{
  return &type metadata for InstallSheetContext.InstallType;
}

uint64_t getEnumTagSinglePayload for InstallSheetContext.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for InstallSheetContext.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_233B97BE0 + 4 * byte_233BDC2CD[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_233B97C14 + 4 * byte_233BDC2C8[v4]))();
}

uint64_t sub_233B97C14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233B97C1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233B97C24);
  return result;
}

uint64_t sub_233B97C30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233B97C38);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_233B97C3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233B97C44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InstallSheetContext.CodingKeys()
{
  return &type metadata for InstallSheetContext.CodingKeys;
}

ValueMetadata *type metadata accessor for InstallSheetContext.InstallType.CodingKeys()
{
  return &type metadata for InstallSheetContext.InstallType.CodingKeys;
}

ValueMetadata *type metadata accessor for InstallSheetContext.InstallType.AppCodingKeys()
{
  return &type metadata for InstallSheetContext.InstallType.AppCodingKeys;
}

ValueMetadata *type metadata accessor for InstallSheetContext.InstallType.MarketplaceCodingKeys()
{
  return &type metadata for InstallSheetContext.InstallType.MarketplaceCodingKeys;
}

uint64_t storeEnumTagSinglePayload for InstallSheetContext.Source.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_233B97CDC + 4 * byte_233BDC2D7[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_233B97D10 + 4 * byte_233BDC2D2[v4]))();
}

uint64_t sub_233B97D10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233B97D18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233B97D20);
  return result;
}

uint64_t sub_233B97D2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233B97D34);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_233B97D38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233B97D40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InstallSheetContext.Source.CodingKeys()
{
  return &type metadata for InstallSheetContext.Source.CodingKeys;
}

ValueMetadata *type metadata accessor for InstallSheetContext.Source.AppStoreCodingKeys()
{
  return &type metadata for InstallSheetContext.Source.AppStoreCodingKeys;
}

uint64_t storeEnumTagSinglePayload for InstallSheetContext.Source.AppStoreWithContextCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_233B97DAC + 4 * byte_233BDC2DC[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_233B97DCC + 4 * byte_233BDC2E1[v4]))();
}

_BYTE *sub_233B97DAC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_233B97DCC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233B97DD4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233B97DDC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233B97DE4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233B97DEC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for InstallSheetContext.Source.AppStoreWithContextCodingKeys()
{
  return &type metadata for InstallSheetContext.Source.AppStoreWithContextCodingKeys;
}

ValueMetadata *type metadata accessor for InstallSheetContext.Source.DistributorCodingKeys()
{
  return &type metadata for InstallSheetContext.Source.DistributorCodingKeys;
}

uint64_t _s14MarketplaceKit19InstallSheetContextV11InstallTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_233B97E64 + 4 * byte_233BDC2EB[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_233B97E98 + 4 * byte_233BDC2E6[v4]))();
}

uint64_t sub_233B97E98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233B97EA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233B97EA8);
  return result;
}

uint64_t sub_233B97EB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233B97EBCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_233B97EC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233B97EC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InstallSheetContext.Source.WebCodingKeys()
{
  return &type metadata for InstallSheetContext.Source.WebCodingKeys;
}

uint64_t storeEnumTagSinglePayload for InstallSheetContext.Source.AppStoreSheetContext.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_233B97F30 + 4 * byte_233BDC2F5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_233B97F64 + 4 * byte_233BDC2F0[v4]))();
}

uint64_t sub_233B97F64(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233B97F6C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233B97F74);
  return result;
}

uint64_t sub_233B97F80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233B97F88);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_233B97F8C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233B97F94(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InstallSheetContext.Source.AppStoreSheetContext.CodingKeys()
{
  return &type metadata for InstallSheetContext.Source.AppStoreSheetContext.CodingKeys;
}

unint64_t sub_233B97FB4()
{
  unint64_t result;

  result = qword_2561247E0;
  if (!qword_2561247E0)
  {
    result = MEMORY[0x23493E300](&unk_233BDC6C4, &type metadata for InstallSheetContext.Source.AppStoreSheetContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561247E0);
  }
  return result;
}

unint64_t sub_233B97FFC()
{
  unint64_t result;

  result = qword_2561247E8;
  if (!qword_2561247E8)
  {
    result = MEMORY[0x23493E300](&unk_233BDC77C, &type metadata for InstallSheetContext.Source.WebCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561247E8);
  }
  return result;
}

unint64_t sub_233B98044()
{
  unint64_t result;

  result = qword_2561247F0;
  if (!qword_2561247F0)
  {
    result = MEMORY[0x23493E300](&unk_233BDC834, &type metadata for InstallSheetContext.Source.DistributorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561247F0);
  }
  return result;
}

unint64_t sub_233B9808C()
{
  unint64_t result;

  result = qword_2561247F8;
  if (!qword_2561247F8)
  {
    result = MEMORY[0x23493E300](&unk_233BDC8EC, &type metadata for InstallSheetContext.Source.AppStoreWithContextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561247F8);
  }
  return result;
}

unint64_t sub_233B980D4()
{
  unint64_t result;

  result = qword_256124800;
  if (!qword_256124800)
  {
    result = MEMORY[0x23493E300](&unk_233BDC9F4, &type metadata for InstallSheetContext.Source.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124800);
  }
  return result;
}

unint64_t sub_233B9811C()
{
  unint64_t result;

  result = qword_256124808;
  if (!qword_256124808)
  {
    result = MEMORY[0x23493E300](&unk_233BDCB4C, &type metadata for InstallSheetContext.InstallType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124808);
  }
  return result;
}

unint64_t sub_233B98164()
{
  unint64_t result;

  result = qword_256124810;
  if (!qword_256124810)
  {
    result = MEMORY[0x23493E300](&unk_233BDCC04, &type metadata for InstallSheetContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124810);
  }
  return result;
}

unint64_t sub_233B981AC()
{
  unint64_t result;

  result = qword_256124818;
  if (!qword_256124818)
  {
    result = MEMORY[0x23493E300](&unk_233BDCB74, &type metadata for InstallSheetContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124818);
  }
  return result;
}

unint64_t sub_233B981F4()
{
  unint64_t result;

  result = qword_256124820;
  if (!qword_256124820)
  {
    result = MEMORY[0x23493E300](&unk_233BDCB9C, &type metadata for InstallSheetContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124820);
  }
  return result;
}

unint64_t sub_233B9823C()
{
  unint64_t result;

  result = qword_256124828;
  if (!qword_256124828)
  {
    result = MEMORY[0x23493E300](&unk_233BDCA6C, &type metadata for InstallSheetContext.InstallType.AppCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124828);
  }
  return result;
}

unint64_t sub_233B98284()
{
  unint64_t result;

  result = qword_256124830;
  if (!qword_256124830)
  {
    result = MEMORY[0x23493E300](&unk_233BDCA94, &type metadata for InstallSheetContext.InstallType.AppCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124830);
  }
  return result;
}

unint64_t sub_233B982CC()
{
  unint64_t result;

  result = qword_256124838;
  if (!qword_256124838)
  {
    result = MEMORY[0x23493E300](&unk_233BDCA1C, &type metadata for InstallSheetContext.InstallType.MarketplaceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124838);
  }
  return result;
}

unint64_t sub_233B98314()
{
  unint64_t result;

  result = qword_256124840;
  if (!qword_256124840)
  {
    result = MEMORY[0x23493E300](&unk_233BDCA44, &type metadata for InstallSheetContext.InstallType.MarketplaceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124840);
  }
  return result;
}

unint64_t sub_233B9835C()
{
  unint64_t result;

  result = qword_256124848;
  if (!qword_256124848)
  {
    result = MEMORY[0x23493E300](&unk_233BDCABC, &type metadata for InstallSheetContext.InstallType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124848);
  }
  return result;
}

unint64_t sub_233B983A4()
{
  unint64_t result;

  result = qword_256124850;
  if (!qword_256124850)
  {
    result = MEMORY[0x23493E300](&unk_233BDCAE4, &type metadata for InstallSheetContext.InstallType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124850);
  }
  return result;
}

unint64_t sub_233B983EC()
{
  unint64_t result;

  result = qword_256124858;
  if (!qword_256124858)
  {
    result = MEMORY[0x23493E300](&unk_233BDC914, &type metadata for InstallSheetContext.Source.AppStoreCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124858);
  }
  return result;
}

unint64_t sub_233B98434()
{
  unint64_t result;

  result = qword_256124860;
  if (!qword_256124860)
  {
    result = MEMORY[0x23493E300](&unk_233BDC93C, &type metadata for InstallSheetContext.Source.AppStoreCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124860);
  }
  return result;
}

unint64_t sub_233B9847C()
{
  unint64_t result;

  result = qword_256124868;
  if (!qword_256124868)
  {
    result = MEMORY[0x23493E300](&unk_233BDC85C, &type metadata for InstallSheetContext.Source.AppStoreWithContextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124868);
  }
  return result;
}

unint64_t sub_233B984C4()
{
  unint64_t result;

  result = qword_256124870;
  if (!qword_256124870)
  {
    result = MEMORY[0x23493E300](&unk_233BDC884, &type metadata for InstallSheetContext.Source.AppStoreWithContextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124870);
  }
  return result;
}

unint64_t sub_233B9850C()
{
  unint64_t result;

  result = qword_256124878;
  if (!qword_256124878)
  {
    result = MEMORY[0x23493E300](&unk_233BDC7A4, &type metadata for InstallSheetContext.Source.DistributorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124878);
  }
  return result;
}

unint64_t sub_233B98554()
{
  unint64_t result;

  result = qword_256124880;
  if (!qword_256124880)
  {
    result = MEMORY[0x23493E300](&unk_233BDC7CC, &type metadata for InstallSheetContext.Source.DistributorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124880);
  }
  return result;
}

unint64_t sub_233B9859C()
{
  unint64_t result;

  result = qword_256124888;
  if (!qword_256124888)
  {
    result = MEMORY[0x23493E300](&unk_233BDC6EC, &type metadata for InstallSheetContext.Source.WebCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124888);
  }
  return result;
}

unint64_t sub_233B985E4()
{
  unint64_t result;

  result = qword_256124890;
  if (!qword_256124890)
  {
    result = MEMORY[0x23493E300](&unk_233BDC714, &type metadata for InstallSheetContext.Source.WebCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124890);
  }
  return result;
}

unint64_t sub_233B9862C()
{
  unint64_t result;

  result = qword_256124898;
  if (!qword_256124898)
  {
    result = MEMORY[0x23493E300](&unk_233BDC964, &type metadata for InstallSheetContext.Source.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124898);
  }
  return result;
}

unint64_t sub_233B98674()
{
  unint64_t result;

  result = qword_2561248A0;
  if (!qword_2561248A0)
  {
    result = MEMORY[0x23493E300](&unk_233BDC98C, &type metadata for InstallSheetContext.Source.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561248A0);
  }
  return result;
}

unint64_t sub_233B986BC()
{
  unint64_t result;

  result = qword_2561248A8;
  if (!qword_2561248A8)
  {
    result = MEMORY[0x23493E300](&unk_233BDC634, &type metadata for InstallSheetContext.Source.AppStoreSheetContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561248A8);
  }
  return result;
}

unint64_t sub_233B98704()
{
  unint64_t result;

  result = qword_2561248B0;
  if (!qword_2561248B0)
  {
    result = MEMORY[0x23493E300](&unk_233BDC65C, &type metadata for InstallSheetContext.Source.AppStoreSheetContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561248B0);
  }
  return result;
}

uint64_t sub_233B98748(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D6F6942776F6873 && a2 == 0xEE00736369727465;
  if (v2 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x546C6C6174736E69 && a2 == 0xEB00000000657079 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000233BE5510)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_233B988D4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65726F7453707061 && a2 == 0xE800000000000000;
  if (v2 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000233BE5530 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7562697274736964 && a2 == 0xEB00000000726F74 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 6448503 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_233B98A8C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_233B98B54(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
  if (v2 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65706F6C65766564 && a2 == 0xED0000656D614E72)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_233B98C60(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7368801 && a2 == 0xE300000000000000;
  if (v2 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C7074656B72616DLL && a2 == 0xEB00000000656361)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_233B98D58(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x44496D657469 && a2 == 0xE600000000000000;
  if (v2 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x496E6F6973726576 && a2 == 0xE900000000000044 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x79654B676F6CLL && a2 == 0xE600000000000000 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656372756F73 && a2 == 0xE600000000000000 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000233BE5550 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x726F4D6E7261656CLL && a2 == 0xEC0000004C525565 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x8000000233BE5570)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

unint64_t SecureButtonTag.ButtonImagePlacement.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 4;
  if (result < 4)
    v2 = result;
  *a2 = v2;
  return result;
}

uint64_t SecureButtonTag.ButtonImagePlacement.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_233B990B4@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return SecureButtonTag.ButtonImagePlacement.init(rawValue:)(*a1, a2);
}

void sub_233B990BC(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t static SecureButtonTag.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t SecureButtonTag.label.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_label);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SecureButtonTag.imageName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_imageName);
  swift_bridgeObjectRetain();
  return v1;
}

void SecureButtonTag.imagePlacement.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_imagePlacement);
}

id SecureButtonTag.backgroundColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_backgroundColor);
}

id SecureButtonTag.foregroundColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_foregroundColor);
}

double SecureButtonTag.cornerRadius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_cornerRadius);
}

double SecureButtonTag.size.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_size);
}

double SecureButtonTag.fontSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_fontSize);
}

double SecureButtonTag.borderWidth.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_borderWidth);
}

id SecureButtonTag.borderColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_borderColor);
}

id SecureButtonTag.__allocating_init(label:imageName:imagePlacement:backgroundColor:foregroundColor:cornerRadius:size:fontSize:borderWidth:borderColor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13)
{
  objc_class *v13;
  id v27;

  v27 = objc_allocWithZone(v13);
  return SecureButtonTag.init(label:imageName:imagePlacement:backgroundColor:foregroundColor:cornerRadius:size:fontSize:borderWidth:borderColor:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

id SecureButtonTag.init(label:imageName:imagePlacement:backgroundColor:foregroundColor:cornerRadius:size:fontSize:borderWidth:borderColor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13)
{
  _BYTE *v13;
  objc_class *ObjectType;
  int v28;
  _QWORD *v29;
  _QWORD *v30;
  double *v31;
  objc_super v33;

  ObjectType = (objc_class *)swift_getObjectType();
  v28 = *a5;
  v29 = &v13[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_label];
  *v29 = a1;
  v29[1] = a2;
  v30 = &v13[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_imageName];
  *v30 = a3;
  v30[1] = a4;
  if (v28 == 4)
    LOBYTE(v28) = 1;
  v13[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_imagePlacement] = v28;
  *(_QWORD *)&v13[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_backgroundColor] = a6;
  *(_QWORD *)&v13[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_foregroundColor] = a7;
  *(double *)&v13[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_cornerRadius] = a9;
  v31 = (double *)&v13[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_size];
  *v31 = a10;
  v31[1] = a11;
  *(double *)&v13[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_fontSize] = a12;
  *(double *)&v13[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_borderWidth] = a13;
  *(_QWORD *)&v13[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_borderColor] = a8;
  v33.receiver = v13;
  v33.super_class = ObjectType;
  return objc_msgSendSuper2(&v33, sel_init);
}

id SecureButtonTag.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_233B9A1CC(a1);

  return v4;
}

id SecureButtonTag.init(coder:)(void *a1)
{
  id v2;

  v2 = sub_233B9A1CC(a1);

  return v2;
}

Swift::Void __swiftcall SecureButtonTag.encode(with:)(NSCoder with)
{
  uint64_t v1;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  objc_class *v10;
  char *v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  char *v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  char *v31;
  id v32;
  id v33;
  void *v34;
  objc_super v35;
  objc_super v36;
  objc_super v37;

  v3 = (void *)sub_233BD87EC();
  v4 = (void *)sub_233BD87EC();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v3, v4);

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_imageName + 8))
    v5 = sub_233BD87EC();
  else
    v5 = 0;
  v6 = (void *)sub_233BD87EC();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v5, v6);
  swift_unknownObjectRelease();

  v7 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_imagePlacement);
  v8 = (void *)sub_233BD87EC();
  -[objc_class encodeInteger:forKey:](with.super.isa, sel_encodeInteger_forKey_, v7, v8);

  v9 = *(void **)(v1 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_backgroundColor);
  v10 = (objc_class *)type metadata accessor for SerializableColor();
  v11 = (char *)objc_allocWithZone(v10);
  *(_QWORD *)&v11[OBJC_IVAR____TtC14MarketplaceKit17SerializableColor_underlyingColor] = v9;
  v37.receiver = v11;
  v37.super_class = v10;
  v12 = v9;
  v13 = objc_msgSendSuper2(&v37, sel_init);
  v14 = (void *)sub_233BD87EC();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v13, v14);

  v15 = *(void **)(v1 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_foregroundColor);
  v16 = (char *)objc_allocWithZone(v10);
  *(_QWORD *)&v16[OBJC_IVAR____TtC14MarketplaceKit17SerializableColor_underlyingColor] = v15;
  v36.receiver = v16;
  v36.super_class = v10;
  v17 = v15;
  v18 = objc_msgSendSuper2(&v36, sel_init);
  v19 = (void *)sub_233BD87EC();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v18, v19);

  v20 = (void *)sub_233BD85AC();
  v21 = (void *)sub_233BD87EC();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v20, v21);

  v22 = (void *)sub_233BD85AC();
  v23 = (void *)sub_233BD87EC();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v22, v23);

  v24 = (void *)sub_233BD85AC();
  v25 = (void *)sub_233BD87EC();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v24, v25);

  v26 = (void *)sub_233BD85AC();
  v27 = (void *)sub_233BD87EC();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v26, v27);

  v28 = (void *)sub_233BD85AC();
  v29 = (void *)sub_233BD87EC();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v28, v29);

  v30 = *(void **)(v1 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_borderColor);
  v31 = (char *)objc_allocWithZone(v10);
  *(_QWORD *)&v31[OBJC_IVAR____TtC14MarketplaceKit17SerializableColor_underlyingColor] = v30;
  v35.receiver = v31;
  v35.super_class = v10;
  v32 = v30;
  v33 = objc_msgSendSuper2(&v35, sel_init);
  v34 = (void *)sub_233BD87EC();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v33, v34, v35.receiver, v35.super_class, v36.receiver, v36.super_class, v37.receiver, v37.super_class);

}

uint64_t SecureButtonTag.hash.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;

  v1 = v0;
  sub_233BD8D44();
  swift_bridgeObjectRetain();
  sub_233BD881C();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_imageName + 8))
  {
    sub_233BD8D14();
    swift_bridgeObjectRetain();
    sub_233BD881C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_233BD8D14();
  }
  sub_233BD8D08();
  v2 = *(void **)(v0 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_backgroundColor);
  type metadata accessor for CGColor(0);
  sub_233B9A614();
  v3 = v2;
  sub_233BD85D0();

  v4 = *(id *)(v1 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_foregroundColor);
  sub_233BD85D0();

  sub_233BD8D20();
  sub_233BD8D20();
  sub_233BD8D20();
  sub_233BD8D20();
  sub_233BD8D20();
  v5 = *(id *)(v1 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_borderColor);
  sub_233BD85D0();

  return sub_233BD8D2C();
}

uint64_t SecureButtonTag.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  void *v7;
  id v8;
  char v9;
  id v10;
  char v11;
  id v12;
  char v13;
  char *v15;
  _BYTE v16[24];
  uint64_t v17;

  swift_getObjectType();
  sub_233B9A65C(a1, (uint64_t)v16);
  if (!v17)
  {
    sub_233B9A6A4((uint64_t)v16);
    goto LABEL_28;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_28:
    v13 = 0;
    return v13 & 1;
  }
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_label) == *(_QWORD *)&v15[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_label]
    && *(_QWORD *)(v1 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_label + 8) == *(_QWORD *)&v15[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_label + 8];
  if (!v3 && (sub_233BD8C6C() & 1) == 0)
    goto LABEL_27;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_imageName + 8);
  v5 = *(_QWORD *)&v15[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_imageName + 8];
  if (v4)
  {
    if (!v5)
      goto LABEL_27;
    v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_imageName) == *(_QWORD *)&v15[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_imageName]
      && v4 == v5;
    if (!v6 && (sub_233BD8C6C() & 1) == 0)
      goto LABEL_27;
  }
  else if (v5)
  {
LABEL_27:

    goto LABEL_28;
  }
  if (*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_imagePlacement) != v15[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_imagePlacement])
    goto LABEL_27;
  type metadata accessor for CGColor(0);
  v7 = *(void **)&v15[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_backgroundColor];
  sub_233B9A614();
  v8 = v7;
  v9 = sub_233BD85C4();

  if ((v9 & 1) == 0)
    goto LABEL_27;
  v10 = *(id *)&v15[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_foregroundColor];
  v11 = sub_233BD85C4();

  if ((v11 & 1) == 0
    || *(double *)(v1 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_cornerRadius) != *(double *)&v15[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_cornerRadius]
    || *(double *)(v1 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_size) != *(double *)&v15[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_size]
    || *(double *)(v1 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_size + 8) != *(double *)&v15[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_size + 8]
    || *(double *)(v1 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_fontSize) != *(double *)&v15[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_fontSize]
    || *(double *)(v1 + OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_borderWidth) != *(double *)&v15[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_borderWidth])
  {
    goto LABEL_27;
  }
  v12 = *(id *)&v15[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_borderColor];
  v13 = sub_233BD85C4();

  return v13 & 1;
}

id SecureButtonTag.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SecureButtonTag.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SecureButtonTag.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_233B99F40(void *a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v2 = sub_233BD8870();
  *(_QWORD *)(v2 + 16) = 4;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  UISGetColorSRGBComponents();
  if (!*(_QWORD *)(v2 + 16))
  {
    __break(1u);
    goto LABEL_7;
  }
  v3 = (void *)sub_233BD85AC();
  v4 = (void *)sub_233BD87EC();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);

  if (*(_QWORD *)(v2 + 16) < 2uLL)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v5 = (void *)sub_233BD85AC();
  v6 = (void *)sub_233BD87EC();
  objc_msgSend(a1, sel_encodeObject_forKey_, v5, v6);

  if (*(_QWORD *)(v2 + 16) < 3uLL)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v7 = (void *)sub_233BD85AC();
  v8 = (void *)sub_233BD87EC();
  objc_msgSend(a1, sel_encodeObject_forKey_, v7, v8);

  if (*(_QWORD *)(v2 + 16) >= 4uLL)
  {
    v9 = (void *)sub_233BD85AC();
    v10 = (id)sub_233BD87EC();
    objc_msgSend(a1, sel_encodeObject_forKey_, v9, v10);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_9:
  __break(1u);
}

id sub_233B9A18C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SerializableColor();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_233B9A1CC(void *a1)
{
  void *v1;
  void *v2;
  objc_class *ObjectType;
  _BYTE *v5;
  uint64_t v6;
  void *v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  char v13;
  uint64_t v14;
  void *v15;
  void *v16;
  CGColorRef GenericRGB;
  uint64_t v18;
  void *v19;
  void *v20;
  CGColorRef v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  CGColorRef v41;
  objc_super v43;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  sub_233B9A958();
  v5 = v2;
  v6 = sub_233BD89B4();
  if (v6)
  {
    v7 = (void *)v6;
    sub_233BD87F8();

  }
  swift_bridgeObjectRelease();
  v8 = &v5[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_label];
  *v8 = 0;
  v8[1] = 0xE000000000000000;
  v9 = sub_233BD89B4();
  if (v9)
  {
    v10 = (void *)v9;
    sub_233BD87F8();

  }
  *(_OWORD *)&v5[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_imageName] = 0uLL;
  v11 = (void *)sub_233BD87EC();
  v12 = objc_msgSend(a1, sel_decodeIntegerForKey_, v11);

  if ((unint64_t)v12 >= 4)
    v13 = 1;
  else
    v13 = (char)v12;
  v5[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_imagePlacement] = v13;
  type metadata accessor for SerializableColor();
  v14 = sub_233BD89B4();
  if (!v14
    || (v15 = (void *)v14,
        v16 = *(void **)(v14 + OBJC_IVAR____TtC14MarketplaceKit17SerializableColor_underlyingColor),
        GenericRGB = v16,
        v15,
        !v16))
  {
    GenericRGB = CGColorCreateGenericRGB(0.0, 0.0, 0.0, 0.0);
  }
  *(_QWORD *)&v5[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_backgroundColor] = GenericRGB;
  v18 = sub_233BD89B4();
  if (!v18
    || (v19 = (void *)v18,
        v20 = *(void **)(v18 + OBJC_IVAR____TtC14MarketplaceKit17SerializableColor_underlyingColor),
        v21 = v20,
        v19,
        !v20))
  {
    v21 = CGColorCreateGenericRGB(1.0, 1.0, 1.0, 1.0);
  }
  *(_QWORD *)&v5[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_foregroundColor] = v21;
  v22 = (void *)sub_233BD87EC();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v22);
  v24 = v23;

  *(_QWORD *)&v5[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_cornerRadius] = v24;
  v25 = (void *)sub_233BD87EC();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v25);
  v27 = v26;

  v28 = (void *)sub_233BD87EC();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v28);
  v30 = v29;

  v31 = &v5[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_size];
  *v31 = v27;
  v31[1] = v30;
  v32 = (void *)sub_233BD87EC();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v32);
  v34 = v33;

  *(_QWORD *)&v5[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_fontSize] = v34;
  v35 = (void *)sub_233BD87EC();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v35);
  v37 = v36;

  *(_QWORD *)&v5[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_borderWidth] = v37;
  v38 = sub_233BD89B4();
  if (!v38
    || (v39 = (void *)v38,
        v40 = *(void **)(v38 + OBJC_IVAR____TtC14MarketplaceKit17SerializableColor_underlyingColor),
        v41 = v40,
        v39,
        !v40))
  {
    v41 = CGColorCreateGenericRGB(1.0, 1.0, 1.0, 0.0);
  }
  *(_QWORD *)&v5[OBJC_IVAR____TtC14MarketplaceKit15SecureButtonTag_borderColor] = v41;

  v43.receiver = v5;
  v43.super_class = ObjectType;
  return objc_msgSendSuper2(&v43, sel_init);
}

uint64_t type metadata accessor for SerializableColor()
{
  return objc_opt_self();
}

unint64_t sub_233B9A614()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256124918;
  if (!qword_256124918)
  {
    type metadata accessor for CGColor(255);
    result = MEMORY[0x23493E300](&unk_233BD9558, v1);
    atomic_store(result, (unint64_t *)&qword_256124918);
  }
  return result;
}

uint64_t sub_233B9A65C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124920);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_233B9A6A4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124920);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_233B9A6E8()
{
  unint64_t result;

  result = qword_256124928;
  if (!qword_256124928)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for SecureButtonTag.ButtonImagePlacement, &type metadata for SecureButtonTag.ButtonImagePlacement);
    atomic_store(result, (unint64_t *)&qword_256124928);
  }
  return result;
}

uint64_t type metadata accessor for SecureButtonTag()
{
  return objc_opt_self();
}

uint64_t method lookup function for SecureButtonTag()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SecureButtonTag.__allocating_init(label:imageName:imagePlacement:backgroundColor:foregroundColor:cornerRadius:size:fontSize:borderWidth:borderColor:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of SecureButtonTag.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t storeEnumTagSinglePayload for SecureButtonTag.ButtonImagePlacement(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_233B9A7B4 + 4 * byte_233BDCF55[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_233B9A7E8 + 4 * byte_233BDCF50[v4]))();
}

uint64_t sub_233B9A7E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233B9A7F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233B9A7F8);
  return result;
}

uint64_t sub_233B9A804(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233B9A80CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_233B9A810(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233B9A818(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SecureButtonTag.ButtonImagePlacement()
{
  return &type metadata for SecureButtonTag.ButtonImagePlacement;
}

id sub_233B9A834(void *a1)
{
  void *v1;
  char *v3;
  void *v4;
  double v5;
  CGFloat v6;
  void *v7;
  double v8;
  CGFloat v9;
  void *v10;
  double v11;
  CGFloat v12;
  void *v13;
  double v14;
  CGFloat v15;
  objc_super v17;

  v3 = v1;
  v4 = (void *)sub_233BD87EC();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v4);
  v6 = v5;

  v7 = (void *)sub_233BD87EC();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v7);
  v9 = v8;

  v10 = (void *)sub_233BD87EC();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v10);
  v12 = v11;

  v13 = (void *)sub_233BD87EC();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v13);
  v15 = v14;

  *(_QWORD *)&v3[OBJC_IVAR____TtC14MarketplaceKit17SerializableColor_underlyingColor] = CGColorCreateSRGB(v6, v9, v12, v15);
  v17.receiver = v3;
  v17.super_class = (Class)type metadata accessor for SerializableColor();
  return objc_msgSendSuper2(&v17, sel_init);
}

unint64_t sub_233B9A958()
{
  unint64_t result;

  result = qword_256124A40;
  if (!qword_256124A40)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256124A40);
  }
  return result;
}

uint64_t static UpdateService.availableUpdate(for:checkInWithServer:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;

  *(_BYTE *)(v4 + 33) = a4;
  *(_QWORD *)(v4 + 56) = a2;
  *(_QWORD *)(v4 + 64) = a3;
  *(_QWORD *)(v4 + 48) = a1;
  return swift_task_switch();
}

uint64_t sub_233B9A9B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  _QWORD *v4;
  char *v6;

  v1 = qword_25424FEB8;
  v2 = swift_bridgeObjectRetain();
  if (v1 != -1)
  {
    swift_once();
    v2 = *(_QWORD *)(v0 + 64);
  }
  v3 = *(_BYTE *)(v0 + 33);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 24) = v2;
  *(_QWORD *)(v0 + 40) = v0 + 16;
  *(_BYTE *)(v0 + 32) = v3;
  v6 = (char *)&dword_256123DC8 + dword_256123DC8;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v4;
  *v4 = v0;
  v4[1] = sub_233B9AA84;
  return ((uint64_t (*)(_QWORD, uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v6)(*(_QWORD *)(v0 + 48), v0 + 40, sub_233B9AB38, 0);
}

uint64_t sub_233B9AA84()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_233B9AAF8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t UpdateMetadataRequest.init(bundleID:shouldCheckInWithServer:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = a2;
  *(_BYTE *)(a4 + 16) = a3;
  return result;
}

void sub_233B9AB38(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_233B90C88(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_7, (SEL *)&selRef_requestUpdateMetadata_reply_);
}

uint64_t static UpdateService.requestUpdate(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)a1;
  *(_QWORD *)(v1 + 96) = v2;
  *(_OWORD *)(v1 + 104) = *(_OWORD *)(a1 + 16);
  *(_QWORD *)(v1 + 120) = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(v1 + 128) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v1 + 144) = *(_QWORD *)(a1 + 56);
  return swift_task_switch();
}

uint64_t sub_233B9AB88()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  if (qword_25424FEB8 != -1)
    swift_once();
  v2 = v0[17];
  v1 = v0[18];
  v4 = v0[15];
  v3 = v0[16];
  v6 = v0[13];
  v5 = v0[14];
  v8 = v0[11];
  v7 = v0[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_233B80238();
  sub_233B8027C();
  v0[2] = v8;
  v0[3] = v7;
  v0[4] = v6;
  v0[5] = v5;
  v0[6] = v4;
  v0[7] = v3;
  v0[8] = v2;
  v0[10] = v0 + 2;
  v0[9] = v1;
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_256123DB0 + dword_256123DB0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = (_QWORD *)swift_task_alloc();
  v0[19] = v9;
  *v9 = v0;
  v9[1] = sub_233B9ACBC;
  return v11((uint64_t)(v0 + 10), (uint64_t)sub_233B9AE54, 0);
}

uint64_t sub_233B9ACBC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_233B9AD54()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233B9ADB4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_233B9AE54(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_233B90C88(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_5, (SEL *)&selRef_requestUpdate_reply_);
}

uint64_t UpdateMetadataRequest.bundleID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UpdateMetadataRequest.shouldCheckInWithServer.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_233B9AE9C()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000017;
  else
    return 0x4449656C646E7562;
}

uint64_t sub_233B9AEDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233B9B588(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233B9AF00()
{
  sub_233B9B230();
  return sub_233BD8D8C();
}

uint64_t sub_233B9AF28()
{
  sub_233B9B230();
  return sub_233BD8D98();
}

uint64_t UpdateMetadataRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  uint64_t v10;
  int v11;
  char v12;
  char v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124A58);
  v10 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233B9B230();
  sub_233BD8D80();
  v13 = 0;
  sub_233BD8C18();
  if (!v2)
  {
    v12 = 1;
    sub_233BD8C24();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v7, v4);
}

uint64_t UpdateMetadataRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v15;
  char v16;
  char v17;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124A68);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233B9B230();
  sub_233BD8D68();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v17 = 0;
  v10 = sub_233BD8B88();
  v12 = v11;
  v16 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_233BD8B94();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  *(_BYTE *)(a2 + 16) = v13 & 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_233B9B208@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return UpdateMetadataRequest.init(from:)(a1, a2);
}

uint64_t sub_233B9B21C(_QWORD *a1)
{
  return UpdateMetadataRequest.encode(to:)(a1);
}

unint64_t sub_233B9B230()
{
  unint64_t result;

  result = qword_256124A60;
  if (!qword_256124A60)
  {
    result = MEMORY[0x23493E300](&unk_233BDD1EC, &type metadata for UpdateMetadataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124A60);
  }
  return result;
}

ValueMetadata *type metadata accessor for UpdateService()
{
  return &type metadata for UpdateService;
}

uint64_t sub_233B9B288(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UpdateMetadataRequest(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for UpdateMetadataRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for UpdateMetadataRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UpdateMetadataRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UpdateMetadataRequest()
{
  return &type metadata for UpdateMetadataRequest;
}

uint64_t storeEnumTagSinglePayload for UpdateMetadataRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_233B9B430 + 4 * byte_233BDD085[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_233B9B464 + 4 * asc_233BDD080[v4]))();
}

uint64_t sub_233B9B464(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233B9B46C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233B9B474);
  return result;
}

uint64_t sub_233B9B480(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233B9B488);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_233B9B48C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233B9B494(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UpdateMetadataRequest.CodingKeys()
{
  return &type metadata for UpdateMetadataRequest.CodingKeys;
}

unint64_t sub_233B9B4B4()
{
  unint64_t result;

  result = qword_256124A70;
  if (!qword_256124A70)
  {
    result = MEMORY[0x23493E300](&unk_233BDD1C4, &type metadata for UpdateMetadataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124A70);
  }
  return result;
}

unint64_t sub_233B9B4FC()
{
  unint64_t result;

  result = qword_256124A78;
  if (!qword_256124A78)
  {
    result = MEMORY[0x23493E300](&unk_233BDD134, &type metadata for UpdateMetadataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124A78);
  }
  return result;
}

unint64_t sub_233B9B544()
{
  unint64_t result;

  result = qword_256124A80;
  if (!qword_256124A80)
  {
    result = MEMORY[0x23493E300](&unk_233BDD15C, &type metadata for UpdateMetadataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124A80);
  }
  return result;
}

uint64_t sub_233B9B588(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4449656C646E7562 && a2 == 0xE800000000000000;
  if (v2 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000233BE5730)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t static AppLibrary.getSearchTerritory(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 112) = a2;
  return swift_task_switch();
}

uint64_t sub_233B9B6AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v6;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = qword_25424FEB8;
  swift_bridgeObjectRetain();
  if (v2 != -1)
    swift_once();
  v3 = *(_QWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 24) = v1;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_BYTE *)(v0 + 64) = 1;
  *(_QWORD *)(v0 + 96) = v0 + 16;
  sub_233B743E8(v3, v1, 0, 0, 0, 0, 1);
  v6 = (char *)&dword_256123B78 + dword_256123B78;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v4;
  *v4 = v0;
  v4[1] = sub_233B9B7AC;
  return ((uint64_t (*)(uint64_t, uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v6)(v0 + 72, v0 + 96, sub_233B9EFE0, 0);
}

uint64_t sub_233B9B7AC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_233B7443C(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_BYTE *)(v2 + 64));
  return swift_task_switch();
}

uint64_t sub_233B9B824()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  int v3;

  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(unsigned __int8 *)(v0 + 88);
  if (v3 != 7)
  {
    sub_233B7EE40(v1, v2, v3);
    v1 = 0;
    v2 = 0;
  }
  return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_233B9B874()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 128);
  sub_233B7443C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  swift_bridgeObjectRelease();

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(0, 0);
}

uint64_t static AppLibrary.setSearchTerritory(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[12] = a3;
  v4[13] = a4;
  v4[10] = a1;
  v4[11] = a2;
  sub_233BD88B8();
  v4[14] = sub_233BD88AC();
  v4[15] = sub_233BD8888();
  v4[16] = v5;
  return swift_task_switch();
}

uint64_t sub_233B9B940()
{
  uint64_t v0;
  uint64_t v1;

  v1 = qword_25424FEB8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v1 != -1)
    swift_once();
  *(_QWORD *)(v0 + 136) = qword_254252F00;
  return swift_task_switch();
}

uint64_t sub_233B9B9BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  sub_233B74148();
  sub_233B7418C();
  *(_QWORD *)(v0 + 16) = v4;
  *(_QWORD *)(v0 + 24) = v3;
  *(_QWORD *)(v0 + 32) = v1;
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 56) = 0;
  *(_QWORD *)(v0 + 40) = v2;
  *(_BYTE *)(v0 + 64) = 4;
  *(_QWORD *)(v0 + 72) = v0 + 16;
  sub_233B741D0(v4, v3, v1, v2, 0, 0, 4);
  v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_256123E90 + dword_256123E90);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v5;
  *v5 = v0;
  v5[1] = sub_233B9BA8C;
  return v7(v0 + 72, (uint64_t)sub_233B9BC2C, 0);
}

uint64_t sub_233B9BA8C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 152) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_233B74238(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_BYTE *)(v2 + 64));
  return swift_task_switch();
}

uint64_t sub_233B9BB04()
{
  uint64_t *v0;

  sub_233B74238(v0[10], v0[11], v0[12], v0[13], 0, 0, 4);
  return swift_task_switch();
}

uint64_t sub_233B9BB4C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233B9BB7C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 152);
  sub_233B74238(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));

  return swift_task_switch();
}

uint64_t sub_233B9BBCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 80);
  swift_release();
  sub_233B74238(v4, v3, v2, v1, 0, 0, 4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_233B9BC2C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  void *v9;
  _QWORD v10[6];

  v8 = (void *)sub_233BD8534();
  v10[4] = a4;
  v10[5] = a5;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_233BC37F0;
  v10[3] = &block_descriptor_6;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_setPrivateDataRequest_reply_, v8, v9);
  _Block_release(v9);

}

uint64_t static AppLibrary.associatedApps(developerID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 112) = a2;
  return swift_task_switch();
}

uint64_t sub_233B9BD04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v6;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = qword_25424FEB8;
  swift_bridgeObjectRetain();
  if (v2 != -1)
    swift_once();
  v3 = *(_QWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 24) = v1;
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0;
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 56) = 0x1000000000000000;
  *(_BYTE *)(v0 + 64) = 0;
  *(_QWORD *)(v0 + 96) = v0 + 16;
  sub_233B743E8(v3, v1, 0, 0, 0, 0x1000000000000000uLL, 0);
  v6 = (char *)&dword_256123B78 + dword_256123B78;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v4;
  *v4 = v0;
  v4[1] = sub_233B9BE04;
  return ((uint64_t (*)(uint64_t, uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v6)(v0 + 72, v0 + 96, sub_233B9EFE0, 0);
}

uint64_t sub_233B9BE04()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_233B7443C(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_BYTE *)(v2 + 64));
  return swift_task_switch();
}

uint64_t sub_233B9BE7C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(unsigned __int8 *)(v0 + 88);
  if (v2 == 2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_233B7EE40(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), v2);
    swift_bridgeObjectRelease();
    v1 = MEMORY[0x24BEE4AF8];
  }
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_233B9BEE8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 128);
  sub_233B7443C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  swift_bridgeObjectRelease();

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x24BEE4AF8]);
}

uint64_t static AppLibrary.synchronousAssociatedApps(developerID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t *v14;
  __int128 v15;
  char v16;

  v4 = qword_25424FEB8;
  swift_bridgeObjectRetain();
  if (v4 != -1)
    swift_once();
  v7 = a1;
  v8 = a2;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0x1000000000000000;
  v13 = 0;
  v14 = &v7;
  sub_233B743E8(a1, a2, 0, 0, 0, 0x1000000000000000uLL, 0);
  sub_233B727E4(&v14, (void (*)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))sub_233B9EFF4, 0, &v15);
  sub_233B7443C(v7, v8, v9, v10, v11, v12, v13);
  v5 = v15;
  if (v16 == 2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_233B7EE40(v15, *((unint64_t *)&v15 + 1), v16);
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return v5;
}

Swift::Void __swiftcall AppLibrary.beginIndeterminantProgress(itemID:)(Swift::UInt64 itemID)
{
  Swift::String v2;
  Swift::String v3;

  sub_233BD88B8();
  sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  AppLibrary.beginIndeterminantProgress(itemID:versionID:version:shortVersion:account:)(itemID, 0, v2, v3, (Swift::String_optional)0);
  swift_release();
}

Swift::Void __swiftcall AppLibrary.beginIndeterminantProgress(itemID:versionID:version:shortVersion:account:)(Swift::UInt64 itemID, Swift::UInt64 versionID, Swift::String version, Swift::String shortVersion, Swift::String_optional account)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t countAndFlagsBits;
  void *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void *object;
  void *v33;
  uint64_t v34;
  _QWORD v35[8];

  object = account.value._object;
  v33 = shortVersion._object;
  countAndFlagsBits = account.value._countAndFlagsBits;
  v6 = shortVersion._countAndFlagsBits;
  v7 = version._object;
  v8 = version._countAndFlagsBits;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124AA0);
  MEMORY[0x24BDAC7A8](v11, v12);
  v30 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_233BD88B8();
  v29 = sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  v31 = v5;
  v14 = AppLibrary.app(forAppleItemID:)(itemID);
  v15 = objc_allocWithZone((Class)type metadata accessor for InstallationNSProgress());
  v16 = object;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = v33;
  swift_bridgeObjectRetain();
  v18 = sub_233BC9324(itemID);
  v35[0] = versionID;
  v35[1] = v8;
  v28 = v7;
  v35[2] = v7;
  v35[3] = v6;
  v35[4] = v17;
  v35[5] = countAndFlagsBits;
  v35[6] = v16;
  v35[7] = v18;
  sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath, v20);
  *(&v26 - 2) = v14;
  *(&v26 - 1) = (uint64_t)v35;
  v21 = v14 + OBJC_IVAR____TtCC14MarketplaceKit10AppLibrary3App___observationRegistrar;
  v34 = v14;
  sub_233B9CAF8();
  countAndFlagsBits = v21;
  sub_233BD8564();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v22 = type metadata accessor for MarketplaceKitError();
  v23 = (uint64_t)v30;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v30, 1, 1, v22);
  sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  v24 = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](v24, v25);
  *(&v26 - 2) = v14;
  *(&v26 - 1) = v23;
  v34 = v14;
  sub_233BD8564();
  swift_release();
  sub_233B9CB7C(v23);
  swift_release();
  AppLibrary.updateInstallState(forUpdated:)(v14);
  swift_release();
  swift_release();
}

uint64_t AppLibrary.resetAppToAvailable(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];
  char *v13;
  uint64_t v14;
  _OWORD v15[4];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124AA0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v13 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_233BD88B8();
  v12[1] = sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  memset(v15, 0, sizeof(v15));
  sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath, v6);
  v12[-2] = a1;
  v12[-1] = v15;
  v14 = a1;
  sub_233B9CAF8();
  sub_233BD8564();
  swift_release();
  swift_release();
  v7 = type metadata accessor for MarketplaceKitError();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v13, 1, 1, v7);
  sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  v8 = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](v8, v9);
  v10 = (uint64_t)v13;
  v12[-2] = a1;
  v12[-1] = v10;
  v14 = a1;
  sub_233BD8564();
  swift_release();
  sub_233B9CB7C(v10);
  swift_release();
  AppLibrary.updateInstallState(forUpdated:)(a1);
  return swift_release();
}

uint64_t RepairRequest.bundleID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RepairRequest.isBackground.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t RepairRequest.reason.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t RepairRequest.init(bundleID:isBackground:reason:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(_QWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = a2;
  *(_BYTE *)(a5 + 16) = a3;
  *(_QWORD *)(a5 + 24) = a4;
  return result;
}

uint64_t AppLibrary.handleRepairRequest(_:)(uint64_t a1)
{
  uint64_t v1;

  *(_OWORD *)(v1 + 56) = *(_OWORD *)a1;
  *(_BYTE *)(v1 + 41) = *(_BYTE *)(a1 + 16);
  *(_QWORD *)(v1 + 72) = *(_QWORD *)(a1 + 24);
  return swift_task_switch();
}

uint64_t sub_233B9C7E4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(void);

  v3 = *(_QWORD *)(v2 + 72);
  if (v3 >> 31)
  {
    __break(1u);
    goto LABEL_5;
  }
  v1 = *(unsigned __int8 *)(v2 + 41);
  v0 = *(_QWORD *)(v2 + 64);
  v4 = qword_25424FEB8;
  swift_bridgeObjectRetain();
  if (v4 != -1)
LABEL_5:
    swift_once();
  v5 = v1 ^ 1u | (v3 << 32);
  v6 = *(_QWORD *)(v2 + 56);
  *(_QWORD *)(v2 + 16) = v6;
  *(_QWORD *)(v2 + 24) = v0;
  *(_QWORD *)(v2 + 32) = v5;
  *(_BYTE *)(v2 + 40) = 1;
  *(_QWORD *)(v2 + 48) = v2 + 16;
  sub_233B8019C(v6, v0, v5, 1u);
  v9 = (uint64_t (*)(void))((char *)&dword_256123D78 + dword_256123D78);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 80) = v7;
  *v7 = v2;
  v7[1] = sub_233B9C8DC;
  return v9();
}

uint64_t sub_233B9C8DC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    sub_233B801BC(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_BYTE *)(v2 + 40));
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_233B9C95C()
{
  uint64_t v0;

  sub_233B801BC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_233B9C9A4@<D0>(_OWORD *a1@<X8>)
{
  __int128 v2;
  double result;
  __int128 v4;
  _OWORD v5[2];
  __int128 v6;
  __int128 v7;

  AppLibrary.App.installation.getter((uint64_t *)v5);
  v2 = v5[1];
  *a1 = v5[0];
  a1[1] = v2;
  result = *(double *)&v6;
  v4 = v7;
  a1[2] = v6;
  a1[3] = v4;
  return result;
}

uint64_t sub_233B9C9E4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v9[8];

  v1 = a1[1];
  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[4];
  v5 = a1[5];
  v6 = a1[6];
  v7 = (void *)a1[7];
  v9[0] = *a1;
  v9[1] = v1;
  v9[2] = v2;
  v9[3] = v3;
  v9[4] = v4;
  v9[5] = v5;
  v9[6] = v6;
  v9[7] = (uint64_t)v7;
  sub_233B9CD84(v9[0], v1, v2, v3, v4, v5, v6, v7);
  return sub_233BC3874((uint64_t)v9);
}

uint64_t sub_233B9CA3C@<X0>(uint64_t a1@<X8>)
{
  return AppLibrary.App.installationError.getter(a1);
}

uint64_t sub_233B9CA5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124AA0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_233B9CD3C(a1, (uint64_t)v5);
  return sub_233BC39D0((uint64_t)v5);
}

uint64_t sub_233B9CAE0()
{
  uint64_t v0;

  return sub_233BC7EC8(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

unint64_t sub_233B9CAF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256124AA8;
  if (!qword_256124AA8)
  {
    v1 = type metadata accessor for AppLibrary.App();
    result = MEMORY[0x23493E300](&protocol conformance descriptor for AppLibrary.App, v1);
    atomic_store(result, (unint64_t *)&qword_256124AA8);
  }
  return result;
}

uint64_t sub_233B9CB40@<X0>(uint64_t a1@<X8>)
{
  return AppLibrary.App.installationError.getter(a1);
}

uint64_t sub_233B9CB64()
{
  uint64_t v0;

  return sub_233BC80F8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_233B9CB7C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124AA0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeWithCopy for RepairRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RepairRequest(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for RepairRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for RepairRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RepairRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RepairRequest()
{
  return &type metadata for RepairRequest;
}

uint64_t sub_233B9CD3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124AA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_233B9CD84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  id v9;
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRetain();
    v9 = a8;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t sub_233B9CDE8()
{
  return sub_233B9CAE0();
}

uint64_t sub_233B9CDFC()
{
  return sub_233B9CB64();
}

__n128 FetchPrivateDataRequest.init(request:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v2;
  __int128 v3;
  __n128 result;

  v2 = *(_BYTE *)(a1 + 48);
  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v3;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(a2 + 32) = result;
  *(_BYTE *)(a2 + 48) = v2;
  return result;
}

uint64_t FetchPrivateDataRequest.run()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  *(_QWORD *)(v2 + 80) = a1;
  v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v2 + 88) = *(_OWORD *)v1;
  *(_OWORD *)(v2 + 104) = v3;
  *(_OWORD *)(v2 + 120) = *(_OWORD *)(v1 + 32);
  *(_BYTE *)(v2 + 65) = *(_BYTE *)(v1 + 48);
  return swift_task_switch();
}

uint64_t sub_233B9CE60()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v10;

  if (qword_25424FEB8 != -1)
    swift_once();
  v1 = *(_BYTE *)(v0 + 65);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 112);
  v6 = *(_QWORD *)(v0 + 88);
  v7 = *(_QWORD *)(v0 + 96);
  *(_QWORD *)(v0 + 16) = v6;
  *(_QWORD *)(v0 + 24) = v7;
  *(_QWORD *)(v0 + 32) = v4;
  *(_QWORD *)(v0 + 40) = v5;
  *(_QWORD *)(v0 + 48) = v2;
  *(_QWORD *)(v0 + 56) = v3;
  *(_BYTE *)(v0 + 64) = v1;
  *(_QWORD *)(v0 + 72) = v0 + 16;
  sub_233B743E8(v6, v7, v4, v5, v2, v3, v1);
  v10 = (char *)&dword_256123B78 + dword_256123B78;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v8;
  *v8 = v0;
  v8[1] = sub_233B9CF38;
  return ((uint64_t (*)(_QWORD, uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v10)(*(_QWORD *)(v0 + 80), v0 + 72, sub_233B9EFE0, 0);
}

uint64_t sub_233B9CF38()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 144) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  sub_233B7443C(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_BYTE *)(v2 + 64));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_233B9CFB8()
{
  uint64_t v0;

  sub_233B7443C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t FetchPrivateDataRequest.runSynchronously()@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t *v18;

  v3 = *(_QWORD *)v1;
  v4 = *(_QWORD *)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = *(_QWORD *)(v1 + 32);
  v8 = *(_QWORD *)(v1 + 40);
  v9 = *(_BYTE *)(v1 + 48);
  if (qword_25424FEB8 != -1)
    swift_once();
  v11 = v3;
  v12 = v4;
  v13 = v5;
  v14 = v6;
  v15 = v7;
  v16 = v8;
  v17 = v9;
  v18 = &v11;
  sub_233B743E8(v3, v4, v5, v6, v7, v8, v9);
  sub_233B727E4(&v18, (void (*)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))sub_233B9EFF4, 0, a1);
  return sub_233B7443C(v11, v12, v13, v14, v15, v16, v17);
}

uint64_t SetPrivateDataRequest.run()()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;

  v2 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 80) = *(_OWORD *)v0;
  *(_OWORD *)(v1 + 96) = v2;
  *(_OWORD *)(v1 + 112) = *(_OWORD *)(v0 + 32);
  *(_BYTE *)(v1 + 65) = *(_BYTE *)(v0 + 48);
  return swift_task_switch();
}

uint64_t sub_233B9D11C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  if (qword_25424FEB8 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 112);
  v1 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  v7 = *(_BYTE *)(v0 + 65);
  sub_233B741D0(v6, v5, v4, v3, v2, v1, v7);
  sub_233B74148();
  sub_233B7418C();
  *(_QWORD *)(v0 + 16) = v6;
  *(_QWORD *)(v0 + 24) = v5;
  *(_QWORD *)(v0 + 32) = v4;
  *(_QWORD *)(v0 + 40) = v3;
  *(_QWORD *)(v0 + 48) = v2;
  *(_QWORD *)(v0 + 56) = v1;
  *(_BYTE *)(v0 + 64) = v7;
  *(_QWORD *)(v0 + 72) = v0 + 16;
  sub_233B741D0(v6, v5, v4, v3, v2, v1, v7);
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_256123E90 + dword_256123E90);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v8;
  *v8 = v0;
  v8[1] = sub_233B9D24C;
  return v10(v0 + 72, (uint64_t)sub_233BA3030, 0);
}

uint64_t sub_233B9D24C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_233B74238(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_BYTE *)(v2 + 64));
  return swift_task_switch();
}

uint64_t sub_233B9D2C4()
{
  uint64_t v0;

  sub_233B74238(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_BYTE *)(v0 + 65));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233B9D304()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  v7 = *(_BYTE *)(v0 + 65);
  sub_233B74238(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  sub_233B74238(v6, v5, v4, v3, v1, v2, v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SetPrivateDataRequest.runSynchronously()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t *v15;

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = *(_BYTE *)(v0 + 48);
  if (qword_25424FEB8 != -1)
    swift_once();
  sub_233B74148();
  sub_233B7418C();
  v8 = v1;
  v9 = v2;
  v10 = v3;
  v11 = v4;
  v12 = v5;
  v13 = v6;
  v14 = v7;
  v15 = &v8;
  sub_233B741D0(v1, v2, v3, v4, v5, v6, v7);
  sub_233B741D0(v1, v2, v3, v4, v5, v6, v7);
  sub_233B72C78(&v15, (void (*)(uint64_t *, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t))sub_233BA3044, 0);
  sub_233B74238(v8, v9, v10, v11, v12, v13, v14);
  sub_233B74238(v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_233B9D4C4(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_233B9D504
                                                                     + 4 * asc_233BDD2C0[a1]))(0xD000000000000015, 0x8000000233BE5860);
}

uint64_t sub_233B9D504()
{
  uint64_t v0;

  return v0 + 1;
}

uint64_t sub_233B9D5A8()
{
  sub_233BA5830();
  return sub_233BD8D8C();
}

uint64_t sub_233B9D5D0()
{
  sub_233BA5830();
  return sub_233BD8D98();
}

uint64_t sub_233B9D5FC()
{
  sub_233BA57EC();
  return sub_233BD8D8C();
}

uint64_t sub_233B9D624()
{
  sub_233BA57EC();
  return sub_233BD8D98();
}

uint64_t sub_233B9D64C()
{
  return 0x65706F6C65766564;
}

uint64_t sub_233B9D66C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x65706F6C65766564 && a2 == 0xEB00000000444972)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_233BD8C6C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_233B9D718()
{
  sub_233BA57A8();
  return sub_233BD8D8C();
}

uint64_t sub_233B9D740()
{
  sub_233BA57A8();
  return sub_233BD8D98();
}

uint64_t sub_233B9D768()
{
  unsigned __int8 *v0;

  return sub_233B9D4C4(*v0);
}

uint64_t sub_233B9D770@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233BAA8AC(a1, a2);
  *a3 = result;
  return result;
}

void sub_233B9D794(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_233B9D7A0()
{
  sub_233BA5588();
  return sub_233BD8D8C();
}

uint64_t sub_233B9D7C8()
{
  sub_233BA5588();
  return sub_233BD8D98();
}

uint64_t sub_233B9D7F0()
{
  sub_233BA5764();
  return sub_233BD8D8C();
}

uint64_t sub_233B9D818()
{
  sub_233BA5764();
  return sub_233BD8D98();
}

uint64_t sub_233B9D840()
{
  sub_233BA55CC();
  return sub_233BD8D8C();
}

uint64_t sub_233B9D868()
{
  sub_233BA55CC();
  return sub_233BD8D98();
}

uint64_t sub_233B9D890()
{
  sub_233BA56DC();
  return sub_233BD8D8C();
}

uint64_t sub_233B9D8B8()
{
  sub_233BA56DC();
  return sub_233BD8D98();
}

uint64_t sub_233B9D8E0()
{
  sub_233BA5610();
  return sub_233BD8D8C();
}

uint64_t sub_233B9D908()
{
  sub_233BA5610();
  return sub_233BD8D98();
}

uint64_t sub_233B9D930()
{
  sub_233BA5654();
  return sub_233BD8D8C();
}

uint64_t sub_233B9D958()
{
  sub_233BA5654();
  return sub_233BD8D98();
}

uint64_t sub_233B9D980()
{
  sub_233BA5698();
  return sub_233BD8D8C();
}

uint64_t sub_233B9D9A8()
{
  sub_233BA5698();
  return sub_233BD8D98();
}

void FetchPrivateDataRequest.Request.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  _QWORD v28[3];
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FF68);
  v51 = *(_QWORD *)(v3 - 8);
  v52 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v50 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FFA0);
  v45 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47, v6);
  v44 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FF98);
  v31 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32, v8);
  v30 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FF70);
  v42 = *(_QWORD *)(v10 - 8);
  v43 = v10;
  MEMORY[0x24BDAC7A8](v10, v11);
  v41 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FF80);
  v48 = *(_QWORD *)(v13 - 8);
  v49 = v13;
  MEMORY[0x24BDAC7A8](v13, v14);
  v46 = (char *)v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FF90);
  v28[2] = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29, v16);
  v28[1] = (char *)v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FF60);
  v39 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40, v18);
  v38 = (char *)v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FF78);
  v36 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37, v20);
  v35 = (char *)v28 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FF88);
  v33 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34, v22);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FF58);
  v55 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57, v23);
  v56 = *v1;
  v24 = v1[1];
  v53 = v1[4];
  v54 = v24;
  v25 = v1[5];
  v26 = *((unsigned __int8 *)v1 + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BA5588();
  sub_233BD8D80();
  v58 = v26;
  if (v26)
    v27 = 4;
  else
    v27 = 0;
  __asm { BR              X10 }
}

uint64_t sub_233B9DD50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v1 - 120) = 1;
  sub_233BA57EC();
  v2 = *(_QWORD *)(v1 - 312);
  v3 = *(_QWORD *)(v1 - 128);
  sub_233BD8BDC();
  v4 = *(_QWORD *)(v1 - 296);
  sub_233BD8C18();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 304) + 8))(v2, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 152) + 8))(v0, v3);
}

void sub_233B9E0B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_QWORD *)(v5 - 168);
  v7 = v4 | *(_QWORD *)(v5 - 160);
  v8 = *(_QWORD *)(v5 - 136);
  if (v7 | v8 | v0 | v6 || v2 != 0x2000000000000000)
  {
    if (v2 == 0x2000000000000000 && v8 == 1 && !(v7 | v0 | v6))
    {
      *(_BYTE *)(v5 - 120) = 3;
      sub_233BA5764();
      v10 = *(_QWORD *)(v5 - 376);
      v9 = *(_QWORD *)(v5 - 128);
      sub_233BD8BDC();
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 368) + 8))(v10, *(_QWORD *)(v5 - 360));
    }
    else
    {
      *(_BYTE *)(v5 - 120) = 6;
      sub_233BA5654();
      v11 = *(_QWORD *)(v5 - 352);
      v9 = *(_QWORD *)(v5 - 128);
      sub_233BD8BDC();
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 344) + 8))(v11, *(_QWORD *)(v5 - 336));
    }
  }
  else
  {
    *(_BYTE *)(v5 - 120) = 0;
    sub_233BA5830();
    v9 = *(_QWORD *)(v5 - 128);
    sub_233BD8BDC();
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 328) + 8))(v1, *(_QWORD *)(v5 - 320));
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 152) + 8))(v3, v9);
  JUMPOUT(0x233B9E094);
}

uint64_t FetchPrivateDataRequest.Request.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD v38[8];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  __int128 v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;

  v55 = a2;
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FD08);
  v51 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50, v3);
  *(_QWORD *)&v61 = (char *)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FD40);
  v48 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49, v5);
  v60 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FD38);
  v44 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59, v7);
  v53 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FD10);
  v45 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46, v9);
  v54 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FD20);
  v47 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43, v11);
  v58 = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FD30);
  v40 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42, v13);
  v52 = (char *)v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FD00);
  v41 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39, v15);
  v57 = (char *)v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FD18);
  v38[7] = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56, v17);
  v19 = (char *)v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FD28);
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20, v22);
  v24 = (char *)v38 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FCF8);
  v25 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62, v26);
  v28 = (char *)v38 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = a1[3];
  v63 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v29);
  sub_233BA5588();
  v30 = v64;
  sub_233BD8D68();
  if (!v30)
  {
    v38[3] = v24;
    v38[1] = v21;
    v38[2] = v20;
    v38[4] = v19;
    v38[6] = 0;
    v64 = v25;
    v31 = v28;
    v32 = sub_233BD8BC4();
    if (*(_QWORD *)(v32 + 16) == 1)
    {
      v38[5] = v28;
      __asm { BR              X10 }
    }
    v33 = sub_233BD8ABC();
    swift_allocError();
    v35 = v34;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256123F90);
    *v35 = &type metadata for FetchPrivateDataRequest.Request;
    v36 = v62;
    sub_233BD8B4C();
    sub_233BD8AB0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v35, *MEMORY[0x24BEE26D0], v33);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v31, v36);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
}

void sub_233B9EB78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v1 - 120) = 8;
  sub_233BA55CC();
  v2 = *(_QWORD *)(v1 - 160);
  v3 = *(_QWORD *)(v1 - 368);
  sub_233BD8B40();
  if (!v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256123B98);
    sub_233BA5C70(&qword_256123BB8, &qword_256123B98, (uint64_t (*)(void))sub_233B7EF6C, MEMORY[0x24BEE12D0]);
    v4 = *(_QWORD *)(v1 - 264);
    sub_233BD8BA0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 256) + 8))(v0, v4);
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v1 - 144) + 8))(*(_QWORD *)(v1 - 376), v2);
    JUMPOUT(0x233B9EF2CLL);
  }
  JUMPOUT(0x233B9E78CLL);
}

uint64_t sub_233B9EF94@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FetchPrivateDataRequest.Request.init(from:)(a1, a2);
}

void sub_233B9EFA8(_QWORD *a1)
{
  FetchPrivateDataRequest.Request.encode(to:)(a1);
}

uint64_t FetchPrivateDataRequest.request.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_BYTE *)(v1 + 48);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = v8;
  return sub_233B743E8(v2, v3, v4, v5, v6, v7, v8);
}

void sub_233B9EFE0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_233B90C88(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_23, (SEL *)&selRef_fetchPrivateDataRequest_reply_);
}

void sub_233B9EFF4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_233B90C88(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_20_0, (SEL *)&selRef_fetchPrivateDataRequest_reply_);
}

uint64_t sub_233B9F008()
{
  return 0x74736575716572;
}

uint64_t sub_233B9F024()
{
  sub_233BA58B8();
  return sub_233BD8D8C();
}

uint64_t sub_233B9F04C()
{
  sub_233BA58B8();
  return sub_233BD8D98();
}

uint64_t FetchPrivateDataRequest.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FFA8);
  v14 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v12 = v1[1];
  v13 = v7;
  v9 = *((_QWORD *)v1 + 4);
  v8 = *((_QWORD *)v1 + 5);
  v10 = *((_BYTE *)v1 + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BA58B8();
  sub_233BD8D80();
  v15 = v13;
  v16 = v12;
  v17 = v9;
  v18 = v8;
  v19 = v10;
  sub_233BA58FC();
  sub_233BD8C30();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v6, v3);
}

uint64_t FetchPrivateDataRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  __int128 v11;
  __int128 v12;
  _OWORD v14[3];
  char v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FD48);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BA58B8();
  sub_233BD8D68();
  if (!v2)
  {
    sub_233BA5940();
    sub_233BD8BA0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v10 = v15;
    v11 = v14[1];
    v12 = v14[2];
    *(_OWORD *)a2 = v14[0];
    *(_OWORD *)(a2 + 16) = v11;
    *(_OWORD *)(a2 + 32) = v12;
    *(_BYTE *)(a2 + 48) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_233B9F2D0(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_233B9F310 + 4 * byte_233BDD2E2[a1]))(0xD000000000000015, 0x8000000233BE5860);
}

uint64_t sub_233B9F310()
{
  uint64_t v0;

  return v0 + 1;
}

uint64_t sub_233B9F388()
{
  return 0x6554686372616573;
}

uint64_t sub_233B9F3C8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FetchPrivateDataRequest.init(from:)(a1, a2);
}

uint64_t sub_233B9F3DC(_QWORD *a1)
{
  return FetchPrivateDataRequest.encode(to:)(a1);
}

uint64_t sub_233B9F3F0()
{
  sub_233BA5BE8();
  return sub_233BD8D8C();
}

uint64_t sub_233B9F418()
{
  sub_233BA5BE8();
  return sub_233BD8D98();
}

uint64_t sub_233B9F440()
{
  sub_233BA5BA4();
  return sub_233BD8D8C();
}

uint64_t sub_233B9F468()
{
  sub_233BA5BA4();
  return sub_233BD8D98();
}

uint64_t sub_233B9F490()
{
  sub_233BA5B60();
  return sub_233BD8D8C();
}

uint64_t sub_233B9F4B8()
{
  sub_233BA5B60();
  return sub_233BD8D98();
}

uint64_t sub_233B9F4E0()
{
  unsigned __int8 *v0;

  return sub_233B9F2D0(*v0);
}

uint64_t sub_233B9F4E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233BAAC2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233B9F50C()
{
  sub_233BA5984();
  return sub_233BD8D8C();
}

uint64_t sub_233B9F534()
{
  sub_233BA5984();
  return sub_233BD8D98();
}

uint64_t sub_233B9F55C()
{
  sub_233BA5B1C();
  return sub_233BD8D8C();
}

uint64_t sub_233B9F584()
{
  sub_233BA5B1C();
  return sub_233BD8D98();
}

uint64_t sub_233B9F5AC()
{
  sub_233BA59C8();
  return sub_233BD8D8C();
}

uint64_t sub_233B9F5D4()
{
  sub_233BA59C8();
  return sub_233BD8D98();
}

uint64_t sub_233B9F5FC()
{
  sub_233BA5AD8();
  return sub_233BD8D8C();
}

uint64_t sub_233B9F624()
{
  sub_233BA5AD8();
  return sub_233BD8D98();
}

uint64_t sub_233B9F64C()
{
  sub_233BA5A0C();
  return sub_233BD8D8C();
}

uint64_t sub_233B9F674()
{
  sub_233BA5A0C();
  return sub_233BD8D98();
}

uint64_t sub_233B9F69C()
{
  sub_233BA5A50();
  return sub_233BD8D8C();
}

uint64_t sub_233B9F6C4()
{
  sub_233BA5A50();
  return sub_233BD8D98();
}

uint64_t sub_233B9F6EC()
{
  sub_233BA5A94();
  return sub_233BD8D8C();
}

uint64_t sub_233B9F714()
{
  sub_233BA5A94();
  return sub_233BD8D98();
}

void FetchDataResponse.Response.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[4];
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FD68);
  v45 = *(_QWORD *)(v3 - 8);
  v46 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v44 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FD60);
  v42 = *(_QWORD *)(v6 - 8);
  v43 = v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  v41 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FD98);
  v39 = *(_QWORD *)(v9 - 8);
  v40 = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v38 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FD70);
  v35 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37, v12);
  v34 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FD80);
  v33 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36, v14);
  v32 = (char *)v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FD90);
  v30 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31, v16);
  v29 = (char *)v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FD58);
  v27[3] = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28, v18);
  v27[2] = (char *)v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FD78);
  v27[1] = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20, v21);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FD88);
  v27[0] = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22, v23);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FD50);
  v49 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50, v24);
  v25 = *v1;
  v47 = v1[1];
  v48 = v25;
  v26 = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BA5984();
  sub_233BD8D80();
  __asm { BR              X9 }
}

uint64_t sub_233B9FA78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 - 104) = 0;
  sub_233BA5BE8();
  v4 = *(_QWORD *)(v3 - 72);
  sub_233BD8BDC();
  *(_QWORD *)(v3 - 104) = *(_QWORD *)(v3 - 128);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256124B48);
  sub_233BA5C70(&qword_256124B50, &qword_256124B48, (uint64_t (*)(void))sub_233BA5C2C, MEMORY[0x24BEE12A0]);
  sub_233BD8C30();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 320) + 8))(v0, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 120) + 8))(v1, v4);
}

uint64_t FetchDataResponse.Response.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD v37[6];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;

  v63 = a2;
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FF18);
  v46 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54, v3);
  v62 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FF10);
  v45 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53, v5);
  v61 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FF48);
  v44 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50, v7);
  v60 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FF20);
  v43 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52, v9);
  v59 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FF30);
  v42 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51, v11);
  v57 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FF40);
  v41 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49, v13);
  v58 = (char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FF08);
  v40 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48, v15);
  v56 = (char *)v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FF28);
  v39 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47, v17);
  v55 = (char *)v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FF38);
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19, v21);
  v23 = (char *)v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FF00);
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24, v26);
  v28 = (char *)v37 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = a1[3];
  v64 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v29);
  sub_233BA5984();
  v30 = v65;
  sub_233BD8D68();
  if (!v30)
  {
    v37[4] = v23;
    v37[2] = v20;
    v37[3] = v19;
    v37[5] = 0;
    v38 = v25;
    v65 = v24;
    v31 = sub_233BD8BC4();
    if (*(_QWORD *)(v31 + 16) == 1)
    {
      v37[1] = v28;
      v37[0] = v31;
      __asm { BR              X9 }
    }
    v32 = sub_233BD8ABC();
    swift_allocError();
    v34 = v33;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256123F90);
    *v34 = &type metadata for FetchDataResponse.Response;
    v35 = v65;
    sub_233BD8B4C();
    sub_233BD8AB0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v34, *MEMORY[0x24BEE26D0], v32);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v28, v35);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
}

void sub_233BA04C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v0 - 104) = 1;
  sub_233BA5BA4();
  v1 = *(_QWORD *)(v0 - 184);
  v2 = *(_QWORD *)(v0 - 72);
  v3 = *(_QWORD *)(v0 - 328);
  sub_233BD8B40();
  if (!v3)
  {
    v4 = *(_QWORD *)(v0 - 248);
    sub_233BD8B94();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 312) + 8))(v1, v4);
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v0 - 320) + 8))(*(_QWORD *)(v0 - 360), v2);
    JUMPOUT(0x233BA0CBCLL);
  }
  swift_bridgeObjectRelease();
  JUMPOUT(0x233BA0498);
}

void sub_233BA08BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v2 - 144) = v0;
  *(_BYTE *)(v2 - 104) = 7;
  sub_233BA5A0C();
  v3 = v1;
  v4 = *(_QWORD *)(v2 - 72);
  v5 = *(_QWORD *)(v2 - 328);
  sub_233BD8B40();
  if (!v5)
  {
    v6 = *(_QWORD *)(v2 - 200);
    sub_233BD8B58();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 264) + 8))(v3, v6);
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v2 - 320) + 8))(*(_QWORD *)(v2 - 360), v4);
    JUMPOUT(0x233BA0CB8);
  }
  swift_bridgeObjectRelease();
  JUMPOUT(0x233BA0B4CLL);
}

void sub_233BA0944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 - 144) = v1;
  *(_BYTE *)(v2 - 104) = 8;
  sub_233BA59C8();
  v3 = *(_QWORD *)(v2 - 72);
  v4 = *(_QWORD *)(v2 - 328);
  sub_233BD8B40();
  if (v4)
    JUMPOUT(0x233BA0990);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256123B50);
  sub_233B74A34(&qword_256123B68, MEMORY[0x24BEE0D38], MEMORY[0x24BEE04E0]);
  v5 = *(_QWORD *)(v2 - 192);
  sub_233BD8BA0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 256) + 8))(v0, v5);
  swift_bridgeObjectRelease();
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v2 - 320) + 8))(*(_QWORD *)(v2 - 360), v3);
  JUMPOUT(0x233BA0CB4);
}

uint64_t sub_233BA0CC8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FetchDataResponse.Response.init(from:)(a1, a2);
}

void sub_233BA0CDC(_QWORD *a1)
{
  FetchDataResponse.Response.encode(to:)(a1);
}

uint64_t FetchDataResponse.response.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 16);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_233B90D44(v2, v3, v4);
}

__n128 FetchDataResponse.init(response:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  unsigned __int8 v2;
  __n128 result;

  v2 = a1[1].n128_u8[0];
  result = *a1;
  *a2 = *a1;
  a2[1].n128_u8[0] = v2;
  return result;
}

uint64_t sub_233BA0D18()
{
  sub_233BA5D18();
  return sub_233BD8D8C();
}

uint64_t sub_233BA0D40()
{
  sub_233BA5D18();
  return sub_233BD8D98();
}

uint64_t FetchDataResponse.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD v11[3];
  char v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FDA0);
  v11[0] = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v7 = v1[1];
  v9 = *((_BYTE *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BA5D18();
  sub_233BD8D80();
  v11[1] = v8;
  v11[2] = v7;
  v12 = v9;
  sub_233BA5D5C();
  sub_233BD8C30();
  return (*(uint64_t (**)(char *, uint64_t))(v11[0] + 8))(v6, v3);
}

uint64_t FetchDataResponse.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  __int128 v12;
  char v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25424FF50);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BA5D18();
  sub_233BD8D68();
  if (!v2)
  {
    sub_233BA5DA0();
    sub_233BD8BA0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v10 = v13;
    *(_OWORD *)a2 = v12;
    *(_BYTE *)(a2 + 16) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_233BA0FA0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FetchDataResponse.init(from:)(a1, a2);
}

uint64_t sub_233BA0FB4(_QWORD *a1)
{
  return FetchDataResponse.encode(to:)(a1);
}

uint64_t static FetchPublicDataRequest.Request.== infix(_:_:)()
{
  return 1;
}

uint64_t FetchPublicDataRequest.Request.hash(into:)()
{
  return sub_233BD8D08();
}

uint64_t sub_233BA0FF4()
{
  return 0x6554686372616573;
}

uint64_t sub_233BA1018@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6554686372616573 && a2 == 0xEF79726F74697272)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_233BD8C6C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_233BA10D0()
{
  sub_233BA5DE4();
  return sub_233BD8D8C();
}

uint64_t sub_233BA10F8()
{
  sub_233BA5DE4();
  return sub_233BD8D98();
}

uint64_t sub_233BA1120()
{
  sub_233BA5E28();
  return sub_233BD8D8C();
}

uint64_t sub_233BA1148()
{
  sub_233BA5E28();
  return sub_233BD8D98();
}

uint64_t FetchPublicDataRequest.Request.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124B70);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124B78);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BA5DE4();
  sub_233BD8D80();
  sub_233BA5E28();
  sub_233BD8BDC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t FetchPublicDataRequest.Request.hashValue.getter()
{
  sub_233BD8CFC();
  sub_233BD8D08();
  return sub_233BD8D38();
}

uint64_t FetchPublicDataRequest.Request.init(from:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124B90);
  v2 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23, v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124B98);
  v6 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24, v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BA5DE4();
  v10 = v25;
  sub_233BD8D68();
  if (v10)
    goto LABEL_7;
  v22 = a1;
  v25 = v6;
  v12 = v23;
  v11 = v24;
  if (*(_QWORD *)(sub_233BD8BC4() + 16) != 1)
  {
    v16 = sub_233BD8ABC();
    swift_allocError();
    v18 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256123F90);
    *v18 = &type metadata for FetchPublicDataRequest.Request;
    sub_233BD8B4C();
    sub_233BD8AB0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v18, *MEMORY[0x24BEE26D0], v16);
    swift_willThrow();
    v19 = v25;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v11);
    a1 = v22;
LABEL_7:
    v15 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v15);
  }
  sub_233BA5E28();
  v13 = v5;
  sub_233BD8B40();
  v14 = v25;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v13, v12);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v11);
  v15 = (uint64_t)v22;
  return __swift_destroy_boxed_opaque_existential_1(v15);
}

uint64_t sub_233BA1548(_QWORD *a1)
{
  return FetchPublicDataRequest.Request.init(from:)(a1);
}

uint64_t sub_233BA155C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124B70);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124B78);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BA5DE4();
  sub_233BD8D80();
  sub_233BA5E28();
  sub_233BD8BDC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t FetchPublicDataRequest.run()(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return swift_task_switch();
}

uint64_t sub_233BA16B8()
{
  uint64_t v0;
  _QWORD *v1;
  char *v3;

  if (qword_25424FEB8 != -1)
    swift_once();
  v3 = (char *)&dword_256123D60 + dword_256123D60;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_233BA1760;
  return ((uint64_t (*)(_QWORD, uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v3)(*(_QWORD *)(v0 + 24), v0 + 16, sub_233BA17D8, 0);
}

uint64_t sub_233BA1760()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_233BA17CC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_233BA17D8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_233B90C88(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_11_0, (SEL *)&selRef_fetchPublicDataRequest_reply_);
}

uint64_t sub_233BA17EC()
{
  sub_233BA5E6C();
  return sub_233BD8D8C();
}

uint64_t sub_233BA1814()
{
  sub_233BA5E6C();
  return sub_233BD8D98();
}

uint64_t FetchPublicDataRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124BA8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BA5E6C();
  sub_233BD8D80();
  sub_233BA5EB0();
  sub_233BD8C30();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t FetchPublicDataRequest.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124BC0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BA5E6C();
  sub_233BD8D68();
  if (!v1)
  {
    sub_233BA5EF4();
    sub_233BD8BA0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_233BA1A24(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_233BA1A5C + 4 * byte_233BDD310[a1]))(0xD000000000000010, 0x8000000233BE5940);
}

uint64_t sub_233BA1A5C(uint64_t a1)
{
  return a1 + 7;
}

uint64_t sub_233BA1AA0(_QWORD *a1)
{
  return FetchPublicDataRequest.init(from:)(a1);
}

uint64_t sub_233BA1AB4(_QWORD *a1)
{
  return FetchPublicDataRequest.encode(to:)(a1);
}

uint64_t sub_233BA1AC8()
{
  sub_233BA608C();
  return sub_233BD8D8C();
}

uint64_t sub_233BA1AF0()
{
  sub_233BA608C();
  return sub_233BD8D98();
}

uint64_t sub_233BA1B18()
{
  unsigned __int8 *v0;

  return sub_233BA1A24(*v0);
}

uint64_t sub_233BA1B20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233BAAFDC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233BA1B44()
{
  sub_233BA5F38();
  return sub_233BD8D8C();
}

uint64_t sub_233BA1B6C()
{
  sub_233BA5F38();
  return sub_233BD8D98();
}

uint64_t sub_233BA1B94()
{
  sub_233BA6048();
  return sub_233BD8D8C();
}

uint64_t sub_233BA1BBC()
{
  sub_233BA6048();
  return sub_233BD8D98();
}

uint64_t sub_233BA1BE4()
{
  sub_233BA6004();
  return sub_233BD8D8C();
}

uint64_t sub_233BA1C0C()
{
  sub_233BA6004();
  return sub_233BD8D98();
}

uint64_t sub_233BA1C34()
{
  sub_233BA5F7C();
  return sub_233BD8D8C();
}

uint64_t sub_233BA1C5C()
{
  sub_233BA5F7C();
  return sub_233BD8D98();
}

uint64_t sub_233BA1C84()
{
  _BYTE *v0;

  if (*v0)
    return 12639;
  else
    return 12383;
}

uint64_t sub_233BA1CA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233BAB1BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233BA1CC4()
{
  sub_233BA5FC0();
  return sub_233BD8D8C();
}

uint64_t sub_233BA1CEC()
{
  sub_233BA5FC0();
  return sub_233BD8D98();
}

void SetPrivateDataRequest.Request.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[22];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124BD0);
  v21[13] = *(_QWORD *)(v3 - 8);
  v21[14] = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v21[12] = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124BD8);
  v21[10] = *(_QWORD *)(v6 - 8);
  v21[11] = v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  v21[9] = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124BE0);
  v21[7] = *(_QWORD *)(v9 - 8);
  v21[8] = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v21[6] = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124BE8);
  v21[3] = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124BF0);
  v21[4] = *(_QWORD *)(v14 - 8);
  v21[5] = v14;
  MEMORY[0x24BDAC7A8](v14, v15);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124BF8);
  v21[19] = *(_QWORD *)(v16 - 8);
  v21[20] = v16;
  MEMORY[0x24BDAC7A8](v16, v17);
  v18 = *v1;
  v21[16] = v1[1];
  v21[17] = v18;
  v21[15] = v1[2];
  v19 = v1[3];
  v21[1] = v1[4];
  v21[2] = v19;
  v21[0] = v1[5];
  v20 = *((unsigned __int8 *)v1 + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BA5F38();
  sub_233BD8D80();
  __asm { BR              X9 }
}

uint64_t sub_233BA1F34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v2 - 72) = 0;
  sub_233BA608C();
  v3 = *(_QWORD *)(v2 - 96);
  sub_233BD8BDC();
  *(_BYTE *)(v2 - 72) = 0;
  v4 = *(_QWORD *)(v2 - 216);
  v5 = *(_QWORD *)(v2 - 112);
  sub_233BD8C18();
  if (!v5)
  {
    *(_BYTE *)(v2 - 72) = 1;
    sub_233BD8C18();
    *(_BYTE *)(v2 - 72) = 2;
    sub_233BD8BE8();
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 224) + 8))(v1, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 104) + 8))(v0, v3);
}

uint64_t SetPrivateDataRequest.Request.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  char *v29;
  _QWORD v31[7];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  char *v47;

  v45 = a2;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124C30);
  v35 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44, v3);
  v43 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124C38);
  v36 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39, v5);
  v42 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124C40);
  v34 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38, v7);
  v41 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124C48);
  v33 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37, v9);
  v40 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124C50);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124C58);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v18);
  v20 = (char *)v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1[3];
  v46 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_233BA5F38();
  v22 = v47;
  sub_233BD8D68();
  if (!v22)
  {
    v31[5] = v11;
    v31[6] = v15;
    v31[4] = v12;
    v32 = v17;
    v47 = v20;
    v23 = sub_233BD8BC4();
    v24 = v16;
    if (*(_QWORD *)(v23 + 16) == 1)
    {
      v31[3] = v23;
      v25 = (char *)&loc_233BA2528 + 4 * byte_233BDD31A[*(unsigned __int8 *)(v23 + 32)];
      v31[2] = *(unsigned __int8 *)(v23 + 32);
      __asm { BR              X9 }
    }
    v26 = sub_233BD8ABC();
    swift_allocError();
    v28 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256123F90);
    *v28 = &type metadata for SetPrivateDataRequest.Request;
    v29 = v47;
    sub_233BD8B4C();
    sub_233BD8AB0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v28, *MEMORY[0x24BEE26D0], v26);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v29, v24);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
}

void sub_233BA2664()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 - 72) = 1;
  sub_233BA6048();
  v4 = *(_QWORD *)(v3 - 152);
  sub_233BD8B40();
  if (v2)
  {
    swift_bridgeObjectRelease();
    JUMPOUT(0x233BA2634);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25424FDD0);
  sub_233B8D1CC(&qword_25424FDC0, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
  v5 = *(_QWORD *)(v3 - 176);
  sub_233BD8BA0();
  *(_QWORD *)(v3 - 264) = 0;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 208) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v3 - 216) + 8))(*(_QWORD *)(v3 - 96), v0);
  *(_QWORD *)v1 = *(_QWORD *)(v3 - 72);
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 40) = 0;
  *(_BYTE *)(v1 + 48) = *(_QWORD *)(v3 - 256);
  __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v3 - 104));
  JUMPOUT(0x233BA2640);
}

void sub_233BA26C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v2 - 72) = 2;
  sub_233BA6004();
  v3 = *(_QWORD *)(v2 - 144);
  sub_233BD8B40();
  if (!v1)
  {
    *(_BYTE *)(v2 - 72) = 0;
    v4 = *(_QWORD *)(v2 - 168);
    v5 = sub_233BD8B88();
    v6 = *(_QWORD *)(v2 - 216);
    *(_QWORD *)(v2 - 152) = v5;
    *(_BYTE *)(v2 - 72) = 1;
    sub_233BD8B94();
    v7 = *(_QWORD *)(v2 - 200);
    *(_QWORD *)(v2 - 264) = 0;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v3, v4);
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD, uint64_t))(v6 + 8))(*(_QWORD *)(v2 - 96), v0);
    JUMPOUT(0x233BA2C04);
  }
  swift_bridgeObjectRelease();
  JUMPOUT(0x233BA2634);
}

uint64_t sub_233BA2C6C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SetPrivateDataRequest.Request.init(from:)(a1, a2);
}

void sub_233BA2C80(_QWORD *a1)
{
  SetPrivateDataRequest.Request.encode(to:)(a1);
}

uint64_t SetPrivateDataRequest.request.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(_BYTE *)(v1 + 48);
  *(_BYTE *)(a1 + 48) = v8;
  return sub_233B741D0(v2, v3, v4, v5, v6, v7, v8);
}

void SetPrivateDataRequest.stringValue.getter()
{
  __asm { BR              X10 }
}

unint64_t sub_233BA2CFC()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_233BD8A8C();
  swift_bridgeObjectRelease();
  sub_233BD8828();
  swift_bridgeObjectRelease();
  sub_233BD8828();
  sub_233BD8828();
  swift_bridgeObjectRelease();
  sub_233BD8828();
  return 0xD000000000000012;
}

void sub_233BA3030(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_233B90C88(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_17_0, (SEL *)&selRef_setPrivateDataRequest_reply_);
}

void sub_233BA3044(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_233B90C88(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_14_0, (SEL *)&selRef_setPrivateDataRequest_reply_);
}

uint64_t sub_233BA3058()
{
  sub_233BA60D0();
  return sub_233BD8D8C();
}

uint64_t sub_233BA3080()
{
  sub_233BA60D0();
  return sub_233BD8D98();
}

uint64_t SetPrivateDataRequest.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124C60);
  v14 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v12 = v1[1];
  v13 = v7;
  v9 = *((_QWORD *)v1 + 4);
  v8 = *((_QWORD *)v1 + 5);
  v10 = *((_BYTE *)v1 + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BA60D0();
  sub_233BD8D80();
  v15 = v13;
  v16 = v12;
  v17 = v9;
  v18 = v8;
  v19 = v10;
  sub_233BA6114();
  sub_233BD8C30();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v6, v3);
}

uint64_t SetPrivateDataRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  __int128 v11;
  __int128 v12;
  _OWORD v14[3];
  char v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124C78);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BA60D0();
  sub_233BD8D68();
  if (!v2)
  {
    sub_233BA6158();
    sub_233BD8BA0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v10 = v15;
    v11 = v14[1];
    v12 = v14[2];
    *(_OWORD *)a2 = v14[0];
    *(_OWORD *)(a2 + 16) = v11;
    *(_OWORD *)(a2 + 32) = v12;
    *(_BYTE *)(a2 + 48) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_233BA3304(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_233BA3344 + 4 * byte_233BDD324[a1]))(0x6554686372616573, 0xEF79726F74697272);
}

unint64_t sub_233BA3344()
{
  return 0xD000000000000014;
}

unint64_t sub_233BA3360()
{
  return 0xD000000000000015;
}

uint64_t sub_233BA33B0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SetPrivateDataRequest.init(from:)(a1, a2);
}

uint64_t sub_233BA33C4(_QWORD *a1)
{
  return SetPrivateDataRequest.encode(to:)(a1);
}

uint64_t sub_233BA33D8()
{
  return 0x44496863746162;
}

uint64_t sub_233BA33F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x44496863746162 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_233BD8C6C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_233BA3484()
{
  sub_233BA629C();
  return sub_233BD8D8C();
}

uint64_t sub_233BA34AC()
{
  sub_233BA629C();
  return sub_233BD8D98();
}

uint64_t sub_233BA34D4()
{
  return 0x496C6C6174736E69;
}

uint64_t sub_233BA34F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x496C6C6174736E69 && a2 == 0xE900000000000044)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_233BD8C6C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_233BA3590()
{
  sub_233BA6324();
  return sub_233BD8D8C();
}

uint64_t sub_233BA35B8()
{
  sub_233BA6324();
  return sub_233BD8D98();
}

uint64_t sub_233BA35E0()
{
  unsigned __int8 *v0;

  return sub_233BA3304(*v0);
}

uint64_t sub_233BA35E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233BAB27C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233BA360C()
{
  sub_233BA61B0();
  return sub_233BD8D8C();
}

uint64_t sub_233BA3634()
{
  sub_233BA61B0();
  return sub_233BD8D98();
}

uint64_t sub_233BA365C()
{
  sub_233BA61F4();
  return sub_233BD8D8C();
}

uint64_t sub_233BA3684()
{
  sub_233BA61F4();
  return sub_233BD8D98();
}

unint64_t sub_233BA36AC()
{
  unsigned __int8 *v0;

  return ((unint64_t)*v0 << 8) + 12383;
}

uint64_t sub_233BA36C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233BAB498(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233BA36E4()
{
  sub_233BA62E0();
  return sub_233BD8D8C();
}

uint64_t sub_233BA370C()
{
  sub_233BA62E0();
  return sub_233BD8D98();
}

uint64_t sub_233BA3734@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_233BD8C6C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_233BA37B0()
{
  sub_233BA6368();
  return sub_233BD8D8C();
}

uint64_t sub_233BA37D8()
{
  sub_233BA6368();
  return sub_233BD8D98();
}

void SetPublicDataRequest.Request.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  _QWORD v33[7];
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;

  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124C88);
  v33[3] = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40, v2);
  v39 = (char *)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124C90);
  v33[1] = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36, v4);
  v35 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124C98);
  v33[2] = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38, v6);
  v37 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124CA0);
  v33[0] = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34, v8);
  v33[6] = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_233BD8558();
  v11 = *(_QWORD *)(v10 - 8);
  v43 = v10;
  v44 = v11;
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v42 = (char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13, v15);
  v33[5] = (char *)v33 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v41 = (char *)v33 - v20;
  MEMORY[0x24BDAC7A8](v19, v21);
  v33[4] = (char *)v33 - v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124CA8);
  MEMORY[0x24BDAC7A8](v23, v24);
  v25 = type metadata accessor for SetPublicDataRequest.Request(0);
  MEMORY[0x24BDAC7A8](v25, v26);
  v28 = (char *)v33 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124CB0);
  v45 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47, v29);
  v31 = (char *)v33 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BA61B0();
  v46 = v31;
  sub_233BD8D80();
  sub_233B806F8(v48, (uint64_t)v28, type metadata accessor for SetPublicDataRequest.Request);
  v32 = (char *)sub_233BA3B14 + 4 * byte_233BDD329[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_233BA3B14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 - 104) = 0;
  sub_233BA6368();
  v5 = *(_QWORD *)(v3 - 128);
  v4 = *(_QWORD *)(v3 - 120);
  sub_233BD8BDC();
  sub_233BD8BE8();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 144) + 8))(v5, v4);
}

uint64_t SetPublicDataRequest.Request.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t *v44;
  _QWORD v46[9];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  _QWORD *v64;
  uint64_t v65;

  v52 = a2;
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124D10);
  v46[8] = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50, v3);
  v63 = (char *)v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124D18);
  v46[7] = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49, v5);
  v62 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124D20);
  v56 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51, v7);
  v55 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124D28);
  v48 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61, v9);
  v54 = (char *)v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124D30);
  v46[6] = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47, v11);
  v53 = (char *)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124D38);
  v58 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60, v13);
  v15 = (char *)v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for SetPublicDataRequest.Request(0);
  v17 = MEMORY[0x24BDAC7A8](v57, v16);
  v59 = (char *)v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v17, v19);
  v22 = (char *)v46 - v21;
  v24 = MEMORY[0x24BDAC7A8](v20, v23);
  v26 = (char *)v46 - v25;
  v28 = MEMORY[0x24BDAC7A8](v24, v27);
  v30 = (char *)v46 - v29;
  v32 = MEMORY[0x24BDAC7A8](v28, v31);
  v34 = (char *)v46 - v33;
  MEMORY[0x24BDAC7A8](v32, v35);
  v37 = (char *)v46 - v36;
  v38 = a1[3];
  v64 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v38);
  sub_233BA61B0();
  v39 = v65;
  sub_233BD8D68();
  if (!v39)
  {
    v46[1] = v34;
    v46[2] = v30;
    v46[3] = v22;
    v65 = 0;
    v46[5] = v26;
    v46[4] = v37;
    v40 = v60;
    v41 = sub_233BD8BC4();
    if (*(_QWORD *)(v41 + 16) == 1)
      __asm { BR              X10 }
    v42 = sub_233BD8ABC();
    swift_allocError();
    v44 = v43;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256123F90);
    *v44 = v57;
    sub_233BD8B4C();
    sub_233BD8AB0();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v42 - 8) + 104))(v44, *MEMORY[0x24BEE26D0], v42);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v15, v40);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
}

uint64_t sub_233BA4D88@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SetPublicDataRequest.Request.init(from:)(a1, a2);
}

void sub_233BA4D9C(_QWORD *a1)
{
  SetPublicDataRequest.Request.encode(to:)(a1);
}

uint64_t SetPublicDataRequest.request.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_233B806F8(v1, a1, type metadata accessor for SetPublicDataRequest.Request);
}

uint64_t SetPublicDataRequest.init(request:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_233B7FD64(a1, a2, type metadata accessor for SetPublicDataRequest.Request);
}

uint64_t SetPublicDataRequest.run()()
{
  uint64_t v0;
  _QWORD *v1;

  v1[3] = v0;
  type metadata accessor for SetPublicDataRequest(0);
  v1[4] = swift_task_alloc();
  v1[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233BA4E5C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  char *v5;

  if (qword_25424FEB8 != -1)
    swift_once();
  v1 = v0[4];
  v2 = v0[5];
  sub_233B806F8(v0[3], v2, type metadata accessor for SetPublicDataRequest);
  sub_233B74300(&qword_256123D50, type metadata accessor for SetPublicDataRequest, (uint64_t)&protocol conformance descriptor for SetPublicDataRequest);
  sub_233B74300(&qword_256123D58, type metadata accessor for SetPublicDataRequest, (uint64_t)&protocol conformance descriptor for SetPublicDataRequest);
  sub_233B806F8(v2, v1, type metadata accessor for SetPublicDataRequest);
  v0[2] = v1;
  v5 = (char *)&dword_256123D48 + dword_256123D48;
  v3 = (_QWORD *)swift_task_alloc();
  v0[6] = v3;
  *v3 = v0;
  v3[1] = sub_233BA4F64;
  return ((uint64_t (*)(_QWORD *, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v5)(v0 + 2, sub_233BA5090, 0);
}

uint64_t sub_233BA4F64()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_233B8073C(*(_QWORD *)(v2 + 32), type metadata accessor for SetPublicDataRequest);
  return swift_task_switch();
}

uint64_t sub_233BA4FD8()
{
  uint64_t v0;

  sub_233B8073C(*(_QWORD *)(v0 + 40), type metadata accessor for SetPublicDataRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233BA5028()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  sub_233B8073C(*(_QWORD *)(v0 + 32), type metadata accessor for SetPublicDataRequest);
  sub_233B8073C(v1, type metadata accessor for SetPublicDataRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_233BA5090(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_233B90C88(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_7, (SEL *)&selRef_setPublicDataRequest_reply_);
}

uint64_t sub_233BA50A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x74736575716572 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_233BD8C6C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_233BA5138()
{
  sub_233BA63C0();
  return sub_233BD8D8C();
}

uint64_t sub_233BA5160()
{
  sub_233BA63C0();
  return sub_233BD8D98();
}

uint64_t SetPublicDataRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124D58);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BA63C0();
  sub_233BD8D80();
  type metadata accessor for SetPublicDataRequest.Request(0);
  sub_233B74300(&qword_256124D68, type metadata accessor for SetPublicDataRequest.Request, (uint64_t)&protocol conformance descriptor for SetPublicDataRequest.Request);
  sub_233BD8C30();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t SetPublicDataRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v16 = a2;
  v4 = type metadata accessor for SetPublicDataRequest.Request(0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v18 = (uint64_t)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124D70);
  v17 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SetPublicDataRequest(0);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BA63C0();
  sub_233BD8D68();
  if (!v2)
  {
    sub_233B74300(&qword_256124D78, type metadata accessor for SetPublicDataRequest.Request, (uint64_t)&protocol conformance descriptor for SetPublicDataRequest.Request);
    sub_233BD8BA0();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v7);
    sub_233B7FD64(v18, (uint64_t)v14, type metadata accessor for SetPublicDataRequest.Request);
    sub_233B7FD64((uint64_t)v14, v16, type metadata accessor for SetPublicDataRequest);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_233BA5464@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SetPublicDataRequest.init(from:)(a1, a2);
}

uint64_t sub_233BA5478(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124D58);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BA63C0();
  sub_233BD8D80();
  type metadata accessor for SetPublicDataRequest.Request(0);
  sub_233B74300(&qword_256124D68, type metadata accessor for SetPublicDataRequest.Request, (uint64_t)&protocol conformance descriptor for SetPublicDataRequest.Request);
  sub_233BD8C30();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

unint64_t sub_233BA5588()
{
  unint64_t result;

  result = qword_254250330;
  if (!qword_254250330)
  {
    result = MEMORY[0x23493E300](&unk_233BE0154, &type metadata for FetchPrivateDataRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254250330);
  }
  return result;
}

unint64_t sub_233BA55CC()
{
  unint64_t result;

  result = qword_256124AC8;
  if (!qword_256124AC8)
  {
    result = MEMORY[0x23493E300](&unk_233BE0104, &type metadata for FetchPrivateDataRequest.Request.LocalizedStringsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124AC8);
  }
  return result;
}

unint64_t sub_233BA5610()
{
  unint64_t result;

  result = qword_256124AD0;
  if (!qword_256124AD0)
  {
    result = MEMORY[0x23493E300](&unk_233BE00B4, &type metadata for FetchPrivateDataRequest.Request.SearchTerritoryForDistributorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124AD0);
  }
  return result;
}

unint64_t sub_233BA5654()
{
  unint64_t result;

  result = qword_25424FDE8;
  if (!qword_25424FDE8)
  {
    result = MEMORY[0x23493E300](&unk_233BE0064, &type metadata for FetchPrivateDataRequest.Request.ShowAppInstallationSettingsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25424FDE8);
  }
  return result;
}

unint64_t sub_233BA5698()
{
  unint64_t result;

  result = qword_256124AD8;
  if (!qword_256124AD8)
  {
    result = MEMORY[0x23493E300](&unk_233BE0014, &type metadata for FetchPrivateDataRequest.Request.ShowInstallSheetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124AD8);
  }
  return result;
}

unint64_t sub_233BA56DC()
{
  unint64_t result;

  result = qword_256124AE0;
  if (!qword_256124AE0)
  {
    result = MEMORY[0x23493E300](&unk_233BDFFC4, &type metadata for FetchPrivateDataRequest.Request.PassbookProvisioningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124AE0);
  }
  return result;
}

unint64_t sub_233BA5720()
{
  unint64_t result;

  result = qword_256124AE8;
  if (!qword_256124AE8)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for CodableAuditToken, &type metadata for CodableAuditToken);
    atomic_store(result, (unint64_t *)&qword_256124AE8);
  }
  return result;
}

unint64_t sub_233BA5764()
{
  unint64_t result;

  result = qword_25424FDC8;
  if (!qword_25424FDC8)
  {
    result = MEMORY[0x23493E300](&unk_233BDFF74, &type metadata for FetchPrivateDataRequest.Request.DistributorPriorityListCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25424FDC8);
  }
  return result;
}

unint64_t sub_233BA57A8()
{
  unint64_t result;

  result = qword_256124AF0;
  if (!qword_256124AF0)
  {
    result = MEMORY[0x23493E300](&unk_233BDFF24, &type metadata for FetchPrivateDataRequest.Request.AssociatedAppsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124AF0);
  }
  return result;
}

unint64_t sub_233BA57EC()
{
  unint64_t result;

  result = qword_256124AF8;
  if (!qword_256124AF8)
  {
    result = MEMORY[0x23493E300](&unk_233BDFED4, &type metadata for FetchPrivateDataRequest.Request.ApprovedDeveloperCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124AF8);
  }
  return result;
}

unint64_t sub_233BA5830()
{
  unint64_t result;

  result = qword_256124B00;
  if (!qword_256124B00)
  {
    result = MEMORY[0x23493E300](&unk_233BDFE84, &type metadata for FetchPrivateDataRequest.Request.AllApprovedDevelopersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124B00);
  }
  return result;
}

unint64_t sub_233BA5874()
{
  unint64_t result;

  result = qword_256124B08;
  if (!qword_256124B08)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for CodableAuditToken, &type metadata for CodableAuditToken);
    atomic_store(result, (unint64_t *)&qword_256124B08);
  }
  return result;
}

unint64_t sub_233BA58B8()
{
  unint64_t result;

  result = qword_2542503D8;
  if (!qword_2542503D8)
  {
    result = MEMORY[0x23493E300](&unk_233BDFE34, &type metadata for FetchPrivateDataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542503D8);
  }
  return result;
}

unint64_t sub_233BA58FC()
{
  unint64_t result;

  result = qword_25424FEC0;
  if (!qword_25424FEC0)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for FetchPrivateDataRequest.Request, &type metadata for FetchPrivateDataRequest.Request);
    atomic_store(result, (unint64_t *)&qword_25424FEC0);
  }
  return result;
}

unint64_t sub_233BA5940()
{
  unint64_t result;

  result = qword_25424FCB0;
  if (!qword_25424FCB0)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for FetchPrivateDataRequest.Request, &type metadata for FetchPrivateDataRequest.Request);
    atomic_store(result, (unint64_t *)&qword_25424FCB0);
  }
  return result;
}

unint64_t sub_233BA5984()
{
  unint64_t result;

  result = qword_254250270;
  if (!qword_254250270)
  {
    result = MEMORY[0x23493E300](&unk_233BDFDE4, &type metadata for FetchDataResponse.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254250270);
  }
  return result;
}

unint64_t sub_233BA59C8()
{
  unint64_t result;

  result = qword_256124B10;
  if (!qword_256124B10)
  {
    result = MEMORY[0x23493E300](&unk_233BDFD94, &type metadata for FetchDataResponse.Response.LocalizedStringsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124B10);
  }
  return result;
}

unint64_t sub_233BA5A0C()
{
  unint64_t result;

  result = qword_256124B18;
  if (!qword_256124B18)
  {
    result = MEMORY[0x23493E300](&unk_233BDFD44, &type metadata for FetchDataResponse.Response.SearchTerritoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124B18);
  }
  return result;
}

unint64_t sub_233BA5A50()
{
  unint64_t result;

  result = qword_25424FDE0;
  if (!qword_25424FDE0)
  {
    result = MEMORY[0x23493E300](&unk_233BDFCF4, &type metadata for FetchDataResponse.Response.ShowAppInstallationSettingsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25424FDE0);
  }
  return result;
}

unint64_t sub_233BA5A94()
{
  unint64_t result;

  result = qword_256124B20;
  if (!qword_256124B20)
  {
    result = MEMORY[0x23493E300](&unk_233BDFCA4, &type metadata for FetchDataResponse.Response.ShowInstallSheetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124B20);
  }
  return result;
}

unint64_t sub_233BA5AD8()
{
  unint64_t result;

  result = qword_256124B28;
  if (!qword_256124B28)
  {
    result = MEMORY[0x23493E300](&unk_233BDFC54, &type metadata for FetchDataResponse.Response.PassbookProvisioningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124B28);
  }
  return result;
}

unint64_t sub_233BA5B1C()
{
  unint64_t result;

  result = qword_25424FDD8;
  if (!qword_25424FDD8)
  {
    result = MEMORY[0x23493E300](&unk_233BDFC04, &type metadata for FetchDataResponse.Response.DistributorPriorityListCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25424FDD8);
  }
  return result;
}

unint64_t sub_233BA5B60()
{
  unint64_t result;

  result = qword_256124B30;
  if (!qword_256124B30)
  {
    result = MEMORY[0x23493E300](&unk_233BDFBB4, &type metadata for FetchDataResponse.Response.AssociatedAppsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124B30);
  }
  return result;
}

unint64_t sub_233BA5BA4()
{
  unint64_t result;

  result = qword_256124B38;
  if (!qword_256124B38)
  {
    result = MEMORY[0x23493E300](&unk_233BDFB64, &type metadata for FetchDataResponse.Response.ApprovedDeveloperCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124B38);
  }
  return result;
}

unint64_t sub_233BA5BE8()
{
  unint64_t result;

  result = qword_256124B40;
  if (!qword_256124B40)
  {
    result = MEMORY[0x23493E300](&unk_233BDFB14, &type metadata for FetchDataResponse.Response.AllApprovedDevelopersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124B40);
  }
  return result;
}

unint64_t sub_233BA5C2C()
{
  unint64_t result;

  result = qword_256124B58;
  if (!qword_256124B58)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for ApprovedDeveloper, &type metadata for ApprovedDeveloper);
    atomic_store(result, (unint64_t *)&qword_256124B58);
  }
  return result;
}

uint64_t sub_233BA5C70(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3();
    result = MEMORY[0x23493E300](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_233BA5CD4()
{
  unint64_t result;

  result = qword_256124B68;
  if (!qword_256124B68)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for ApprovedDeveloper, &type metadata for ApprovedDeveloper);
    atomic_store(result, (unint64_t *)&qword_256124B68);
  }
  return result;
}

unint64_t sub_233BA5D18()
{
  unint64_t result;

  result = qword_254250318;
  if (!qword_254250318)
  {
    result = MEMORY[0x23493E300](&unk_233BDFAC4, &type metadata for FetchDataResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254250318);
  }
  return result;
}

unint64_t sub_233BA5D5C()
{
  unint64_t result;

  result = qword_25424FCA8;
  if (!qword_25424FCA8)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for FetchDataResponse.Response, &type metadata for FetchDataResponse.Response);
    atomic_store(result, (unint64_t *)&qword_25424FCA8);
  }
  return result;
}

unint64_t sub_233BA5DA0()
{
  unint64_t result;

  result = qword_25424FEB0;
  if (!qword_25424FEB0)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for FetchDataResponse.Response, &type metadata for FetchDataResponse.Response);
    atomic_store(result, (unint64_t *)&qword_25424FEB0);
  }
  return result;
}

unint64_t sub_233BA5DE4()
{
  unint64_t result;

  result = qword_256124B80;
  if (!qword_256124B80)
  {
    result = MEMORY[0x23493E300](&unk_233BDFA74, &type metadata for FetchPublicDataRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124B80);
  }
  return result;
}

unint64_t sub_233BA5E28()
{
  unint64_t result;

  result = qword_256124B88;
  if (!qword_256124B88)
  {
    result = MEMORY[0x23493E300](&unk_233BDFA24, &type metadata for FetchPublicDataRequest.Request.SearchTerritoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124B88);
  }
  return result;
}

unint64_t sub_233BA5E6C()
{
  unint64_t result;

  result = qword_256124BB0;
  if (!qword_256124BB0)
  {
    result = MEMORY[0x23493E300](&unk_233BDF9D4, &type metadata for FetchPublicDataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124BB0);
  }
  return result;
}

unint64_t sub_233BA5EB0()
{
  unint64_t result;

  result = qword_256124BB8;
  if (!qword_256124BB8)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for FetchPublicDataRequest.Request, &type metadata for FetchPublicDataRequest.Request);
    atomic_store(result, (unint64_t *)&qword_256124BB8);
  }
  return result;
}

unint64_t sub_233BA5EF4()
{
  unint64_t result;

  result = qword_256124BC8;
  if (!qword_256124BC8)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for FetchPublicDataRequest.Request, &type metadata for FetchPublicDataRequest.Request);
    atomic_store(result, (unint64_t *)&qword_256124BC8);
  }
  return result;
}

unint64_t sub_233BA5F38()
{
  unint64_t result;

  result = qword_256124C00;
  if (!qword_256124C00)
  {
    result = MEMORY[0x23493E300](&unk_233BDF984, &type metadata for SetPrivateDataRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124C00);
  }
  return result;
}

unint64_t sub_233BA5F7C()
{
  unint64_t result;

  result = qword_256124C08;
  if (!qword_256124C08)
  {
    result = MEMORY[0x23493E300](&unk_233BDF934, &type metadata for SetPrivateDataRequest.Request.SearchTerritoryForDistributorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124C08);
  }
  return result;
}

unint64_t sub_233BA5FC0()
{
  unint64_t result;

  result = qword_256124C10;
  if (!qword_256124C10)
  {
    result = MEMORY[0x23493E300](&unk_233BDF8E4, &type metadata for SetPrivateDataRequest.Request.ShowInstallSheetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124C10);
  }
  return result;
}

unint64_t sub_233BA6004()
{
  unint64_t result;

  result = qword_256124C18;
  if (!qword_256124C18)
  {
    result = MEMORY[0x23493E300](&unk_233BDF894, &type metadata for SetPrivateDataRequest.Request.RevokeDeveloperApprovalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124C18);
  }
  return result;
}

unint64_t sub_233BA6048()
{
  unint64_t result;

  result = qword_256124C20;
  if (!qword_256124C20)
  {
    result = MEMORY[0x23493E300](&unk_233BDF844, &type metadata for SetPrivateDataRequest.Request.DistributorPriorityListCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124C20);
  }
  return result;
}

unint64_t sub_233BA608C()
{
  unint64_t result;

  result = qword_256124C28;
  if (!qword_256124C28)
  {
    result = MEMORY[0x23493E300](&unk_233BDF7F4, &type metadata for SetPrivateDataRequest.Request.ApproveDeveloperCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124C28);
  }
  return result;
}

unint64_t sub_233BA60D0()
{
  unint64_t result;

  result = qword_256124C68;
  if (!qword_256124C68)
  {
    result = MEMORY[0x23493E300](&unk_233BDF7A4, &type metadata for SetPrivateDataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124C68);
  }
  return result;
}

unint64_t sub_233BA6114()
{
  unint64_t result;

  result = qword_256124C70;
  if (!qword_256124C70)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for SetPrivateDataRequest.Request, &type metadata for SetPrivateDataRequest.Request);
    atomic_store(result, (unint64_t *)&qword_256124C70);
  }
  return result;
}

unint64_t sub_233BA6158()
{
  unint64_t result;

  result = qword_256124C80;
  if (!qword_256124C80)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for SetPrivateDataRequest.Request, &type metadata for SetPrivateDataRequest.Request);
    atomic_store(result, (unint64_t *)&qword_256124C80);
  }
  return result;
}

uint64_t type metadata accessor for SetPublicDataRequest.Request(uint64_t a1)
{
  return sub_233B82D70(a1, qword_256124E88);
}

unint64_t sub_233BA61B0()
{
  unint64_t result;

  result = qword_256124CB8;
  if (!qword_256124CB8)
  {
    result = MEMORY[0x23493E300](&unk_233BDF754, &type metadata for SetPublicDataRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124CB8);
  }
  return result;
}

unint64_t sub_233BA61F4()
{
  unint64_t result;

  result = qword_256124CC8;
  if (!qword_256124CC8)
  {
    result = MEMORY[0x23493E300](&unk_233BDF704, &type metadata for SetPublicDataRequest.Request.ConfirmPendingInstallBatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124CC8);
  }
  return result;
}

uint64_t sub_233BA6238(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256124CD8);
    v10[0] = a2;
    v10[1] = a3;
    result = MEMORY[0x23493E300](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_233BA629C()
{
  unint64_t result;

  result = qword_256124CE8;
  if (!qword_256124CE8)
  {
    result = MEMORY[0x23493E300](&unk_233BDF6B4, &type metadata for SetPublicDataRequest.Request.CancelPendingInstallBatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124CE8);
  }
  return result;
}

unint64_t sub_233BA62E0()
{
  unint64_t result;

  result = qword_256124CF8;
  if (!qword_256124CF8)
  {
    result = MEMORY[0x23493E300](&unk_233BDF664, &type metadata for SetPublicDataRequest.Request.ConfirmPendingInstallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124CF8);
  }
  return result;
}

unint64_t sub_233BA6324()
{
  unint64_t result;

  result = qword_256124D00;
  if (!qword_256124D00)
  {
    result = MEMORY[0x23493E300](&unk_233BDF614, &type metadata for SetPublicDataRequest.Request.CancelPendingInstallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124D00);
  }
  return result;
}

unint64_t sub_233BA6368()
{
  unint64_t result;

  result = qword_256124D08;
  if (!qword_256124D08)
  {
    result = MEMORY[0x23493E300](&unk_233BDF5C4, &type metadata for SetPublicDataRequest.Request.SearchTerritoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124D08);
  }
  return result;
}

uint64_t type metadata accessor for SetPublicDataRequest(uint64_t a1)
{
  return sub_233B82D70(a1, qword_256124DE0);
}

unint64_t sub_233BA63C0()
{
  unint64_t result;

  result = qword_256124D60;
  if (!qword_256124D60)
  {
    result = MEMORY[0x23493E300](&unk_233BDF574, &type metadata for SetPublicDataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124D60);
  }
  return result;
}

unint64_t sub_233BA6408()
{
  unint64_t result;

  result = qword_256124D80;
  if (!qword_256124D80)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for FetchPublicDataRequest.Request, &type metadata for FetchPublicDataRequest.Request);
    atomic_store(result, (unint64_t *)&qword_256124D80);
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchPrivateDataRequest()
{
  return &type metadata for FetchPrivateDataRequest;
}

uint64_t _s14MarketplaceKit23FetchPrivateDataRequestVwxx_0(uint64_t a1)
{
  return sub_233B7443C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t _s14MarketplaceKit23FetchPrivateDataRequestVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_233B743E8(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  return a1;
}

uint64_t _s14MarketplaceKit23FetchPrivateDataRequestVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_233B743E8(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  v16 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  sub_233B7443C(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

uint64_t _s14MarketplaceKit23FetchPrivateDataRequestVwta_0(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  __int128 v11;

  v3 = *(_BYTE *)(a2 + 48);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_BYTE *)(a1 + 48);
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = v3;
  sub_233B7443C(v4, v6, v5, v7, v8, v9, v10);
  return a1;
}

uint64_t _s14MarketplaceKit23FetchPrivateDataRequestVwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3FA && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 1018);
  v3 = ((*(_QWORD *)(a1 + 40) >> 60) & 3 | (4 * *(unsigned __int8 *)(a1 + 48))) ^ 0x3FF;
  if (v3 >= 0x3F9)
    v3 = -1;
  return v3 + 1;
}

uint64_t _s14MarketplaceKit23FetchPrivateDataRequestVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3F9)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 1018;
    if (a3 >= 0x3FA)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0x3FA)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
    {
      *(_OWORD *)result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_QWORD *)(result + 32) = 0;
      *(_QWORD *)(result + 40) = (-a2 & 3) << 60;
      *(_BYTE *)(result + 48) = -a2 >> 2;
    }
  }
  return result;
}

uint64_t sub_233BA66A0(uint64_t a1)
{
  int v1;
  unsigned int v2;

  if (*(_BYTE *)(a1 + 48))
    v1 = 4;
  else
    v1 = 0;
  v2 = (*(_QWORD *)(a1 + 40) >> 60) & 3 | v1;
  if (v2 <= 5)
    return v2;
  else
    return (*(_DWORD *)a1 + 6);
}

uint64_t sub_233BA66D0(uint64_t result)
{
  *(_QWORD *)(result + 40) &= 0xCFFFFFFFFFFFFFFFLL;
  return result;
}

uint64_t sub_233BA66E0(uint64_t result, unsigned int a2)
{
  if (a2 < 6)
  {
    *(_QWORD *)(result + 40) = *(_QWORD *)(result + 40) & 0xCFFFFFFFFFFFFFFFLL | ((unint64_t)(a2 & 3) << 60);
    *(_BYTE *)(result + 48) = (a2 & 4) != 0;
  }
  else
  {
    *(_QWORD *)result = a2 - 6;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)(result + 40) = 0x2000000000000000;
    *(_BYTE *)(result + 48) = 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchPrivateDataRequest.Request()
{
  return &type metadata for FetchPrivateDataRequest.Request;
}

ValueMetadata *type metadata accessor for FetchDataResponse()
{
  return &type metadata for FetchDataResponse;
}

uint64_t destroy for FetchDataResponse.Response(uint64_t a1)
{
  return sub_233B7EE40(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s14MarketplaceKit17FetchDataResponseVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_233B90D44(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s14MarketplaceKit17FetchDataResponseVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_233B90D44(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_233B7EE40(v6, v7, v8);
  return a1;
}

uint64_t _s14MarketplaceKit17FetchDataResponseVwta_0(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_233B7EE40(v4, v5, v6);
  return a1;
}

uint64_t _s14MarketplaceKit17FetchDataResponseVwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xF8 && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 248);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 8)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s14MarketplaceKit17FetchDataResponseVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF7)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 248;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xF8)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xF8)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_233BA68D8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_233BA68E0(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FetchDataResponse.Response()
{
  return &type metadata for FetchDataResponse.Response;
}

ValueMetadata *type metadata accessor for FetchPublicDataRequest()
{
  return &type metadata for FetchPublicDataRequest;
}

ValueMetadata *type metadata accessor for FetchPublicDataRequest.Request()
{
  return &type metadata for FetchPublicDataRequest.Request;
}

ValueMetadata *type metadata accessor for SetPrivateDataRequest()
{
  return &type metadata for SetPrivateDataRequest;
}

uint64_t _s14MarketplaceKit21SetPrivateDataRequestVwxx_0(uint64_t a1)
{
  return sub_233B74238(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t _s14MarketplaceKit21SetPrivateDataRequestVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_233B741D0(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  return a1;
}

uint64_t _s14MarketplaceKit21SetPrivateDataRequestVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_233B741D0(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v16 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v9;
  sub_233B74238(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

uint64_t _s14MarketplaceKit21SetPrivateDataRequestVwta_0(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;

  v3 = *(_BYTE *)(a2 + 48);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v11 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v3;
  sub_233B74238(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t _s14MarketplaceKit21SetPrivateDataRequestVwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s14MarketplaceKit21SetPrivateDataRequestVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = -(char)a2;
  }
  return result;
}

uint64_t sub_233BA6B50(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 48);
}

uint64_t sub_233BA6B58(uint64_t result, char a2)
{
  *(_BYTE *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SetPrivateDataRequest.Request()
{
  return &type metadata for SetPrivateDataRequest.Request;
}

uint64_t initializeBufferWithCopyOfBuffer for SetPublicDataRequest(uint64_t *a1, uint64_t *a2)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(type metadata accessor for SetPublicDataRequest.Request(0) - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_233BA6BCC + 4 * byte_233BDD33B[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for SetPublicDataRequest(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;

  type metadata accessor for SetPublicDataRequest.Request(0);
  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      result = swift_bridgeObjectRelease();
      break;
    case 1:
    case 3:
      v3 = sub_233BD8558();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      break;
    case 2:
      v4 = sub_233BD8558();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124CF0);
      goto LABEL_6;
    case 4:
      v6 = sub_233BD8558();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
      v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124CC0);
LABEL_6:
      result = swift_bridgeObjectRelease();
      v7 = (uint64_t *)(a1 + *(int *)(v5 + 64));
      v8 = v7[1];
      if (v8 >> 60 != 15)
        result = sub_233B71B8C(*v7, v8);
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for SetPublicDataRequest()
{
  char *v0;

  type metadata accessor for SetPublicDataRequest.Request(0);
  v0 = (char *)sub_233BA6F14 + 4 * byte_233BDD345[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_233BA6F14()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for SetPublicDataRequest(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_233B8073C(result, type metadata accessor for SetPublicDataRequest.Request);
    type metadata accessor for SetPublicDataRequest.Request(0);
    v2 = (char *)&loc_233BA7130 + 4 * byte_233BDD34A[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

char *initializeWithTake for SetPublicDataRequest(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = type metadata accessor for SetPublicDataRequest.Request(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 3u:
      v5 = sub_233BD8558();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
      goto LABEL_6;
    case 2u:
      v6 = sub_233BD8558();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124CF0);
      *(_OWORD *)&a1[*(int *)(v7 + 48)] = *(_OWORD *)&a2[*(int *)(v7 + 48)];
      *(_OWORD *)&a1[*(int *)(v7 + 64)] = *(_OWORD *)&a2[*(int *)(v7 + 64)];
      goto LABEL_6;
    case 4u:
      v8 = sub_233BD8558();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124CC0);
      *(_QWORD *)&a1[*(int *)(v9 + 48)] = *(_QWORD *)&a2[*(int *)(v9 + 48)];
      *(_OWORD *)&a1[*(int *)(v9 + 64)] = *(_OWORD *)&a2[*(int *)(v9 + 64)];
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for SetPublicDataRequest(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_233B8073C((uint64_t)a1, type metadata accessor for SetPublicDataRequest.Request);
    v4 = type metadata accessor for SetPublicDataRequest.Request(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 3u:
        v5 = sub_233BD8558();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
        goto LABEL_7;
      case 2u:
        v6 = sub_233BD8558();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124CF0);
        *(_OWORD *)&a1[*(int *)(v7 + 48)] = *(_OWORD *)&a2[*(int *)(v7 + 48)];
        *(_OWORD *)&a1[*(int *)(v7 + 64)] = *(_OWORD *)&a2[*(int *)(v7 + 64)];
        goto LABEL_7;
      case 4u:
        v8 = sub_233BD8558();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
        v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124CC0);
        *(_QWORD *)&a1[*(int *)(v9 + 48)] = *(_QWORD *)&a2[*(int *)(v9 + 48)];
        *(_OWORD *)&a1[*(int *)(v9 + 64)] = *(_OWORD *)&a2[*(int *)(v9 + 64)];
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SetPublicDataRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233BA7628(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SetPublicDataRequest.Request(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for SetPublicDataRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_233BA7670(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SetPublicDataRequest.Request(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_233BA76B0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SetPublicDataRequest.Request(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for SetPublicDataRequest.Request(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_233BA776C + 4 * byte_233BDD357[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for SetPublicDataRequest.Request(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      result = swift_bridgeObjectRelease();
      break;
    case 1:
    case 3:
      v3 = sub_233BD8558();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      break;
    case 2:
      v4 = sub_233BD8558();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124CF0);
      goto LABEL_6;
    case 4:
      v6 = sub_233BD8558();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
      v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124CC0);
LABEL_6:
      result = swift_bridgeObjectRelease();
      v7 = (uint64_t *)(a1 + *(int *)(v5 + 64));
      v8 = v7[1];
      if (v8 >> 60 != 15)
        result = sub_233B71B8C(*v7, v8);
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for SetPublicDataRequest.Request()
{
  char *v0;

  v0 = (char *)sub_233BA7A9C + 4 * byte_233BDD361[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_233BA7A9C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for SetPublicDataRequest.Request(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_233B8073C(result, type metadata accessor for SetPublicDataRequest.Request);
    v2 = (char *)&loc_233BA7CB0 + 4 * byte_233BDD366[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

char *initializeWithTake for SetPublicDataRequest.Request(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 3u:
      v6 = sub_233BD8558();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      goto LABEL_6;
    case 2u:
      v7 = sub_233BD8558();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124CF0);
      *(_OWORD *)&a1[*(int *)(v8 + 48)] = *(_OWORD *)&a2[*(int *)(v8 + 48)];
      *(_OWORD *)&a1[*(int *)(v8 + 64)] = *(_OWORD *)&a2[*(int *)(v8 + 64)];
      goto LABEL_6;
    case 4u:
      v9 = sub_233BD8558();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124CC0);
      *(_QWORD *)&a1[*(int *)(v10 + 48)] = *(_QWORD *)&a2[*(int *)(v10 + 48)];
      *(_OWORD *)&a1[*(int *)(v10 + 64)] = *(_OWORD *)&a2[*(int *)(v10 + 64)];
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for SetPublicDataRequest.Request(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_233B8073C((uint64_t)a1, type metadata accessor for SetPublicDataRequest.Request);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 3u:
        v6 = sub_233BD8558();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        goto LABEL_7;
      case 2u:
        v7 = sub_233BD8558();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
        v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124CF0);
        *(_OWORD *)&a1[*(int *)(v8 + 48)] = *(_OWORD *)&a2[*(int *)(v8 + 48)];
        *(_OWORD *)&a1[*(int *)(v8 + 64)] = *(_OWORD *)&a2[*(int *)(v8 + 64)];
        goto LABEL_7;
      case 4u:
        v9 = sub_233BD8558();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124CC0);
        *(_QWORD *)&a1[*(int *)(v10 + 48)] = *(_QWORD *)&a2[*(int *)(v10 + 48)];
        *(_OWORD *)&a1[*(int *)(v10 + 64)] = *(_OWORD *)&a2[*(int *)(v10 + 64)];
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_233BA818C()
{
  uint64_t result;
  unint64_t v1;
  char v2;
  char v3;
  void *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;

  v4 = &unk_233BDD848;
  result = sub_233BD8558();
  if (v1 <= 0x3F)
  {
    v5 = *(_QWORD *)(result - 8) + 64;
    swift_getTupleTypeLayout3();
    v6 = &v3;
    v7 = v5;
    swift_getTupleTypeLayout3();
    v8 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SetPublicDataRequest.CodingKeys()
{
  return &type metadata for SetPublicDataRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for SetPublicDataRequest.Request.CodingKeys()
{
  return &type metadata for SetPublicDataRequest.Request.CodingKeys;
}

ValueMetadata *type metadata accessor for SetPublicDataRequest.Request.SearchTerritoryCodingKeys()
{
  return &type metadata for SetPublicDataRequest.Request.SearchTerritoryCodingKeys;
}

ValueMetadata *type metadata accessor for SetPublicDataRequest.Request.CancelPendingInstallCodingKeys()
{
  return &type metadata for SetPublicDataRequest.Request.CancelPendingInstallCodingKeys;
}

ValueMetadata *type metadata accessor for SetPublicDataRequest.Request.ConfirmPendingInstallCodingKeys()
{
  return &type metadata for SetPublicDataRequest.Request.ConfirmPendingInstallCodingKeys;
}

ValueMetadata *type metadata accessor for SetPublicDataRequest.Request.CancelPendingInstallBatchCodingKeys()
{
  return &type metadata for SetPublicDataRequest.Request.CancelPendingInstallBatchCodingKeys;
}

ValueMetadata *type metadata accessor for SetPublicDataRequest.Request.ConfirmPendingInstallBatchCodingKeys()
{
  return &type metadata for SetPublicDataRequest.Request.ConfirmPendingInstallBatchCodingKeys;
}

ValueMetadata *type metadata accessor for SetPrivateDataRequest.CodingKeys()
{
  return &type metadata for SetPrivateDataRequest.CodingKeys;
}

uint64_t _s14MarketplaceKit20SetPublicDataRequestV7RequestO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_233BA8328 + 4 * byte_233BDD378[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_233BA835C + 4 * byte_233BDD373[v4]))();
}

uint64_t sub_233BA835C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BA8364(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233BA836CLL);
  return result;
}

uint64_t sub_233BA8378(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233BA8380);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_233BA8384(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BA838C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SetPrivateDataRequest.Request.CodingKeys()
{
  return &type metadata for SetPrivateDataRequest.Request.CodingKeys;
}

uint64_t _s14MarketplaceKit20SetPublicDataRequestV7RequestO31ConfirmPendingInstallCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_233BA83F4 + 4 * byte_233BDD382[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_233BA8428 + 4 * byte_233BDD37D[v4]))();
}

uint64_t sub_233BA8428(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BA8430(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233BA8438);
  return result;
}

uint64_t sub_233BA8444(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233BA844CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_233BA8450(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BA8458(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SetPrivateDataRequest.Request.ApproveDeveloperCodingKeys()
{
  return &type metadata for SetPrivateDataRequest.Request.ApproveDeveloperCodingKeys;
}

ValueMetadata *type metadata accessor for SetPrivateDataRequest.Request.DistributorPriorityListCodingKeys()
{
  return &type metadata for SetPrivateDataRequest.Request.DistributorPriorityListCodingKeys;
}

ValueMetadata *type metadata accessor for SetPrivateDataRequest.Request.RevokeDeveloperApprovalCodingKeys()
{
  return &type metadata for SetPrivateDataRequest.Request.RevokeDeveloperApprovalCodingKeys;
}

ValueMetadata *type metadata accessor for SetPrivateDataRequest.Request.ShowInstallSheetCodingKeys()
{
  return &type metadata for SetPrivateDataRequest.Request.ShowInstallSheetCodingKeys;
}

ValueMetadata *type metadata accessor for SetPrivateDataRequest.Request.SearchTerritoryForDistributorCodingKeys()
{
  return &type metadata for SetPrivateDataRequest.Request.SearchTerritoryForDistributorCodingKeys;
}

ValueMetadata *type metadata accessor for FetchPublicDataRequest.CodingKeys()
{
  return &type metadata for FetchPublicDataRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for FetchPublicDataRequest.Request.CodingKeys()
{
  return &type metadata for FetchPublicDataRequest.Request.CodingKeys;
}

ValueMetadata *type metadata accessor for FetchPublicDataRequest.Request.SearchTerritoryCodingKeys()
{
  return &type metadata for FetchPublicDataRequest.Request.SearchTerritoryCodingKeys;
}

ValueMetadata *type metadata accessor for FetchDataResponse.CodingKeys()
{
  return &type metadata for FetchDataResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for FetchDataResponse.Response.CodingKeys()
{
  return &type metadata for FetchDataResponse.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for FetchDataResponse.Response.AllApprovedDevelopersCodingKeys()
{
  return &type metadata for FetchDataResponse.Response.AllApprovedDevelopersCodingKeys;
}

ValueMetadata *type metadata accessor for FetchDataResponse.Response.ApprovedDeveloperCodingKeys()
{
  return &type metadata for FetchDataResponse.Response.ApprovedDeveloperCodingKeys;
}

ValueMetadata *type metadata accessor for FetchDataResponse.Response.AssociatedAppsCodingKeys()
{
  return &type metadata for FetchDataResponse.Response.AssociatedAppsCodingKeys;
}

ValueMetadata *type metadata accessor for FetchDataResponse.Response.DistributorPriorityListCodingKeys()
{
  return &type metadata for FetchDataResponse.Response.DistributorPriorityListCodingKeys;
}

ValueMetadata *type metadata accessor for FetchDataResponse.Response.PassbookProvisioningCodingKeys()
{
  return &type metadata for FetchDataResponse.Response.PassbookProvisioningCodingKeys;
}

ValueMetadata *type metadata accessor for FetchDataResponse.Response.ShowInstallSheetCodingKeys()
{
  return &type metadata for FetchDataResponse.Response.ShowInstallSheetCodingKeys;
}

ValueMetadata *type metadata accessor for FetchDataResponse.Response.ShowAppInstallationSettingsCodingKeys()
{
  return &type metadata for FetchDataResponse.Response.ShowAppInstallationSettingsCodingKeys;
}

ValueMetadata *type metadata accessor for FetchDataResponse.Response.SearchTerritoryCodingKeys()
{
  return &type metadata for FetchDataResponse.Response.SearchTerritoryCodingKeys;
}

ValueMetadata *type metadata accessor for FetchDataResponse.Response.LocalizedStringsCodingKeys()
{
  return &type metadata for FetchDataResponse.Response.LocalizedStringsCodingKeys;
}

ValueMetadata *type metadata accessor for FetchPrivateDataRequest.CodingKeys()
{
  return &type metadata for FetchPrivateDataRequest.CodingKeys;
}

uint64_t getEnumTagSinglePayload for AppInstallRequest.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s14MarketplaceKit17FetchDataResponseV8ResponseO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_233BA868C + 4 * byte_233BDD38C[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_233BA86C0 + 4 * byte_233BDD387[v4]))();
}

uint64_t sub_233BA86C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BA86C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233BA86D0);
  return result;
}

uint64_t sub_233BA86DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233BA86E4);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_233BA86E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BA86F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FetchPrivateDataRequest.Request.CodingKeys()
{
  return &type metadata for FetchPrivateDataRequest.Request.CodingKeys;
}

ValueMetadata *type metadata accessor for FetchPrivateDataRequest.Request.AllApprovedDevelopersCodingKeys()
{
  return &type metadata for FetchPrivateDataRequest.Request.AllApprovedDevelopersCodingKeys;
}

ValueMetadata *type metadata accessor for FetchPrivateDataRequest.Request.ApprovedDeveloperCodingKeys()
{
  return &type metadata for FetchPrivateDataRequest.Request.ApprovedDeveloperCodingKeys;
}

ValueMetadata *type metadata accessor for FetchPrivateDataRequest.Request.AssociatedAppsCodingKeys()
{
  return &type metadata for FetchPrivateDataRequest.Request.AssociatedAppsCodingKeys;
}

ValueMetadata *type metadata accessor for FetchPrivateDataRequest.Request.DistributorPriorityListCodingKeys()
{
  return &type metadata for FetchPrivateDataRequest.Request.DistributorPriorityListCodingKeys;
}

uint64_t _s14MarketplaceKit21SetPrivateDataRequestV7RequestO33RevokeDeveloperApprovalCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_233BA8798 + 4 * byte_233BDD396[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_233BA87CC + 4 * byte_233BDD391[v4]))();
}

uint64_t sub_233BA87CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BA87D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233BA87DCLL);
  return result;
}

uint64_t sub_233BA87E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233BA87F0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_233BA87F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BA87FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FetchPrivateDataRequest.Request.PassbookProvisioningCodingKeys()
{
  return &type metadata for FetchPrivateDataRequest.Request.PassbookProvisioningCodingKeys;
}

ValueMetadata *type metadata accessor for FetchPrivateDataRequest.Request.ShowInstallSheetCodingKeys()
{
  return &type metadata for FetchPrivateDataRequest.Request.ShowInstallSheetCodingKeys;
}

ValueMetadata *type metadata accessor for FetchPrivateDataRequest.Request.ShowAppInstallationSettingsCodingKeys()
{
  return &type metadata for FetchPrivateDataRequest.Request.ShowAppInstallationSettingsCodingKeys;
}

ValueMetadata *type metadata accessor for FetchPrivateDataRequest.Request.SearchTerritoryForDistributorCodingKeys()
{
  return &type metadata for FetchPrivateDataRequest.Request.SearchTerritoryForDistributorCodingKeys;
}

uint64_t _s14MarketplaceKit22FetchPublicDataRequestV7RequestOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_233BA8888 + 4 * byte_233BDD39B[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_233BA88A8 + 4 * byte_233BDD3A0[v4]))();
}

_BYTE *sub_233BA8888(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_233BA88A8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233BA88B0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233BA88B8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233BA88C0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233BA88C8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FetchPrivateDataRequest.Request.LocalizedStringsCodingKeys()
{
  return &type metadata for FetchPrivateDataRequest.Request.LocalizedStringsCodingKeys;
}

unint64_t sub_233BA88E8()
{
  unint64_t result;

  result = qword_256124EC0;
  if (!qword_256124EC0)
  {
    result = MEMORY[0x23493E300](&unk_233BDDB9C, &type metadata for FetchPrivateDataRequest.Request.LocalizedStringsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124EC0);
  }
  return result;
}

unint64_t sub_233BA8930()
{
  unint64_t result;

  result = qword_256124EC8;
  if (!qword_256124EC8)
  {
    result = MEMORY[0x23493E300](&unk_233BDDC54, &type metadata for FetchPrivateDataRequest.Request.SearchTerritoryForDistributorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124EC8);
  }
  return result;
}

unint64_t sub_233BA8978()
{
  unint64_t result;

  result = qword_256124ED0;
  if (!qword_256124ED0)
  {
    result = MEMORY[0x23493E300](&unk_233BDDD5C, &type metadata for FetchPrivateDataRequest.Request.ShowInstallSheetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124ED0);
  }
  return result;
}

unint64_t sub_233BA89C0()
{
  unint64_t result;

  result = qword_256124ED8;
  if (!qword_256124ED8)
  {
    result = MEMORY[0x23493E300](&unk_233BDDE14, &type metadata for FetchPrivateDataRequest.Request.PassbookProvisioningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124ED8);
  }
  return result;
}

unint64_t sub_233BA8A08()
{
  unint64_t result;

  result = qword_256124EE0;
  if (!qword_256124EE0)
  {
    result = MEMORY[0x23493E300](&unk_233BDDF1C, &type metadata for FetchPrivateDataRequest.Request.AssociatedAppsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124EE0);
  }
  return result;
}

unint64_t sub_233BA8A50()
{
  unint64_t result;

  result = qword_256124EE8;
  if (!qword_256124EE8)
  {
    result = MEMORY[0x23493E300](&unk_233BDDFD4, &type metadata for FetchPrivateDataRequest.Request.ApprovedDeveloperCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124EE8);
  }
  return result;
}

unint64_t sub_233BA8A98()
{
  unint64_t result;

  result = qword_256124EF0;
  if (!qword_256124EF0)
  {
    result = MEMORY[0x23493E300](&unk_233BDE0DC, &type metadata for FetchPrivateDataRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124EF0);
  }
  return result;
}

unint64_t sub_233BA8AE0()
{
  unint64_t result;

  result = qword_256124EF8;
  if (!qword_256124EF8)
  {
    result = MEMORY[0x23493E300](&unk_233BDE194, &type metadata for FetchPrivateDataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124EF8);
  }
  return result;
}

unint64_t sub_233BA8B28()
{
  unint64_t result;

  result = qword_256124F00;
  if (!qword_256124F00)
  {
    result = MEMORY[0x23493E300](&unk_233BDE24C, &type metadata for FetchDataResponse.Response.LocalizedStringsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124F00);
  }
  return result;
}

unint64_t sub_233BA8B70()
{
  unint64_t result;

  result = qword_256124F08;
  if (!qword_256124F08)
  {
    result = MEMORY[0x23493E300](&unk_233BDE304, &type metadata for FetchDataResponse.Response.SearchTerritoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124F08);
  }
  return result;
}

unint64_t sub_233BA8BB8()
{
  unint64_t result;

  result = qword_256124F10;
  if (!qword_256124F10)
  {
    result = MEMORY[0x23493E300](&unk_233BDE3BC, &type metadata for FetchDataResponse.Response.ShowAppInstallationSettingsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124F10);
  }
  return result;
}

unint64_t sub_233BA8C00()
{
  unint64_t result;

  result = qword_256124F18;
  if (!qword_256124F18)
  {
    result = MEMORY[0x23493E300](&unk_233BDE474, &type metadata for FetchDataResponse.Response.ShowInstallSheetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124F18);
  }
  return result;
}

unint64_t sub_233BA8C48()
{
  unint64_t result;

  result = qword_256124F20;
  if (!qword_256124F20)
  {
    result = MEMORY[0x23493E300](&unk_233BDE52C, &type metadata for FetchDataResponse.Response.PassbookProvisioningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124F20);
  }
  return result;
}

unint64_t sub_233BA8C90()
{
  unint64_t result;

  result = qword_256124F28;
  if (!qword_256124F28)
  {
    result = MEMORY[0x23493E300](&unk_233BDE5E4, &type metadata for FetchDataResponse.Response.DistributorPriorityListCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124F28);
  }
  return result;
}

unint64_t sub_233BA8CD8()
{
  unint64_t result;

  result = qword_256124F30;
  if (!qword_256124F30)
  {
    result = MEMORY[0x23493E300](&unk_233BDE69C, &type metadata for FetchDataResponse.Response.AssociatedAppsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124F30);
  }
  return result;
}

unint64_t sub_233BA8D20()
{
  unint64_t result;

  result = qword_256124F38;
  if (!qword_256124F38)
  {
    result = MEMORY[0x23493E300](&unk_233BDE754, &type metadata for FetchDataResponse.Response.ApprovedDeveloperCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124F38);
  }
  return result;
}

unint64_t sub_233BA8D68()
{
  unint64_t result;

  result = qword_256124F40;
  if (!qword_256124F40)
  {
    result = MEMORY[0x23493E300](&unk_233BDE80C, &type metadata for FetchDataResponse.Response.AllApprovedDevelopersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124F40);
  }
  return result;
}

unint64_t sub_233BA8DB0()
{
  unint64_t result;

  result = qword_256124F48;
  if (!qword_256124F48)
  {
    result = MEMORY[0x23493E300](&unk_233BDE8C4, &type metadata for FetchDataResponse.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124F48);
  }
  return result;
}

unint64_t sub_233BA8DF8()
{
  unint64_t result;

  result = qword_256124F50;
  if (!qword_256124F50)
  {
    result = MEMORY[0x23493E300](&unk_233BDE97C, &type metadata for FetchDataResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124F50);
  }
  return result;
}

unint64_t sub_233BA8E40()
{
  unint64_t result;

  result = qword_256124F58;
  if (!qword_256124F58)
  {
    result = MEMORY[0x23493E300](&unk_233BDEA84, &type metadata for FetchPublicDataRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124F58);
  }
  return result;
}

unint64_t sub_233BA8E88()
{
  unint64_t result;

  result = qword_256124F60;
  if (!qword_256124F60)
  {
    result = MEMORY[0x23493E300](&unk_233BDEB3C, &type metadata for FetchPublicDataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124F60);
  }
  return result;
}

unint64_t sub_233BA8ED0()
{
  unint64_t result;

  result = qword_256124F68;
  if (!qword_256124F68)
  {
    result = MEMORY[0x23493E300](&unk_233BDEBF4, &type metadata for SetPrivateDataRequest.Request.SearchTerritoryForDistributorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124F68);
  }
  return result;
}

unint64_t sub_233BA8F18()
{
  unint64_t result;

  result = qword_256124F70;
  if (!qword_256124F70)
  {
    result = MEMORY[0x23493E300](&unk_233BDECAC, &type metadata for SetPrivateDataRequest.Request.ShowInstallSheetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124F70);
  }
  return result;
}

unint64_t sub_233BA8F60()
{
  unint64_t result;

  result = qword_256124F78;
  if (!qword_256124F78)
  {
    result = MEMORY[0x23493E300](&unk_233BDED64, &type metadata for SetPrivateDataRequest.Request.RevokeDeveloperApprovalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124F78);
  }
  return result;
}

unint64_t sub_233BA8FA8()
{
  unint64_t result;

  result = qword_256124F80;
  if (!qword_256124F80)
  {
    result = MEMORY[0x23493E300](&unk_233BDEE1C, &type metadata for SetPrivateDataRequest.Request.DistributorPriorityListCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124F80);
  }
  return result;
}

unint64_t sub_233BA8FF0()
{
  unint64_t result;

  result = qword_256124F88;
  if (!qword_256124F88)
  {
    result = MEMORY[0x23493E300](&unk_233BDEED4, &type metadata for SetPrivateDataRequest.Request.ApproveDeveloperCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124F88);
  }
  return result;
}

unint64_t sub_233BA9038()
{
  unint64_t result;

  result = qword_256124F90;
  if (!qword_256124F90)
  {
    result = MEMORY[0x23493E300](&unk_233BDEF8C, &type metadata for SetPrivateDataRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124F90);
  }
  return result;
}

unint64_t sub_233BA9080()
{
  unint64_t result;

  result = qword_256124F98;
  if (!qword_256124F98)
  {
    result = MEMORY[0x23493E300](&unk_233BDF044, &type metadata for SetPrivateDataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124F98);
  }
  return result;
}

unint64_t sub_233BA90C8()
{
  unint64_t result;

  result = qword_256124FA0;
  if (!qword_256124FA0)
  {
    result = MEMORY[0x23493E300](&unk_233BDF0FC, &type metadata for SetPublicDataRequest.Request.ConfirmPendingInstallBatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124FA0);
  }
  return result;
}

unint64_t sub_233BA9110()
{
  unint64_t result;

  result = qword_256124FA8;
  if (!qword_256124FA8)
  {
    result = MEMORY[0x23493E300](&unk_233BDF1B4, &type metadata for SetPublicDataRequest.Request.CancelPendingInstallBatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124FA8);
  }
  return result;
}

unint64_t sub_233BA9158()
{
  unint64_t result;

  result = qword_256124FB0;
  if (!qword_256124FB0)
  {
    result = MEMORY[0x23493E300](&unk_233BDF26C, &type metadata for SetPublicDataRequest.Request.ConfirmPendingInstallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124FB0);
  }
  return result;
}

unint64_t sub_233BA91A0()
{
  unint64_t result;

  result = qword_256124FB8;
  if (!qword_256124FB8)
  {
    result = MEMORY[0x23493E300](&unk_233BDF324, &type metadata for SetPublicDataRequest.Request.CancelPendingInstallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124FB8);
  }
  return result;
}

unint64_t sub_233BA91E8()
{
  unint64_t result;

  result = qword_256124FC0;
  if (!qword_256124FC0)
  {
    result = MEMORY[0x23493E300](&unk_233BDF3DC, &type metadata for SetPublicDataRequest.Request.SearchTerritoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124FC0);
  }
  return result;
}

unint64_t sub_233BA9230()
{
  unint64_t result;

  result = qword_256124FC8;
  if (!qword_256124FC8)
  {
    result = MEMORY[0x23493E300](&unk_233BDF494, &type metadata for SetPublicDataRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124FC8);
  }
  return result;
}

unint64_t sub_233BA9278()
{
  unint64_t result;

  result = qword_256124FD0;
  if (!qword_256124FD0)
  {
    result = MEMORY[0x23493E300](&unk_233BDF54C, &type metadata for SetPublicDataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124FD0);
  }
  return result;
}

unint64_t sub_233BA92C0()
{
  unint64_t result;

  result = qword_256124FD8;
  if (!qword_256124FD8)
  {
    result = MEMORY[0x23493E300](&unk_233BDF4BC, &type metadata for SetPublicDataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124FD8);
  }
  return result;
}

unint64_t sub_233BA9308()
{
  unint64_t result;

  result = qword_256124FE0;
  if (!qword_256124FE0)
  {
    result = MEMORY[0x23493E300](&unk_233BDF4E4, &type metadata for SetPublicDataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124FE0);
  }
  return result;
}

unint64_t sub_233BA9350()
{
  unint64_t result;

  result = qword_256124FE8;
  if (!qword_256124FE8)
  {
    result = MEMORY[0x23493E300](&unk_233BDF34C, &type metadata for SetPublicDataRequest.Request.SearchTerritoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124FE8);
  }
  return result;
}

unint64_t sub_233BA9398()
{
  unint64_t result;

  result = qword_256124FF0;
  if (!qword_256124FF0)
  {
    result = MEMORY[0x23493E300](&unk_233BDF374, &type metadata for SetPublicDataRequest.Request.SearchTerritoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124FF0);
  }
  return result;
}

unint64_t sub_233BA93E0()
{
  unint64_t result;

  result = qword_256124FF8;
  if (!qword_256124FF8)
  {
    result = MEMORY[0x23493E300](&unk_233BDF294, &type metadata for SetPublicDataRequest.Request.CancelPendingInstallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256124FF8);
  }
  return result;
}

unint64_t sub_233BA9428()
{
  unint64_t result;

  result = qword_256125000;
  if (!qword_256125000)
  {
    result = MEMORY[0x23493E300](&unk_233BDF2BC, &type metadata for SetPublicDataRequest.Request.CancelPendingInstallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125000);
  }
  return result;
}

unint64_t sub_233BA9470()
{
  unint64_t result;

  result = qword_256125008;
  if (!qword_256125008)
  {
    result = MEMORY[0x23493E300](&unk_233BDF1DC, &type metadata for SetPublicDataRequest.Request.ConfirmPendingInstallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125008);
  }
  return result;
}

unint64_t sub_233BA94B8()
{
  unint64_t result;

  result = qword_256125010;
  if (!qword_256125010)
  {
    result = MEMORY[0x23493E300](&unk_233BDF204, &type metadata for SetPublicDataRequest.Request.ConfirmPendingInstallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125010);
  }
  return result;
}

unint64_t sub_233BA9500()
{
  unint64_t result;

  result = qword_256125018;
  if (!qword_256125018)
  {
    result = MEMORY[0x23493E300](&unk_233BDF124, &type metadata for SetPublicDataRequest.Request.CancelPendingInstallBatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125018);
  }
  return result;
}

unint64_t sub_233BA9548()
{
  unint64_t result;

  result = qword_256125020;
  if (!qword_256125020)
  {
    result = MEMORY[0x23493E300](&unk_233BDF14C, &type metadata for SetPublicDataRequest.Request.CancelPendingInstallBatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125020);
  }
  return result;
}

unint64_t sub_233BA9590()
{
  unint64_t result;

  result = qword_256125028;
  if (!qword_256125028)
  {
    result = MEMORY[0x23493E300](&unk_233BDF06C, &type metadata for SetPublicDataRequest.Request.ConfirmPendingInstallBatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125028);
  }
  return result;
}

unint64_t sub_233BA95D8()
{
  unint64_t result;

  result = qword_256125030;
  if (!qword_256125030)
  {
    result = MEMORY[0x23493E300](&unk_233BDF094, &type metadata for SetPublicDataRequest.Request.ConfirmPendingInstallBatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125030);
  }
  return result;
}

unint64_t sub_233BA9620()
{
  unint64_t result;

  result = qword_256125038;
  if (!qword_256125038)
  {
    result = MEMORY[0x23493E300](&unk_233BDF404, &type metadata for SetPublicDataRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125038);
  }
  return result;
}

unint64_t sub_233BA9668()
{
  unint64_t result;

  result = qword_256125040;
  if (!qword_256125040)
  {
    result = MEMORY[0x23493E300](&unk_233BDF42C, &type metadata for SetPublicDataRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125040);
  }
  return result;
}

unint64_t sub_233BA96B0()
{
  unint64_t result;

  result = qword_256125048;
  if (!qword_256125048)
  {
    result = MEMORY[0x23493E300](&unk_233BDEFB4, &type metadata for SetPrivateDataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125048);
  }
  return result;
}

unint64_t sub_233BA96F8()
{
  unint64_t result;

  result = qword_256125050;
  if (!qword_256125050)
  {
    result = MEMORY[0x23493E300](&unk_233BDEFDC, &type metadata for SetPrivateDataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125050);
  }
  return result;
}

unint64_t sub_233BA9740()
{
  unint64_t result;

  result = qword_256125058;
  if (!qword_256125058)
  {
    result = MEMORY[0x23493E300](&unk_233BDEE44, &type metadata for SetPrivateDataRequest.Request.ApproveDeveloperCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125058);
  }
  return result;
}

unint64_t sub_233BA9788()
{
  unint64_t result;

  result = qword_256125060;
  if (!qword_256125060)
  {
    result = MEMORY[0x23493E300](&unk_233BDEE6C, &type metadata for SetPrivateDataRequest.Request.ApproveDeveloperCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125060);
  }
  return result;
}

unint64_t sub_233BA97D0()
{
  unint64_t result;

  result = qword_256125068;
  if (!qword_256125068)
  {
    result = MEMORY[0x23493E300](&unk_233BDED8C, &type metadata for SetPrivateDataRequest.Request.DistributorPriorityListCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125068);
  }
  return result;
}

unint64_t sub_233BA9818()
{
  unint64_t result;

  result = qword_256125070;
  if (!qword_256125070)
  {
    result = MEMORY[0x23493E300](&unk_233BDEDB4, &type metadata for SetPrivateDataRequest.Request.DistributorPriorityListCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125070);
  }
  return result;
}

unint64_t sub_233BA9860()
{
  unint64_t result;

  result = qword_256125078;
  if (!qword_256125078)
  {
    result = MEMORY[0x23493E300](&unk_233BDECD4, &type metadata for SetPrivateDataRequest.Request.RevokeDeveloperApprovalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125078);
  }
  return result;
}

unint64_t sub_233BA98A8()
{
  unint64_t result;

  result = qword_256125080;
  if (!qword_256125080)
  {
    result = MEMORY[0x23493E300](&unk_233BDECFC, &type metadata for SetPrivateDataRequest.Request.RevokeDeveloperApprovalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125080);
  }
  return result;
}

unint64_t sub_233BA98F0()
{
  unint64_t result;

  result = qword_256125088;
  if (!qword_256125088)
  {
    result = MEMORY[0x23493E300](&unk_233BDEC1C, &type metadata for SetPrivateDataRequest.Request.ShowInstallSheetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125088);
  }
  return result;
}

unint64_t sub_233BA9938()
{
  unint64_t result;

  result = qword_256125090;
  if (!qword_256125090)
  {
    result = MEMORY[0x23493E300](&unk_233BDEC44, &type metadata for SetPrivateDataRequest.Request.ShowInstallSheetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125090);
  }
  return result;
}

unint64_t sub_233BA9980()
{
  unint64_t result;

  result = qword_256125098;
  if (!qword_256125098)
  {
    result = MEMORY[0x23493E300](&unk_233BDEB64, &type metadata for SetPrivateDataRequest.Request.SearchTerritoryForDistributorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125098);
  }
  return result;
}

unint64_t sub_233BA99C8()
{
  unint64_t result;

  result = qword_2561250A0;
  if (!qword_2561250A0)
  {
    result = MEMORY[0x23493E300](&unk_233BDEB8C, &type metadata for SetPrivateDataRequest.Request.SearchTerritoryForDistributorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561250A0);
  }
  return result;
}

unint64_t sub_233BA9A10()
{
  unint64_t result;

  result = qword_2561250A8;
  if (!qword_2561250A8)
  {
    result = MEMORY[0x23493E300](&unk_233BDEEFC, &type metadata for SetPrivateDataRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561250A8);
  }
  return result;
}

unint64_t sub_233BA9A58()
{
  unint64_t result;

  result = qword_2561250B0;
  if (!qword_2561250B0)
  {
    result = MEMORY[0x23493E300](&unk_233BDEF24, &type metadata for SetPrivateDataRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561250B0);
  }
  return result;
}

unint64_t sub_233BA9AA0()
{
  unint64_t result;

  result = qword_2561250B8;
  if (!qword_2561250B8)
  {
    result = MEMORY[0x23493E300](&unk_233BDEAAC, &type metadata for FetchPublicDataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561250B8);
  }
  return result;
}

unint64_t sub_233BA9AE8()
{
  unint64_t result;

  result = qword_2561250C0;
  if (!qword_2561250C0)
  {
    result = MEMORY[0x23493E300](&unk_233BDEAD4, &type metadata for FetchPublicDataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561250C0);
  }
  return result;
}

unint64_t sub_233BA9B30()
{
  unint64_t result;

  result = qword_2561250C8;
  if (!qword_2561250C8)
  {
    result = MEMORY[0x23493E300](&unk_233BDE9A4, &type metadata for FetchPublicDataRequest.Request.SearchTerritoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561250C8);
  }
  return result;
}

unint64_t sub_233BA9B78()
{
  unint64_t result;

  result = qword_2561250D0;
  if (!qword_2561250D0)
  {
    result = MEMORY[0x23493E300](&unk_233BDE9CC, &type metadata for FetchPublicDataRequest.Request.SearchTerritoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561250D0);
  }
  return result;
}

unint64_t sub_233BA9BC0()
{
  unint64_t result;

  result = qword_2561250D8;
  if (!qword_2561250D8)
  {
    result = MEMORY[0x23493E300](&unk_233BDE9F4, &type metadata for FetchPublicDataRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561250D8);
  }
  return result;
}

unint64_t sub_233BA9C08()
{
  unint64_t result;

  result = qword_2561250E0;
  if (!qword_2561250E0)
  {
    result = MEMORY[0x23493E300](&unk_233BDEA1C, &type metadata for FetchPublicDataRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561250E0);
  }
  return result;
}

unint64_t sub_233BA9C50()
{
  unint64_t result;

  result = qword_254250328;
  if (!qword_254250328)
  {
    result = MEMORY[0x23493E300](&unk_233BDE8EC, &type metadata for FetchDataResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254250328);
  }
  return result;
}

unint64_t sub_233BA9C98()
{
  unint64_t result;

  result = qword_254250320;
  if (!qword_254250320)
  {
    result = MEMORY[0x23493E300](&unk_233BDE914, &type metadata for FetchDataResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254250320);
  }
  return result;
}

unint64_t sub_233BA9CE0()
{
  unint64_t result;

  result = qword_2542502F0;
  if (!qword_2542502F0)
  {
    result = MEMORY[0x23493E300](&unk_233BDE77C, &type metadata for FetchDataResponse.Response.AllApprovedDevelopersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542502F0);
  }
  return result;
}

unint64_t sub_233BA9D28()
{
  unint64_t result;

  result = qword_2542502E8;
  if (!qword_2542502E8)
  {
    result = MEMORY[0x23493E300](&unk_233BDE7A4, &type metadata for FetchDataResponse.Response.AllApprovedDevelopersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542502E8);
  }
  return result;
}

unint64_t sub_233BA9D70()
{
  unint64_t result;

  result = qword_2542502D0;
  if (!qword_2542502D0)
  {
    result = MEMORY[0x23493E300](&unk_233BDE6C4, &type metadata for FetchDataResponse.Response.ApprovedDeveloperCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542502D0);
  }
  return result;
}

unint64_t sub_233BA9DB8()
{
  unint64_t result;

  result = qword_2542502C8;
  if (!qword_2542502C8)
  {
    result = MEMORY[0x23493E300](&unk_233BDE6EC, &type metadata for FetchDataResponse.Response.ApprovedDeveloperCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542502C8);
  }
  return result;
}

unint64_t sub_233BA9E00()
{
  unint64_t result;

  result = qword_254250290;
  if (!qword_254250290)
  {
    result = MEMORY[0x23493E300](&unk_233BDE60C, &type metadata for FetchDataResponse.Response.AssociatedAppsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254250290);
  }
  return result;
}

unint64_t sub_233BA9E48()
{
  unint64_t result;

  result = qword_254250288;
  if (!qword_254250288)
  {
    result = MEMORY[0x23493E300](&unk_233BDE634, &type metadata for FetchDataResponse.Response.AssociatedAppsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254250288);
  }
  return result;
}

unint64_t sub_233BA9E90()
{
  unint64_t result;

  result = qword_254250300;
  if (!qword_254250300)
  {
    result = MEMORY[0x23493E300](&unk_233BDE554, &type metadata for FetchDataResponse.Response.DistributorPriorityListCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254250300);
  }
  return result;
}

unint64_t sub_233BA9ED8()
{
  unint64_t result;

  result = qword_2542502F8;
  if (!qword_2542502F8)
  {
    result = MEMORY[0x23493E300](&unk_233BDE57C, &type metadata for FetchDataResponse.Response.DistributorPriorityListCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542502F8);
  }
  return result;
}

unint64_t sub_233BA9F20()
{
  unint64_t result;

  result = qword_2542502E0;
  if (!qword_2542502E0)
  {
    result = MEMORY[0x23493E300](&unk_233BDE49C, &type metadata for FetchDataResponse.Response.PassbookProvisioningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542502E0);
  }
  return result;
}

unint64_t sub_233BA9F68()
{
  unint64_t result;

  result = qword_2542502D8;
  if (!qword_2542502D8)
  {
    result = MEMORY[0x23493E300](&unk_233BDE4C4, &type metadata for FetchDataResponse.Response.PassbookProvisioningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542502D8);
  }
  return result;
}

unint64_t sub_233BA9FB0()
{
  unint64_t result;

  result = qword_2542502C0;
  if (!qword_2542502C0)
  {
    result = MEMORY[0x23493E300](&unk_233BDE3E4, &type metadata for FetchDataResponse.Response.ShowInstallSheetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542502C0);
  }
  return result;
}

unint64_t sub_233BA9FF8()
{
  unint64_t result;

  result = qword_2542502B8;
  if (!qword_2542502B8)
  {
    result = MEMORY[0x23493E300](&unk_233BDE40C, &type metadata for FetchDataResponse.Response.ShowInstallSheetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542502B8);
  }
  return result;
}

unint64_t sub_233BAA040()
{
  unint64_t result;

  result = qword_254250310;
  if (!qword_254250310)
  {
    result = MEMORY[0x23493E300](&unk_233BDE32C, &type metadata for FetchDataResponse.Response.ShowAppInstallationSettingsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254250310);
  }
  return result;
}

unint64_t sub_233BAA088()
{
  unint64_t result;

  result = qword_254250308;
  if (!qword_254250308)
  {
    result = MEMORY[0x23493E300](&unk_233BDE354, &type metadata for FetchDataResponse.Response.ShowAppInstallationSettingsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254250308);
  }
  return result;
}

unint64_t sub_233BAA0D0()
{
  unint64_t result;

  result = qword_2542502A0;
  if (!qword_2542502A0)
  {
    result = MEMORY[0x23493E300](&unk_233BDE274, &type metadata for FetchDataResponse.Response.SearchTerritoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542502A0);
  }
  return result;
}

unint64_t sub_233BAA118()
{
  unint64_t result;

  result = qword_254250298;
  if (!qword_254250298)
  {
    result = MEMORY[0x23493E300](&unk_233BDE29C, &type metadata for FetchDataResponse.Response.SearchTerritoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254250298);
  }
  return result;
}

unint64_t sub_233BAA160()
{
  unint64_t result;

  result = qword_2542502B0;
  if (!qword_2542502B0)
  {
    result = MEMORY[0x23493E300](&unk_233BDE1BC, &type metadata for FetchDataResponse.Response.LocalizedStringsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542502B0);
  }
  return result;
}

unint64_t sub_233BAA1A8()
{
  unint64_t result;

  result = qword_2542502A8;
  if (!qword_2542502A8)
  {
    result = MEMORY[0x23493E300](&unk_233BDE1E4, &type metadata for FetchDataResponse.Response.LocalizedStringsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542502A8);
  }
  return result;
}

unint64_t sub_233BAA1F0()
{
  unint64_t result;

  result = qword_254250280;
  if (!qword_254250280)
  {
    result = MEMORY[0x23493E300](&unk_233BDE834, &type metadata for FetchDataResponse.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254250280);
  }
  return result;
}

unint64_t sub_233BAA238()
{
  unint64_t result;

  result = qword_254250278;
  if (!qword_254250278)
  {
    result = MEMORY[0x23493E300](&unk_233BDE85C, &type metadata for FetchDataResponse.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254250278);
  }
  return result;
}

unint64_t sub_233BAA280()
{
  unint64_t result;

  result = qword_2542503E8;
  if (!qword_2542503E8)
  {
    result = MEMORY[0x23493E300](&unk_233BDE104, &type metadata for FetchPrivateDataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542503E8);
  }
  return result;
}

unint64_t sub_233BAA2C8()
{
  unint64_t result;

  result = qword_2542503E0;
  if (!qword_2542503E0)
  {
    result = MEMORY[0x23493E300](&unk_233BDE12C, &type metadata for FetchPrivateDataRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542503E0);
  }
  return result;
}

unint64_t sub_233BAA310()
{
  unint64_t result;

  result = qword_2542503A0;
  if (!qword_2542503A0)
  {
    result = MEMORY[0x23493E300](&unk_233BDDFFC, &type metadata for FetchPrivateDataRequest.Request.AllApprovedDevelopersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542503A0);
  }
  return result;
}

unint64_t sub_233BAA358()
{
  unint64_t result;

  result = qword_254250398;
  if (!qword_254250398)
  {
    result = MEMORY[0x23493E300](&unk_233BDE024, &type metadata for FetchPrivateDataRequest.Request.AllApprovedDevelopersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254250398);
  }
  return result;
}

unint64_t sub_233BAA3A0()
{
  unint64_t result;

  result = qword_254250380;
  if (!qword_254250380)
  {
    result = MEMORY[0x23493E300](&unk_233BDDF44, &type metadata for FetchPrivateDataRequest.Request.ApprovedDeveloperCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254250380);
  }
  return result;
}

unint64_t sub_233BAA3E8()
{
  unint64_t result;

  result = qword_254250378;
  if (!qword_254250378)
  {
    result = MEMORY[0x23493E300](&unk_233BDDF6C, &type metadata for FetchPrivateDataRequest.Request.ApprovedDeveloperCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254250378);
  }
  return result;
}

unint64_t sub_233BAA430()
{
  unint64_t result;

  result = qword_254250350;
  if (!qword_254250350)
  {
    result = MEMORY[0x23493E300](&unk_233BDDE8C, &type metadata for FetchPrivateDataRequest.Request.AssociatedAppsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254250350);
  }
  return result;
}

unint64_t sub_233BAA478()
{
  unint64_t result;

  result = qword_254250348;
  if (!qword_254250348)
  {
    result = MEMORY[0x23493E300](&unk_233BDDEB4, &type metadata for FetchPrivateDataRequest.Request.AssociatedAppsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254250348);
  }
  return result;
}

unint64_t sub_233BAA4C0()
{
  unint64_t result;

  result = qword_2542503B0;
  if (!qword_2542503B0)
  {
    result = MEMORY[0x23493E300](&unk_233BDDE3C, &type metadata for FetchPrivateDataRequest.Request.DistributorPriorityListCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542503B0);
  }
  return result;
}

unint64_t sub_233BAA508()
{
  unint64_t result;

  result = qword_2542503A8;
  if (!qword_2542503A8)
  {
    result = MEMORY[0x23493E300](&unk_233BDDE64, &type metadata for FetchPrivateDataRequest.Request.DistributorPriorityListCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542503A8);
  }
  return result;
}

unint64_t sub_233BAA550()
{
  unint64_t result;

  result = qword_254250390;
  if (!qword_254250390)
  {
    result = MEMORY[0x23493E300](&unk_233BDDD84, &type metadata for FetchPrivateDataRequest.Request.PassbookProvisioningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254250390);
  }
  return result;
}

unint64_t sub_233BAA598()
{
  unint64_t result;

  result = qword_254250388;
  if (!qword_254250388)
  {
    result = MEMORY[0x23493E300](&unk_233BDDDAC, &type metadata for FetchPrivateDataRequest.Request.PassbookProvisioningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254250388);
  }
  return result;
}

unint64_t sub_233BAA5E0()
{
  unint64_t result;

  result = qword_254250370;
  if (!qword_254250370)
  {
    result = MEMORY[0x23493E300](&unk_233BDDCCC, &type metadata for FetchPrivateDataRequest.Request.ShowInstallSheetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254250370);
  }
  return result;
}

unint64_t sub_233BAA628()
{
  unint64_t result;

  result = qword_254250368;
  if (!qword_254250368)
  {
    result = MEMORY[0x23493E300](&unk_233BDDCF4, &type metadata for FetchPrivateDataRequest.Request.ShowInstallSheetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254250368);
  }
  return result;
}

unint64_t sub_233BAA670()
{
  unint64_t result;

  result = qword_2542503C0;
  if (!qword_2542503C0)
  {
    result = MEMORY[0x23493E300](&unk_233BDDC7C, &type metadata for FetchPrivateDataRequest.Request.ShowAppInstallationSettingsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542503C0);
  }
  return result;
}

unint64_t sub_233BAA6B8()
{
  unint64_t result;

  result = qword_2542503B8;
  if (!qword_2542503B8)
  {
    result = MEMORY[0x23493E300](&unk_233BDDCA4, &type metadata for FetchPrivateDataRequest.Request.ShowAppInstallationSettingsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542503B8);
  }
  return result;
}

unint64_t sub_233BAA700()
{
  unint64_t result;

  result = qword_2542503D0;
  if (!qword_2542503D0)
  {
    result = MEMORY[0x23493E300](&unk_233BDDBC4, &type metadata for FetchPrivateDataRequest.Request.SearchTerritoryForDistributorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542503D0);
  }
  return result;
}

unint64_t sub_233BAA748()
{
  unint64_t result;

  result = qword_2542503C8;
  if (!qword_2542503C8)
  {
    result = MEMORY[0x23493E300](&unk_233BDDBEC, &type metadata for FetchPrivateDataRequest.Request.SearchTerritoryForDistributorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2542503C8);
  }
  return result;
}

unint64_t sub_233BAA790()
{
  unint64_t result;

  result = qword_254250360;
  if (!qword_254250360)
  {
    result = MEMORY[0x23493E300](&unk_233BDDB0C, &type metadata for FetchPrivateDataRequest.Request.LocalizedStringsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254250360);
  }
  return result;
}

unint64_t sub_233BAA7D8()
{
  unint64_t result;

  result = qword_254250358;
  if (!qword_254250358)
  {
    result = MEMORY[0x23493E300](&unk_233BDDB34, &type metadata for FetchPrivateDataRequest.Request.LocalizedStringsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254250358);
  }
  return result;
}

unint64_t sub_233BAA820()
{
  unint64_t result;

  result = qword_254250340;
  if (!qword_254250340)
  {
    result = MEMORY[0x23493E300](&unk_233BDE04C, &type metadata for FetchPrivateDataRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254250340);
  }
  return result;
}

unint64_t sub_233BAA868()
{
  unint64_t result;

  result = qword_254250338;
  if (!qword_254250338)
  {
    result = MEMORY[0x23493E300](&unk_233BDE074, &type metadata for FetchPrivateDataRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254250338);
  }
  return result;
}

uint64_t sub_233BAA8AC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000015 && a2 == 0x8000000233BE5860 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000233BE5880 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746169636F737361 && a2 == 0xEE00737070416465 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000233BE58A0 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000233BE58C0 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000233BE58E0 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000233BE5900 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x8000000233BE5920 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000233BE5050)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v5 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t sub_233BAAC2C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000015 && a2 == 0x8000000233BE5860 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000233BE5880 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746169636F737361 && a2 == 0xEE00737070416465 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000233BE58A0 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000233BE58C0 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000233BE58E0 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000233BE5900 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6554686372616573 && a2 == 0xEF79726F74697272 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000233BE5050)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v5 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t sub_233BAAFDC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x8000000233BE5940 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000233BE58A0 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000233BE5960 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000233BE58E0 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x8000000233BE5920)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v5 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_233BAB1BC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_233BAB27C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6554686372616573 && a2 == 0xEF79726F74697272;
  if (v2 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000233BE5980 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000233BE59A0 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000233BE59C0 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000233BE59E0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_233BAB498(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 12895 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t CodableAuditToken.auditToken.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t CodableAuditToken.init(auditToken:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t CodableAuditToken.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  __int128 v5;
  void *v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _QWORD v12[6];

  v12[5] = *MEMORY[0x24BDAC8D0];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BD8D5C();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v12, v12[3]);
    sub_233B96BB4();
    sub_233BD8C78();
    v5 = v10;
    v10 = 0u;
    v11 = 0u;
    v6 = (void *)sub_233BD8534();
    objc_msgSend(v6, sel_getBytes_length_, &v10, 32);
    sub_233B71B8C(v5, *((unint64_t *)&v5 + 1));

    v8 = v11;
    v9 = v10;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    *a2 = v9;
    a2[1] = v8;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t CodableAuditToken.encode(to:)(_QWORD *a1)
{
  _OWORD *v1;
  __int128 v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _OWORD v7[2];
  uint64_t v8;
  unint64_t v9;
  _BYTE v10[24];
  uint64_t v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BD8D74();
  v2 = v1[1];
  v7[0] = *v1;
  v7[1] = v2;
  v3 = sub_233BABC00(v7, 32);
  v5 = v4;
  v8 = v3;
  v9 = v4;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v10, v11);
  sub_233B96B70();
  sub_233BD8C84();
  sub_233B71B8C(v3, v5);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

uint64_t sub_233BAB870@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return CodableAuditToken.init(from:)(a1, a2);
}

uint64_t sub_233BAB884(_QWORD *a1)
{
  return CodableAuditToken.encode(to:)(a1);
}

uint64_t static FairPlayPassbookProvisioning.getProvisioningInfo(auditToken:nonce:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[17] = a5;
  v6[18] = a6;
  v6[15] = a3;
  v6[16] = a4;
  v6[13] = a1;
  v6[14] = a2;
  return swift_task_switch();
}

uint64_t sub_233BAB8B8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 144);
  sub_233B71CAC(*(_QWORD *)(v0 + 136), v1);
  if (qword_25424FEB8 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 16) = v6;
  *(_QWORD *)(v0 + 24) = v4;
  *(_QWORD *)(v0 + 32) = v5;
  *(_QWORD *)(v0 + 40) = v2;
  *(_QWORD *)(v0 + 48) = v3;
  *(_QWORD *)(v0 + 56) = v1 | 0x2000000000000000;
  *(_BYTE *)(v0 + 64) = 0;
  *(_QWORD *)(v0 + 96) = v0 + 16;
  sub_233B743E8(v6, v4, v5, v2, v3, v1 | 0x2000000000000000, 0);
  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_256123B78 + dword_256123B78);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v7;
  *v7 = v0;
  v7[1] = sub_233BAB9A8;
  return v9(v0 + 72, v0 + 96, (uint64_t)sub_233B9EFE0, 0);
}

uint64_t sub_233BAB9A8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 160) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_233B7443C(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_BYTE *)(v2 + 64));
  return swift_task_switch();
}

uint64_t sub_233BABA20()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  int v3;

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(unsigned __int8 *)(v0 + 88);
  if (v3 == 4)
  {
    sub_233B71B8C(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144));
    return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(v2, v1);
  }
  else
  {
    type metadata accessor for MarketplaceKitError();
    sub_233B8E4B8();
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_233B7EE40(v2, v1, v3);
    sub_233B71B8C(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_233BABAF8()
{
  uint64_t v0;

  sub_233B7443C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  sub_233B71B8C(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233BABB40(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_233BABC00(_BYTE *__src, uint64_t a2)
{
  uint64_t result;

  if (!a2)
    return 0;
  if (a2 <= 14)
    return sub_233BABB40(__src, &__src[a2]);
  sub_233BD84C8();
  swift_allocObject();
  sub_233BD8498();
  if ((unint64_t)a2 < 0x7FFFFFFF)
    return a2 << 32;
  sub_233BD8528();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

__n128 __swift_memcpy32_4(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for CodableAuditToken(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CodableAuditToken(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CodableAuditToken()
{
  return &type metadata for CodableAuditToken;
}

ValueMetadata *type metadata accessor for FairPlayPassbookProvisioning()
{
  return &type metadata for FairPlayPassbookProvisioning;
}

void sub_233BABD4C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_233BABD84(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_233BABE5C + 4 * byte_233BE0249[a2]))(7365733);
}

uint64_t sub_233BABE5C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 7365733 && v1 == 0xE300000000000000)
    v2 = 1;
  else
    v2 = sub_233BD8C6C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_233BABF90(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_233BABFC4()
{
  sub_233BD881C();
  return swift_bridgeObjectRelease();
}

uint64_t AppInstallRequest.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_233BD8558();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t AppInstallRequest.adp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppInstallRequest() + 20);
  v4 = sub_233BD851C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for AppInstallRequest()
{
  uint64_t result;

  result = qword_256125178;
  if (!qword_256125178)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t AppInstallRequest.oAuthToken.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AppInstallRequest() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppInstallRequest.installVerificationToken.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AppInstallRequest() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppInstallRequest.accountID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AppInstallRequest() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppInstallRequest.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppInstallRequest() + 36);
  v4 = sub_233BD85E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AppInstallRequest.isMarketplaceInstall.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for AppInstallRequest() + 40));
}

uint64_t AppInstallRequest.referrer.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for AppInstallRequest() + 44);
  return sub_233BAC298(v3, a1);
}

uint64_t sub_233BAC298(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t AppInstallRequest.appShareURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for AppInstallRequest() + 48);
  return sub_233BAC298(v3, a1);
}

uint64_t sub_233BAC310(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_233BAC338 + 4 * byte_233BE025B[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_233BAC338()
{
  return 7365733;
}

uint64_t sub_233BAC348()
{
  return 0x6B6F54687475416FLL;
}

unint64_t sub_233BAC364()
{
  return 0xD000000000000014;
}

uint64_t sub_233BAC3B8()
{
  return 0x7265727265666572;
}

uint64_t sub_233BAC3D0()
{
  return 0x6572616853707061;
}

uint64_t sub_233BAC3F0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_233BAC418 + 4 * byte_233BE0264[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_233BAC418()
{
  return 7365733;
}

uint64_t sub_233BAC428()
{
  return 0x6B6F54687475416FLL;
}

unint64_t sub_233BAC444()
{
  return 0xD000000000000014;
}

uint64_t sub_233BAC498()
{
  return 0x7265727265666572;
}

uint64_t sub_233BAC4B0()
{
  return 0x6572616853707061;
}

void sub_233BAC4D0(char *a1)
{
  sub_233BABD4C(*a1);
}

uint64_t sub_233BAC4DC()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_233BD8CFC();
  sub_233BABF90((uint64_t)v3, v1);
  return sub_233BD8D38();
}

void sub_233BAC520(uint64_t a1)
{
  char *v1;

  sub_233BABF90(a1, *v1);
}

uint64_t sub_233BAC528()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_233BD8CFC();
  sub_233BABF90((uint64_t)v3, v1);
  return sub_233BD8D38();
}

uint64_t sub_233BAC568@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_233BAEAB0();
  *a1 = result;
  return result;
}

uint64_t sub_233BAC594@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_233BAC310(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_233BAC5BC()
{
  unsigned __int8 *v0;

  return sub_233BAC3F0(*v0);
}

uint64_t sub_233BAC5C4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_233BAEAB0();
  *a1 = result;
  return result;
}

uint64_t sub_233BAC5E8()
{
  sub_233BAD904();
  return sub_233BD8D8C();
}

uint64_t sub_233BAC610()
{
  sub_233BAD904();
  return sub_233BD8D98();
}

uint64_t AppInstallRequest.init(adp:type:oAuthToken:installVerificationToken:accountID:appShareURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a7;
  v35 = a8;
  v36 = a2;
  v16 = sub_233BD8558();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v18);
  v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_233BD854C();
  sub_233BAC7C0(a10);
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(a9, v20, v16);
  v21 = (int *)type metadata accessor for AppInstallRequest();
  v22 = a9 + v21[5];
  v23 = sub_233BD851C();
  v24 = *(_QWORD *)(v23 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v22, a1, v23);
  v25 = (_QWORD *)(a9 + v21[6]);
  *v25 = a3;
  v25[1] = a4;
  v26 = (_QWORD *)(a9 + v21[7]);
  *v26 = a5;
  v26[1] = a6;
  v27 = (_QWORD *)(a9 + v21[8]);
  v28 = v35;
  *v27 = v34;
  v27[1] = v28;
  v29 = a9 + v21[9];
  v30 = sub_233BD85E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v29, v36, v30);
  *(_BYTE *)(a9 + v21[10]) = 0;
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56);
  v31(a9 + v21[11], 1, 1, v23);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v31)(a9 + v21[12], 1, 1, v23);
}

uint64_t sub_233BAC7C0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_233BAC800@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int *v21;
  uint64_t v22;
  char *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t *v32;
  unint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t *v36;
  unint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  unint64_t v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  uint64_t v48;
  uint64_t v49;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (char *)&v44 - v10;
  v12 = sub_233BD851C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (int *)type metadata accessor for AppInstallRequest();
  v49 = *((_QWORD *)v17 - 1);
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (int *)type metadata accessor for LinkMetadata();
  sub_233BAC298(a1 + v21[10], (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_233B8073C(a1, (uint64_t (*)(_QWORD))type metadata accessor for LinkMetadata);
    sub_233BAC7C0((uint64_t)v11);
    v22 = 1;
  }
  else
  {
    v47 = v8;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v11, v12);
    sub_233BD854C();
    v23 = &v20[v17[5]];
    v46 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    v46(v23, v16, v12);
    v24 = (uint64_t *)(a1 + v21[7]);
    v26 = *v24;
    v25 = v24[1];
    v27 = &v20[v17[6]];
    *(_QWORD *)v27 = v26;
    *((_QWORD *)v27 + 1) = v25;
    v28 = (uint64_t *)(a1 + v21[8]);
    v29 = *v28;
    v30 = v28[1];
    v31 = &v20[v17[7]];
    *(_QWORD *)v31 = v29;
    *((_QWORD *)v31 + 1) = v30;
    v32 = (uint64_t *)(a1 + v21[9]);
    v33 = v32[1];
    v48 = a2;
    if (v33)
    {
      v34 = *v32;
      v44 = v33;
      v45 = v34;
    }
    else
    {
      v44 = 0xE900000000000073;
      v45 = 0x756F6D796E6F6E41;
    }
    v35 = *(void (**)(char *, uint64_t))(v13 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v35(v16, v12);
    v36 = (uint64_t *)&v20[v17[8]];
    v37 = v44;
    *v36 = v45;
    v36[1] = v37;
    v38 = &v20[v17[9]];
    v39 = *MEMORY[0x24BDDABA8];
    v40 = sub_233BD85E8();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 104))(v38, v39, v40);
    v20[v17[10]] = 1;
    v41 = &v20[v17[11]];
    v46(v41, (char *)(a1 + v21[5]), v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v41, 0, 1, v12);
    v42 = (uint64_t)v47;
    sub_233BAC298(a1 + v21[11], (uint64_t)v47);
    sub_233B8073C(a1, (uint64_t (*)(_QWORD))type metadata accessor for LinkMetadata);
    sub_233BAD948(v42, (uint64_t)&v20[v17[12]]);
    a2 = v48;
    sub_233BAEAF8((uint64_t)v20, v48);
    v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v49 + 56))(a2, v22, 1, v17);
}

uint64_t AppInstallRequest.request()()
{
  uint64_t v0;
  _QWORD *v1;

  v1[3] = v0;
  type metadata accessor for AppInstallRequest();
  v1[4] = swift_task_alloc();
  v1[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233BACB8C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  char *v5;

  if (qword_25424FEB8 != -1)
    swift_once();
  v1 = v0[4];
  v2 = v0[5];
  sub_233BAD8C0(v0[3], v2);
  sub_233B74300(&qword_256123D38, (uint64_t (*)(uint64_t))type metadata accessor for AppInstallRequest, (uint64_t)&protocol conformance descriptor for AppInstallRequest);
  sub_233B74300(&qword_256123D40, (uint64_t (*)(uint64_t))type metadata accessor for AppInstallRequest, (uint64_t)&protocol conformance descriptor for AppInstallRequest);
  sub_233BAD8C0(v2, v1);
  v0[2] = v1;
  v5 = (char *)&dword_256123D30 + dword_256123D30;
  v3 = (_QWORD *)swift_task_alloc();
  v0[6] = v3;
  *v3 = v0;
  v3[1] = sub_233BACC8C;
  return ((uint64_t (*)(_QWORD *, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v5)(v0 + 2, sub_233BACDB8, 0);
}

uint64_t sub_233BACC8C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_233B8073C(*(_QWORD *)(v2 + 32), (uint64_t (*)(_QWORD))type metadata accessor for AppInstallRequest);
  return swift_task_switch();
}

uint64_t sub_233BACD00()
{
  uint64_t v0;

  sub_233B8073C(*(_QWORD *)(v0 + 40), (uint64_t (*)(_QWORD))type metadata accessor for AppInstallRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233BACD50()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  sub_233B8073C(*(_QWORD *)(v0 + 32), (uint64_t (*)(_QWORD))type metadata accessor for AppInstallRequest);
  sub_233B8073C(v1, (uint64_t (*)(_QWORD))type metadata accessor for AppInstallRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_233BACDB8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  void *v9;
  _QWORD v10[6];

  v8 = (void *)sub_233BD8534();
  v10[4] = a4;
  v10[5] = a5;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_233BC37F0;
  v10[3] = &block_descriptor_8;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_requestEDPInstallation_reply_, v8, v9);
  _Block_release(v9);

}

uint64_t AppInstallRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561250F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BAD904();
  sub_233BD8D80();
  v21 = 0;
  sub_233BD8558();
  sub_233B74300(&qword_256124CD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_233BD8C30();
  if (!v2)
  {
    v10 = type metadata accessor for AppInstallRequest();
    v20 = 1;
    sub_233BD851C();
    sub_233B74300(&qword_256123860, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    sub_233BD8C30();
    v19 = 2;
    sub_233BD8BE8();
    v18 = 3;
    sub_233BD8BE8();
    v17 = 4;
    sub_233BD8C18();
    v12 = v3 + *(int *)(v10 + 36);
    v16 = 5;
    sub_233BD85E8();
    sub_233B74300(&qword_256125108, (uint64_t (*)(uint64_t))MEMORY[0x24BDDABB0], MEMORY[0x24BDDABB8]);
    sub_233BD8C30();
    v15 = 6;
    sub_233BD8C24();
    v14 = 7;
    sub_233BD8C00();
    v13 = 8;
    sub_233BD8C00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t AppInstallRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  _QWORD v45[2];
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;
  char v67;
  char v68;
  char v69;

  v47 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  v48 = (uint64_t)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v7);
  v49 = (uint64_t)v45 - v8;
  v9 = sub_233BD85E8();
  v50 = *(_QWORD *)(v9 - 8);
  v51 = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_233BD851C();
  v54 = *(_QWORD *)(v13 - 8);
  v55 = v13;
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_233BD8558();
  v56 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125110);
  v21 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52, v22);
  v24 = (char *)v45 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for AppInstallRequest();
  MEMORY[0x24BDAC7A8](v59, v25);
  v57 = a1;
  v58 = (char *)v45 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BAD904();
  v53 = v24;
  v27 = v60;
  sub_233BD8D68();
  if (v27)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
  v46 = v12;
  v60 = v21;
  v69 = 0;
  sub_233B74300(&qword_256124D40, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  sub_233BD8BA0();
  v28 = (uint64_t)v58;
  (*(void (**)(char *, char *))(v56 + 32))(v58, v20);
  v68 = 1;
  v29 = sub_233B74300(&qword_256123870, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
  v30 = v55;
  sub_233BD8BA0();
  v45[1] = v29;
  v31 = (int *)v59;
  (*(void (**)(uint64_t, char *, uint64_t))(v54 + 32))(v28 + *(int *)(v59 + 20), v16, v30);
  v67 = 2;
  v32 = sub_233BD8B58();
  v33 = (uint64_t *)(v28 + v31[6]);
  *v33 = v32;
  v33[1] = v34;
  v66 = 3;
  v35 = sub_233BD8B58();
  v36 = (uint64_t)v57;
  v37 = (uint64_t *)(v28 + v31[7]);
  *v37 = v35;
  v37[1] = v38;
  v65 = 4;
  v39 = sub_233BD8B88();
  v40 = (uint64_t *)(v28 + v31[8]);
  *v40 = v39;
  v40[1] = v41;
  v64 = 5;
  sub_233B74300(&qword_256125118, (uint64_t (*)(uint64_t))MEMORY[0x24BDDABB0], MEMORY[0x24BDDABC0]);
  v42 = v46;
  v43 = v51;
  sub_233BD8BA0();
  (*(void (**)(uint64_t, char *, uint64_t))(v50 + 32))(v28 + v31[9], v42, v43);
  v63 = 6;
  v46 = 0;
  *(_BYTE *)(v28 + v31[10]) = sub_233BD8B94() & 1;
  v62 = 7;
  sub_233BD8B70();
  sub_233BAD948(v49, v28 + v31[11]);
  v61 = 8;
  sub_233BD8B70();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v53, v52);
  sub_233BAD948(v48, v28 + v31[12]);
  sub_233BAD8C0(v28, v47);
  __swift_destroy_boxed_opaque_existential_1(v36);
  return sub_233B8073C(v28, (uint64_t (*)(_QWORD))type metadata accessor for AppInstallRequest);
}

uint64_t sub_233BAD898@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AppInstallRequest.init(from:)(a1, a2);
}

uint64_t sub_233BAD8AC(_QWORD *a1)
{
  return AppInstallRequest.encode(to:)(a1);
}

uint64_t sub_233BAD8C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AppInstallRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_233BAD904()
{
  unint64_t result;

  result = qword_256125100;
  if (!qword_256125100)
  {
    result = MEMORY[0x23493E300](&unk_233BE046C, &type metadata for AppInstallRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125100);
  }
  return result;
}

uint64_t sub_233BAD948(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *initializeBufferWithCopyOfBuffer for AppInstallRequest(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v33 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_233BD8558();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_233BD851C();
    v40 = *(_QWORD *)(v11 - 8);
    v41 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
    v41(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (_QWORD *)((char *)a1 + v12);
    v15 = (_QWORD *)((char *)a2 + v12);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = (_QWORD *)((char *)a1 + v13);
    v18 = (_QWORD *)((char *)a2 + v13);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = a3[8];
    v21 = a3[9];
    v22 = (_QWORD *)((char *)a1 + v20);
    v23 = (_QWORD *)((char *)a2 + v20);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = (char *)a1 + v21;
    v39 = (char *)a2 + v21;
    v26 = sub_233BD85E8();
    v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v27(v25, v39, v26);
    v28 = a3[11];
    *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48);
    if (v31((char *)a2 + v28, 1, v11))
    {
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      v41(v29, v30, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v29, 0, 1, v11);
    }
    v34 = a3[12];
    v35 = (char *)a1 + v34;
    v36 = (char *)a2 + v34;
    if (v31(v36, 1, v11))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      v41(v35, v36, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v35, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t destroy for AppInstallRequest(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  void (*v14)(uint64_t, uint64_t);

  v4 = sub_233BD8558();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = sub_233BD851C();
  v7 = *(_QWORD *)(v6 - 8);
  v14 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v14(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = a1 + a2[9];
  v9 = sub_233BD85E8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = a1 + a2[11];
  v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v11(v10, 1, v6))
    v14(v10, v6);
  v12 = a1 + a2[12];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v11)(v12, 1, v6);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v14)(v12, v6);
  return result;
}

uint64_t initializeWithCopy for AppInstallRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  void *v28;
  const void *v29;
  unsigned int (*v30)(const void *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const void *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(void *, const void *, uint64_t);

  v6 = sub_233BD8558();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_233BD851C();
  v38 = *(_QWORD *)(v10 - 8);
  v39 = *(void (**)(void *, const void *, uint64_t))(v38 + 16);
  v39(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v11);
  v14 = (_QWORD *)(a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = (_QWORD *)(a1 + v12);
  v17 = (_QWORD *)(a2 + v12);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = a3[8];
  v20 = a3[9];
  v21 = (_QWORD *)(a1 + v19);
  v22 = (_QWORD *)(a2 + v19);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v24 = a1 + v20;
  v37 = a2 + v20;
  v25 = sub_233BD85E8();
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26(v24, v37, v25);
  v27 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v28 = (void *)(a1 + v27);
  v29 = (const void *)(a2 + v27);
  v30 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v38 + 48);
  if (v30((const void *)(a2 + v27), 1, v10))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    v39(v28, v29, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v28, 0, 1, v10);
  }
  v32 = a3[12];
  v33 = (void *)(a1 + v32);
  v34 = (const void *)(a2 + v32);
  if (v30(v34, 1, v10))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    v39(v33, v34, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v33, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithCopy for AppInstallRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const void *v28;
  uint64_t (*v29)(const void *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const void *v35;
  int v36;
  int v37;
  uint64_t v38;

  v6 = sub_233BD8558();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_233BD851C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 24);
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[8];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = a3[9];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = sub_233BD85E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v26 = a3[11];
  v27 = (void *)(a1 + v26);
  v28 = (const void *)(a2 + v26);
  v29 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  v30 = v29((const void *)(a1 + v26), 1, v10);
  v31 = v29(v28, 1, v10);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v27, v28, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v27, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v31)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v27, v10);
LABEL_6:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_7;
  }
  v12(v27, v28, v10);
LABEL_7:
  v33 = a3[12];
  v34 = (void *)(a1 + v33);
  v35 = (const void *)(a2 + v33);
  v36 = v29((const void *)(a1 + v33), 1, v10);
  v37 = v29(v35, 1, v10);
  if (!v36)
  {
    if (!v37)
    {
      v12(v34, v35, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v34, v10);
    goto LABEL_12;
  }
  if (v37)
  {
LABEL_12:
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v34, v35, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v34, 0, 1, v10);
  return a1;
}

uint64_t initializeWithTake for AppInstallRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  unsigned int (*v21)(const void *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  uint64_t v26;

  v6 = sub_233BD8558();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_233BD851C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 32);
  v12(v8, v9, v10);
  v13 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  v14 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = sub_233BD85E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  v18 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v19 = (void *)(a1 + v18);
  v20 = (const void *)(a2 + v18);
  v21 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v21((const void *)(a2 + v18), 1, v10))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v12(v19, v20, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v19, 0, 1, v10);
  }
  v23 = a3[12];
  v24 = (void *)(a1 + v23);
  v25 = (const void *)(a2 + v23);
  if (v21(v25, 1, v10))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v12(v24, v25, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v24, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithTake for AppInstallRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const void *v34;
  uint64_t (*v35)(const void *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  const void *v41;
  int v42;
  int v43;
  uint64_t v44;

  v6 = sub_233BD8558();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_233BD851C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  v18 = a3[7];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (uint64_t *)(a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  v23 = a3[8];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (uint64_t *)(a2 + v23);
  v27 = *v25;
  v26 = v25[1];
  *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  v28 = a3[9];
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = sub_233BD85E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 40))(v29, v30, v31);
  v32 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v33 = (void *)(a1 + v32);
  v34 = (const void *)(a2 + v32);
  v35 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  v36 = v35((const void *)(a1 + v32), 1, v10);
  v37 = v35(v34, 1, v10);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v33, v34, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v33, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v37)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v33, v10);
LABEL_6:
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_7;
  }
  v12(v33, v34, v10);
LABEL_7:
  v39 = a3[12];
  v40 = (void *)(a1 + v39);
  v41 = (const void *)(a2 + v39);
  v42 = v35((const void *)(a1 + v39), 1, v10);
  v43 = v35(v41, 1, v10);
  if (!v42)
  {
    if (!v43)
    {
      v12(v40, v41, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v40, v10);
    goto LABEL_12;
  }
  if (v43)
  {
LABEL_12:
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v40, v41, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v40, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppInstallRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233BAE63C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;

  v6 = sub_233BD8558();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_233BD851C();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_12:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v16 = sub_233BD85E8();
    v12 = *(_QWORD *)(v16 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v16;
      v13 = a3[9];
    }
    else
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
      v12 = *(_QWORD *)(v8 - 8);
      v13 = a3[11];
    }
    goto LABEL_12;
  }
  v14 = *(_QWORD *)(a1 + a3[8] + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for AppInstallRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_233BAE740(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v8 = sub_233BD8558();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    result = sub_233BD851C();
    v14 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = result;
      v15 = a4[5];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(a1 + a4[8] + 8) = (a2 - 1);
        return result;
      }
      v16 = sub_233BD85E8();
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[9];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
        v14 = *(_QWORD *)(v10 - 8);
        v15 = a4[11];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_233BAE834()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_233BD8558();
  if (v0 <= 0x3F)
  {
    sub_233BD851C();
    if (v1 <= 0x3F)
    {
      sub_233BD85E8();
      if (v2 <= 0x3F)
      {
        sub_233B714B0();
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t storeEnumTagSinglePayload for AppInstallRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_233BAE958 + 4 * byte_233BE0272[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_233BAE98C + 4 * byte_233BE026D[v4]))();
}

uint64_t sub_233BAE98C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BAE994(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233BAE99CLL);
  return result;
}

uint64_t sub_233BAE9A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233BAE9B0);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_233BAE9B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BAE9BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppInstallRequest.CodingKeys()
{
  return &type metadata for AppInstallRequest.CodingKeys;
}

unint64_t sub_233BAE9DC()
{
  unint64_t result;

  result = qword_2561251D0;
  if (!qword_2561251D0)
  {
    result = MEMORY[0x23493E300](&unk_233BE0444, &type metadata for AppInstallRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561251D0);
  }
  return result;
}

unint64_t sub_233BAEA24()
{
  unint64_t result;

  result = qword_2561251D8;
  if (!qword_2561251D8)
  {
    result = MEMORY[0x23493E300](&unk_233BE037C, &type metadata for AppInstallRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561251D8);
  }
  return result;
}

unint64_t sub_233BAEA6C()
{
  unint64_t result;

  result = qword_2561251E0;
  if (!qword_2561251E0)
  {
    result = MEMORY[0x23493E300](&unk_233BE03A4, &type metadata for AppInstallRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561251E0);
  }
  return result;
}

uint64_t sub_233BAEAB0()
{
  unint64_t v0;

  v0 = sub_233BD8B34();
  swift_bridgeObjectRelease();
  if (v0 >= 9)
    return 9;
  else
    return v0;
}

uint64_t sub_233BAEAF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AppInstallRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t DeveloperApprovalSheetContext.title.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.body.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.firstBulletTitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.firstBulletBody.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.secondBulletTitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.secondBulletBody.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.thirdBulletTitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.thirdBulletBody.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.allowButtonText.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.ignoreButtonText.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 144);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.developerID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.developerName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 176);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.supportURL.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 192);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.passcodeTitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 208);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.passcodeReason.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 224);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.touchIDTitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 240);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperApprovalSheetContext.touchIDReason.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 256);
  swift_bridgeObjectRetain();
  return v1;
}

__n128 DeveloperApprovalSheetContext.init(title:body:firstBulletTitle:firstBulletBody:secondBulletTitle:secondBulletBody:thirdBulletTitle:thirdBulletBody:allowButtonText:ignoreButtonText:developerID:developerName:supportURL:passcodeTitle:passcodeReason:touchIDTitle:touchIDReason:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, __int128 a11, __int128 a12, __int128 a13, __int128 a14, __int128 a15, __int128 a16, __int128 a17, __int128 a18, __int128 a19, __int128 a20,__n128 a21,uint64_t a22,uint64_t a23)
{
  __n128 result;

  result = a21;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = a10;
  *(_OWORD *)(a9 + 80) = a11;
  *(_OWORD *)(a9 + 96) = a12;
  *(_OWORD *)(a9 + 112) = a13;
  *(_OWORD *)(a9 + 128) = a14;
  *(_OWORD *)(a9 + 144) = a15;
  *(_OWORD *)(a9 + 160) = a16;
  *(_OWORD *)(a9 + 176) = a17;
  *(_OWORD *)(a9 + 192) = a18;
  *(_OWORD *)(a9 + 208) = a19;
  *(_OWORD *)(a9 + 224) = a20;
  *(__n128 *)(a9 + 240) = a21;
  *(_QWORD *)(a9 + 256) = a22;
  *(_QWORD *)(a9 + 264) = a23;
  return result;
}

uint64_t sub_233BAEE8C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_233BAEEBC + 4 * byte_233BE04C0[a1]))(0x656C746974, 0xE500000000000000);
}

uint64_t sub_233BAEEBC()
{
  return 2036625250;
}

unint64_t sub_233BAEECC()
{
  return 0xD000000000000010;
}

uint64_t sub_233BAEF84()
{
  return 0x65706F6C65766564;
}

uint64_t sub_233BAEFB8()
{
  return 0x5574726F70707573;
}

uint64_t sub_233BAEFD4()
{
  return 0x65646F6373736170;
}

uint64_t sub_233BAF00C()
{
  return 0x5444496863756F74;
}

uint64_t sub_233BAF02C()
{
  return 0x5244496863756F74;
}

uint64_t sub_233BAF050()
{
  unsigned __int8 *v0;

  return sub_233BAEE8C(*v0);
}

uint64_t sub_233BAF058@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233BB0F80(a1, a2);
  *a3 = result;
  return result;
}

void sub_233BAF07C(_BYTE *a1@<X8>)
{
  *a1 = 17;
}

uint64_t sub_233BAF088()
{
  sub_233BAF5BC();
  return sub_233BD8D8C();
}

uint64_t sub_233BAF0B0()
{
  sub_233BAF5BC();
  return sub_233BD8D98();
}

uint64_t DeveloperApprovalSheetContext.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[32];
  uint64_t v21;
  char v22;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561251E8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1[2];
  v20[30] = v1[3];
  v20[31] = v8;
  v9 = v1[4];
  v20[28] = v1[5];
  v20[29] = v9;
  v10 = v1[6];
  v20[26] = v1[7];
  v20[27] = v10;
  v11 = v1[8];
  v20[24] = v1[9];
  v20[25] = v11;
  v12 = v1[11];
  v20[22] = v1[10];
  v20[23] = v12;
  v13 = v1[13];
  v20[20] = v1[12];
  v20[21] = v13;
  v14 = v1[15];
  v20[18] = v1[14];
  v20[19] = v14;
  v15 = v1[17];
  v20[16] = v1[16];
  v20[17] = v15;
  v16 = v1[18];
  v20[14] = v1[19];
  v20[15] = v16;
  v17 = v1[20];
  v20[12] = v1[21];
  v20[13] = v17;
  v20[11] = v1[22];
  v20[10] = v1[23];
  v20[9] = v1[24];
  v20[8] = v1[25];
  v20[7] = v1[26];
  v20[6] = v1[27];
  v20[5] = v1[28];
  v20[4] = v1[29];
  v20[3] = v1[30];
  v20[2] = v1[31];
  v20[1] = v1[32];
  v20[0] = v1[33];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BAF5BC();
  sub_233BD8D80();
  v22 = 0;
  v18 = v21;
  sub_233BD8C18();
  if (!v18)
  {
    v22 = 1;
    sub_233BD8C18();
    v22 = 2;
    sub_233BD8C18();
    v21 = v4;
    v22 = 3;
    sub_233BD8C18();
    v22 = 4;
    sub_233BD8C18();
    v22 = 5;
    sub_233BD8C18();
    v22 = 6;
    sub_233BD8C18();
    v22 = 7;
    sub_233BD8C18();
    v22 = 8;
    sub_233BD8C18();
    v22 = 9;
    sub_233BD8C18();
    v22 = 10;
    sub_233BD8C18();
    v22 = 11;
    sub_233BD8C18();
    v22 = 12;
    sub_233BD8BE8();
    v22 = 13;
    sub_233BD8C18();
    v22 = 14;
    sub_233BD8C18();
    v22 = 15;
    sub_233BD8C18();
    v22 = 16;
    sub_233BD8C18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

unint64_t sub_233BAF5BC()
{
  unint64_t result;

  result = qword_2561251F0;
  if (!qword_2561251F0)
  {
    result = MEMORY[0x23493E300](&unk_233BE0654, &type metadata for DeveloperApprovalSheetContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561251F0);
  }
  return result;
}

uint64_t DeveloperApprovalSheetContext.init(from:)@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD v87[34];
  _QWORD v88[35];
  char v89;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561251F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[3];
  v86 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_233BAF5BC();
  sub_233BD8D68();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v86);
  v77 = a2;
  LOBYTE(v88[0]) = 0;
  v12 = sub_233BD8B88();
  v14 = v13;
  LOBYTE(v88[0]) = 1;
  swift_bridgeObjectRetain();
  v76 = sub_233BD8B88();
  LOBYTE(v88[0]) = 2;
  v16 = v15;
  swift_bridgeObjectRetain();
  v17 = sub_233BD8B88();
  v85 = v16;
  v75 = v17;
  LOBYTE(v88[0]) = 3;
  v19 = v18;
  swift_bridgeObjectRetain();
  v20 = sub_233BD8B88();
  v84 = v19;
  v74 = v20;
  LOBYTE(v88[0]) = 4;
  v22 = v21;
  swift_bridgeObjectRetain();
  v23 = sub_233BD8B88();
  v83 = v22;
  v73 = v23;
  LOBYTE(v88[0]) = 5;
  v25 = v24;
  swift_bridgeObjectRetain();
  v26 = sub_233BD8B88();
  v82 = v25;
  v72 = v26;
  LOBYTE(v88[0]) = 6;
  v28 = v27;
  swift_bridgeObjectRetain();
  v29 = sub_233BD8B88();
  v81 = v28;
  v71 = v29;
  LOBYTE(v88[0]) = 7;
  v31 = v30;
  swift_bridgeObjectRetain();
  v32 = sub_233BD8B88();
  v80 = v31;
  v70 = v32;
  LOBYTE(v88[0]) = 8;
  v34 = v33;
  swift_bridgeObjectRetain();
  v69 = sub_233BD8B88();
  v79 = v34;
  LOBYTE(v88[0]) = 9;
  v78 = v35;
  swift_bridgeObjectRetain();
  v67 = sub_233BD8B88();
  v68 = v36;
  LOBYTE(v88[0]) = 10;
  swift_bridgeObjectRetain();
  v65 = sub_233BD8B88();
  v66 = v37;
  LOBYTE(v88[0]) = 11;
  swift_bridgeObjectRetain();
  v63 = sub_233BD8B88();
  v64 = v38;
  LOBYTE(v88[0]) = 12;
  swift_bridgeObjectRetain();
  v60 = sub_233BD8B58();
  v62 = v39;
  LOBYTE(v88[0]) = 13;
  swift_bridgeObjectRetain();
  v57 = sub_233BD8B88();
  v59 = v40;
  v61 = 0;
  LOBYTE(v88[0]) = 14;
  swift_bridgeObjectRetain();
  v41 = v61;
  v56 = sub_233BD8B88();
  v58 = v42;
  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v86);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (!v61)
      return swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v88[0]) = 15;
    swift_bridgeObjectRetain();
    v55 = sub_233BD8B88();
    v44 = v43;
    v89 = 16;
    swift_bridgeObjectRetain();
    v45 = sub_233BD8B88();
    v54 = v46;
    v47 = v45;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v87[0] = v12;
    v87[1] = v14;
    v87[2] = v76;
    v87[3] = v85;
    v87[4] = v75;
    v87[5] = v84;
    v87[6] = v74;
    v87[7] = v83;
    v87[8] = v73;
    v87[9] = v82;
    v87[10] = v72;
    v87[11] = v81;
    v87[12] = v71;
    v87[13] = v80;
    v87[14] = v70;
    v87[15] = v79;
    v87[16] = v69;
    v87[17] = v78;
    v87[18] = v67;
    v87[19] = v68;
    v87[20] = v65;
    v87[21] = v66;
    v87[22] = v63;
    v87[23] = v64;
    v87[24] = v60;
    v87[25] = v62;
    v87[26] = v57;
    v87[27] = v59;
    v87[28] = v56;
    v87[29] = v58;
    v87[30] = v55;
    v87[31] = v44;
    v53 = v47;
    v87[32] = v47;
    v87[33] = v54;
    sub_233BB0470((uint64_t)v87);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v48 = v64;
    swift_bridgeObjectRelease();
    v49 = v62;
    swift_bridgeObjectRelease();
    v50 = v59;
    swift_bridgeObjectRelease();
    v51 = v58;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    memcpy(v77, v87, 0x110uLL);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v86);
    v88[0] = v12;
    v88[1] = v14;
    v88[2] = v76;
    v88[3] = v85;
    v88[4] = v75;
    v88[5] = v84;
    v88[6] = v74;
    v88[7] = v83;
    v88[8] = v73;
    v88[9] = v82;
    v88[10] = v72;
    v88[11] = v81;
    v88[12] = v71;
    v88[13] = v80;
    v88[14] = v70;
    v88[15] = v79;
    v88[16] = v69;
    v88[17] = v78;
    v88[18] = v67;
    v88[19] = v68;
    v88[20] = v65;
    v88[21] = v66;
    v88[22] = v63;
    v88[23] = v48;
    v88[24] = v60;
    v88[25] = v49;
    v88[26] = v57;
    v88[27] = v50;
    v88[28] = v56;
    v88[29] = v51;
    v88[30] = v55;
    v88[31] = v44;
    v88[32] = v53;
    v88[33] = v54;
    return sub_233BB0590((uint64_t)v88);
  }
  return result;
}

uint64_t sub_233BB0470(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_233BB0590(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_233BB06B0@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return DeveloperApprovalSheetContext.init(from:)(a1, a2);
}

uint64_t sub_233BB06C4(_QWORD *a1)
{
  return DeveloperApprovalSheetContext.encode(to:)(a1);
}

uint64_t destroy for DeveloperApprovalSheetContext()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for DeveloperApprovalSheetContext(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  v11 = a2[17];
  a1[16] = a2[16];
  a1[17] = v11;
  v12 = a2[19];
  a1[18] = a2[18];
  a1[19] = v12;
  v13 = a2[21];
  a1[20] = a2[20];
  a1[21] = v13;
  v14 = a2[23];
  a1[22] = a2[22];
  a1[23] = v14;
  v15 = a2[25];
  a1[24] = a2[24];
  a1[25] = v15;
  v16 = a2[27];
  a1[26] = a2[26];
  a1[27] = v16;
  v17 = a2[29];
  a1[28] = a2[28];
  a1[29] = v17;
  v18 = a2[31];
  a1[30] = a2[30];
  a1[31] = v18;
  v19 = a2[33];
  a1[32] = a2[32];
  a1[33] = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DeveloperApprovalSheetContext(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  a1[19] = a2[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[20] = a2[20];
  a1[21] = a2[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[22] = a2[22];
  a1[23] = a2[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[24] = a2[24];
  a1[25] = a2[25];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[26] = a2[26];
  a1[27] = a2[27];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[28] = a2[28];
  a1[29] = a2[29];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[30] = a2[30];
  a1[31] = a2[31];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[32] = a2[32];
  a1[33] = a2[33];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy272_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x110uLL);
}

_QWORD *assignWithTake for DeveloperApprovalSheetContext(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_bridgeObjectRelease();
  v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  swift_bridgeObjectRelease();
  v13 = a2[19];
  a1[18] = a2[18];
  a1[19] = v13;
  swift_bridgeObjectRelease();
  v14 = a2[21];
  a1[20] = a2[20];
  a1[21] = v14;
  swift_bridgeObjectRelease();
  v15 = a2[23];
  a1[22] = a2[22];
  a1[23] = v15;
  swift_bridgeObjectRelease();
  v16 = a2[25];
  a1[24] = a2[24];
  a1[25] = v16;
  swift_bridgeObjectRelease();
  v17 = a2[27];
  a1[26] = a2[26];
  a1[27] = v17;
  swift_bridgeObjectRelease();
  v18 = a2[29];
  a1[28] = a2[28];
  a1[29] = v18;
  swift_bridgeObjectRelease();
  v19 = a2[31];
  a1[30] = a2[30];
  a1[31] = v19;
  swift_bridgeObjectRelease();
  v20 = a2[33];
  a1[32] = a2[32];
  a1[33] = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DeveloperApprovalSheetContext(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 272))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DeveloperApprovalSheetContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 264) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 272) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 272) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DeveloperApprovalSheetContext()
{
  return &type metadata for DeveloperApprovalSheetContext;
}

uint64_t getEnumTagSinglePayload for DeveloperApprovalSheetContext.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF0)
    goto LABEL_17;
  if (a2 + 16 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 16) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 16;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 16;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 16;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x11;
  v8 = v6 - 17;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DeveloperApprovalSheetContext.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 16 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 16) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF0)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEF)
    return ((uint64_t (*)(void))((char *)&loc_233BB0E28 + 4 * byte_233BE04D6[v4]))();
  *a1 = a2 + 16;
  return ((uint64_t (*)(void))((char *)sub_233BB0E5C + 4 * byte_233BE04D1[v4]))();
}

uint64_t sub_233BB0E5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BB0E64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233BB0E6CLL);
  return result;
}

uint64_t sub_233BB0E78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233BB0E80);
  *(_BYTE *)result = a2 + 16;
  return result;
}

uint64_t sub_233BB0E84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BB0E8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DeveloperApprovalSheetContext.CodingKeys()
{
  return &type metadata for DeveloperApprovalSheetContext.CodingKeys;
}

unint64_t sub_233BB0EAC()
{
  unint64_t result;

  result = qword_256125200;
  if (!qword_256125200)
  {
    result = MEMORY[0x23493E300](&unk_233BE062C, &type metadata for DeveloperApprovalSheetContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125200);
  }
  return result;
}

unint64_t sub_233BB0EF4()
{
  unint64_t result;

  result = qword_256125208;
  if (!qword_256125208)
  {
    result = MEMORY[0x23493E300](&unk_233BE059C, &type metadata for DeveloperApprovalSheetContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125208);
  }
  return result;
}

unint64_t sub_233BB0F3C()
{
  unint64_t result;

  result = qword_256125210;
  if (!qword_256125210)
  {
    result = MEMORY[0x23493E300](&unk_233BE05C4, &type metadata for DeveloperApprovalSheetContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125210);
  }
  return result;
}

uint64_t sub_233BB0F80(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 2036625250 && a2 == 0xE400000000000000 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000233BE5A00 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C75427473726966 && a2 == 0xEF79646F4274656CLL || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000233BE5A20 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000233BE5A40 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000233BE5A60 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6C75426472696874 && a2 == 0xEF79646F4274656CLL || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x747542776F6C6C61 && a2 == 0xEF747865546E6F74 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000233BE5A80 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x65706F6C65766564 && a2 == 0xEB00000000444972 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x65706F6C65766564 && a2 == 0xED0000656D614E72 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x5574726F70707573 && a2 == 0xEA00000000004C52 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x65646F6373736170 && a2 == 0xED0000656C746954 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x65646F6373736170 && a2 == 0xEE006E6F73616552 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x5444496863756F74 && a2 == 0xEC000000656C7469 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x5244496863756F74 && a2 == 0xED00006E6F736165)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else
  {
    v6 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 16;
    else
      return 17;
  }
}

uint64_t sub_233BB1854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *aBlock)
{
  _QWORD *v6;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v6[2] = _Block_copy(aBlock);
  v12 = a5;
  v13 = sub_233BD8540();
  v15 = v14;

  v6[3] = v13;
  v6[4] = v15;
  v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_256125288
                                                                                     + dword_256125288);
  v16 = (_QWORD *)swift_task_alloc();
  v6[5] = v16;
  *v16 = v6;
  v16[1] = sub_233BB191C;
  return v18(a1, a2, a3, a4, v13, v15);
}

uint64_t sub_233BB191C(uint64_t a1, unint64_t a2)
{
  void *v2;
  uint64_t *v3;
  void *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void (**v11)(_QWORD, _QWORD, _QWORD);

  v4 = v2;
  v7 = *v3;
  swift_task_dealloc();
  sub_233B71B8C(*(_QWORD *)(v7 + 24), *(_QWORD *)(v7 + 32));
  if (v4)
  {
    v8 = sub_233BD84F8();

    v9 = 0;
    v10 = (void *)v8;
  }
  else
  {
    v9 = sub_233BD8534();
    sub_233B71B8C(a1, a2);
    v8 = 0;
    v10 = (void *)v9;
  }
  v11 = *(void (***)(_QWORD, _QWORD, _QWORD))(v7 + 16);
  v11[2](v11, v9, v8);

  _Block_release(v11);
  return (*(uint64_t (**)(void))(v7 + 8))();
}

FairPlayPassbookProvisioningObjC __swiftcall FairPlayPassbookProvisioningObjC.init()()
{
  return (FairPlayPassbookProvisioningObjC)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

id FairPlayPassbookProvisioningObjC.init()()
{
  objc_super v1;

  v1.super_class = (Class)FairPlayPassbookProvisioningObjC;
  return objc_msgSendSuper2(&v1, sel_init);
}

unint64_t type metadata accessor for FairPlayPassbookProvisioningObjC()
{
  unint64_t result;

  result = qword_256125240;
  if (!qword_256125240)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256125240);
  }
  return result;
}

uint64_t sub_233BB1AB8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 56));
  return swift_deallocObject();
}

uint64_t sub_233BB1AE4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  _QWORD *v8;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v6 = (void *)v0[6];
  v7 = (void *)v0[7];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v8;
  *v8 = v1;
  v8[1] = sub_233BB2038;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void *, void *))((char *)&dword_256125248
                                                                                     + dword_256125248))(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_233BB1B78(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_233BB2038;
  return v6();
}

uint64_t sub_233BB1BD0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_233BB2038;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_256125258 + dword_256125258))(v2, v3, v4);
}

uint64_t sub_233BB1C48(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_233BB2038;
  return v7();
}

uint64_t objectdestroy_2Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_233BB1CCC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_233B71C64;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_256125268 + dword_256125268))(a1, v4, v5, v6);
}

uint64_t sub_233BB1D50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_233BD88DC();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_233BD88D0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_233BB1E94(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_233BD8888();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_233BB1E94(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123A58);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_233BB1ED4(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_233BB1F38;
  return v6(a1);
}

uint64_t sub_233BB1F38()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_233BB1F84()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_233BB1FA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_233B71C64;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_256125278 + dword_256125278))(a1, v4);
}

uint64_t sub_233BB2018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[17] = a5;
  v6[18] = a6;
  v6[15] = a3;
  v6[16] = a4;
  v6[13] = a1;
  v6[14] = a2;
  return swift_task_switch();
}

uint64_t UpdateMetadata.bundleID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UpdateMetadata.bundleVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UpdateMetadata.itemID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UpdateMetadata.shortVersionString.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UpdateMetadata.init(bundleID:bundleVersion:itemID:shortVersionString:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  return result;
}

uint64_t sub_233BB2100()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_233BB2130 + 4 * byte_233BE06A4[*v0]))(0x4449656C646E7562, 0xE800000000000000);
}

uint64_t sub_233BB2130()
{
  return 0x6556656C646E7562;
}

uint64_t sub_233BB2154()
{
  return 0x44496D657469;
}

unint64_t sub_233BB2168()
{
  return 0xD000000000000012;
}

uint64_t sub_233BB2184@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233BB2AE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233BB21A8()
{
  sub_233BB23A0();
  return sub_233BD8D8C();
}

uint64_t sub_233BB21D0()
{
  sub_233BB23A0();
  return sub_233BD8D98();
}

uint64_t UpdateMetadata.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[8];
  char v14;
  char v15;
  char v16;
  char v17;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125290);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1[2];
  v13[5] = v1[3];
  v13[6] = v8;
  v9 = v1[4];
  v13[3] = v1[5];
  v13[4] = v9;
  v10 = v1[6];
  v13[1] = v1[7];
  v13[2] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BB23A0();
  sub_233BD8D80();
  v17 = 0;
  v11 = v13[7];
  sub_233BD8C18();
  if (!v11)
  {
    v16 = 1;
    sub_233BD8C18();
    v15 = 2;
    sub_233BD8C18();
    v14 = 3;
    sub_233BD8C18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

unint64_t sub_233BB23A0()
{
  unint64_t result;

  result = qword_256125298;
  if (!qword_256125298)
  {
    result = MEMORY[0x23493E300](&unk_233BE07EC, &type metadata for UpdateMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125298);
  }
  return result;
}

uint64_t UpdateMetadata.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  char v33;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561252A0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BB23A0();
  sub_233BD8D68();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v33 = 0;
  v10 = sub_233BD8B88();
  v12 = v11;
  v28 = v10;
  v32 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_233BD8B88();
  v29 = v14;
  v27 = v13;
  v31 = 2;
  swift_bridgeObjectRetain();
  v25 = sub_233BD8B88();
  v26 = v15;
  v30 = 3;
  swift_bridgeObjectRetain();
  v16 = sub_233BD8B88();
  v19 = v18;
  v20 = *(void (**)(char *, uint64_t))(v6 + 8);
  v21 = v16;
  v20(v9, v5);
  swift_bridgeObjectRetain();
  v22 = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a2 = v28;
  a2[1] = v12;
  v23 = v26;
  a2[2] = v27;
  a2[3] = v22;
  a2[4] = v25;
  a2[5] = v23;
  a2[6] = v21;
  a2[7] = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_233BB26B4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return UpdateMetadata.init(from:)(a1, a2);
}

uint64_t sub_233BB26C8(_QWORD *a1)
{
  return UpdateMetadata.encode(to:)(a1);
}

uint64_t destroy for UpdateMetadata()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for UpdateMetadata(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for UpdateMetadata(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_QWORD *assignWithTake for UpdateMetadata(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UpdateMetadata(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UpdateMetadata(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UpdateMetadata()
{
  return &type metadata for UpdateMetadata;
}

uint64_t storeEnumTagSinglePayload for UpdateMetadata.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_233BB2990 + 4 * byte_233BE06AD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_233BB29C4 + 4 * byte_233BE06A8[v4]))();
}

uint64_t sub_233BB29C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BB29CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233BB29D4);
  return result;
}

uint64_t sub_233BB29E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233BB29E8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_233BB29EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BB29F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UpdateMetadata.CodingKeys()
{
  return &type metadata for UpdateMetadata.CodingKeys;
}

unint64_t sub_233BB2A14()
{
  unint64_t result;

  result = qword_2561252A8;
  if (!qword_2561252A8)
  {
    result = MEMORY[0x23493E300](&unk_233BE07C4, &type metadata for UpdateMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561252A8);
  }
  return result;
}

unint64_t sub_233BB2A5C()
{
  unint64_t result;

  result = qword_2561252B0;
  if (!qword_2561252B0)
  {
    result = MEMORY[0x23493E300](&unk_233BE0734, &type metadata for UpdateMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561252B0);
  }
  return result;
}

unint64_t sub_233BB2AA4()
{
  unint64_t result;

  result = qword_2561252B8;
  if (!qword_2561252B8)
  {
    result = MEMORY[0x23493E300](&unk_233BE075C, &type metadata for UpdateMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561252B8);
  }
  return result;
}

uint64_t sub_233BB2AE8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4449656C646E7562 && a2 == 0xE800000000000000;
  if (v2 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6556656C646E7562 && a2 == 0xED00006E6F697372 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x44496D657469 && a2 == 0xE600000000000000 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000233BE5B10)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

void MarketplaceKitError.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254250060);
  MEMORY[0x24BDAC7A8](v1, v2);
  v3 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_233BB31EC(v0, (uint64_t)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (char *)&loc_233BB2D80 + dword_233BB315C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_233BB2D90()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v0;
  *(_QWORD *)(v1 - 80) = 0;
  *(_QWORD *)(v1 - 72) = 0xE000000000000000;
  sub_233BD8A8C();
  v3 = *(_QWORD *)(v1 - 72);
  *(_QWORD *)(v1 - 80) = *(_QWORD *)(v1 - 80);
  *(_QWORD *)(v1 - 72) = v3;
  sub_233BD8828();
  *(_QWORD *)(v1 - 88) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2561252C0);
  sub_233BB3230();
  sub_233BD87E0();
  swift_bridgeObjectRelease();
  sub_233BD8828();
  swift_bridgeObjectRelease();
  return *(_QWORD *)(v1 - 80);
}

uint64_t type metadata accessor for MarketplaceKitError()
{
  uint64_t result;

  result = qword_25424FFE0;
  if (!qword_25424FFE0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_233BB31EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MarketplaceKitError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_233BB3230()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2561252C8;
  if (!qword_2561252C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2561252C0);
    v2 = sub_233BB67E8((unint64_t *)&qword_2561252D0, &qword_25424FDD0, MEMORY[0x24BEE12B0]);
    result = MEMORY[0x23493E300](MEMORY[0x24BEE2598], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2561252C8);
  }
  return result;
}

uint64_t sub_233BB32AC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_233BB32E0 + 4 * byte_233BE0840[a1]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

unint64_t sub_233BB32E0()
{
  return 0xD000000000000013;
}

uint64_t sub_233BB3508()
{
  sub_233BB4EA0();
  return sub_233BD8D8C();
}

uint64_t sub_233BB3530()
{
  sub_233BB4EA0();
  return sub_233BD8D98();
}

uint64_t sub_233BB3558()
{
  sub_233BB4D08();
  return sub_233BD8D8C();
}

uint64_t sub_233BB3580()
{
  sub_233BB4D08();
  return sub_233BD8D98();
}

uint64_t sub_233BB35A8()
{
  unsigned __int8 *v0;

  return sub_233BB32AC(*v0);
}

uint64_t sub_233BB35B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233BB7EA4(a1, a2);
  *a3 = result;
  return result;
}

void sub_233BB35D4(_BYTE *a1@<X8>)
{
  *a1 = 21;
}

uint64_t sub_233BB35E0()
{
  sub_233BB4B70();
  return sub_233BD8D8C();
}

uint64_t sub_233BB3608()
{
  sub_233BB4B70();
  return sub_233BD8D98();
}

uint64_t sub_233BB3630()
{
  sub_233BB4D4C();
  return sub_233BD8D8C();
}

uint64_t sub_233BB3658()
{
  sub_233BB4D4C();
  return sub_233BD8D98();
}

uint64_t sub_233BB3680()
{
  sub_233BB4FB0();
  return sub_233BD8D8C();
}

uint64_t sub_233BB36A8()
{
  sub_233BB4FB0();
  return sub_233BD8D98();
}

uint64_t sub_233BB36D0()
{
  sub_233BB4FF4();
  return sub_233BD8D8C();
}

uint64_t sub_233BB36F8()
{
  sub_233BB4FF4();
  return sub_233BD8D98();
}

uint64_t sub_233BB3720()
{
  sub_233BB4F28();
  return sub_233BD8D8C();
}

uint64_t sub_233BB3748()
{
  sub_233BB4F28();
  return sub_233BD8D98();
}

uint64_t sub_233BB3770()
{
  sub_233BB4D90();
  return sub_233BD8D8C();
}

uint64_t sub_233BB3798()
{
  sub_233BB4D90();
  return sub_233BD8D98();
}

uint64_t sub_233BB37C0()
{
  sub_233BB4DD4();
  return sub_233BD8D8C();
}

uint64_t sub_233BB37E8()
{
  sub_233BB4DD4();
  return sub_233BD8D98();
}

uint64_t sub_233BB3810()
{
  sub_233BB4C3C();
  return sub_233BD8D8C();
}

uint64_t sub_233BB3838()
{
  sub_233BB4C3C();
  return sub_233BD8D98();
}

uint64_t sub_233BB3860()
{
  sub_233BB4E5C();
  return sub_233BD8D8C();
}

uint64_t sub_233BB3888()
{
  sub_233BB4E5C();
  return sub_233BD8D98();
}

uint64_t sub_233BB38B0()
{
  sub_233BB4BF8();
  return sub_233BD8D8C();
}

uint64_t sub_233BB38D8()
{
  sub_233BB4BF8();
  return sub_233BD8D98();
}

uint64_t sub_233BB3900()
{
  sub_233BB5038();
  return sub_233BD8D8C();
}

uint64_t sub_233BB3928()
{
  sub_233BB5038();
  return sub_233BD8D98();
}

uint64_t sub_233BB3950()
{
  sub_233BB4CC4();
  return sub_233BD8D8C();
}

uint64_t sub_233BB3978()
{
  sub_233BB4CC4();
  return sub_233BD8D98();
}

uint64_t sub_233BB39A0()
{
  sub_233BB50C0();
  return sub_233BD8D8C();
}

uint64_t sub_233BB39C8()
{
  sub_233BB50C0();
  return sub_233BD8D98();
}

uint64_t sub_233BB39F0()
{
  sub_233BB4BB4();
  return sub_233BD8D8C();
}

uint64_t sub_233BB3A18()
{
  sub_233BB4BB4();
  return sub_233BD8D98();
}

uint64_t sub_233BB3A40()
{
  sub_233BB4E18();
  return sub_233BD8D8C();
}

uint64_t sub_233BB3A68()
{
  sub_233BB4E18();
  return sub_233BD8D98();
}

uint64_t sub_233BB3A90()
{
  sub_233BB4EE4();
  return sub_233BD8D8C();
}

uint64_t sub_233BB3AB8()
{
  sub_233BB4EE4();
  return sub_233BD8D98();
}

uint64_t sub_233BB3AE0()
{
  sub_233BB4C80();
  return sub_233BD8D8C();
}

uint64_t sub_233BB3B08()
{
  sub_233BB4C80();
  return sub_233BD8D98();
}

uint64_t sub_233BB3B30()
{
  sub_233BB4F6C();
  return sub_233BD8D8C();
}

uint64_t sub_233BB3B58()
{
  sub_233BB4F6C();
  return sub_233BD8D98();
}

uint64_t sub_233BB3B80()
{
  sub_233BB5104();
  return sub_233BD8D8C();
}

uint64_t sub_233BB3BA8()
{
  sub_233BB5104();
  return sub_233BD8D98();
}

uint64_t sub_233BB3BD0()
{
  sub_233BB507C();
  return sub_233BD8D8C();
}

uint64_t sub_233BB3BF8()
{
  sub_233BB507C();
  return sub_233BD8D98();
}

void MarketplaceKitError.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  _QWORD v59[4];
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561252D8);
  v118 = *(_QWORD *)(v2 - 8);
  v119 = v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  v117 = (char *)v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561252E0);
  v115 = *(_QWORD *)(v5 - 8);
  v116 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v114 = (char *)v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561252E8);
  v112 = *(_QWORD *)(v8 - 8);
  v113 = v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v111 = (char *)v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561252F0);
  v109 = *(_QWORD *)(v11 - 8);
  v110 = v11;
  MEMORY[0x24BDAC7A8](v11, v12);
  v108 = (char *)v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561252F8);
  v106 = *(_QWORD *)(v14 - 8);
  v107 = v14;
  MEMORY[0x24BDAC7A8](v14, v15);
  v105 = (char *)v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125300);
  v103 = *(_QWORD *)(v104 - 8);
  MEMORY[0x24BDAC7A8](v104, v17);
  v102 = (char *)v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125308);
  v100 = *(_QWORD *)(v101 - 8);
  MEMORY[0x24BDAC7A8](v101, v19);
  v99 = (char *)v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125310);
  v97 = *(_QWORD *)(v98 - 8);
  MEMORY[0x24BDAC7A8](v98, v21);
  v96 = (char *)v59 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125318);
  v94 = *(_QWORD *)(v95 - 8);
  MEMORY[0x24BDAC7A8](v95, v23);
  v93 = (char *)v59 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125320);
  v91 = *(_QWORD *)(v92 - 8);
  MEMORY[0x24BDAC7A8](v92, v25);
  v90 = (char *)v59 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125328);
  v88 = *(_QWORD *)(v89 - 8);
  MEMORY[0x24BDAC7A8](v89, v27);
  v87 = (char *)v59 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125330);
  v84 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86, v29);
  v81 = (char *)v59 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125338);
  v76 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78, v31);
  v75 = (char *)v59 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125340);
  v83 = *(_QWORD *)(v85 - 8);
  MEMORY[0x24BDAC7A8](v85, v33);
  v80 = (char *)v59 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_254250060);
  v79 = *(_QWORD *)(v82 - 8);
  MEMORY[0x24BDAC7A8](v82, v35);
  v77 = (char *)v59 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125348);
  v73 = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74, v37);
  v72 = (char *)v59 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125350);
  v70 = *(_QWORD *)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71, v39);
  v69 = (char *)v59 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125358);
  v66 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68, v41);
  v64 = (char *)v59 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125360);
  v65 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67, v43);
  v63 = (char *)v59 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125368);
  v59[2] = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60, v45);
  v59[1] = (char *)v59 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125370);
  v61 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62, v47);
  v59[3] = (char *)v59 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125378);
  MEMORY[0x24BDAC7A8](v49, v50);
  v51 = type metadata accessor for MarketplaceKitError();
  MEMORY[0x24BDAC7A8](v51, v52);
  v54 = (char *)v59 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125380);
  v120 = *(_QWORD *)(v122 - 8);
  MEMORY[0x24BDAC7A8](v122, v55);
  v57 = (char *)v59 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BB4B70();
  v121 = v57;
  sub_233BD8D80();
  sub_233BB31EC(v123, (uint64_t)v54);
  v58 = (char *)sub_233BB43A8 + 4 * word_233BE0856[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_233BB43A8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *v0;
  *(_BYTE *)(v1 - 72) = 1;
  sub_233BB50C0();
  v3 = *(_QWORD *)(v1 - 616);
  v5 = *(_QWORD *)(v1 - 120);
  v4 = *(_QWORD *)(v1 - 112);
  sub_233BD8BDC();
  *(_QWORD *)(v1 - 72) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25424FDD0);
  sub_233B8D1CC(&qword_25424FCF0, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
  v6 = *(_QWORD *)(v1 - 592);
  sub_233BD8C30();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 600) + 8))(v3, v6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 128) + 8))(v5, v4);
  return swift_bridgeObjectRelease();
}

unint64_t sub_233BB4B70()
{
  unint64_t result;

  result = qword_256125388;
  if (!qword_256125388)
  {
    result = MEMORY[0x23493E300](&unk_233BE1C4C, &type metadata for MarketplaceKitError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125388);
  }
  return result;
}

unint64_t sub_233BB4BB4()
{
  unint64_t result;

  result = qword_256125390;
  if (!qword_256125390)
  {
    result = MEMORY[0x23493E300](&unk_233BE1BFC, &type metadata for MarketplaceKitError.MissingInstallVerificationTokenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125390);
  }
  return result;
}

unint64_t sub_233BB4BF8()
{
  unint64_t result;

  result = qword_256125398;
  if (!qword_256125398)
  {
    result = MEMORY[0x23493E300](&unk_233BE1BAC, &type metadata for MarketplaceKitError.InvalidURLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125398);
  }
  return result;
}

unint64_t sub_233BB4C3C()
{
  unint64_t result;

  result = qword_2561253A0;
  if (!qword_2561253A0)
  {
    result = MEMORY[0x23493E300](&unk_233BE1B5C, &type metadata for MarketplaceKitError.InvalidLicenseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561253A0);
  }
  return result;
}

unint64_t sub_233BB4C80()
{
  unint64_t result;

  result = qword_2561253A8;
  if (!qword_2561253A8)
  {
    result = MEMORY[0x23493E300](&unk_233BE1B0C, &type metadata for MarketplaceKitError.OauthTokenErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561253A8);
  }
  return result;
}

unint64_t sub_233BB4CC4()
{
  unint64_t result;

  result = qword_2561253B0;
  if (!qword_2561253B0)
  {
    result = MEMORY[0x23493E300](&unk_233BE1ABC, &type metadata for MarketplaceKitError.MismatchedInstallTypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561253B0);
  }
  return result;
}

unint64_t sub_233BB4D08()
{
  unint64_t result;

  result = qword_2561253B8;
  if (!qword_2561253B8)
  {
    result = MEMORY[0x23493E300](&unk_233BE1A6C, &type metadata for MarketplaceKitError.CancelledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561253B8);
  }
  return result;
}

unint64_t sub_233BB4D4C()
{
  unint64_t result;

  result = qword_2561253C0;
  if (!qword_2561253C0)
  {
    result = MEMORY[0x23493E300](&unk_233BE1A1C, &type metadata for MarketplaceKitError.FeatureUnavailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561253C0);
  }
  return result;
}

unint64_t sub_233BB4D90()
{
  unint64_t result;

  result = qword_2561253C8;
  if (!qword_2561253C8)
  {
    result = MEMORY[0x23493E300](&unk_233BE19CC, &type metadata for MarketplaceKitError.InvalidAlternativeDistributionPackageSignatureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561253C8);
  }
  return result;
}

unint64_t sub_233BB4DD4()
{
  unint64_t result;

  result = qword_2561253D0;
  if (!qword_2561253D0)
  {
    result = MEMORY[0x23493E300](&unk_233BE197C, &type metadata for MarketplaceKitError.InvalidAlternativeDistributionPackageURLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561253D0);
  }
  return result;
}

unint64_t sub_233BB4E18()
{
  unint64_t result;

  result = qword_2561253D8;
  if (!qword_2561253D8)
  {
    result = MEMORY[0x23493E300](&unk_233BE192C, &type metadata for MarketplaceKitError.NetworkErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561253D8);
  }
  return result;
}

unint64_t sub_233BB4E5C()
{
  unint64_t result;

  result = qword_2561253E0;
  if (!qword_2561253E0)
  {
    result = MEMORY[0x23493E300](&unk_233BE18DC, &type metadata for MarketplaceKitError.InvalidManifestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561253E0);
  }
  return result;
}

unint64_t sub_233BB4EA0()
{
  unint64_t result;

  result = qword_2561253E8;
  if (!qword_2561253E8)
  {
    result = MEMORY[0x23493E300](&unk_233BE188C, &type metadata for MarketplaceKitError.AppNotInstalledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561253E8);
  }
  return result;
}

unint64_t sub_233BB4EE4()
{
  unint64_t result;

  result = qword_2561253F0;
  if (!qword_2561253F0)
  {
    result = MEMORY[0x23493E300](&unk_233BE183C, &type metadata for MarketplaceKitError.NoSupportedVariantCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561253F0);
  }
  return result;
}

unint64_t sub_233BB4F28()
{
  unint64_t result;

  result = qword_2561253F8;
  if (!qword_2561253F8)
  {
    result = MEMORY[0x23493E300](&unk_233BE17EC, &type metadata for MarketplaceKitError.InsufficientStorageSpaceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561253F8);
  }
  return result;
}

unint64_t sub_233BB4F6C()
{
  unint64_t result;

  result = qword_256125408;
  if (!qword_256125408)
  {
    result = MEMORY[0x23493E300](&unk_233BE179C, &type metadata for MarketplaceKitError.RatingRestrictedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125408);
  }
  return result;
}

unint64_t sub_233BB4FB0()
{
  unint64_t result;

  result = qword_256125410;
  if (!qword_256125410)
  {
    result = MEMORY[0x23493E300](&unk_233BE174C, &type metadata for MarketplaceKitError.InstallationOfMarketplaceDeniedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125410);
  }
  return result;
}

unint64_t sub_233BB4FF4()
{
  unint64_t result;

  result = qword_256125418;
  if (!qword_256125418)
  {
    result = MEMORY[0x23493E300](&unk_233BE16FC, &type metadata for MarketplaceKitError.InstallationRestrictedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125418);
  }
  return result;
}

unint64_t sub_233BB5038()
{
  unint64_t result;

  result = qword_256125420;
  if (!qword_256125420)
  {
    result = MEMORY[0x23493E300](&unk_233BE16AC, &type metadata for MarketplaceKitError.MinimumPlatformVersionNotSatisfiedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125420);
  }
  return result;
}

unint64_t sub_233BB507C()
{
  unint64_t result;

  result = qword_256125428;
  if (!qword_256125428)
  {
    result = MEMORY[0x23493E300](&unk_233BE165C, &type metadata for MarketplaceKitError.UnsupportedPlatformCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125428);
  }
  return result;
}

unint64_t sub_233BB50C0()
{
  unint64_t result;

  result = qword_256125430;
  if (!qword_256125430)
  {
    result = MEMORY[0x23493E300](&unk_233BE160C, &type metadata for MarketplaceKitError.MissingCapabilitiesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125430);
  }
  return result;
}

unint64_t sub_233BB5104()
{
  unint64_t result;

  result = qword_256125438;
  if (!qword_256125438)
  {
    result = MEMORY[0x23493E300](&unk_233BE15BC, &type metadata for MarketplaceKitError.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125438);
  }
  return result;
}

uint64_t MarketplaceKitError.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t *v71;
  _QWORD v73[5];
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  char *v121;
  char *v122;
  char *v123;
  char *v124;
  char *v125;
  char *v126;
  char *v127;
  char *v128;
  char *v129;
  char *v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t v141;

  v133 = a2;
  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125440);
  v139 = *(_QWORD *)(v113 - 8);
  MEMORY[0x24BDAC7A8](v113, v3);
  v138 = (char *)v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125448);
  v111 = *(_QWORD *)(v112 - 8);
  MEMORY[0x24BDAC7A8](v112, v5);
  v132 = (char *)v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125450);
  v109 = *(_QWORD *)(v110 - 8);
  MEMORY[0x24BDAC7A8](v110, v7);
  v131 = (char *)v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125458);
  v107 = *(_QWORD *)(v108 - 8);
  MEMORY[0x24BDAC7A8](v108, v9);
  v130 = (char *)v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125460);
  v105 = *(_QWORD *)(v106 - 8);
  MEMORY[0x24BDAC7A8](v106, v11);
  v129 = (char *)v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125468);
  v103 = *(_QWORD *)(v104 - 8);
  MEMORY[0x24BDAC7A8](v104, v13);
  v128 = (char *)v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125470);
  v101 = *(_QWORD *)(v102 - 8);
  MEMORY[0x24BDAC7A8](v102, v15);
  v127 = (char *)v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125478);
  v99 = *(_QWORD *)(v100 - 8);
  MEMORY[0x24BDAC7A8](v100, v17);
  v126 = (char *)v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125480);
  v97 = *(_QWORD *)(v98 - 8);
  MEMORY[0x24BDAC7A8](v98, v19);
  v125 = (char *)v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125488);
  v95 = *(_QWORD *)(v96 - 8);
  MEMORY[0x24BDAC7A8](v96, v21);
  v124 = (char *)v73 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125490);
  v93 = *(_QWORD *)(v94 - 8);
  MEMORY[0x24BDAC7A8](v94, v23);
  v123 = (char *)v73 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125498);
  v91 = *(_QWORD *)(v92 - 8);
  MEMORY[0x24BDAC7A8](v92, v25);
  v122 = (char *)v73 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561254A0);
  v87 = *(_QWORD *)(v88 - 8);
  MEMORY[0x24BDAC7A8](v88, v27);
  v121 = (char *)v73 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561254A8);
  v90 = *(_QWORD *)(v89 - 8);
  MEMORY[0x24BDAC7A8](v89, v29);
  v137 = (char *)v73 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561254B0);
  v85 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86, v31);
  v120 = (char *)v73 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561254B8);
  v83 = *(_QWORD *)(v84 - 8);
  MEMORY[0x24BDAC7A8](v84, v33);
  v119 = (char *)v73 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561254C0);
  v79 = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81, v35);
  v117 = (char *)v73 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561254C8);
  v80 = *(_QWORD *)(v82 - 8);
  MEMORY[0x24BDAC7A8](v82, v37);
  v118 = (char *)v73 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561254D0);
  v75 = *(_QWORD *)(v76 - 8);
  MEMORY[0x24BDAC7A8](v76, v39);
  v115 = (char *)v73 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561254D8);
  v77 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78, v41);
  v116 = (char *)v73 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561254E0);
  v73[4] = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74, v43);
  v114 = (char *)v73 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561254E8);
  v134 = *(_QWORD *)(v136 - 8);
  MEMORY[0x24BDAC7A8](v136, v45);
  v47 = (char *)v73 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for MarketplaceKitError();
  v50 = MEMORY[0x24BDAC7A8](v48, v49);
  v52 = (char *)v73 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = MEMORY[0x24BDAC7A8](v50, v53);
  v56 = (char *)v73 - v55;
  v58 = MEMORY[0x24BDAC7A8](v54, v57);
  v60 = (char *)v73 - v59;
  MEMORY[0x24BDAC7A8](v58, v61);
  v63 = (char *)v73 - v62;
  v64 = a1[3];
  v140 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v64);
  sub_233BB4B70();
  v135 = v47;
  v65 = v141;
  sub_233BD8D68();
  if (!v65)
  {
    v73[0] = v56;
    v73[1] = v60;
    v73[2] = v52;
    v141 = 0;
    v73[3] = v63;
    v66 = v135;
    v67 = v136;
    v68 = sub_233BD8BC4();
    if (*(_QWORD *)(v68 + 16) == 1)
      __asm { BR              X10 }
    v69 = sub_233BD8ABC();
    swift_allocError();
    v71 = v70;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256123F90);
    *v71 = v48;
    sub_233BD8B4C();
    sub_233BD8AB0();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v69 - 8) + 104))(v71, *MEMORY[0x24BEE26D0], v69);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v134 + 8))(v66, v67);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v140);
}

void sub_233BB6580()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 72) = 20;
  sub_233BB4BB4();
  v5 = *(_QWORD *)(v4 - 96);
  sub_233BD8B40();
  if (v5)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 152) + 8))(v2, v3);
    JUMPOUT(0x233BB6558);
  }
  (*(void (**)(uint64_t, _QWORD))(v1 + 8))(v0, *(_QWORD *)(v4 - 320));
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 152) + 8))(v2, v3);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x233BB66D4);
}

uint64_t sub_233BB67E8(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x23493E300](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_233BB683C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MarketplaceKitError.init(from:)(a1, a2);
}

void sub_233BB6850(_QWORD *a1)
{
  MarketplaceKitError.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for MarketplaceKitError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254250060);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for MarketplaceKitError(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
  {
    v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254250060);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  else if (result <= 1)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for MarketplaceKitError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254250060);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *assignWithCopy for MarketplaceKitError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_233B888D4((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254250060);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *initializeWithTake for MarketplaceKitError(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254250060);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for MarketplaceKitError(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_233B888D4((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254250060);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void sub_233BB6CDC()
{
  unint64_t v0;

  sub_233BB6D58();
  if (v0 <= 0x3F)
    swift_initEnumMetadataMultiPayload();
}

void sub_233BB6D58()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254250068[0])
  {
    sub_233BB6DAC();
    v0 = sub_233BD842C();
    if (!v1)
      atomic_store(v0, qword_254250068);
  }
}

unint64_t sub_233BB6DAC()
{
  unint64_t result;

  result = qword_2542503F0;
  if (!qword_2542503F0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2542503F0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MarketplaceKitError.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEC)
    goto LABEL_17;
  if (a2 + 20 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 20) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 20;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 20;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 20;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x15;
  v8 = v6 - 21;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MarketplaceKitError.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 20 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 20) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEB)
    return ((uint64_t (*)(void))((char *)&loc_233BB6EC4 + 4 * byte_233BE08AF[v4]))();
  *a1 = a2 + 20;
  return ((uint64_t (*)(void))((char *)sub_233BB6EF8 + 4 * byte_233BE08AA[v4]))();
}

uint64_t sub_233BB6EF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BB6F00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233BB6F08);
  return result;
}

uint64_t sub_233BB6F14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233BB6F1CLL);
  *(_BYTE *)result = a2 + 20;
  return result;
}

uint64_t sub_233BB6F20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BB6F28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.CodingKeys()
{
  return &type metadata for MarketplaceKitError.CodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.UnknownCodingKeys()
{
  return &type metadata for MarketplaceKitError.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.MissingCapabilitiesCodingKeys()
{
  return &type metadata for MarketplaceKitError.MissingCapabilitiesCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.UnsupportedPlatformCodingKeys()
{
  return &type metadata for MarketplaceKitError.UnsupportedPlatformCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.MinimumPlatformVersionNotSatisfiedCodingKeys()
{
  return &type metadata for MarketplaceKitError.MinimumPlatformVersionNotSatisfiedCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.InstallationRestrictedCodingKeys()
{
  return &type metadata for MarketplaceKitError.InstallationRestrictedCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.InstallationOfMarketplaceDeniedCodingKeys()
{
  return &type metadata for MarketplaceKitError.InstallationOfMarketplaceDeniedCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.RatingRestrictedCodingKeys()
{
  return &type metadata for MarketplaceKitError.RatingRestrictedCodingKeys;
}

uint64_t _s14MarketplaceKit19MarketplaceKitErrorO29MissingCapabilitiesCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_233BB6FF8 + 4 * byte_233BE08B4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_233BB7018 + 4 * byte_233BE08B9[v4]))();
}

_BYTE *sub_233BB6FF8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_233BB7018(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233BB7020(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233BB7028(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233BB7030(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233BB7038(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.InsufficientStorageSpaceCodingKeys()
{
  return &type metadata for MarketplaceKitError.InsufficientStorageSpaceCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.NoSupportedVariantCodingKeys()
{
  return &type metadata for MarketplaceKitError.NoSupportedVariantCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.AppNotInstalledCodingKeys()
{
  return &type metadata for MarketplaceKitError.AppNotInstalledCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.InvalidManifestCodingKeys()
{
  return &type metadata for MarketplaceKitError.InvalidManifestCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.NetworkErrorCodingKeys()
{
  return &type metadata for MarketplaceKitError.NetworkErrorCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.InvalidAlternativeDistributionPackageURLCodingKeys()
{
  return &type metadata for MarketplaceKitError.InvalidAlternativeDistributionPackageURLCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.InvalidAlternativeDistributionPackageSignatureCodingKeys()
{
  return &type metadata for MarketplaceKitError.InvalidAlternativeDistributionPackageSignatureCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.FeatureUnavailableCodingKeys()
{
  return &type metadata for MarketplaceKitError.FeatureUnavailableCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.CancelledCodingKeys()
{
  return &type metadata for MarketplaceKitError.CancelledCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.MismatchedInstallTypeCodingKeys()
{
  return &type metadata for MarketplaceKitError.MismatchedInstallTypeCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.OauthTokenErrorCodingKeys()
{
  return &type metadata for MarketplaceKitError.OauthTokenErrorCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.InvalidLicenseCodingKeys()
{
  return &type metadata for MarketplaceKitError.InvalidLicenseCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.InvalidURLCodingKeys()
{
  return &type metadata for MarketplaceKitError.InvalidURLCodingKeys;
}

ValueMetadata *type metadata accessor for MarketplaceKitError.MissingInstallVerificationTokenCodingKeys()
{
  return &type metadata for MarketplaceKitError.MissingInstallVerificationTokenCodingKeys;
}

unint64_t sub_233BB7128()
{
  unint64_t result;

  result = qword_2561254F8;
  if (!qword_2561254F8)
  {
    result = MEMORY[0x23493E300](&unk_233BE11DC, &type metadata for MarketplaceKitError.InsufficientStorageSpaceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561254F8);
  }
  return result;
}

unint64_t sub_233BB7170()
{
  unint64_t result;

  result = qword_256125500;
  if (!qword_256125500)
  {
    result = MEMORY[0x23493E300](&unk_233BE1384, &type metadata for MarketplaceKitError.MinimumPlatformVersionNotSatisfiedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125500);
  }
  return result;
}

unint64_t sub_233BB71B8()
{
  unint64_t result;

  result = qword_256125508;
  if (!qword_256125508)
  {
    result = MEMORY[0x23493E300](&unk_233BE148C, &type metadata for MarketplaceKitError.MissingCapabilitiesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125508);
  }
  return result;
}

unint64_t sub_233BB7200()
{
  unint64_t result;

  result = qword_256125510;
  if (!qword_256125510)
  {
    result = MEMORY[0x23493E300](&unk_233BE1594, &type metadata for MarketplaceKitError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125510);
  }
  return result;
}

unint64_t sub_233BB7248()
{
  unint64_t result;

  result = qword_256125518;
  if (!qword_256125518)
  {
    result = MEMORY[0x23493E300](&unk_233BE14B4, &type metadata for MarketplaceKitError.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125518);
  }
  return result;
}

unint64_t sub_233BB7290()
{
  unint64_t result;

  result = qword_256125520;
  if (!qword_256125520)
  {
    result = MEMORY[0x23493E300](&unk_233BE14DC, &type metadata for MarketplaceKitError.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125520);
  }
  return result;
}

unint64_t sub_233BB72D8()
{
  unint64_t result;

  result = qword_256125528;
  if (!qword_256125528)
  {
    result = MEMORY[0x23493E300](&unk_233BE13FC, &type metadata for MarketplaceKitError.MissingCapabilitiesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125528);
  }
  return result;
}

unint64_t sub_233BB7320()
{
  unint64_t result;

  result = qword_256125530;
  if (!qword_256125530)
  {
    result = MEMORY[0x23493E300](&unk_233BE1424, &type metadata for MarketplaceKitError.MissingCapabilitiesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125530);
  }
  return result;
}

unint64_t sub_233BB7368()
{
  unint64_t result;

  result = qword_256125538;
  if (!qword_256125538)
  {
    result = MEMORY[0x23493E300](&unk_233BE13AC, &type metadata for MarketplaceKitError.UnsupportedPlatformCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125538);
  }
  return result;
}

unint64_t sub_233BB73B0()
{
  unint64_t result;

  result = qword_256125540;
  if (!qword_256125540)
  {
    result = MEMORY[0x23493E300](&unk_233BE13D4, &type metadata for MarketplaceKitError.UnsupportedPlatformCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125540);
  }
  return result;
}

unint64_t sub_233BB73F8()
{
  unint64_t result;

  result = qword_256125548;
  if (!qword_256125548)
  {
    result = MEMORY[0x23493E300](&unk_233BE12F4, &type metadata for MarketplaceKitError.MinimumPlatformVersionNotSatisfiedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125548);
  }
  return result;
}

unint64_t sub_233BB7440()
{
  unint64_t result;

  result = qword_256125550;
  if (!qword_256125550)
  {
    result = MEMORY[0x23493E300](&unk_233BE131C, &type metadata for MarketplaceKitError.MinimumPlatformVersionNotSatisfiedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125550);
  }
  return result;
}

unint64_t sub_233BB7488()
{
  unint64_t result;

  result = qword_256125558;
  if (!qword_256125558)
  {
    result = MEMORY[0x23493E300](&unk_233BE12A4, &type metadata for MarketplaceKitError.InstallationRestrictedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125558);
  }
  return result;
}

unint64_t sub_233BB74D0()
{
  unint64_t result;

  result = qword_256125560;
  if (!qword_256125560)
  {
    result = MEMORY[0x23493E300](&unk_233BE12CC, &type metadata for MarketplaceKitError.InstallationRestrictedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125560);
  }
  return result;
}

unint64_t sub_233BB7518()
{
  unint64_t result;

  result = qword_256125568;
  if (!qword_256125568)
  {
    result = MEMORY[0x23493E300](&unk_233BE1254, &type metadata for MarketplaceKitError.InstallationOfMarketplaceDeniedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125568);
  }
  return result;
}

unint64_t sub_233BB7560()
{
  unint64_t result;

  result = qword_256125570;
  if (!qword_256125570)
  {
    result = MEMORY[0x23493E300](&unk_233BE127C, &type metadata for MarketplaceKitError.InstallationOfMarketplaceDeniedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125570);
  }
  return result;
}

unint64_t sub_233BB75A8()
{
  unint64_t result;

  result = qword_256125578;
  if (!qword_256125578)
  {
    result = MEMORY[0x23493E300](&unk_233BE1204, &type metadata for MarketplaceKitError.RatingRestrictedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125578);
  }
  return result;
}

unint64_t sub_233BB75F0()
{
  unint64_t result;

  result = qword_256125580;
  if (!qword_256125580)
  {
    result = MEMORY[0x23493E300](&unk_233BE122C, &type metadata for MarketplaceKitError.RatingRestrictedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125580);
  }
  return result;
}

unint64_t sub_233BB7638()
{
  unint64_t result;

  result = qword_256125588;
  if (!qword_256125588)
  {
    result = MEMORY[0x23493E300](&unk_233BE114C, &type metadata for MarketplaceKitError.InsufficientStorageSpaceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125588);
  }
  return result;
}

unint64_t sub_233BB7680()
{
  unint64_t result;

  result = qword_256125590;
  if (!qword_256125590)
  {
    result = MEMORY[0x23493E300](&unk_233BE1174, &type metadata for MarketplaceKitError.InsufficientStorageSpaceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125590);
  }
  return result;
}

unint64_t sub_233BB76C8()
{
  unint64_t result;

  result = qword_256125598;
  if (!qword_256125598)
  {
    result = MEMORY[0x23493E300](&unk_233BE10FC, &type metadata for MarketplaceKitError.NoSupportedVariantCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125598);
  }
  return result;
}

unint64_t sub_233BB7710()
{
  unint64_t result;

  result = qword_2561255A0;
  if (!qword_2561255A0)
  {
    result = MEMORY[0x23493E300](&unk_233BE1124, &type metadata for MarketplaceKitError.NoSupportedVariantCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561255A0);
  }
  return result;
}

unint64_t sub_233BB7758()
{
  unint64_t result;

  result = qword_2561255A8;
  if (!qword_2561255A8)
  {
    result = MEMORY[0x23493E300](&unk_233BE10AC, &type metadata for MarketplaceKitError.AppNotInstalledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561255A8);
  }
  return result;
}

unint64_t sub_233BB77A0()
{
  unint64_t result;

  result = qword_2561255B0;
  if (!qword_2561255B0)
  {
    result = MEMORY[0x23493E300](&unk_233BE10D4, &type metadata for MarketplaceKitError.AppNotInstalledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561255B0);
  }
  return result;
}

unint64_t sub_233BB77E8()
{
  unint64_t result;

  result = qword_2561255B8;
  if (!qword_2561255B8)
  {
    result = MEMORY[0x23493E300](&unk_233BE105C, &type metadata for MarketplaceKitError.InvalidManifestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561255B8);
  }
  return result;
}

unint64_t sub_233BB7830()
{
  unint64_t result;

  result = qword_2561255C0;
  if (!qword_2561255C0)
  {
    result = MEMORY[0x23493E300](&unk_233BE1084, &type metadata for MarketplaceKitError.InvalidManifestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561255C0);
  }
  return result;
}

unint64_t sub_233BB7878()
{
  unint64_t result;

  result = qword_2561255C8;
  if (!qword_2561255C8)
  {
    result = MEMORY[0x23493E300](&unk_233BE100C, &type metadata for MarketplaceKitError.NetworkErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561255C8);
  }
  return result;
}

unint64_t sub_233BB78C0()
{
  unint64_t result;

  result = qword_2561255D0;
  if (!qword_2561255D0)
  {
    result = MEMORY[0x23493E300](&unk_233BE1034, &type metadata for MarketplaceKitError.NetworkErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561255D0);
  }
  return result;
}

unint64_t sub_233BB7908()
{
  unint64_t result;

  result = qword_2561255D8;
  if (!qword_2561255D8)
  {
    result = MEMORY[0x23493E300](&unk_233BE0FBC, &type metadata for MarketplaceKitError.InvalidAlternativeDistributionPackageURLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561255D8);
  }
  return result;
}

unint64_t sub_233BB7950()
{
  unint64_t result;

  result = qword_2561255E0;
  if (!qword_2561255E0)
  {
    result = MEMORY[0x23493E300](&unk_233BE0FE4, &type metadata for MarketplaceKitError.InvalidAlternativeDistributionPackageURLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561255E0);
  }
  return result;
}

unint64_t sub_233BB7998()
{
  unint64_t result;

  result = qword_2561255E8;
  if (!qword_2561255E8)
  {
    result = MEMORY[0x23493E300](&unk_233BE0F6C, &type metadata for MarketplaceKitError.InvalidAlternativeDistributionPackageSignatureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561255E8);
  }
  return result;
}

unint64_t sub_233BB79E0()
{
  unint64_t result;

  result = qword_2561255F0;
  if (!qword_2561255F0)
  {
    result = MEMORY[0x23493E300](&unk_233BE0F94, &type metadata for MarketplaceKitError.InvalidAlternativeDistributionPackageSignatureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561255F0);
  }
  return result;
}

unint64_t sub_233BB7A28()
{
  unint64_t result;

  result = qword_2561255F8;
  if (!qword_2561255F8)
  {
    result = MEMORY[0x23493E300](&unk_233BE0F1C, &type metadata for MarketplaceKitError.FeatureUnavailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561255F8);
  }
  return result;
}

unint64_t sub_233BB7A70()
{
  unint64_t result;

  result = qword_256125600;
  if (!qword_256125600)
  {
    result = MEMORY[0x23493E300](&unk_233BE0F44, &type metadata for MarketplaceKitError.FeatureUnavailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125600);
  }
  return result;
}

unint64_t sub_233BB7AB8()
{
  unint64_t result;

  result = qword_256125608;
  if (!qword_256125608)
  {
    result = MEMORY[0x23493E300](&unk_233BE0ECC, &type metadata for MarketplaceKitError.CancelledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125608);
  }
  return result;
}

unint64_t sub_233BB7B00()
{
  unint64_t result;

  result = qword_256125610;
  if (!qword_256125610)
  {
    result = MEMORY[0x23493E300](&unk_233BE0EF4, &type metadata for MarketplaceKitError.CancelledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125610);
  }
  return result;
}

unint64_t sub_233BB7B48()
{
  unint64_t result;

  result = qword_256125618;
  if (!qword_256125618)
  {
    result = MEMORY[0x23493E300](&unk_233BE0E7C, &type metadata for MarketplaceKitError.MismatchedInstallTypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125618);
  }
  return result;
}

unint64_t sub_233BB7B90()
{
  unint64_t result;

  result = qword_256125620;
  if (!qword_256125620)
  {
    result = MEMORY[0x23493E300](&unk_233BE0EA4, &type metadata for MarketplaceKitError.MismatchedInstallTypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125620);
  }
  return result;
}

unint64_t sub_233BB7BD8()
{
  unint64_t result;

  result = qword_256125628;
  if (!qword_256125628)
  {
    result = MEMORY[0x23493E300](&unk_233BE0E2C, &type metadata for MarketplaceKitError.OauthTokenErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125628);
  }
  return result;
}

unint64_t sub_233BB7C20()
{
  unint64_t result;

  result = qword_256125630;
  if (!qword_256125630)
  {
    result = MEMORY[0x23493E300](&unk_233BE0E54, &type metadata for MarketplaceKitError.OauthTokenErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125630);
  }
  return result;
}

unint64_t sub_233BB7C68()
{
  unint64_t result;

  result = qword_256125638;
  if (!qword_256125638)
  {
    result = MEMORY[0x23493E300](&unk_233BE0DDC, &type metadata for MarketplaceKitError.InvalidLicenseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125638);
  }
  return result;
}

unint64_t sub_233BB7CB0()
{
  unint64_t result;

  result = qword_256125640;
  if (!qword_256125640)
  {
    result = MEMORY[0x23493E300](&unk_233BE0E04, &type metadata for MarketplaceKitError.InvalidLicenseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125640);
  }
  return result;
}

unint64_t sub_233BB7CF8()
{
  unint64_t result;

  result = qword_256125648;
  if (!qword_256125648)
  {
    result = MEMORY[0x23493E300](&unk_233BE0D8C, &type metadata for MarketplaceKitError.InvalidURLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125648);
  }
  return result;
}

unint64_t sub_233BB7D40()
{
  unint64_t result;

  result = qword_256125650;
  if (!qword_256125650)
  {
    result = MEMORY[0x23493E300](&unk_233BE0DB4, &type metadata for MarketplaceKitError.InvalidURLCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125650);
  }
  return result;
}

unint64_t sub_233BB7D88()
{
  unint64_t result;

  result = qword_256125658;
  if (!qword_256125658)
  {
    result = MEMORY[0x23493E300](&unk_233BE0D3C, &type metadata for MarketplaceKitError.MissingInstallVerificationTokenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125658);
  }
  return result;
}

unint64_t sub_233BB7DD0()
{
  unint64_t result;

  result = qword_256125660;
  if (!qword_256125660)
  {
    result = MEMORY[0x23493E300](&unk_233BE0D64, &type metadata for MarketplaceKitError.MissingInstallVerificationTokenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125660);
  }
  return result;
}

unint64_t sub_233BB7E18()
{
  unint64_t result;

  result = qword_256125668;
  if (!qword_256125668)
  {
    result = MEMORY[0x23493E300](&unk_233BE1504, &type metadata for MarketplaceKitError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125668);
  }
  return result;
}

unint64_t sub_233BB7E60()
{
  unint64_t result;

  result = qword_256125670;
  if (!qword_256125670)
  {
    result = MEMORY[0x23493E300](&unk_233BE152C, &type metadata for MarketplaceKitError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125670);
  }
  return result;
}

uint64_t sub_233BB7EA4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v2 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000233BE5FB0 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000233BE5FD0 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x8000000233BE5FF0 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000233BE6020 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x8000000233BE6040 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000233BE6060 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000233BE6080 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000233BE60A0 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6E49746F4E707061 && a2 == 0xEF64656C6C617473 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x4D64696C61766E69 && a2 == 0xEF74736566696E61 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x456B726F7774656ELL && a2 == 0xEC000000726F7272 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000028 && a2 == 0x8000000233BE60C0 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000002ELL && a2 == 0x8000000233BE60F0 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000233BE6120 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x656C6C65636E6163 && a2 == 0xE900000000000064 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000233BE6140 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x6B6F54687475616FLL && a2 == 0xEF726F7272456E65 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x4C64696C61766E69 && a2 == 0xEE0065736E656369 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x5564696C61766E69 && a2 == 0xEA00000000004C52 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x8000000233BE6160)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else
  {
    v6 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 20;
    else
      return 21;
  }
}

__n128 PerformPrivateActionRequest.init(request:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  unint64_t v2;
  unsigned __int8 v3;
  __n128 result;

  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u8[8];
  result = *a1;
  *a2 = *a1;
  a2[1].n128_u64[0] = v2;
  a2[1].n128_u8[8] = v3;
  return result;
}

uint64_t PerformPrivateActionRequest.run()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = a1;
  *(_OWORD *)(v2 + 64) = *(_OWORD *)v1;
  *(_QWORD *)(v2 + 80) = *(_QWORD *)(v1 + 16);
  *(_BYTE *)(v2 + 41) = *(_BYTE *)(v1 + 24);
  return swift_task_switch();
}

uint64_t sub_233BB8764()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  _QWORD *v5;
  char *v7;

  if (qword_25424FEB8 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 24) = v1;
  *(_QWORD *)(v0 + 32) = v2;
  v4 = *(_BYTE *)(v0 + 41);
  *(_BYTE *)(v0 + 40) = v4;
  *(_QWORD *)(v0 + 48) = v0 + 16;
  sub_233B8019C(v3, v1, v2, v4);
  v7 = (char *)&dword_256123D78 + dword_256123D78;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v5;
  *v5 = v0;
  v5[1] = sub_233BB8830;
  return ((uint64_t (*)(_QWORD, uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v7)(*(_QWORD *)(v0 + 56), v0 + 48, sub_233BB95AC, 0);
}

uint64_t sub_233BB8830()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 96) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  sub_233B801BC(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_BYTE *)(v2 + 40));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_233BB88AC()
{
  uint64_t v0;

  sub_233B801BC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233BB88E8()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000017;
  if (*v0 != 1)
    v1 = 0x63694C77656E6572;
  if (*v0)
    return v1;
  else
    return 0x694C726961706572;
}

uint64_t sub_233BB8960@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233BBB444(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233BB8984()
{
  sub_233BBA54C();
  return sub_233BD8D8C();
}

uint64_t sub_233BB89AC()
{
  sub_233BBA54C();
  return sub_233BD8D98();
}

uint64_t sub_233BB89D4()
{
  sub_233BBA590();
  return sub_233BD8D8C();
}

uint64_t sub_233BB89FC()
{
  sub_233BBA590();
  return sub_233BD8D98();
}

uint64_t sub_233BB8A24()
{
  sub_233BBA5D4();
  return sub_233BD8D8C();
}

uint64_t sub_233BB8A4C()
{
  sub_233BBA5D4();
  return sub_233BD8D98();
}

uint64_t sub_233BB8A74()
{
  sub_233BBA618();
  return sub_233BD8D8C();
}

uint64_t sub_233BB8A9C()
{
  sub_233BBA618();
  return sub_233BD8D98();
}

uint64_t PerformPrivateActionRequest.Request.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125680);
  v29 = *(_QWORD *)(v3 - 8);
  v30 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v28 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125688);
  v26 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31, v6);
  v27 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125690);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125698);
  v33 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36, v13);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = *v1;
  v32 = v1[1];
  v25 = v1[2];
  v16 = *((unsigned __int8 *)v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BBA54C();
  sub_233BD8D80();
  if (v16)
  {
    if (v16 == 1)
    {
      LOBYTE(v37) = 1;
      sub_233BBA5D4();
      v17 = v27;
      v18 = v36;
      v19 = v15;
      sub_233BD8BDC();
      LOBYTE(v37) = 0;
      v20 = v35;
      v21 = v31;
      sub_233BD8C18();
      if (!v20)
      {
        LOBYTE(v37) = 1;
        sub_233BD8C24();
        LOBYTE(v37) = 2;
        sub_233BD8C3C();
      }
      v24 = v26;
    }
    else
    {
      LOBYTE(v37) = 2;
      sub_233BBA590();
      v17 = v28;
      v18 = v36;
      v19 = v15;
      sub_233BD8BDC();
      v37 = v34;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2561244C0);
      sub_233B90DC4(&qword_2561244C8, MEMORY[0x24BEE4570], MEMORY[0x24BEE12A0]);
      v21 = v30;
      sub_233BD8C30();
      v24 = v29;
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v21);
  }
  else
  {
    LOBYTE(v37) = 0;
    sub_233BBA618();
    v18 = v36;
    v19 = v15;
    sub_233BD8BDC();
    LOBYTE(v37) = 0;
    v22 = v35;
    sub_233BD8C18();
    if (!v22)
    {
      LOBYTE(v37) = 1;
      sub_233BD8C3C();
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v19, v18);
}

uint64_t PerformPrivateActionRequest.Request.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  int v24;
  char *v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  char *v30;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  _QWORD *v55;
  char *v56;
  uint64_t v57;

  v48 = a2;
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561256C0);
  v49 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52, v3);
  v53 = (uint64_t)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561256C8);
  v50 = *(_QWORD *)(v5 - 8);
  v51 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v54 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561256D0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561256D8);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1[3];
  v55 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_233BBA54C();
  v19 = v56;
  sub_233BD8D68();
  v20 = (uint64_t)v19;
  if (v19)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
  v46 = v9;
  v47 = v14;
  v21 = v8;
  v22 = v54;
  v56 = v17;
  v23 = sub_233BD8BC4();
  if (*(_QWORD *)(v23 + 16) != 1)
  {
    v27 = sub_233BD8ABC();
    swift_allocError();
    v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256123F90);
    *v29 = &type metadata for PerformPrivateActionRequest.Request;
    v30 = v56;
    sub_233BD8B4C();
    sub_233BD8AB0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v29, *MEMORY[0x24BEE26D0], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v30, v13);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
  }
  v45 = v13;
  v24 = *(unsigned __int8 *)(v23 + 32);
  if (*(_BYTE *)(v23 + 32))
  {
    v25 = v56;
    if (v24 == 1)
    {
      LOBYTE(v57) = 1;
      sub_233BBA5D4();
      v26 = v22;
      sub_233BD8B40();
      LOBYTE(v57) = 0;
      v35 = v51;
      v38 = sub_233BD8B88();
      v20 = v39;
      LOBYTE(v57) = 1;
      v52 = sub_233BD8B94();
      LOBYTE(v57) = 2;
      v53 = sub_233BD8BAC();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v26, v35);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v25, v45);
      v42 = v52 & 1 | (v53 << 32);
    }
    else
    {
      LOBYTE(v57) = 2;
      sub_233BBA590();
      v34 = v53;
      sub_233BD8B40();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2561244C0);
      sub_233B90DC4(&qword_2561244D8, MEMORY[0x24BEE4598], MEMORY[0x24BEE12D0]);
      v37 = v52;
      sub_233BD8BA0();
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v34, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v25, v45);
      v42 = 0;
      v38 = v57;
    }
  }
  else
  {
    LOBYTE(v57) = 0;
    sub_233BBA618();
    v32 = v12;
    v33 = v56;
    sub_233BD8B40();
    LOBYTE(v57) = 0;
    v36 = v21;
    v38 = sub_233BD8B88();
    v20 = v40;
    LOBYTE(v57) = 1;
    v41 = sub_233BD8BAC();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v32, v36);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v33, v45);
    v42 = v41;
  }
  v43 = (uint64_t)v55;
  v44 = v48;
  *v48 = v38;
  v44[1] = v20;
  v44[2] = v42;
  *((_BYTE *)v44 + 24) = v24;
  return __swift_destroy_boxed_opaque_existential_1(v43);
}

uint64_t sub_233BB9568@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return PerformPrivateActionRequest.Request.init(from:)(a1, a2);
}

uint64_t sub_233BB957C(_QWORD *a1)
{
  return PerformPrivateActionRequest.Request.encode(to:)(a1);
}

uint64_t PerformPrivateActionRequest.request.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(v1 + 24);
  *(_BYTE *)(a1 + 24) = v5;
  return sub_233B8019C(v2, v3, v4, v5);
}

void sub_233BB95AC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  void *v9;
  _QWORD v10[6];

  v8 = (void *)sub_233BD8534();
  v10[4] = a4;
  v10[5] = a5;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_233BC37F0;
  v10[3] = &block_descriptor_9;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_performPrivateActionRequest_reply_, v8, v9);
  _Block_release(v9);

}

unint64_t PerformPrivateActionRequest.stringValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;
  unint64_t v12;

  v1 = *v0;
  if (!*((_BYTE *)v0 + 24))
  {
    sub_233BD8A8C();
    swift_bridgeObjectRelease();
    v12 = 0xD000000000000020;
    sub_233BD8828();
    sub_233BD8828();
    goto LABEL_5;
  }
  if (*((_BYTE *)v0 + 24) == 1)
  {
    v12 = 0;
    sub_233BD8A8C();
    sub_233BD8828();
    sub_233BD8828();
    sub_233BD8828();
    sub_233BD8828();
    swift_bridgeObjectRelease();
    sub_233BD8828();
LABEL_5:
    sub_233BD8C60();
    sub_233BD8828();
    swift_bridgeObjectRelease();
    sub_233BD8828();
    return v12;
  }
  sub_233BD8A8C();
  swift_bridgeObjectRelease();
  v12 = 0xD000000000000014;
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_233B7F608(0, v2, 0);
    v3 = v1 + 32;
    do
    {
      v3 += 8;
      v4 = sub_233BD8C60();
      v6 = v5;
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      if (v8 >= v7 >> 1)
        sub_233B7F608(v7 > 1, v8 + 1, 1);
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v4;
      *(_QWORD *)(v9 + 40) = v6;
      --v2;
    }
    while (v2);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25424FDD0);
  sub_233BBA65C();
  sub_233BD87E0();
  swift_bridgeObjectRelease();
  sub_233BD8828();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_233BB9984()
{
  sub_233BBA6A8();
  return sub_233BD8D8C();
}

uint64_t sub_233BB99AC()
{
  sub_233BBA6A8();
  return sub_233BD8D98();
}

uint64_t PerformPrivateActionRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  _OWORD v11[2];
  uint64_t v12;
  char v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561256E0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[0] = *(_OWORD *)v1;
  v8 = *(_QWORD *)(v1 + 16);
  v9 = *(_BYTE *)(v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BBA6A8();
  sub_233BD8D80();
  v11[1] = v11[0];
  v12 = v8;
  v13 = v9;
  sub_233BBA6EC();
  sub_233BD8C30();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t PerformPrivateActionRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  __int128 v13;
  uint64_t v14;
  char v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561256F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BBA6A8();
  sub_233BD8D68();
  if (!v2)
  {
    sub_233BBA730();
    sub_233BD8BA0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v10 = v14;
    v11 = v15;
    *(_OWORD *)a2 = v13;
    *(_QWORD *)(a2 + 16) = v10;
    *(_BYTE *)(a2 + 24) = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_233BB9C1C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PerformPrivateActionRequest.init(from:)(a1, a2);
}

uint64_t sub_233BB9C30(_QWORD *a1)
{
  return PerformPrivateActionRequest.encode(to:)(a1);
}

uint64_t static PerformPrivateActionResponse.Response.== infix(_:_:)()
{
  return 1;
}

uint64_t PerformPrivateActionResponse.Response.hash(into:)()
{
  return sub_233BD8D08();
}

uint64_t sub_233BB9C70()
{
  return 0x6465726F6E6769;
}

uint64_t sub_233BB9C88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6465726F6E6769 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_233BD8C6C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_233BB9D1C()
{
  sub_233BBA774();
  return sub_233BD8D8C();
}

uint64_t sub_233BB9D44()
{
  sub_233BBA774();
  return sub_233BD8D98();
}

uint64_t sub_233BB9D6C()
{
  sub_233BBA7B8();
  return sub_233BD8D8C();
}

uint64_t sub_233BB9D94()
{
  sub_233BBA7B8();
  return sub_233BD8D98();
}

uint64_t PerformPrivateActionResponse.Response.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125708);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125710);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BBA774();
  sub_233BD8D80();
  sub_233BBA7B8();
  sub_233BD8BDC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t PerformPrivateActionResponse.Response.hashValue.getter()
{
  sub_233BD8CFC();
  sub_233BD8D08();
  return sub_233BD8D38();
}

uint64_t PerformPrivateActionResponse.Response.init(from:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125728);
  v2 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23, v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125730);
  v6 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24, v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BBA774();
  v10 = v25;
  sub_233BD8D68();
  if (v10)
    goto LABEL_7;
  v22 = a1;
  v25 = v6;
  v12 = v23;
  v11 = v24;
  if (*(_QWORD *)(sub_233BD8BC4() + 16) != 1)
  {
    v16 = sub_233BD8ABC();
    swift_allocError();
    v18 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256123F90);
    *v18 = &type metadata for PerformPrivateActionResponse.Response;
    sub_233BD8B4C();
    sub_233BD8AB0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v18, *MEMORY[0x24BEE26D0], v16);
    swift_willThrow();
    v19 = v25;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v11);
    a1 = v22;
LABEL_7:
    v15 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v15);
  }
  sub_233BBA7B8();
  v13 = v5;
  sub_233BD8B40();
  v14 = v25;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v13, v12);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v11);
  v15 = (uint64_t)v22;
  return __swift_destroy_boxed_opaque_existential_1(v15);
}

uint64_t sub_233BBA194(_QWORD *a1)
{
  return PerformPrivateActionResponse.Response.init(from:)(a1);
}

uint64_t sub_233BBA1A8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125708);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125710);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BBA774();
  sub_233BD8D80();
  sub_233BBA7B8();
  sub_233BD8BDC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_233BBA2EC()
{
  sub_233BBA7FC();
  return sub_233BD8D8C();
}

uint64_t sub_233BBA314()
{
  sub_233BBA7FC();
  return sub_233BD8D98();
}

uint64_t PerformPrivateActionResponse.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125738);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BBA7FC();
  sub_233BD8D80();
  sub_233BBA840();
  sub_233BD8C30();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t PerformPrivateActionResponse.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125750);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BBA7FC();
  sub_233BD8D68();
  if (!v1)
  {
    sub_233BBA884();
    sub_233BD8BA0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_233BBA524(_QWORD *a1)
{
  return PerformPrivateActionResponse.init(from:)(a1);
}

uint64_t sub_233BBA538(_QWORD *a1)
{
  return PerformPrivateActionResponse.encode(to:)(a1);
}

unint64_t sub_233BBA54C()
{
  unint64_t result;

  result = qword_2561256A0;
  if (!qword_2561256A0)
  {
    result = MEMORY[0x23493E300](&unk_233BE2700, &type metadata for PerformPrivateActionRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561256A0);
  }
  return result;
}

unint64_t sub_233BBA590()
{
  unint64_t result;

  result = qword_2561256A8;
  if (!qword_2561256A8)
  {
    result = MEMORY[0x23493E300](&unk_233BE26B0, &type metadata for PerformPrivateActionRequest.Request.RenewLicensesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561256A8);
  }
  return result;
}

unint64_t sub_233BBA5D4()
{
  unint64_t result;

  result = qword_2561256B0;
  if (!qword_2561256B0)
  {
    result = MEMORY[0x23493E300](&unk_233BE2660, &type metadata for PerformPrivateActionRequest.Request.RepairLicenseByBundleIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561256B0);
  }
  return result;
}

unint64_t sub_233BBA618()
{
  unint64_t result;

  result = qword_2561256B8;
  if (!qword_2561256B8)
  {
    result = MEMORY[0x23493E300](&unk_233BE2610, &type metadata for PerformPrivateActionRequest.Request.RepairLicenseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561256B8);
  }
  return result;
}

unint64_t sub_233BBA65C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2561252D0;
  if (!qword_2561252D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25424FDD0);
    result = MEMORY[0x23493E300](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_2561252D0);
  }
  return result;
}

unint64_t sub_233BBA6A8()
{
  unint64_t result;

  result = qword_2561256E8;
  if (!qword_2561256E8)
  {
    result = MEMORY[0x23493E300](&unk_233BE25C0, &type metadata for PerformPrivateActionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561256E8);
  }
  return result;
}

unint64_t sub_233BBA6EC()
{
  unint64_t result;

  result = qword_2561256F0;
  if (!qword_2561256F0)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for PerformPrivateActionRequest.Request, &type metadata for PerformPrivateActionRequest.Request);
    atomic_store(result, (unint64_t *)&qword_2561256F0);
  }
  return result;
}

unint64_t sub_233BBA730()
{
  unint64_t result;

  result = qword_256125700;
  if (!qword_256125700)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for PerformPrivateActionRequest.Request, &type metadata for PerformPrivateActionRequest.Request);
    atomic_store(result, (unint64_t *)&qword_256125700);
  }
  return result;
}

unint64_t sub_233BBA774()
{
  unint64_t result;

  result = qword_256125718;
  if (!qword_256125718)
  {
    result = MEMORY[0x23493E300](&unk_233BE2570, &type metadata for PerformPrivateActionResponse.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125718);
  }
  return result;
}

unint64_t sub_233BBA7B8()
{
  unint64_t result;

  result = qword_256125720;
  if (!qword_256125720)
  {
    result = MEMORY[0x23493E300](&unk_233BE2520, &type metadata for PerformPrivateActionResponse.Response.IgnoredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125720);
  }
  return result;
}

unint64_t sub_233BBA7FC()
{
  unint64_t result;

  result = qword_256125740;
  if (!qword_256125740)
  {
    result = MEMORY[0x23493E300](&unk_233BE24D0, &type metadata for PerformPrivateActionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125740);
  }
  return result;
}

unint64_t sub_233BBA840()
{
  unint64_t result;

  result = qword_256125748;
  if (!qword_256125748)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for PerformPrivateActionResponse.Response, &type metadata for PerformPrivateActionResponse.Response);
    atomic_store(result, (unint64_t *)&qword_256125748);
  }
  return result;
}

unint64_t sub_233BBA884()
{
  unint64_t result;

  result = qword_256125758;
  if (!qword_256125758)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for PerformPrivateActionResponse.Response, &type metadata for PerformPrivateActionResponse.Response);
    atomic_store(result, (unint64_t *)&qword_256125758);
  }
  return result;
}

unint64_t sub_233BBA8CC()
{
  unint64_t result;

  result = qword_256125760;
  if (!qword_256125760)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for PerformPrivateActionResponse.Response, &type metadata for PerformPrivateActionResponse.Response);
    atomic_store(result, (unint64_t *)&qword_256125760);
  }
  return result;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for PerformPrivateActionRequest()
{
  return &type metadata for PerformPrivateActionRequest;
}

uint64_t destroy for PerformPrivateActionRequest.Request(uint64_t a1)
{
  return sub_233B801BC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t _s14MarketplaceKit27PerformPrivateActionRequestVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_233B8019C(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t _s14MarketplaceKit27PerformPrivateActionRequestVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_233B8019C(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_233B801BC(v7, v8, v9, v10);
  return a1;
}

uint64_t _s14MarketplaceKit27PerformPrivateActionRequestVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_233B801BC(v5, v7, v6, v8);
  return a1;
}

uint64_t _s14MarketplaceKit27PerformPrivateActionRequestVwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s14MarketplaceKit27PerformPrivateActionRequestVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_233BBAB00(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_233BBAB08(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PerformPrivateActionRequest.Request()
{
  return &type metadata for PerformPrivateActionRequest.Request;
}

ValueMetadata *type metadata accessor for PerformPrivateActionResponse()
{
  return &type metadata for PerformPrivateActionResponse;
}

ValueMetadata *type metadata accessor for PerformPrivateActionResponse.Response()
{
  return &type metadata for PerformPrivateActionResponse.Response;
}

ValueMetadata *type metadata accessor for PerformPrivateActionResponse.CodingKeys()
{
  return &type metadata for PerformPrivateActionResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for PerformPrivateActionResponse.Response.CodingKeys()
{
  return &type metadata for PerformPrivateActionResponse.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for PerformPrivateActionResponse.Response.IgnoredCodingKeys()
{
  return &type metadata for PerformPrivateActionResponse.Response.IgnoredCodingKeys;
}

ValueMetadata *type metadata accessor for PerformPrivateActionRequest.CodingKeys()
{
  return &type metadata for PerformPrivateActionRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for PerformPrivateActionRequest.Request.CodingKeys()
{
  return &type metadata for PerformPrivateActionRequest.Request.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for PerformPrivateActionRequest.Request.RepairLicenseCodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_233BBABE4 + 4 * byte_233BE1CA5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_233BBAC18 + 4 * byte_233BE1CA0[v4]))();
}

uint64_t sub_233BBAC18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BBAC20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233BBAC28);
  return result;
}

uint64_t sub_233BBAC34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233BBAC3CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_233BBAC40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BBAC48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PerformPrivateActionRequest.Request.RepairLicenseCodingKeys()
{
  return &type metadata for PerformPrivateActionRequest.Request.RepairLicenseCodingKeys;
}

uint64_t _s14MarketplaceKit27PerformPrivateActionRequestV7RequestO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_233BBACB0 + 4 * byte_233BE1CAF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_233BBACE4 + 4 * byte_233BE1CAA[v4]))();
}

uint64_t sub_233BBACE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BBACEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233BBACF4);
  return result;
}

uint64_t sub_233BBAD00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233BBAD08);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_233BBAD0C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BBAD14(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PerformPrivateActionRequest.Request.RepairLicenseByBundleIDCodingKeys()
{
  return &type metadata for PerformPrivateActionRequest.Request.RepairLicenseByBundleIDCodingKeys;
}

uint64_t _s14MarketplaceKit28PerformPrivateActionResponseV8ResponseOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_233BBAD70 + 4 * byte_233BE1CB4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_233BBAD90 + 4 * byte_233BE1CB9[v4]))();
}

_BYTE *sub_233BBAD70(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_233BBAD90(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233BBAD98(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233BBADA0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233BBADA8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233BBADB0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PerformPrivateActionRequest.Request.RenewLicensesCodingKeys()
{
  return &type metadata for PerformPrivateActionRequest.Request.RenewLicensesCodingKeys;
}

unint64_t sub_233BBADD0()
{
  unint64_t result;

  result = qword_256125768;
  if (!qword_256125768)
  {
    result = MEMORY[0x23493E300](&unk_233BE2008, &type metadata for PerformPrivateActionRequest.Request.RenewLicensesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125768);
  }
  return result;
}

unint64_t sub_233BBAE18()
{
  unint64_t result;

  result = qword_256125770;
  if (!qword_256125770)
  {
    result = MEMORY[0x23493E300](&unk_233BE20C0, &type metadata for PerformPrivateActionRequest.Request.RepairLicenseByBundleIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125770);
  }
  return result;
}

unint64_t sub_233BBAE60()
{
  unint64_t result;

  result = qword_256125778;
  if (!qword_256125778)
  {
    result = MEMORY[0x23493E300](&unk_233BE2178, &type metadata for PerformPrivateActionRequest.Request.RepairLicenseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125778);
  }
  return result;
}

unint64_t sub_233BBAEA8()
{
  unint64_t result;

  result = qword_256125780;
  if (!qword_256125780)
  {
    result = MEMORY[0x23493E300](&unk_233BE2230, &type metadata for PerformPrivateActionRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125780);
  }
  return result;
}

unint64_t sub_233BBAEF0()
{
  unint64_t result;

  result = qword_256125788;
  if (!qword_256125788)
  {
    result = MEMORY[0x23493E300](&unk_233BE22E8, &type metadata for PerformPrivateActionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125788);
  }
  return result;
}

unint64_t sub_233BBAF38()
{
  unint64_t result;

  result = qword_256125790;
  if (!qword_256125790)
  {
    result = MEMORY[0x23493E300](&unk_233BE23F0, &type metadata for PerformPrivateActionResponse.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125790);
  }
  return result;
}

unint64_t sub_233BBAF80()
{
  unint64_t result;

  result = qword_256125798;
  if (!qword_256125798)
  {
    result = MEMORY[0x23493E300](&unk_233BE24A8, &type metadata for PerformPrivateActionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125798);
  }
  return result;
}

unint64_t sub_233BBAFC8()
{
  unint64_t result;

  result = qword_2561257A0;
  if (!qword_2561257A0)
  {
    result = MEMORY[0x23493E300](&unk_233BE2418, &type metadata for PerformPrivateActionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561257A0);
  }
  return result;
}

unint64_t sub_233BBB010()
{
  unint64_t result;

  result = qword_2561257A8;
  if (!qword_2561257A8)
  {
    result = MEMORY[0x23493E300](&unk_233BE2440, &type metadata for PerformPrivateActionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561257A8);
  }
  return result;
}

unint64_t sub_233BBB058()
{
  unint64_t result;

  result = qword_2561257B0;
  if (!qword_2561257B0)
  {
    result = MEMORY[0x23493E300](&unk_233BE2310, &type metadata for PerformPrivateActionResponse.Response.IgnoredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561257B0);
  }
  return result;
}

unint64_t sub_233BBB0A0()
{
  unint64_t result;

  result = qword_2561257B8;
  if (!qword_2561257B8)
  {
    result = MEMORY[0x23493E300](&unk_233BE2338, &type metadata for PerformPrivateActionResponse.Response.IgnoredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561257B8);
  }
  return result;
}

unint64_t sub_233BBB0E8()
{
  unint64_t result;

  result = qword_2561257C0;
  if (!qword_2561257C0)
  {
    result = MEMORY[0x23493E300](&unk_233BE2360, &type metadata for PerformPrivateActionResponse.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561257C0);
  }
  return result;
}

unint64_t sub_233BBB130()
{
  unint64_t result;

  result = qword_2561257C8;
  if (!qword_2561257C8)
  {
    result = MEMORY[0x23493E300](&unk_233BE2388, &type metadata for PerformPrivateActionResponse.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561257C8);
  }
  return result;
}

unint64_t sub_233BBB178()
{
  unint64_t result;

  result = qword_2561257D0;
  if (!qword_2561257D0)
  {
    result = MEMORY[0x23493E300](&unk_233BE2258, &type metadata for PerformPrivateActionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561257D0);
  }
  return result;
}

unint64_t sub_233BBB1C0()
{
  unint64_t result;

  result = qword_2561257D8;
  if (!qword_2561257D8)
  {
    result = MEMORY[0x23493E300](&unk_233BE2280, &type metadata for PerformPrivateActionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561257D8);
  }
  return result;
}

unint64_t sub_233BBB208()
{
  unint64_t result;

  result = qword_2561257E0;
  if (!qword_2561257E0)
  {
    result = MEMORY[0x23493E300](&unk_233BE20E8, &type metadata for PerformPrivateActionRequest.Request.RepairLicenseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561257E0);
  }
  return result;
}

unint64_t sub_233BBB250()
{
  unint64_t result;

  result = qword_2561257E8;
  if (!qword_2561257E8)
  {
    result = MEMORY[0x23493E300](&unk_233BE2110, &type metadata for PerformPrivateActionRequest.Request.RepairLicenseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561257E8);
  }
  return result;
}

unint64_t sub_233BBB298()
{
  unint64_t result;

  result = qword_2561257F0;
  if (!qword_2561257F0)
  {
    result = MEMORY[0x23493E300](&unk_233BE2030, &type metadata for PerformPrivateActionRequest.Request.RepairLicenseByBundleIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561257F0);
  }
  return result;
}

unint64_t sub_233BBB2E0()
{
  unint64_t result;

  result = qword_2561257F8;
  if (!qword_2561257F8)
  {
    result = MEMORY[0x23493E300](&unk_233BE2058, &type metadata for PerformPrivateActionRequest.Request.RepairLicenseByBundleIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561257F8);
  }
  return result;
}

unint64_t sub_233BBB328()
{
  unint64_t result;

  result = qword_256125800;
  if (!qword_256125800)
  {
    result = MEMORY[0x23493E300](&unk_233BE1F78, &type metadata for PerformPrivateActionRequest.Request.RenewLicensesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125800);
  }
  return result;
}

unint64_t sub_233BBB370()
{
  unint64_t result;

  result = qword_256125808;
  if (!qword_256125808)
  {
    result = MEMORY[0x23493E300](&unk_233BE1FA0, &type metadata for PerformPrivateActionRequest.Request.RenewLicensesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125808);
  }
  return result;
}

unint64_t sub_233BBB3B8()
{
  unint64_t result;

  result = qword_256125810;
  if (!qword_256125810)
  {
    result = MEMORY[0x23493E300](&unk_233BE21A0, &type metadata for PerformPrivateActionRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125810);
  }
  return result;
}

unint64_t sub_233BBB400()
{
  unint64_t result;

  result = qword_256125818;
  if (!qword_256125818)
  {
    result = MEMORY[0x23493E300](&unk_233BE21C8, &type metadata for PerformPrivateActionRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125818);
  }
  return result;
}

uint64_t sub_233BBB444(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x694C726961706572 && a2 == 0xED000065736E6563;
  if (v2 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000233BE6210 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x63694C77656E6572 && a2 == 0xED00007365736E65)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t AppLibrary.app(forAppleItemID:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD v13[4];
  _OWORD v14[3];
  uint64_t v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124AA0);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_233BD88B8();
  sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  swift_beginAccess();
  v7 = *(_QWORD *)(v1 + 16);
  if (*(_QWORD *)(v7 + 16) && (v8 = sub_233BBFF50(a1), (v9 & 1) != 0))
  {
    v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v8);
    swift_endAccess();
    swift_retain();
  }
  else
  {
    swift_endAccess();
    v15 = 0;
    memset(v14, 0, sizeof(v14));
    v11 = type metadata accessor for MarketplaceKitError();
    memset(v13, 0, sizeof(v13));
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v6, 1, 1, v11);
    type metadata accessor for AppLibrary.App();
    swift_allocObject();
    v10 = sub_233BC82E0(a1, (uint64_t)v14, (uint64_t)v13, (uint64_t)v6);
    sub_233BBDA50(v10);
  }
  swift_release();
  return v10;
}

uint64_t AppLibrary.updateInstallState(forUpdated:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v4;
  uint64_t v5;

  sub_233BD88B8();
  sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  if (AppLibrary.App.isInstalled.getter())
  {
    swift_retain();
    sub_233BD88AC();
    sub_233BD8888();
    if ((swift_task_isCurrentExecutor() & 1) == 0)
      swift_task_reportUnexpectedExecutor();
    swift_getKeyPath();
    sub_233B74300(&qword_256125830, type metadata accessor for AppLibrary, (uint64_t)&protocol conformance descriptor for AppLibrary);
    sub_233BD8570();
    swift_release();
    v5 = v1;
    swift_getKeyPath();
    sub_233BD8588();
    swift_release();
    swift_beginAccess();
    sub_233BC0A74(&v4, a1);
  }
  else
  {
    sub_233BD88AC();
    sub_233BD8888();
    if ((swift_task_isCurrentExecutor() & 1) == 0)
      swift_task_reportUnexpectedExecutor();
    swift_getKeyPath();
    sub_233B74300(&qword_256125830, type metadata accessor for AppLibrary, (uint64_t)&protocol conformance descriptor for AppLibrary);
    sub_233BD8570();
    swift_release();
    v5 = v1;
    swift_getKeyPath();
    sub_233BD8588();
    swift_release();
    swift_beginAccess();
    sub_233BC0CCC(a1);
  }
  swift_endAccess();
  swift_release();
  v5 = v1;
  swift_getKeyPath();
  sub_233BD857C();
  swift_release();
  swift_release();
  if (AppLibrary.App.isInstalling.getter())
  {
    swift_retain();
    sub_233BD88AC();
    sub_233BD8888();
    if ((swift_task_isCurrentExecutor() & 1) == 0)
      swift_task_reportUnexpectedExecutor();
    swift_getKeyPath();
    v5 = v1;
    sub_233B74300(&qword_256125830, type metadata accessor for AppLibrary, (uint64_t)&protocol conformance descriptor for AppLibrary);
    sub_233BD8570();
    swift_release();
    v5 = v1;
    swift_getKeyPath();
    sub_233BD8588();
    swift_release();
    swift_beginAccess();
    sub_233BC0A74(&v4, a1);
  }
  else
  {
    sub_233BD88AC();
    sub_233BD8888();
    if ((swift_task_isCurrentExecutor() & 1) == 0)
      swift_task_reportUnexpectedExecutor();
    swift_getKeyPath();
    v5 = v1;
    sub_233B74300(&qword_256125830, type metadata accessor for AppLibrary, (uint64_t)&protocol conformance descriptor for AppLibrary);
    sub_233BD8570();
    swift_release();
    v5 = v1;
    swift_getKeyPath();
    sub_233BD8588();
    swift_release();
    swift_beginAccess();
    sub_233BC0CCC(a1);
  }
  swift_endAccess();
  swift_release();
  v5 = v1;
  swift_getKeyPath();
  sub_233BD857C();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_233BBBCF4()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for AppLibrary(0);
  v0 = swift_allocObject();
  result = sub_233BBCBEC();
  qword_256125820 = v0;
  return result;
}

uint64_t static AppLibrary.current.getter()
{
  if (qword_2561237B0 != -1)
    swift_once();
  return swift_retain();
}

uint64_t AppLibrary.installedApps.getter()
{
  uint64_t v0;
  uint64_t v1;

  sub_233BD88B8();
  sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  swift_getKeyPath();
  sub_233B74300(&qword_256125830, type metadata accessor for AppLibrary, (uint64_t)&protocol conformance descriptor for AppLibrary);
  sub_233BD8570();
  swift_release();
  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  swift_release();
  return v1;
}

uint64_t sub_233BBBE78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = AppLibrary.installedApps.getter();
  *a1 = result;
  return result;
}

uint64_t sub_233BBBEA0()
{
  swift_bridgeObjectRetain();
  return AppLibrary.installedApps.setter();
}

uint64_t AppLibrary.installedApps.setter()
{
  uint64_t KeyPath;
  uint64_t v1;

  sub_233BD88B8();
  sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath, v1);
  sub_233B74300(&qword_256125830, type metadata accessor for AppLibrary, (uint64_t)&protocol conformance descriptor for AppLibrary);
  sub_233BD8564();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_233BBBFFC(uint64_t a1, uint64_t a2)
{
  sub_233BD88B8();
  sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  swift_beginAccess();
  *(_QWORD *)(a1 + 24) = a2;
  swift_bridgeObjectRetain();
  swift_release();
  return swift_bridgeObjectRelease();
}

void (*AppLibrary.installedApps.modify(_QWORD *a1))(_QWORD **a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x38uLL);
  *a1 = v4;
  v4[3] = v2;
  sub_233BD88B8();
  v4[4] = sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC14MarketplaceKit10AppLibrary___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_233B74300(&qword_256125830, type metadata accessor for AppLibrary, (uint64_t)&protocol conformance descriptor for AppLibrary);
  sub_233BD8570();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_233BD8588();
  swift_release();
  swift_beginAccess();
  return sub_233BBC218;
}

void sub_233BBC218(_QWORD **a1)
{
  sub_233BBCB74(a1);
}

uint64_t AppLibrary.installingApps.getter()
{
  uint64_t v0;
  uint64_t v1;

  sub_233BD88B8();
  sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  swift_getKeyPath();
  sub_233B74300(&qword_256125830, type metadata accessor for AppLibrary, (uint64_t)&protocol conformance descriptor for AppLibrary);
  sub_233BD8570();
  swift_release();
  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  swift_release();
  return v1;
}

uint64_t sub_233BBC32C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = AppLibrary.installingApps.getter();
  *a1 = result;
  return result;
}

uint64_t sub_233BBC354()
{
  swift_bridgeObjectRetain();
  return AppLibrary.installingApps.setter();
}

uint64_t AppLibrary.installingApps.setter()
{
  uint64_t KeyPath;
  uint64_t v1;

  sub_233BD88B8();
  sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath, v1);
  sub_233B74300(&qword_256125830, type metadata accessor for AppLibrary, (uint64_t)&protocol conformance descriptor for AppLibrary);
  sub_233BD8564();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_233BBC4B0(uint64_t a1, uint64_t a2)
{
  sub_233BD88B8();
  sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  swift_beginAccess();
  *(_QWORD *)(a1 + 32) = a2;
  swift_bridgeObjectRetain();
  swift_release();
  return swift_bridgeObjectRelease();
}

void (*AppLibrary.installingApps.modify(_QWORD *a1))(_QWORD **a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x38uLL);
  *a1 = v4;
  v4[3] = v2;
  sub_233BD88B8();
  v4[4] = sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC14MarketplaceKit10AppLibrary___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_233B74300(&qword_256125830, type metadata accessor for AppLibrary, (uint64_t)&protocol conformance descriptor for AppLibrary);
  sub_233BD8570();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_233BD8588();
  swift_release();
  swift_beginAccess();
  return sub_233BBC6CC;
}

void sub_233BBC6CC(_QWORD **a1)
{
  sub_233BBCB74(a1);
}

uint64_t AppLibrary.isLoading.getter()
{
  uint64_t v0;
  uint64_t v1;

  sub_233BD88B8();
  sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  swift_getKeyPath();
  sub_233B74300(&qword_256125830, type metadata accessor for AppLibrary, (uint64_t)&protocol conformance descriptor for AppLibrary);
  sub_233BD8570();
  swift_release();
  swift_beginAccess();
  v1 = *(unsigned __int8 *)(v0 + 40);
  swift_release();
  return v1;
}

uint64_t sub_233BBC7D8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = AppLibrary.isLoading.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_233BBC804()
{
  return AppLibrary.isLoading.setter();
}

uint64_t AppLibrary.isLoading.setter()
{
  uint64_t KeyPath;
  uint64_t v1;

  sub_233BD88B8();
  sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath, v1);
  sub_233B74300(&qword_256125830, type metadata accessor for AppLibrary, (uint64_t)&protocol conformance descriptor for AppLibrary);
  sub_233BD8564();
  swift_release();
  return swift_release();
}

uint64_t sub_233BBC95C(uint64_t a1, char a2)
{
  sub_233BD88B8();
  sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  swift_beginAccess();
  *(_BYTE *)(a1 + 40) = a2 & 1;
  return swift_release();
}

void (*AppLibrary.isLoading.modify(_QWORD *a1))(_QWORD **a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x38uLL);
  *a1 = v4;
  v4[3] = v2;
  sub_233BD88B8();
  v4[4] = sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC14MarketplaceKit10AppLibrary___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_233B74300(&qword_256125830, type metadata accessor for AppLibrary, (uint64_t)&protocol conformance descriptor for AppLibrary);
  sub_233BD8570();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_233BD8588();
  swift_release();
  swift_beginAccess();
  return sub_233BBCB68;
}

void sub_233BBCB68(_QWORD **a1)
{
  sub_233BBCB74(a1);
}

void sub_233BBCB74(_QWORD **a1)
{
  _QWORD *v1;

  v1 = *a1;
  swift_endAccess();
  *v1 = v1[3];
  swift_getKeyPath();
  sub_233BD857C();
  swift_release();
  swift_release();
  free(v1);
}

uint64_t sub_233BBCBEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  void *v4;

  v1 = v0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v1 + 16) = sub_233B87F28(MEMORY[0x24BEE4AF8]);
  if ((v2 & 0xC000000000000000) != 0)
  {
    if (sub_233BD8AF8())
    {
      *(_QWORD *)(v1 + 24) = sub_233BC3334(MEMORY[0x24BEE4AF8]);
    }
    else
    {
      v3 = MEMORY[0x24BEE4B08];
      *(_QWORD *)(v1 + 24) = MEMORY[0x24BEE4B08];
      if ((v2 & 0xC000000000000000) == 0)
        goto LABEL_3;
    }
    if (sub_233BD8AF8())
      v3 = sub_233BC3334(MEMORY[0x24BEE4AF8]);
    else
      v3 = MEMORY[0x24BEE4B08];
  }
  else
  {
    v3 = MEMORY[0x24BEE4B08];
    *(_QWORD *)(v1 + 24) = MEMORY[0x24BEE4B08];
  }
LABEL_3:
  *(_QWORD *)(v1 + 32) = v3;
  *(_BYTE *)(v1 + 40) = 1;
  sub_233BD8594();
  sub_233BD872C();
  v4 = (void *)sub_233BD8720();
  swift_retain();
  sub_233BD8708();

  swift_release();
  return v1;
}

uint64_t sub_233BBCCE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[6];

  v24 = a2;
  v3 = sub_233BD87BC();
  v27 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_233BD8798();
  v25 = *(_QWORD *)(v7 - 8);
  v26 = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_233BD8780();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_233BD8750();
  swift_bridgeObjectRetain();
  v16 = sub_233BD8768();
  v17 = sub_233BD8960();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v18 = 134217984;
    aBlock[0] = *(_QWORD *)(a1 + 16);
    sub_233BD89CC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_233B6C000, v16, v17, "Received %ld apps", v18, 0xCu);
    MEMORY[0x23493E3B4](v18, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  sub_233B9144C();
  v19 = (void *)sub_233BD8990();
  sub_233BD878C();
  v20 = swift_allocObject();
  v21 = v24;
  *(_QWORD *)(v20 + 16) = a1;
  *(_QWORD *)(v20 + 24) = v21;
  aBlock[4] = sub_233BC3638;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_233BBDC20;
  aBlock[3] = &block_descriptor_10;
  v22 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_233BD87B0();
  MEMORY[0x23493DB14](0, v6, v10, v22);
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v26);
  return swift_release();
}

uint64_t sub_233BBCF8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void (*v20)(void (*)(char *, uint64_t), unint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t result;
  int64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t KeyPath;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  uint64_t v66;
  char *v67;
  __int128 v68;
  char *v69;
  uint64_t v70;
  int64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  _OWORD v84[4];
  _OWORD v85[3];
  uint64_t v86;

  v77 = sub_233BD8780();
  v76 = *(_QWORD *)(v77 - 8);
  v5 = MEMORY[0x24BDAC7A8](v77, v4);
  v79 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v7);
  v67 = (char *)&v66 - v8;
  v9 = sub_233BD86F0();
  v78 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9, v10);
  v73 = (void (*)(char *, uint64_t))((char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (void (*)(char *, uint64_t))((char *)&v66 - v14);
  v80 = 0;
  v16 = sub_233BD88B8();
  v66 = sub_233BD88AC();
  v81 = v16;
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  v17 = *(_QWORD *)(a1 + 16);
  if (v17)
  {
    v18 = a2 + 16;
    v19 = a1 + ((*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80));
    v74 = *(_QWORD *)(v78 + 72);
    v20 = *(void (**)(void (*)(char *, uint64_t), unint64_t, uint64_t))(v78 + 16);
    v72 = a1;
    swift_bridgeObjectRetain();
    v21 = MEMORY[0x24BEE4B08];
    do
    {
      v20(v15, v19, v9);
      v25 = sub_233BD8684();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v84[0] = v21;
      sub_233BC2FD4(v25, isUniquelyReferenced_nonNull_native);
      v21 = *(_QWORD *)&v84[0];
      swift_bridgeObjectRelease();
      v27 = sub_233BD8684();
      swift_beginAccess();
      v28 = *(_QWORD *)v18;
      if (*(_QWORD *)(*(_QWORD *)v18 + 16) && (v29 = sub_233BBFF50(v27), (v30 & 1) != 0))
      {
        v23 = *(_QWORD *)(*(_QWORD *)(v28 + 56) + 8 * v29);
        swift_endAccess();
        swift_retain_n();
        sub_233BC3B1C(v15);
      }
      else
      {
        swift_endAccess();
        v22 = (uint64_t)v73;
        v20(v73, (unint64_t)v15, v9);
        v23 = sub_233BCA688(v22);
        v24 = swift_retain();
        sub_233BBDA50(v24);
      }
      swift_release();
      AppLibrary.updateInstallState(forUpdated:)(v23);
      swift_release();
      (*(void (**)(_QWORD, uint64_t))(v78 + 8))(v15, v9);
      v19 += v74;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
  }
  else
  {
    v21 = MEMORY[0x24BEE4B08];
  }
  swift_beginAccess();
  v31 = *(_QWORD *)(a2 + 16);
  v32 = *(_QWORD *)(v31 + 64);
  v70 = v31 + 64;
  v33 = 1 << *(_BYTE *)(v31 + 32);
  if (v33 < 64)
    v34 = ~(-1 << v33);
  else
    v34 = -1;
  v35 = v34 & v32;
  v71 = (unint64_t)(v33 + 63) >> 6;
  v36 = (void (*)(char *, uint64_t))(v21 + 56);
  v69 = &v83;
  v78 = v31;
  result = swift_bridgeObjectRetain();
  v38 = 0;
  *(_QWORD *)&v39 = 134217984;
  v68 = v39;
  v72 = MEMORY[0x24BEE4AE0] + 8;
  v75 = a2;
  v74 = v21;
  v73 = (void (*)(char *, uint64_t))(v21 + 56);
LABEL_17:
  while (v35)
  {
    v42 = __clz(__rbit64(v35));
    v35 &= v35 - 1;
    v43 = v42 | (v38 << 6);
LABEL_32:
    v47 = *(_QWORD *)(*(_QWORD *)(v78 + 56) + 8 * v43);
    if (!*(_QWORD *)(v21 + 16))
      goto LABEL_39;
    v48 = *(_QWORD *)(v47 + 16);
    result = sub_233BD8CF0();
    v49 = -1 << *(_BYTE *)(v21 + 32);
    v50 = result & ~v49;
    if (((*(_QWORD *)((char *)v36 + ((v50 >> 3) & 0xFFFFFFFFFFFFF8)) >> v50) & 1) == 0)
      goto LABEL_39;
    v51 = *(_QWORD *)(v21 + 48);
    if (*(_QWORD *)(v51 + 8 * v50) != v48)
    {
      v52 = ~v49;
      while (1)
      {
        v50 = (v50 + 1) & v52;
        if (((*(_QWORD *)((char *)v36 + ((v50 >> 3) & 0xFFFFFFFFFFFFF8)) >> v50) & 1) == 0)
          break;
        if (*(_QWORD *)(v51 + 8 * v50) == v48)
          goto LABEL_17;
      }
LABEL_39:
      swift_retain();
      sub_233BD8750();
      swift_retain_n();
      v53 = sub_233BD8768();
      v54 = sub_233BD8954();
      if (os_log_type_enabled(v53, v54))
      {
        v55 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v55 = v68;
        sub_233BD88AC();
        sub_233BD8888();
        if ((swift_task_isCurrentExecutor() & 1) == 0)
          swift_task_reportUnexpectedExecutor();
        v56 = *(_QWORD *)(v47 + 16);
        swift_release();
        swift_release();
        v82 = v56;
        sub_233BD89CC();
        swift_release();
        _os_log_impl(&dword_233B6C000, v53, v54, "Known app %llu is not installed", v55, 0xCu);
        MEMORY[0x23493E3B4](v55, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      (*(void (**)(char *, uint64_t))(v76 + 8))(v79, v77);
      v86 = 0;
      memset(v85, 0, sizeof(v85));
      sub_233BD88AC();
      sub_233BD8888();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      KeyPath = swift_getKeyPath();
      MEMORY[0x24BDAC7A8](KeyPath, v58);
      *(&v66 - 2) = v47;
      *(&v66 - 1) = (uint64_t)v85;
      v82 = v47;
      sub_233B74300((unint64_t *)&qword_256124AA8, (uint64_t (*)(uint64_t))type metadata accessor for AppLibrary.App, (uint64_t)&protocol conformance descriptor for AppLibrary.App);
      v59 = v80;
      sub_233BD8564();
      swift_release();
      swift_release();
      memset(v84, 0, sizeof(v84));
      sub_233BD88AC();
      sub_233BD8888();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      v40 = swift_getKeyPath();
      MEMORY[0x24BDAC7A8](v40, v41);
      *(&v66 - 2) = v47;
      *(&v66 - 1) = (uint64_t)v84;
      v82 = v47;
      sub_233BD8564();
      v80 = v59;
      swift_release();
      swift_release();
      a2 = v75;
      AppLibrary.updateInstallState(forUpdated:)(v47);
      result = swift_release();
      v21 = v74;
      v36 = v73;
    }
  }
  if (__OFADD__(v38++, 1))
  {
    __break(1u);
LABEL_58:
    __break(1u);
    return result;
  }
  if (v38 >= v71)
    goto LABEL_52;
  v45 = *(_QWORD *)(v70 + 8 * v38);
  if (v45)
  {
LABEL_31:
    v35 = (v45 - 1) & v45;
    v43 = __clz(__rbit64(v45)) + (v38 << 6);
    goto LABEL_32;
  }
  v46 = v38 + 1;
  if (v38 + 1 >= v71)
    goto LABEL_52;
  v45 = *(_QWORD *)(v70 + 8 * v46);
  if (v45)
    goto LABEL_30;
  v46 = v38 + 2;
  if (v38 + 2 >= v71)
    goto LABEL_52;
  v45 = *(_QWORD *)(v70 + 8 * v46);
  if (v45)
    goto LABEL_30;
  v46 = v38 + 3;
  if (v38 + 3 >= v71)
    goto LABEL_52;
  v45 = *(_QWORD *)(v70 + 8 * v46);
  if (v45)
  {
LABEL_30:
    v38 = v46;
    goto LABEL_31;
  }
  v46 = v38 + 4;
  if (v38 + 4 < v71)
  {
    v45 = *(_QWORD *)(v70 + 8 * v46);
    if (!v45)
    {
      while (1)
      {
        v38 = v46 + 1;
        if (__OFADD__(v46, 1))
          goto LABEL_58;
        if (v38 >= v71)
          goto LABEL_52;
        v45 = *(_QWORD *)(v70 + 8 * v38);
        ++v46;
        if (v45)
          goto LABEL_31;
      }
    }
    goto LABEL_30;
  }
LABEL_52:
  swift_release();
  v60 = v67;
  swift_bridgeObjectRelease();
  sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  v61 = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](v61, v62);
  *(&v66 - 2) = a2;
  *((_BYTE *)&v66 - 8) = 0;
  v82 = a2;
  sub_233B74300(&qword_256125830, type metadata accessor for AppLibrary, (uint64_t)&protocol conformance descriptor for AppLibrary);
  sub_233BD8564();
  swift_release();
  swift_release();
  sub_233BD8750();
  v63 = sub_233BD8768();
  v64 = sub_233BD8960();
  if (os_log_type_enabled(v63, v64))
  {
    v65 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v65 = 0;
    _os_log_impl(&dword_233B6C000, v63, v64, "Finished updating catalog", v65, 2u);
    MEMORY[0x23493E3B4](v65, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v76 + 8))(v60, v77);
  return swift_release();
}

uint64_t sub_233BBDA50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123A58);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_233BD88B8();
  sub_233BD88AC();
  v8 = MEMORY[0x24BEE6930];
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  v9 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v15 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v1 + 16) = 0x8000000000000000;
  sub_233BC31F4(a1, v9, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v1 + 16) = v15;
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_233BD88C4();
  v11 = sub_233BD88DC();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 0, 1, v11);
  swift_retain();
  swift_retain();
  v12 = sub_233BD88AC();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v12;
  v13[3] = v8;
  v13[4] = a1;
  v13[5] = v2;
  sub_233BBDFBC((uint64_t)v7, (uint64_t)&unk_256125A18, (uint64_t)v13);
  swift_release();
  sub_233B71DBC((uint64_t)v7, &qword_256123A58);
  return swift_release();
}

uint64_t sub_233BBDC20(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_233BBDC4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[2] = a4;
  v5[3] = a5;
  v6 = sub_233BD8600();
  v5[4] = v6;
  v5[5] = *(_QWORD *)(v6 - 8);
  v5[6] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256125A28);
  v5[7] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125A30);
  v5[8] = v7;
  v5[9] = *(_QWORD *)(v7 - 8);
  v5[10] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125A38);
  v5[11] = v8;
  v5[12] = *(_QWORD *)(v8 - 8);
  v5[13] = swift_task_alloc();
  v5[14] = sub_233BD88B8();
  v5[15] = sub_233BD88AC();
  v5[16] = sub_233BD8888();
  v5[17] = v9;
  return swift_task_switch();
}

uint64_t sub_233BBDD60()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[9];
  v1 = v0[10];
  v3 = v0[8];
  sub_233BC5D7C();
  sub_233BD8900();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[18] = sub_233BD88AC();
  v4 = (_QWORD *)swift_task_alloc();
  v0[19] = v4;
  *v4 = v0;
  v4[1] = sub_233BBDE1C;
  return sub_233BD890C();
}

uint64_t sub_233BBDE1C()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_233BBDE70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v5)(char *, uint64_t);
  uint64_t v6;
  _QWORD *v7;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v5 = *(void (**)(char *, uint64_t))(v0 + 48);
    v6 = *(_QWORD *)(v0 + 16);
    (*(void (**)(void (*)(char *, uint64_t), uint64_t, uint64_t))(v3 + 32))(v5, v1, v2);
    sub_233BC5F68(v5);
    AppLibrary.updateInstallState(forUpdated:)(v6);
    (*(void (**)(_QWORD, uint64_t))(v3 + 8))(v5, v2);
    *(_QWORD *)(v0 + 144) = sub_233BD88AC();
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v7;
    *v7 = v0;
    v7[1] = sub_233BBDE1C;
    return sub_233BD890C();
  }
}

uint64_t sub_233BBDFBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123A58);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_233B71D78(a1, (uint64_t)v9, &qword_256123A58);
  v10 = sub_233BD88DC();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_233B71DBC((uint64_t)v9, &qword_256123A58);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v12 = sub_233BD8888();
      v14 = v13;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_233BD88D0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v12 = 0;
  v14 = 0;
LABEL_6:
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = a3;
  if (v14 | v12)
  {
    v17[0] = 0;
    v17[1] = 0;
    v17[2] = v12;
    v17[3] = v14;
  }
  return swift_task_create();
}

uint64_t AppLibrary.InstallationRequest.alternativeDistributionPackageURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_233BD851C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t AppLibrary.InstallationRequest.alternativeDistributionPackageURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_233BD851C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*AppLibrary.InstallationRequest.alternativeDistributionPackageURL.modify())()
{
  return nullsub_1;
}

uint64_t AppLibrary.InstallationRequest.account.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AppLibrary.InstallationRequest(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppLibrary.InstallationRequest.account.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for AppLibrary.InstallationRequest(0) + 20));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*AppLibrary.InstallationRequest.account.modify())()
{
  type metadata accessor for AppLibrary.InstallationRequest(0);
  return nullsub_1;
}

uint64_t AppLibrary.InstallationRequest.installVerificationToken.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AppLibrary.InstallationRequest(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppLibrary.InstallationRequest.installVerificationToken.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for AppLibrary.InstallationRequest(0) + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*AppLibrary.InstallationRequest.installVerificationToken.modify())()
{
  type metadata accessor for AppLibrary.InstallationRequest(0);
  return nullsub_1;
}

uint64_t AppLibrary.InstallationRequest.appShareURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for AppLibrary.InstallationRequest(0);
  return sub_233B71D78(v1 + *(int *)(v3 + 28), a1, &qword_256123848);
}

uint64_t AppLibrary.InstallationRequest.appShareURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for AppLibrary.InstallationRequest(0) + 28);
  return sub_233B6EF60(a1, v3);
}

uint64_t (*AppLibrary.InstallationRequest.appShareURL.modify())()
{
  type metadata accessor for AppLibrary.InstallationRequest(0);
  return nullsub_1;
}

uint64_t AppLibrary.InstallationRequest.init(alternativeDistributionPackageURL:account:installVerificationToken:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = (int *)type metadata accessor for AppLibrary.InstallationRequest(0);
  v13 = a6 + v12[7];
  v14 = sub_233BD851C();
  v15 = *(_QWORD *)(v14 - 8);
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v19(v13, 1, 1, v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(a6, a1, v14);
  v16 = (_QWORD *)(a6 + v12[5]);
  *v16 = a2;
  v16[1] = a3;
  v17 = (_QWORD *)(a6 + v12[6]);
  *v17 = a4;
  v17[1] = a5;
  sub_233B71DBC(v13, &qword_256123848);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v19)(v13, 1, 1, v14);
}

uint64_t AppLibrary.requestAppInstallation(for:account:installVerificationToken:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v5[7] = type metadata accessor for AppInstallRequest();
  v5[8] = swift_task_alloc();
  v6 = sub_233BD851C();
  v5[9] = v6;
  v5[10] = *(_QWORD *)(v6 - 8);
  v5[11] = swift_task_alloc();
  v5[12] = type metadata accessor for AppLibrary.InstallationRequest(0);
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233BBE564()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v10;
  int *v11;
  _QWORD *v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;

  v1 = v0[13];
  v3 = v0[11];
  v2 = (int *)v0[12];
  v5 = v0[9];
  v4 = v0[10];
  v7 = (int *)v0[7];
  v6 = v0[8];
  v31 = v0[5];
  v32 = v0[6];
  v29 = v0[3];
  v30 = v0[4];
  v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v34 = v0[14];
  v33(v3, v0[2], v5);
  v8 = v1 + v2[7];
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v9(v8, 1, 1, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v1, v3, v5);
  v10 = (_QWORD *)(v1 + v2[5]);
  *v10 = v29;
  v10[1] = v30;
  v11 = v2;
  v12 = (_QWORD *)(v1 + v2[6]);
  *v12 = v31;
  v12[1] = v32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_233B71DBC(v8, &qword_256123848);
  v13 = v5;
  v9(v8, 1, 1, v5);
  v14 = v9;
  sub_233B7FD64(v1, v34, type metadata accessor for AppLibrary.InstallationRequest);
  v33(v6 + v7[5], v34, v13);
  v15 = v6 + v7[9];
  v16 = *MEMORY[0x24BDDAB98];
  v17 = sub_233BD85E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v15, v16, v17);
  v18 = v11[5];
  v19 = (uint64_t *)(v34 + v11[6]);
  v21 = *v19;
  v20 = v19[1];
  v23 = *(_QWORD *)(v34 + v18);
  v22 = *(_QWORD *)(v34 + v18 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_233BD854C();
  v24 = (_QWORD *)(v6 + v7[6]);
  *v24 = 0;
  v24[1] = 0;
  v25 = (_QWORD *)(v6 + v7[7]);
  *v25 = v21;
  v25[1] = v20;
  v26 = (_QWORD *)(v6 + v7[8]);
  *v26 = v23;
  v26[1] = v22;
  *(_BYTE *)(v6 + v7[10]) = 0;
  v14(v6 + v7[11], 1, 1, v13);
  v14(v6 + v7[12], 1, 1, v13);
  v27 = (_QWORD *)swift_task_alloc();
  v0[15] = v27;
  *v27 = v0;
  v27[1] = sub_233BBE788;
  return AppInstallRequest.request()();
}

uint64_t sub_233BBE788()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_233BBE7EC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  sub_233B8073C(*(_QWORD *)(v0 + 64), (uint64_t (*)(_QWORD))type metadata accessor for AppInstallRequest);
  sub_233B8073C(v1, type metadata accessor for AppLibrary.InstallationRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233BBE86C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  sub_233B8073C(*(_QWORD *)(v0 + 64), (uint64_t (*)(_QWORD))type metadata accessor for AppInstallRequest);
  sub_233B8073C(v1, type metadata accessor for AppLibrary.InstallationRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AppLibrary.requestAppInstallation(_:)(uint64_t a1)
{
  _QWORD *v1;

  v1[2] = a1;
  v1[3] = type metadata accessor for AppInstallRequest();
  v1[4] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233BBE948()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  void (*v20)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v21;

  v2 = (int *)v0[3];
  v1 = v0[4];
  v3 = v0[2];
  v4 = v1 + v2[5];
  v5 = sub_233BD851C();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v3, v5);
  v7 = v1 + v2[9];
  v8 = *MEMORY[0x24BDDAB98];
  v9 = sub_233BD85E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  v10 = type metadata accessor for AppLibrary.InstallationRequest(0);
  v11 = *(int *)(v10 + 20);
  v12 = (uint64_t *)(v3 + *(int *)(v10 + 24));
  v14 = *v12;
  v13 = v12[1];
  v16 = *(_QWORD *)(v3 + v11);
  v15 = *(_QWORD *)(v3 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_233BD854C();
  v17 = (_QWORD *)(v1 + v2[6]);
  *v17 = 0;
  v17[1] = 0;
  v18 = (_QWORD *)(v1 + v2[7]);
  *v18 = v14;
  v18[1] = v13;
  v19 = (_QWORD *)(v1 + v2[8]);
  *v19 = v16;
  v19[1] = v15;
  *(_BYTE *)(v1 + v2[10]) = 0;
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v20(v1 + v2[11], 1, 1, v5);
  v20(v1 + v2[12], 1, 1, v5);
  v21 = (_QWORD *)swift_task_alloc();
  v0[5] = v21;
  *v21 = v0;
  v21[1] = sub_233BBEAA8;
  return AppInstallRequest.request()();
}

uint64_t sub_233BBEAA8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_233BBEB0C()
{
  uint64_t v0;

  sub_233B8073C(*(_QWORD *)(v0 + 32), (uint64_t (*)(_QWORD))type metadata accessor for AppInstallRequest);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233BBEB54()
{
  uint64_t v0;

  sub_233B8073C(*(_QWORD *)(v0 + 32), (uint64_t (*)(_QWORD))type metadata accessor for AppInstallRequest);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AppLibrary.requestAppInstallationFromBrowser(for:referrer:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = a2;
  v3 = sub_233BD851C();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  v2[7] = swift_task_alloc();
  type metadata accessor for LinkMetadata();
  v2[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256125850);
  v2[9] = swift_task_alloc();
  v4 = type metadata accessor for AppInstallRequest();
  v2[10] = v4;
  v2[11] = *(_QWORD *)(v4 - 8);
  v2[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233BBEC78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  _QWORD *v11;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(v0 + 32);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 40) + 16);
  v9(v5, *(_QWORD *)(v0 + 24), v7);
  v9(v6, v8, v7);
  sub_233BD7958(v5, v6, v4);
  sub_233BAC800(v4, v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_233B71DBC(*(_QWORD *)(v0 + 72), &qword_256125850);
    type metadata accessor for MarketplaceKitError();
    sub_233B74300((unint64_t *)&qword_256123B10, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_233B7FD64(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 96), (uint64_t (*)(_QWORD))type metadata accessor for AppInstallRequest);
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v11;
    *v11 = v0;
    v11[1] = sub_233BBEE24;
    return AppInstallRequest.request()();
  }
}

uint64_t sub_233BBEE24()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_233BBEE88()
{
  uint64_t v0;

  sub_233B8073C(*(_QWORD *)(v0 + 96), (uint64_t (*)(_QWORD))type metadata accessor for AppInstallRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233BBEF08()
{
  uint64_t v0;

  sub_233B8073C(*(_QWORD *)(v0 + 96), (uint64_t (*)(_QWORD))type metadata accessor for AppInstallRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AppLibrary.requestAppUpdate(_:)(uint64_t a1)
{
  _QWORD *v1;

  v1[2] = a1;
  v1[3] = type metadata accessor for AppInstallRequest();
  v1[4] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233BBEFE0()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  void (*v20)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v21;

  v2 = (int *)v0[3];
  v1 = v0[4];
  v3 = v0[2];
  v4 = v1 + v2[5];
  v5 = sub_233BD851C();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v3, v5);
  v7 = v1 + v2[9];
  v8 = *MEMORY[0x24BDDABA0];
  v9 = sub_233BD85E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  v10 = type metadata accessor for AppLibrary.InstallationRequest(0);
  v11 = *(int *)(v10 + 20);
  v12 = (uint64_t *)(v3 + *(int *)(v10 + 24));
  v14 = *v12;
  v13 = v12[1];
  v16 = *(_QWORD *)(v3 + v11);
  v15 = *(_QWORD *)(v3 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_233BD854C();
  v17 = (_QWORD *)(v1 + v2[6]);
  *v17 = 0;
  v17[1] = 0;
  v18 = (_QWORD *)(v1 + v2[7]);
  *v18 = v14;
  v18[1] = v13;
  v19 = (_QWORD *)(v1 + v2[8]);
  *v19 = v16;
  v19[1] = v15;
  *(_BYTE *)(v1 + v2[10]) = 0;
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v20(v1 + v2[11], 1, 1, v5);
  v20(v1 + v2[12], 1, 1, v5);
  v21 = (_QWORD *)swift_task_alloc();
  v0[5] = v21;
  *v21 = v0;
  v21[1] = sub_233BBF140;
  return AppInstallRequest.request()();
}

uint64_t sub_233BBF140()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t AppLibrary.requestAppUpdate(for:account:installVerificationToken:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v5[7] = type metadata accessor for AppInstallRequest();
  v5[8] = swift_task_alloc();
  v6 = sub_233BD851C();
  v5[9] = v6;
  v5[10] = *(_QWORD *)(v6 - 8);
  v5[11] = swift_task_alloc();
  v5[12] = type metadata accessor for AppLibrary.InstallationRequest(0);
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233BBF264()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v10;
  int *v11;
  _QWORD *v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;

  v1 = v0[13];
  v3 = v0[11];
  v2 = (int *)v0[12];
  v5 = v0[9];
  v4 = v0[10];
  v7 = (int *)v0[7];
  v6 = v0[8];
  v31 = v0[5];
  v32 = v0[6];
  v29 = v0[3];
  v30 = v0[4];
  v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v34 = v0[14];
  v33(v3, v0[2], v5);
  v8 = v1 + v2[7];
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v9(v8, 1, 1, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v1, v3, v5);
  v10 = (_QWORD *)(v1 + v2[5]);
  *v10 = v29;
  v10[1] = v30;
  v11 = v2;
  v12 = (_QWORD *)(v1 + v2[6]);
  *v12 = v31;
  v12[1] = v32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_233B71DBC(v8, &qword_256123848);
  v13 = v5;
  v9(v8, 1, 1, v5);
  v14 = v9;
  sub_233B7FD64(v1, v34, type metadata accessor for AppLibrary.InstallationRequest);
  v33(v6 + v7[5], v34, v13);
  v15 = v6 + v7[9];
  v16 = *MEMORY[0x24BDDABA0];
  v17 = sub_233BD85E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v15, v16, v17);
  v18 = v11[5];
  v19 = (uint64_t *)(v34 + v11[6]);
  v21 = *v19;
  v20 = v19[1];
  v23 = *(_QWORD *)(v34 + v18);
  v22 = *(_QWORD *)(v34 + v18 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_233BD854C();
  v24 = (_QWORD *)(v6 + v7[6]);
  *v24 = 0;
  v24[1] = 0;
  v25 = (_QWORD *)(v6 + v7[7]);
  *v25 = v21;
  v25[1] = v20;
  v26 = (_QWORD *)(v6 + v7[8]);
  *v26 = v23;
  v26[1] = v22;
  *(_BYTE *)(v6 + v7[10]) = 0;
  v14(v6 + v7[11], 1, 1, v13);
  v14(v6 + v7[12], 1, 1, v13);
  v27 = (_QWORD *)swift_task_alloc();
  v0[15] = v27;
  *v27 = v0;
  v27[1] = sub_233BBF488;
  return AppInstallRequest.request()();
}

uint64_t sub_233BBF488()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t AppLibrary.didAuthenticate(account:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return swift_task_switch();
}

uint64_t sub_233BBF504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 56);
  v2 = qword_25424FEB8;
  swift_bridgeObjectRetain();
  if (v2 != -1)
    swift_once();
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 24) = v1;
  *(_BYTE *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = v0 + 16;
  sub_233B7FEDC();
  v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_256123CF0 + dword_256123CF0);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v3;
  *v3 = v0;
  v3[1] = sub_233BBF5D8;
  return v5((uint64_t)v5, v0 + 40, (uint64_t)sub_233BD1B20, 0);
}

uint64_t sub_233BBF5D8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    sub_233B7FEE8();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_233BBF654()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233BBF65C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 72);
  sub_233B7FEE8();

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AppLibrary.signalAccountHasAuthenticated(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return swift_task_switch();
}

uint64_t sub_233BBF6C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 56);
  v2 = qword_25424FEB8;
  swift_bridgeObjectRetain();
  if (v2 != -1)
    swift_once();
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 24) = v1;
  *(_BYTE *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = v0 + 16;
  sub_233B7FEDC();
  v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_256123CF0 + dword_256123CF0);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v3;
  *v3 = v0;
  v3[1] = sub_233BBF794;
  return v5((uint64_t)v5, v0 + 40, (uint64_t)sub_233BD1B20, 0);
}

uint64_t sub_233BBF794()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    sub_233B7FEE8();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t AppLibrary.searchTerritory.getter()
{
  return swift_task_switch();
}

uint64_t sub_233BBF824()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);

  if (qword_25424FEB8 != -1)
    swift_once();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_256123D60 + dword_256123D60);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_233BBF8D4;
  return v3(v0 + 16, v0 + 40, (uint64_t)sub_233BA17D8, 0);
}

uint64_t sub_233BBF8D4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_233BBF938()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  int v3;
  void *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(unsigned __int8 *)(v0 + 32);
  if (v3 != 7)
  {
    type metadata accessor for MarketplaceKitError();
    sub_233B74300((unint64_t *)&qword_256123B10, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v4 = (void *)swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_233B7EE40(v2, v1, v3);

    v2 = 0;
    v1 = 0;
  }
  return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_233BBFA04()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(0, 0);
}

uint64_t AppLibrary.setSearchTerritory(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = a2;
  type metadata accessor for SetPublicDataRequest(0);
  v2[4] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233BBFA94()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v1 = v0[3];
  v2 = (_QWORD *)v0[4];
  *v2 = v0[2];
  v2[1] = v1;
  type metadata accessor for SetPublicDataRequest.Request(0);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  v3 = (_QWORD *)swift_task_alloc();
  v0[5] = v3;
  *v3 = v0;
  v3[1] = sub_233BBFB10;
  return SetPublicDataRequest.run()();
}

uint64_t sub_233BBFB10()
{
  void *v0;

  swift_task_dealloc();
  if (v0)

  return swift_task_switch();
}

uint64_t sub_233BBFB7C()
{
  uint64_t v0;

  sub_233B8073C(*(_QWORD *)(v0 + 32), type metadata accessor for SetPublicDataRequest);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AppLibrary.requestLicenseRenewal(appleItemIDs:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = a1;
  return swift_task_switch();
}

uint64_t sub_233BBFBD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 48);
  v2 = qword_25424FEB8;
  swift_bridgeObjectRetain();
  if (v2 != -1)
    swift_once();
  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 24) = 0;
  *(_BYTE *)(v0 + 32) = 1;
  *(_QWORD *)(v0 + 40) = v0 + 16;
  sub_233B7FEDC();
  v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_256123CF0 + dword_256123CF0);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  *v3 = v0;
  v3[1] = sub_233BBFCB0;
  return v5((uint64_t)v5, v0 + 40, (uint64_t)sub_233BD1B20, 0);
}

uint64_t sub_233BBFCB0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    sub_233B7FEE8();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_233BBFD2C()
{
  uint64_t v0;

  sub_233B7FEE8();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AppLibrary.requestAppUninstallation(for:)(Swift::UInt64 a1)
{
  sub_233BD8AEC();
  __break(1u);
}

uint64_t static AppLibrary.UninstallError.== infix(_:_:)()
{
  return 1;
}

uint64_t AppLibrary.UninstallError.hash(into:)()
{
  return sub_233BD8D08();
}

uint64_t AppLibrary.UninstallError.hashValue.getter()
{
  sub_233BD8CFC();
  sub_233BD8D08();
  return sub_233BD8D38();
}

uint64_t AppLibrary.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC14MarketplaceKit10AppLibrary___observationRegistrar;
  v2 = sub_233BD85A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t AppLibrary.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC14MarketplaceKit10AppLibrary___observationRegistrar;
  v2 = sub_233BD85A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

unint64_t sub_233BBFEEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_233BD8CFC();
  sub_233BD881C();
  v4 = sub_233BD8D38();
  return sub_233BBFFC8(a1, a2, v4);
}

unint64_t sub_233BBFF50(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_233BD8CF0();
  return sub_233BC00A8(a1, v2);
}

uint64_t sub_233BBFF80@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = AppLibrary.installedApps.getter();
  *a1 = result;
  return result;
}

uint64_t sub_233BBFFA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, (uint64_t (*)(uint64_t))AppLibrary.installedApps.setter);
}

uint64_t type metadata accessor for AppLibrary(uint64_t a1)
{
  return sub_233B82D70(a1, qword_2561258C0);
}

unint64_t sub_233BBFFC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_233BD8C6C() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_233BD8C6C() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_233BC00A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

void *sub_233BC0144()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256123B80);
  v2 = *v0;
  v3 = sub_233BD8B04();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_233BC02FC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256124360);
  v2 = *v0;
  v3 = sub_233BD8B04();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = (void *)swift_retain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_233BC049C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256123B80);
  v42 = a2;
  v6 = sub_233BD8B10();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = *(_QWORD *)(v41 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v25 = *(_QWORD *)(v41 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v31);
    v36 = *v35;
    v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_233BD8CFC();
    sub_233BD881C();
    result = sub_233BD8D38();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v36;
    v20[1] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_233BC07C0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256124360);
  result = sub_233BD8B10();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v10;
    v32 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v33)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v32 >= 64)
                  bzero((void *)(v5 + 64), 8 * v33);
                else
                  *v9 = v31;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v8 >= v33)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = 8 * v20;
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v28);
      v30 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v28);
      if ((a2 & 1) == 0)
        swift_retain();
      result = sub_233BD8CF0();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 8 * v17;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v29;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_233BC0A74(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_retain();
    swift_bridgeObjectRetain();
    v8 = sub_233BD8A38();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      type metadata accessor for AppLibrary.App();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v20;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_233BD8A2C();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v16 = sub_233BC2BD0(v7, result + 1);
    v21 = v16;
    if (*(_QWORD *)(v16 + 24) <= *(_QWORD *)(v16 + 16))
    {
      swift_retain();
      sub_233BC2500();
      v17 = v21;
    }
    else
    {
      v17 = v16;
      swift_retain();
    }
    sub_233BC2DD4(a2, v17);
    *v3 = v17;
  }
  else
  {
    sub_233BD8CFC();
    v10 = *(_QWORD *)(a2 + 16);
    sub_233BD8D20();
    v11 = sub_233BD8D38();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      v14 = *(_QWORD *)(v6 + 48);
      if (*(_QWORD *)(*(_QWORD *)(v14 + 8 * v13) + 16) == v10)
      {
LABEL_12:
        swift_release();
        *a1 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        swift_retain();
        return 0;
      }
      v15 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v15;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        if (*(_QWORD *)(*(_QWORD *)(v14 + 8 * v13) + 16) == v10)
          goto LABEL_12;
      }
    }
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v2;
    *v2 = 0x8000000000000000;
    v19 = swift_retain();
    sub_233BC2E74(v19, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v22;
  }
  swift_bridgeObjectRelease();
  *a1 = a2;
  return 1;
}

unint64_t sub_233BC0CCC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v17;

  v2 = v1;
  v4 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v4 < 0)
      v5 = *v2;
    else
      v5 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_retain();
    v6 = sub_233BD8A50();
    swift_release();
    if ((v6 & 1) != 0)
    {
      v7 = sub_233BC1BC8(v5, a1);
      swift_bridgeObjectRelease();
      return v7;
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_233BD8CFC();
  v8 = *(_QWORD *)(a1 + 16);
  sub_233BD8D20();
  v9 = sub_233BD8D38();
  v10 = -1 << *(_BYTE *)(v4 + 32);
  v11 = v9 & ~v10;
  if (((*(_QWORD *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  v12 = *(_QWORD *)(v4 + 48);
  if (*(_QWORD *)(*(_QWORD *)(v12 + 8 * v11) + 16) != v8)
  {
    v13 = ~v10;
    do
    {
      v11 = (v11 + 1) & v13;
      if (((*(_QWORD *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
        return 0;
    }
    while (*(_QWORD *)(*(_QWORD *)(v12 + 8 * v11) + 16) != v8);
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v15 = *v2;
  v17 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_233BC1CE4();
    v15 = v17;
  }
  v7 = *(_QWORD *)(*(_QWORD *)(v15 + 48) + 8 * v11);
  sub_233BC2A28(v11);
  *v2 = v17;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_233BC0E58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = AppLibrary.installingApps.getter();
  *a1 = result;
  return result;
}

uint64_t sub_233BC0E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, (uint64_t (*)(uint64_t))AppLibrary.installingApps.setter);
}

uint64_t keypath_setTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6;

  v6 = swift_bridgeObjectRetain();
  return a5(v6);
}

uint64_t sub_233BC0EB8()
{
  uint64_t v0;

  return sub_233BBBFFC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_233BC0ED0()
{
  uint64_t v0;

  return sub_233BBC4B0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_233BC0EE8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = AppLibrary.isLoading.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_233BC0F14()
{
  return AppLibrary.isLoading.setter();
}

uint64_t sub_233BC0F38()
{
  uint64_t v0;

  return sub_233BBC95C(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t type metadata accessor for AppLibrary.InstallationRequest(uint64_t a1)
{
  return sub_233B82D70(a1, qword_2561259C0);
}

unint64_t sub_233BC0F6C()
{
  unint64_t result;

  result = qword_256125890;
  if (!qword_256125890)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for AppLibrary.UninstallError, &type metadata for AppLibrary.UninstallError);
    atomic_store(result, (unint64_t *)&qword_256125890);
  }
  return result;
}

uint64_t sub_233BC0FB0()
{
  return type metadata accessor for AppLibrary(0);
}

uint64_t sub_233BC0FB8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_233BD85A0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for AppLibrary()
{
  return swift_lookUpClassMethod();
}

uint64_t *initializeBufferWithCopyOfBuffer for AppLibrary.InstallationRequest(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_233BD851C();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v10 = a3[5];
    v11 = a3[6];
    v12 = (uint64_t *)((char *)a1 + v10);
    v13 = (uint64_t *)((char *)a2 + v10);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = (uint64_t *)((char *)a1 + v11);
    v16 = (uint64_t *)((char *)a2 + v11);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = a3[7];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v21(v20, 1, v7))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v19, (uint64_t *)v20, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v19, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for AppLibrary.InstallationRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(uint64_t, uint64_t);

  v4 = sub_233BD851C();
  v5 = *(_QWORD *)(v4 - 8);
  v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(a2 + 28);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v4);
  return result;
}

char *initializeWithCopy for AppLibrary.InstallationRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  unsigned int (*v20)(const void *, uint64_t, uint64_t);
  uint64_t v21;

  v6 = sub_233BD851C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = a3[6];
  v11 = &a1[v9];
  v12 = &a2[v9];
  v13 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = v13;
  v14 = &a1[v10];
  v15 = &a2[v10];
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  v17 = a3[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v20(v19, 1, v6))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v8(v18, v19, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v18, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for AppLibrary.InstallationRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t (*v18)(const void *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;

  v6 = sub_233BD851C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[7];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v19 = v18(&a1[v15], 1, v6);
  v20 = v18(v17, 1, v6);
  if (!v19)
  {
    if (!v20)
    {
      v8(v16, v17, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v16, v17, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v16, 0, 1, v6);
  return a1;
}

char *initializeWithTake for AppLibrary.InstallationRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v6 = sub_233BD851C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  v10 = a3[7];
  v11 = &a1[v10];
  v12 = &a2[v10];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v8(v11, v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for AppLibrary.InstallationRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t (*v22)(const void *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;

  v6 = sub_233BD851C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = (uint64_t *)&a2[v9];
  v13 = *v11;
  v12 = v11[1];
  *(_QWORD *)v10 = v13;
  *((_QWORD *)v10 + 1) = v12;
  swift_bridgeObjectRelease();
  v14 = a3[6];
  v15 = &a1[v14];
  v16 = (uint64_t *)&a2[v14];
  v18 = *v16;
  v17 = v16[1];
  *(_QWORD *)v15 = v18;
  *((_QWORD *)v15 + 1) = v17;
  swift_bridgeObjectRelease();
  v19 = a3[7];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v23 = v22(&a1[v19], 1, v6);
  v24 = v22(v21, 1, v6);
  if (!v23)
  {
    if (!v24)
    {
      v8(v20, v21, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v20, v6);
    goto LABEL_6;
  }
  if (v24)
  {
LABEL_6:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v20, v21, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v20, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppLibrary.InstallationRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233BC16E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_233BD851C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for AppLibrary.InstallationRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_233BC179C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_233BD851C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_233BC1848()
{
  unint64_t v0;
  unint64_t v1;

  sub_233BD851C();
  if (v0 <= 0x3F)
  {
    sub_233B714B0();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

unint64_t destroy for AppLibrary.InstallError(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s14MarketplaceKit10AppLibraryC12InstallErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for AppLibrary.InstallError(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AppLibrary.InstallError(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AppLibrary.InstallError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFFA && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483643);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 4;
  if (v4 >= 6)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AppLibrary.InstallError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483643;
    if (a3 >= 0x7FFFFFFB)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFB)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 4;
  }
  return result;
}

uint64_t sub_233BC1AE4(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_233BC1AFC(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for AppLibrary.InstallError()
{
  return &type metadata for AppLibrary.InstallError;
}

uint64_t storeEnumTagSinglePayload for AppLibrary.UninstallError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_233BC1B6C + 4 * byte_233BE2759[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_233BC1B8C + 4 * byte_233BE275E[v4]))();
}

_BYTE *sub_233BC1B6C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_233BC1B8C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233BC1B94(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233BC1B9C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233BC1BA4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233BC1BAC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AppLibrary.UninstallError()
{
  return &type metadata for AppLibrary.UninstallError;
}

unint64_t sub_233BC1BC8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  swift_bridgeObjectRelease();
  v5 = sub_233BD8A2C();
  v6 = swift_unknownObjectRetain();
  v7 = sub_233BC2BD0(v6, v5);
  v16 = v7;
  sub_233BD8CFC();
  v8 = *(_QWORD *)(a2 + 16);
  sub_233BD8D20();
  v9 = sub_233BD8D38();
  v10 = -1 << *(_BYTE *)(v7 + 32);
  result = v9 & ~v10;
  v12 = v7 + 56;
  if (((*(_QWORD *)(v7 + 56 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) == 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v13 = *(_QWORD *)(v7 + 48);
  v14 = *(_QWORD *)(v13 + 8 * result);
  if (*(_QWORD *)(v14 + 16) != v8)
  {
    v15 = ~v10;
    while (1)
    {
      result = (result + 1) & v15;
      if (((*(_QWORD *)(v12 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) == 0)
        break;
      v14 = *(_QWORD *)(v13 + 8 * result);
      if (*(_QWORD *)(v14 + 16) == v8)
        goto LABEL_6;
    }
    __break(1u);
    goto LABEL_9;
  }
LABEL_6:
  result = sub_233BC2A28(result);
  if (v8 == *(_QWORD *)(v14 + 16))
  {
    *v3 = v16;
    return v14;
  }
LABEL_10:
  __break(1u);
  return result;
}

void *sub_233BC1CE4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256125A00);
  v2 = *v0;
  v3 = sub_233BD8A5C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    result = (void *)swift_retain();
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_233BC1E8C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256125A08);
  v2 = *v0;
  v3 = sub_233BD8A5C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_233BC2020()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256125A00);
  result = sub_233BD8A68();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    sub_233BD8CFC();
    sub_233BD8D20();
    result = sub_233BD8D38();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
    result = swift_retain();
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_233BC22A0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256125A08);
  result = sub_233BD8A68();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v26 = v1;
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    result = sub_233BD8CF0();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v26;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_233BC2500()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256125A00);
  result = sub_233BD8A68();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      sub_233BD8CFC();
      sub_233BD8D20();
      result = sub_233BD8D38();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_233BC27A8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256125A08);
  result = sub_233BD8A68();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (uint64_t *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    v26 = -1 << v7;
    v27 = v1;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v28 = 1 << *(_BYTE *)(v2 + 32);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64)
                  bzero((void *)(v2 + 56), 8 * v10);
                else
                  *v6 = v26;
                v1 = v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      result = sub_233BD8CF0();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

unint64_t sub_233BC2A28(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_233BD8A08();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_233BD8CFC();
        sub_233BD8D20();
        v10 = sub_233BD8D38() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 < v9)
            goto LABEL_5;
        }
        else if (v10 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(v3 + 48);
          v12 = (_QWORD *)(v11 + 8 * v2);
          v13 = (_QWORD *)(v11 + 8 * v6);
          if (v2 != v6 || (v2 = v6, v12 >= v13 + 1))
          {
            *v12 = *v13;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v14 = *(_QWORD *)(v3 + 16);
  v15 = __OFSUB__(v14, 1);
  v16 = v14 - 1;
  if (v15)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v16;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_233BC2BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256125A00);
    v2 = sub_233BD8A74();
    v14 = v2;
    sub_233BD8A20();
    if (sub_233BD8A44())
    {
      type metadata accessor for AppLibrary.App();
      do
      {
        swift_dynamicCast();
        v2 = v14;
        if (*(_QWORD *)(v14 + 24) <= *(_QWORD *)(v14 + 16))
        {
          sub_233BC2500();
          v2 = v14;
        }
        sub_233BD8CFC();
        sub_233BD8D20();
        result = sub_233BD8D38();
        v4 = v2 + 56;
        v5 = -1 << *(_BYTE *)(v2 + 32);
        v6 = result & ~v5;
        v7 = v6 >> 6;
        if (((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v9 = 0;
          v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v11 = v7 == v10;
            if (v7 == v10)
              v7 = 0;
            v9 |= v11;
            v12 = *(_QWORD *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v13;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_233BD8A44());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x24BEE4B08];
  }
  return v2;
}

unint64_t sub_233BC2DD4(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_233BD8CFC();
  sub_233BD8D20();
  sub_233BD8D38();
  result = sub_233BD8A14();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_233BC2E74(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_13;
  if ((a3 & 1) != 0)
  {
    sub_233BC2500();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_233BC1CE4();
      goto LABEL_13;
    }
    sub_233BC2020();
  }
  v8 = *v3;
  sub_233BD8CFC();
  v9 = *(_QWORD *)(v5 + 16);
  sub_233BD8D20();
  result = sub_233BD8D38();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    result = type metadata accessor for AppLibrary.App();
    v11 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(*(_QWORD *)(v11 + 8 * a2) + 16) == v9)
    {
LABEL_12:
      result = sub_233BD8C9C();
      __break(1u);
    }
    else
    {
      while (1)
      {
        a2 = (a2 + 1) & ~v10;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(*(_QWORD *)(v11 + 8 * a2) + 16) == v9)
          goto LABEL_12;
      }
    }
  }
LABEL_13:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_233BC2FD4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v5 = *v2;
  v6 = sub_233BD8CF0();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  v9 = v5 + 56;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
    goto LABEL_9;
  v10 = *(_QWORD *)(v5 + 48);
  if (*(_QWORD *)(v10 + 8 * v8) == a1)
  {
    v11 = 0;
    v12 = 1;
    goto LABEL_10;
  }
  v13 = ~v7;
  v8 = (v8 + 1) & ~v7;
  if (((*(_QWORD *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    v11 = 1;
    while (1)
    {
      v14 = *(_QWORD *)(v10 + 8 * v8);
      v12 = v14 == a1;
      if (v14 == a1)
        break;
      v8 = (v8 + 1) & v13;
      if (((*(_QWORD *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_10;
    }
    v11 = 0;
  }
  else
  {
LABEL_9:
    v12 = 0;
    v11 = 1;
  }
LABEL_10:
  v15 = *(_QWORD *)(v5 + 16);
  v16 = v15 + v11;
  if (__OFADD__(v15, v11))
  {
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v17 = *(_QWORD *)(v5 + 24);
  if (v17 >= v16 && (a2 & 1) != 0)
  {
    if (!v12)
      goto LABEL_29;
    goto LABEL_27;
  }
  if ((a2 & 1) != 0)
  {
    sub_233BC27A8();
  }
  else
  {
    if (v17 >= v16)
    {
      sub_233BC1E8C();
      if (!v12)
      {
LABEL_29:
        v25 = *v2;
        *(_QWORD *)(*v2 + 8 * (v8 >> 6) + 56) |= 1 << v8;
        *(_QWORD *)(*(_QWORD *)(v25 + 48) + 8 * v8) = a1;
        v26 = *(_QWORD *)(v25 + 16);
        v27 = __OFADD__(v26, 1);
        v28 = v26 + 1;
        if (!v27)
        {
          result = 0;
          *(_QWORD *)(v25 + 16) = v28;
          return result;
        }
        goto LABEL_33;
      }
LABEL_27:
      v23 = *(_QWORD *)(*v2 + 48);
      result = *(_QWORD *)(v23 + 8 * v8);
      *(_QWORD *)(v23 + 8 * v8) = a1;
      return result;
    }
    sub_233BC22A0();
  }
  v18 = *v2;
  v19 = sub_233BD8CF0();
  v20 = -1 << *(_BYTE *)(v18 + 32);
  v8 = v19 & ~v20;
  if (((*(_QWORD *)(v18 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
    goto LABEL_28;
  v21 = *(_QWORD *)(v18 + 48);
  if (*(_QWORD *)(v21 + 8 * v8) != a1)
  {
    v22 = ~v20;
    while (1)
    {
      v8 = (v8 + 1) & v22;
      if (((*(_QWORD *)(v18 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        break;
      if (*(_QWORD *)(v21 + 8 * v8) == a1)
        goto LABEL_26;
    }
LABEL_28:
    if (!v12)
      goto LABEL_29;
    goto LABEL_34;
  }
LABEL_26:
  if (v12)
    goto LABEL_27;
LABEL_34:
  result = sub_233BD8C9C();
  __break(1u);
  return result;
}

uint64_t sub_233BC31F4(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v8 = *v3;
  v10 = sub_233BBFF50(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_233BC02FC();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      result = swift_release();
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v19 = 8 * v10;
    *(_QWORD *)(v16[6] + v19) = a2;
    *(_QWORD *)(v16[7] + v19) = a1;
    v20 = v16[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_233BC07C0(result, a3 & 1);
  result = sub_233BBFF50(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_233BD8CA8();
  __break(1u);
  return result;
}

uint64_t sub_233BC332C(uint64_t a1)
{
  uint64_t v1;

  return sub_233BBCCE8(a1, v1);
}

unint64_t sub_233BC3334(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  BOOL v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = result;
  v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_233BD8AF8();
    result = swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_256125A00);
      result = sub_233BD8A80();
      v3 = result;
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = sub_233BD8AF8();
      result = swift_bridgeObjectRelease();
      if (!v4)
        return v3;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x24BEE4B08];
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return v3;
LABEL_9:
  v6 = v3 + 56;
  if ((v1 & 0xC000000000000001) != 0)
  {
    v7 = 0;
    while (1)
    {
      while (1)
      {
        result = MEMORY[0x23493DC1C](v7, v1);
        v8 = __OFADD__(v7++, 1);
        if (v8)
        {
          __break(1u);
          goto LABEL_34;
        }
        v9 = result;
        sub_233BD8CFC();
        v10 = *(_QWORD *)(v9 + 16);
        sub_233BD8D20();
        result = sub_233BD8D38();
        v11 = -1 << *(_BYTE *)(v3 + 32);
        v12 = result & ~v11;
        v13 = v12 >> 6;
        v14 = *(_QWORD *)(v6 + 8 * (v12 >> 6));
        v15 = 1 << v12;
        v16 = *(_QWORD *)(v3 + 48);
        if (((1 << v12) & v14) != 0)
          break;
LABEL_19:
        *(_QWORD *)(v6 + 8 * v13) = v15 | v14;
        *(_QWORD *)(v16 + 8 * v12) = v9;
        v18 = *(_QWORD *)(v3 + 16);
        v8 = __OFADD__(v18, 1);
        v19 = v18 + 1;
        if (v8)
          goto LABEL_35;
        *(_QWORD *)(v3 + 16) = v19;
        if (v7 == v4)
          return v3;
      }
      if (*(_QWORD *)(*(_QWORD *)(v16 + 8 * v12) + 16) != v10)
      {
        v17 = ~v11;
        do
        {
          v12 = (v12 + 1) & v17;
          v13 = v12 >> 6;
          v14 = *(_QWORD *)(v6 + 8 * (v12 >> 6));
          v15 = 1 << v12;
          if ((v14 & (1 << v12)) == 0)
            goto LABEL_19;
        }
        while (*(_QWORD *)(*(_QWORD *)(v16 + 8 * v12) + 16) != v10);
      }
      swift_unknownObjectRelease();
      if (v7 == v4)
        return v3;
    }
  }
  v20 = 0;
  v21 = v1 + 32;
  v22 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v20 != v22)
  {
    v25 = *(_QWORD *)(v21 + 8 * v20);
    sub_233BD8CFC();
    v26 = *(_QWORD *)(v25 + 16);
    sub_233BD8D20();
    result = sub_233BD8D38();
    v27 = -1 << *(_BYTE *)(v3 + 32);
    v28 = result & ~v27;
    v29 = v28 >> 6;
    v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
    v31 = 1 << v28;
    v32 = *(_QWORD *)(v3 + 48);
    if (((1 << v28) & v30) != 0)
    {
      if (*(_QWORD *)(*(_QWORD *)(v32 + 8 * v28) + 16) == v26)
        goto LABEL_25;
      v33 = ~v27;
      while (1)
      {
        v28 = (v28 + 1) & v33;
        v29 = v28 >> 6;
        v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
        v31 = 1 << v28;
        if ((v30 & (1 << v28)) == 0)
          break;
        if (*(_QWORD *)(*(_QWORD *)(v32 + 8 * v28) + 16) == v26)
          goto LABEL_25;
      }
    }
    *(_QWORD *)(v6 + 8 * v29) = v31 | v30;
    *(_QWORD *)(v32 + 8 * v28) = v25;
    v23 = *(_QWORD *)(v3 + 16);
    v8 = __OFADD__(v23, 1);
    v24 = v23 + 1;
    if (v8)
      goto LABEL_36;
    *(_QWORD *)(v3 + 16) = v24;
    result = swift_retain();
LABEL_25:
    if (++v20 == v4)
      return v3;
  }
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_233BC360C()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_233BC3638()
{
  uint64_t v0;

  return sub_233BBCF8C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t sub_233BC3660()
{
  uint64_t v0;

  return sub_233BC7C60(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_233BC3680()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_233BC36B4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_233B71C64;
  return sub_233BBDC4C(a1, v4, v5, v7, v6);
}

uint64_t sub_233BC372C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_233BC3750(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_233B71C64;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_256126020 + dword_256126020))(a1, v4);
}

uint64_t sub_233BC37D0()
{
  return sub_233BC0F38();
}

uint64_t sub_233BC37F0(uint64_t a1, void *a2)
{
  void (*v3)(uint64_t, unint64_t);
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v3 = *(void (**)(uint64_t, unint64_t))(a1 + 32);
  swift_retain();
  v4 = a2;
  v5 = sub_233BD8540();
  v7 = v6;

  v3(v5, v7);
  sub_233B71B8C(v5, v7);
  return swift_release();
}

uint64_t AppLibrary.App.Metadata.init(appleVersionID:version:shortVersion:account:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  *a8 = result;
  a8[1] = a2;
  a8[2] = a3;
  a8[3] = a4;
  a8[4] = a5;
  a8[5] = a6;
  a8[6] = a7;
  return result;
}

uint64_t sub_233BC3874(uint64_t a1)
{
  uint64_t KeyPath;
  uint64_t v2;
  _QWORD v4[8];

  sub_233B8092C(a1, (uint64_t)v4, &qword_256125B88);
  sub_233BD88B8();
  sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath, v2);
  sub_233B74300((unint64_t *)&qword_256124AA8, (uint64_t (*)(uint64_t))type metadata accessor for AppLibrary.App, (uint64_t)&protocol conformance descriptor for AppLibrary.App);
  sub_233BD8564();
  sub_233BCAD00(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_233BC7E7C);
  swift_release();
  return swift_release();
}

uint64_t sub_233BC39D0(uint64_t a1)
{
  uint64_t KeyPath;
  uint64_t v3;

  sub_233BD88B8();
  sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath, v3);
  sub_233B74300((unint64_t *)&qword_256124AA8, (uint64_t (*)(uint64_t))type metadata accessor for AppLibrary.App, (uint64_t)&protocol conformance descriptor for AppLibrary.App);
  sub_233BD8564();
  swift_release();
  sub_233B71DBC(a1, &qword_256124AA0);
  return swift_release();
}

uint64_t sub_233BC3B1C(void (*a1)(char *, uint64_t))
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  uint8_t *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(char *, uint64_t);
  uint64_t KeyPath;
  uint64_t v101;
  _QWORD *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  NSObject *v121;
  os_log_type_t v122;
  uint64_t v123;
  BOOL v124;
  BOOL v125;
  void (*isa)(char *, uint64_t);
  char *v127;
  NSObject *v128;
  int v129;
  _BOOL4 v130;
  _DWORD *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  char *v142;
  NSObject *v143;
  uint8_t *v144;
  uint64_t v145;
  char *v146;
  NSObject *v147;
  int v148;
  _DWORD *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  void *v157;
  uint64_t v158;
  int v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  void *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  void *v179;
  NSObject *v180;
  os_log_type_t v181;
  uint64_t v182;
  uint8_t *v183;
  char *v184;
  NSObject *v185;
  os_log_type_t v186;
  uint8_t *v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  unint64_t v193;
  uint64_t v194;
  uint64_t v195;
  unint64_t v196;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  _QWORD *v203;
  uint64_t v204;
  char *v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t (*v212)(char *, uint64_t, uint64_t);
  uint64_t v213;
  char *v214;
  char *v215;
  uint64_t v216;
  char *v217;
  char *v218;
  uint64_t v219;
  char *v220;
  NSObject *v221;
  uint64_t v222;
  uint64_t v223;
  void (*v224)(char *, uint64_t);
  char *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  _QWORD *v229;
  _OWORD v230[4];
  _QWORD *v231;
  _QWORD v232[7];

  v2 = v1;
  v224 = a1;
  v222 = type metadata accessor for MarketplaceKitError();
  v3 = *(_QWORD *)(v222 - 8);
  MEMORY[0x24BDAC7A8](v222, v4);
  v6 = (char *)&v198 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_233BD8780();
  v221 = *(NSObject **)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v11 = (char *)&v198 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v9, v12);
  v15 = (char *)&v198 - v14;
  v17 = MEMORY[0x24BDAC7A8](v13, v16);
  v218 = (char *)&v198 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17, v19);
  v217 = (char *)&v198 - v21;
  MEMORY[0x24BDAC7A8](v20, v22);
  v220 = (char *)&v198 - v23;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124AA0);
  v26 = MEMORY[0x24BDAC7A8](v24, v25);
  v207 = (uint64_t)&v198 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26, v28);
  v215 = (char *)&v198 - v29;
  v223 = sub_233BD86E4();
  v219 = *(_QWORD *)(v223 - 8);
  v31 = MEMORY[0x24BDAC7A8](v223, v30);
  v206 = (char *)&v198 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BDAC7A8](v31, v33);
  v205 = (char *)&v198 - v35;
  MEMORY[0x24BDAC7A8](v34, v36);
  v225 = (char *)&v198 - v37;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125B80);
  v40 = MEMORY[0x24BDAC7A8](v38, v39);
  v213 = (uint64_t)&v198 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = MEMORY[0x24BDAC7A8](v40, v42);
  v214 = (char *)&v198 - v44;
  v46 = MEMORY[0x24BDAC7A8](v43, v45);
  v211 = (uint64_t)&v198 - v47;
  v49 = MEMORY[0x24BDAC7A8](v46, v48);
  v226 = (char *)&v198 - v50;
  MEMORY[0x24BDAC7A8](v49, v51);
  v53 = (char *)&v198 - v52;
  v54 = sub_233BD88B8();
  v55 = sub_233BD88AC();
  v227 = v54;
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  v56 = v1[2];
  if (v56 == sub_233BD8684())
  {
    v202 = v56;
    v208 = v3;
    v201 = v6;
    v204 = v55;
    v209 = v15;
    v216 = v7;
    sub_233BD86A8();
    v212 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v219 + 48);
    v57 = v212(v53, 1, v223);
    sub_233B71DBC((uint64_t)v53, &qword_256125B80);
    if (v57 == 1)
    {
      v199 = sub_233BD88AC();
      sub_233BD8888();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      swift_getKeyPath();
      v58 = (uint64_t)v2 + OBJC_IVAR____TtCC14MarketplaceKit10AppLibrary3App___observationRegistrar;
      v231 = v2;
      v200 = sub_233B74300((unint64_t *)&qword_256124AA8, (uint64_t (*)(uint64_t))type metadata accessor for AppLibrary.App, (uint64_t)&protocol conformance descriptor for AppLibrary.App);
      v210 = v58;
      sub_233BD8570();
      swift_release();
      v59 = v2[10];
      v60 = v2[11];
      v61 = v2[12];
      v62 = v2[13];
      v63 = v2[14];
      v64 = v2[15];
      v65 = v2[16];
      v66 = (void *)v2[17];
      sub_233B9CD84(v59, v60, v61, v62, v63, v64, v65, v66);
      swift_release();
      if (v61)
      {
        v67 = v66;
        sub_233BC7E7C(v59, v60, v61, v62, v63, v64, v65, v66);
        sub_233BC87BC(1.0);

      }
      v199 = sub_233BD88AC();
      sub_233BD8888();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      swift_getKeyPath();
      v231 = v2;
      sub_233BD8570();
      swift_release();
      v68 = v2[10];
      v69 = v2[11];
      v70 = v2[12];
      v71 = v2[13];
      v72 = v2[14];
      v73 = v2[15];
      v75 = v2[16];
      v74 = (void *)v2[17];
      sub_233B9CD84(v68, v69, v70, v71, v72, v73, v75, v74);
      swift_release();
      if (v70)
      {
        v76 = v74;
        sub_233BC7E7C(v68, v69, v70, v71, v72, v73, v75, v74);
        sub_233BC8A98(0, 0);

      }
    }
    v77 = (uint64_t)v226;
    sub_233BD869C();
    v78 = v211;
    sub_233B71D78(v77, v211, &qword_256125B80);
    v79 = v223;
    v80 = v212((char *)v78, 1, v223);
    v203 = v2;
    if (v80 == 1)
    {
      v81 = 0;
      v82 = 0;
      v83 = 0;
      v84 = 0;
      v85 = 0;
      v86 = 0;
      v87 = 0;
    }
    else
    {
      v91 = v219;
      (*(void (**)(char *, uint64_t, uint64_t))(v219 + 32))(v225, v78, v79);
      v200 = sub_233BD88AC();
      sub_233BD8888();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      v92 = v205;
      v93 = v225;
      (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v205, v225, v79);
      v211 = sub_233BD86C0();
      v210 = sub_233BD86D8();
      v83 = v94;
      v84 = sub_233BD86B4();
      v85 = v95;
      v96 = sub_233BD86CC();
      v97 = v91;
      v87 = v98;
      v99 = *(void (**)(char *, uint64_t))(v97 + 8);
      v99(v92, v79);
      swift_release();
      v99(v93, v79);
      v86 = (char *)v96;
      v82 = v210;
      v81 = v211;
    }
    v211 = v81;
    v232[0] = v81;
    v232[1] = v82;
    v210 = v82;
    v232[2] = v83;
    v232[3] = v84;
    v232[4] = v85;
    v232[5] = v86;
    v205 = v86;
    v232[6] = v87;
    sub_233B71DBC(v77, &qword_256125B80);
    sub_233BD88AC();
    sub_233BD8888();
    if ((swift_task_isCurrentExecutor() & 1) == 0)
      swift_task_reportUnexpectedExecutor();
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath, v101);
    v102 = v203;
    *(&v198 - 2) = (uint64_t)v203;
    *(&v198 - 1) = (uint64_t)v232;
    v103 = (char *)v102 + OBJC_IVAR____TtCC14MarketplaceKit10AppLibrary3App___observationRegistrar;
    v231 = v102;
    v225 = (char *)sub_233B74300((unint64_t *)&qword_256124AA8, (uint64_t (*)(uint64_t))type metadata accessor for AppLibrary.App, (uint64_t)&protocol conformance descriptor for AppLibrary.App);
    v226 = v103;
    sub_233BD8564();
    sub_233BC7C24(v211, v210, v83);
    swift_release();
    swift_release();
    v104 = (uint64_t)v214;
    v105 = (uint64_t)v224;
    sub_233BD86A8();
    v106 = v213;
    sub_233B71D78(v104, v213, &qword_256125B80);
    v107 = v223;
    if (v212((char *)v106, 1, v223) == 1)
    {
      memset(v230, 0, sizeof(v230));
      v108 = v216;
    }
    else
    {
      v109 = v219;
      v110 = (uint64_t)v206;
      (*(void (**)(char *, uint64_t, uint64_t))(v219 + 32))(v206, v106, v107);
      sub_233BC8D04(v110, v102, v105, (uint64_t *)v230);
      v108 = v216;
      (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v110, v107);
    }
    sub_233B71DBC(v104, &qword_256125B80);
    sub_233B8092C((uint64_t)v230, (uint64_t)&v231, &qword_256125B88);
    sub_233BD88AC();
    sub_233BD8888();
    if ((swift_task_isCurrentExecutor() & 1) == 0)
      swift_task_reportUnexpectedExecutor();
    v111 = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](v111, v112);
    *(&v198 - 2) = (uint64_t)v102;
    *(&v198 - 1) = (uint64_t)&v231;
    v229 = v102;
    sub_233BD8564();
    sub_233BCAD00(&v231, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_233BC7E7C);
    swift_release();
    swift_release();
    v113 = sub_233BD8690();
    if (v114 >> 60 == 15)
    {
      v115 = 1;
      v116 = (uint64_t)v215;
    }
    else
    {
      v117 = v113;
      v118 = v114;
      sub_233BD84EC();
      swift_allocObject();
      sub_233BD84E0();
      sub_233B74300(&qword_256124378, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
      v116 = (uint64_t)v215;
      sub_233BD84D4();
      v115 = 0;
      sub_233B81AB4(v117, v118);
      swift_release();
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v208 + 56))(v116, v115, 1, v222);
    sub_233BD88AC();
    sub_233BD8888();
    if ((swift_task_isCurrentExecutor() & 1) == 0)
      swift_task_reportUnexpectedExecutor();
    v119 = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](v119, v120);
    *(&v198 - 2) = (uint64_t)v102;
    *(&v198 - 1) = v116;
    *(_QWORD *)&v230[0] = v102;
    sub_233BD8564();
    swift_release();
    sub_233B71DBC(v116, &qword_256124AA0);
    swift_release();
    sub_233BD8750();
    swift_retain_n();
    v121 = sub_233BD8768();
    v122 = sub_233BD8960();
    if (os_log_type_enabled(v121, v122))
    {
      v123 = swift_slowAlloc();
      *(_DWORD *)v123 = 134218496;
      sub_233BD88AC();
      sub_233BD8888();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      swift_release();
      swift_release();
      *(_QWORD *)&v230[0] = v202;
      sub_233BD89CC();
      swift_release();
      *(_WORD *)(v123 + 12) = 1024;
      sub_233BD88AC();
      sub_233BD8888();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      v124 = AppLibrary.App.isInstalled.getter();
      swift_release();
      swift_release();
      LODWORD(v230[0]) = v124;
      sub_233BD89CC();
      swift_release();
      *(_WORD *)(v123 + 18) = 1024;
      sub_233BD88AC();
      sub_233BD8888();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      v125 = AppLibrary.App.isInstalling.getter();
      swift_release();
      swift_release();
      LODWORD(v230[0]) = v125;
      sub_233BD89CC();
      swift_release();
      _os_log_impl(&dword_233B6C000, v121, v122, "Updating app %llu: isInstalled: %{BOOL}d, isInstalling: %{BOOL}d", (uint8_t *)v123, 0x18u);
      MEMORY[0x23493E3B4](v123, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    isa = (void (*)(char *, uint64_t))v221[1].isa;
    isa(v220, v108);
    v127 = v217;
    sub_233BD8750();
    swift_retain_n();
    v128 = sub_233BD8768();
    v129 = sub_233BD8960();
    v130 = os_log_type_enabled(v128, (os_log_type_t)v129);
    v224 = isa;
    if (v130)
    {
      LODWORD(v220) = v129;
      v131 = (_DWORD *)swift_slowAlloc();
      v219 = swift_slowAlloc();
      *(_QWORD *)&v230[0] = v219;
      v223 = (uint64_t)v131;
      *v131 = 134218242;
      sub_233BD88AC();
      sub_233BD8888();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      v221 = v128;
      sub_233BD88AC();
      sub_233BD8888();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      swift_getKeyPath();
      v229 = v102;
      sub_233BD8570();
      swift_release();
      v133 = v102[3];
      v132 = v102[4];
      v134 = v102[5];
      sub_233BC7BE8(v133, v132, v134);
      swift_release();
      if (v134)
      {
        sub_233BC7C24(v133, v132, v134);
        swift_release();
        swift_release();
      }
      else
      {
        sub_233BD88AC();
        sub_233BD8888();
        if ((swift_task_isCurrentExecutor() & 1) == 0)
          swift_task_reportUnexpectedExecutor();
        swift_release();
        swift_release();
        swift_release();
        v133 = 0;
      }
      v136 = v223;
      v229 = (_QWORD *)v133;
      sub_233BD89CC();
      swift_release();
      *(_WORD *)(v136 + 12) = 2080;
      sub_233BD88AC();
      sub_233BD8888();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      sub_233BD88AC();
      sub_233BD8888();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      swift_getKeyPath();
      v229 = v102;
      sub_233BD8570();
      swift_release();
      v138 = v102[3];
      v137 = v102[4];
      v139 = v102[5];
      v140 = v102[8];
      v141 = v102[9];
      sub_233BC7BE8(v138, v137, v139);
      swift_release();
      if (!v139 || (swift_bridgeObjectRetain(), sub_233BC7C24(v138, v137, v139), !v141))
      {
        sub_233BD88AC();
        sub_233BD8888();
        if ((swift_task_isCurrentExecutor() & 1) == 0)
          swift_task_reportUnexpectedExecutor();
        v140 = 0x296C696E28;
        swift_release();
        swift_bridgeObjectRelease();
        v141 = 0xE500000000000000;
      }
      v108 = v216;
      v142 = v217;
      isa = v224;
      v143 = v221;
      swift_release();
      v144 = (uint8_t *)v223;
      v229 = (_QWORD *)sub_233B87524(v140, v141, (uint64_t *)v230);
      sub_233BD89CC();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_233B6C000, v143, (os_log_type_t)v220, "\t installedMetadata evid: %llu account: %s", v144, 0x16u);
      v145 = v219;
      swift_arrayDestroy();
      MEMORY[0x23493E3B4](v145, -1, -1);
      MEMORY[0x23493E3B4](v144, -1, -1);

      v135 = v142;
    }
    else
    {

      swift_release_n();
      v135 = v127;
    }
    isa(v135, v108);
    v146 = v218;
    sub_233BD8750();
    swift_retain_n();
    v147 = sub_233BD8768();
    v148 = sub_233BD8960();
    if (os_log_type_enabled(v147, (os_log_type_t)v148))
    {
      v149 = (_DWORD *)swift_slowAlloc();
      v150 = swift_slowAlloc();
      *(_QWORD *)&v230[0] = v150;
      v223 = (uint64_t)v149;
      *v149 = 67109634;
      v217 = (char *)sub_233BD88AC();
      sub_233BD8888();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      v219 = v150;
      LODWORD(v220) = v148;
      v221 = v147;
      sub_233BD88AC();
      sub_233BD8888();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      swift_getKeyPath();
      v229 = v102;
      sub_233BD8570();
      swift_release();
      v151 = v102[10];
      v152 = v102[11];
      v153 = v102[12];
      v154 = v102[13];
      v155 = v102[14];
      v156 = v102[15];
      v158 = v102[16];
      v157 = (void *)v102[17];
      sub_233B9CD84(v151, v152, v153, v154, v155, v156, v158, v157);
      swift_release();
      if (v153)
      {
        sub_233BC7E7C(v151, v152, v153, v154, v155, v156, v158, v157);
        v159 = 1;
      }
      else
      {
        v159 = 0;
      }
      swift_release();
      swift_release();
      v162 = v223;
      LODWORD(v229) = v159;
      sub_233BD89CC();
      swift_release();
      *(_WORD *)(v162 + 8) = 2048;
      v217 = (char *)sub_233BD88AC();
      sub_233BD8888();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      sub_233BD88AC();
      sub_233BD8888();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      swift_getKeyPath();
      v229 = v102;
      sub_233BD8570();
      swift_release();
      v164 = v102[10];
      v163 = v102[11];
      v165 = v102[12];
      v166 = v102[13];
      v167 = v102[14];
      v168 = v102[15];
      v170 = v102[16];
      v169 = (void *)v102[17];
      sub_233B9CD84(v164, v163, v165, v166, v167, v168, v170, v169);
      swift_release();
      if (v165)
      {
        sub_233BC7E7C(v164, v163, v165, v166, v167, v168, v170, v169);
        swift_release();
        swift_release();
      }
      else
      {
        sub_233BD88AC();
        sub_233BD8888();
        if ((swift_task_isCurrentExecutor() & 1) == 0)
          swift_task_reportUnexpectedExecutor();
        swift_release();
        swift_release();
        swift_release();
        v164 = 0;
      }
      v171 = v223;
      v229 = (_QWORD *)v164;
      sub_233BD89CC();
      swift_release();
      *(_WORD *)(v171 + 18) = 2080;
      v217 = (char *)sub_233BD88AC();
      sub_233BD8888();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      sub_233BD88AC();
      sub_233BD8888();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      swift_getKeyPath();
      v229 = v102;
      sub_233BD8570();
      swift_release();
      v173 = v102[10];
      v172 = v102[11];
      v175 = v102[12];
      v174 = v102[13];
      v176 = v102[14];
      v177 = v102[15];
      v178 = v102[16];
      v179 = (void *)v102[17];
      sub_233B9CD84(v173, v172, v175, v174, v176, v177, v178, v179);
      swift_release();
      if (v175
        && (swift_bridgeObjectRetain(),
            swift_bridgeObjectRetain(),
            swift_bridgeObjectRetain(),
            sub_233BC7E7C(v173, v172, v175, v174, v176, v177, v178, v179),
            swift_bridgeObjectRelease(),
            swift_bridgeObjectRelease(),
            v178))
      {
        v108 = v216;
        v180 = v221;
        v181 = v220;
        v182 = v219;
      }
      else
      {
        sub_233BD88AC();
        sub_233BD8888();
        if ((swift_task_isCurrentExecutor() & 1) == 0)
          swift_task_reportUnexpectedExecutor();
        v177 = 0x296C696E28;
        swift_release();
        swift_bridgeObjectRelease();
        v178 = 0xE500000000000000;
        v108 = v216;
        v180 = v221;
        v181 = v220;
        v182 = v219;
      }
      swift_release();
      v183 = (uint8_t *)v223;
      v229 = (_QWORD *)sub_233B87524(v177, v178, (uint64_t *)v230);
      sub_233BD89CC();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_233B6C000, v180, v181, "\t installation: %{BOOL}d evid: %llu account: %s", v183, 0x1Cu);
      swift_arrayDestroy();
      MEMORY[0x23493E3B4](v182, -1, -1);
      MEMORY[0x23493E3B4](v183, -1, -1);

      v160 = v218;
      v161 = v108;
      isa = v224;
    }
    else
    {

      swift_release_n();
      v160 = v146;
      v161 = v108;
    }
    isa(v160, v161);
    v184 = v209;
    sub_233BD8750();
    swift_retain_n();
    v185 = sub_233BD8768();
    v186 = sub_233BD8960();
    if (os_log_type_enabled(v185, v186))
    {
      v187 = (uint8_t *)swift_slowAlloc();
      v188 = swift_slowAlloc();
      v229 = (_QWORD *)v188;
      *(_DWORD *)v187 = 136315138;
      sub_233BD88AC();
      sub_233BD8888();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      sub_233BD88AC();
      sub_233BD8888();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      swift_getKeyPath();
      *(_QWORD *)&v230[0] = v102;
      sub_233BD8570();
      swift_release();
      v189 = (char *)v102 + OBJC_IVAR____TtCC14MarketplaceKit10AppLibrary3App__installationError;
      swift_beginAccess();
      v190 = (uint64_t)v189;
      v191 = v207;
      sub_233B71D78(v190, v207, &qword_256124AA0);
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v208 + 48))(v191, 1, v222))
      {
        sub_233B71DBC(v191, &qword_256124AA0);
        sub_233BD88AC();
        sub_233BD8888();
        if ((swift_task_isCurrentExecutor() & 1) == 0)
          swift_task_reportUnexpectedExecutor();
        v192 = 0x296C696E28;
        swift_release();
        v193 = 0xE500000000000000;
      }
      else
      {
        v194 = (uint64_t)v201;
        sub_233BB31EC(v191, (uint64_t)v201);
        sub_233B71DBC(v191, &qword_256124AA0);
        MarketplaceKitError.description.getter();
        v192 = v195;
        v193 = v196;
        sub_233B888D4(v194);
      }
      swift_release();
      v228 = sub_233B87524(v192, v193, (uint64_t *)&v229);
      sub_233BD89CC();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_233B6C000, v185, v186, "\t installError:: %s", v187, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23493E3B4](v188, -1, -1);
      MEMORY[0x23493E3B4](v187, -1, -1);

      v224(v209, v108);
    }
    else
    {

      swift_release_n();
      isa(v184, v108);
    }
  }
  else
  {
    sub_233BD8750();
    v88 = sub_233BD8768();
    v89 = sub_233BD896C();
    if (os_log_type_enabled(v88, v89))
    {
      v90 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v90 = 0;
      _os_log_impl(&dword_233B6C000, v88, v89, "Trying to update app with mismatched app data", v90, 2u);
      MEMORY[0x23493E3B4](v90, -1, -1);
    }

    ((void (*)(char *, uint64_t))v221[1].isa)(v11, v7);
  }
  return swift_release();
}

uint64_t sub_233BC5C20(uint64_t a1)
{
  uint64_t KeyPath;
  uint64_t v2;
  _QWORD v4[7];

  sub_233B8092C(a1, (uint64_t)v4, &qword_256125B78);
  sub_233BD88B8();
  sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath, v2);
  sub_233B74300((unint64_t *)&qword_256124AA8, (uint64_t (*)(uint64_t))type metadata accessor for AppLibrary.App, (uint64_t)&protocol conformance descriptor for AppLibrary.App);
  sub_233BD8564();
  sub_233BCA650(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_233BC7C24);
  swift_release();
  return swift_release();
}

uint64_t sub_233BC5D7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v20;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125B98);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125BA0);
  v7 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v12);
  v14 = (char *)&v20 - v13;
  v15 = *(_QWORD *)(v0 + 16);
  sub_233BD8600();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v5, *MEMORY[0x24BEE6A10], v1);
  sub_233BD88E8();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v14, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256125BA8);
  swift_allocObject();
  v16 = sub_233BD8678();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = v15;
  *(_QWORD *)(v17 + 32) = 0;
  *(_BYTE *)(v17 + 40) = 0;
  swift_retain();
  sub_233BD88F4();
  sub_233BD872C();
  v18 = (void *)sub_233BD8720();
  sub_233BD8714();
  swift_release();

  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v14, v6);
}

void sub_233BC5F68(void (*a1)(char *, uint64_t))
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, void (*)(_QWORD, _QWORD), uint64_t);
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  char **v56;
  char *v57;
  uint64_t (*v58)(char **, uint64_t);
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  void *v68;
  id v69;
  double v70;
  int v71;
  double v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  void *v92;
  char **v93;
  uint64_t v94;
  char *v95;
  void (*v96)(char *, char *, uint64_t);
  double v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  id v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  char *v118;
  NSObject *v119;
  os_log_type_t v120;
  uint8_t *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  NSObject *v126;
  os_log_type_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  unint64_t v132;
  void (*v133)(char *, uint64_t);
  char *v134;
  char *v135;
  NSObject *v136;
  os_log_type_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  unint64_t v143;
  unint64_t v144;
  void (*v145)(char **, uint64_t);
  char *v146;
  NSObject *v147;
  uint64_t v148;
  uint8_t *v149;
  char isCurrentExecutor;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  NSObject *v154;
  os_log_type_t v155;
  uint8_t *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  char *v161;
  char *v162;
  char *v163;
  char *v164;
  char **v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  void (*v169)(char *, void (*)(_QWORD, _QWORD), uint64_t);
  uint64_t v170;
  uint64_t v171;
  void (*v172)(char *, uint64_t);
  char *v173;
  char *v174;
  void (*v175)(char *, uint64_t);
  uint64_t v176;
  uint64_t v177;
  uint64_t v178[2];

  v2 = v1;
  v4 = sub_233BD8600();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v173 = (char *)&v158 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v162 = (char *)&v158 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v165 = (char **)((char *)&v158 - v14);
  v16 = MEMORY[0x24BDAC7A8](v13, v15);
  v167 = (char *)&v158 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v174 = (char *)&v158 - v20;
  MEMORY[0x24BDAC7A8](v19, v21);
  v23 = (char *)&v158 - v22;
  v24 = sub_233BD8780();
  v172 = *(void (**)(char *, uint64_t))(v24 - 8);
  v26 = MEMORY[0x24BDAC7A8](v24, v25);
  v161 = (char *)&v158 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v26, v28);
  v163 = (char *)&v158 - v30;
  v32 = MEMORY[0x24BDAC7A8](v29, v31);
  v160 = (char *)&v158 - v33;
  v35 = MEMORY[0x24BDAC7A8](v32, v34);
  v164 = (char *)&v158 - v36;
  v38 = MEMORY[0x24BDAC7A8](v35, v37);
  v159 = (char *)&v158 - v39;
  MEMORY[0x24BDAC7A8](v38, v40);
  v42 = (char *)&v158 - v41;
  v43 = sub_233BD88B8();
  v171 = sub_233BD88AC();
  v176 = v43;
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  sub_233BD8750();
  v44 = *(void (**)(char *, void (*)(_QWORD, _QWORD), uint64_t))(v5 + 16);
  v175 = a1;
  v44(v23, (void (*)(_QWORD, _QWORD))a1, v4);
  swift_retain_n();
  v45 = sub_233BD8768();
  v46 = sub_233BD8960();
  if (os_log_type_enabled(v45, v46))
  {
    v169 = v44;
    v170 = (uint64_t)v1;
    v166 = v4;
    v168 = v24;
    v47 = swift_slowAlloc();
    v158 = swift_slowAlloc();
    v178[0] = v158;
    *(_DWORD *)v47 = 134218242;
    sub_233BD88AC();
    sub_233BD8888();
    if ((swift_task_isCurrentExecutor() & 1) == 0)
      swift_task_reportUnexpectedExecutor();
    v48 = *(_QWORD *)(v170 + 16);
    swift_release();
    swift_release();
    v177 = v48;
    sub_233BD89CC();
    swift_release();
    *(_WORD *)(v47 + 12) = 2082;
    sub_233BD88AC();
    sub_233BD8888();
    if ((swift_task_isCurrentExecutor() & 1) == 0)
      swift_task_reportUnexpectedExecutor();
    swift_release();
    sub_233B74300(&qword_256125B90, (uint64_t (*)(uint64_t))MEMORY[0x24BDDAC28], MEMORY[0x24BDDAC38]);
    v49 = v166;
    v50 = sub_233BD8C60();
    v177 = sub_233B87524(v50, v51, v178);
    sub_233BD89CC();
    swift_bridgeObjectRelease();
    v52 = *(void (**)(char *, uint64_t))(v5 + 8);
    v52(v23, v49);
    _os_log_impl(&dword_233B6C000, v45, v46, "[%llu] Got state %{public}s", (uint8_t *)v47, 0x16u);
    v53 = v158;
    swift_arrayDestroy();
    MEMORY[0x23493E3B4](v53, -1, -1);
    MEMORY[0x23493E3B4](v47, -1, -1);

    v54 = v49;
    v55 = (void (*)(char *, uint64_t))*((_QWORD *)v172 + 1);
    v24 = v168;
    v55(v42, v168);
    v44 = v169;
    v2 = (_QWORD *)v170;
  }
  else
  {
    swift_release_n();
    v52 = *(void (**)(char *, uint64_t))(v5 + 8);
    v52(v23, v4);

    v55 = (void (*)(char *, uint64_t))*((_QWORD *)v172 + 1);
    v55(v42, v24);
    v54 = v4;
  }
  v57 = v173;
  v56 = (char **)v174;
  v44(v174, (void (*)(_QWORD, _QWORD))v175, v54);
  v58 = *(uint64_t (**)(char **, uint64_t))(v5 + 88);
  v59 = v58(v56, v54);
  if (v59 == *MEMORY[0x24BDDAC18])
  {
    (*(void (**)(char **, uint64_t))(v5 + 96))(v56, v54);
    swift_release();
LABEL_12:
    sub_233BD88AC();
    sub_233BD8888();
    if ((swift_task_isCurrentExecutor() & 1) == 0)
      swift_task_reportUnexpectedExecutor();
    swift_getKeyPath();
    v178[0] = (uint64_t)v2;
    sub_233B74300((unint64_t *)&qword_256124AA8, (uint64_t (*)(uint64_t))type metadata accessor for AppLibrary.App, (uint64_t)&protocol conformance descriptor for AppLibrary.App);
    sub_233BD8570();
    swift_release();
    v61 = v2[10];
    v60 = v2[11];
    v62 = v2[12];
    v63 = v2[13];
    v64 = v2[14];
    v65 = v2[15];
    v66 = v2;
    v67 = v2[16];
    v68 = (void *)v66[17];
    sub_233B9CD84(v61, v60, v62, v63, v64, v65, v67, v68);
    swift_release();
    if (v62)
    {
      v69 = v68;
      sub_233BC7E7C(v61, v60, v62, v63, v64, v65, v67, v68);
      v70 = 1.0;
LABEL_16:
      sub_233BC87BC(v70);
      sub_233BC8A98(0, 0);
LABEL_17:
      swift_release();

      return;
    }
    goto LABEL_73;
  }
  if (v59 == *MEMORY[0x24BDDABD8])
  {
    (*(void (**)(char **, uint64_t))(v5 + 96))(v56, v54);
    swift_release();
    goto LABEL_73;
  }
  v169 = v44;
  v71 = *MEMORY[0x24BDDABC8];
  if (v59 == *MEMORY[0x24BDDABC8])
  {
    v175 = v55;
    v168 = v24;
    (*(void (**)(char **, uint64_t))(v5 + 96))(v56, v54);
    v174 = *v56;
    v72 = *((double *)v174 + 2);
    v173 = (char *)sub_233BD88AC();
    sub_233BD8888();
    if ((swift_task_isCurrentExecutor() & 1) == 0)
      swift_task_reportUnexpectedExecutor();
    swift_getKeyPath();
    v178[0] = (uint64_t)v2;
    sub_233B74300((unint64_t *)&qword_256124AA8, (uint64_t (*)(uint64_t))type metadata accessor for AppLibrary.App, (uint64_t)&protocol conformance descriptor for AppLibrary.App);
    sub_233BD8570();
    swift_release();
    v73 = v2[10];
    v74 = v2[11];
    v75 = v2[12];
    v76 = v2[13];
    v78 = v2[14];
    v77 = v2[15];
    v80 = v2[16];
    v79 = (void *)v2[17];
    sub_233B9CD84(v73, v74, v75, v76, v78, v77, v80, v79);
    swift_release();
    if (v75)
    {
      v69 = v79;
      sub_233BC7E7C(v73, v74, v75, v76, v78, v77, v80, v79);
      sub_233BC87BC(v72);
      sub_233BC8A98(0, 0);
      swift_release();
      goto LABEL_17;
    }
    v118 = v164;
    sub_233BD8750();
    swift_retain_n();
    v119 = sub_233BD8768();
    v120 = sub_233BD8954();
    if (os_log_type_enabled(v119, v120))
    {
      v121 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v121 = 134217984;
      sub_233BD88AC();
      sub_233BD8888();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      v122 = v2[2];
      swift_release();
      swift_release();
      v178[0] = v122;
      sub_233BD89CC();
      swift_release();
      _os_log_impl(&dword_233B6C000, v119, v120, "[%llu] Received AppState update before app catalog update for installation", v121, 0xCu);
      MEMORY[0x23493E3B4](v121, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v175(v118, v168);
LABEL_72:
    swift_release();
    goto LABEL_73;
  }
  if (v59 == *MEMORY[0x24BDDAC00])
  {
    v172 = v52;
    v175 = v55;
    v168 = v24;
    v164 = *(char **)(v5 + 96);
    ((void (*)(char **, uint64_t))v164)(v56, v54);
    v173 = *v56;
    v81 = swift_projectBox();
    v166 = v54;
    v169(v167, (void (*)(_QWORD, _QWORD))v81, v54);
    v174 = (char *)sub_233BD88AC();
    sub_233BD8888();
    if ((swift_task_isCurrentExecutor() & 1) == 0)
      swift_task_reportUnexpectedExecutor();
    swift_getKeyPath();
    v82 = (char *)v2 + OBJC_IVAR____TtCC14MarketplaceKit10AppLibrary3App___observationRegistrar;
    v178[0] = (uint64_t)v2;
    v159 = (char *)sub_233B74300((unint64_t *)&qword_256124AA8, (uint64_t (*)(uint64_t))type metadata accessor for AppLibrary.App, (uint64_t)&protocol conformance descriptor for AppLibrary.App);
    v161 = v82;
    sub_233BD8570();
    swift_release();
    v83 = v2[10];
    v84 = v2[11];
    v85 = v2[12];
    v86 = v2[13];
    v87 = v2;
    v88 = v2[14];
    v90 = v87[15];
    v89 = v87[16];
    v170 = (uint64_t)v87;
    v91 = (void *)v87[17];
    sub_233B9CD84(v83, v84, v85, v86, v88, v90, v89, v91);
    swift_release();
    if (v85)
    {
      v174 = v91;
      sub_233BC7E7C(v83, v84, v85, v86, v88, v90, v89, v91);
      v92 = v174;
      sub_233BC8A98(1, 0);

    }
    v93 = v165;
    v94 = v166;
    v95 = v167;
    v96 = (void (*)(char *, char *, uint64_t))v169;
    v169((char *)v165, (void (*)(_QWORD, _QWORD))v167, v166);
    if (v58(v93, v94) != v71)
    {
      v123 = v163;
      sub_233BD8750();
      v124 = v162;
      v96(v162, v95, v94);
      v125 = v170;
      swift_retain_n();
      v126 = sub_233BD8768();
      v127 = sub_233BD896C();
      if (os_log_type_enabled(v126, v127))
      {
        v128 = swift_slowAlloc();
        v174 = (char *)swift_slowAlloc();
        v178[0] = (uint64_t)v174;
        *(_DWORD *)v128 = 134218242;
        sub_233BD88AC();
        sub_233BD8888();
        if ((swift_task_isCurrentExecutor() & 1) == 0)
          swift_task_reportUnexpectedExecutor();
        v129 = *(_QWORD *)(v125 + 16);
        swift_release();
        swift_release();
        v177 = v129;
        sub_233BD89CC();
        swift_release();
        *(_WORD *)(v128 + 12) = 2082;
        sub_233BD88AC();
        sub_233BD8888();
        if ((swift_task_isCurrentExecutor() & 1) == 0)
          swift_task_reportUnexpectedExecutor();
        swift_release();
        sub_233B74300(&qword_256125B90, (uint64_t (*)(uint64_t))MEMORY[0x24BDDAC28], MEMORY[0x24BDDAC38]);
        v130 = v162;
        v131 = sub_233BD8C60();
        v177 = sub_233B87524(v131, v132, v178);
        sub_233BD89CC();
        swift_bridgeObjectRelease();
        v133 = v172;
        v172(v130, v94);
        _os_log_impl(&dword_233B6C000, v126, v127, "[%llu] Unhandled paused substate: %{public}s", (uint8_t *)v128, 0x16u);
        v134 = v174;
        swift_arrayDestroy();
        MEMORY[0x23493E3B4](v134, -1, -1);
        MEMORY[0x23493E3B4](v128, -1, -1);

        v175(v163, v168);
        v133(v167, v94);
        v93 = v165;
      }
      else
      {

        swift_release();
        v133 = v172;
        v172(v124, v94);
        swift_release();
        v175(v123, v168);
        v133(v95, v94);
      }
      v133((char *)v93, v94);
      swift_release();
      goto LABEL_73;
    }
    ((void (*)(char **, uint64_t))v164)(v93, v94);
    v174 = *v93;
    v97 = *((double *)v174 + 2);
    sub_233BD88AC();
    sub_233BD8888();
    if ((swift_task_isCurrentExecutor() & 1) == 0)
      swift_task_reportUnexpectedExecutor();
    swift_getKeyPath();
    v98 = (_QWORD *)v170;
    v178[0] = v170;
    sub_233BD8570();
    swift_release();
    v99 = v98[10];
    v100 = v98[11];
    v101 = v98[12];
    v102 = v98[13];
    v103 = v98[14];
    v104 = v98[15];
    v106 = v98[16];
    v105 = (void *)v98[17];
    sub_233B9CD84(v99, v100, v101, v102, v103, v104, v106, v105);
    swift_release();
    if (v101)
    {
      v107 = v105;
      sub_233BC7E7C(v99, v100, v101, v102, v103, v104, v106, v105);
      sub_233BC87BC(v97);

      v109 = v166;
      v108 = v167;
    }
    else
    {
      v146 = v160;
      sub_233BD8750();
      swift_retain_n();
      v147 = sub_233BD8768();
      v148 = sub_233BD8954();
      if (os_log_type_enabled(v147, (os_log_type_t)v148))
      {
        v149 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v149 = 134217984;
        sub_233BD88AC();
        sub_233BD8888();
        isCurrentExecutor = swift_task_isCurrentExecutor();
        v151 = v166;
        if ((isCurrentExecutor & 1) == 0)
          swift_task_reportUnexpectedExecutor();
        v152 = v98[2];
        swift_release();
        swift_release();
        v178[0] = v152;
        sub_233BD89CC();
        swift_release();
        _os_log_impl(&dword_233B6C000, v147, (os_log_type_t)v148, "[%llu] Received AppState update before app catalog update for installation", v149, 0xCu);
        MEMORY[0x23493E3B4](v149, -1, -1);

      }
      else
      {

        swift_release_n();
        v151 = v166;
      }
      v175(v146, v168);
      v108 = v167;
      v109 = v151;
    }
    v172(v108, v109);
    swift_release();
    goto LABEL_72;
  }
  if (v59 == *MEMORY[0x24BDDAC20] || v59 == *MEMORY[0x24BDDAC08])
    goto LABEL_12;
  if (v59 == *MEMORY[0x24BDDAC10])
  {
    v175 = v55;
    v168 = v24;
    v174 = (char *)sub_233BD88AC();
    sub_233BD8888();
    if ((swift_task_isCurrentExecutor() & 1) == 0)
      swift_task_reportUnexpectedExecutor();
    swift_getKeyPath();
    v178[0] = (uint64_t)v2;
    sub_233B74300((unint64_t *)&qword_256124AA8, (uint64_t (*)(uint64_t))type metadata accessor for AppLibrary.App, (uint64_t)&protocol conformance descriptor for AppLibrary.App);
    sub_233BD8570();
    swift_release();
    v111 = v2[10];
    v110 = v2[11];
    v112 = v2[12];
    v113 = v2[13];
    v114 = v2[14];
    v115 = v2[15];
    v116 = v2[16];
    v117 = (void *)v2[17];
    sub_233B9CD84(v111, v110, v112, v113, v114, v115, v116, v117);
    swift_release();
    if (v112)
    {
      v69 = v117;
      sub_233BC7E7C(v111, v110, v112, v113, v114, v115, v116, v117);
      v70 = -1.0;
      goto LABEL_16;
    }
    v153 = v159;
    sub_233BD8750();
    swift_retain_n();
    v154 = sub_233BD8768();
    v155 = sub_233BD8954();
    if (os_log_type_enabled(v154, v155))
    {
      v156 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v156 = 134217984;
      sub_233BD88AC();
      sub_233BD8888();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      v157 = v2[2];
      swift_release();
      swift_release();
      v178[0] = v157;
      sub_233BD89CC();
      swift_release();
      _os_log_impl(&dword_233B6C000, v154, v155, "[%llu] Received AppState update before app catalog update for installation", v156, 0xCu);
      MEMORY[0x23493E3B4](v156, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v175(v153, v168);
  }
  else
  {
    v172 = v52;
    v135 = v161;
    sub_233BD8750();
    v169(v57, (void (*)(_QWORD, _QWORD))v175, v54);
    swift_retain_n();
    v136 = sub_233BD8768();
    v137 = sub_233BD896C();
    if (os_log_type_enabled(v136, v137))
    {
      v166 = v54;
      v175 = v55;
      v168 = v24;
      v138 = swift_slowAlloc();
      v139 = swift_slowAlloc();
      v178[0] = v139;
      *(_DWORD *)v138 = 134218242;
      sub_233BD88AC();
      sub_233BD8888();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      v140 = v2[2];
      swift_release();
      swift_release();
      v177 = v140;
      sub_233BD89CC();
      swift_release();
      *(_WORD *)(v138 + 12) = 2082;
      sub_233BD88AC();
      sub_233BD8888();
      if ((swift_task_isCurrentExecutor() & 1) == 0)
        swift_task_reportUnexpectedExecutor();
      v141 = v173;
      v142 = sub_233BD85F4();
      v144 = v143;
      swift_release();
      v177 = sub_233B87524(v142, v144, v178);
      sub_233BD89CC();
      swift_bridgeObjectRelease();
      v54 = v166;
      v145 = (void (*)(char **, uint64_t))v172;
      v172(v141, v166);
      _os_log_impl(&dword_233B6C000, v136, v137, "[%llu] Unknown state: %{public}s", (uint8_t *)v138, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23493E3B4](v139, -1, -1);
      MEMORY[0x23493E3B4](v138, -1, -1);

      v175(v161, v168);
      v56 = (char **)v174;
    }
    else
    {
      swift_release_n();
      v145 = (void (*)(char **, uint64_t))v172;
      v172(v57, v54);

      v55(v135, v24);
    }
    v145(v56, v54);
  }
LABEL_73:
  swift_release();
}

BOOL AppLibrary.App.isInstalled.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_233BD88B8();
  sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  swift_getKeyPath();
  sub_233B74300((unint64_t *)&qword_256124AA8, (uint64_t (*)(uint64_t))type metadata accessor for AppLibrary.App, (uint64_t)&protocol conformance descriptor for AppLibrary.App);
  sub_233BD8570();
  swift_release();
  v1 = v0[3];
  v2 = v0[4];
  v3 = v0[5];
  sub_233BC7BE8(v1, v2, v3);
  swift_release();
  if (v3)
    sub_233BC7C24(v1, v2, v3);
  swift_release();
  return v3 != 0;
}

BOOL AppLibrary.App.isInstalling.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v1 = v0;
  sub_233BD88B8();
  sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  swift_getKeyPath();
  sub_233B74300((unint64_t *)&qword_256124AA8, (uint64_t (*)(uint64_t))type metadata accessor for AppLibrary.App, (uint64_t)&protocol conformance descriptor for AppLibrary.App);
  sub_233BD8570();
  swift_release();
  v2 = v0[10];
  v3 = v0[11];
  v4 = v0[12];
  v5 = v1[13];
  v6 = v1[14];
  v7 = v1[15];
  v9 = v1[16];
  v8 = (void *)v1[17];
  sub_233B9CD84(v2, v3, v4, v5, v6, v7, v9, v8);
  swift_release();
  if (v4)
    sub_233BC7E7C(v2, v3, v4, v5, v6, v7, v9, v8);
  swift_release();
  return v4 != 0;
}

uint64_t AppLibrary.App.id.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t AppLibrary.App.Metadata.appleVersionID.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t AppLibrary.App.Metadata.version.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppLibrary.App.Metadata.shortVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppLibrary.App.Metadata.account.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

id AppLibrary.App.Installation.progress.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 56);
}

uint64_t AppLibrary.App.installedMetadata.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_233BD88B8();
  sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  swift_getKeyPath();
  sub_233B74300((unint64_t *)&qword_256124AA8, (uint64_t (*)(uint64_t))type metadata accessor for AppLibrary.App, (uint64_t)&protocol conformance descriptor for AppLibrary.App);
  sub_233BD8570();
  swift_release();
  v3 = v1[3];
  v4 = v1[4];
  v5 = v1[5];
  v6 = v1[6];
  v7 = v1[7];
  v8 = v1[8];
  v9 = v1[9];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  sub_233BC7BE8(v3, v4, v5);
  return swift_release();
}

double sub_233BC7AC0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  __int128 v3;
  double result;
  _OWORD v5[2];
  __int128 v6;
  uint64_t v7;

  AppLibrary.App.installedMetadata.getter((uint64_t *)v5);
  v2 = v7;
  v3 = v5[1];
  *(_OWORD *)a1 = v5[0];
  *(_OWORD *)(a1 + 16) = v3;
  result = *(double *)&v6;
  *(_OWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 48) = v2;
  return result;
}

double sub_233BC7B08@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  __int128 v3;
  double result;
  _OWORD v5[2];
  __int128 v6;
  uint64_t v7;

  AppLibrary.App.installedMetadata.getter((uint64_t *)v5);
  v2 = v7;
  v3 = v5[1];
  *(_OWORD *)a1 = v5[0];
  *(_OWORD *)(a1 + 16) = v3;
  result = *(double *)&v6;
  *(_OWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 48) = v2;
  return result;
}

uint64_t sub_233BC7B50(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8[7];

  v1 = a1[1];
  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[4];
  v5 = a1[5];
  v6 = a1[6];
  v8[0] = *a1;
  v8[1] = v1;
  v8[2] = v2;
  v8[3] = v3;
  v8[4] = v4;
  v8[5] = v5;
  v8[6] = v6;
  sub_233BC7BE8(v8[0], v1, v2);
  return sub_233BC5C20((uint64_t)v8);
}

uint64_t type metadata accessor for AppLibrary.App()
{
  uint64_t result;

  result = qword_256125A80;
  if (!qword_256125A80)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_233BC7BE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_233BC7C24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_233BC7C60(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_233BD88B8();
  sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v4 = a1 + 24;
  v7 = *(_QWORD *)(v4 + 16);
  sub_233B8092C((uint64_t)a2, v4, &qword_256125B78);
  sub_233BCA650(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_233BC7BE8);
  sub_233BC7C24(v5, v6, v7);
  return swift_release();
}

uint64_t AppLibrary.App.installation.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  sub_233BD88B8();
  sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  swift_getKeyPath();
  sub_233B74300((unint64_t *)&qword_256124AA8, (uint64_t (*)(uint64_t))type metadata accessor for AppLibrary.App, (uint64_t)&protocol conformance descriptor for AppLibrary.App);
  sub_233BD8570();
  swift_release();
  v3 = v1[10];
  v4 = v1[11];
  v5 = v1[12];
  v6 = v1[13];
  v7 = v1[14];
  v8 = v1[15];
  v9 = v1[16];
  v10 = (void *)v1[17];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = (uint64_t)v10;
  sub_233B9CD84(v3, v4, v5, v6, v7, v8, v9, v10);
  return swift_release();
}

uint64_t sub_233BC7E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_233BC7EC8(uint64_t a1, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v12;

  sub_233BD88B8();
  sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  v4 = *(_QWORD *)(a1 + 80);
  v5 = *(_QWORD *)(a1 + 88);
  v3 = (_QWORD *)(a1 + 80);
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v12 = v3[5];
  v9 = v3[6];
  v10 = (void *)v3[7];
  sub_233B8092C((uint64_t)a2, (uint64_t)v3, &qword_256125B88);
  sub_233BCAD00(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_233B9CD84);
  sub_233BC7E7C(v4, v5, v6, v7, v8, v12, v9, v10);
  return swift_release();
}

uint64_t AppLibrary.App.installationError.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_233BD88B8();
  sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  swift_getKeyPath();
  sub_233B74300((unint64_t *)&qword_256124AA8, (uint64_t (*)(uint64_t))type metadata accessor for AppLibrary.App, (uint64_t)&protocol conformance descriptor for AppLibrary.App);
  sub_233BD8570();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtCC14MarketplaceKit10AppLibrary3App__installationError;
  swift_beginAccess();
  sub_233B71D78(v3, a1, &qword_256124AA0);
  return swift_release();
}

uint64_t sub_233BC80F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_233BD88B8();
  sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  v4 = a1 + OBJC_IVAR____TtCC14MarketplaceKit10AppLibrary3App__installationError;
  swift_beginAccess();
  sub_233BCACB8(a2, v4);
  swift_endAccess();
  return swift_release();
}

BOOL AppLibrary.App.isUpdating.getter()
{
  BOOL v0;

  sub_233BD88B8();
  sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  if (AppLibrary.App.isInstalled.getter())
  {
    sub_233BD88AC();
    sub_233BD8888();
    if ((swift_task_isCurrentExecutor() & 1) == 0)
      swift_task_reportUnexpectedExecutor();
    v0 = AppLibrary.App.isInstalling.getter();
    swift_release();
  }
  else
  {
    v0 = 0;
  }
  swift_release();
  return v0;
}

uint64_t sub_233BC82E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v16[8];
  _QWORD v17[7];

  v5 = v4;
  sub_233B8092C(a2, (uint64_t)v17, &qword_256125B78);
  sub_233B8092C(a3, (uint64_t)v16, &qword_256125B88);
  *(_OWORD *)(v5 + 24) = 0u;
  *(_OWORD *)(v5 + 40) = 0u;
  *(_OWORD *)(v5 + 56) = 0u;
  *(_OWORD *)(v5 + 72) = 0u;
  *(_OWORD *)(v5 + 88) = 0u;
  *(_OWORD *)(v5 + 104) = 0u;
  *(_OWORD *)(v5 + 120) = 0u;
  *(_QWORD *)(v5 + 136) = 0;
  v8 = v5 + OBJC_IVAR____TtCC14MarketplaceKit10AppLibrary3App__installationError;
  v9 = type metadata accessor for MarketplaceKitError();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  sub_233BD8594();
  *(_QWORD *)(v5 + 16) = a1;
  sub_233BD88B8();
  sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath, v11);
  sub_233B74300((unint64_t *)&qword_256124AA8, (uint64_t (*)(uint64_t))type metadata accessor for AppLibrary.App, (uint64_t)&protocol conformance descriptor for AppLibrary.App);
  sub_233BD8564();
  sub_233BCA650(v17, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_233BC7C24);
  swift_release();
  swift_release();
  sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  v12 = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_233BD8564();
  sub_233BCAD00(v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_233BC7E7C);
  swift_release();
  swift_release();
  sub_233B71DBC(a4, &qword_256124AA0);
  return v5;
}

uint64_t sub_233BC85C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a2;
  v5 = sub_233BD86E4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_233BD88B8();
  v27 = sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v5);
  v26 = sub_233BD86C0();
  v10 = sub_233BD86D8();
  v24 = v11;
  v25 = v10;
  v12 = sub_233BD86B4();
  v14 = v13;
  v15 = sub_233BD86CC();
  v17 = v16;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v18 = sub_233BD8684();
  v19 = objc_allocWithZone((Class)type metadata accessor for InstallationNSProgress());
  v20 = sub_233BC9324(v18);
  result = swift_release();
  v22 = v25;
  *a3 = v26;
  a3[1] = v22;
  a3[2] = v24;
  a3[3] = v12;
  a3[4] = v14;
  a3[5] = v15;
  a3[6] = v17;
  a3[7] = (uint64_t)v20;
  return result;
}

void sub_233BC8748()
{
  id v0;

  sub_233BD872C();
  v0 = (id)sub_233BD8720();
  sub_233BD86FC();

}

id sub_233BC87BC(double a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id result;
  uint64_t v12;
  char *v13;
  double v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  NSObject *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  _QWORD v23[2];

  v2 = v1;
  v4 = sub_233BD8780();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (id)MEMORY[0x24BDAC7A8](v7, v10);
  v13 = (char *)v23 - v12;
  v14 = 4.50359963e15;
  if (a1 < 1.0)
    v14 = a1 * 4.50359963e15;
  if ((~*(_QWORD *)&v14 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (v14 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v14 >= 9.22337204e18)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  v15 = (uint64_t)v14;
  if (a1 == -1.0 || (uint64_t)objc_msgSend(v2, sel_completedUnitCount) <= v15)
  {
    result = objc_msgSend(v2, sel_setCompletedUnitCount_, v15);
    if (a1 >= 0.6)
    {
      result = objc_msgSend(v2, sel_isPausable);
      if ((_DWORD)result)
      {
        sub_233BD8750();
        v19 = v2;
        v20 = sub_233BD8768();
        v21 = sub_233BD8954();
        if (os_log_type_enabled(v20, v21))
        {
          v22 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)v22 = 134217984;
          v23[1] = *((char *)v19 + OBJC_IVAR____TtC14MarketplaceKit22InstallationNSProgress_id);
          sub_233BD89CC();

          _os_log_impl(&dword_233B6C000, v20, v21, "[%llu] No longer pausable nor cancelable", v22, 0xCu);
          MEMORY[0x23493E3B4](v22, -1, -1);
        }
        else
        {

          v20 = v19;
        }

        (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
        -[NSObject setPausable:](v19, sel_setPausable_, 0);
        return -[NSObject setCancellable:](v19, sel_setCancellable_, 0);
      }
    }
  }
  else
  {
    sub_233BD875C();
    v16 = sub_233BD8768();
    v17 = sub_233BD896C();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_233B6C000, v16, v17, "Received progress update out of order", v18, 2u);
      MEMORY[0x23493E3B4](v18, -1, -1);
    }

    return (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v9, v4);
  }
  return result;
}

void sub_233BC8A98(int a1, int a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  os_unfair_lock_s *v17;
  uint64_t v18;
  os_unfair_lock_s *v19;
  uint64_t v20;
  int v21;
  int v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  v3 = v2;
  LODWORD(v4) = a2;
  LODWORD(v5) = a1;
  v6 = sub_233BD8780();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_233BD8750();
  v11 = sub_233BD8768();
  v12 = sub_233BD8954();
  if (os_log_type_enabled(v11, v12))
  {
    v21 = v4;
    v4 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    v25 = v13;
    *(_DWORD *)v4 = 136315394;
    v22 = v5;
    v23 = v3;
    if ((_BYTE)v5)
    {
      if (v5 == 1)
        v14 = 0x646573756170;
      else
        v14 = 0x64656C65636E6163;
      if (v5 == 1)
        v5 = 0xE600000000000000;
      else
        v5 = 0xE800000000000000;
    }
    else
    {
      v5 = 0xE700000000000000;
      v14 = 0x676E696E6E7572;
    }
    v24 = sub_233B87524(v14, v5, &v25);
    sub_233BD89CC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 1024;
    v15 = v21;
    LODWORD(v24) = v21 & 1;
    sub_233BD89CC();
    _os_log_impl(&dword_233B6C000, v11, v12, "setState %s, sendingToDaemon: %{BOOL}d", (uint8_t *)v4, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23493E3B4](v13, -1, -1);
    v16 = v4;
    LOBYTE(v4) = v15;
    MEMORY[0x23493E3B4](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    v3 = v23;
    LOBYTE(v5) = v22;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  v17 = *(os_unfair_lock_s **)&v3[OBJC_IVAR____TtC14MarketplaceKit22InstallationNSProgress_lock];
  v18 = (uint64_t)&v17[4];
  v19 = v17 + 8;
  os_unfair_lock_lock(v17 + 8);
  sub_233BC94C4(v18, v5, v4 & 1, v3);
  os_unfair_lock_unlock(v19);
}

uint64_t sub_233BC8D04@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char isCurrentExecutor;
  uint64_t v41;
  id v42;
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;

  v55 = a4;
  v47 = a3;
  v54 = sub_233BD86F0();
  v6 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54, v7);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_233BD86E4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_233BD88B8();
  v51 = sub_233BD88AC();
  v58 = v15;
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  v52 = v9;
  v53 = v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a1, v10);
  v50 = sub_233BD86C0();
  v16 = sub_233BD86D8();
  v48 = v17;
  v49 = v16;
  v18 = sub_233BD86B4();
  v45 = v19;
  v46 = v18;
  v44 = sub_233BD86CC();
  v57 = v20;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  v56 = sub_233BD88AC();
  sub_233BD8888();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  swift_getKeyPath();
  v59 = a2;
  sub_233B74300((unint64_t *)&qword_256124AA8, (uint64_t (*)(uint64_t))type metadata accessor for AppLibrary.App, (uint64_t)&protocol conformance descriptor for AppLibrary.App);
  sub_233BD8570();
  swift_release();
  v22 = a2[10];
  v21 = a2[11];
  v24 = a2[12];
  v23 = a2[13];
  v25 = a2[14];
  v26 = a2[15];
  v27 = a2[16];
  v28 = (void *)a2[17];
  sub_233B9CD84(v22, v21, v24, v23, v25, v26, v27, v28);
  swift_release();
  if (v24)
  {
    v29 = v28;
    sub_233BC7E7C(v22, v21, v24, v23, v25, v26, v27, v28);
    v31 = v52;
    v30 = v53;
    v32 = v54;
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v52, v47, v54);
    v33 = v45;
    if (v28)
    {
      (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v32);
      v34 = v55;
      v35 = v50;
      v37 = v48;
      v36 = v49;
      v38 = v46;
      v39 = v44;
      goto LABEL_12;
    }
  }
  else
  {
    v31 = v52;
    v30 = v53;
    v32 = v54;
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v52, v47, v54);
    v33 = v45;
  }
  sub_233BD88AC();
  sub_233BD8888();
  isCurrentExecutor = swift_task_isCurrentExecutor();
  v39 = v44;
  if ((isCurrentExecutor & 1) == 0)
    swift_task_reportUnexpectedExecutor();
  v41 = sub_233BD8684();
  v42 = objc_allocWithZone((Class)type metadata accessor for InstallationNSProgress());
  v29 = sub_233BC9324(v41);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v32);
  swift_release();
  v34 = v55;
  v36 = v49;
  v35 = v50;
  v37 = v48;
  v38 = v46;
LABEL_12:
  result = swift_release();
  *v34 = v35;
  v34[1] = v36;
  v34[2] = v37;
  v34[3] = v38;
  v34[4] = v33;
  v34[5] = v39;
  v34[6] = v57;
  v34[7] = (uint64_t)v29;
  return result;
}

BOOL static AppLibrary.App.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16);
}

uint64_t AppLibrary.App.hash(into:)()
{
  return sub_233BD8D20();
}

uint64_t AppLibrary.App.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_233BC7C24(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  sub_233BC7E7C(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(void **)(v0 + 136));
  sub_233B71DBC(v0 + OBJC_IVAR____TtCC14MarketplaceKit10AppLibrary3App__installationError, &qword_256124AA0);
  v1 = v0 + OBJC_IVAR____TtCC14MarketplaceKit10AppLibrary3App___observationRegistrar;
  v2 = sub_233BD85A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t AppLibrary.App.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_233BC7C24(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  sub_233BC7E7C(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(void **)(v0 + 136));
  sub_233B71DBC(v0 + OBJC_IVAR____TtCC14MarketplaceKit10AppLibrary3App__installationError, &qword_256124AA0);
  v1 = v0 + OBJC_IVAR____TtCC14MarketplaceKit10AppLibrary3App___observationRegistrar;
  v2 = sub_233BD85A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t AppLibrary.App.hashValue.getter()
{
  sub_233BD8CFC();
  sub_233BD8D20();
  return sub_233BD8D38();
}

void sub_233BC9248(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(*(_QWORD *)v1 + 16);
}

uint64_t sub_233BC9258()
{
  sub_233BD8CFC();
  sub_233BD8D20();
  return sub_233BD8D38();
}

uint64_t sub_233BC929C()
{
  return sub_233BD8D20();
}

uint64_t sub_233BC92C8()
{
  sub_233BD8CFC();
  sub_233BD8D20();
  return sub_233BD8D38();
}

BOOL sub_233BC9308(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(*(_QWORD *)a1 + 16) == *(_QWORD *)(*(_QWORD *)a2 + 16);
}

id sub_233BC9324(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  id v6;
  objc_super v8;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = OBJC_IVAR____TtC14MarketplaceKit22InstallationNSProgress_lock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256125BB0);
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 32) = 0;
  *(_BYTE *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = 0;
  *(_QWORD *)&v1[v4] = v5;
  *(_QWORD *)&v1[OBJC_IVAR____TtC14MarketplaceKit22InstallationNSProgress_id] = a1;
  v8.receiver = v1;
  v8.super_class = ObjectType;
  v6 = objc_msgSendSuper2(&v8, sel_initWithParent_userInfo_, 0, 0);
  objc_msgSend(v6, sel_setTotalUnitCount_, 0x10000000000000);
  objc_msgSend(v6, sel_setPausable_, 1);
  objc_msgSend(v6, sel_setCancellable_, 1);
  sub_233BC87BC(-1.0);

  return v6;
}

id sub_233BC94C4(uint64_t a1, char a2, char a3, char *a4)
{
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  id result;
  uint64_t v12;
  char *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char **v22;
  objc_super *v23;
  _QWORD v24[2];
  char *v25;
  objc_super v26;
  uint64_t v27;

  ObjectType = swift_getObjectType();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123A58);
  result = (id)MEMORY[0x24BDAC7A8](v9, v10);
  v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_BYTE *)a1)
  {
    if (a2)
      goto LABEL_10;
LABEL_7:
    if ((a3 & 1) == 0)
      return result;
    goto LABEL_14;
  }
  if (*(_BYTE *)a1 != 1 || a2 == 1)
    goto LABEL_7;
LABEL_10:
  *(_BYTE *)a1 = a2;
  if ((a3 & 1) != 0)
  {
    v15 = swift_allocObject();
    *(_BYTE *)(v15 + 16) = a2;
    v27 = *(_QWORD *)&a4[OBJC_IVAR____TtC14MarketplaceKit22InstallationNSProgress_id];
    v16 = *(_QWORD *)(a1 + 8);
    if (v16)
      sub_233BD8918();
    v17 = sub_233BD88DC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v13, 1, 1, v17);
    v18 = (_QWORD *)swift_allocObject();
    v18[2] = 0;
    v18[3] = 0;
    v19 = v27;
    v18[4] = v16;
    v18[5] = v19;
    v18[6] = sub_233BCA560;
    v18[7] = v15;
    v18[8] = a4;
    swift_retain();
    swift_retain();
    v20 = a4;
    v21 = sub_233BD08AC((uint64_t)v13, (uint64_t)&unk_256125B70, (uint64_t)v18);
    swift_release();
    swift_release();
    *(_QWORD *)(a1 + 8) = v21;
  }
LABEL_14:
  if (a2)
  {
    if (a2 == 1)
    {
      v25 = a4;
      v22 = &selRef_pause;
      v23 = (objc_super *)&v25;
    }
    else
    {
      v26.receiver = a4;
      v22 = &selRef_cancel;
      v23 = &v26;
    }
  }
  else
  {
    v24[0] = a4;
    v22 = &selRef_resume;
    v23 = (objc_super *)v24;
  }
  v23->super_class = (Class)ObjectType;
  return objc_msgSendSuper2(v23, *v22, v24[0]);
}

void sub_233BC96D8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, void *);
  void *v14;
  uint64_t v15;
  uint64_t v16;

  if (a6)
  {
    if (a6 == 1)
    {
      v9 = (void *)sub_233BD8534();
      v15 = a4;
      v16 = a5;
      v11 = MEMORY[0x24BDAC760];
      v12 = 1107296256;
      v13 = sub_233BC37F0;
      v14 = &block_descriptor_23_0;
      v10 = _Block_copy(&v11);
      swift_retain();
      swift_release();
      objc_msgSend(a1, sel_pauseInstall_reply_, v9, v10);
    }
    else
    {
      v9 = (void *)sub_233BD8534();
      v15 = a4;
      v16 = a5;
      v11 = MEMORY[0x24BDAC760];
      v12 = 1107296256;
      v13 = sub_233BC37F0;
      v14 = &block_descriptor_11;
      v10 = _Block_copy(&v11);
      swift_retain();
      swift_release();
      objc_msgSend(a1, sel_cancelInstall_reply_, v9, v10);
    }
  }
  else
  {
    v9 = (void *)sub_233BD8534();
    v15 = a4;
    v16 = a5;
    v11 = MEMORY[0x24BDAC760];
    v12 = 1107296256;
    v13 = sub_233BC37F0;
    v14 = &block_descriptor_20_1;
    v10 = _Block_copy(&v11);
    swift_retain();
    swift_release();
    objc_msgSend(a1, sel_resumeInstall_reply_, v9, v10);
  }
  _Block_release(v10);

}

uint64_t sub_233BC9870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;

  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[5] = a4;
  v9 = sub_233BD8780();
  v8[10] = v9;
  v8[11] = *(_QWORD *)(v9 - 8);
  v8[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233BC98D8()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v3;
  char *v4;

  if (*(_QWORD *)(v0 + 40))
  {
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v1;
    *v1 = v0;
    v1[1] = sub_233BC99F8;
    return sub_233BD8924();
  }
  else if ((sub_233BD8930() & 1) != 0)
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    if (qword_25424FEB8 != -1)
      swift_once();
    *(_QWORD *)(v0 + 24) = *(_QWORD *)(v0 + 48);
    *(_QWORD *)(v0 + 16) = v0 + 24;
    v4 = (char *)&dword_256123C28 + dword_256123C28;
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v3;
    *v3 = v0;
    v3[1] = sub_233BC9B1C;
    return ((uint64_t (*)(uint64_t, _QWORD, _QWORD))v4)(v0 + 16, *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  }
}

uint64_t sub_233BC99F8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_233BC9A4C()
{
  uint64_t v0;
  _QWORD *v2;
  char *v3;

  if ((sub_233BD8930() & 1) != 0)
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    if (qword_25424FEB8 != -1)
      swift_once();
    *(_QWORD *)(v0 + 24) = *(_QWORD *)(v0 + 48);
    *(_QWORD *)(v0 + 16) = v0 + 24;
    v3 = (char *)&dword_256123C28 + dword_256123C28;
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v2;
    *v2 = v0;
    v2[1] = sub_233BC9B1C;
    return ((uint64_t (*)(uint64_t, _QWORD, _QWORD))v3)(v0 + 16, *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  }
}

uint64_t sub_233BC9B1C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_233BC9B80()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 72) + OBJC_IVAR____TtC14MarketplaceKit22InstallationNSProgress_lock);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 32));
  if ((sub_233BD8930() & 1) == 0)
  {
    swift_release();
    *(_QWORD *)(v1 + 24) = 0;
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 32));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233BC9BE8()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;

  v1 = *(void **)(v0 + 120);
  sub_233BD8750();
  v2 = v1;
  v3 = v1;
  v4 = sub_233BD8768();
  v5 = sub_233BD8978();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 120);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138543362;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 32) = v10;
    sub_233BD89CC();
    *v8 = v10;

    _os_log_impl(&dword_233B6C000, v4, v5, "Error updating progress: %{public}@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256123B18);
    swift_arrayDestroy();
    MEMORY[0x23493E3B4](v8, -1, -1);
    MEMORY[0x23493E3B4](v7, -1, -1);

  }
  else
  {
    v11 = *(void **)(v0 + 120);

  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
  v12 = *(_QWORD *)(*(_QWORD *)(v0 + 72) + OBJC_IVAR____TtC14MarketplaceKit22InstallationNSProgress_lock);
  os_unfair_lock_lock((os_unfair_lock_t)(v12 + 32));
  if ((sub_233BD8930() & 1) == 0)
  {
    swift_release();
    *(_QWORD *)(v12 + 24) = 0;
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(v12 + 32));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_233BC9DF8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s14MarketplaceKit10AppLibraryC0C0C8MetadataV2eeoiySbAG_AGtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t result;
  char v12;

  if (*a1 != *a2)
    return 0;
  v2 = a1[3];
  v4 = a1[4];
  v3 = a1[5];
  v5 = a1[6];
  v6 = a2[3];
  v7 = a2[4];
  v9 = a2[5];
  v8 = a2[6];
  if (a1[1] == a2[1] && a1[2] == a2[2] || (v10 = sub_233BD8C6C(), result = 0, (v10 & 1) != 0))
  {
    if (v2 == v6 && v4 == v7 || (v12 = sub_233BD8C6C(), result = 0, (v12 & 1) != 0))
    {
      if (v5)
      {
        if (v8 && (v3 == v9 && v5 == v8 || (sub_233BD8C6C() & 1) != 0))
          return 1;
      }
      else if (!v8)
      {
        return 1;
      }
      return 0;
    }
  }
  return result;
}

uint64_t sub_233BC9F44()
{
  return MEMORY[0x24BEE4578];
}

uint64_t sub_233BC9F50()
{
  return sub_233B74300(&qword_256125A50, (uint64_t (*)(uint64_t))type metadata accessor for AppLibrary.App, (uint64_t)&protocol conformance descriptor for AppLibrary.App);
}

uint64_t sub_233BC9F8C()
{
  return type metadata accessor for AppLibrary.App();
}

void sub_233BC9F94()
{
  unint64_t v0;
  unint64_t v1;

  sub_233BCA04C();
  if (v0 <= 0x3F)
  {
    sub_233BD85A0();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for AppLibrary.App()
{
  return swift_lookUpClassMethod();
}

void sub_233BCA04C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256125A90)
  {
    type metadata accessor for MarketplaceKitError();
    v0 = sub_233BD89C0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256125A90);
  }
}

uint64_t _s3AppC8MetadataVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s3AppC8MetadataVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s3AppC8MetadataVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s3AppC8MetadataVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s3AppC8MetadataVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s3AppC8MetadataVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppLibrary.App.Metadata()
{
  return &type metadata for AppLibrary.App.Metadata;
}

void _s3AppC12InstallationVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

uint64_t _s3AppC12InstallationVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = v5;
  return a1;
}

_QWORD *_s3AppC12InstallationVwca(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[7];
  v5 = (void *)a1[7];
  a1[7] = v4;
  v6 = v4;

  return a1;
}

uint64_t _s3AppC12InstallationVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);

  return a1;
}

uint64_t _s3AppC12InstallationVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s3AppC12InstallationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppLibrary.App.Installation()
{
  return &type metadata for AppLibrary.App.Installation;
}

uint64_t type metadata accessor for InstallationNSProgress()
{
  return objc_opt_self();
}

uint64_t sub_233BCA550()
{
  return swift_deallocObject();
}

void sub_233BCA560(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  sub_233BC96D8(a1, a2, a3, a4, a5, *(_BYTE *)(v5 + 16));
}

uint64_t sub_233BCA568()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_233BCA5A4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_233B71C64;
  return sub_233BC9870(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

_QWORD *sub_233BCA650(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6]);
  return a1;
}

uint64_t sub_233BCA688(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v68[2];
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  unsigned int (*v73)(char *, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD v80[8];
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  _QWORD v85[7];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124AA0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v77 = (char *)v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_233BD86E4();
  v6 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v70 = (char *)v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v69 = (char *)v68 - v12;
  MEMORY[0x24BDAC7A8](v11, v13);
  v71 = (char *)v68 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125B80);
  v17 = MEMORY[0x24BDAC7A8](v15, v16);
  v74 = (uint64_t)v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v17, v19);
  v78 = (uint64_t)v68 - v21;
  v23 = MEMORY[0x24BDAC7A8](v20, v22);
  v25 = (char *)v68 - v24;
  MEMORY[0x24BDAC7A8](v23, v26);
  v28 = (char *)v68 - v27;
  v76 = sub_233BD8684();
  v79 = a1;
  sub_233BD869C();
  v72 = v28;
  sub_233B71D78((uint64_t)v28, (uint64_t)v25, &qword_256125B80);
  v75 = v6;
  v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  v29 = 0;
  v30 = 0;
  v31 = 0;
  v32 = 0;
  v33 = 0;
  v34 = 0;
  v35 = 0;
  if (v73(v25, 1, v5) != 1)
  {
    v36 = v75;
    v37 = v71;
    (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v71, v25, v5);
    sub_233BD88B8();
    v68[1] = sub_233BD88AC();
    sub_233BD8888();
    if ((swift_task_isCurrentExecutor() & 1) == 0)
      swift_task_reportUnexpectedExecutor();
    v38 = v69;
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v69, v37, v5);
    v29 = sub_233BD86C0();
    v30 = sub_233BD86D8();
    v39 = v36;
    v31 = v40;
    v32 = sub_233BD86B4();
    v33 = v41;
    v34 = sub_233BD86CC();
    v35 = v42;
    v43 = *(void (**)(char *, uint64_t))(v39 + 8);
    v43(v38, v5);
    swift_release();
    v43(v71, v5);
  }
  sub_233B71DBC((uint64_t)v72, &qword_256125B80);
  v85[0] = v29;
  v85[1] = v30;
  v85[2] = v31;
  v85[3] = v32;
  v85[4] = v33;
  v85[5] = v34;
  v85[6] = v35;
  v44 = v78;
  v45 = v79;
  sub_233BD86A8();
  v46 = v74;
  sub_233B71D78(v44, v74, &qword_256125B80);
  if (v73((char *)v46, 1, v5) == 1)
  {
    v47 = 0;
    v48 = 0;
    v49 = 0;
    v50 = 0;
    v51 = 0;
    v52 = 0;
    v53 = 0;
    v54 = 0;
    v83 = 0u;
    v84 = 0u;
    v81 = 0u;
    v82 = 0u;
  }
  else
  {
    v55 = v75;
    v56 = (uint64_t)v70;
    (*(void (**)(char *, uint64_t, uint64_t))(v75 + 32))(v70, v46, v5);
    sub_233BC85C4(v56, v45, (uint64_t *)&v81);
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v56, v5);
    v53 = *((_QWORD *)&v81 + 1);
    v54 = v81;
    v51 = *((_QWORD *)&v82 + 1);
    v52 = v82;
    v49 = *((_QWORD *)&v83 + 1);
    v50 = v83;
    v47 = *((_QWORD *)&v84 + 1);
    v48 = v84;
  }
  sub_233B71DBC(v78, &qword_256125B80);
  v80[0] = v54;
  v80[1] = v53;
  v80[2] = v52;
  v80[3] = v51;
  v80[4] = v50;
  v80[5] = v49;
  v80[6] = v48;
  v80[7] = v47;
  v57 = v79;
  v58 = sub_233BD8690();
  if (v59 >> 60 == 15)
  {
    v60 = type metadata accessor for MarketplaceKitError();
    v61 = (uint64_t)v77;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v77, 1, 1, v60);
  }
  else
  {
    v62 = v58;
    v63 = v59;
    sub_233BD84EC();
    swift_allocObject();
    sub_233BD84E0();
    v64 = type metadata accessor for MarketplaceKitError();
    sub_233B74300(&qword_256124378, (uint64_t (*)(uint64_t))type metadata accessor for MarketplaceKitError, (uint64_t)&protocol conformance descriptor for MarketplaceKitError);
    v61 = (uint64_t)v77;
    sub_233BD84D4();
    sub_233B81AB4(v62, v63);
    swift_release();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v61, 0, 1, v64);
  }
  type metadata accessor for AppLibrary.App();
  v65 = swift_allocObject();
  sub_233BC82E0(v76, (uint64_t)v85, (uint64_t)v80, v61);
  v66 = sub_233BD86F0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 8))(v57, v66);
  return v65;
}

uint64_t sub_233BCAC68()
{
  uint64_t v0;

  swift_release();
  sub_233BCAC98(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_233BCAC98(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

void sub_233BCACA8()
{
  sub_233BC8748();
}

uint64_t sub_233BCACB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124AA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

_QWORD *sub_233BCAD00(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7]);
  return a1;
}

uint64_t storeEnumTagSinglePayload for InstallationNSProgress.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_233BCAD88 + 4 * byte_233BE2A55[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_233BCADBC + 4 * byte_233BE2A50[v4]))();
}

uint64_t sub_233BCADBC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BCADC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233BCADCCLL);
  return result;
}

uint64_t sub_233BCADD8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233BCADE0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_233BCADE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BCADEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InstallationNSProgress.State()
{
  return &type metadata for InstallationNSProgress.State;
}

unint64_t sub_233BCAE0C()
{
  unint64_t result;

  result = qword_256125BB8;
  if (!qword_256125BB8)
  {
    result = MEMORY[0x23493E300](&unk_233BE2CB0, &type metadata for InstallationNSProgress.State);
    atomic_store(result, (unint64_t *)&qword_256125BB8);
  }
  return result;
}

uint64_t sub_233BCAE60()
{
  return sub_233BC3660();
}

uint64_t LicenseResolutionRequest.context.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_233B91BF0(v1, a1);
}

void __swiftcall LicenseResolutionRequest.init(context:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_233BCAE88(v0, v1);
}

uint64_t sub_233BCAE88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LicenseResolutionContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t LicenseResolutionRequest.run()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = v0;
  type metadata accessor for LaunchAngelXPCRequest(0);
  *(_QWORD *)(v1 + 40) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233BCAF24()
{
  uint64_t *v0;
  _QWORD *v1;

  sub_233B91BF0(v0[4], v0[5]);
  type metadata accessor for LaunchAngelXPCRequest.RequestType(0);
  swift_storeEnumTagMultiPayload();
  v1 = (_QWORD *)swift_task_alloc();
  v0[6] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_233BCAFA0;
  return static LaunchAngelConnectionUtilities.handleLaunchAngelRequest(_:)((uint64_t)(v0 + 2), v0[5]);
}

uint64_t sub_233BCAFA0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_233B85664(*(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24));
  return swift_task_switch();
}

uint64_t sub_233BCB010()
{
  uint64_t v0;

  sub_233B8C06C(*(_QWORD *)(v0 + 40));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233BCB050()
{
  uint64_t v0;

  sub_233B8C06C(*(_QWORD *)(v0 + 40));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t *initializeBufferWithCopyOfBuffer for LicenseResolutionRequest(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v4 = type metadata accessor for LicenseResolutionContext();
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = *(int *)(v4 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_233BD851C();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t destroy for LicenseResolutionRequest(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for LicenseResolutionContext() + 20);
  v3 = sub_233BD851C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *initializeWithCopy for LicenseResolutionRequest(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(type metadata accessor for LicenseResolutionContext() + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_233BD851C();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for LicenseResolutionRequest(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for LicenseResolutionContext() + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_233BD851C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *initializeWithTake for LicenseResolutionRequest(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for LicenseResolutionContext() + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_233BD851C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for LicenseResolutionRequest(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = *(int *)(type metadata accessor for LicenseResolutionContext() + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_233BD851C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 40))(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for LicenseResolutionRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233BCB364(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LicenseResolutionContext();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for LicenseResolutionRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_233BCB3AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LicenseResolutionContext();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for LicenseResolutionRequest()
{
  uint64_t result;

  result = qword_256125C20;
  if (!qword_256125C20)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_233BCB428()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for LicenseResolutionContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t PollForUpdatesRequest.domain.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PollForUpdatesRequest.shouldStartUpdates.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t PollForUpdatesRequest.init(domain:shouldStartUpdates:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = a2;
  *(_BYTE *)(a4 + 16) = a3;
  return result;
}

uint64_t PollForUpdatesRequest.run()()
{
  uint64_t v0;
  uint64_t v1;

  *(_OWORD *)(v1 + 48) = *(_OWORD *)v0;
  *(_BYTE *)(v1 + 33) = *(_BYTE *)(v0 + 16);
  return swift_task_switch();
}

uint64_t sub_233BCB4F4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v6;

  if (qword_25424FEB8 != -1)
    swift_once();
  v1 = *(_BYTE *)(v0 + 33);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  sub_233B7FDA8();
  sub_233B7FDEC();
  *(_QWORD *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 24) = v2;
  *(_QWORD *)(v0 + 40) = v0 + 16;
  *(_BYTE *)(v0 + 32) = v1;
  v6 = (char *)&dword_256123CD8 + dword_256123CD8;
  swift_bridgeObjectRetain();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v4;
  *v4 = v0;
  v4[1] = sub_233BCB5D4;
  return ((uint64_t (*)(uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v6)(v0 + 40, sub_233BCB6B4, 0);
}

uint64_t sub_233BCB5D4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_233BCB640()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233BCB674()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_233BCB6B4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  void *v9;
  _QWORD v10[6];

  v8 = (void *)sub_233BD8534();
  v10[4] = a4;
  v10[5] = a5;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_233BC37F0;
  v10[3] = &block_descriptor_12;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_requestUpdatesPoll_reply_, v8, v9);
  _Block_release(v9);

}

uint64_t sub_233BCB774()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000012;
  else
    return 0x6E69616D6F64;
}

uint64_t sub_233BCB7B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233BCBD9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233BCB7D4()
{
  sub_233BCBAF4();
  return sub_233BD8D8C();
}

uint64_t sub_233BCB7FC()
{
  sub_233BCBAF4();
  return sub_233BD8D98();
}

uint64_t PollForUpdatesRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  uint64_t v10;
  int v11;
  char v12;
  char v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125C60);
  v10 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BCBAF4();
  sub_233BD8D80();
  v13 = 0;
  sub_233BD8BE8();
  if (!v2)
  {
    v12 = 1;
    sub_233BD8C24();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v7, v4);
}

uint64_t PollForUpdatesRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v15;
  char v16;
  char v17;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125C70);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BCBAF4();
  sub_233BD8D68();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v17 = 0;
  v10 = sub_233BD8B58();
  v12 = v11;
  v16 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_233BD8B94();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  *(_BYTE *)(a2 + 16) = v13 & 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_233BCBACC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PollForUpdatesRequest.init(from:)(a1, a2);
}

uint64_t sub_233BCBAE0(_QWORD *a1)
{
  return PollForUpdatesRequest.encode(to:)(a1);
}

unint64_t sub_233BCBAF4()
{
  unint64_t result;

  result = qword_256125C68;
  if (!qword_256125C68)
  {
    result = MEMORY[0x23493E300](&unk_233BE2E5C, &type metadata for PollForUpdatesRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125C68);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PollForUpdatesRequest(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PollForUpdatesRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PollForUpdatesRequest()
{
  return &type metadata for PollForUpdatesRequest;
}

uint64_t storeEnumTagSinglePayload for PollForUpdatesRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_233BCBC44 + 4 * byte_233BE2D15[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_233BCBC78 + 4 * asc_233BE2D10[v4]))();
}

uint64_t sub_233BCBC78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BCBC80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233BCBC88);
  return result;
}

uint64_t sub_233BCBC94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233BCBC9CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_233BCBCA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BCBCA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PollForUpdatesRequest.CodingKeys()
{
  return &type metadata for PollForUpdatesRequest.CodingKeys;
}

unint64_t sub_233BCBCC8()
{
  unint64_t result;

  result = qword_256125C78;
  if (!qword_256125C78)
  {
    result = MEMORY[0x23493E300](&unk_233BE2E34, &type metadata for PollForUpdatesRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125C78);
  }
  return result;
}

unint64_t sub_233BCBD10()
{
  unint64_t result;

  result = qword_256125C80;
  if (!qword_256125C80)
  {
    result = MEMORY[0x23493E300](&unk_233BE2DA4, &type metadata for PollForUpdatesRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125C80);
  }
  return result;
}

unint64_t sub_233BCBD58()
{
  unint64_t result;

  result = qword_256125C88;
  if (!qword_256125C88)
  {
    result = MEMORY[0x23493E300](&unk_233BE2DCC, &type metadata for PollForUpdatesRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125C88);
  }
  return result;
}

uint64_t sub_233BCBD9C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
  if (v2 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000233BE6400)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

void SecureButtonActionRequest.Action.stringValue.getter()
{
  __asm { BR              X12 }
}

uint64_t sub_233BCBEE8()
{
  sub_233BD8C60();
  sub_233BD8828();
  swift_bridgeObjectRelease();
  return 0x2D206574656C6544;
}

uint64_t sub_233BCBF64()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_233BCBF90 + 4 * byte_233BE2EB4[*v0]))(0x6574656C6564, 0xE600000000000000);
}

uint64_t sub_233BCBF90()
{
  return 0x68636E75616CLL;
}

uint64_t sub_233BCBFA0()
{
  return 0x6867696C66657270;
}

uint64_t sub_233BCBFD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233BD0478(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233BCBFF4()
{
  sub_233BCC570();
  return sub_233BD8D8C();
}

uint64_t sub_233BCC01C()
{
  sub_233BCC570();
  return sub_233BD8D98();
}

uint64_t sub_233BCC044()
{
  sub_233BCC680();
  return sub_233BD8D8C();
}

uint64_t sub_233BCC06C()
{
  sub_233BCC680();
  return sub_233BD8D98();
}

uint64_t sub_233BCC094()
{
  sub_233BCC63C();
  return sub_233BD8D8C();
}

uint64_t sub_233BCC0BC()
{
  sub_233BCC63C();
  return sub_233BD8D98();
}

uint64_t sub_233BCC0E4()
{
  sub_233BCC5B4();
  return sub_233BD8D8C();
}

uint64_t sub_233BCC10C()
{
  sub_233BCC5B4();
  return sub_233BD8D98();
}

uint64_t sub_233BCC134()
{
  sub_233BCC5F8();
  return sub_233BD8D8C();
}

uint64_t sub_233BCC15C()
{
  sub_233BCC5F8();
  return sub_233BD8D98();
}

void SecureButtonActionRequest.Action.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD v18[14];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125C90);
  v18[7] = *(_QWORD *)(v3 - 8);
  v18[8] = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v18[6] = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125C98);
  v18[4] = *(_QWORD *)(v6 - 8);
  v18[5] = v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  v18[3] = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125CA0);
  v18[1] = *(_QWORD *)(v9 - 8);
  v18[2] = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125CA8);
  MEMORY[0x24BDAC7A8](v11, v12);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125CB0);
  v18[10] = *(_QWORD *)(v13 - 8);
  v18[11] = v13;
  MEMORY[0x24BDAC7A8](v13, v14);
  v18[9] = *v1;
  v15 = a1[3];
  v16 = a1;
  v17 = v1[1];
  __swift_project_boxed_opaque_existential_1(v16, v15);
  sub_233BCC570();
  sub_233BD8D80();
  __asm { BR              X10 }
}

uint64_t sub_233BCC344()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 96) = 0;
  sub_233BCC680();
  v5 = *(_QWORD *)(v4 - 104);
  sub_233BD8BDC();
  sub_233BD8C48();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 112) + 8))(v1, v5);
}

unint64_t sub_233BCC570()
{
  unint64_t result;

  result = qword_256125CB8;
  if (!qword_256125CB8)
  {
    result = MEMORY[0x23493E300](&unk_233BE3C2C, &type metadata for SecureButtonActionRequest.Action.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125CB8);
  }
  return result;
}

unint64_t sub_233BCC5B4()
{
  unint64_t result;

  result = qword_256125CC0;
  if (!qword_256125CC0)
  {
    result = MEMORY[0x23493E300](&unk_233BE3BDC, &type metadata for SecureButtonActionRequest.Action.PreflightBatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125CC0);
  }
  return result;
}

unint64_t sub_233BCC5F8()
{
  unint64_t result;

  result = qword_256125CC8;
  if (!qword_256125CC8)
  {
    result = MEMORY[0x23493E300](&unk_233BE3B8C, &type metadata for SecureButtonActionRequest.Action.PreflightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125CC8);
  }
  return result;
}

unint64_t sub_233BCC63C()
{
  unint64_t result;

  result = qword_256125CD0;
  if (!qword_256125CD0)
  {
    result = MEMORY[0x23493E300](&unk_233BE3B3C, &type metadata for SecureButtonActionRequest.Action.LaunchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125CD0);
  }
  return result;
}

unint64_t sub_233BCC680()
{
  unint64_t result;

  result = qword_256125CD8;
  if (!qword_256125CD8)
  {
    result = MEMORY[0x23493E300](&unk_233BE3AEC, &type metadata for SecureButtonActionRequest.Action.DeleteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125CD8);
  }
  return result;
}

uint64_t SecureButtonActionRequest.Action.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD v30[5];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;

  v38 = a2;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125CE0);
  v33 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31, v3);
  v37 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125CE8);
  v34 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32, v5);
  v36 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125CF0);
  v8 = *(_QWORD *)(v7 - 8);
  v30[3] = v7;
  v30[4] = v8;
  MEMORY[0x24BDAC7A8](v7, v9);
  v35 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125CF8);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125D00);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v18);
  v20 = (char *)v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1[3];
  v39 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_233BCC570();
  v22 = v40;
  sub_233BD8D68();
  if (!v22)
  {
    v30[1] = v11;
    v30[2] = v15;
    v30[0] = v12;
    v40 = v17;
    v23 = sub_233BD8BC4();
    v24 = v16;
    v25 = v20;
    if (*(_QWORD *)(v23 + 16) == 1)
      __asm { BR              X10 }
    v26 = sub_233BD8ABC();
    swift_allocError();
    v28 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256123F90);
    *v28 = &type metadata for SecureButtonActionRequest.Action;
    sub_233BD8B4C();
    sub_233BD8AB0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v28, *MEMORY[0x24BEE26D0], v26);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v25, v24);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
}

uint64_t sub_233BCCD00@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SecureButtonActionRequest.Action.init(from:)(a1, a2);
}

void sub_233BCCD14(_QWORD *a1)
{
  SecureButtonActionRequest.Action.encode(to:)(a1);
}

uint64_t SecureButtonActionRequest.action.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_233B7FCE8(v2, v3);
}

id SecureButtonActionRequest.authenticationMessage.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

__n128 SecureButtonActionRequest.init(action:authenticationMessage:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X8>)
{
  __n128 result;

  result = *a1;
  *a3 = *a1;
  a3[1].n128_u64[0] = a2;
  return result;
}

uint64_t SecureButtonActionRequest.run()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)v1;
  *(_QWORD *)(v2 + 72) = *(_QWORD *)(v1 + 16);
  return swift_task_switch();
}

uint64_t sub_233BCCD74()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  _QWORD *v5;
  char *v7;

  if (qword_25424FEB8 != -1)
    swift_once();
  v1 = v0[8];
  v2 = (void *)v0[9];
  v3 = v0[7];
  v0[2] = v3;
  v0[3] = v1;
  v0[4] = v2;
  v0[5] = v0 + 2;
  sub_233B7FCE8(v3, v1);
  v7 = (char *)&dword_256123CA0 + dword_256123CA0;
  v4 = v2;
  v5 = (_QWORD *)swift_task_alloc();
  v0[10] = v5;
  *v5 = v0;
  v5[1] = sub_233BCCE48;
  return ((uint64_t (*)(_QWORD, _QWORD *, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v7)(v0[6], v0 + 5, sub_233BCCF04, 0);
}

uint64_t sub_233BCCE48()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v4;

  v2 = *v1;
  *(_QWORD *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v4 = *(void **)(v2 + 32);
  sub_233B7FCF8(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));

  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_233BCCEC8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 32);
  sub_233B7FCF8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_233BCCF04(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  void *v9;
  _QWORD v10[6];

  v8 = (void *)sub_233BD8534();
  v10[4] = a4;
  v10[5] = a5;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_233BC37F0;
  v10[3] = &block_descriptor_13;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_handleSecureButtonActionRequest_reply_, v8, v9);
  _Block_release(v9);

}

uint64_t sub_233BCCFC4()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000015;
  else
    return 0x6E6F69746361;
}

uint64_t sub_233BCD000@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233BD0648(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233BCD024()
{
  sub_233BCE7E0();
  return sub_233BD8D8C();
}

uint64_t sub_233BCD04C()
{
  sub_233BCE7E0();
  return sub_233BD8D98();
}

uint64_t SecureButtonActionRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  void *v12;
  id v13;
  id v14;
  void *v15;
  unint64_t v16;
  unint64_t v17;
  void *v18;
  _QWORD v19[2];
  char v20;
  id v21;
  unint64_t v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125D10);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void **)v1;
  v8 = *(_QWORD *)(v1 + 8);
  v19[0] = *(_QWORD *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BCE7E0();
  sub_233BD8D80();
  v21 = v9;
  v22 = v8;
  v20 = 0;
  sub_233BCE824();
  v10 = v19[1];
  sub_233BD8C30();
  if (v10)
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  v12 = (void *)objc_opt_self();
  v21 = 0;
  v13 = objc_msgSend(v12, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v19[0], 1, &v21);
  v14 = v21;
  if (!v13)
  {
    v18 = v14;
    sub_233BD8504();

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  v15 = (void *)sub_233BD8540();
  v17 = v16;

  v21 = v15;
  v22 = v17;
  v20 = 1;
  sub_233B96B70();
  sub_233BD8C30();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return sub_233B71B8C((uint64_t)v15, v17);
}

void SecureButtonActionRequest.init(from:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125D28);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BCE7E0();
  sub_233BD8D68();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v22 = 0;
    sub_233BCE868();
    sub_233BD8BA0();
    v10 = v20;
    v11 = v21;
    v22 = 1;
    sub_233B7FCE8(v20, v21);
    sub_233B96BB4();
    sub_233BD8BA0();
    v12 = v21;
    v19 = v20;
    v18 = sub_233BCE8AC(0, &qword_256125D38);
    sub_233BCE8AC(0, &qword_256125D40);
    v17 = v12;
    v13 = sub_233BD8984();
    v14 = (void *)v13;
    if (v13)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      sub_233B71B8C(v19, v17);
      sub_233B7FCE8(v10, v11);
      v15 = v14;
      sub_233B7FCF8(v10, v11);
      *a2 = v10;
      a2[1] = v11;
      a2[2] = (uint64_t)v15;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      sub_233B7FCF8(v10, v11);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_233BCD504(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  SecureButtonActionRequest.init(from:)(a1, a2);
}

uint64_t sub_233BCD518(_QWORD *a1)
{
  return SecureButtonActionRequest.encode(to:)(a1);
}

uint64_t SecureButtonActionResponse.ResponseType.stringValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int EnumCaseMultiPayload;
  unint64_t v12;
  const char *v13;
  unint64_t v14;
  unint64_t v16;
  unint64_t v17;

  v1 = v0;
  v2 = sub_233BD8558();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SecureButtonActionResponse.ResponseType(0);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_233BCE8F8(v1, (uint64_t)v10);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
      return 1701736270;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v10, v2);
    v16 = 0;
    v17 = 0xE000000000000000;
    sub_233BD8A8C();
    swift_bridgeObjectRelease();
    v12 = 0xD000000000000018;
    v13 = "Confirm install batch - ";
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v10, v2);
    v16 = 0;
    v17 = 0xE000000000000000;
    sub_233BD8A8C();
    swift_bridgeObjectRelease();
    v12 = 0xD000000000000012;
    v13 = "Confirm install - ";
  }
  v16 = v12;
  v17 = (unint64_t)(v13 - 32) | 0x8000000000000000;
  sub_233B74300(&qword_256125D48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_233BD8C60();
  sub_233BD8828();
  swift_bridgeObjectRelease();
  v14 = v16;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v14;
}

uint64_t sub_233BCD6F4()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x496D7269666E6F63;
  if (*v0 != 1)
    v1 = 0xD000000000000013;
  if (*v0)
    return v1;
  else
    return 1701736302;
}

uint64_t sub_233BCD758@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233BD072C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233BCD77C()
{
  sub_233BCE93C();
  return sub_233BD8D8C();
}

uint64_t sub_233BCD7A4()
{
  sub_233BCE93C();
  return sub_233BD8D98();
}

uint64_t sub_233BCD7CC()
{
  sub_233BCE980();
  return sub_233BD8D8C();
}

uint64_t sub_233BCD7F4()
{
  sub_233BCE980();
  return sub_233BD8D98();
}

uint64_t sub_233BCD81C()
{
  sub_233BCE9C4();
  return sub_233BD8D8C();
}

uint64_t sub_233BCD844()
{
  sub_233BCE9C4();
  return sub_233BD8D98();
}

uint64_t sub_233BCD86C()
{
  sub_233BCEA08();
  return sub_233BD8D8C();
}

uint64_t sub_233BCD894()
{
  sub_233BCEA08();
  return sub_233BD8D98();
}

uint64_t SecureButtonActionResponse.ResponseType.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  int EnumCaseMultiPayload;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char v56;
  char v57;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125D50);
  v47 = *(_QWORD *)(v2 - 8);
  v48 = v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  v46 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125D58);
  v42 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45, v5);
  v44 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_233BD8558();
  v49 = *(_QWORD *)(v7 - 8);
  v50 = v7;
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v43 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)&v41 - v12;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125D60);
  v14 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41, v15);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for SecureButtonActionResponse.ResponseType(0);
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125D68);
  v52 = *(_QWORD *)(v22 - 8);
  v53 = v22;
  MEMORY[0x24BDAC7A8](v22, v23);
  v25 = (char *)&v41 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BCE93C();
  sub_233BD8D80();
  sub_233BCE8F8(v51, (uint64_t)v21);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      v55 = 0;
      sub_233BCEA08();
      v39 = v53;
      sub_233BD8BDC();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v41);
      return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v25, v39);
    }
    v27 = v49;
    v28 = v43;
    v29 = v21;
    v30 = v50;
    (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v43, v29, v50);
    v57 = 2;
    sub_233BCE980();
    v31 = v46;
    v32 = v53;
    sub_233BD8BDC();
    sub_233B74300(&qword_256124CD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    v33 = v48;
    v34 = v54;
    sub_233BD8C30();
    if (!v34)
    {
      (*(void (**)(char *, uint64_t))(v47 + 8))(v31, v33);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v30);
      return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v25, v32);
    }
    (*(void (**)(char *, uint64_t))(v47 + 8))(v31, v33);
    v13 = v28;
  }
  else
  {
    v35 = v42;
    v27 = v49;
    v36 = v21;
    v30 = v50;
    (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v13, v36, v50);
    v56 = 1;
    sub_233BCE9C4();
    v37 = v44;
    v32 = v53;
    sub_233BD8BDC();
    sub_233B74300(&qword_256124CD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    v38 = v45;
    sub_233BD8C30();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v38);
  }
  (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v30);
  return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v25, v32);
}

uint64_t SecureButtonActionResponse.ResponseType.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t *v47;
  char *v48;
  char *v49;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  _QWORD *v72;
  uint64_t v73;
  char v74;
  char v75;
  char v76;

  v66 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125D90);
  v4 = *(_QWORD *)(v3 - 8);
  v64 = v3;
  v65 = v4;
  MEMORY[0x24BDAC7A8](v3, v5);
  v71 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125D98);
  v62 = *(_QWORD *)(v7 - 8);
  v63 = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v67 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125DA0);
  v60 = *(_QWORD *)(v10 - 8);
  v61 = v10;
  MEMORY[0x24BDAC7A8](v10, v11);
  v69 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125DA8);
  v68 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70, v13);
  v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for SecureButtonActionResponse.ResponseType(0);
  v18 = MEMORY[0x24BDAC7A8](v16, v17);
  v20 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v18, v21);
  v24 = (char *)&v56 - v23;
  MEMORY[0x24BDAC7A8](v22, v25);
  v27 = (char *)&v56 - v26;
  v28 = a1[3];
  v72 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v28);
  sub_233BCE93C();
  v29 = v15;
  v30 = v73;
  sub_233BD8D68();
  if (v30)
    goto LABEL_9;
  v32 = v68;
  v31 = v69;
  v57 = v20;
  v58 = v24;
  v59 = v27;
  v73 = v16;
  v34 = v70;
  v33 = v71;
  v35 = v29;
  v36 = sub_233BD8BC4();
  if (*(_QWORD *)(v36 + 16) != 1)
  {
    v44 = v34;
    v45 = sub_233BD8ABC();
    swift_allocError();
    v47 = v46;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256123F90);
    *v47 = v73;
    sub_233BD8B4C();
    sub_233BD8AB0();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v45 - 8) + 104))(v47, *MEMORY[0x24BEE26D0], v45);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v29, v44);
LABEL_9:
    v41 = (uint64_t)v72;
    return __swift_destroy_boxed_opaque_existential_1(v41);
  }
  v37 = v29;
  v38 = v32;
  if (*(_BYTE *)(v36 + 32))
  {
    if (*(_BYTE *)(v36 + 32) == 1)
    {
      v75 = 1;
      sub_233BCE9C4();
      v39 = v67;
      sub_233BD8B40();
      sub_233BD8558();
      sub_233B74300(&qword_256124D40, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
      v40 = v63;
      sub_233BD8BA0();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v39, v40);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v35, v34);
      v41 = (uint64_t)v72;
      v42 = (uint64_t)v58;
      swift_storeEnumTagMultiPayload();
      v43 = v42;
    }
    else
    {
      v76 = 2;
      sub_233BCE980();
      v48 = v33;
      v49 = v35;
      sub_233BD8B40();
      sub_233BD8558();
      sub_233B74300(&qword_256124D40, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
      v52 = (uint64_t)v57;
      v53 = v48;
      v54 = v34;
      v55 = v64;
      sub_233BD8BA0();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v53, v55);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v49, v54);
      v41 = (uint64_t)v72;
      swift_storeEnumTagMultiPayload();
      v43 = v52;
    }
    v51 = (uint64_t)v59;
    sub_233B7FD64(v43, (uint64_t)v59, type metadata accessor for SecureButtonActionResponse.ResponseType);
  }
  else
  {
    v74 = 0;
    sub_233BCEA08();
    sub_233BD8B40();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v31, v61);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v37, v34);
    v51 = (uint64_t)v59;
    swift_storeEnumTagMultiPayload();
    v41 = (uint64_t)v72;
  }
  sub_233B7FD64(v51, v66, type metadata accessor for SecureButtonActionResponse.ResponseType);
  return __swift_destroy_boxed_opaque_existential_1(v41);
}

uint64_t sub_233BCE2A8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SecureButtonActionResponse.ResponseType.init(from:)(a1, a2);
}

uint64_t sub_233BCE2BC(_QWORD *a1)
{
  return SecureButtonActionResponse.ResponseType.encode(to:)(a1);
}

uint64_t SecureButtonActionResponse.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_233BCE8F8(v1, a1);
}

uint64_t SecureButtonActionResponse.init(type:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_233B7FD64(a1, a2, type metadata accessor for SecureButtonActionResponse.ResponseType);
}

uint64_t sub_233BCE2FC()
{
  return 1701869940;
}

uint64_t sub_233BCE30C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_233BD8C6C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_233BCE390()
{
  sub_233BCEA4C();
  return sub_233BD8D8C();
}

uint64_t sub_233BCE3B8()
{
  sub_233BCEA4C();
  return sub_233BD8D98();
}

uint64_t SecureButtonActionResponse.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125DB0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BCEA4C();
  sub_233BD8D80();
  type metadata accessor for SecureButtonActionResponse.ResponseType(0);
  sub_233B74300(&qword_256125DC0, type metadata accessor for SecureButtonActionResponse.ResponseType, (uint64_t)&protocol conformance descriptor for SecureButtonActionResponse.ResponseType);
  sub_233BD8C30();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t SecureButtonActionResponse.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v16 = a2;
  v4 = type metadata accessor for SecureButtonActionResponse.ResponseType(0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v18 = (uint64_t)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125DC8);
  v17 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SecureButtonActionResponse(0);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BCEA4C();
  sub_233BD8D68();
  if (!v2)
  {
    sub_233B74300(&qword_256125DD0, type metadata accessor for SecureButtonActionResponse.ResponseType, (uint64_t)&protocol conformance descriptor for SecureButtonActionResponse.ResponseType);
    sub_233BD8BA0();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v7);
    sub_233B7FD64(v18, (uint64_t)v14, type metadata accessor for SecureButtonActionResponse.ResponseType);
    sub_233B7FD64((uint64_t)v14, v16, type metadata accessor for SecureButtonActionResponse);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_233BCE6BC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SecureButtonActionResponse.init(from:)(a1, a2);
}

uint64_t sub_233BCE6D0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256125DB0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BCEA4C();
  sub_233BD8D80();
  type metadata accessor for SecureButtonActionResponse.ResponseType(0);
  sub_233B74300(&qword_256125DC0, type metadata accessor for SecureButtonActionResponse.ResponseType, (uint64_t)&protocol conformance descriptor for SecureButtonActionResponse.ResponseType);
  sub_233BD8C30();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

unint64_t sub_233BCE7E0()
{
  unint64_t result;

  result = qword_256125D18;
  if (!qword_256125D18)
  {
    result = MEMORY[0x23493E300](&unk_233BE3A9C, &type metadata for SecureButtonActionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125D18);
  }
  return result;
}

unint64_t sub_233BCE824()
{
  unint64_t result;

  result = qword_256125D20;
  if (!qword_256125D20)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for SecureButtonActionRequest.Action, &type metadata for SecureButtonActionRequest.Action);
    atomic_store(result, (unint64_t *)&qword_256125D20);
  }
  return result;
}

unint64_t sub_233BCE868()
{
  unint64_t result;

  result = qword_256125D30;
  if (!qword_256125D30)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for SecureButtonActionRequest.Action, &type metadata for SecureButtonActionRequest.Action);
    atomic_store(result, (unint64_t *)&qword_256125D30);
  }
  return result;
}

uint64_t sub_233BCE8AC(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t type metadata accessor for SecureButtonActionResponse.ResponseType(uint64_t a1)
{
  return sub_233B82D70(a1, qword_256125ED8);
}

uint64_t sub_233BCE8F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SecureButtonActionResponse.ResponseType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_233BCE93C()
{
  unint64_t result;

  result = qword_256125D70;
  if (!qword_256125D70)
  {
    result = MEMORY[0x23493E300](&unk_233BE3A4C, &type metadata for SecureButtonActionResponse.ResponseType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125D70);
  }
  return result;
}

unint64_t sub_233BCE980()
{
  unint64_t result;

  result = qword_256125D78;
  if (!qword_256125D78)
  {
    result = MEMORY[0x23493E300](&unk_233BE39FC, &type metadata for SecureButtonActionResponse.ResponseType.ConfirmInstallBatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125D78);
  }
  return result;
}

unint64_t sub_233BCE9C4()
{
  unint64_t result;

  result = qword_256125D80;
  if (!qword_256125D80)
  {
    result = MEMORY[0x23493E300](&unk_233BE39AC, &type metadata for SecureButtonActionResponse.ResponseType.ConfirmInstallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125D80);
  }
  return result;
}

unint64_t sub_233BCEA08()
{
  unint64_t result;

  result = qword_256125D88;
  if (!qword_256125D88)
  {
    result = MEMORY[0x23493E300](&unk_233BE395C, &type metadata for SecureButtonActionResponse.ResponseType.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125D88);
  }
  return result;
}

unint64_t sub_233BCEA4C()
{
  unint64_t result;

  result = qword_256125DB8;
  if (!qword_256125DB8)
  {
    result = MEMORY[0x23493E300](&unk_233BE390C, &type metadata for SecureButtonActionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125DB8);
  }
  return result;
}

uint64_t type metadata accessor for SecureButtonActionResponse(uint64_t a1)
{
  return sub_233B82D70(a1, qword_256125E30);
}

void destroy for SecureButtonActionRequest(uint64_t a1)
{
  sub_233B7FCF8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));

}

uint64_t *_s14MarketplaceKit25SecureButtonActionRequestVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v4 = *a2;
  v5 = a2[1];
  sub_233B7FCE8(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  v6 = (void *)a2[2];
  a1[2] = (uint64_t)v6;
  v7 = v6;
  return a1;
}

uint64_t *assignWithCopy for SecureButtonActionRequest(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  v4 = *a2;
  v5 = a2[1];
  sub_233B7FCE8(*a2, v5);
  v6 = *a1;
  v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_233B7FCF8(v6, v7);
  v8 = (void *)a2[2];
  v9 = (void *)a1[2];
  a1[2] = (uint64_t)v8;
  v10 = v8;

  return a1;
}

uint64_t *assignWithTake for SecureButtonActionRequest(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = *a1;
  v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_233B7FCF8(v4, v5);
  v6 = (void *)a1[2];
  a1[2] = *(_QWORD *)(a2 + 16);

  return a1;
}

uint64_t getEnumTagSinglePayload for SecureButtonActionRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SecureButtonActionRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SecureButtonActionRequest()
{
  return &type metadata for SecureButtonActionRequest;
}

uint64_t *initializeBufferWithCopyOfBuffer for SecureButtonActionRequest.Action(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  sub_233B7FCE8(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t destroy for SecureButtonActionRequest.Action(uint64_t *a1)
{
  return sub_233B7FCF8(*a1, a1[1]);
}

uint64_t *assignWithCopy for SecureButtonActionRequest.Action(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  sub_233B7FCE8(*a2, v4);
  v5 = *a1;
  v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_233B7FCF8(v5, v6);
  return a1;
}

uint64_t *assignWithTake for SecureButtonActionRequest.Action(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_233B7FCF8(v3, v4);
  return a1;
}

uint64_t sub_233BCED20(uint64_t a1)
{
  return (*(_QWORD *)(a1 + 8) >> 60) & 3;
}

uint64_t sub_233BCED2C(uint64_t result)
{
  *(_QWORD *)(result + 8) &= 0xCFFFFFFFFFFFFFFFLL;
  return result;
}

uint64_t sub_233BCED3C(uint64_t result, char a2)
{
  *(_QWORD *)(result + 8) = *(_QWORD *)(result + 8) & 0xCFFFFFFFFFFFFFFFLL | ((unint64_t)(a2 & 3) << 60);
  return result;
}

ValueMetadata *type metadata accessor for SecureButtonActionRequest.Action()
{
  return &type metadata for SecureButtonActionRequest.Action;
}

uint64_t *initializeBufferWithCopyOfBuffer for SecureButtonActionResponse(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(type metadata accessor for SecureButtonActionResponse.ResponseType(0) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(v4 + 64));
  }
  else
  {
    v6 = sub_233BD8558();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for SecureButtonActionResponse(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  type metadata accessor for SecureButtonActionResponse.ResponseType(0);
  result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    v3 = sub_233BD8558();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

void *initializeWithCopy for SecureButtonActionResponse(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for SecureButtonActionResponse.ResponseType(0);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  else
  {
    v5 = sub_233BD8558();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for SecureButtonActionResponse(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != a2)
  {
    sub_233BCF058((uint64_t)a1);
    v4 = type metadata accessor for SecureButtonActionResponse.ResponseType(0);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
    else
    {
      v5 = sub_233BD8558();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_233BCF058(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SecureButtonActionResponse.ResponseType(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeWithTake for SecureButtonActionResponse(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for SecureButtonActionResponse.ResponseType(0);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  else
  {
    v5 = sub_233BD8558();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for SecureButtonActionResponse(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != a2)
  {
    sub_233BCF058((uint64_t)a1);
    v4 = type metadata accessor for SecureButtonActionResponse.ResponseType(0);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
    else
    {
      v5 = sub_233BD8558();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SecureButtonActionResponse()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233BCF248(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SecureButtonActionResponse.ResponseType(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for SecureButtonActionResponse()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_233BCF290(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SecureButtonActionResponse.ResponseType(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_233BCF2D0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SecureButtonActionResponse.ResponseType(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SecureButtonActionResponse.ResponseType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  else
  {
    v7 = sub_233BD8558();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for SecureButtonActionResponse.ResponseType(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    v3 = sub_233BD8558();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

void *initializeWithCopy for SecureButtonActionResponse.ResponseType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_233BD8558();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for SecureButtonActionResponse.ResponseType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_233BCF058((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_233BD8558();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *initializeWithTake for SecureButtonActionResponse.ResponseType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_233BD8558();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for SecureButtonActionResponse.ResponseType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_233BCF058((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_233BD8558();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_233BCF7A0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_233BD8558();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SecureButtonActionResponse.CodingKeys()
{
  return &type metadata for SecureButtonActionResponse.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for SecureButtonActionResponse.ResponseType.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_233BCF864 + 4 * byte_233BE2EC5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_233BCF898 + 4 * byte_233BE2EC0[v4]))();
}

uint64_t sub_233BCF898(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BCF8A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233BCF8A8);
  return result;
}

uint64_t sub_233BCF8B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233BCF8BCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_233BCF8C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BCF8C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SecureButtonActionResponse.ResponseType.CodingKeys()
{
  return &type metadata for SecureButtonActionResponse.ResponseType.CodingKeys;
}

ValueMetadata *type metadata accessor for SecureButtonActionResponse.ResponseType.NoneCodingKeys()
{
  return &type metadata for SecureButtonActionResponse.ResponseType.NoneCodingKeys;
}

ValueMetadata *type metadata accessor for SecureButtonActionResponse.ResponseType.ConfirmInstallCodingKeys()
{
  return &type metadata for SecureButtonActionResponse.ResponseType.ConfirmInstallCodingKeys;
}

ValueMetadata *type metadata accessor for SecureButtonActionResponse.ResponseType.ConfirmInstallBatchCodingKeys()
{
  return &type metadata for SecureButtonActionResponse.ResponseType.ConfirmInstallBatchCodingKeys;
}

uint64_t storeEnumTagSinglePayload for SecureButtonActionRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_233BCF960 + 4 * byte_233BE2ECF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_233BCF994 + 4 * byte_233BE2ECA[v4]))();
}

uint64_t sub_233BCF994(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BCF99C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233BCF9A4);
  return result;
}

uint64_t sub_233BCF9B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233BCF9B8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_233BCF9BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BCF9C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SecureButtonActionRequest.CodingKeys()
{
  return &type metadata for SecureButtonActionRequest.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for SecureButtonActionRequest.Action.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_233BCFA2C + 4 * byte_233BE2ED9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_233BCFA60 + 4 * byte_233BE2ED4[v4]))();
}

uint64_t sub_233BCFA60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BCFA68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233BCFA70);
  return result;
}

uint64_t sub_233BCFA7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233BCFA84);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_233BCFA88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BCFA90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SecureButtonActionRequest.Action.CodingKeys()
{
  return &type metadata for SecureButtonActionRequest.Action.CodingKeys;
}

ValueMetadata *type metadata accessor for SecureButtonActionRequest.Action.DeleteCodingKeys()
{
  return &type metadata for SecureButtonActionRequest.Action.DeleteCodingKeys;
}

ValueMetadata *type metadata accessor for SecureButtonActionRequest.Action.LaunchCodingKeys()
{
  return &type metadata for SecureButtonActionRequest.Action.LaunchCodingKeys;
}

ValueMetadata *type metadata accessor for SecureButtonActionRequest.Action.PreflightCodingKeys()
{
  return &type metadata for SecureButtonActionRequest.Action.PreflightCodingKeys;
}

uint64_t _s14MarketplaceKit26SecureButtonActionResponseV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_233BCFB1C + 4 * byte_233BE2EDE[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_233BCFB3C + 4 * byte_233BE2EE3[v4]))();
}

_BYTE *sub_233BCFB1C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_233BCFB3C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233BCFB44(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233BCFB4C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233BCFB54(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233BCFB5C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SecureButtonActionRequest.Action.PreflightBatchCodingKeys()
{
  return &type metadata for SecureButtonActionRequest.Action.PreflightBatchCodingKeys;
}

unint64_t sub_233BCFB7C()
{
  unint64_t result;

  result = qword_256125F10;
  if (!qword_256125F10)
  {
    result = MEMORY[0x23493E300](&unk_233BE321C, &type metadata for SecureButtonActionRequest.Action.PreflightBatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125F10);
  }
  return result;
}

unint64_t sub_233BCFBC4()
{
  unint64_t result;

  result = qword_256125F18;
  if (!qword_256125F18)
  {
    result = MEMORY[0x23493E300](&unk_233BE32D4, &type metadata for SecureButtonActionRequest.Action.PreflightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125F18);
  }
  return result;
}

unint64_t sub_233BCFC0C()
{
  unint64_t result;

  result = qword_256125F20;
  if (!qword_256125F20)
  {
    result = MEMORY[0x23493E300](&unk_233BE338C, &type metadata for SecureButtonActionRequest.Action.LaunchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125F20);
  }
  return result;
}

unint64_t sub_233BCFC54()
{
  unint64_t result;

  result = qword_256125F28;
  if (!qword_256125F28)
  {
    result = MEMORY[0x23493E300](&unk_233BE3444, &type metadata for SecureButtonActionRequest.Action.DeleteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125F28);
  }
  return result;
}

unint64_t sub_233BCFC9C()
{
  unint64_t result;

  result = qword_256125F30;
  if (!qword_256125F30)
  {
    result = MEMORY[0x23493E300](&unk_233BE34FC, &type metadata for SecureButtonActionRequest.Action.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125F30);
  }
  return result;
}

unint64_t sub_233BCFCE4()
{
  unint64_t result;

  result = qword_256125F38;
  if (!qword_256125F38)
  {
    result = MEMORY[0x23493E300](&unk_233BE35B4, &type metadata for SecureButtonActionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125F38);
  }
  return result;
}

unint64_t sub_233BCFD2C()
{
  unint64_t result;

  result = qword_256125F40;
  if (!qword_256125F40)
  {
    result = MEMORY[0x23493E300](&unk_233BE366C, &type metadata for SecureButtonActionResponse.ResponseType.ConfirmInstallBatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125F40);
  }
  return result;
}

unint64_t sub_233BCFD74()
{
  unint64_t result;

  result = qword_256125F48;
  if (!qword_256125F48)
  {
    result = MEMORY[0x23493E300](&unk_233BE3724, &type metadata for SecureButtonActionResponse.ResponseType.ConfirmInstallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125F48);
  }
  return result;
}

unint64_t sub_233BCFDBC()
{
  unint64_t result;

  result = qword_256125F50;
  if (!qword_256125F50)
  {
    result = MEMORY[0x23493E300](&unk_233BE382C, &type metadata for SecureButtonActionResponse.ResponseType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125F50);
  }
  return result;
}

unint64_t sub_233BCFE04()
{
  unint64_t result;

  result = qword_256125F58;
  if (!qword_256125F58)
  {
    result = MEMORY[0x23493E300](&unk_233BE38E4, &type metadata for SecureButtonActionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125F58);
  }
  return result;
}

unint64_t sub_233BCFE4C()
{
  unint64_t result;

  result = qword_256125F60;
  if (!qword_256125F60)
  {
    result = MEMORY[0x23493E300](&unk_233BE3854, &type metadata for SecureButtonActionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125F60);
  }
  return result;
}

unint64_t sub_233BCFE94()
{
  unint64_t result;

  result = qword_256125F68;
  if (!qword_256125F68)
  {
    result = MEMORY[0x23493E300](&unk_233BE387C, &type metadata for SecureButtonActionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125F68);
  }
  return result;
}

unint64_t sub_233BCFEDC()
{
  unint64_t result;

  result = qword_256125F70;
  if (!qword_256125F70)
  {
    result = MEMORY[0x23493E300](&unk_233BE374C, &type metadata for SecureButtonActionResponse.ResponseType.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125F70);
  }
  return result;
}

unint64_t sub_233BCFF24()
{
  unint64_t result;

  result = qword_256125F78;
  if (!qword_256125F78)
  {
    result = MEMORY[0x23493E300](&unk_233BE3774, &type metadata for SecureButtonActionResponse.ResponseType.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125F78);
  }
  return result;
}

unint64_t sub_233BCFF6C()
{
  unint64_t result;

  result = qword_256125F80;
  if (!qword_256125F80)
  {
    result = MEMORY[0x23493E300](&unk_233BE3694, &type metadata for SecureButtonActionResponse.ResponseType.ConfirmInstallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125F80);
  }
  return result;
}

unint64_t sub_233BCFFB4()
{
  unint64_t result;

  result = qword_256125F88;
  if (!qword_256125F88)
  {
    result = MEMORY[0x23493E300](&unk_233BE36BC, &type metadata for SecureButtonActionResponse.ResponseType.ConfirmInstallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125F88);
  }
  return result;
}

unint64_t sub_233BCFFFC()
{
  unint64_t result;

  result = qword_256125F90;
  if (!qword_256125F90)
  {
    result = MEMORY[0x23493E300](&unk_233BE35DC, &type metadata for SecureButtonActionResponse.ResponseType.ConfirmInstallBatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125F90);
  }
  return result;
}

unint64_t sub_233BD0044()
{
  unint64_t result;

  result = qword_256125F98;
  if (!qword_256125F98)
  {
    result = MEMORY[0x23493E300](&unk_233BE3604, &type metadata for SecureButtonActionResponse.ResponseType.ConfirmInstallBatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125F98);
  }
  return result;
}

unint64_t sub_233BD008C()
{
  unint64_t result;

  result = qword_256125FA0;
  if (!qword_256125FA0)
  {
    result = MEMORY[0x23493E300](&unk_233BE379C, &type metadata for SecureButtonActionResponse.ResponseType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125FA0);
  }
  return result;
}

unint64_t sub_233BD00D4()
{
  unint64_t result;

  result = qword_256125FA8;
  if (!qword_256125FA8)
  {
    result = MEMORY[0x23493E300](&unk_233BE37C4, &type metadata for SecureButtonActionResponse.ResponseType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125FA8);
  }
  return result;
}

unint64_t sub_233BD011C()
{
  unint64_t result;

  result = qword_256125FB0;
  if (!qword_256125FB0)
  {
    result = MEMORY[0x23493E300](&unk_233BE3524, &type metadata for SecureButtonActionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125FB0);
  }
  return result;
}

unint64_t sub_233BD0164()
{
  unint64_t result;

  result = qword_256125FB8;
  if (!qword_256125FB8)
  {
    result = MEMORY[0x23493E300](&unk_233BE354C, &type metadata for SecureButtonActionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125FB8);
  }
  return result;
}

unint64_t sub_233BD01AC()
{
  unint64_t result;

  result = qword_256125FC0;
  if (!qword_256125FC0)
  {
    result = MEMORY[0x23493E300](&unk_233BE33B4, &type metadata for SecureButtonActionRequest.Action.DeleteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125FC0);
  }
  return result;
}

unint64_t sub_233BD01F4()
{
  unint64_t result;

  result = qword_256125FC8;
  if (!qword_256125FC8)
  {
    result = MEMORY[0x23493E300](&unk_233BE33DC, &type metadata for SecureButtonActionRequest.Action.DeleteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125FC8);
  }
  return result;
}

unint64_t sub_233BD023C()
{
  unint64_t result;

  result = qword_256125FD0;
  if (!qword_256125FD0)
  {
    result = MEMORY[0x23493E300](&unk_233BE32FC, &type metadata for SecureButtonActionRequest.Action.LaunchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125FD0);
  }
  return result;
}

unint64_t sub_233BD0284()
{
  unint64_t result;

  result = qword_256125FD8;
  if (!qword_256125FD8)
  {
    result = MEMORY[0x23493E300](&unk_233BE3324, &type metadata for SecureButtonActionRequest.Action.LaunchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125FD8);
  }
  return result;
}

unint64_t sub_233BD02CC()
{
  unint64_t result;

  result = qword_256125FE0;
  if (!qword_256125FE0)
  {
    result = MEMORY[0x23493E300](&unk_233BE3244, &type metadata for SecureButtonActionRequest.Action.PreflightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125FE0);
  }
  return result;
}

unint64_t sub_233BD0314()
{
  unint64_t result;

  result = qword_256125FE8;
  if (!qword_256125FE8)
  {
    result = MEMORY[0x23493E300](&unk_233BE326C, &type metadata for SecureButtonActionRequest.Action.PreflightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125FE8);
  }
  return result;
}

unint64_t sub_233BD035C()
{
  unint64_t result;

  result = qword_256125FF0;
  if (!qword_256125FF0)
  {
    result = MEMORY[0x23493E300](&unk_233BE318C, &type metadata for SecureButtonActionRequest.Action.PreflightBatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125FF0);
  }
  return result;
}

unint64_t sub_233BD03A4()
{
  unint64_t result;

  result = qword_256125FF8;
  if (!qword_256125FF8)
  {
    result = MEMORY[0x23493E300](&unk_233BE31B4, &type metadata for SecureButtonActionRequest.Action.PreflightBatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256125FF8);
  }
  return result;
}

unint64_t sub_233BD03EC()
{
  unint64_t result;

  result = qword_256126000;
  if (!qword_256126000)
  {
    result = MEMORY[0x23493E300](&unk_233BE346C, &type metadata for SecureButtonActionRequest.Action.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256126000);
  }
  return result;
}

unint64_t sub_233BD0434()
{
  unint64_t result;

  result = qword_256126008;
  if (!qword_256126008)
  {
    result = MEMORY[0x23493E300](&unk_233BE3494, &type metadata for SecureButtonActionRequest.Action.CodingKeys);
    atomic_store(result, &qword_256126008);
  }
  return result;
}

uint64_t sub_233BD0478(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6574656C6564 && a2 == 0xE600000000000000;
  if (v2 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x68636E75616CLL && a2 == 0xE600000000000000 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6867696C66657270 && a2 == 0xE900000000000074 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6867696C66657270 && a2 == 0xEE00686374614274)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_233BD0648(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F69746361 && a2 == 0xE600000000000000;
  if (v2 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000233BE6460)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_233BD072C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v2 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x496D7269666E6F63 && a2 == 0xEE006C6C6174736ELL || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000233BE6480)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t sub_233BD08AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_233BD88DC();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_233BD88D0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_233BB1E94(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_233BD8888();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t static LicenseRepair.requestLicenseRepair(_:status:)(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123A58);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_233BD88DC();
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0;
  *(_QWORD *)(v12 + 24) = 0;
  *(_QWORD *)(v12 + 32) = a1;
  *(_QWORD *)(v12 + 40) = a2;
  *(_DWORD *)(v12 + 48) = a3;
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  swift_bridgeObjectRetain();
  if (v13 == 1)
  {
    sub_233BB1E94((uint64_t)v9);
    v14 = 0;
    v15 = 0;
  }
  else
  {
    sub_233BD88D0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    if (*(_QWORD *)(v12 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v14 = sub_233BD8888();
      v15 = v16;
      swift_unknownObjectRelease();
    }
    else
    {
      v14 = 0;
      v15 = 0;
    }
  }
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = &unk_256126018;
  *(_QWORD *)(v17 + 24) = v12;
  if (v15 | v14)
  {
    v19[0] = 0;
    v19[1] = 0;
    v19[2] = v14;
    v19[3] = v15;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_233BD0BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)(v6 + 44) = a6;
  *(_QWORD *)(v6 + 104) = a4;
  *(_QWORD *)(v6 + 112) = a5;
  v7 = sub_233BD8780();
  *(_QWORD *)(v6 + 120) = v7;
  *(_QWORD *)(v6 + 128) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 136) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233BD0C30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v1 = *(unsigned int *)(v0 + 44);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = qword_25424FEB8;
  swift_bridgeObjectRetain();
  if (v3 != -1)
    swift_once();
  v4 = *(_QWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 16) = v4;
  *(_QWORD *)(v0 + 24) = v2;
  *(_QWORD *)(v0 + 32) = v1;
  *(_BYTE *)(v0 + 40) = 0;
  *(_QWORD *)(v0 + 72) = v0 + 16;
  sub_233B8019C(v4, v2, v1, 0);
  v7 = (uint64_t (*)(void))((char *)&dword_256123D78 + dword_256123D78);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v5;
  *v5 = v0;
  v5[1] = sub_233BD0D10;
  return v7();
}

uint64_t sub_233BD0D10()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 152) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    sub_233B801BC(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_BYTE *)(v2 + 40));
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_233BD0D90()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233BD0DC0()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(void **)(v0 + 152);
  sub_233B801BC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  swift_bridgeObjectRelease();
  sub_233BD8738();
  swift_bridgeObjectRetain();
  v2 = v1;
  swift_bridgeObjectRetain();
  v3 = v1;
  v4 = sub_233BD8768();
  v5 = sub_233BD896C();
  if (os_log_type_enabled(v4, v5))
  {
    v18 = *(id *)(v0 + 152);
    v20 = *(_QWORD *)(v0 + 128);
    v6 = *(_QWORD *)(v0 + 112);
    v21 = *(_QWORD *)(v0 + 120);
    v22 = *(_QWORD *)(v0 + 136);
    v7 = *(_QWORD *)(v0 + 104);
    v8 = swift_slowAlloc();
    v19 = swift_slowAlloc();
    v23 = v19;
    *(_DWORD *)v8 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 80) = sub_233B87524(v7, v6, &v23);
    sub_233BD89CC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    swift_getErrorValue();
    v9 = *(_QWORD *)(*(_QWORD *)(v0 + 56) - 8);
    swift_task_alloc();
    (*(void (**)(void))(v9 + 16))();
    v10 = sub_233BD8810();
    v12 = v11;
    swift_task_dealloc();
    *(_QWORD *)(v0 + 96) = sub_233B87524(v10, v12, &v23);
    sub_233BD89CC();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_233B6C000, v4, v5, "Error requesting license repair for app at path: %{public}s, %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23493E3B4](v19, -1, -1);
    MEMORY[0x23493E3B4](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v21);
  }
  else
  {
    v13 = *(void **)(v0 + 152);
    v15 = *(_QWORD *)(v0 + 128);
    v14 = *(_QWORD *)(v0 + 136);
    v16 = *(_QWORD *)(v0 + 120);

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233BD1090()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_233BD10BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_DWORD *)(v1 + 48);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_233B71C64;
  return sub_233BD0BCC(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_233BD113C()
{
  swift_release();
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for LicenseRepair()
{
  return &type metadata for LicenseRepair;
}

__n128 PerformActionRequest.init(request:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  unsigned __int8 v2;
  __n128 result;

  v2 = a1[1].n128_u8[0];
  result = *a1;
  *a2 = *a1;
  a2[1].n128_u8[0] = v2;
  return result;
}

uint64_t PerformActionRequest.run()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)v1;
  *(_BYTE *)(v2 + 33) = *(_BYTE *)(v1 + 16);
  return swift_task_switch();
}

uint64_t sub_233BD11B0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  _QWORD *v3;
  char *v5;

  if (qword_25424FEB8 != -1)
    swift_once();
  v1 = *(_BYTE *)(v0 + 33);
  v2 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 24) = v2;
  *(_BYTE *)(v0 + 32) = v1;
  *(_QWORD *)(v0 + 40) = v0 + 16;
  sub_233B7FEDC();
  v5 = (char *)&dword_256123CF0 + dword_256123CF0;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v3;
  *v3 = v0;
  v3[1] = sub_233BD1278;
  return ((uint64_t (*)(_QWORD, uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v5)(*(_QWORD *)(v0 + 48), v0 + 40, sub_233BD1B20, 0);
}

uint64_t sub_233BD1278()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  sub_233B7FEE8();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_233BD12F0()
{
  uint64_t v0;

  sub_233B7FEE8();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233BD1328()
{
  _BYTE *v0;

  if (*v0)
    return 0x63694C77656E6572;
  else
    return 0xD000000000000014;
}

uint64_t sub_233BD1374@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233BD3530(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233BD1398()
{
  sub_233BD28C4();
  return sub_233BD8D8C();
}

uint64_t sub_233BD13C0()
{
  sub_233BD28C4();
  return sub_233BD8D98();
}

uint64_t sub_233BD13E8()
{
  sub_233BD294C();
  return sub_233BD8D8C();
}

uint64_t sub_233BD1410()
{
  sub_233BD294C();
  return sub_233BD8D98();
}

uint64_t sub_233BD1438()
{
  sub_233BD2908();
  return sub_233BD8D8C();
}

uint64_t sub_233BD1460()
{
  sub_233BD2908();
  return sub_233BD8D98();
}

uint64_t PerformActionRequest.Request.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256126038);
  v21 = *(_QWORD *)(v3 - 8);
  v22 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256126040);
  v20 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256126048);
  v24 = *(_QWORD *)(v11 - 8);
  v25 = v11;
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *v1;
  v19[1] = v1[1];
  v15 = *((_BYTE *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BD28C4();
  sub_233BD8D80();
  if ((v15 & 1) != 0)
  {
    v28 = 1;
    sub_233BD2908();
    v16 = v25;
    sub_233BD8BDC();
    v26 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2561244C0);
    sub_233B90DC4(&qword_2561244C8, MEMORY[0x24BEE4570], MEMORY[0x24BEE12A0]);
    v17 = v22;
    sub_233BD8C30();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v17);
  }
  else
  {
    v27 = 0;
    sub_233BD294C();
    v16 = v25;
    sub_233BD8BDC();
    sub_233BD8C18();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v7);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v16);
}

uint64_t PerformActionRequest.Request.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  char *v30;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;

  v35 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256126068);
  v4 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  v37 = v4;
  MEMORY[0x24BDAC7A8](v3, v5);
  v38 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256126070);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256126078);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1[3];
  v39 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_233BD28C4();
  v18 = v40;
  sub_233BD8D68();
  if (!v18)
  {
    v19 = v8;
    v20 = v7;
    v21 = v38;
    v40 = v13;
    v22 = sub_233BD8BC4();
    if (*(_QWORD *)(v22 + 16) == 1)
    {
      v23 = *(_BYTE *)(v22 + 32);
      v34 = v22;
      if ((v23 & 1) != 0)
      {
        v43 = 1;
        sub_233BD2908();
        sub_233BD8B40();
        __swift_instantiateConcreteTypeFromMangledName(&qword_2561244C0);
        sub_233B90DC4(&qword_2561244D8, MEMORY[0x24BEE4598], MEMORY[0x24BEE12D0]);
        v24 = v36;
        sub_233BD8BA0();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v21, v24);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v40 + 8))(v16, v12);
        v25 = 0;
        v26 = v41;
      }
      else
      {
        v42 = 0;
        sub_233BD294C();
        v30 = v11;
        sub_233BD8B40();
        v38 = (char *)v12;
        v26 = sub_233BD8B88();
        v25 = v32;
        (*(void (**)(char *, uint64_t))(v19 + 8))(v30, v20);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, char *))(v40 + 8))(v16, v38);
      }
      v33 = v35;
      *v35 = v26;
      v33[1] = v25;
      *((_BYTE *)v33 + 16) = v23;
    }
    else
    {
      v27 = sub_233BD8ABC();
      swift_allocError();
      v29 = v28;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256123F90);
      *v29 = &type metadata for PerformActionRequest.Request;
      sub_233BD8B4C();
      sub_233BD8AB0();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v29, *MEMORY[0x24BEE26D0], v27);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v16, v12);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
}

uint64_t sub_233BD1AE4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return PerformActionRequest.Request.init(from:)(a1, a2);
}

uint64_t sub_233BD1AF8(_QWORD *a1)
{
  return PerformActionRequest.Request.encode(to:)(a1);
}

uint64_t PerformActionRequest.request.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  return sub_233B7FEDC();
}

void sub_233BD1B20(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  void *v9;
  _QWORD v10[6];

  v8 = (void *)sub_233BD8534();
  v10[4] = a4;
  v10[5] = a5;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_233BC37F0;
  v10[3] = &block_descriptor_14;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_performActionRequest_reply_, v8, v9);
  _Block_release(v9);

}

unint64_t PerformActionRequest.stringValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;
  unint64_t v12;

  v1 = *v0;
  if ((v0[2] & 1) != 0)
  {
    sub_233BD8A8C();
    swift_bridgeObjectRelease();
    v12 = 0xD000000000000014;
    v2 = *(_QWORD *)(v1 + 16);
    if (v2)
    {
      v11 = MEMORY[0x24BEE4AF8];
      sub_233B7F608(0, v2, 0);
      v3 = v1 + 32;
      do
      {
        v3 += 8;
        v4 = sub_233BD8C60();
        v6 = v5;
        v8 = *(_QWORD *)(v11 + 16);
        v7 = *(_QWORD *)(v11 + 24);
        if (v8 >= v7 >> 1)
          sub_233B7F608(v7 > 1, v8 + 1, 1);
        *(_QWORD *)(v11 + 16) = v8 + 1;
        v9 = v11 + 16 * v8;
        *(_QWORD *)(v9 + 32) = v4;
        *(_QWORD *)(v9 + 40) = v6;
        --v2;
      }
      while (v2);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_25424FDD0);
    sub_233BBA65C();
    sub_233BD87E0();
    swift_bridgeObjectRelease();
    sub_233BD8828();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_233BD8A8C();
    swift_bridgeObjectRelease();
    v12 = 0xD00000000000001BLL;
    sub_233BD8828();
  }
  return v12;
}

uint64_t sub_233BD1DB8()
{
  sub_233BD2990();
  return sub_233BD8D8C();
}

uint64_t sub_233BD1DE0()
{
  sub_233BD2990();
  return sub_233BD8D98();
}

uint64_t PerformActionRequest.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD v11[3];
  char v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256126080);
  v11[0] = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v7 = v1[1];
  v9 = *((_BYTE *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BD2990();
  sub_233BD8D80();
  v11[1] = v8;
  v11[2] = v7;
  v12 = v9;
  sub_233BD29D4();
  sub_233BD8C30();
  return (*(uint64_t (**)(char *, uint64_t))(v11[0] + 8))(v6, v3);
}

uint64_t PerformActionRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  __int128 v12;
  char v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256126098);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BD2990();
  sub_233BD8D68();
  if (!v2)
  {
    sub_233BD2A18();
    sub_233BD8BA0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v10 = v13;
    *(_OWORD *)a2 = v12;
    *(_BYTE *)(a2 + 16) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_233BD2040@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PerformActionRequest.init(from:)(a1, a2);
}

uint64_t sub_233BD2054(_QWORD *a1)
{
  return PerformActionRequest.encode(to:)(a1);
}

uint64_t static PerformActionResponse.Response.== infix(_:_:)()
{
  return 1;
}

uint64_t PerformActionResponse.Response.hash(into:)()
{
  return sub_233BD8D08();
}

uint64_t sub_233BD2094()
{
  sub_233BD2A5C();
  return sub_233BD8D8C();
}

uint64_t sub_233BD20BC()
{
  sub_233BD2A5C();
  return sub_233BD8D98();
}

uint64_t sub_233BD20E4()
{
  sub_233BD2AA0();
  return sub_233BD8D8C();
}

uint64_t sub_233BD210C()
{
  sub_233BD2AA0();
  return sub_233BD8D98();
}

uint64_t PerformActionResponse.Response.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561260A8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561260B0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BD2A5C();
  sub_233BD8D80();
  sub_233BD2AA0();
  sub_233BD8BDC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t PerformActionResponse.Response.hashValue.getter()
{
  sub_233BD8CFC();
  sub_233BD8D08();
  return sub_233BD8D38();
}

uint64_t PerformActionResponse.Response.init(from:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561260C8);
  v2 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23, v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561260D0);
  v6 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24, v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BD2A5C();
  v10 = v25;
  sub_233BD8D68();
  if (v10)
    goto LABEL_7;
  v22 = a1;
  v25 = v6;
  v12 = v23;
  v11 = v24;
  if (*(_QWORD *)(sub_233BD8BC4() + 16) != 1)
  {
    v16 = sub_233BD8ABC();
    swift_allocError();
    v18 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256123F90);
    *v18 = &type metadata for PerformActionResponse.Response;
    sub_233BD8B4C();
    sub_233BD8AB0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v18, *MEMORY[0x24BEE26D0], v16);
    swift_willThrow();
    v19 = v25;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v11);
    a1 = v22;
LABEL_7:
    v15 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v15);
  }
  sub_233BD2AA0();
  v13 = v5;
  sub_233BD8B40();
  v14 = v25;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v13, v12);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v11);
  v15 = (uint64_t)v22;
  return __swift_destroy_boxed_opaque_existential_1(v15);
}

uint64_t sub_233BD250C(_QWORD *a1)
{
  return PerformActionResponse.Response.init(from:)(a1);
}

uint64_t sub_233BD2520(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561260A8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561260B0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BD2A5C();
  sub_233BD8D80();
  sub_233BD2AA0();
  sub_233BD8BDC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_233BD2664()
{
  sub_233BD2AE4();
  return sub_233BD8D8C();
}

uint64_t sub_233BD268C()
{
  sub_233BD2AE4();
  return sub_233BD8D98();
}

uint64_t PerformActionResponse.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561260D8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BD2AE4();
  sub_233BD8D80();
  sub_233BD2B28();
  sub_233BD8C30();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t PerformActionResponse.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561260F0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BD2AE4();
  sub_233BD8D68();
  if (!v1)
  {
    sub_233BD2B6C();
    sub_233BD8BA0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_233BD289C(_QWORD *a1)
{
  return PerformActionResponse.init(from:)(a1);
}

uint64_t sub_233BD28B0(_QWORD *a1)
{
  return PerformActionResponse.encode(to:)(a1);
}

unint64_t sub_233BD28C4()
{
  unint64_t result;

  result = qword_256126050;
  if (!qword_256126050)
  {
    result = MEMORY[0x23493E300](&unk_233BE45A8, &type metadata for PerformActionRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256126050);
  }
  return result;
}

unint64_t sub_233BD2908()
{
  unint64_t result;

  result = qword_256126058;
  if (!qword_256126058)
  {
    result = MEMORY[0x23493E300](&unk_233BE4558, &type metadata for PerformActionRequest.Request.RenewLicensesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256126058);
  }
  return result;
}

unint64_t sub_233BD294C()
{
  unint64_t result;

  result = qword_256126060;
  if (!qword_256126060)
  {
    result = MEMORY[0x23493E300](&unk_233BE4508, &type metadata for PerformActionRequest.Request.HandleSuccessfulAuthCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256126060);
  }
  return result;
}

unint64_t sub_233BD2990()
{
  unint64_t result;

  result = qword_256126088;
  if (!qword_256126088)
  {
    result = MEMORY[0x23493E300](&unk_233BE44B8, &type metadata for PerformActionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256126088);
  }
  return result;
}

unint64_t sub_233BD29D4()
{
  unint64_t result;

  result = qword_256126090;
  if (!qword_256126090)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for PerformActionRequest.Request, &type metadata for PerformActionRequest.Request);
    atomic_store(result, (unint64_t *)&qword_256126090);
  }
  return result;
}

unint64_t sub_233BD2A18()
{
  unint64_t result;

  result = qword_2561260A0;
  if (!qword_2561260A0)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for PerformActionRequest.Request, &type metadata for PerformActionRequest.Request);
    atomic_store(result, (unint64_t *)&qword_2561260A0);
  }
  return result;
}

unint64_t sub_233BD2A5C()
{
  unint64_t result;

  result = qword_2561260B8;
  if (!qword_2561260B8)
  {
    result = MEMORY[0x23493E300](&unk_233BE4468, &type metadata for PerformActionResponse.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561260B8);
  }
  return result;
}

unint64_t sub_233BD2AA0()
{
  unint64_t result;

  result = qword_2561260C0;
  if (!qword_2561260C0)
  {
    result = MEMORY[0x23493E300](&unk_233BE4418, &type metadata for PerformActionResponse.Response.IgnoredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561260C0);
  }
  return result;
}

unint64_t sub_233BD2AE4()
{
  unint64_t result;

  result = qword_2561260E0;
  if (!qword_2561260E0)
  {
    result = MEMORY[0x23493E300](&unk_233BE43C8, &type metadata for PerformActionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561260E0);
  }
  return result;
}

unint64_t sub_233BD2B28()
{
  unint64_t result;

  result = qword_2561260E8;
  if (!qword_2561260E8)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for PerformActionResponse.Response, &type metadata for PerformActionResponse.Response);
    atomic_store(result, (unint64_t *)&qword_2561260E8);
  }
  return result;
}

unint64_t sub_233BD2B6C()
{
  unint64_t result;

  result = qword_2561260F8;
  if (!qword_2561260F8)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for PerformActionResponse.Response, &type metadata for PerformActionResponse.Response);
    atomic_store(result, (unint64_t *)&qword_2561260F8);
  }
  return result;
}

unint64_t sub_233BD2BB4()
{
  unint64_t result;

  result = qword_256126100;
  if (!qword_256126100)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for PerformActionResponse.Response, &type metadata for PerformActionResponse.Response);
    atomic_store(result, (unint64_t *)&qword_256126100);
  }
  return result;
}

ValueMetadata *type metadata accessor for PerformActionRequest()
{
  return &type metadata for PerformActionRequest;
}

uint64_t destroy for PerformActionRequest.Request()
{
  return sub_233B7FEE8();
}

uint64_t _s14MarketplaceKit20PerformActionRequestVwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_233B7FEDC();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s14MarketplaceKit20PerformActionRequestVwca_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_233B7FEDC();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_233B7FEE8();
  return a1;
}

uint64_t _s14MarketplaceKit20PerformActionRequestVwta_0(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_233B7FEE8();
  return a1;
}

uint64_t _s14MarketplaceKit20PerformActionRequestVwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s14MarketplaceKit20PerformActionRequestVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_233BD2D98(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for PerformActionRequest.Request()
{
  return &type metadata for PerformActionRequest.Request;
}

ValueMetadata *type metadata accessor for PerformActionResponse()
{
  return &type metadata for PerformActionResponse;
}

ValueMetadata *type metadata accessor for PerformActionResponse.Response()
{
  return &type metadata for PerformActionResponse.Response;
}

ValueMetadata *type metadata accessor for PerformActionResponse.CodingKeys()
{
  return &type metadata for PerformActionResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for PerformActionResponse.Response.CodingKeys()
{
  return &type metadata for PerformActionResponse.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for PerformActionResponse.Response.IgnoredCodingKeys()
{
  return &type metadata for PerformActionResponse.Response.IgnoredCodingKeys;
}

ValueMetadata *type metadata accessor for PerformActionRequest.CodingKeys()
{
  return &type metadata for PerformActionRequest.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for PerformActionRequest.Request.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_233BD2E64 + 4 * byte_233BE3CA5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_233BD2E98 + 4 * asc_233BE3CA0[v4]))();
}

uint64_t sub_233BD2E98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BD2EA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233BD2EA8);
  return result;
}

uint64_t sub_233BD2EB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233BD2EBCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_233BD2EC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BD2EC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PerformActionRequest.Request.CodingKeys()
{
  return &type metadata for PerformActionRequest.Request.CodingKeys;
}

ValueMetadata *type metadata accessor for PerformActionRequest.Request.HandleSuccessfulAuthCodingKeys()
{
  return &type metadata for PerformActionRequest.Request.HandleSuccessfulAuthCodingKeys;
}

uint64_t _s14MarketplaceKit21PerformActionResponseV8ResponseOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_233BD2F34 + 4 * byte_233BE3CAA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_233BD2F54 + 4 * byte_233BE3CAF[v4]))();
}

_BYTE *sub_233BD2F34(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_233BD2F54(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233BD2F5C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233BD2F64(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_233BD2F6C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_233BD2F74(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PerformActionRequest.Request.RenewLicensesCodingKeys()
{
  return &type metadata for PerformActionRequest.Request.RenewLicensesCodingKeys;
}

unint64_t sub_233BD2F94()
{
  unint64_t result;

  result = qword_256126108;
  if (!qword_256126108)
  {
    result = MEMORY[0x23493E300](&unk_233BE3FB8, &type metadata for PerformActionRequest.Request.RenewLicensesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256126108);
  }
  return result;
}

unint64_t sub_233BD2FDC()
{
  unint64_t result;

  result = qword_256126110;
  if (!qword_256126110)
  {
    result = MEMORY[0x23493E300](&unk_233BE4070, &type metadata for PerformActionRequest.Request.HandleSuccessfulAuthCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256126110);
  }
  return result;
}

unint64_t sub_233BD3024()
{
  unint64_t result;

  result = qword_256126118;
  if (!qword_256126118)
  {
    result = MEMORY[0x23493E300](&unk_233BE4128, &type metadata for PerformActionRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256126118);
  }
  return result;
}

unint64_t sub_233BD306C()
{
  unint64_t result;

  result = qword_256126120;
  if (!qword_256126120)
  {
    result = MEMORY[0x23493E300](&unk_233BE41E0, &type metadata for PerformActionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256126120);
  }
  return result;
}

unint64_t sub_233BD30B4()
{
  unint64_t result;

  result = qword_256126128;
  if (!qword_256126128)
  {
    result = MEMORY[0x23493E300](&unk_233BE42E8, &type metadata for PerformActionResponse.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256126128);
  }
  return result;
}

unint64_t sub_233BD30FC()
{
  unint64_t result;

  result = qword_256126130;
  if (!qword_256126130)
  {
    result = MEMORY[0x23493E300](&unk_233BE43A0, &type metadata for PerformActionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256126130);
  }
  return result;
}

unint64_t sub_233BD3144()
{
  unint64_t result;

  result = qword_256126138;
  if (!qword_256126138)
  {
    result = MEMORY[0x23493E300](&unk_233BE4310, &type metadata for PerformActionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256126138);
  }
  return result;
}

unint64_t sub_233BD318C()
{
  unint64_t result;

  result = qword_256126140;
  if (!qword_256126140)
  {
    result = MEMORY[0x23493E300](&unk_233BE4338, &type metadata for PerformActionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256126140);
  }
  return result;
}

unint64_t sub_233BD31D4()
{
  unint64_t result;

  result = qword_256126148;
  if (!qword_256126148)
  {
    result = MEMORY[0x23493E300](&unk_233BE4208, &type metadata for PerformActionResponse.Response.IgnoredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256126148);
  }
  return result;
}

unint64_t sub_233BD321C()
{
  unint64_t result;

  result = qword_256126150;
  if (!qword_256126150)
  {
    result = MEMORY[0x23493E300](&unk_233BE4230, &type metadata for PerformActionResponse.Response.IgnoredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256126150);
  }
  return result;
}

unint64_t sub_233BD3264()
{
  unint64_t result;

  result = qword_256126158;
  if (!qword_256126158)
  {
    result = MEMORY[0x23493E300](&unk_233BE4258, &type metadata for PerformActionResponse.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256126158);
  }
  return result;
}

unint64_t sub_233BD32AC()
{
  unint64_t result;

  result = qword_256126160;
  if (!qword_256126160)
  {
    result = MEMORY[0x23493E300](&unk_233BE4280, &type metadata for PerformActionResponse.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256126160);
  }
  return result;
}

unint64_t sub_233BD32F4()
{
  unint64_t result;

  result = qword_256126168;
  if (!qword_256126168)
  {
    result = MEMORY[0x23493E300](&unk_233BE4150, &type metadata for PerformActionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256126168);
  }
  return result;
}

unint64_t sub_233BD333C()
{
  unint64_t result;

  result = qword_256126170;
  if (!qword_256126170)
  {
    result = MEMORY[0x23493E300](&unk_233BE4178, &type metadata for PerformActionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256126170);
  }
  return result;
}

unint64_t sub_233BD3384()
{
  unint64_t result;

  result = qword_256126178;
  if (!qword_256126178)
  {
    result = MEMORY[0x23493E300](&unk_233BE3FE0, &type metadata for PerformActionRequest.Request.HandleSuccessfulAuthCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256126178);
  }
  return result;
}

unint64_t sub_233BD33CC()
{
  unint64_t result;

  result = qword_256126180;
  if (!qword_256126180)
  {
    result = MEMORY[0x23493E300](&unk_233BE4008, &type metadata for PerformActionRequest.Request.HandleSuccessfulAuthCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256126180);
  }
  return result;
}

unint64_t sub_233BD3414()
{
  unint64_t result;

  result = qword_256126188;
  if (!qword_256126188)
  {
    result = MEMORY[0x23493E300](&unk_233BE3F28, &type metadata for PerformActionRequest.Request.RenewLicensesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256126188);
  }
  return result;
}

unint64_t sub_233BD345C()
{
  unint64_t result;

  result = qword_256126190;
  if (!qword_256126190)
  {
    result = MEMORY[0x23493E300](&unk_233BE3F50, &type metadata for PerformActionRequest.Request.RenewLicensesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256126190);
  }
  return result;
}

unint64_t sub_233BD34A4()
{
  unint64_t result;

  result = qword_256126198;
  if (!qword_256126198)
  {
    result = MEMORY[0x23493E300](&unk_233BE4098, &type metadata for PerformActionRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256126198);
  }
  return result;
}

unint64_t sub_233BD34EC()
{
  unint64_t result;

  result = qword_2561261A0;
  if (!qword_2561261A0)
  {
    result = MEMORY[0x23493E300](&unk_233BE40C0, &type metadata for PerformActionRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561261A0);
  }
  return result;
}

uint64_t sub_233BD3530(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000014 && a2 == 0x8000000233BE64C0 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x63694C77656E6572 && a2 == 0xED00007365736E65)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t OAuthAuthorizationContext.logKey.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OAuthAuthorizationContext.requestURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for OAuthAuthorizationContext() + 20);
  v4 = sub_233BD851C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for OAuthAuthorizationContext()
{
  uint64_t result;

  result = qword_256126218;
  if (!qword_256126218)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t OAuthAuthorizationContext.init(logKey:requestURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  char *v5;
  uint64_t v6;

  *a4 = a1;
  a4[1] = a2;
  v5 = (char *)a4 + *(int *)(type metadata accessor for OAuthAuthorizationContext() + 20);
  v6 = sub_233BD851C();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a3, v6);
}

uint64_t sub_233BD375C()
{
  _BYTE *v0;

  if (*v0)
    return 0x5574736575716572;
  else
    return 0x79654B676F6CLL;
}

uint64_t sub_233BD3798@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233BD3FA4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233BD37BC()
{
  sub_233BD3958();
  return sub_233BD8D8C();
}

uint64_t sub_233BD37E4()
{
  sub_233BD3958();
  return sub_233BD8D98();
}

uint64_t OAuthAuthorizationContext.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561261A8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BD3958();
  sub_233BD8D80();
  v9[15] = 0;
  sub_233BD8C18();
  if (!v1)
  {
    type metadata accessor for OAuthAuthorizationContext();
    v9[14] = 1;
    sub_233BD851C();
    sub_233B6F860(&qword_256123860, MEMORY[0x24BDCDAE0]);
    sub_233BD8C30();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
}

unint64_t sub_233BD3958()
{
  unint64_t result;

  result = qword_2561261B0;
  if (!qword_2561261B0)
  {
    result = MEMORY[0x23493E300](&unk_233BE476C, &type metadata for OAuthAuthorizationContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2561261B0);
  }
  return result;
}

uint64_t OAuthAuthorizationContext.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;

  v22 = a2;
  v24 = sub_233BD851C();
  v21 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24, v4);
  v23 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2561261B8);
  v6 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25, v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for OAuthAuthorizationContext();
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (uint64_t *)((char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BD3958();
  sub_233BD8D68();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v20 = a1;
  v14 = v13;
  v16 = v23;
  v15 = v24;
  v27 = 0;
  v17 = v25;
  *v14 = sub_233BD8B88();
  v14[1] = v18;
  v26 = 1;
  sub_233B6F860(&qword_256123870, MEMORY[0x24BDCDB10]);
  sub_233BD8BA0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v17);
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))((char *)v14 + *(int *)(v10 + 20), v16, v15);
  sub_233BD3BDC((uint64_t)v14, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return sub_233BD3C20((uint64_t)v14);
}

uint64_t sub_233BD3BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for OAuthAuthorizationContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_233BD3C20(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for OAuthAuthorizationContext();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_233BD3C5C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return OAuthAuthorizationContext.init(from:)(a1, a2);
}

uint64_t sub_233BD3C70(_QWORD *a1)
{
  return OAuthAuthorizationContext.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for OAuthAuthorizationContext()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233BD3C90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_233BD851C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for OAuthAuthorizationContext()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_233BD3D18(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_233BD851C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_233BD3D8C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_233BD851C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for OAuthAuthorizationContext.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_233BD3E4C + 4 * byte_233BE4605[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_233BD3E80 + 4 * byte_233BE4600[v4]))();
}

uint64_t sub_233BD3E80(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BD3E88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233BD3E90);
  return result;
}

uint64_t sub_233BD3E9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233BD3EA4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_233BD3EA8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BD3EB0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OAuthAuthorizationContext.CodingKeys()
{
  return &type metadata for OAuthAuthorizationContext.CodingKeys;
}

unint64_t sub_233BD3ED0()
{
  unint64_t result;

  result = qword_256126250;
  if (!qword_256126250)
  {
    result = MEMORY[0x23493E300](&unk_233BE4744, &type metadata for OAuthAuthorizationContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256126250);
  }
  return result;
}

unint64_t sub_233BD3F18()
{
  unint64_t result;

  result = qword_256126258;
  if (!qword_256126258)
  {
    result = MEMORY[0x23493E300](&unk_233BE46B4, &type metadata for OAuthAuthorizationContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256126258);
  }
  return result;
}

unint64_t sub_233BD3F60()
{
  unint64_t result;

  result = qword_256126260;
  if (!qword_256126260)
  {
    result = MEMORY[0x23493E300](&unk_233BE46DC, &type metadata for OAuthAuthorizationContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256126260);
  }
  return result;
}

uint64_t sub_233BD3FA4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x79654B676F6CLL && a2 == 0xE600000000000000;
  if (v2 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5574736575716572 && a2 == 0xEA00000000004C52)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_233BD4098()
{
  uint64_t v0;
  uint64_t result;

  sub_233BD866C();
  v0 = sub_233BD8660();
  type metadata accessor for ServiceConnection();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v0;
  qword_254252F00 = result;
  return result;
}

uint64_t sub_233BD40E0()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ServiceConnection()
{
  return objc_opt_self();
}

uint64_t static LaunchAngelConnectionUtilities.handleLaunchAngelRequest(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[15] = a1;
  v2[16] = a2;
  v3 = sub_233BD8780();
  v2[17] = v3;
  v2[18] = *(_QWORD *)(v3 - 8);
  v2[19] = swift_task_alloc();
  v2[20] = type metadata accessor for LaunchAngelXPCRequest(0);
  v2[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_233BD41A8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  _BYTE *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;

  v1 = MKBGetDeviceLockState();
  if (v1 != 3 && v1)
  {
    sub_233BD47B8();
    swift_allocError();
    *v14 = 1;
LABEL_12:
    swift_willThrow();
    goto LABEL_19;
  }
  v2 = sub_233BD5590();
  *(_QWORD *)(v0 + 176) = v2;
  if (!v2)
  {
LABEL_9:
    sub_233BD8738();
    v15 = sub_233BD8768();
    v16 = sub_233BD896C();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_233B6C000, v15, v16, "Unexpected connection type", v17, 2u);
      MEMORY[0x23493E3B4](v17, -1, -1);
    }
    v19 = *(_QWORD *)(v0 + 144);
    v18 = *(_QWORD *)(v0 + 152);
    v20 = *(_QWORD *)(v0 + 136);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    sub_233BD47B8();
    swift_allocError();
    *v21 = 0;
    goto LABEL_12;
  }
  v3 = (void *)v2;
  *(_QWORD *)(v0 + 80) = &unk_25613F008;
  v4 = swift_dynamicCastObjCProtocolConditional();
  if (!v4)
  {

    goto LABEL_9;
  }
  v5 = (void *)v4;
  v6 = v3;
  v7 = (void *)sub_233BD87EC();
  v8 = (void *)sub_233BD87EC();
  v9 = objc_msgSend((id)objc_opt_self(), sel_attributeWithDomain_name_, v7, v8);
  *(_QWORD *)(v0 + 184) = v9;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2561262D8);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_233BE47F0;
  *(_QWORD *)(v10 + 32) = v9;
  sub_233BD8864();
  sub_233BD5714();
  v11 = v9;
  v12 = (void *)sub_233BD8840();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v5, sel_remoteTargetWithLaunchingAssertionAttributes_, v12);

  if (v13)
  {
    sub_233BD89E4();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
  }
  sub_233BD5750(v0 + 16, v0 + 48);
  if (*(_QWORD *)(v0 + 72))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2561262E8);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v23 = *(_QWORD *)(v0 + 160);
      v22 = *(_QWORD *)(v0 + 168);
      v24 = *(_QWORD *)(v0 + 128);
      v25 = *(_QWORD *)(v0 + 88);
      *(_QWORD *)(v0 + 192) = v25;
      sub_233BD5798(v24, v22);
      *(_QWORD *)(v0 + 96) = v22;
      *(_QWORD *)(v0 + 104) = v23;
      *(_QWORD *)(v0 + 112) = sub_233B74300(&qword_2561262F0, type metadata accessor for LaunchAngelXPCRequest, (uint64_t)&protocol conformance descriptor for LaunchAngelXPCRequest);
      v26 = sub_233BD8648();
      *(_QWORD *)(v0 + 200) = v26;
      *(_QWORD *)(v0 + 208) = v27;
      v29 = v26;
      v30 = v27;
      sub_233B8C06C(*(_QWORD *)(v0 + 168));
      v31 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 216) = v31;
      v31[2] = v25;
      v31[3] = v29;
      v31[4] = v30;
      v32 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 224) = v32;
      *v32 = v0;
      v32[1] = sub_233BD4644;
      return sub_233BD8C90();
    }
  }
  else
  {
    sub_233B9A6A4(v0 + 48);
  }
  sub_233BD47B8();
  swift_allocError();
  *v28 = 0;
  swift_willThrow();

  objc_msgSend(v6, sel_invalidate);
LABEL_19:
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233BD4644()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 232) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_233BD46B0()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 184);
  v2 = *(void **)(v0 + 176);
  sub_233B71B8C(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208));
  swift_unknownObjectRelease();

  objc_msgSend(v2, sel_invalidate);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233BD4734()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 176);
  v2 = *(void **)(v0 + 184);
  sub_233B71B8C(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208));
  swift_unknownObjectRelease();

  swift_task_dealloc();
  objc_msgSend(v1, sel_invalidate);

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_233BD47B8()
{
  unint64_t result;

  result = qword_256126270;
  if (!qword_256126270)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for LaunchAngelConnectionUtilities.Error, &type metadata for LaunchAngelConnectionUtilities.Error);
    atomic_store(result, (unint64_t *)&qword_256126270);
  }
  return result;
}

BOOL static LaunchAngelConnectionUtilities.Error.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t LaunchAngelConnectionUtilities.Error.hash(into:)()
{
  return sub_233BD8D08();
}

uint64_t LaunchAngelConnectionUtilities.Error.hashValue.getter()
{
  sub_233BD8CFC();
  sub_233BD8D08();
  return sub_233BD8D38();
}

void sub_233BD4880(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256126300);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4, v7);
  v8 = (void *)sub_233BD8534();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_233BD5970;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_233BD5258;
  aBlock[3] = &block_descriptor_15;
  v11 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a2, sel_handleXPCRequest_reply_, v8, v11);
  _Block_release(v11);

}

uint64_t sub_233BD49D0(uint64_t a1, unint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  id v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  id v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t result;
  uint8_t *v40;
  char *v41;
  int v42;
  char v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t *v65;
  char *v66;
  uint64_t v67;

  v55 = a4;
  v67 = *MEMORY[0x24BDAC8D0];
  v7 = sub_233BD860C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_233BD8780();
  v53 = *(_QWORD *)(v54 - 8);
  v13 = MEMORY[0x24BDAC7A8](v54, v12);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13, v16);
  v18 = (char *)&v48 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256126308);
  v21 = MEMORY[0x24BDAC7A8](v19, v20);
  v23 = (char *)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21, v24);
  if (a3)
  {
    v27 = a3;
    sub_233BD8738();
    v28 = v27;
    v29 = sub_233BD8768();
    v30 = sub_233BD896C();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      v52 = swift_slowAlloc();
      v57 = v52;
      *(_DWORD *)v31 = 136315138;
      v51 = v31 + 4;
      v32 = v28;
      v33 = objc_msgSend(v32, sel_description);
      v34 = sub_233BD8804();
      v36 = v35;

      v56 = sub_233B87524(v34, v36, &v57);
      sub_233BD89CC();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_233B6C000, v29, v30, "Error in reply: %s", v31, 0xCu);
      v37 = v52;
      swift_arrayDestroy();
      MEMORY[0x23493E3B4](v37, -1, -1);
      MEMORY[0x23493E3B4](v31, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v53 + 8))(v18, v54);
    v57 = (uint64_t)v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256126300);
    return sub_233BD8894();
  }
  else
  {
    v51 = v26;
    v49 = v11;
    v50 = v8;
    v52 = (uint64_t)v15;
    v63 = a1;
    v64 = a2;
    v65 = &v63;
    v66 = (char *)&v48 - v25;
    v38 = (char *)&v48 - v25;
    sub_233B71CAC(a1, a2);
    v61 = v19;
    v62 = MEMORY[0x24BDCDDE8];
    v60 = sub_233B71CF0();
    v59 = sub_233BD59E0();
    sub_233BD863C();
    sub_233B71B8C(v63, v64);
    v40 = v51;
    v41 = v38;
    (*((void (**)(char *, char *, uint64_t))v51 + 2))(v23, v38, v19);
    v42 = (*((uint64_t (**)(char *, uint64_t))v40 + 11))(v23, v19);
    if (v42 == *MEMORY[0x24BDDAD20])
    {
      (*((void (**)(char *, uint64_t))v40 + 12))(v23, v19);
      v43 = v23[8];
      v57 = *(_QWORD *)v23;
      v58 = v43;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256126300);
      sub_233BD88A0();
    }
    else
    {
      if (v42 != *MEMORY[0x24BDDAD18])
      {
        result = sub_233BD8AEC();
        __break(1u);
        return result;
      }
      v40 = v51;
      (*((void (**)(char *, uint64_t))v51 + 12))(v23, v19);
      v44 = v50;
      v45 = v49;
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v49, v23, v7);
      sub_233B74300(&qword_256123AF8, (uint64_t (*)(uint64_t))MEMORY[0x24BDDAD00], MEMORY[0x24BDDAD10]);
      v46 = swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v44 + 16))(v47, v45, v7);
      v57 = v46;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256126300);
      sub_233BD8894();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v7);
    }
    return (*((uint64_t (**)(char *, uint64_t))v40 + 1))(v41, v19);
  }
}

uint64_t sub_233BD5258(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(uint64_t, unint64_t, void *);
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  id v10;

  v5 = *(void (**)(uint64_t, unint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a2;
  v7 = sub_233BD8540();
  v9 = v8;

  v10 = a3;
  v5(v7, v9, a3);

  sub_233B71B8C(v7, v9);
  return swift_release();
}

void sub_233BD52E8(void *a1)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, void *);
  void *v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;

  v2 = objc_msgSend((id)objc_opt_self(), sel_userInteractive);
  objc_msgSend(a1, sel_setServiceQuality_, v2);

  v3 = (void *)sub_233BD87EC();
  v4 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithIdentifier_, v3);

  v5 = objc_msgSend((id)objc_opt_self(), sel_protocolForProtocol_, &unk_25613EA20);
  objc_msgSend(v4, sel_setServer_, v5);

  objc_msgSend(a1, sel_setInterface_, v4);
  v13 = sub_233BD54B4;
  v14 = 0;
  v6 = MEMORY[0x24BDAC760];
  v9 = MEMORY[0x24BDAC760];
  v10 = 1107296256;
  v11 = sub_233B7BCE4;
  v12 = &block_descriptor_8_0;
  v7 = _Block_copy(&v9);
  objc_msgSend(a1, sel_setInterruptionHandler_, v7);
  _Block_release(v7);
  v13 = sub_233BD54C8;
  v14 = 0;
  v9 = v6;
  v10 = 1107296256;
  v11 = sub_233B7BCE4;
  v12 = &block_descriptor_11_1;
  v8 = _Block_copy(&v9);
  objc_msgSend(a1, sel_setInvalidationHandler_, v8);
  _Block_release(v8);

}

uint64_t sub_233BD54B4(uint64_t a1)
{
  return sub_233BD54DC(a1, 0x8000000233BE66E0);
}

uint64_t sub_233BD54C8(uint64_t a1)
{
  return sub_233BD54DC(a1, 0x8000000233BE66C0);
}

uint64_t sub_233BD54DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256126318);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_233BDBA40;
  *(_QWORD *)(v3 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v3 + 32) = 0xD000000000000016;
  *(_QWORD *)(v3 + 40) = a2;
  sub_233BD8CE4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_233BD5554(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  v3(a2);
  return swift_unknownObjectRelease();
}

uint64_t sub_233BD5590()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  uint64_t result;
  _QWORD v6[6];

  v0 = (void *)sub_233BD87EC();
  v1 = (void *)sub_233BD87EC();
  v2 = objc_msgSend((id)objc_opt_self(), sel_endpointForSystemMachName_service_instance_, v0, v1, 0);

  if (!v2)
    return 0;
  v3 = objc_msgSend((id)objc_opt_self(), sel_connectionWithEndpoint_, v2);
  if (!v3)
  {
LABEL_5:

    return (uint64_t)v3;
  }
  v6[4] = sub_233BD5550;
  v6[5] = 0;
  v6[0] = MEMORY[0x24BDAC760];
  v6[1] = 1107296256;
  v6[2] = sub_233BD5554;
  v6[3] = &block_descriptor_5;
  v4 = _Block_copy(v6);
  swift_release();
  objc_msgSend(v3, sel_configureConnection_, v4);
  _Block_release(v4);
  result = swift_isEscapingClosureAtFileLocation();
  if ((result & 1) == 0)
  {
    objc_msgSend(v3, sel_activate);
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

unint64_t sub_233BD5714()
{
  unint64_t result;

  result = qword_2561262E0;
  if (!qword_2561262E0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2561262E0);
  }
  return result;
}

uint64_t sub_233BD5750(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256124920);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_233BD5798(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LaunchAngelXPCRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_233BD57DC(uint64_t a1)
{
  uint64_t v1;

  sub_233BD4880(a1, *(void **)(v1 + 16));
}

unint64_t sub_233BD57EC()
{
  unint64_t result;

  result = qword_2561262F8;
  if (!qword_2561262F8)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for LaunchAngelConnectionUtilities.Error, &type metadata for LaunchAngelConnectionUtilities.Error);
    atomic_store(result, (unint64_t *)&qword_2561262F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for LaunchAngelConnectionUtilities()
{
  return &type metadata for LaunchAngelConnectionUtilities;
}

uint64_t storeEnumTagSinglePayload for LaunchAngelConnectionUtilities.Error(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_233BD588C + 4 * byte_233BE4805[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_233BD58C0 + 4 * byte_233BE4800[v4]))();
}

uint64_t sub_233BD58C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BD58C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233BD58D0);
  return result;
}

uint64_t sub_233BD58DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233BD58E4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_233BD58E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BD58F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LaunchAngelConnectionUtilities.Error()
{
  return &type metadata for LaunchAngelConnectionUtilities.Error;
}

uint64_t sub_233BD590C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256126300);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_233BD5970(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256126300) - 8) + 80);
  return sub_233BD49D0(a1, a2, a3, v3 + ((v7 + 16) & ~v7));
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

unint64_t sub_233BD59E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256126310;
  if (!qword_256126310)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256126308);
    result = MEMORY[0x23493E300](MEMORY[0x24BDDAD30], v1);
    atomic_store(result, (unint64_t *)&qword_256126310);
  }
  return result;
}

const char *FeatureFlag.domain.getter()
{
  _BYTE *v0;

  if (*v0)
    return "InstallCoordination";
  else
    return "MarketplaceKit";
}

const char *FeatureFlag.feature.getter()
{
  _BYTE *v0;

  if (*v0)
    return "IX_BACKGROUND_UPDATE_SCHEDULING";
  else
    return "WebDistribution";
}

BOOL static FeatureFlag.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FeatureFlag.hash(into:)()
{
  return sub_233BD8D08();
}

uint64_t FeatureFlag.hashValue.getter()
{
  sub_233BD8CFC();
  sub_233BD8D08();
  return sub_233BD8D38();
}

const char *sub_233BD5B28()
{
  _BYTE *v0;

  if (*v0)
    return "InstallCoordination";
  else
    return "MarketplaceKit";
}

const char *sub_233BD5B58()
{
  _BYTE *v0;

  if (*v0)
    return "IX_BACKGROUND_UPDATE_SCHEDULING";
  else
    return "WebDistribution";
}

uint64_t isFeatureEnabled(_:)(char *a1)
{
  char v1;
  char v2;
  _BYTE v4[24];
  ValueMetadata *v5;
  unint64_t v6;

  v1 = *a1;
  v5 = &type metadata for FeatureFlag;
  v6 = sub_233BD5BDC();
  v4[0] = v1;
  v2 = sub_233BD85B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  return v2 & 1;
}

unint64_t sub_233BD5BDC()
{
  unint64_t result;

  result = qword_256126320;
  if (!qword_256126320)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for FeatureFlag, &type metadata for FeatureFlag);
    atomic_store(result, (unint64_t *)&qword_256126320);
  }
  return result;
}

unint64_t sub_233BD5C24()
{
  unint64_t result;

  result = qword_256126328;
  if (!qword_256126328)
  {
    result = MEMORY[0x23493E300](&protocol conformance descriptor for FeatureFlag, &type metadata for FeatureFlag);
    atomic_store(result, (unint64_t *)&qword_256126328);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FeatureFlag(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_233BD5CB4 + 4 * byte_233BE4905[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_233BD5CE8 + 4 * byte_233BE4900[v4]))();
}

uint64_t sub_233BD5CE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BD5CF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233BD5CF8);
  return result;
}

uint64_t sub_233BD5D04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233BD5D0CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_233BD5D10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BD5D18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeatureFlag()
{
  return &type metadata for FeatureFlag;
}

uint64_t AppDistributorResult.init(distributorID:requestingBundleID:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t sub_233BD5D40()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000012;
  else
    return 0x7562697274736964;
}

uint64_t sub_233BD5D8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_233BD6A70(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_233BD5DB0()
{
  sub_233BD5F34();
  return sub_233BD8D8C();
}

uint64_t sub_233BD5DD8()
{
  sub_233BD5F34();
  return sub_233BD8D98();
}

uint64_t AppDistributorResult.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[3];
  uint64_t v11;
  char v12;
  char v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256126330);
  v11 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 16);
  v10[1] = *(_QWORD *)(v1 + 24);
  v10[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BD5F34();
  sub_233BD8D80();
  v13 = 0;
  sub_233BD8C18();
  if (!v2)
  {
    v12 = 1;
    sub_233BD8C18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v7, v4);
}

unint64_t sub_233BD5F34()
{
  unint64_t result;

  result = qword_256126338;
  if (!qword_256126338)
  {
    result = MEMORY[0x23493E300](&unk_233BE4B2C, &type metadata for AppDistributorResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256126338);
  }
  return result;
}

uint64_t AppDistributorResult.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v19;
  char v20;
  char v21;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256126340);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_233BD5F34();
  sub_233BD8D68();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v21 = 0;
  v10 = sub_233BD8B88();
  v12 = v11;
  v20 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_233BD8B88();
  v15 = v14;
  v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v17 = v13;
  v16(v9, v5);
  *a2 = v10;
  a2[1] = v12;
  a2[2] = v17;
  a2[3] = v15;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_233BD6118@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return AppDistributorResult.init(from:)(a1, a2);
}

uint64_t sub_233BD612C(_QWORD *a1)
{
  return AppDistributorResult.encode(to:)(a1);
}

uint64_t static AppDistributor.current.getter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = a1;
  return swift_task_switch();
}

uint64_t sub_233BD6158()
{
  _QWORD *v0;
  id v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char *v11;

  v1 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v2 = objc_msgSend(v1, sel_environment);

  v3 = sub_233BD87D4();
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_233BBFEEC(0xD00000000000001BLL, 0x8000000233BE6750), (v5 & 1) != 0))
  {
    v6 = (uint64_t *)(*(_QWORD *)(v3 + 56) + 16 * v4);
    v8 = *v6;
    v7 = v6[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = 0;
    v7 = 0;
  }
  swift_bridgeObjectRelease();
  if (qword_25424FEB8 != -1)
    swift_once();
  v0[6] = v8;
  v0[8] = v0 + 6;
  v0[7] = v7;
  v11 = (char *)&dword_256123C58 + dword_256123C58;
  v9 = (_QWORD *)swift_task_alloc();
  v0[10] = v9;
  *v9 = v0;
  v9[1] = sub_233BD62D0;
  return ((uint64_t (*)(_QWORD *, _QWORD *, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v11)(v0 + 2, v0 + 8, sub_233BD63B0, 0);
}

uint64_t sub_233BD62D0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_233BD633C()
{
  uint64_t v0;
  uint64_t *v1;
  __int128 v2;
  _OWORD v4[2];

  v1 = *(uint64_t **)(v0 + 72);
  v2 = *(_OWORD *)(v0 + 32);
  v4[0] = *(_OWORD *)(v0 + 16);
  v4[1] = v2;
  AppDistributor.init(result:)((uint64_t *)v4, v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_233BD637C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_233BD63B0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_233B90C88(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_7_0, (SEL *)&selRef_distributorIDForCaller_reply_);
}

uint64_t *AppDistributor.init(result:)@<X0>(uint64_t *result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = result[1];
  if (v3)
  {
    v4 = *result;
    v6 = result[2];
    v5 = result[3];
    if (*result == 0xD000000000000012)
    {
      v7 = 0x8000000233BE4BA0;
      if (v3 == 0x8000000233BE4BA0)
      {
        v8 = 0xD000000000000012;
LABEL_8:
        result = (uint64_t *)sub_233BD66B8(v8, v7);
        v4 = 0;
        v3 = 0;
        goto LABEL_9;
      }
    }
    if ((sub_233BD8C6C() & 1) != 0)
    {
      v8 = v4;
      v7 = v3;
      goto LABEL_8;
    }
    if (v4 == 0xD000000000000014)
    {
      v9 = 0x8000000233BE6770;
      if (v3 == 0x8000000233BE6770)
      {
        v10 = 0xD000000000000014;
LABEL_15:
        result = (uint64_t *)sub_233BD66B8(v10, v9);
        v4 = 0;
        v3 = 1;
        goto LABEL_9;
      }
    }
    if ((sub_233BD8C6C() & 1) != 0)
    {
      v10 = v4;
      v9 = v3;
      goto LABEL_15;
    }
    if (v4 == v6 && v3 == v5)
    {
      v11 = v4;
      v12 = v3;
    }
    else
    {
      if ((sub_233BD8C6C() & 1) == 0)
      {
        swift_bridgeObjectRetain();
        result = (uint64_t *)sub_233BD66B8(v4, v3);
        goto LABEL_9;
      }
      v11 = v4;
      v12 = v3;
    }
    result = (uint64_t *)sub_233BD66B8(v11, v12);
    v4 = 0;
    v3 = 2;
  }
  else
  {
    v4 = 0;
    v3 = 3;
  }
LABEL_9:
  *a2 = v4;
  a2[1] = v3;
  return result;
}

uint64_t static AppDistributor.setDistributorIDOverridableForStoreSignedApps(_:)(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 41) = a1;
  return swift_task_switch();
}

uint64_t sub_233BD6584()
{
  uint64_t v0;
  _QWORD *v1;
  char *v3;

  if (qword_25424FEB8 != -1)
    swift_once();
  *(_BYTE *)(v0 + 40) = *(_BYTE *)(v0 + 41);
  *(_QWORD *)(v0 + 16) = v0 + 40;
  v3 = (char *)&dword_256123C50 + dword_256123C50;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_233BD6634;
  return ((uint64_t (*)(uint64_t, void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t), _QWORD))v3)(v0 + 16, sub_233BD66A4, 0);
}

uint64_t sub_233BD6634()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 32) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_233BD6698()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_233BD66A4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_233B90C88(a1, a2, a3, a4, a5, (uint64_t)&block_descriptor_16, (SEL *)&selRef_setDistributorIDOverridableForStoreSignedApps_reply_);
}

uint64_t sub_233BD66B8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t destroy for AppDistributorResult()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for AppDistributorResult(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for AppDistributorResult(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for AppDistributorResult(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AppDistributorResult()
{
  return &type metadata for AppDistributorResult;
}

uint64_t getEnumTagSinglePayload for AppDistributor(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFC && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483644);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 3;
  if (v4 >= 5)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AppDistributor(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppDistributor()
{
  return &type metadata for AppDistributor;
}

uint64_t storeEnumTagSinglePayload for AppDistributorResult.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_233BD6918 + 4 * byte_233BE49D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_233BD694C + 4 * byte_233BE49D0[v4]))();
}

uint64_t sub_233BD694C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BD6954(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x233BD695CLL);
  return result;
}

uint64_t sub_233BD6968(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x233BD6970);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_233BD6974(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_233BD697C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppDistributorResult.CodingKeys()
{
  return &type metadata for AppDistributorResult.CodingKeys;
}

unint64_t sub_233BD699C()
{
  unint64_t result;

  result = qword_256126358;
  if (!qword_256126358)
  {
    result = MEMORY[0x23493E300](&unk_233BE4B04, &type metadata for AppDistributorResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256126358);
  }
  return result;
}

unint64_t sub_233BD69E4()
{
  unint64_t result;

  result = qword_256126360;
  if (!qword_256126360)
  {
    result = MEMORY[0x23493E300](&unk_233BE4A74, &type metadata for AppDistributorResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256126360);
  }
  return result;
}

unint64_t sub_233BD6A2C()
{
  unint64_t result;

  result = qword_256126368;
  if (!qword_256126368)
  {
    result = MEMORY[0x23493E300](&unk_233BE4A9C, &type metadata for AppDistributorResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256126368);
  }
  return result;
}

uint64_t sub_233BD6A70(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7562697274736964 && a2 == 0xED00004449726F74;
  if (v2 || (sub_233BD8C6C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000233BE6790)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_233BD8C6C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t *sub_233BD6BA0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *__dst;
  uint64_t v38;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v31 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_233BD851C();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v9((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    v10 = a3[6];
    v11 = a3[7];
    v12 = (uint64_t *)((char *)a1 + v10);
    v13 = (uint64_t *)((char *)a2 + v10);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = (uint64_t *)((char *)a1 + v11);
    v16 = (uint64_t *)((char *)a2 + v11);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = a3[8];
    v19 = a3[9];
    v20 = (uint64_t *)((char *)a1 + v18);
    v21 = (uint64_t *)((char *)a2 + v18);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = (uint64_t *)((char *)a1 + v19);
    v24 = (uint64_t *)((char *)a2 + v19);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = a3[10];
    __dst = (char *)a1 + v26;
    v38 = v8;
    v27 = (char *)a2 + v26;
    v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v28(v27, 1, v7))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
      memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      v30 = v38;
    }
    else
    {
      v9((uint64_t *)__dst, (uint64_t *)v27, v7);
      v30 = v38;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(__dst, 0, 1, v7);
    }
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    if (v28(v34, 1, v7))
    {
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v33, (uint64_t *)v34, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v33, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_233BD6DA4(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t result;
  void (*v10)(uint64_t, uint64_t);

  v4 = sub_233BD851C();
  v5 = *(_QWORD *)(v4 - 8);
  v10 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v10(a1, v4);
  v10(a1 + a2[5], v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + a2[10];
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v7(v6, 1, v4))
    v10(v6, v4);
  v8 = a1 + a2[11];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v8, 1, v4);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v8, v4);
  return result;
}

char *sub_233BD6EC8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  unsigned int (*v27)(const void *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *__dst;
  uint64_t v36;

  v6 = sub_233BD851C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v8(&a1[a3[5]], &a2[a3[5]], v6);
  v9 = a3[6];
  v10 = a3[7];
  v11 = &a1[v9];
  v12 = &a2[v9];
  v13 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = v13;
  v14 = &a1[v10];
  v15 = &a2[v10];
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  v17 = a3[8];
  v18 = a3[9];
  v19 = &a1[v17];
  v20 = &a2[v17];
  v21 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = v21;
  v22 = &a1[v18];
  v23 = &a2[v18];
  v24 = *((_QWORD *)v23 + 1);
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *((_QWORD *)v22 + 1) = v24;
  v25 = a3[10];
  __dst = &a1[v25];
  v36 = v7;
  v26 = &a2[v25];
  v27 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v27(v26, 1, v6))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
    memcpy(__dst, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    v29 = v36;
  }
  else
  {
    v8(__dst, v26, v6);
    v29 = v36;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(__dst, 0, 1, v6);
  }
  v30 = a3[11];
  v31 = &a1[v30];
  v32 = &a2[v30];
  if (v27(v32, 1, v6))
  {
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    v8(v31, v32, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v31, 0, 1, v6);
  }
  return a1;
}

char *sub_233BD70A0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t (*v24)(const void *, uint64_t, uint64_t);
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  int v31;
  int v32;
  uint64_t v33;

  v6 = sub_233BD851C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v8(&a1[a3[5]], &a2[a3[5]], v6);
  v9 = a3[6];
  v10 = &a1[v9];
  v11 = &a2[v9];
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = a3[7];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[8];
  v16 = &a1[v15];
  v17 = &a2[v15];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[9];
  v19 = &a1[v18];
  v20 = &a2[v18];
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = a3[10];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v25 = v24(&a1[v21], 1, v6);
  v26 = v24(v23, 1, v6);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v22, v23, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v22, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v22, v6);
LABEL_6:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  v8(v22, v23, v6);
LABEL_7:
  v28 = a3[11];
  v29 = &a1[v28];
  v30 = &a2[v28];
  v31 = v24(&a1[v28], 1, v6);
  v32 = v24(v30, 1, v6);
  if (!v31)
  {
    if (!v32)
    {
      v8(v29, v30, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v29, v6);
    goto LABEL_12;
  }
  if (v32)
  {
LABEL_12:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v29, v30, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v29, 0, 1, v6);
  return a1;
}

char *sub_233BD7334(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  unsigned int (*v14)(const void *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = sub_233BD851C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v8(&a1[a3[5]], &a2[a3[5]], v6);
  v9 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  v10 = a3[9];
  *(_OWORD *)&a1[a3[8]] = *(_OWORD *)&a2[a3[8]];
  *(_OWORD *)&a1[v10] = *(_OWORD *)&a2[v10];
  v11 = a3[10];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  if (v14(&a2[v11], 1, v6))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v8(v12, v13, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
  }
  v16 = a3[11];
  v17 = &a1[v16];
  v18 = &a2[v16];
  if (v14(v18, 1, v6))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v8(v17, v18, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v17, 0, 1, v6);
  }
  return a1;
}

char *sub_233BD74B8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t (*v32)(const void *, uint64_t, uint64_t);
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  int v39;
  int v40;
  uint64_t v41;

  v6 = sub_233BD851C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v8(&a1[a3[5]], &a2[a3[5]], v6);
  v9 = a3[6];
  v10 = &a1[v9];
  v11 = (uint64_t *)&a2[v9];
  v13 = *v11;
  v12 = v11[1];
  *(_QWORD *)v10 = v13;
  *((_QWORD *)v10 + 1) = v12;
  swift_bridgeObjectRelease();
  v14 = a3[7];
  v15 = &a1[v14];
  v16 = (uint64_t *)&a2[v14];
  v18 = *v16;
  v17 = v16[1];
  *(_QWORD *)v15 = v18;
  *((_QWORD *)v15 + 1) = v17;
  swift_bridgeObjectRelease();
  v19 = a3[8];
  v20 = &a1[v19];
  v21 = (uint64_t *)&a2[v19];
  v23 = *v21;
  v22 = v21[1];
  *(_QWORD *)v20 = v23;
  *((_QWORD *)v20 + 1) = v22;
  swift_bridgeObjectRelease();
  v24 = a3[9];
  v25 = &a1[v24];
  v26 = (uint64_t *)&a2[v24];
  v28 = *v26;
  v27 = v26[1];
  *(_QWORD *)v25 = v28;
  *((_QWORD *)v25 + 1) = v27;
  swift_bridgeObjectRelease();
  v29 = a3[10];
  v30 = &a1[v29];
  v31 = &a2[v29];
  v32 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v33 = v32(&a1[v29], 1, v6);
  v34 = v32(v31, 1, v6);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v30, v31, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v30, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v30, v6);
LABEL_6:
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_7;
  }
  v8(v30, v31, v6);
LABEL_7:
  v36 = a3[11];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = v32(&a1[v36], 1, v6);
  v40 = v32(v38, 1, v6);
  if (!v39)
  {
    if (!v40)
    {
      v8(v37, v38, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v37, v6);
    goto LABEL_12;
  }
  if (v40)
  {
LABEL_12:
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v37, v38, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v37, 0, 1, v6);
  return a1;
}

uint64_t sub_233BD770C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_233BD7718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_233BD851C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
    v10 = a1 + *(int *)(a3 + 40);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_233BD77C8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_233BD77D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_233BD851C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
    v12 = a1 + *(int *)(a4 + 40);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for LinkMetadata()
{
  uint64_t result;

  result = qword_2561263C8;
  if (!qword_2561263C8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_233BD78BC()
{
  unint64_t v0;
  unint64_t v1;

  sub_233BD851C();
  if (v0 <= 0x3F)
  {
    sub_233B714B0();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_233BD7958@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(char *, uint64_t, uint64_t);
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t);
  uint64_t v67;
  int *v68;
  _QWORD *v69;
  _QWORD *v70;
  _QWORD *v71;
  _QWORD *v72;
  void (*v73)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t (*v89)(uint64_t, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(char *, uint64_t);
  uint64_t v115;
  uint64_t v116;
  void (*v117)(uint64_t, uint64_t);
  uint64_t v118;
  void (*v119)(char *, uint64_t);
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  char *v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  int *v136;
  uint64_t v137;

  v135 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256123848);
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  v129 = (char *)&v118 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v9);
  v128 = (char *)&v118 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256126418);
  v13 = MEMORY[0x24BDAC7A8](v11, v12);
  v130 = (char *)&v118 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13, v15);
  v123 = (uint64_t)&v118 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v125 = (uint64_t)&v118 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19, v21);
  v126 = (char *)&v118 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22, v24);
  v127 = (char *)&v118 - v26;
  v28 = MEMORY[0x24BDAC7A8](v25, v27);
  v124 = (uint64_t)&v118 - v29;
  v31 = MEMORY[0x24BDAC7A8](v28, v30);
  v131 = (uint64_t)&v118 - v32;
  MEMORY[0x24BDAC7A8](v31, v33);
  v35 = (char *)&v118 - v34;
  v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256126420);
  MEMORY[0x24BDAC7A8](v36, v37);
  v39 = (char *)&v118 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_233BD848C();
  v41 = *(_QWORD *)(v40 - 8);
  v43 = MEMORY[0x24BDAC7A8](v40, v42);
  v45 = (char *)&v118 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v43, v46);
  v48 = (char *)&v118 - v47;
  v49 = sub_233BD851C();
  v132 = *(_QWORD *)(v49 - 8);
  v50 = *(void (**)(uint64_t, uint64_t, uint64_t))(v132 + 16);
  v50(a3, a2, v49);
  v136 = (int *)type metadata accessor for LinkMetadata();
  v137 = a3;
  v51 = a3 + v136[5];
  v133 = v49;
  v50(v51, v135, v49);
  sub_233BD8468();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40) == 1)
  {
    sub_233B71DBC((uint64_t)v39, (uint64_t *)&unk_256126420);
LABEL_9:
    v63 = v135;
    v65 = v132;
    v64 = v133;
    v66 = *(void (**)(uint64_t, uint64_t))(v132 + 8);
    v66(a2, v133);
    v66(v63, v64);
    v68 = v136;
    v67 = v137;
    v69 = (_QWORD *)(v137 + v136[6]);
    *v69 = 0;
    v69[1] = 0xE000000000000000;
    v70 = (_QWORD *)(v67 + v68[7]);
    *v70 = 0;
    v70[1] = 0;
    v71 = (_QWORD *)(v67 + v68[8]);
    *v71 = 0;
    v71[1] = 0;
    v72 = (_QWORD *)(v67 + v68[9]);
    *v72 = 0;
    v72[1] = 0;
    v73 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 56);
    v73(v67 + v68[10], 1, 1, v64);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v73)(v67 + v68[11], 1, 1, v64);
  }
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v48, v39, v40);
  v134 = sub_233BD845C();
  if (!v134)
  {
    (*(void (**)(char *, uint64_t))(v41 + 8))(v48, v40);
    goto LABEL_9;
  }
  v52 = sub_233BD8474();
  v54 = v53;
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v45, v48, v40);
  if (!v54)
  {
    v52 = sub_233BD8480();
    v54 = v55;
  }
  v119 = *(void (**)(char *, uint64_t))(v41 + 8);
  v119(v45, v40);
  v56 = (uint64_t *)(v137 + v136[6]);
  *v56 = v52;
  v56[1] = v54;
  sub_233BD82CC(v134, 0x6E656B6F74, 0xE500000000000000, (uint64_t)v35);
  v57 = sub_233BD8450();
  v58 = *(_QWORD *)(v57 - 8);
  v59 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v58 + 48);
  v60 = v59(v35, 1, v57);
  v122 = v58;
  if (v60 == 1)
  {
    sub_233B71DBC((uint64_t)v35, &qword_256126418);
    v61 = 0;
    v62 = 0;
  }
  else
  {
    v61 = sub_233BD8444();
    v62 = v75;
    (*(void (**)(char *, uint64_t))(v58 + 8))(v35, v57);
  }
  v76 = (uint64_t *)(v137 + v136[7]);
  *v76 = v61;
  v76[1] = v62;
  v77 = v131;
  sub_233BD82CC(v134, 0xD000000000000018, 0x8000000233BE4E20, v131);
  v78 = v59((char *)v77, 1, v57);
  v120 = v48;
  v121 = v40;
  if (v78 == 1)
  {
    sub_233B71DBC(v77, &qword_256126418);
  }
  else
  {
    v79 = sub_233BD8444();
    v81 = v80;
    (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v77, v57);
    if (v81)
    {
LABEL_16:
      v83 = v122;
      goto LABEL_18;
    }
  }
  v82 = v124;
  sub_233BD82CC(v134, 0x44664F666F6F7270, 0xEF64616F6C6E776FLL, v124);
  if (v59((char *)v82, 1, v57) == 1)
  {
    sub_233B71DBC(v82, &qword_256126418);
    swift_bridgeObjectRelease();
    v79 = 0;
    v81 = 0;
    goto LABEL_16;
  }
  v79 = sub_233BD8444();
  v81 = v84;
  v83 = v122;
  (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v82, v57);
  swift_bridgeObjectRelease();
LABEL_18:
  v85 = (uint64_t)v126;
  v86 = (uint64_t)v127;
  v131 = a2;
  v87 = (uint64_t *)(v137 + v136[8]);
  *v87 = v79;
  v87[1] = v81;
  v88 = v134;
  sub_233BD82CC(v134, 0x746E756F636361, 0xE700000000000000, v86);
  v89 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v59;
  if (v59((char *)v86, 1, v57) == 1)
  {
    sub_233B71DBC(v86, &qword_256126418);
    v90 = 0;
    v91 = 0;
  }
  else
  {
    v90 = sub_233BD8444();
    v91 = v92;
    (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v86, v57);
  }
  v93 = (uint64_t *)(v137 + v136[9]);
  *v93 = v90;
  v93[1] = v91;
  sub_233BD82CC(v88, 0xD00000000000001ELL, 0x8000000233BE4E00, v85);
  v94 = v89(v85, 1, v57);
  v95 = v132;
  if (v94 == 1)
  {
    sub_233B71DBC(v85, &qword_256126418);
  }
  else
  {
    sub_233BD8444();
    v97 = v96;
    (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v85, v57);
    if (v97)
    {
LABEL_31:
      v103 = v95;
      goto LABEL_32;
    }
  }
  v98 = v125;
  sub_233BD82CC(v88, 7365729, 0xE300000000000000, v125);
  if (v89(v98, 1, v57) == 1)
  {
    sub_233B71DBC(v98, &qword_256126418);
  }
  else
  {
    v99 = v83;
    v100 = v98;
    sub_233BD8444();
    v102 = v101;
    (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v100, v57);
    if (v102)
    {
      v103 = v95;
      swift_bridgeObjectRelease();
      v83 = v122;
LABEL_32:
      swift_bridgeObjectRetain();
      v107 = v128;
      sub_233BD8510();
      v108 = (uint64_t)v107;
      swift_bridgeObjectRelease_n();
      goto LABEL_34;
    }
  }
  v104 = v123;
  sub_233BD82CC(v134, 7365733, 0xE300000000000000, v123);
  if (v89(v104, 1, v57) != 1)
  {
    sub_233BD8444();
    v106 = v105;
    v83 = v122;
    (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v104, v57);
    swift_bridgeObjectRelease_n();
    if (!v106)
      goto LABEL_33;
    goto LABEL_31;
  }
  sub_233B71DBC(v104, &qword_256126418);
  swift_bridgeObjectRelease_n();
  v83 = v122;
LABEL_33:
  v103 = v95;
  v108 = (uint64_t)v128;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v95 + 56))(v128, 1, 1, v133);
LABEL_34:
  v110 = (uint64_t)v130;
  v109 = v131;
  v111 = (uint64_t)v129;
  sub_233BAD948(v108, v137 + v136[10]);
  sub_233BD82CC(v134, 0x6572616853707061, 0xEB000000004C5255, v110);
  if (v89(v110, 1, v57) == 1)
  {
    sub_233B71DBC(v110, &qword_256126418);
    swift_bridgeObjectRelease();
LABEL_38:
    v116 = v133;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v103 + 56))(v111, 1, 1, v133);
    v114 = v119;
    v115 = v135;
    goto LABEL_39;
  }
  sub_233BD8444();
  v113 = v112;
  (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v110, v57);
  swift_bridgeObjectRelease();
  if (!v113)
    goto LABEL_38;
  swift_bridgeObjectRetain();
  sub_233BD8510();
  swift_bridgeObjectRelease();
  v114 = v119;
  v115 = v135;
  v116 = v133;
LABEL_39:
  v117 = *(void (**)(uint64_t, uint64_t))(v103 + 8);
  v117(v109, v116);
  v117(v115, v116);
  swift_bridgeObjectRelease();
  v114(v120, v121);
  return sub_233BAD948(v111, v137 + v136[11]);
}

uint64_t sub_233BD82CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v8 = sub_233BD8450();
    v9 = *(_QWORD *)(v8 - 8);
    v10 = *(_QWORD *)(v9 + 72);
    v11 = a1
        + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
        + v10 * (v5 - 1);
    v12 = -v10;
    while (sub_233BD8438() != a2 || v13 != a3)
    {
      v14 = sub_233BD8C6C();
      swift_bridgeObjectRelease();
      if ((v14 & 1) != 0)
        goto LABEL_9;
      v11 += v12;
      if (!--v5)
        goto LABEL_7;
    }
    swift_bridgeObjectRelease();
LABEL_9:
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(a4, v11, v8);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(a4, 0, 1, v8);
  }
  else
  {
LABEL_7:
    v15 = sub_233BD8450();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a4, 1, 1, v15);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_233BD8408()
{
  return MEMORY[0x24BDCB068]();
}

uint64_t sub_233BD8414()
{
  return MEMORY[0x24BDCB0C0]();
}

uint64_t sub_233BD8420()
{
  return MEMORY[0x24BDCB430]();
}

uint64_t sub_233BD842C()
{
  return MEMORY[0x24BDCB588]();
}

uint64_t sub_233BD8438()
{
  return MEMORY[0x24BDCB960]();
}

uint64_t sub_233BD8444()
{
  return MEMORY[0x24BDCB980]();
}

uint64_t sub_233BD8450()
{
  return MEMORY[0x24BDCB988]();
}

uint64_t sub_233BD845C()
{
  return MEMORY[0x24BDCBA58]();
}

uint64_t sub_233BD8468()
{
  return MEMORY[0x24BDCBAB0]();
}

uint64_t sub_233BD8474()
{
  return MEMORY[0x24BDCBAC8]();
}

uint64_t sub_233BD8480()
{
  return MEMORY[0x24BDCBAE0]();
}

uint64_t sub_233BD848C()
{
  return MEMORY[0x24BDCBB78]();
}

uint64_t sub_233BD8498()
{
  return MEMORY[0x24BDCBBB0]();
}

uint64_t sub_233BD84A4()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_233BD84B0()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_233BD84BC()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_233BD84C8()
{
  return MEMORY[0x24BDCBC10]();
}

uint64_t sub_233BD84D4()
{
  return MEMORY[0x24BDCCA20]();
}

uint64_t sub_233BD84E0()
{
  return MEMORY[0x24BDCCA40]();
}

uint64_t sub_233BD84EC()
{
  return MEMORY[0x24BDCCA48]();
}

uint64_t sub_233BD84F8()
{
  return MEMORY[0x24BDCD2F0]();
}

uint64_t sub_233BD8504()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_233BD8510()
{
  return MEMORY[0x24BDCDA68]();
}

uint64_t sub_233BD851C()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_233BD8528()
{
  return MEMORY[0x24BDCDC10]();
}

uint64_t sub_233BD8534()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_233BD8540()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_233BD854C()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_233BD8558()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_233BD8564()
{
  return MEMORY[0x24BEE5C38]();
}

uint64_t sub_233BD8570()
{
  return MEMORY[0x24BEE5C40]();
}

uint64_t sub_233BD857C()
{
  return MEMORY[0x24BEE5C48]();
}

uint64_t sub_233BD8588()
{
  return MEMORY[0x24BEE5C50]();
}

uint64_t sub_233BD8594()
{
  return MEMORY[0x24BEE5C58]();
}

uint64_t sub_233BD85A0()
{
  return MEMORY[0x24BEE5C60]();
}

uint64_t sub_233BD85AC()
{
  return MEMORY[0x24BDCF760]();
}

uint64_t sub_233BD85B8()
{
  return MEMORY[0x24BE30BE0]();
}

uint64_t sub_233BD85C4()
{
  return MEMORY[0x24BEE5118]();
}

uint64_t sub_233BD85D0()
{
  return MEMORY[0x24BEE5120]();
}

uint64_t sub_233BD85DC()
{
  return MEMORY[0x24BEE5130]();
}

uint64_t sub_233BD85E8()
{
  return MEMORY[0x24BDDABB0]();
}

uint64_t sub_233BD85F4()
{
  return MEMORY[0x24BDDABD0]();
}

uint64_t sub_233BD8600()
{
  return MEMORY[0x24BDDAC28]();
}

uint64_t sub_233BD860C()
{
  return MEMORY[0x24BDDAD00]();
}

uint64_t sub_233BD8618()
{
  return MEMORY[0x24BDDAD38]();
}

uint64_t sub_233BD8624()
{
  return MEMORY[0x24BDDAD40]();
}

uint64_t sub_233BD8630()
{
  return MEMORY[0x24BDDAD48]();
}

uint64_t sub_233BD863C()
{
  return MEMORY[0x24BDDAD58]();
}

uint64_t sub_233BD8648()
{
  return MEMORY[0x24BDDAD60]();
}

uint64_t sub_233BD8654()
{
  return MEMORY[0x24BDDAD68]();
}

uint64_t sub_233BD8660()
{
  return MEMORY[0x24BDDAD70]();
}

uint64_t sub_233BD866C()
{
  return MEMORY[0x24BDDAD78]();
}

uint64_t sub_233BD8678()
{
  return MEMORY[0x24BDDAD88]();
}

uint64_t sub_233BD8684()
{
  return MEMORY[0x24BDDAD90]();
}

uint64_t sub_233BD8690()
{
  return MEMORY[0x24BDDAD98]();
}

uint64_t sub_233BD869C()
{
  return MEMORY[0x24BDDADA0]();
}

uint64_t sub_233BD86A8()
{
  return MEMORY[0x24BDDADA8]();
}

uint64_t sub_233BD86B4()
{
  return MEMORY[0x24BDDADB0]();
}

uint64_t sub_233BD86C0()
{
  return MEMORY[0x24BDDADB8]();
}

uint64_t sub_233BD86CC()
{
  return MEMORY[0x24BDDADC0]();
}

uint64_t sub_233BD86D8()
{
  return MEMORY[0x24BDDADC8]();
}

uint64_t sub_233BD86E4()
{
  return MEMORY[0x24BDDADD0]();
}

uint64_t sub_233BD86F0()
{
  return MEMORY[0x24BDDADE0]();
}

uint64_t sub_233BD86FC()
{
  return MEMORY[0x24BDDADE8]();
}

uint64_t sub_233BD8708()
{
  return MEMORY[0x24BDDADF0]();
}

uint64_t sub_233BD8714()
{
  return MEMORY[0x24BDDADF8]();
}

uint64_t sub_233BD8720()
{
  return MEMORY[0x24BDDAE00]();
}

uint64_t sub_233BD872C()
{
  return MEMORY[0x24BDDAE08]();
}

uint64_t sub_233BD8738()
{
  return MEMORY[0x24BDDAE10]();
}

uint64_t sub_233BD8744()
{
  return MEMORY[0x24BDDAE18]();
}

uint64_t sub_233BD8750()
{
  return MEMORY[0x24BDDAE28]();
}

uint64_t sub_233BD875C()
{
  return MEMORY[0x24BDDAE30]();
}

uint64_t sub_233BD8768()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_233BD8774()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_233BD8780()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_233BD878C()
{
  return MEMORY[0x24BEE5448]();
}

uint64_t sub_233BD8798()
{
  return MEMORY[0x24BEE5458]();
}

uint64_t sub_233BD87A4()
{
  return MEMORY[0x24BEE54B0]();
}

uint64_t sub_233BD87B0()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_233BD87BC()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_233BD87C8()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_233BD87D4()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_233BD87E0()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_233BD87EC()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_233BD87F8()
{
  return MEMORY[0x24BDCFA18]();
}

uint64_t sub_233BD8804()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_233BD8810()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_233BD881C()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_233BD8828()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_233BD8834()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_233BD8840()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_233BD884C()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_233BD8858()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t sub_233BD8864()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_233BD8870()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_233BD887C()
{
  return MEMORY[0x24BEE1250]();
}

uint64_t sub_233BD8888()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_233BD8894()
{
  return MEMORY[0x24BEE6820]();
}

uint64_t sub_233BD88A0()
{
  return MEMORY[0x24BEE6828]();
}

uint64_t sub_233BD88AC()
{
  return MEMORY[0x24BEE6920]();
}

uint64_t sub_233BD88B8()
{
  return MEMORY[0x24BEE6928]();
}

uint64_t sub_233BD88C4()
{
  return MEMORY[0x24BEE6940]();
}

uint64_t sub_233BD88D0()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_233BD88DC()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_233BD88E8()
{
  return MEMORY[0x24BEE69A8]();
}

uint64_t sub_233BD88F4()
{
  return MEMORY[0x24BEE69F8]();
}

uint64_t sub_233BD8900()
{
  return MEMORY[0x24BEE6A50]();
}

uint64_t sub_233BD890C()
{
  return MEMORY[0x24BEE6A58]();
}

uint64_t sub_233BD8918()
{
  return MEMORY[0x24BEE6AD0]();
}

uint64_t sub_233BD8924()
{
  return MEMORY[0x24BEE6B00]();
}

uint64_t sub_233BD8930()
{
  return MEMORY[0x24BEE6B10]();
}

uint64_t sub_233BD893C()
{
  return MEMORY[0x24BEE1930]();
}

uint64_t sub_233BD8948()
{
  return MEMORY[0x24BEE19B8]();
}

uint64_t sub_233BD8954()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_233BD8960()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_233BD896C()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_233BD8978()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_233BD8984()
{
  return MEMORY[0x24BDCFFB0]();
}

uint64_t sub_233BD8990()
{
  return MEMORY[0x24BEE5770]();
}

uint64_t sub_233BD899C()
{
  return MEMORY[0x24BEE5790]();
}

uint64_t sub_233BD89A8()
{
  return MEMORY[0x24BEE57B0]();
}

uint64_t sub_233BD89B4()
{
  return MEMORY[0x24BDD0170]();
}

uint64_t sub_233BD89C0()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_233BD89CC()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_233BD89D8()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_233BD89E4()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_233BD89F0()
{
  return MEMORY[0x24BEE2150]();
}

uint64_t sub_233BD89FC()
{
  return MEMORY[0x24BEE2168]();
}

uint64_t sub_233BD8A08()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_233BD8A14()
{
  return MEMORY[0x24BEE22E0]();
}

uint64_t sub_233BD8A20()
{
  return MEMORY[0x24BEE2300]();
}

uint64_t sub_233BD8A2C()
{
  return MEMORY[0x24BEE2330]();
}

uint64_t sub_233BD8A38()
{
  return MEMORY[0x24BEE2340]();
}

uint64_t sub_233BD8A44()
{
  return MEMORY[0x24BEE2358]();
}

uint64_t sub_233BD8A50()
{
  return MEMORY[0x24BEE2360]();
}

uint64_t sub_233BD8A5C()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_233BD8A68()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_233BD8A74()
{
  return MEMORY[0x24BEE24C8]();
}

uint64_t sub_233BD8A80()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_233BD8A8C()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_233BD8A98()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_233BD8AA4()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_233BD8AB0()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t sub_233BD8ABC()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t sub_233BD8AC8()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_233BD8AD4()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_233BD8AE0()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_233BD8AEC()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_233BD8AF8()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_233BD8B04()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_233BD8B10()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_233BD8B1C()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_233BD8B28()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_233BD8B34()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_233BD8B40()
{
  return MEMORY[0x24BEE32B8]();
}

uint64_t sub_233BD8B4C()
{
  return MEMORY[0x24BEE32C0]();
}

uint64_t sub_233BD8B58()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_233BD8B64()
{
  return MEMORY[0x24BEE32F8]();
}

uint64_t sub_233BD8B70()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_233BD8B7C()
{
  return MEMORY[0x24BEE3348]();
}

uint64_t sub_233BD8B88()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_233BD8B94()
{
  return MEMORY[0x24BEE3358]();
}

uint64_t sub_233BD8BA0()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_233BD8BAC()
{
  return MEMORY[0x24BEE3398]();
}

uint64_t sub_233BD8BB8()
{
  return MEMORY[0x24BEE33C0]();
}

uint64_t sub_233BD8BC4()
{
  return MEMORY[0x24BEE33C8]();
}

uint64_t sub_233BD8BD0()
{
  return MEMORY[0x24BEE33E0]();
}

uint64_t sub_233BD8BDC()
{
  return MEMORY[0x24BEE3408]();
}

uint64_t sub_233BD8BE8()
{
  return MEMORY[0x24BEE3428]();
}

uint64_t sub_233BD8BF4()
{
  return MEMORY[0x24BEE3448]();
}

uint64_t sub_233BD8C00()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_233BD8C0C()
{
  return MEMORY[0x24BEE3490]();
}

uint64_t sub_233BD8C18()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_233BD8C24()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_233BD8C30()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_233BD8C3C()
{
  return MEMORY[0x24BEE34E8]();
}

uint64_t sub_233BD8C48()
{
  return MEMORY[0x24BEE3510]();
}

uint64_t sub_233BD8C54()
{
  return MEMORY[0x24BEE3520]();
}

uint64_t sub_233BD8C60()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_233BD8C6C()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_233BD8C78()
{
  return MEMORY[0x24BEE3A88]();
}

uint64_t sub_233BD8C84()
{
  return MEMORY[0x24BEE3B20]();
}

uint64_t sub_233BD8C90()
{
  return MEMORY[0x24BEE70E0]();
}

uint64_t sub_233BD8C9C()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_233BD8CA8()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_233BD8CB4()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_233BD8CC0()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_233BD8CCC()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_233BD8CD8()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_233BD8CE4()
{
  return MEMORY[0x24BEE42C0]();
}

uint64_t sub_233BD8CF0()
{
  return MEMORY[0x24BEE42D8]();
}

uint64_t sub_233BD8CFC()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_233BD8D08()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_233BD8D14()
{
  return MEMORY[0x24BEE4300]();
}

uint64_t sub_233BD8D20()
{
  return MEMORY[0x24BEE4318]();
}

uint64_t sub_233BD8D2C()
{
  return MEMORY[0x24BEE4320]();
}

uint64_t sub_233BD8D38()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_233BD8D44()
{
  return MEMORY[0x24BEE4330]();
}

uint64_t sub_233BD8D50()
{
  return MEMORY[0x24BEE4408]();
}

uint64_t sub_233BD8D5C()
{
  return MEMORY[0x24BEE45F8]();
}

uint64_t sub_233BD8D68()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_233BD8D74()
{
  return MEMORY[0x24BEE4628]();
}

uint64_t sub_233BD8D80()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_233BD8D8C()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_233BD8D98()
{
  return MEMORY[0x24BEE4A10]();
}

CGColorRef CGColorCreateGenericRGB(CGFloat red, CGFloat green, CGFloat blue, CGFloat alpha)
{
  return (CGColorRef)MEMORY[0x24BDBDAA8](red, green, blue, alpha);
}

CGColorRef CGColorCreateSRGB(CGFloat red, CGFloat green, CGFloat blue, CGFloat alpha)
{
  return (CGColorRef)MEMORY[0x24BDBDAB0](red, green, blue, alpha);
}

uint64_t MKBGetDeviceLockState()
{
  return MEMORY[0x24BE67168]();
}

uint64_t UISGetColorSRGBComponents()
{
  return MEMORY[0x24BEBEC68]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x24BDAEE78](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x24BDAF170](name, out_token, queue, handler);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF460](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF488](lock);
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x24BEE4B78]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return MEMORY[0x24BEE4C70]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTupleTypeLayout3()
{
  return MEMORY[0x24BEE4DE8]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x24BEE4E68]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x24BEE4ED0]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_isCurrentExecutor()
{
  return MEMORY[0x24BEE7250]();
}

uint64_t swift_task_reportUnexpectedExecutor()
{
  return MEMORY[0x24BEE7270]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x24BEE4F68]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

