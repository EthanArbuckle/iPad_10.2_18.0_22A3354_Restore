uint64_t key path getter for ReactionPickerView.reactions : ReactionPickerView@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x90))();
  *a2 = result;
  return result;
}

uint64_t key path setter for ReactionPickerView.reactions : ReactionPickerView(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & **a2) + 0x98);
  v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t ReactionPickerView.reactions.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t ReactionPickerView.reactions.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC22_GroupActivities_UIKit18ReactionPickerView_reactions);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*ReactionPickerView.reactions.modify())()
{
  swift_beginAccess();
  return ReactionPickerView.reactions.modify;
}

uint64_t key path getter for ReactionPickerView.selectedReaction : ReactionPickerView@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0xA8))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for ReactionPickerView.selectedReaction : ReactionPickerView(uint64_t *a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x24BEE4EA0] & **a2) + 0xB0);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t ReactionPickerView.selectedReaction.getter()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t ReactionPickerView.selectedReaction.setter()
{
  void *v0;
  id v1;

  swift_getKeyPath();
  swift_getKeyPath();
  v1 = v0;
  return static Published.subscript.setter();
}

void (*ReactionPickerView.selectedReaction.modify(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return ReactionPickerView.selectedReaction.modify;
}

void ReactionPickerView.selectedReaction.modify(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();
  free(v1);
}

uint64_t key path getter for ReactionPickerView.$selectedReaction : ReactionPickerView(_QWORD **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0xC0))();
}

uint64_t key path setter for ReactionPickerView.$selectedReaction : ReactionPickerView(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<String?>.Publisher);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v8 + 16))(v7, a1);
  return (*(uint64_t (**)(char *))((*MEMORY[0x24BEE4EA0] & **a2) + 0xC8))(v7);
}

uint64_t ReactionPickerView.$selectedReaction.getter()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<String?>);
  Published.projectedValue.getter();
  return swift_endAccess();
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x2207D490C]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t ReactionPickerView.$selectedReaction.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<String?>.Publisher);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<String?>);
  Published.projectedValue.setter();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*ReactionPickerView.$selectedReaction.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<String?>.Publisher);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC22_GroupActivities_UIKit18ReactionPickerView__selectedReaction;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<String?>);
  Published.projectedValue.getter();
  swift_endAccess();
  return ReactionPickerView.$selectedReaction.modify;
}

void ReactionPickerView.$selectedReaction.modify(uint64_t a1, char a2)
{
  _QWORD *v3;
  void (*v4)(_QWORD, _QWORD, _QWORD);
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void *, uint64_t);

  v3 = *(_QWORD **)a1;
  v4 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)a1 + 88) + 16);
  v4(*(_QWORD *)(*(_QWORD *)a1 + 104), v3[14], v3[10]);
  v5 = (void *)v3[13];
  v6 = (void *)v3[14];
  v8 = v3[11];
  v7 = (void *)v3[12];
  v9 = v3[10];
  if ((a2 & 1) != 0)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    Published.projectedValue.setter();
    swift_endAccess();
    v10 = *(void (**)(void *, uint64_t))(v8 + 8);
    v10(v5, v9);
  }
  else
  {
    swift_beginAccess();
    Published.projectedValue.setter();
    swift_endAccess();
    v10 = *(void (**)(void *, uint64_t))(v8 + 8);
  }
  v10(v6, v9);
  free(v6);
  free(v5);
  free(v7);
  free(v3);
}

uint64_t key path getter for ReactionPickerView.history : ReactionPickerView@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0xD8))();
  *a2 = result;
  return result;
}

uint64_t key path setter for ReactionPickerView.history : ReactionPickerView(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & **a2) + 0xE0);
  v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t ReactionPickerView.history.getter()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(v0
                                                       + OBJC_IVAR____TtC22_GroupActivities_UIKit18ReactionPickerView_historyModel)
                                         + 160);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  return v3;
}

uint64_t ReactionPickerView.history.setter(uint64_t a1)
{
  uint64_t v1;
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(**(_QWORD **)(v1
                                                    + OBJC_IVAR____TtC22_GroupActivities_UIKit18ReactionPickerView_historyModel)
                                      + 168);
  swift_retain();
  v3(a1);
  return swift_release();
}

uint64_t (*ReactionPickerView.history.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;

  v3 = OBJC_IVAR____TtC22_GroupActivities_UIKit18ReactionPickerView_historyModel;
  a1[1] = v1;
  a1[2] = v3;
  v4 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(v1 + v3) + 160);
  v5 = swift_retain();
  v6 = v4(v5);
  swift_release();
  *a1 = v6;
  return ReactionPickerView.history.modify;
}

uint64_t ReactionPickerView.history.modify(uint64_t *a1, char a2)
{
  uint64_t v2;
  void (*v3)(uint64_t);

  v2 = *a1;
  v3 = *(void (**)(uint64_t))(**(_QWORD **)(a1[1] + a1[2]) + 168);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    v3(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    v3(v2);
  }
  return swift_release();
}

id ReactionPickerView.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t ReactionPickerView.init()()
{
  uint64_t ObjectType;
  uint64_t v1;
  uint64_t v2;

  ObjectType = swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Character>);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_21FDD5AE0;
  *(_QWORD *)(v1 + 32) = 2375131120;
  *(_QWORD *)(v1 + 40) = 0xA400000000000000;
  *(_QWORD *)(v1 + 48) = 0x8FB8EFA49DE2;
  *(_QWORD *)(v1 + 56) = 0xA600000000000000;
  *(_QWORD *)(v1 + 64) = 2307825648;
  *(_QWORD *)(v1 + 72) = 0xA400000000000000;
  *(_QWORD *)(v1 + 80) = 2777980912;
  *(_QWORD *)(v1 + 88) = 0xA400000000000000;
  *(_QWORD *)(v1 + 96) = 2391908336;
  *(_QWORD *)(v1 + 104) = 0xA400000000000000;
  *(_QWORD *)(v1 + 112) = 2492637168;
  *(_QWORD *)(v1 + 120) = 0xA400000000000000;
  v2 = (*(uint64_t (**)(void))(ObjectType + 264))();
  swift_deallocPartialClassInstance();
  return v2;
}

id ReactionPickerView.__allocating_init(reactions:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return ReactionPickerView.init(reactions:)(a1);
}

id ReactionPickerView.init(reactions:)(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  id v11;
  objc_class *v12;
  id v13;
  objc_super v15;
  uint64_t v16;
  uint64_t v17;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<String?>);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit();
  v8 = &v1[OBJC_IVAR____TtC22_GroupActivities_UIKit18ReactionPickerView__selectedReaction];
  v16 = 0;
  v17 = 0;
  v9 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v8, v7, v3);
  v10 = OBJC_IVAR____TtC22_GroupActivities_UIKit18ReactionPickerView_historyModel;
  type metadata accessor for ReactionHistoryViewModel();
  swift_allocObject();
  *(_QWORD *)&v9[v10] = ReactionHistoryViewModel.init(entries:)(MEMORY[0x24BEE4AF8]);
  v11 = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 0);
  *(_QWORD *)&v9[OBJC_IVAR____TtC22_GroupActivities_UIKit18ReactionPickerView_emojiButton] = v11;
  *(_QWORD *)&v9[OBJC_IVAR____TtC22_GroupActivities_UIKit18ReactionPickerView_reactions] = a1;

  v12 = (objc_class *)type metadata accessor for ReactionPickerView();
  v15.receiver = v9;
  v15.super_class = v12;
  v13 = objc_msgSendSuper2(&v15, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  ReactionPickerView.configureEmojiButton()();

  return v13;
}

id ReactionPickerView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id ReactionPickerView.init(coder:)(void *a1)
{
  void *v1;
  id v3;

  v3 = objc_msgSend(v1, sel_init);

  return v3;
}

void ReactionPickerView.configureEmojiButton()()
{
  char *v0;
  id v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;

  v1 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x24BEBE248]);
  v2 = objc_msgSend((id)objc_opt_self(), sel_configurationWithFont_, v1);

  v3 = *(void **)&v0[OBJC_IVAR____TtC22_GroupActivities_UIKit18ReactionPickerView_emojiButton];
  v7 = v2;
  v4 = (void *)MEMORY[0x2207D3EF8](0x6972672E65636166, 0xED0000676E696E6ELL);
  v5 = objc_msgSend((id)objc_opt_self(), sel__systemImageNamed_withConfiguration_, v4, v7);

  objc_msgSend(v3, sel_setImage_forState_, v5, 0);
  objc_msgSend(v3, sel_setOverrideUserInterfaceStyle_, 1);
  v6 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  objc_msgSend(v3, sel_setTintColor_, v6);

  objc_msgSend(v3, sel_addTarget_action_forControlEvents_, v0, sel_presentReactionPicker, 64);
  objc_msgSend(v0, sel_addSubview_, v3);

}

Swift::Void __swiftcall ReactionPickerView.present(from:in:animated:)(UIView *from, UIWindow *in, Swift::Bool animated)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v7;
  _QWORD *v8;
  void *v9;
  id v10;
  char *v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(_QWORD, uint64_t);
  _QWORD *v24;
  UIWindow *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  id v32;
  _QWORD *v33;
  id v34;
  UIWindow *v35;
  char *v36;
  UIView *v37;
  uint64_t v39;

  v4 = v3;
  v7 = (_QWORD *)MEMORY[0x2207D4A98]((char *)v3 + OBJC_IVAR____TtC22_GroupActivities_UIKit18ReactionPickerView_pickerController);
  v8 = (_QWORD *)MEMORY[0x24BEE4EA0];
  if (v7)
  {
    v9 = v7;
    (*(void (**)(void))(class metadata base offset for ReactionPickerOverlayViewController
                      + (*MEMORY[0x24BEE4EA0] & *v7)
                      + 224))();

  }
  v10 = objc_allocWithZone((Class)type metadata accessor for ReactionPickerOverlayViewController());
  v11 = ReactionPickerOverlayViewController.init()();
  v12 = (*(uint64_t (**)(void))((*v8 & *v4) + 0x90))();
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    v35 = in;
    v36 = v11;
    v37 = from;
    v39 = MEMORY[0x24BEE4AF8];
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v13, 0);
    v14 = 0;
    v15 = v39;
    v16 = *(_QWORD *)(v39 + 16);
    v17 = 16 * v16;
    do
    {
      v19 = *(_QWORD *)(v12 + v14 + 32);
      v18 = *(_QWORD *)(v12 + v14 + 40);
      v20 = *(_QWORD *)(v39 + 24);
      swift_bridgeObjectRetain();
      if (v16 >= v20 >> 1)
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v20 > 1, v16 + 1, 1);
      *(_QWORD *)(v39 + 16) = v16 + 1;
      v21 = v39 + v17 + v14;
      *(_QWORD *)(v21 + 32) = v19;
      *(_QWORD *)(v21 + 40) = v18;
      v14 += 16;
      ++v16;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
    from = v37;
    v8 = (_QWORD *)MEMORY[0x24BEE4EA0];
    in = v35;
    v11 = v36;
  }
  else
  {
    swift_bridgeObjectRelease();
    v15 = MEMORY[0x24BEE4AF8];
  }
  (*(void (**)(uint64_t))(class metadata base offset for ReactionPickerOverlayViewController
                                  + (*v8 & *(_QWORD *)v11)
                                  + 136))(v15);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v4;
  *(_QWORD *)(v22 + 24) = in;
  v23 = *(uint64_t (**)(_QWORD, uint64_t))(class metadata base offset for ReactionPickerOverlayViewController
                                                  + (*v8 & *(_QWORD *)v11)
                                                  + 184);
  v24 = v4;
  v25 = in;
  v26 = v23(partial apply for closure #2 in ReactionPickerView.present(from:in:animated:), v22);
  v27 = (*(uint64_t (**)(uint64_t))((*v8 & *v24) + 0xA8))(v26);
  v28 = (*(uint64_t (**)(uint64_t))(class metadata base offset for ReactionPickerOverlayViewController
                                           + (*v8 & *(_QWORD *)v11)
                                           + 112))(v27);
  v29 = *(_QWORD *)((*(uint64_t (**)(uint64_t))((*v8 & *v24) + 0xD8))(v28) + 16);
  swift_bridgeObjectRelease();
  if (v29)
  {
    type metadata accessor for ReactionHistoryViewModel();
    lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ReactionHistoryViewModel, (uint64_t)&protocol conformance descriptor for ReactionHistoryViewModel);
    swift_retain();
    ObservedObject.init(wrappedValue:)();
    lazy protocol witness table accessor for type ReactionHistoryView and conformance ReactionHistoryView();
    v30 = AnyView.init<A>(_:)();
    (*(void (**)(uint64_t))(class metadata base offset for ReactionPickerOverlayViewController
                                    + (*v8 & *(_QWORD *)v11)
                                    + 88))(v30);
  }
  v31 = v11;
  v32 = objc_msgSend(v24, sel_traitCollection);
  v33 = v8;
  v34 = objc_msgSend(v32, sel_userInterfaceStyle);

  objc_msgSend(v31, sel_setOverrideUserInterfaceStyle_, v34);
  (*(void (**)(UIView *, UIWindow *, Swift::Bool, _QWORD, _QWORD))(class metadata base offset for ReactionPickerOverlayViewController
                                                                            + (*v33 & *(_QWORD *)v31)
                                                                            + 216))(from, v25, animated, 0, 0);
  swift_unknownObjectWeakAssign();

}

void closure #2 in ReactionPickerView.present(from:in:animated:)(uint64_t a1, uint64_t a2, _QWORD *a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  id v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void (**)(uint64_t, uint64_t))((*MEMORY[0x24BEE4EA0] & *a3) + 0xB0);
  swift_bridgeObjectRetain();
  v12(a1, a2);
  if (a2)
  {
    v13 = objc_msgSend(a4, sel_windowScene);
    v14 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v11, 1, 1, v14);
    type metadata accessor for MainActor();
    swift_bridgeObjectRetain();
    v15 = v13;
    v16 = a3;
    v17 = static MainActor.shared.getter();
    v18 = (_QWORD *)swift_allocObject();
    v19 = MEMORY[0x24BEE6930];
    v18[2] = v17;
    v18[3] = v19;
    v18[4] = v13;
    v18[5] = v16;
    v18[6] = a1;
    v18[7] = a2;
    _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5((uint64_t)v11, (uint64_t)&async function pointer to partial apply for closure #1 in ReactionPickerView.sendReaction(_:to:), (uint64_t)v18);
    swift_release();

  }
}

Swift::Void __swiftcall ReactionPickerView.dismiss()()
{
  uint64_t v0;
  _QWORD *v1;
  id v2;

  v1 = (_QWORD *)MEMORY[0x2207D4A98](v0 + OBJC_IVAR____TtC22_GroupActivities_UIKit18ReactionPickerView_pickerController);
  if (v1)
  {
    v2 = v1;
    (*(void (**)(void))(class metadata base offset for ReactionPickerOverlayViewController
                      + (*MEMORY[0x24BEE4EA0] & *v1)
                      + 224))();

  }
}

uint64_t closure #1 in ReactionPickerView.sendReaction(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v7[16] = a6;
  v7[17] = a7;
  v7[14] = a4;
  v7[15] = a5;
  v7[18] = type metadata accessor for Reaction(0);
  v7[19] = swift_task_alloc();
  v8 = type metadata accessor for Logger();
  v7[20] = v8;
  v7[21] = *(_QWORD *)(v8 - 8);
  v7[22] = swift_task_alloc();
  type metadata accessor for MainActor();
  v7[23] = static MainActor.shared.getter();
  v7[24] = dispatch thunk of Actor.unownedExecutor.getter();
  v7[25] = v9;
  return swift_task_switch();
}

uint64_t closure #1 in ReactionPickerView.sendReaction(_:to:)()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  Swift::Int v11;
  int *v12;
  _QWORD *v13;
  id v15;
  void *v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  _QWORD *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  unint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  id v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t (*v57)(_QWORD);
  uint64_t v58;

  v1 = *(void **)(v0 + 112);
  if (v1)
  {
    v2 = *(id *)(v0 + 112);
  }
  else
  {
    v15 = objc_msgSend(*(id *)(v0 + 120), sel_window);
    if (!v15
      || (v16 = v15, v2 = objc_msgSend(v15, sel_windowScene), v16, !v2))
    {
      swift_release();
      if (one-time initialization token for default != -1)
        swift_once();
      v23 = *(_QWORD *)(v0 + 168);
      v24 = *(_QWORD *)(v0 + 176);
      v25 = *(_QWORD *)(v0 + 160);
      v26 = *(void **)(v0 + 120);
      v27 = __swift_project_value_buffer(v25, (uint64_t)static Log.default);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v24, v27, v25);
      v28 = v26;
      swift_bridgeObjectRetain_n();
      v29 = v28;
      v30 = Logger.logObject.getter();
      v31 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v30, v31))
      {
        v33 = *(_QWORD *)(v0 + 128);
        v32 = *(_QWORD *)(v0 + 136);
        v34 = *(void **)(v0 + 120);
        v35 = swift_slowAlloc();
        v56 = swift_slowAlloc();
        v58 = v56;
        *(_DWORD *)v35 = 136315650;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 80) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v32, &v58);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v35 + 12) = 2080;
        v36 = objc_msgSend(v34, sel_window);
        if (v36)
        {
          *(_QWORD *)(v0 + 88) = v36;
          type metadata accessor for UIView(0, (unint64_t *)&lazy cache variable for type metadata for UIWindow);
          v37 = String.init<A>(reflecting:)();
          v39 = v38;
        }
        else
        {
          v39 = 0xE300000000000000;
          v37 = 7104878;
        }
        v47 = *(void **)(v0 + 120);
        *(_QWORD *)(v0 + 64) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v37, v39, &v58);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();

        *(_WORD *)(v35 + 22) = 2080;
        v48 = objc_msgSend(v47, sel_superview);
        if (v48)
        {
          *(_QWORD *)(v0 + 104) = v48;
          type metadata accessor for UIView(0, (unint64_t *)&lazy cache variable for type metadata for UIView);
          v49 = String.init<A>(reflecting:)();
          v51 = v50;
        }
        else
        {
          v51 = 0xE300000000000000;
          v49 = 7104878;
        }
        v53 = *(_QWORD *)(v0 + 168);
        v52 = *(_QWORD *)(v0 + 176);
        v54 = *(_QWORD *)(v0 + 160);
        v55 = *(void **)(v0 + 120);
        *(_QWORD *)(v0 + 72) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v49, v51, &v58);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_21FD90000, v30, v31, "Could not find a window scene to render this reaction: %s window: %s superview: %s", (uint8_t *)v35, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x2207D49E4](v56, -1, -1);
        MEMORY[0x2207D49E4](v35, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v52, v54);
      }
      else
      {
        v44 = *(_QWORD *)(v0 + 168);
        v43 = *(_QWORD *)(v0 + 176);
        v45 = *(_QWORD *)(v0 + 160);
        v46 = *(void **)(v0 + 120);
        swift_bridgeObjectRelease_n();

        (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v45);
      }
      goto LABEL_29;
    }
    v1 = *(void **)(v0 + 112);
  }
  *(_QWORD *)(v0 + 208) = v2;
  v3 = v2;
  v4 = v1;
  v5 = (_QWORD *)UIScene.reactionEffectInteraction.getter();
  *(_QWORD *)(v0 + 216) = v5;

  if (v5)
  {
    v7 = *(_QWORD *)(v0 + 144);
    v6 = *(_QWORD *)(v0 + 152);
    v9 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 136);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_21FDD5AF0;
    *(_QWORD *)(inited + 32) = v9;
    *(_QWORD *)(inited + 40) = v8;
    swift_bridgeObjectRetain();
    v11 = specialized Set.init(_nonEmptyArrayLiteral:)(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    UUID.init()();
    *(_QWORD *)(v6 + *(int *)(v7 + 20)) = v11;
    v12 = *(int **)((*MEMORY[0x24BEE4EA0] & *v5) + 0x130);
    v57 = (uint64_t (*)(_QWORD))((char *)v12 + *v12);
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 224) = v13;
    *v13 = v0;
    v13[1] = closure #1 in ReactionPickerView.sendReaction(_:to:);
    return v57(*(_QWORD *)(v0 + 152));
  }
  swift_release();
  if (one-time initialization token for default != -1)
    swift_once();
  __swift_project_value_buffer(*(_QWORD *)(v0 + 160), (uint64_t)static Log.default);
  v17 = v3;
  v18 = Logger.logObject.getter();
  v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    v21 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v20 = 138412290;
    *(_QWORD *)(v0 + 96) = v17;
    v22 = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *v21 = v17;

    _os_log_impl(&dword_21FD90000, v18, v19, "Dropping rendering of interaction as we didn't find a reaction effect interaction on the given scene: %@", v20, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    MEMORY[0x2207D49E4](v21, -1, -1);
    MEMORY[0x2207D49E4](v20, -1, -1);
  }
  else
  {

  }
  if (one-time initialization token for runtimeIssues != -1)
    swift_once();
  __swift_project_value_buffer(*(_QWORD *)(v0 + 160), (uint64_t)static Log.runtimeIssues);
  v40 = Logger.logObject.getter();
  v41 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v40, v41))
  {
    v42 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v42 = 0;
    _os_log_impl(&dword_21FD90000, v40, v41, "Reaction effect was not rendered, ensure that you add a ReactionEffectInteraction to a view contained within the same window scene as your reaction picker.", v42, 2u);
    MEMORY[0x2207D49E4](v42, -1, -1);

  }
  else
  {

  }
LABEL_29:
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 152);
  swift_task_dealloc();
  outlined destroy of Reaction(v1);
  return swift_task_switch();
}

{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 208);
  v2 = *(void **)(v0 + 216);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id ReactionPickerView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void ReactionPickerView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ReactionPickerView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ReactionPickerView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void default argument 0 of GroupActivitySharingController.dismissViewController(result:)(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t type metadata accessor for ReactionPickerView()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ReactionPickerView;
  if (!type metadata singleton initialization cache for ReactionPickerView)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t protocol witness for _ObjectiveCBridgeable._bridgeToObjectiveC() in conformance NSAttributedStringKey(uint64_t a1, uint64_t a2)
{
  return protocol witness for _ObjectiveCBridgeable._bridgeToObjectiveC() in conformance NSAttributedStringKey(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t protocol witness for static _ObjectiveCBridgeable._forceBridgeFromObjectiveC(_:result:) in conformance NSAttributedStringKey(uint64_t a1, id *a2)
{
  uint64_t result;

  result = static String._forceBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return result;
}

uint64_t protocol witness for static _ObjectiveCBridgeable._conditionallyBridgeFromObjectiveC(_:result:) in conformance NSAttributedStringKey(uint64_t a1, id *a2)
{
  char v3;

  v3 = static String._conditionallyBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return v3 & 1;
}

uint64_t protocol witness for static _ObjectiveCBridgeable._unconditionallyBridgeFromObjectiveC(_:) in conformance NSAttributedStringKey@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v3 = MEMORY[0x2207D3EF8](v2);
  result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t protocol witness for Hashable.hashValue.getter in conformance NSAttributedStringKey(uint64_t a1, uint64_t a2)
{
  return protocol witness for _ObjectiveCBridgeable._bridgeToObjectiveC() in conformance NSAttributedStringKey(a1, a2, MEMORY[0x24BEE0CD8]);
}

uint64_t protocol witness for _ObjectiveCBridgeable._bridgeToObjectiveC() in conformance NSAttributedStringKey(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t protocol witness for Hashable.hash(into:) in conformance NSAttributedStringKey()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance NSAttributedStringKey()
{
  Swift::Int v0;

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  v0 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance NSAttributedStringKey()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3)
    v5 = 1;
  else
    v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance NSAttributedStringKey@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = MEMORY[0x2207D3EF8](*a1, a1[1]);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance NSAttributedStringKey@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t protocol witness for _HasCustomAnyHashableRepresentation._toCustomAnyHashable() in conformance NSAttributedStringKey()
{
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey, (uint64_t (*)(uint64_t))type metadata accessor for NSAttributedStringKey, (uint64_t)&protocol conformance descriptor for NSAttributedStringKey);
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel((unint64_t *)&lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey, (uint64_t (*)(uint64_t))type metadata accessor for NSAttributedStringKey, (uint64_t)&protocol conformance descriptor for NSAttributedStringKey);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

{
  char **v3;
  uint64_t result;

  result = specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_21FD94798()
{
  uint64_t v0;

  return swift_deallocObject();
}

void partial apply for closure #2 in ReactionPickerView.present(from:in:animated:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  closure #2 in ReactionPickerView.present(from:in:animated:)(a1, a2, *(_QWORD **)(v2 + 16), *(void **)(v2 + 24));
}

unint64_t lazy protocol witness table accessor for type ReactionHistoryView and conformance ReactionHistoryView()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ReactionHistoryView and conformance ReactionHistoryView;
  if (!lazy protocol witness table cache variable for type ReactionHistoryView and conformance ReactionHistoryView)
  {
    result = MEMORY[0x2207D4924](&protocol conformance descriptor for ReactionHistoryView, &type metadata for ReactionHistoryView);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ReactionHistoryView and conformance ReactionHistoryView);
  }
  return result;
}

uint64_t ObjC metadata update function for ReactionPickerView()
{
  return type metadata accessor for ReactionPickerView();
}

void type metadata completion function for ReactionPickerView()
{
  unint64_t v0;

  type metadata accessor for Published<String?>();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for ReactionPickerView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ReactionPickerView.reactions.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ReactionPickerView.reactions.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ReactionPickerView.reactions.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ReactionPickerView.selectedReaction.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ReactionPickerView.selectedReaction.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of ReactionPickerView.selectedReaction.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ReactionPickerView.$selectedReaction.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of ReactionPickerView.$selectedReaction.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of ReactionPickerView.$selectedReaction.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of ReactionPickerView.history.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of ReactionPickerView.history.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of ReactionPickerView.history.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of ReactionPickerView.__allocating_init(reactions:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 264))();
}

uint64_t dispatch thunk of ReactionPickerView.present(from:in:animated:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x120))();
}

uint64_t dispatch thunk of ReactionPickerView.dismiss()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x128))();
}

void type metadata accessor for Published<String?>()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Published<String?>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for String?);
    v0 = type metadata accessor for Published();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Published<String?>);
  }
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x2207D4918](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

void type metadata accessor for CGImageRef(uint64_t a1)
{
  type metadata accessor for CGImageRef(a1, &lazy cache variable for type metadata for CGImageRef);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  type metadata accessor for CGImageRef(a1, &lazy cache variable for type metadata for CGPoint);
}

uint64_t getEnumTagSinglePayload for CGSize(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CGSize(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  type metadata accessor for CGImageRef(a1, &lazy cache variable for type metadata for CGSize);
}

uint64_t specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ReactionHistoryEntry>);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  v14 = 48 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v12, v13, v14);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_21FD94D00()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ReactionPickerView.sendReaction(_:to:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = partial apply for closure #1 in ReactionPickerView.sendReaction(_:to:);
  return closure #1 in ReactionPickerView.sendReaction(_:to:)(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t partial apply for closure #1 in ReactionPickerView.sendReaction(_:to:)()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t type metadata accessor for UIView(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t outlined destroy of Reaction(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Reaction(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void type metadata accessor for NSAttributedStringKey(uint64_t a1)
{
  type metadata accessor for CGImageRef(a1, &lazy cache variable for type metadata for NSAttributedStringKey);
}

void type metadata accessor for CGImageRef(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t base witness table accessor for RawRepresentable in NSAttributedStringKey()
{
  return lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey, (uint64_t (*)(uint64_t))type metadata accessor for NSAttributedStringKey, (uint64_t)&protocol conformance descriptor for NSAttributedStringKey);
}

uint64_t lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x2207D4924](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t base witness table accessor for _HasCustomAnyHashableRepresentation in NSAttributedStringKey()
{
  return lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey, (uint64_t (*)(uint64_t))type metadata accessor for NSAttributedStringKey, (uint64_t)&protocol conformance descriptor for NSAttributedStringKey);
}

uint64_t base witness table accessor for Equatable in NSAttributedStringKey()
{
  return lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey, (uint64_t (*)(uint64_t))type metadata accessor for NSAttributedStringKey, (uint64_t)&protocol conformance descriptor for NSAttributedStringKey);
}

void ReactionPickerOverlayViewController.updateAnchorPoint(using:)()
{
  swift_deletedMethodError();
  __break(1u);
}

uint64_t _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5Tm(a1, a2, a3);
}

uint64_t _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for TaskPriority();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  outlined destroy of TaskPriority?(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

BOOL static GroupActivitySharingResult.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void GroupActivitySharingResult.hash(into:)()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int GroupActivitySharingResult.hashValue.getter()
{
  unsigned __int8 *v0;
  Swift::UInt v1;

  v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance GroupActivitySharingResult(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance GroupActivitySharingResult()
{
  unsigned __int8 *v0;
  Swift::UInt v1;

  v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void protocol witness for Hashable.hash(into:) in conformance GroupActivitySharingResult()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance GroupActivitySharingResult()
{
  unsigned __int8 *v0;
  Swift::UInt v1;

  v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

id GroupActivitySharingController.controller.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC22_GroupActivities_UIKit30GroupActivitySharingController_controller);
}

uint64_t GroupActivitySharingController.activity.getter()
{
  return swift_retain();
}

_QWORD *key path getter for GroupActivitySharingController.resultValue : GroupActivitySharingController@<X0>(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  _QWORD *result;
  uint64_t v4;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr))((*MEMORY[0x24BEE4EA0] & **a1) + 0x70))(&v4);
  *a2 = v4;
  return result;
}

uint64_t key path setter for GroupActivitySharingController.resultValue : GroupActivitySharingController(char *a1, _QWORD **a2)
{
  _QWORD *v2;
  char v4;

  v2 = *a2;
  v4 = *a1;
  return (*(uint64_t (**)(char *))((*MEMORY[0x24BEE4EA0] & *v2) + 0x78))(&v4);
}

uint64_t GroupActivitySharingController.resultValue.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  return swift_release();
}

_QWORD *sub_21FD95508@<X0>(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  _QWORD *result;
  uint64_t v4;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr))((*MEMORY[0x24BEE4EA0] & **a1) + 0x70))(&v4);
  *a2 = v4;
  return result;
}

uint64_t sub_21FD95558(char *a1, _QWORD **a2)
{
  _QWORD *v2;
  char v4;

  v2 = *a2;
  v4 = *a1;
  return (*(uint64_t (**)(char *))((*MEMORY[0x24BEE4EA0] & *v2) + 0x78))(&v4);
}

uint64_t GroupActivitySharingController.resultValue.setter()
{
  void *v0;
  id v1;

  swift_getKeyPath();
  swift_getKeyPath();
  v1 = v0;
  return static Published.subscript.setter();
}

void (*GroupActivitySharingController.resultValue.modify(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return ReactionPickerView.selectedReaction.modify;
}

uint64_t key path setter for GroupActivitySharingController.$resultValue : GroupActivitySharingController(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<GroupActivitySharingResult?>.Publisher);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v8 + 16))(v7, a1);
  return (*(uint64_t (**)(char *))((*MEMORY[0x24BEE4EA0] & **a2) + 0x90))(v7);
}

uint64_t GroupActivitySharingController.$resultValue.getter()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<GroupActivitySharingResult?>);
  Published.projectedValue.getter();
  return swift_endAccess();
}

uint64_t GroupActivitySharingController.$resultValue.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<GroupActivitySharingResult?>.Publisher);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<GroupActivitySharingResult?>);
  Published.projectedValue.setter();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*GroupActivitySharingController.$resultValue.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<GroupActivitySharingResult?>.Publisher);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC22_GroupActivities_UIKit30GroupActivitySharingController__resultValue;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<GroupActivitySharingResult?>);
  Published.projectedValue.getter();
  swift_endAccess();
  return ReactionPickerView.$selectedReaction.modify;
}

uint64_t GroupActivitySharingController.resultSubscribers.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t GroupActivitySharingController.resultSubscribers.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC22_GroupActivities_UIKit30GroupActivitySharingController_resultSubscribers);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*GroupActivitySharingController.resultSubscribers.modify())()
{
  swift_beginAccess();
  return ReactionPickerView.reactions.modify;
}

uint64_t GroupActivitySharingController.shareSheetSessionID.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **(_QWORD **)(v0
                                                                    + OBJC_IVAR____TtC22_GroupActivities_UIKit30GroupActivitySharingController_controller))
                              + 0xC0))();
}

uint64_t GroupActivitySharingController.shareSheetSessionID.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **(_QWORD **)(v0
                                                                    + OBJC_IVAR____TtC22_GroupActivities_UIKit30GroupActivitySharingController_controller))
                              + 0xC8))();
}

uint64_t (*GroupActivitySharingController.shareSheetSessionID.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = *(_QWORD **)(v1 + OBJC_IVAR____TtC22_GroupActivities_UIKit30GroupActivitySharingController_controller);
  a1[2] = v3;
  *a1 = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v3) + 0xC0))();
  a1[1] = v4;
  return GroupActivitySharingController.shareSheetSessionID.modify;
}

uint64_t GroupActivitySharingController.shareSheetSessionID.modify(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = a1[1];
  v3 = *a1;
  v4 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x24BEE4EA0] & *(_QWORD *)a1[2]) + 0xC8);
  if ((a2 & 1) == 0)
    return v4(*a1, v2);
  swift_bridgeObjectRetain();
  v4(v3, v2);
  return swift_bridgeObjectRelease();
}

uint64_t GroupActivitySharingController.startStagedActivity.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **(_QWORD **)(v0
                                                                    + OBJC_IVAR____TtC22_GroupActivities_UIKit30GroupActivitySharingController_controller))
                              + 0xD8))() & 1;
}

uint64_t GroupActivitySharingController.startStagedActivity.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **(_QWORD **)(v0
                                                                    + OBJC_IVAR____TtC22_GroupActivities_UIKit30GroupActivitySharingController_controller))
                              + 0xE0))();
}

uint64_t (*GroupActivitySharingController.startStagedActivity.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)(v1 + OBJC_IVAR____TtC22_GroupActivities_UIKit30GroupActivitySharingController_controller);
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v2) + 0xD8))() & 1;
  return GroupActivitySharingController.startStagedActivity.modify;
}

uint64_t GroupActivitySharingController.startStagedActivity.modify(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))((*MEMORY[0x24BEE4EA0] & **(_QWORD **)a1) + 0xE0))(*(unsigned __int8 *)(a1 + 8));
}

uint64_t type metadata accessor for GroupActivitySharingController()
{
  uint64_t result;

  result = type metadata singleton initialization cache for GroupActivitySharingController;
  if (!type metadata singleton initialization cache for GroupActivitySharingController)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t GroupActivitySharingController.result.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[6] = a1;
  v2[7] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  v2[8] = swift_task_alloc();
  v2[9] = type metadata accessor for MainActor();
  v2[10] = static MainActor.shared.getter();
  v2[11] = dispatch thunk of Actor.unownedExecutor.getter();
  v2[12] = v3;
  return swift_task_switch();
}

uint64_t GroupActivitySharingController.result.getter()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD *);
  void (*v10)(_QWORD *, _QWORD);
  _QWORD *v11;
  uint64_t v13;

  v1 = v0[8];
  v2 = (void *)v0[7];
  v3 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v1, 1, 1, v3);
  v4 = v2;
  v5 = static MainActor.shared.getter();
  v6 = (_QWORD *)swift_allocObject();
  v7 = MEMORY[0x24BEE6930];
  v6[2] = v5;
  v6[3] = v7;
  v6[4] = v4;
  v8 = _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5Tm(v1, (uint64_t)&async function pointer to partial apply for closure #1 in GroupActivitySharingController.result.getter, (uint64_t)v6);
  v0[13] = v8;
  v9 = *(uint64_t (**)(_QWORD *))((*MEMORY[0x24BEE4EA0] & *v4) + 0xB0);
  swift_retain();
  v10 = (void (*)(_QWORD *, _QWORD))v9(v0 + 2);
  specialized Set._Variant.insert(_:)(&v13, v8);
  swift_release();
  v10(v0 + 2, 0);
  v11 = (_QWORD *)swift_task_alloc();
  v0[14] = v11;
  *v11 = v0;
  v11[1] = GroupActivitySharingController.result.getter;
  return Task<>.value.getter();
}

{
  swift_task_dealloc();
  return swift_task_switch();
}

{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t closure #1 in GroupActivitySharingController.result.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[2] = a1;
  v4[3] = a4;
  v4[4] = type metadata accessor for MainActor();
  v4[5] = static MainActor.shared.getter();
  v4[6] = dispatch thunk of Actor.unownedExecutor.getter();
  v4[7] = v5;
  return swift_task_switch();
}

uint64_t closure #1 in GroupActivitySharingController.result.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[3];
  v0[8] = static MainActor.shared.getter();
  v2 = swift_task_alloc();
  v0[9] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[10] = v3;
  *v3 = v0;
  v3[1] = closure #1 in GroupActivitySharingController.result.getter;
  return withCheckedContinuation<A>(isolation:function:_:)();
}

{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return swift_task_switch();
}

{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t partial apply for closure #1 in GroupActivitySharingController.result.getter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = partial apply for closure #1 in GroupActivitySharingController.init<A>(preparationHandler:);
  return closure #1 in GroupActivitySharingController.result.getter(a1, v4, v5, v6);
}

uint64_t closure #1 in closure #1 in GroupActivitySharingController.result.getter(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v20 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<GroupActivitySharingResult, Never>);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3, v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<GroupActivitySharingResult?>.Publisher);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Filter<Published<GroupActivitySharingResult?>.Publisher>);
  v21 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *a2) + 0x88))(v14);
  lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<GroupActivitySharingResult?>.Publisher, MEMORY[0x24BDB9EE8]);
  Publisher.filter(_:)();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v20, v3);
  v17 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v18 + v17, (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher((unint64_t *)&lazy protocol witness table cache variable for type Publishers.Filter<Published<GroupActivitySharingResult?>.Publisher> and conformance Publishers.Filter<A>, &demangling cache variable for type metadata for Publishers.Filter<Published<GroupActivitySharingResult?>.Publisher>, MEMORY[0x24BDB97F8]);
  Publisher<>.sinkOnce(_:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v16, v12);
}

BOOL closure #1 in closure #1 in closure #1 in GroupActivitySharingController.result.getter(unsigned __int8 *a1)
{
  return *a1 != 2;
}

_BYTE *closure #2 in closure #1 in closure #1 in GroupActivitySharingController.result.getter(_BYTE *result)
{
  if (*result == 2)
  {
    __break(1u);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<GroupActivitySharingResult, Never>);
    return (_BYTE *)CheckedContinuation.resume(returning:)();
  }
  return result;
}

char *GroupActivitySharingController.__allocating_init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  id v7;
  char *v8;

  v7 = objc_allocWithZone(v3);
  v8 = specialized GroupActivitySharingController.init<A>(_:)(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  return v8;
}

char *GroupActivitySharingController.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v5;

  v5 = specialized GroupActivitySharingController.init<A>(_:)(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  return v5;
}

uint64_t closure #1 in GroupActivitySharingController.init<A>(_:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v1[2] = a1;
  v1[3] = type metadata accessor for MainActor();
  v1[4] = static MainActor.shared.getter();
  type metadata accessor for UIView(0, &lazy cache variable for type metadata for TUConversationActivity);
  v2 = (_QWORD *)swift_task_alloc();
  v1[5] = v2;
  *v2 = v1;
  v2[1] = closure #1 in GroupActivitySharingController.init<A>(_:);
  return AnyGroupActivity.tuConversationActivity<A>(as:)();
}

{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 48) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 56) = a1;
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

uint64_t closure #1 in GroupActivitySharingController.init<A>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD **)(v0 + 16);
  swift_release();
  *v2 = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCSo22TUConversationActivityC_Tgm5(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = type metadata accessor for TaskPriority();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  outlined destroy of TaskPriority?(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  type metadata accessor for UIView(0, &lazy cache variable for type metadata for TUConversationActivity);
  return swift_task_create();
}

uint64_t _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = type metadata accessor for TaskPriority();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  outlined destroy of TaskPriority?(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

char *GroupActivitySharingController.__allocating_init<A>(preparationHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  id v9;

  v9 = objc_allocWithZone(v4);
  return GroupActivitySharingController.init<A>(preparationHandler:)(a1, a2, a3, a4);
}

char *GroupActivitySharingController.init<A>(preparationHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  objc_class *v25;
  char *v26;
  _QWORD *v27;
  void (*v28)(char *, _UNKNOWN **);
  char *v29;
  _QWORD *v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  objc_super v35;
  char v36;

  v33 = a1;
  v34 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<GroupActivitySharingResult?>);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = OBJC_IVAR____TtC22_GroupActivities_UIKit30GroupActivitySharingController_controller;
  v17 = objc_allocWithZone((Class)type metadata accessor for PeoplePickerController());
  v18 = v4;
  *(_QWORD *)&v4[v16] = objc_msgSend(v17, sel_init);
  v19 = &v18[OBJC_IVAR____TtC22_GroupActivities_UIKit30GroupActivitySharingController__resultValue];
  v36 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GroupActivitySharingResult?);
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v19, v15, v11);
  *(_QWORD *)&v18[OBJC_IVAR____TtC22_GroupActivities_UIKit30GroupActivitySharingController_resultSubscribers] = MEMORY[0x24BEE4B08];
  v20 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v10, 1, 1, v20);
  type metadata accessor for MainActor();
  swift_retain();
  v21 = static MainActor.shared.getter();
  v22 = (_QWORD *)swift_allocObject();
  v23 = MEMORY[0x24BEE6930];
  v22[2] = v21;
  v22[3] = v23;
  v24 = v34;
  v22[4] = a3;
  v22[5] = v24;
  v22[6] = v33;
  v22[7] = a2;
  *(_QWORD *)&v18[OBJC_IVAR____TtC22_GroupActivities_UIKit30GroupActivitySharingController_activity] = _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCSo22TUConversationActivityC_Tgm5((uint64_t)v10, (uint64_t)&async function pointer to partial apply for closure #1 in GroupActivitySharingController.init<A>(preparationHandler:), (uint64_t)v22);

  v25 = (objc_class *)type metadata accessor for GroupActivitySharingController();
  v35.receiver = v18;
  v35.super_class = v25;
  v26 = (char *)objc_msgSendSuper2(&v35, sel_initWithNibName_bundle_, 0, 0);
  v27 = *(_QWORD **)&v26[OBJC_IVAR____TtC22_GroupActivities_UIKit30GroupActivitySharingController_controller];
  v28 = *(void (**)(char *, _UNKNOWN **))((*MEMORY[0x24BEE4EA0] & *v27) + 0x150);
  v29 = v26;
  v30 = v27;
  v28(v26, &protocol witness table for GroupActivitySharingController);
  swift_release();

  return v29;
}

uint64_t closure #1 in GroupActivitySharingController.init<A>(preparationHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t);

  v7[3] = a6;
  v7[4] = a7;
  v7[2] = a1;
  v7[5] = *(_QWORD *)(a6 - 8);
  v9 = swift_task_alloc();
  v7[6] = v9;
  v10 = type metadata accessor for AnyGroupActivity();
  v7[7] = v10;
  v7[8] = *(_QWORD *)(v10 - 8);
  v7[9] = swift_task_alloc();
  v7[10] = type metadata accessor for MainActor();
  v7[11] = static MainActor.shared.getter();
  v13 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v11 = (_QWORD *)swift_task_alloc();
  v7[12] = v11;
  *v11 = v7;
  v11[1] = closure #1 in GroupActivitySharingController.init<A>(preparationHandler:);
  return v13(v9);
}

uint64_t closure #1 in GroupActivitySharingController.init<A>(preparationHandler:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 104) = v0;
  swift_task_dealloc();
  *(_QWORD *)(v2 + 112) = dispatch thunk of Actor.unownedExecutor.getter();
  *(_QWORD *)(v2 + 120) = v3;
  return swift_task_switch();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 24);
  GroupActivity.eraseToAnyGroupActivity()();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v1)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    type metadata accessor for UIView(0, &lazy cache variable for type metadata for TUConversationActivity);
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v6;
    *v6 = v0;
    v6[1] = closure #1 in GroupActivitySharingController.init<A>(preparationHandler:);
    return AnyGroupActivity.tuConversationActivity<A>(as:)();
  }
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD **)(v0 + 16);
  swift_release();
  *v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t closure #1 in GroupActivitySharingController.init<A>(preparationHandler:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD **)v2;
  *(_QWORD *)(*(_QWORD *)v2 + 136) = v1;
  swift_task_dealloc();
  v6 = v4[8];
  v5 = v4[9];
  v7 = v4[7];
  if (!v1)
    v4[18] = a1;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  return swift_task_switch();
}

char *GroupActivitySharingController.__allocating_init(itemProvider:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return GroupActivitySharingController.init(itemProvider:)(a1);
}

char *GroupActivitySharingController.init(itemProvider:)(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  char *v14;
  char *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  objc_class *v21;
  char *v22;
  _QWORD *v23;
  void (*v24)(char *, _UNKNOWN **);
  char *v25;
  _QWORD *v26;
  uint64_t v28;
  objc_super v29;
  char v30;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<GroupActivitySharingResult?>);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = OBJC_IVAR____TtC22_GroupActivities_UIKit30GroupActivitySharingController_controller;
  v13 = objc_allocWithZone((Class)type metadata accessor for PeoplePickerController());
  v14 = v1;
  *(_QWORD *)&v1[v12] = objc_msgSend(v13, sel_init);
  v15 = &v14[OBJC_IVAR____TtC22_GroupActivities_UIKit30GroupActivitySharingController__resultValue];
  v30 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GroupActivitySharingResult?);
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v15, v11, v7);
  *(_QWORD *)&v14[OBJC_IVAR____TtC22_GroupActivities_UIKit30GroupActivitySharingController_resultSubscribers] = MEMORY[0x24BEE4B08];
  v16 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v6, 1, 1, v16);
  type metadata accessor for MainActor();
  v17 = a1;
  v18 = static MainActor.shared.getter();
  v19 = (_QWORD *)swift_allocObject();
  v20 = MEMORY[0x24BEE6930];
  v19[2] = v18;
  v19[3] = v20;
  v19[4] = v17;
  *(_QWORD *)&v14[OBJC_IVAR____TtC22_GroupActivities_UIKit30GroupActivitySharingController_activity] = _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCSo22TUConversationActivityC_Tgm5((uint64_t)v6, (uint64_t)&async function pointer to partial apply for closure #1 in GroupActivitySharingController.init(itemProvider:), (uint64_t)v19);

  v21 = (objc_class *)type metadata accessor for GroupActivitySharingController();
  v29.receiver = v14;
  v29.super_class = v21;
  v22 = (char *)objc_msgSendSuper2(&v29, sel_initWithNibName_bundle_, 0, 0);
  v23 = *(_QWORD **)&v22[OBJC_IVAR____TtC22_GroupActivities_UIKit30GroupActivitySharingController_controller];
  v24 = *(void (**)(char *, _UNKNOWN **))((*MEMORY[0x24BEE4EA0] & *v23) + 0x150);
  v25 = v22;
  v26 = v23;
  v24(v22, &protocol witness table for GroupActivitySharingController);

  return v25;
}

uint64_t closure #1 in GroupActivitySharingController.init(itemProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[3] = a1;
  v4[4] = a4;
  v4[5] = type metadata accessor for MainActor();
  v4[6] = static MainActor.shared.getter();
  return swift_task_switch();
}

uint64_t closure #1 in GroupActivitySharingController.init(itemProvider:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[4];
  v2 = swift_task_alloc();
  v0[7] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[8] = v3;
  type metadata accessor for UIView(0, &lazy cache variable for type metadata for TUConversationActivity);
  *v3 = v0;
  v3[1] = closure #1 in GroupActivitySharingController.init(itemProvider:);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)();
}

{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

{
  uint64_t v0;

  *(_QWORD *)(v0 + 80) = *(_QWORD *)(v0 + 16);
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD **)(v0 + 24);
  swift_release();
  *v2 = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  swift_task_dealloc();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id GroupActivitySharingController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id GroupActivitySharingController.init(coder:)(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  objc_class *v20;
  id v21;
  uint64_t v23;
  objc_super v24;
  char v25;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<GroupActivitySharingResult?>);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = OBJC_IVAR____TtC22_GroupActivities_UIKit30GroupActivitySharingController_controller;
  v13 = objc_allocWithZone((Class)type metadata accessor for PeoplePickerController());
  v14 = v1;
  *(_QWORD *)&v1[v12] = objc_msgSend(v13, sel_init);
  v15 = &v14[OBJC_IVAR____TtC22_GroupActivities_UIKit30GroupActivitySharingController__resultValue];
  v25 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GroupActivitySharingResult?);
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v15, v11, v7);
  *(_QWORD *)&v14[OBJC_IVAR____TtC22_GroupActivities_UIKit30GroupActivitySharingController_resultSubscribers] = MEMORY[0x24BEE4B08];
  v16 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v6, 1, 1, v16);
  type metadata accessor for MainActor();
  v17 = static MainActor.shared.getter();
  v18 = swift_allocObject();
  v19 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v18 + 16) = v17;
  *(_QWORD *)(v18 + 24) = v19;
  *(_QWORD *)&v14[OBJC_IVAR____TtC22_GroupActivities_UIKit30GroupActivitySharingController_activity] = _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCSo22TUConversationActivityC_Tgm5((uint64_t)v6, (uint64_t)&async function pointer to partial apply for closure #1 in GroupActivitySharingController.init(coder:), v18);

  v20 = (objc_class *)type metadata accessor for GroupActivitySharingController();
  v24.receiver = v14;
  v24.super_class = v20;
  v21 = objc_msgSendSuper2(&v24, sel_initWithCoder_, a1);

  return v21;
}

uint64_t closure #1 in GroupActivitySharingController.init(coder:)()
{
  uint64_t v0;

  type metadata accessor for MainActor();
  *(_QWORD *)(v0 + 16) = static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

{
  uint64_t v0;
  _DWORD *v1;

  swift_release();
  lazy protocol witness table accessor for type Errno and conformance Errno();
  swift_allocError();
  *v1 = 78;
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall GroupActivitySharingController.viewWillAppear(_:)(Swift::Bool a1)
{
  _QWORD *v1;
  void *v2;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t (*v7)(void (*)(char), uint64_t);
  id v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  objc_super *v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  void *v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  objc_super v40;
  id v41;
  id v42;
  char v43;

  v2 = v1;
  v43 = 2;
  v4 = (_QWORD *)MEMORY[0x24BEE4EA0];
  (*(void (**)(char *))((*MEMORY[0x24BEE4EA0] & *v1) + 0x78))(&v43);
  v5 = *(_QWORD **)((char *)v1 + OBJC_IVAR____TtC22_GroupActivities_UIKit30GroupActivitySharingController_controller);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v2;
  v7 = *(uint64_t (**)(void (*)(char), uint64_t))((*v4 & *v5) + 0x140);
  v8 = v2;
  LOBYTE(v7) = v7(partial apply for closure #1 in GroupActivitySharingController.viewWillAppear(_:), v6);
  v9 = swift_release();
  if ((v7 & 1) != 0)
  {
    if (one-time initialization token for default != -1)
      swift_once();
    v10 = type metadata accessor for Logger();
    __swift_project_value_buffer(v10, (uint64_t)static Log.default);
    v11 = Logger.logObject.getter();
    v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_21FD90000, v11, v12, "Successfully able to bypass viewController", v13, 2u);
      MEMORY[0x2207D49E4](v13, -1, -1);
    }

    v14 = type metadata accessor for GroupActivitySharingController();
    v40.receiver = v8;
    v15 = &v40;
    goto LABEL_19;
  }
  v16 = (void *)(*(uint64_t (**)(uint64_t))((*v4 & *v5) + 0x128))(v9);
  if (!v16)
  {
    if (one-time initialization token for default != -1)
      swift_once();
    v36 = type metadata accessor for Logger();
    __swift_project_value_buffer(v36, (uint64_t)static Log.default);
    v37 = Logger.logObject.getter();
    v38 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v39 = 0;
      _os_log_impl(&dword_21FD90000, v37, v38, "Failed to fetch extensionViewController", v39, 2u);
      MEMORY[0x2207D49E4](v39, -1, -1);
    }

    v43 = 1;
    GroupActivitySharingController.dismissViewController(result:)((_GroupActivities_UIKit::GroupActivitySharingResult)&v43);
    v14 = type metadata accessor for GroupActivitySharingController();
    v42 = v8;
    v15 = (objc_super *)&v42;
    goto LABEL_19;
  }
  v17 = v16;
  v18 = objc_msgSend(v16, sel_view);
  if (!v18)
  {
    __break(1u);
    goto LABEL_21;
  }
  v19 = v18;
  v20 = objc_msgSend(v8, sel_view);
  if (!v20)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v21 = v20;
  objc_msgSend(v20, sel_bounds);
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v29 = v28;

  objc_msgSend(v19, sel_setFrame_, v23, v25, v27, v29);
  v30 = objc_msgSend(v17, sel_view);
  if (!v30)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v31 = v30;
  objc_msgSend(v30, sel_setAutoresizingMask_, 18);

  v32 = objc_msgSend(v8, sel_view);
  if (!v32)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v33 = v32;
  v34 = objc_msgSend(v17, sel_view);
  if (v34)
  {
    v35 = v34;
    objc_msgSend(v33, sel_addSubview_, v34);

    v14 = type metadata accessor for GroupActivitySharingController();
    v41 = v8;
    v15 = (objc_super *)&v41;
LABEL_19:
    v15->super_class = (Class)v14;
    -[objc_super viewDidAppear:](v15, sel_viewDidAppear_, a1);
    return;
  }
LABEL_24:
  __break(1u);
}

void closure #1 in GroupActivitySharingController.viewWillAppear(_:)(char a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  BOOL v6;

  if (one-time initialization token for default != -1)
    swift_once();
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Log.default);
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v5 = 67109120;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_21FD90000, v3, v4, "Created activity status: %{BOOL}d", v5, 8u);
    MEMORY[0x2207D49E4](v5, -1, -1);
  }

  v6 = (a1 & 1) == 0;
  GroupActivitySharingController.dismissViewController(result:)((_GroupActivities_UIKit::GroupActivitySharingResult)&v6);
}

Swift::Void __swiftcall GroupActivitySharingController.dismissViewController(result:)(_GroupActivities_UIKit::GroupActivitySharingResult result)
{
  void *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _QWORD *v17;
  id v18;
  _QWORD *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  _QWORD *v31;
  char v32;

  v2 = (char *)result;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x24BDAC7A8](v3, v4);
  v30 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchPredicate();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (uint64_t *)((char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *v2;
  if (one-time initialization token for default != -1)
    swift_once();
  v12 = type metadata accessor for Logger();
  __swift_project_value_buffer(v12, (uint64_t)static Log.default);
  v13 = v1;
  v14 = Logger.logObject.getter();
  v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v27 = (_QWORD *)swift_slowAlloc();
    v28 = v7;
    *(_DWORD *)v16 = 138412290;
    v31 = v13;
    v17 = v13;
    v29 = v6;
    v18 = v17;
    v7 = v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v19 = v27;
    *v27 = v13;

    v6 = v29;
    _os_log_impl(&dword_21FD90000, v14, v15, "ViewController %@ told to dismiss", v16, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    MEMORY[0x2207D49E4](v19, -1, -1);
    MEMORY[0x2207D49E4](v16, -1, -1);
  }
  else
  {

  }
  type metadata accessor for UIView(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  *v10 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v7 + 104))(v10, *MEMORY[0x24BEE5610], v6);
  v20 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v10, v6);
  if ((v20 & 1) != 0)
  {
    v32 = v11;
    (*(void (**)(char *))((*MEMORY[0x24BEE4EA0] & *v13) + 0x78))(&v32);
    v21 = type metadata accessor for TaskPriority();
    v22 = (uint64_t)v30;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v30, 1, 1, v21);
    type metadata accessor for MainActor();
    v23 = v13;
    v24 = static MainActor.shared.getter();
    v25 = (_QWORD *)swift_allocObject();
    v26 = MEMORY[0x24BEE6930];
    v25[2] = v24;
    v25[3] = v26;
    v25[4] = v23;
    _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5Tm(v22, (uint64_t)&async function pointer to partial apply for closure #1 in GroupActivitySharingController.dismissViewController(result:), (uint64_t)v25);
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall GroupActivitySharingController.viewDidLoad()()
{
  char *v0;
  char *v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  void (*v7)(void (*)(uint64_t), uint64_t);
  uint64_t v8;
  objc_super *v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _QWORD *v15;
  char *v16;
  objc_super v17;
  char *v18;
  char *v19;

  v1 = v0;
  v2 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v3 = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **(_QWORD **)&v0[OBJC_IVAR____TtC22_GroupActivities_UIKit30GroupActivitySharingController_controller])
                            + 0x128))();
  if (v3)
  {
    v4 = (void *)v3;
    objc_msgSend(v0, sel_addChildViewController_, v3);
    objc_msgSend(v4, sel_didMoveToParentViewController_, v0);
    v5 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for GroupActivityPlaceholderSharingController()), sel_init);
    v6 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v7 = *(void (**)(void (*)(uint64_t), uint64_t))((*v2 & *v5) + 0x68);
    swift_retain();
    v7(partial apply for closure #1 in GroupActivitySharingController.viewDidLoad(), v6);
    swift_release();
    objc_msgSend(v4, sel_setPlaceholderViewController_, v5);

    v8 = type metadata accessor for GroupActivitySharingController();
    v17.receiver = v1;
    v9 = &v17;
  }
  else
  {
    if (one-time initialization token for default != -1)
      swift_once();
    v10 = type metadata accessor for Logger();
    __swift_project_value_buffer(v10, (uint64_t)static Log.default);
    v11 = v0;
    v12 = Logger.logObject.getter();
    v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v14 = 138412290;
      v18 = v11;
      v16 = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *v15 = v11;

      _os_log_impl(&dword_21FD90000, v12, v13, "Failed to build remote hostViewController for %@", v14, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      MEMORY[0x2207D49E4](v15, -1, -1);
      MEMORY[0x2207D49E4](v14, -1, -1);
    }
    else
    {

    }
    LOBYTE(v18) = 1;
    GroupActivitySharingController.dismissViewController(result:)((_GroupActivities_UIKit::GroupActivitySharingResult)&v18);
    v8 = type metadata accessor for GroupActivitySharingController();
    v19 = v11;
    v9 = (objc_super *)&v19;
  }
  v9->super_class = (Class)v8;
  -[objc_super viewDidLoad](v9, sel_viewDidLoad);
}

void closure #1 in GroupActivitySharingController.viewDidLoad()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char v5;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x2207D4A98](v2);
  if (v3)
  {
    v4 = (void *)v3;
    v5 = 1;
    GroupActivitySharingController.dismissViewController(result:)((_GroupActivities_UIKit::GroupActivitySharingResult)&v5);

  }
}

id GroupActivitySharingController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)MEMORY[0x2207D3EF8]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void GroupActivitySharingController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id GroupActivitySharingController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GroupActivitySharingController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t closure #1 in GroupActivitySharingController.dismissViewController(result:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[3] = a4;
  type metadata accessor for MainActor();
  v4[4] = static MainActor.shared.getter();
  v4[5] = dispatch thunk of Actor.unownedExecutor.getter();
  v4[6] = v5;
  return swift_task_switch();
}

uint64_t closure #1 in GroupActivitySharingController.dismissViewController(result:)()
{
  uint64_t v0;
  void **v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  BOOL v22;
  void *v23;
  uint8_t *v24;
  id v25;
  _QWORD *v26;

  v1 = (void **)(v0 + 24);
  v2 = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **(_QWORD **)(v0 + 24)) + 0xA0))();
  *(_QWORD *)(v0 + 56) = v2;
  v3 = *(_BYTE *)(v2 + 32);
  *(_BYTE *)(v0 + 97) = v3;
  v4 = -1;
  v5 = -1 << v3;
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(v2 + 56);
  if (v6)
  {
    v7 = 0;
    v8 = __clz(__rbit64(v6));
    v9 = (v6 - 1) & v6;
LABEL_5:
    *(_QWORD *)(v0 + 64) = v7;
    *(_QWORD *)(v0 + 72) = v9;
    *(_QWORD *)(v0 + 80) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8);
    swift_retain();
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v10;
    *v10 = v0;
    v10[1] = closure #1 in GroupActivitySharingController.dismissViewController(result:);
    return Task<>.value.getter();
  }
  v12 = 63 - v5;
  if (v12 > 0x7F)
  {
    v13 = *(_QWORD *)(v2 + 64);
    if (v13)
    {
      v7 = 1;
LABEL_9:
      v9 = (v13 - 1) & v13;
      v8 = __clz(__rbit64(v13)) + (v7 << 6);
      goto LABEL_5;
    }
    if (v12 >= 0xC0)
    {
      v13 = *(_QWORD *)(v2 + 72);
      if (v13)
      {
        v7 = 2;
        goto LABEL_9;
      }
      if (v12 >= 0x100)
      {
        v13 = *(_QWORD *)(v2 + 80);
        if (v13)
        {
          v7 = 3;
          goto LABEL_9;
        }
        if (v12 >= 0x140)
        {
          v13 = *(_QWORD *)(v2 + 88);
          if (v13)
          {
            v7 = 4;
            goto LABEL_9;
          }
          v14 = 0;
          v15 = v12 >> 6;
          if (v15 <= 5)
            v15 = 5;
          v16 = v15 - 5;
          while (v16 != v14)
          {
            v13 = *(_QWORD *)(v2 + 96 + 8 * v14++);
            if (v13)
            {
              v7 = v14 + 4;
              goto LABEL_9;
            }
          }
        }
      }
    }
  }
  swift_release();
  swift_release();
  if (one-time initialization token for default != -1)
    swift_once();
  v17 = *v1;
  v18 = type metadata accessor for Logger();
  __swift_project_value_buffer(v18, (uint64_t)static Log.default);
  v19 = v17;
  v20 = Logger.logObject.getter();
  v21 = static os_log_type_t.default.getter();
  v22 = os_log_type_enabled(v20, v21);
  v23 = *v1;
  if (v22)
  {
    v24 = (uint8_t *)swift_slowAlloc();
    v26 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v24 = 138412290;
    *(_QWORD *)(v0 + 16) = v23;
    v25 = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *v26 = v23;

    _os_log_impl(&dword_21FD90000, v20, v21, "Self dismissing %@ after waiting for listeners to dismiss", v24, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    MEMORY[0x2207D49E4](v26, -1, -1);
    MEMORY[0x2207D49E4](v24, -1, -1);
  }
  else
  {

  }
  objc_msgSend(*(id *)(v0 + 24), sel_dismissViewControllerAnimated_completion_, 1, 0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  swift_task_dealloc();
  return swift_task_switch();
}

{
  uint64_t v0;
  int64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  _QWORD *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  BOOL v18;
  void *v19;
  uint8_t *v20;
  id v21;
  _QWORD *v22;

  swift_release();
  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  if (v2)
  {
    v3 = __clz(__rbit64(v2));
    v4 = (v2 - 1) & v2;
    v5 = v3 | (v1 << 6);
    result = *(_QWORD *)(v0 + 56);
LABEL_3:
    *(_QWORD *)(v0 + 64) = v1;
    *(_QWORD *)(v0 + 72) = v4;
    *(_QWORD *)(v0 + 80) = *(_QWORD *)(*(_QWORD *)(result + 48) + 8 * v5);
    swift_retain();
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v7;
    *v7 = v0;
    v7[1] = closure #1 in GroupActivitySharingController.dismissViewController(result:);
    return Task<>.value.getter();
  }
  v8 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
    goto LABEL_24;
  }
  v9 = (unint64_t)((1 << *(_BYTE *)(v0 + 97)) + 63) >> 6;
  result = *(_QWORD *)(v0 + 56);
  if (v8 >= v9)
    goto LABEL_18;
  v10 = result + 56;
  v11 = *(_QWORD *)(result + 56 + 8 * v8);
  ++v1;
  if (v11)
  {
LABEL_7:
    v4 = (v11 - 1) & v11;
    v5 = __clz(__rbit64(v11)) + (v1 << 6);
    goto LABEL_3;
  }
  v1 = v8 + 1;
  if (v8 + 1 >= v9)
    goto LABEL_18;
  v11 = *(_QWORD *)(v10 + 8 * v1);
  if (v11)
    goto LABEL_7;
  v1 = v8 + 2;
  if (v8 + 2 >= v9)
    goto LABEL_18;
  v11 = *(_QWORD *)(v10 + 8 * v1);
  if (v11)
    goto LABEL_7;
  v12 = v8 + 3;
  if (v12 >= v9)
  {
LABEL_18:
    swift_release();
    swift_release();
    if (one-time initialization token for default == -1)
    {
LABEL_19:
      v13 = *(void **)(v0 + 24);
      v14 = type metadata accessor for Logger();
      __swift_project_value_buffer(v14, (uint64_t)static Log.default);
      v15 = v13;
      v16 = Logger.logObject.getter();
      v17 = static os_log_type_t.default.getter();
      v18 = os_log_type_enabled(v16, v17);
      v19 = *(void **)(v0 + 24);
      if (v18)
      {
        v20 = (uint8_t *)swift_slowAlloc();
        v22 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v20 = 138412290;
        *(_QWORD *)(v0 + 16) = v19;
        v21 = v19;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *v22 = v19;

        _os_log_impl(&dword_21FD90000, v16, v17, "Self dismissing %@ after waiting for listeners to dismiss", v20, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSObject?);
        swift_arrayDestroy();
        MEMORY[0x2207D49E4](v22, -1, -1);
        MEMORY[0x2207D49E4](v20, -1, -1);
      }
      else
      {

      }
      objc_msgSend(*(id *)(v0 + 24), sel_dismissViewControllerAnimated_completion_, 1, 0);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
LABEL_24:
    swift_once();
    goto LABEL_19;
  }
  v11 = *(_QWORD *)(v10 + 8 * v12);
  if (v11)
  {
    v1 = v12;
    goto LABEL_7;
  }
  while (1)
  {
    v1 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v1 >= v9)
      goto LABEL_18;
    v11 = *(_QWORD *)(v10 + 8 * v1);
    ++v12;
    if (v11)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t protocol witness for PeoplePickerViewController.activity.getter in conformance GroupActivitySharingController()
{
  return swift_retain();
}

uint64_t GroupActivitySharingController.registerResultHandler(_:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(_QWORD *, _QWORD);
  void *v26;
  _QWORD v27[4];
  uint64_t v28;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v27[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for default != -1)
    swift_once();
  v10 = type metadata accessor for Logger();
  __swift_project_value_buffer(v10, (uint64_t)static Log.default);
  swift_retain_n();
  v11 = Logger.logObject.getter();
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v26 = v3;
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v28 = v14;
    *(_DWORD *)v13 = 136315138;
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = a1;
    *(_QWORD *)(v15 + 24) = a2;
    v27[0] = partial apply for thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
    v27[1] = v15;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (_:));
    v16 = String.init<A>(reflecting:)();
    v27[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v17, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    v3 = v26;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FD90000, v11, v12, "Received register with resultHandler %s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207D49E4](v14, -1, -1);
    MEMORY[0x2207D49E4](v13, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v18 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v9, 1, 1, v18);
  type metadata accessor for MainActor();
  swift_retain();
  v19 = v3;
  v20 = static MainActor.shared.getter();
  v21 = (_QWORD *)swift_allocObject();
  v22 = MEMORY[0x24BEE6930];
  v21[2] = v20;
  v21[3] = v22;
  v21[4] = v19;
  v21[5] = a1;
  v21[6] = a2;
  v23 = _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5Tm((uint64_t)v9, (uint64_t)&async function pointer to partial apply for closure #1 in GroupActivitySharingController.registerResultHandler(_:), (uint64_t)v21);
  v24 = (uint64_t (*)(_QWORD *, _QWORD))(*(uint64_t (**)(_QWORD *))((*MEMORY[0x24BEE4EA0] & *v19)
                                                                                      + 0xB0))(v27);
  specialized Set._Variant.insert(_:)(&v28, v23);
  swift_release();
  return v24(v27, 0);
}

uint64_t closure #1 in GroupActivitySharingController.registerResultHandler(_:)(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  int *v8;
  _QWORD *v9;
  uint64_t (*v11)(_QWORD *);

  v6[7] = a5;
  v6[8] = a6;
  v6[6] = a1;
  v6[9] = type metadata accessor for MainActor();
  v6[10] = static MainActor.shared.getter();
  v8 = *(int **)((*MEMORY[0x24BEE4EA0] & *a4) + 0xE8);
  v11 = (uint64_t (*)(_QWORD *))((char *)v8 + *v8);
  v9 = (_QWORD *)swift_task_alloc();
  v6[11] = v9;
  *v9 = v6;
  v9[1] = closure #1 in GroupActivitySharingController.registerResultHandler(_:);
  return v11(v6 + 12);
}

uint64_t closure #1 in GroupActivitySharingController.registerResultHandler(_:)()
{
  swift_task_dealloc();
  dispatch thunk of Actor.unownedExecutor.getter();
  return swift_task_switch();
}

{
  uint64_t v0;
  int v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _BYTE *v15;
  uint64_t v17;

  swift_release();
  v1 = *(unsigned __int8 *)(v0 + 96);
  if (one-time initialization token for default != -1)
    swift_once();
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Log.default);
  swift_retain_n();
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.default.getter();
  v5 = os_log_type_enabled(v3, v4);
  v6 = *(_QWORD *)(v0 + 64);
  if (v5)
  {
    v7 = *(_QWORD *)(v0 + 56);
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v17 = v9;
    *(_DWORD *)v8 = 136315394;
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = v7;
    *(_QWORD *)(v10 + 24) = v6;
    *(_QWORD *)(v0 + 16) = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()partial apply;
    *(_QWORD *)(v0 + 24) = v10;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (_:));
    v11 = String.init<A>(reflecting:)();
    *(_QWORD *)(v0 + 32) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v12, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v8 + 12) = 2080;
    *(_BYTE *)(v0 + 97) = v1;
    v13 = String.init<A>(reflecting:)();
    *(_QWORD *)(v0 + 40) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v14, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FD90000, v3, v4, "Responding to resultHandler %s for result: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207D49E4](v9, -1, -1);
    MEMORY[0x2207D49E4](v8, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  v15 = *(_BYTE **)(v0 + 48);
  (*(void (**)(_QWORD))(v0 + 56))(v1 ^ 1u);
  *v15 = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5TQ0_;
  return v6(a1);
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTR22_GroupActivities_UIKit0D21ActivitySharingResultO_Tg5(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTR22_GroupActivities_UIKit0D21ActivitySharingResultO_Tg5TQ0_;
  return v6(a1);
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTR22_GroupActivities_UIKit0D21ActivitySharingResultO_Tg5TQ0_()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = specialized _StringGuts._deconstructUTF8<A>(scratch:)(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      outlined init with copy of Any((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      outlined init with copy of Any((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t specialized _StringGuts._deconstructUTF8<A>(scratch:)(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = _StringGuts._allocateForDeconstruct()(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = _StringObject.sharedUTF8.getter();
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
LABEL_17:
    result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t _StringGuts._allocateForDeconstruct()(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = specialized _copyCollectionToContiguousArray<A>(_:)(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t specialized _copyCollectionToContiguousArray<A>(_:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = specialized _ContiguousArrayBuffer.init(_uninitializedCount:minimumCapacity:)(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = _StringGuts.copyUTF8(into:)();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
LABEL_10:
      v2 = String.UTF8View._foreignCount()();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
LABEL_14:
    result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *specialized _ContiguousArrayBuffer.init(_uninitializedCount:minimumCapacity:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UInt8>);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UInt8>);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t specialized Set._Variant.insert(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Swift::Int v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v25;
  uint64_t v26;
  char *v27;
  _QWORD v28[9];

  v3 = v2;
  v6 = type metadata accessor for Reaction(0);
  v7 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v12);
  v27 = (char *)&v25 - v13;
  v14 = *v2;
  Hasher.init(_seed:)();
  type metadata accessor for UUID();
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  swift_bridgeObjectRetain();
  dispatch thunk of Hashable.hash(into:)();
  v15 = *(int *)(v6 + 20);
  v16 = *(_QWORD *)(a2 + v15);
  swift_bridgeObjectRetain();
  specialized Set.hash(into:)((uint64_t)v28, v16);
  swift_bridgeObjectRelease();
  v17 = Hasher._finalize()();
  v18 = -1 << *(_BYTE *)(v14 + 32);
  v19 = v17 & ~v18;
  if (((*(_QWORD *)(v14 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) != 0)
  {
    v25 = v3;
    v26 = a1;
    v20 = ~v18;
    v21 = *(_QWORD *)(v7 + 72);
    do
    {
      outlined init with copy of Reaction(*(_QWORD *)(v14 + 48) + v21 * v19, (uint64_t)v11);
      if ((static UUID.== infix(_:_:)() & 1) != 0
        && (specialized static Set.== infix(_:_:)(*(_QWORD *)&v11[*(int *)(v6 + 20)], *(_QWORD *)(a2 + v15)) & 1) != 0)
      {
        outlined destroy of Reaction((uint64_t)v11);
        swift_bridgeObjectRelease();
        outlined destroy of Reaction(a2);
        outlined init with copy of Reaction(*(_QWORD *)(*v25 + 48) + v21 * v19, v26);
        return 0;
      }
      outlined destroy of Reaction((uint64_t)v11);
      v19 = (v19 + 1) & v20;
    }
    while (((*(_QWORD *)(v14 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) != 0);
    swift_bridgeObjectRelease();
    v3 = v25;
    a1 = v26;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v23 = (uint64_t)v27;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  outlined init with copy of Reaction(a2, v23);
  v28[0] = *v3;
  *v3 = 0x8000000000000000;
  specialized _NativeSet.insertNew(_:at:isUnique:)(v23, v19, isUniquelyReferenced_nonNull_native);
  *v3 = v28[0];
  swift_bridgeObjectRelease();
  outlined init with take of Reaction(a2, a1);
  return 1;
}

uint64_t specialized Set._Variant.insert(_:)(_QWORD *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char isUniquelyReferenced_nonNull_native;
  Swift::Int v13;
  _QWORD *i;
  uint64_t v16;

  v5 = *v2;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  Task.hash(into:)();
  v6 = Hasher._finalize()();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  v9 = v5 + 56;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
    i = a1;
    goto LABEL_8;
  }
  swift_retain();
  v10 = static Task.== infix(_:_:)();
  swift_release();
  if ((v10 & 1) == 0)
  {
    v8 = (v8 + 1) & ~v7;
    for (i = a1; ((*(_QWORD *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0; v8 = (v8 + 1) & ~v7)
    {
      swift_retain();
      v11 = static Task.== infix(_:_:)();
      swift_release();
      if ((v11 & 1) != 0)
        goto LABEL_9;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v16 = *v2;
    *v2 = 0x8000000000000000;
    v13 = swift_retain();
    specialized _NativeSet.insertNew(_:at:isUnique:)(v13, v8, isUniquelyReferenced_nonNull_native);
    *v2 = v16;
    swift_bridgeObjectRelease();
    *i = a2;
    return 1;
  }
LABEL_9:
  swift_release();
  swift_bridgeObjectRelease();
  *a1 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v8);
  swift_retain();
  return 0;
}

uint64_t specialized Set._Variant.insert(_:)(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_retain();
    v8 = __CocoaSet.member(for:)();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      type metadata accessor for AnyCancellable();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v18;
      swift_unknownObjectRelease();
      return 0;
    }
    result = __CocoaSet.count.getter();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v16 = specialized _NativeSet.init(_:capacity:)(v7, result + 1);
    v20 = v16;
    if (*(_QWORD *)(v16 + 24) <= *(_QWORD *)(v16 + 16))
    {
      swift_retain();
      specialized _NativeSet.resize(capacity:)();
      v17 = v20;
    }
    else
    {
      v17 = v16;
      swift_retain();
    }
    specialized _NativeSet._unsafeInsertNew(_:)(a2, v17);
    *v3 = v17;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  type metadata accessor for AnyCancellable();
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type AnyCancellable and conformance AnyCancellable, (uint64_t (*)(uint64_t))MEMORY[0x24BDB9B60], MEMORY[0x24BDB9B70]);
  swift_bridgeObjectRetain();
  v10 = dispatch thunk of Hashable._rawHashValue(seed:)();
  v11 = -1 << *(_BYTE *)(v6 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *v2;
    *v2 = 0x8000000000000000;
    v15 = swift_retain();
    specialized _NativeSet.insertNew(_:at:isUnique:)(v15, v12, isUniquelyReferenced_nonNull_native);
    *v2 = v19;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  v13 = ~v11;
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type AnyCancellable and conformance AnyCancellable, (uint64_t (*)(uint64_t))MEMORY[0x24BDB9B60], MEMORY[0x24BDB9B78]);
  while ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
  {
    v12 = (v12 + 1) & v13;
    if (((*(_QWORD *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      goto LABEL_11;
  }
  swift_release();
  swift_bridgeObjectRelease();
  *a1 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v12);
  swift_retain();
  return 0;
}

uint64_t specialized _NativeSet.init(_:capacity:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _SetStorage<AnyCancellable>);
    v2 = static _SetStorage.convert(_:capacity:)();
    v15 = v2;
    __CocoaSet.makeIterator()();
    if (__CocoaSet.Iterator.next()())
    {
      type metadata accessor for AnyCancellable();
      v3 = MEMORY[0x24BDB9B70];
      do
      {
        swift_dynamicCast();
        v2 = v15;
        if (*(_QWORD *)(v15 + 24) <= *(_QWORD *)(v15 + 16))
        {
          specialized _NativeSet.resize(capacity:)();
          v2 = v15;
        }
        lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type AnyCancellable and conformance AnyCancellable, (uint64_t (*)(uint64_t))MEMORY[0x24BDB9B60], v3);
        result = dispatch thunk of Hashable._rawHashValue(seed:)();
        v5 = v2 + 56;
        v6 = -1 << *(_BYTE *)(v2 + 32);
        v7 = result & ~v6;
        v8 = v7 >> 6;
        if (((-1 << v7) & ~*(_QWORD *)(v2 + 56 + 8 * (v7 >> 6))) != 0)
        {
          v9 = __clz(__rbit64((-1 << v7) & ~*(_QWORD *)(v2 + 56 + 8 * (v7 >> 6)))) | v7 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v10 = 0;
          v11 = (unint64_t)(63 - v6) >> 6;
          do
          {
            if (++v8 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v12 = v8 == v11;
            if (v8 == v11)
              v8 = 0;
            v10 |= v12;
            v13 = *(_QWORD *)(v5 + 8 * v8);
          }
          while (v13 == -1);
          v9 = __clz(__rbit64(~v13)) + (v8 << 6);
        }
        *(_QWORD *)(v5 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v9) = v14;
        ++*(_QWORD *)(v2 + 16);
      }
      while (__CocoaSet.Iterator.next()());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x24BEE4B08];
  }
  return v2;
}

uint64_t specialized _NativeSet.resize(capacity:)()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  _QWORD *v27;
  int64_t v28;
  uint64_t v29;
  char v30[72];

  v1 = v0;
  v2 = type metadata accessor for Reaction(0);
  v29 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<Reaction>);
  v7 = static _SetStorage.resize(original:capacity:move:)();
  v8 = v7;
  if (*(_QWORD *)(v6 + 16))
  {
    v9 = 1 << *(_BYTE *)(v6 + 32);
    v10 = *(_QWORD *)(v6 + 56);
    v26 = v0;
    v27 = (_QWORD *)(v6 + 56);
    if (v9 < 64)
      v11 = ~(-1 << v9);
    else
      v11 = -1;
    v12 = v11 & v10;
    v28 = (unint64_t)(v9 + 63) >> 6;
    v13 = v7 + 56;
    result = swift_retain();
    v15 = 0;
    while (1)
    {
      if (v12)
      {
        v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v17 = v16 | (v15 << 6);
      }
      else
      {
        v21 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v21 >= v28)
          goto LABEL_23;
        v22 = v27[v21];
        ++v15;
        if (!v22)
        {
          v15 = v21 + 1;
          if (v21 + 1 >= v28)
            goto LABEL_23;
          v22 = v27[v15];
          if (!v22)
          {
            v15 = v21 + 2;
            if (v21 + 2 >= v28)
              goto LABEL_23;
            v22 = v27[v15];
            if (!v22)
            {
              v23 = v21 + 3;
              if (v23 >= v28)
              {
LABEL_23:
                swift_release();
                v24 = 1 << *(_BYTE *)(v6 + 32);
                if (v24 > 63)
                  bzero(v27, ((unint64_t)(v24 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v27 = -1 << v24;
                v1 = v26;
                *(_QWORD *)(v6 + 16) = 0;
                break;
              }
              v22 = v27[v23];
              if (!v22)
              {
                while (1)
                {
                  v15 = v23 + 1;
                  if (__OFADD__(v23, 1))
                    goto LABEL_29;
                  if (v15 >= v28)
                    goto LABEL_23;
                  v22 = v27[v15];
                  ++v23;
                  if (v22)
                    goto LABEL_22;
                }
              }
              v15 = v23;
            }
          }
        }
LABEL_22:
        v12 = (v22 - 1) & v22;
        v17 = __clz(__rbit64(v22)) + (v15 << 6);
      }
      v18 = *(_QWORD *)(v29 + 72);
      outlined init with take of Reaction(*(_QWORD *)(v6 + 48) + v18 * v17, (uint64_t)v5);
      Hasher.init(_seed:)();
      type metadata accessor for UUID();
      lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      dispatch thunk of Hashable.hash(into:)();
      v19 = *(_QWORD *)&v5[*(int *)(v2 + 20)];
      swift_bridgeObjectRetain();
      specialized Set.hash(into:)((uint64_t)v30, v19);
      swift_bridgeObjectRelease();
      Hasher._finalize()();
      v20 = _HashTable.nextHole(atOrAfter:)();
      *(_QWORD *)(v13 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      result = outlined init with take of Reaction((uint64_t)v5, *(_QWORD *)(v8 + 48) + v20 * v18);
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v1 = v8;
  return result;
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<Task<GroupActivitySharingResult, Never>>);
  v2 = static _SetStorage.resize(original:capacity:move:)();
  v3 = v2;
  if (*(_QWORD *)(v1 + 16))
  {
    v4 = 1 << *(_BYTE *)(v1 + 32);
    v5 = (_QWORD *)(v1 + 56);
    if (v4 < 64)
      v6 = ~(-1 << v4);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v1 + 56);
    v8 = (unint64_t)(v4 + 63) >> 6;
    v9 = v2 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v14 = v13 | (v11 << 6);
      }
      else
      {
        v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v8)
          goto LABEL_33;
        v16 = v5[v15];
        ++v11;
        if (!v16)
        {
          v11 = v15 + 1;
          if (v15 + 1 >= v8)
            goto LABEL_33;
          v16 = v5[v11];
          if (!v16)
          {
            v11 = v15 + 2;
            if (v15 + 2 >= v8)
              goto LABEL_33;
            v16 = v5[v11];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v8)
              {
LABEL_33:
                swift_release();
                v26 = 1 << *(_BYTE *)(v1 + 32);
                if (v26 > 63)
                  bzero((void *)(v1 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v5 = -1 << v26;
                *(_QWORD *)(v1 + 16) = 0;
                break;
              }
              v16 = v5[v17];
              if (!v16)
              {
                while (1)
                {
                  v11 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v16 = v5[v11];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v11 = v17;
            }
          }
        }
LABEL_23:
        v7 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v11 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v14);
      Hasher.init(_seed:)();
      Task.hash(into:)();
      result = Hasher._finalize()();
      v19 = -1 << *(_BYTE *)(v3 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v9 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v9 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v9 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v3 + 16);
    }
  }
  result = swift_release();
  *v0 = v3;
  return result;
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  _QWORD *v26;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _SetStorage<AnyCancellable>);
  v2 = static _SetStorage.resize(original:capacity:move:)();
  v3 = v2;
  if (*(_QWORD *)(v1 + 16))
  {
    v4 = 1 << *(_BYTE *)(v1 + 32);
    v26 = (_QWORD *)(v1 + 56);
    if (v4 < 64)
      v5 = ~(-1 << v4);
    else
      v5 = -1;
    v6 = v5 & *(_QWORD *)(v1 + 56);
    v25 = (unint64_t)(v4 + 63) >> 6;
    v7 = v2 + 56;
    result = swift_retain();
    v9 = 0;
    while (1)
    {
      if (v6)
      {
        v11 = __clz(__rbit64(v6));
        v6 &= v6 - 1;
        v12 = v11 | (v9 << 6);
      }
      else
      {
        v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v13 >= v25)
          goto LABEL_33;
        v14 = v26[v13];
        ++v9;
        if (!v14)
        {
          v9 = v13 + 1;
          if (v13 + 1 >= v25)
            goto LABEL_33;
          v14 = v26[v9];
          if (!v14)
          {
            v9 = v13 + 2;
            if (v13 + 2 >= v25)
              goto LABEL_33;
            v14 = v26[v9];
            if (!v14)
            {
              v15 = v13 + 3;
              if (v15 >= v25)
              {
LABEL_33:
                swift_release();
                v24 = 1 << *(_BYTE *)(v1 + 32);
                if (v24 > 63)
                  bzero(v26, ((unint64_t)(v24 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v26 = -1 << v24;
                *(_QWORD *)(v1 + 16) = 0;
                break;
              }
              v14 = v26[v15];
              if (!v14)
              {
                while (1)
                {
                  v9 = v15 + 1;
                  if (__OFADD__(v15, 1))
                    goto LABEL_39;
                  if (v9 >= v25)
                    goto LABEL_33;
                  v14 = v26[v9];
                  ++v15;
                  if (v14)
                    goto LABEL_23;
                }
              }
              v9 = v15;
            }
          }
        }
LABEL_23:
        v6 = (v14 - 1) & v14;
        v12 = __clz(__rbit64(v14)) + (v9 << 6);
      }
      v16 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v12);
      type metadata accessor for AnyCancellable();
      lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type AnyCancellable and conformance AnyCancellable, (uint64_t (*)(uint64_t))MEMORY[0x24BDB9B60], MEMORY[0x24BDB9B70]);
      result = dispatch thunk of Hashable._rawHashValue(seed:)();
      v17 = -1 << *(_BYTE *)(v3 + 32);
      v18 = result & ~v17;
      v19 = v18 >> 6;
      if (((-1 << v18) & ~*(_QWORD *)(v7 + 8 * (v18 >> 6))) != 0)
      {
        v10 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v7 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v20 = 0;
        v21 = (unint64_t)(63 - v17) >> 6;
        do
        {
          if (++v19 == v21 && (v20 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v22 = v19 == v21;
          if (v19 == v21)
            v19 = 0;
          v20 |= v22;
          v23 = *(_QWORD *)(v7 + 8 * v19);
        }
        while (v23 == -1);
        v10 = __clz(__rbit64(~v23)) + (v19 << 6);
      }
      *(_QWORD *)(v7 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v10) = v16;
      ++*(_QWORD *)(v3 + 16);
    }
  }
  result = swift_release();
  *v0 = v3;
  return result;
}

unint64_t specialized _NativeSet._unsafeInsertNew(_:)(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  type metadata accessor for AnyCancellable();
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type AnyCancellable and conformance AnyCancellable, (uint64_t (*)(uint64_t))MEMORY[0x24BDB9B60], MEMORY[0x24BDB9B70]);
  dispatch thunk of Hashable._rawHashValue(seed:)();
  result = _HashTable.nextHole(atOrAfter:)();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t specialized _NativeSet.insertNew(_:at:isUnique:)(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::Int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  _BYTE v27[72];

  v7 = type metadata accessor for Reaction(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = &v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = *(_QWORD *)(*v3 + 16);
  v13 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v13 <= v12 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      specialized _NativeSet.resize(capacity:)();
    }
    else
    {
      if (v13 > v12)
      {
        v14 = v8;
        specialized _NativeSet.copy()();
        goto LABEL_15;
      }
      specialized _NativeSet.copyAndResize(capacity:)();
    }
    v15 = *v3;
    Hasher.init(_seed:)();
    type metadata accessor for UUID();
    lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    dispatch thunk of Hashable.hash(into:)();
    v16 = *(int *)(v7 + 20);
    v17 = *(_QWORD *)(a1 + v16);
    swift_bridgeObjectRetain();
    specialized Set.hash(into:)((uint64_t)v27, v17);
    swift_bridgeObjectRelease();
    v18 = Hasher._finalize()();
    v19 = -1 << *(_BYTE *)(v15 + 32);
    a2 = v18 & ~v19;
    if (((*(_QWORD *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v20 = ~v19;
      v14 = v8;
      v8 = *(_QWORD *)(v8 + 72);
      while (1)
      {
        outlined init with copy of Reaction(*(_QWORD *)(v15 + 48) + v8 * a2, (uint64_t)v11);
        if ((static UUID.== infix(_:_:)() & 1) != 0
          && (specialized static Set.== infix(_:_:)(*(_QWORD *)&v11[*(int *)(v7 + 20)], *(_QWORD *)(a1 + v16)) & 1) != 0)
        {
          break;
        }
        outlined destroy of Reaction((uint64_t)v11);
        a2 = (a2 + 1) & v20;
        if (((*(_QWORD *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          goto LABEL_15;
      }
      outlined destroy of Reaction((uint64_t)v11);
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
  }
  v14 = v8;
LABEL_15:
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = outlined init with take of Reaction(a1, *(_QWORD *)(v21 + 48) + *(_QWORD *)(v14 + 72) * a2);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (v24)
    __break(1u);
  else
    *(_QWORD *)(v21 + 16) = v25;
  return result;
}

Swift::Int specialized _NativeSet.insertNew(_:at:isUnique:)(Swift::Int result, unint64_t i, char a3)
{
  uint64_t *v3;
  Swift::Int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t *v18;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_13;
  if ((a3 & 1) != 0)
  {
    specialized _NativeSet.resize(capacity:)();
  }
  else
  {
    if (v7 > v6)
    {
      result = (Swift::Int)specialized _NativeSet.copy()();
      goto LABEL_13;
    }
    specialized _NativeSet.copyAndResize(capacity:)();
  }
  v8 = *v3;
  Hasher.init(_seed:)();
  Task.hash(into:)();
  result = Hasher._finalize()();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  i = result & ~v9;
  v10 = v8 + 56;
  if (((*(_QWORD *)(v8 + 56 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    swift_retain();
    v11 = static Task.== infix(_:_:)();
    result = swift_release();
    if ((v11 & 1) != 0)
      goto LABEL_16;
    v12 = ~v9;
    for (i = (i + 1) & v12; ((*(_QWORD *)(v10 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v12)
    {
      swift_retain();
      v13 = static Task.== infix(_:_:)();
      result = swift_release();
      if ((v13 & 1) != 0)
        goto LABEL_16;
    }
  }
LABEL_13:
  v14 = *v18;
  *(_QWORD *)(*v18 + 8 * (i >> 6) + 56) |= 1 << i;
  *(_QWORD *)(*(_QWORD *)(v14 + 48) + 8 * i) = v5;
  v15 = *(_QWORD *)(v14 + 16);
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (!v16)
  {
    *(_QWORD *)(v14 + 16) = v17;
    return result;
  }
  __break(1u);
LABEL_16:
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Task<GroupActivitySharingResult, Never>);
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t specialized _NativeSet.insertNew(_:at:isUnique:)(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    specialized _NativeSet.resize(capacity:)();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)specialized _NativeSet.copy()();
      goto LABEL_12;
    }
    specialized _NativeSet.copyAndResize(capacity:)();
  }
  v8 = *v3;
  type metadata accessor for AnyCancellable();
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type AnyCancellable and conformance AnyCancellable, (uint64_t (*)(uint64_t))MEMORY[0x24BDB9B60], MEMORY[0x24BDB9B70]);
  result = dispatch thunk of Hashable._rawHashValue(seed:)();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = ~v9;
    lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type AnyCancellable and conformance AnyCancellable, (uint64_t (*)(uint64_t))MEMORY[0x24BDB9B60], MEMORY[0x24BDB9B78]);
    do
    {
      result = dispatch thunk of static Equatable.== infix(_:_:)();
      if ((result & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v10;
    }
    while (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v11 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * a2) = v5;
  v12 = *(_QWORD *)(v11 + 16);
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (!v13)
  {
    *(_QWORD *)(v11 + 16) = v14;
    return result;
  }
  __break(1u);
LABEL_15:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void *specialized _NativeSet.copy()()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *result;
  uint64_t v11;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;

  v1 = v0;
  v2 = type metadata accessor for Reaction(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<Reaction>);
  v7 = *v0;
  v8 = static _SetStorage.copy(original:)();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v9;
    return result;
  }
  result = (void *)(v8 + 56);
  v11 = v7 + 56;
  v12 = (unint64_t)((1 << *(_BYTE *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 56 + 8 * v12)
    result = memmove(result, (const void *)(v7 + 56), 8 * v12);
  v14 = 0;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v7 + 16);
  v15 = 1 << *(_BYTE *)(v7 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v7 + 56);
  v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_12;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v18)
      goto LABEL_28;
    v23 = *(_QWORD *)(v11 + 8 * v22);
    ++v14;
    if (!v23)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v18)
        goto LABEL_28;
      v23 = *(_QWORD *)(v11 + 8 * v14);
      if (!v23)
      {
        v14 = v22 + 2;
        if (v22 + 2 >= v18)
          goto LABEL_28;
        v23 = *(_QWORD *)(v11 + 8 * v14);
        if (!v23)
          break;
      }
    }
LABEL_27:
    v17 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_12:
    v21 = *(_QWORD *)(v3 + 72) * v20;
    outlined init with copy of Reaction(*(_QWORD *)(v7 + 48) + v21, (uint64_t)v6);
    result = (void *)outlined init with take of Reaction((uint64_t)v6, *(_QWORD *)(v9 + 48) + v21);
  }
  v24 = v22 + 3;
  if (v24 >= v18)
    goto LABEL_28;
  v23 = *(_QWORD *)(v11 + 8 * v24);
  if (v23)
  {
    v14 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    v14 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v14 >= v18)
      goto LABEL_28;
    v23 = *(_QWORD *)(v11 + 8 * v14);
    ++v24;
    if (v23)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<Task<GroupActivitySharingResult, Never>>);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    result = (void *)swift_retain();
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _SetStorage<AnyCancellable>);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    result = (void *)swift_retain();
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t specialized _NativeSet.copyAndResize(capacity:)()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  char v29[72];

  v1 = v0;
  v2 = type metadata accessor for Reaction(0);
  v28 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<Reaction>);
  v7 = static _SetStorage.resize(original:capacity:move:)();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = swift_release();
LABEL_25:
    *v1 = v8;
    return result;
  }
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v10 = *(_QWORD *)(v6 + 56);
  v25 = v0;
  v26 = v6 + 56;
  if (v9 < 64)
    v11 = ~(-1 << v9);
  else
    v11 = -1;
  v12 = v11 & v10;
  v27 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 56;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v17 = v16 | (v15 << 6);
      goto LABEL_7;
    }
    v21 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v27)
      goto LABEL_23;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v15;
    if (!v22)
    {
      v15 = v21 + 1;
      if (v21 + 1 >= v27)
        goto LABEL_23;
      v22 = *(_QWORD *)(v26 + 8 * v15);
      if (!v22)
      {
        v15 = v21 + 2;
        if (v21 + 2 >= v27)
          goto LABEL_23;
        v22 = *(_QWORD *)(v26 + 8 * v15);
        if (!v22)
          break;
      }
    }
LABEL_22:
    v12 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v15 << 6);
LABEL_7:
    v18 = *(_QWORD *)(v28 + 72);
    outlined init with copy of Reaction(*(_QWORD *)(v6 + 48) + v18 * v17, (uint64_t)v5);
    Hasher.init(_seed:)();
    type metadata accessor for UUID();
    lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    dispatch thunk of Hashable.hash(into:)();
    v19 = *(_QWORD *)&v5[*(int *)(v2 + 20)];
    swift_bridgeObjectRetain();
    specialized Set.hash(into:)((uint64_t)v29, v19);
    swift_bridgeObjectRelease();
    Hasher._finalize()();
    v20 = _HashTable.nextHole(atOrAfter:)();
    *(_QWORD *)(v13 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    result = outlined init with take of Reaction((uint64_t)v5, *(_QWORD *)(v8 + 48) + v20 * v18);
    ++*(_QWORD *)(v8 + 16);
  }
  v23 = v21 + 3;
  if (v23 >= v27)
  {
LABEL_23:
    result = swift_release_n();
    v1 = v25;
    goto LABEL_25;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v15 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    v15 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v15 >= v27)
      goto LABEL_23;
    v22 = *(_QWORD *)(v26 + 8 * v15);
    ++v23;
    if (v22)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<Task<GroupActivitySharingResult, Never>>);
  v2 = static _SetStorage.resize(original:capacity:move:)();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
    result = swift_release();
LABEL_35:
    *v0 = v3;
    return result;
  }
  v4 = 1 << *(_BYTE *)(v1 + 32);
  v5 = v1 + 56;
  if (v4 < 64)
    v6 = ~(-1 << v4);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v1 + 56);
  v8 = (unint64_t)(v4 + 63) >> 6;
  v9 = v2 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v7)
    {
      v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v8)
      goto LABEL_33;
    v16 = *(_QWORD *)(v5 + 8 * v15);
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= v8)
        goto LABEL_33;
      v16 = *(_QWORD *)(v5 + 8 * v11);
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= v8)
          goto LABEL_33;
        v16 = *(_QWORD *)(v5 + 8 * v11);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v7 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v14);
    Hasher.init(_seed:)();
    swift_retain();
    Task.hash(into:)();
    result = Hasher._finalize()();
    v19 = -1 << *(_BYTE *)(v3 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v9 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v9 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v9 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v3 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v8)
  {
LABEL_33:
    result = swift_release_n();
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v5 + 8 * v17);
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v8)
      goto LABEL_33;
    v16 = *(_QWORD *)(v5 + 8 * v11);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _SetStorage<AnyCancellable>);
  v2 = static _SetStorage.resize(original:capacity:move:)();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
    result = swift_release();
LABEL_35:
    *v0 = v3;
    return result;
  }
  v4 = 1 << *(_BYTE *)(v1 + 32);
  v24 = v1 + 56;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v1 + 56);
  v25 = (unint64_t)(v4 + 63) >> 6;
  v7 = v2 + 56;
  result = swift_retain();
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v12 = v11 | (v9 << 6);
      goto LABEL_24;
    }
    v13 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v13 >= v25)
      goto LABEL_33;
    v14 = *(_QWORD *)(v24 + 8 * v13);
    ++v9;
    if (!v14)
    {
      v9 = v13 + 1;
      if (v13 + 1 >= v25)
        goto LABEL_33;
      v14 = *(_QWORD *)(v24 + 8 * v9);
      if (!v14)
      {
        v9 = v13 + 2;
        if (v13 + 2 >= v25)
          goto LABEL_33;
        v14 = *(_QWORD *)(v24 + 8 * v9);
        if (!v14)
          break;
      }
    }
LABEL_23:
    v6 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v9 << 6);
LABEL_24:
    v16 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v12);
    type metadata accessor for AnyCancellable();
    lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type AnyCancellable and conformance AnyCancellable, (uint64_t (*)(uint64_t))MEMORY[0x24BDB9B60], MEMORY[0x24BDB9B70]);
    swift_retain();
    result = dispatch thunk of Hashable._rawHashValue(seed:)();
    v17 = -1 << *(_BYTE *)(v3 + 32);
    v18 = result & ~v17;
    v19 = v18 >> 6;
    if (((-1 << v18) & ~*(_QWORD *)(v7 + 8 * (v18 >> 6))) != 0)
    {
      v10 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v7 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v20 = 0;
      v21 = (unint64_t)(63 - v17) >> 6;
      do
      {
        if (++v19 == v21 && (v20 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v22 = v19 == v21;
        if (v19 == v21)
          v19 = 0;
        v20 |= v22;
        v23 = *(_QWORD *)(v7 + 8 * v19);
      }
      while (v23 == -1);
      v10 = __clz(__rbit64(~v23)) + (v19 << 6);
    }
    *(_QWORD *)(v7 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v10) = v16;
    ++*(_QWORD *)(v3 + 16);
  }
  v15 = v13 + 3;
  if (v15 >= v25)
  {
LABEL_33:
    result = swift_release_n();
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v24 + 8 * v15);
  if (v14)
  {
    v9 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    v9 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v9 >= v25)
      goto LABEL_33;
    v14 = *(_QWORD *)(v24 + 8 * v9);
    ++v15;
    if (v14)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

char *specialized GroupActivitySharingController.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  objc_class *v35;
  char *v36;
  void (*v37)(char *, _UNKNOWN **);
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  objc_super v47;
  char v48;

  v45 = a3;
  v43 = a2;
  v44 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x24BDAC7A8](v4, v5);
  v40 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AnyGroupActivity();
  v41 = *(_QWORD *)(v7 - 8);
  v42 = v7;
  v8 = *(_QWORD *)(v41 + 64);
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v39 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v39 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<GroupActivitySharingResult?>);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = OBJC_IVAR____TtC22_GroupActivities_UIKit30GroupActivitySharingController_controller;
  v20 = objc_allocWithZone((Class)type metadata accessor for PeoplePickerController());
  v21 = v3;
  v22 = (char *)objc_msgSend(v20, sel_init);
  *(_QWORD *)&v3[v19] = v22;
  v23 = &v21[OBJC_IVAR____TtC22_GroupActivities_UIKit30GroupActivitySharingController__resultValue];
  v48 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GroupActivitySharingResult?);
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v23, v18, v14);
  *(_QWORD *)&v21[OBJC_IVAR____TtC22_GroupActivities_UIKit30GroupActivitySharingController_resultSubscribers] = MEMORY[0x24BEE4B08];
  v24 = v46;
  GroupActivity.eraseToAnyGroupActivity()();
  if (v24)
  {

    (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
    swift_bridgeObjectRelease();

    type metadata accessor for GroupActivitySharingController();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v25 = type metadata accessor for TaskPriority();
    v26 = (uint64_t)v40;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v40, 1, 1, v25);
    v27 = v41;
    v28 = v39;
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v39, v13, v42);
    type metadata accessor for MainActor();
    v46 = 0;
    v29 = static MainActor.shared.getter();
    v30 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
    v31 = swift_allocObject();
    v32 = MEMORY[0x24BEE6930];
    *(_QWORD *)(v31 + 16) = v29;
    *(_QWORD *)(v31 + 24) = v32;
    v33 = v28;
    v34 = v42;
    (*(void (**)(unint64_t, char *, uint64_t))(v27 + 32))(v31 + v30, v33, v42);
    *(_QWORD *)&v21[OBJC_IVAR____TtC22_GroupActivities_UIKit30GroupActivitySharingController_activity] = _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCSo22TUConversationActivityC_Tgm5(v26, (uint64_t)&async function pointer to partial apply for closure #1 in GroupActivitySharingController.init<A>(_:), v31);

    v35 = (objc_class *)type metadata accessor for GroupActivitySharingController();
    v47.receiver = v21;
    v47.super_class = v35;
    v36 = (char *)objc_msgSendSuper2(&v47, sel_initWithNibName_bundle_, 0, 0);
    v37 = *(void (**)(char *, _UNKNOWN **))((*MEMORY[0x24BEE4EA0] & **(_QWORD **)&v36[OBJC_IVAR____TtC22_GroupActivities_UIKit30GroupActivitySharingController_controller])
                                                     + 0x150);
    v22 = v36;
    v37(v36, &protocol witness table for GroupActivitySharingController);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v34);
  }
  return v22;
}

uint64_t sub_21FD9C664()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in GroupActivitySharingController.init<A>(preparationHandler:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  _QWORD *v10;

  v4 = v1[4];
  v5 = v1[5];
  v6 = v1[2];
  v7 = v1[3];
  v9 = (int *)v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = partial apply for closure #1 in GroupActivitySharingController.init<A>(preparationHandler:);
  return closure #1 in GroupActivitySharingController.init<A>(preparationHandler:)(a1, v6, v7, v9, v8, v4, v5);
}

uint64_t partial apply for closure #1 in GroupActivitySharingController.init(itemProvider:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = partial apply for closure #1 in ReactionPickerView.sendReaction(_:to:);
  return closure #1 in GroupActivitySharingController.init(itemProvider:)(a1, v4, v5, v6);
}

uint64_t sub_21FD9C78C()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in GroupActivitySharingController.init(coder:)()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = partial apply for closure #1 in GroupActivitySharingController.init<A>(preparationHandler:);
  return closure #1 in GroupActivitySharingController.init(coder:)();
}

uint64_t sub_21FD9C814()
{
  uint64_t v0;

  return swift_deallocObject();
}

void partial apply for closure #1 in GroupActivitySharingController.viewWillAppear(_:)(char a1)
{
  closure #1 in GroupActivitySharingController.viewWillAppear(_:)(a1);
}

uint64_t objectdestroyTm()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in GroupActivitySharingController.dismissViewController(result:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = partial apply for closure #1 in ReactionPickerView.sendReaction(_:to:);
  return closure #1 in GroupActivitySharingController.dismissViewController(result:)(a1, v4, v5, v6);
}

uint64_t sub_21FD9C8DC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in GroupActivitySharingController.viewDidLoad()(uint64_t a1)
{
  uint64_t v1;

  closure #1 in GroupActivitySharingController.viewDidLoad()(a1, v1);
}

uint64_t sub_21FD9C908()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in GroupActivitySharingController.registerResultHandler(_:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (_QWORD *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = partial apply for closure #1 in GroupActivitySharingController.init<A>(preparationHandler:);
  return closure #1 in GroupActivitySharingController.registerResultHandler(_:)(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_21FD9C9BC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()(unsigned __int8 *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

unint64_t lazy protocol witness table accessor for type GroupActivitySharingResult and conformance GroupActivitySharingResult()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type GroupActivitySharingResult and conformance GroupActivitySharingResult;
  if (!lazy protocol witness table cache variable for type GroupActivitySharingResult and conformance GroupActivitySharingResult)
  {
    result = MEMORY[0x2207D4924](&protocol conformance descriptor for GroupActivitySharingResult, &type metadata for GroupActivitySharingResult);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type GroupActivitySharingResult and conformance GroupActivitySharingResult);
  }
  return result;
}

uint64_t sub_21FD9CA4C(_QWORD **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x88))();
}

uint64_t sub_21FD9CA88@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0xA0))();
  *a2 = result;
  return result;
}

uint64_t sub_21FD9CAC8(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & **a2) + 0xA8);
  v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_21FD9CB08@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0xB8))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_21FD9CB48(uint64_t *a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x24BEE4EA0] & **a2) + 0xC0);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_21FD9CB9C@<X0>(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0xD0))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_21FD9CBE0(unsigned __int8 *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(_QWORD))((*MEMORY[0x24BEE4EA0] & **a2) + 0xD8))(*a1);
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for GroupActivitySharingResult(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for GroupActivitySharingResult(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21FD9CD04 + 4 * byte_21FDD5DA5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21FD9CD38 + 4 * byte_21FDD5DA0[v4]))();
}

uint64_t sub_21FD9CD38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21FD9CD40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21FD9CD48);
  return result;
}

uint64_t sub_21FD9CD54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21FD9CD5CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21FD9CD60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21FD9CD68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTag for GroupActivitySharingResult(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *destructiveInjectEnumTag for GroupActivitySharingResult(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for GroupActivitySharingResult()
{
  return &type metadata for GroupActivitySharingResult;
}

uint64_t ObjC metadata update function for GroupActivitySharingController()
{
  return type metadata accessor for GroupActivitySharingController();
}

void type metadata completion function for GroupActivitySharingController()
{
  unint64_t v0;

  type metadata accessor for Published<GroupActivitySharingResult?>();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for GroupActivitySharingController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of GroupActivitySharingController.resultValue.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of GroupActivitySharingController.resultValue.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of GroupActivitySharingController.resultValue.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of GroupActivitySharingController.$resultValue.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of GroupActivitySharingController.$resultValue.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of GroupActivitySharingController.$resultValue.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of GroupActivitySharingController.resultSubscribers.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of GroupActivitySharingController.resultSubscribers.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of GroupActivitySharingController.resultSubscribers.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of GroupActivitySharingController.shareSheetSessionID.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of GroupActivitySharingController.shareSheetSessionID.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of GroupActivitySharingController.shareSheetSessionID.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of GroupActivitySharingController.startStagedActivity.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of GroupActivitySharingController.startStagedActivity.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of GroupActivitySharingController.startStagedActivity.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of GroupActivitySharingController.result.getter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v4 = *(int **)((*MEMORY[0x24BEE4EA0] & *v1) + 0xE8);
  v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = partial apply for closure #1 in GroupActivitySharingController.init<A>(preparationHandler:);
  return v7(a1);
}

uint64_t dispatch thunk of GroupActivitySharingController.__allocating_init<A>(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t dispatch thunk of GroupActivitySharingController.__allocating_init<A>(preparationHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t dispatch thunk of GroupActivitySharingController.__allocating_init(itemProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 256))();
}

void type metadata accessor for Published<GroupActivitySharingResult?>()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Published<GroupActivitySharingResult?>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for GroupActivitySharingResult?);
    v0 = type metadata accessor for Published();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Published<GroupActivitySharingResult?>);
  }
}

uint64_t sub_21FD9D0E0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t partial apply for thunk for @escaping @callee_unowned @convention(block) (@unowned ObjCBool) -> ()(char a1)
{
  uint64_t v1;

  return thunk for @escaping @callee_unowned @convention(block) (@unowned ObjCBool) -> ()(a1, *(_QWORD *)(v1 + 16));
}

uint64_t outlined init with copy of Reaction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Reaction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with take of Reaction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Reaction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of TaskPriority?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t outlined init with copy of Any(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5TA(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = partial apply for closure #1 in GroupActivitySharingController.init<A>(preparationHandler:);
  return ((uint64_t (*)(uint64_t, int *))((char *)&_sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5Tu
                                                 + _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5Tu))(a1, v4);
}

unint64_t lazy protocol witness table accessor for type Errno and conformance Errno()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Errno and conformance Errno;
  if (!lazy protocol witness table cache variable for type Errno and conformance Errno)
  {
    result = MEMORY[0x2207D4924](MEMORY[0x24BEE6000], MEMORY[0x24BEE5FF8]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Errno and conformance Errno);
  }
  return result;
}

void partial apply for closure #1 in NSItemProvider.loadGroupActivity()(uint64_t a1)
{
  uint64_t v1;

  closure #1 in NSItemProvider.loadGroupActivity()(a1, *(void **)(v1 + 16));
}

uint64_t sub_21FD9D2EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = type metadata accessor for AnyGroupActivity();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in GroupActivitySharingController.init<A>(_:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  type metadata accessor for AnyGroupActivity();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = partial apply for closure #1 in GroupActivitySharingController.init<A>(preparationHandler:);
  return closure #1 in GroupActivitySharingController.init<A>(_:)(a1);
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTR22_GroupActivities_UIKit0D21ActivitySharingResultO_Tg5TA(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = partial apply for closure #1 in GroupActivitySharingController.init<A>(preparationHandler:);
  return ((uint64_t (*)(uint64_t, int *))((char *)&_sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTR22_GroupActivities_UIKit0D21ActivitySharingResultO_Tg5Tu
                                                 + _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTR22_GroupActivities_UIKit0D21ActivitySharingResultO_Tg5Tu))(a1, v4);
}

uint64_t partial apply for closure #1 in closure #1 in GroupActivitySharingController.result.getter(uint64_t a1)
{
  uint64_t v1;

  return closure #1 in closure #1 in GroupActivitySharingController.result.getter(a1, *(_QWORD **)(v1 + 16));
}

uint64_t sub_21FD9D45C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<GroupActivitySharingResult, Never>);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

_BYTE *partial apply for closure #2 in closure #1 in closure #1 in GroupActivitySharingController.result.getter(_BYTE *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<GroupActivitySharingResult, Never>);
  return closure #2 in closure #1 in closure #1 in GroupActivitySharingController.result.getter(a1);
}

uint64_t lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x2207D4924](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

id PeoplePickerController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t PeoplePickerController.conversationManager.getter()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t PeoplePickerController.conversationManager.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC22_GroupActivities_UIKit22PeoplePickerController_conversationManager);
  swift_beginAccess();
  *v3 = a1;
  return swift_release();
}

uint64_t (*PeoplePickerController.conversationManager.modify())()
{
  swift_beginAccess();
  return ReactionPickerView.reactions.modify;
}

uint64_t PeoplePickerController.conversationManagerClient.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC22_GroupActivities_UIKit22PeoplePickerController_conversationManagerClient;
  swift_beginAccess();
  return outlined init with copy of ConversationManagerClientProtocol(v3, a1);
}

uint64_t outlined init with copy of ConversationManagerClientProtocol(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t PeoplePickerController.conversationManagerClient.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC22_GroupActivities_UIKit22PeoplePickerController_conversationManagerClient;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_0(v3);
  outlined init with take of ConversationManagerClientProtocol(a1, v3);
  return swift_endAccess();
}

uint64_t outlined init with take of ConversationManagerClientProtocol(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t (*PeoplePickerController.conversationManagerClient.modify())()
{
  swift_beginAccess();
  return PeoplePickerController.conversationManagerClient.modify;
}

uint64_t PeoplePickerController.shareSheetSessionID.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC22_GroupActivities_UIKit22PeoplePickerController_shareSheetSessionID);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t PeoplePickerController.shareSheetSessionID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC22_GroupActivities_UIKit22PeoplePickerController_shareSheetSessionID);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*PeoplePickerController.shareSheetSessionID.modify())()
{
  swift_beginAccess();
  return PeoplePickerController.conversationManagerClient.modify;
}

uint64_t PeoplePickerController.startStagedActivity.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC22_GroupActivities_UIKit22PeoplePickerController_startStagedActivity);
  swift_beginAccess();
  return *v1;
}

uint64_t PeoplePickerController.startStagedActivity.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC22_GroupActivities_UIKit22PeoplePickerController_startStagedActivity);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*PeoplePickerController.startStagedActivity.modify())()
{
  swift_beginAccess();
  return PeoplePickerController.conversationManagerClient.modify;
}

id PeoplePickerController.configuration.getter()
{
  _QWORD *v0;
  id v1;

  v1 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PeoplePickerConfiguration()), sel_init);
  (*(void (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC0))();
  dispatch thunk of PeoplePickerConfiguration.shareSheetSessionID.setter();
  return v1;
}

id PeoplePickerController.connection.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC22_GroupActivities_UIKit22PeoplePickerController____lazy_storage___connection;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC22_GroupActivities_UIKit22PeoplePickerController____lazy_storage___connection);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC22_GroupActivities_UIKit22PeoplePickerController____lazy_storage___connection);
  }
  else
  {
    v4 = v0;
    type metadata accessor for PeoplePickerClient();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    v5 = (void *)XPCClient.__allocating_init(connection:)();
    lazy protocol witness table accessor for type PeoplePickerController and conformance PeoplePickerController(&lazy protocol witness table cache variable for type PeoplePickerController and conformance PeoplePickerController, v6, (uint64_t (*)(uint64_t))type metadata accessor for PeoplePickerController, (uint64_t)&protocol conformance descriptor for PeoplePickerController);
    swift_unknownObjectRetain();
    PeoplePickerClient.delegate.setter();
    v7 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

uint64_t sub_21FD9DA94()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t closure #1 in closure #1 in PeoplePickerController.connection.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t result;
  id v10;
  id v11[5];

  v11[4] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = a1 + 16;
  swift_beginAccess();
  v2 = (_QWORD *)MEMORY[0x2207D4A98](v1);
  if (!v2)
  {
    __break(1u);
LABEL_6:
    __break(1u);
  }
  v3 = v2;
  v4 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v2) + 0x128))();
  if (!v4)
    goto LABEL_6;
  v5 = v4;
  v11[0] = 0;
  v6 = objc_msgSend(v4, sel_makeXPCConnectionWithError_, v11);
  if (v6)
  {
    v7 = v6;
    v8 = v11[0];

    return (uint64_t)v7;
  }
  else
  {
    v10 = v11[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #1 in PeoplePickerController.connection.getter()
{
  uint64_t v0;

  return closure #1 in closure #1 in PeoplePickerController.connection.getter(v0);
}

uint64_t type metadata accessor for PeoplePickerController()
{
  return objc_opt_self();
}

void PeoplePickerController.connection.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC22_GroupActivities_UIKit22PeoplePickerController____lazy_storage___connection);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC22_GroupActivities_UIKit22PeoplePickerController____lazy_storage___connection) = a1;

}

void (*PeoplePickerController.connection.modify(id *a1))(uint64_t *a1)
{
  void *v1;

  a1[1] = v1;
  *a1 = PeoplePickerController.connection.getter();
  return PeoplePickerController.connection.modify;
}

void PeoplePickerController.connection.modify(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *a1;
  v1 = a1[1];
  v3 = *(void **)(v1 + OBJC_IVAR____TtC22_GroupActivities_UIKit22PeoplePickerController____lazy_storage___connection);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC22_GroupActivities_UIKit22PeoplePickerController____lazy_storage___connection) = v2;

}

void *PeoplePickerController.hostViewControllerConfig.getter()
{
  return PeoplePickerController.hostViewControllerConfig.getter(&OBJC_IVAR____TtC22_GroupActivities_UIKit22PeoplePickerController____lazy_storage___hostViewControllerConfig, (uint64_t (*)(uint64_t))closure #1 in PeoplePickerController.hostViewControllerConfig.getter, (void (*)(uint64_t))outlined consume of _EXHostViewControllerConfiguration??, (void (*)(void *))outlined copy of _EXHostViewControllerConfiguration??);
}

uint64_t closure #1 in PeoplePickerController.hostViewControllerConfig.getter(void *a1)
{
  void *v1;
  void *v2;
  uint64_t *v3;
  id v4;
  id v5;
  unint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t i;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  void *v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  const char *v37;
  uint64_t result;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint8_t *v46;
  uint64_t v47;
  id v48;
  id v49;
  id v50;
  id v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  _QWORD *v55;
  id v56;
  id v57;
  const char *v58;
  uint64_t v59;
  id v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  void *v65;
  void *v66;
  void *v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v65 = a1;
  v1 = (void *)objc_opt_self();
  v2 = (void *)MEMORY[0x2207D3EF8](0xD000000000000019, 0x800000021FDD8C60);
  v3 = (uint64_t *)objc_msgSend(v1, sel_extensionPointIdentifierQuery_, v2);

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEB49D8]), sel_init);
  v67 = v3;
  v5 = objc_msgSend(v1, sel_executeQuery_, v3);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EXExtensionRepresenting);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC7BB8]), sel_init);
  if (one-time initialization token for extensionController != -1)
    swift_once();
  v8 = type metadata accessor for Logger();
  v9 = __swift_project_value_buffer(v8, (uint64_t)static Log.extensionController);
  swift_bridgeObjectRetain_n();
  v10 = Logger.logObject.getter();
  v11 = static os_log_type_t.default.getter();
  v68 = v4;
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v69 = v13;
    *(_DWORD *)v12 = 136315138;
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      v14 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      v14 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v71 = v14;
    v3 = &v71;
    v15 = String.init<A>(reflecting:)();
    v71 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v15, v16, &v69);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FD90000, v10, v11, "Found %s people picker extensions.", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207D49E4](v13, -1, -1);
    MEMORY[0x2207D49E4](v12, -1, -1);

    v4 = v68;
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (!objc_msgSend(v4, sel_faceTimeLegacyAppEnabled))
  {
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      v47 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v47)
      {
LABEL_25:
        if ((v6 & 0xC000000000000001) == 0)
        {
          if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_60:
            v25 = (void *)MEMORY[0x2207D4288](0, v3);
LABEL_40:
            swift_release();
            swift_unknownObjectRetain_n();
            v26 = Logger.logObject.getter();
            v27 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v26, v27))
            {
              v28 = (uint8_t *)swift_slowAlloc();
              v29 = swift_slowAlloc();
              v71 = v29;
              *(_DWORD *)v28 = 136315138;
              v39 = v4;
              v40 = objc_msgSend(v25, sel_bundleIdentifier);
              v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              v43 = v42;

              v69 = v41;
              v70 = v43;
              v44 = String.init<A>(reflecting:)();
              v69 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v44, v45, &v71);
              v4 = v39;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_unknownObjectRelease_n();
              swift_bridgeObjectRelease();
              v37 = "Proceed with legacy AppKit extension %s";
              goto LABEL_42;
            }
            goto LABEL_43;
          }
          v25 = *(void **)(v6 + 32);
          swift_unknownObjectRetain();
LABEL_28:
          swift_bridgeObjectRelease();
          swift_unknownObjectRetain_n();
          v26 = Logger.logObject.getter();
          v27 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v26, v27))
          {
            v66 = v7;
            v28 = (uint8_t *)swift_slowAlloc();
            v29 = swift_slowAlloc();
            v71 = v29;
            *(_DWORD *)v28 = 136315138;
            v30 = v4;
            v31 = objc_msgSend(v25, sel_bundleIdentifier);
            v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            v34 = v33;

            v69 = v32;
            v70 = v34;
            v35 = String.init<A>(reflecting:)();
            v69 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v35, v36, &v71);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_unknownObjectRelease_n();
            v4 = v30;
            swift_bridgeObjectRelease();
            v37 = "Proceed with mobile extension %s";
LABEL_42:
            _os_log_impl(&dword_21FD90000, v26, v27, v37, v28, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x2207D49E4](v29, -1, -1);
            v46 = v28;
            v7 = v66;
            MEMORY[0x2207D49E4](v46, -1, -1);

LABEL_44:
            objc_msgSend(v7, sel_setExtension_, v25);
            swift_unknownObjectRelease();

            return (uint64_t)v7;
          }
LABEL_43:

          swift_unknownObjectRelease_n();
          goto LABEL_44;
        }
LABEL_58:
        v25 = (void *)MEMORY[0x2207D4288](0, v6);
        goto LABEL_28;
      }
    }
    else if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_25;
    }
    v66 = v7;
    swift_bridgeObjectRelease();
    v48 = v67;
    v49 = v65;
    v50 = v48;
    v51 = v49;
    v52 = Logger.logObject.getter();
    v53 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = swift_slowAlloc();
      v55 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v54 = 138412546;
      v69 = (uint64_t)v50;
      v56 = v50;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *v55 = v50;

      *(_WORD *)(v54 + 12) = 2112;
      v69 = (uint64_t)v51;
      v57 = v51;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v55[1] = v51;

      v58 = "Failed to lookup mobile extension with query %@ on %@";
LABEL_52:
      _os_log_impl(&dword_21FD90000, v52, v53, v58, (uint8_t *)v54, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      MEMORY[0x2207D49E4](v55, -1, -1);
      MEMORY[0x2207D49E4](v54, -1, -1);

      return 0;
    }

LABEL_54:
    return 0;
  }
  v69 = MEMORY[0x24BEE4AF8];
  if (!(v6 >> 62))
  {
    v17 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    v66 = v7;
    if (v17)
      goto LABEL_11;
LABEL_34:
    result = swift_bridgeObjectRelease();
    v3 = (uint64_t *)MEMORY[0x24BEE4AF8];
    if ((MEMORY[0x24BEE4AF8] & 0x8000000000000000) != 0)
      goto LABEL_49;
    goto LABEL_35;
  }
  swift_bridgeObjectRetain();
  v17 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  v66 = v7;
  if (!v17)
    goto LABEL_34;
LABEL_11:
  if (v17 < 1)
  {
    __break(1u);
    goto LABEL_58;
  }
  v64 = v9;
  for (i = 0; i != v17; ++i)
  {
    if ((v6 & 0xC000000000000001) != 0)
    {
      v19 = (void *)MEMORY[0x2207D4288](i, v6);
    }
    else
    {
      v19 = *(void **)(v6 + 8 * i + 32);
      swift_unknownObjectRetain();
    }
    v20 = objc_msgSend(v19, sel_bundleIdentifier, v64, v65);
    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v23 = v22;

    if (v21 == 0xD00000000000002CLL && v23 == 0x800000021FDD8C80)
    {
      swift_bridgeObjectRelease();
LABEL_14:
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      continue;
    }
    v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v24 & 1) != 0)
      goto LABEL_14;
    swift_unknownObjectRelease();
  }
  result = swift_bridgeObjectRelease();
  v4 = v68;
  v3 = (uint64_t *)v69;
  v7 = v66;
  if ((v69 & 0x8000000000000000) == 0)
  {
LABEL_35:
    if (((unint64_t)v3 & 0x4000000000000000) != 0)
      goto LABEL_49;
    if (v3[2])
      goto LABEL_37;
LABEL_50:
    swift_release();
    v60 = v67;
    v61 = v65;
    v50 = v60;
    v62 = v61;
    v52 = Logger.logObject.getter();
    v53 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = swift_slowAlloc();
      v55 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v54 = 138412546;
      v69 = (uint64_t)v50;
      v56 = v50;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *v55 = v50;

      *(_WORD *)(v54 + 12) = 2112;
      v69 = (uint64_t)v62;
      v63 = v62;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v55[1] = v62;

      v58 = "Failed to lookup legacy AppKit extension with query %@ on %@";
      goto LABEL_52;
    }

    goto LABEL_54;
  }
LABEL_49:
  swift_bridgeObjectRetain();
  v59 = _CocoaArrayWrapper.endIndex.getter();
  result = swift_release();
  if (!v59)
    goto LABEL_50;
LABEL_37:
  if (((unint64_t)v3 & 0xC000000000000001) != 0)
    goto LABEL_60;
  if (v3[2])
  {
    v25 = (void *)v3[4];
    swift_unknownObjectRetain();
    goto LABEL_40;
  }
  __break(1u);
  return result;
}

void PeoplePickerController.hostViewControllerConfig.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1
                + OBJC_IVAR____TtC22_GroupActivities_UIKit22PeoplePickerController____lazy_storage___hostViewControllerConfig);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtC22_GroupActivities_UIKit22PeoplePickerController____lazy_storage___hostViewControllerConfig) = a1;
  outlined consume of _EXHostViewController??(v2);
}

void (*PeoplePickerController.hostViewControllerConfig.modify(void **a1))(uint64_t a1, char a2)
{
  void *v1;

  a1[1] = v1;
  *a1 = PeoplePickerController.hostViewControllerConfig.getter();
  return PeoplePickerController.hostViewControllerConfig.modify;
}

void PeoplePickerController.hostViewControllerConfig.modify(uint64_t a1, char a2)
{
  PeoplePickerController.hostViewControllerConfig.modify(a1, a2, &OBJC_IVAR____TtC22_GroupActivities_UIKit22PeoplePickerController____lazy_storage___hostViewControllerConfig, (void (*)(uint64_t))outlined consume of _EXHostViewControllerConfiguration??);
}

void *PeoplePickerController.extensionViewController.getter()
{
  return PeoplePickerController.hostViewControllerConfig.getter(&OBJC_IVAR____TtC22_GroupActivities_UIKit22PeoplePickerController____lazy_storage___extensionViewController, (uint64_t (*)(uint64_t))closure #1 in PeoplePickerController.extensionViewController.getter, (void (*)(uint64_t))outlined consume of _EXHostViewController??, (void (*)(void *))outlined copy of _EXHostViewController??);
}

void *PeoplePickerController.hostViewControllerConfig.getter(uint64_t *a1, uint64_t (*a2)(uint64_t), void (*a3)(uint64_t), void (*a4)(void *))
{
  uint64_t v4;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v10;
  id v11;

  v6 = *a1;
  v7 = *(void **)(v4 + *a1);
  v8 = v7;
  if (v7 == (void *)1)
  {
    v8 = (void *)a2(v4);
    v10 = *(_QWORD *)(v4 + v6);
    *(_QWORD *)(v4 + v6) = v8;
    v11 = v8;
    a3(v10);
  }
  a4(v7);
  return v8;
}

id closure #1 in PeoplePickerController.extensionViewController.getter(_QWORD *a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  _QWORD *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v2 = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *a1) + 0x110))();
  if (v2)
  {
    v3 = (void *)v2;
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC7BB0]), sel_initWithConfiguration_, v2);
    objc_msgSend(v4, sel_setDelegate_, a1);

  }
  else
  {
    if (one-time initialization token for extensionController != -1)
      swift_once();
    v5 = type metadata accessor for Logger();
    __swift_project_value_buffer(v5, (uint64_t)static Log.extensionController);
    v6 = a1;
    v7 = Logger.logObject.getter();
    v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = swift_slowAlloc();
      v15 = v10;
      *(_DWORD *)v9 = 136315138;
      type metadata accessor for PeoplePickerController();
      v11 = v6;
      v12 = String.init<A>(reflecting:)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v13, &v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21FD90000, v7, v8, "Failed to fetch config for hostViewController %s", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207D49E4](v10, -1, -1);
      MEMORY[0x2207D49E4](v9, -1, -1);
    }
    else
    {

    }
    return 0;
  }
  return v4;
}

void outlined consume of _EXHostViewController??(id a1)
{
  if (a1 != (id)1)

}

id outlined copy of _EXHostViewController??(id result)
{
  if (result != (id)1)
    return result;
  return result;
}

void PeoplePickerController.extensionViewController.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1
                + OBJC_IVAR____TtC22_GroupActivities_UIKit22PeoplePickerController____lazy_storage___extensionViewController);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtC22_GroupActivities_UIKit22PeoplePickerController____lazy_storage___extensionViewController) = a1;
  outlined consume of _EXHostViewController??(v2);
}

void (*PeoplePickerController.extensionViewController.modify(void **a1))(uint64_t a1, char a2)
{
  void *v1;

  a1[1] = v1;
  *a1 = PeoplePickerController.extensionViewController.getter();
  return PeoplePickerController.extensionViewController.modify;
}

void PeoplePickerController.extensionViewController.modify(uint64_t a1, char a2)
{
  PeoplePickerController.hostViewControllerConfig.modify(a1, a2, &OBJC_IVAR____TtC22_GroupActivities_UIKit22PeoplePickerController____lazy_storage___extensionViewController, (void (*)(uint64_t))outlined consume of _EXHostViewController??);
}

void PeoplePickerController.hostViewControllerConfig.modify(uint64_t a1, char a2, _QWORD *a3, void (*a4)(uint64_t))
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v8;

  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(v5 + *a3);
  *(_QWORD *)(v5 + *a3) = *(_QWORD *)a1;
  if ((a2 & 1) != 0)
  {
    v8 = v4;
    a4(v6);

  }
  else
  {
    a4(v6);
  }
}

BOOL PeoplePickerController.createActivityIfPossible(completion:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v24;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v2) + 0x90))(v7);
  v10 = ConversationManager.activeConversation.getter();
  swift_release();
  if (!v10)
  {
    if (one-time initialization token for default != -1)
      swift_once();
    v20 = type metadata accessor for Logger();
    __swift_project_value_buffer(v20, (uint64_t)static Log.default);
    v17 = Logger.logObject.getter();
    v21 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_21FD90000, v17, v21, "Not creating activitySession directly because we don't have a valid conversation", v22, 2u);
      MEMORY[0x2207D49E4](v22, -1, -1);
    }
    goto LABEL_11;
  }
  v11 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, 1, 1, v11);
  type metadata accessor for MainActor();
  v12 = v2;
  swift_retain();
  swift_retain();
  v13 = static MainActor.shared.getter();
  v14 = (_QWORD *)swift_allocObject();
  v15 = MEMORY[0x24BEE6930];
  v14[2] = v13;
  v14[3] = v15;
  v14[4] = v12;
  v14[5] = v10;
  v14[6] = a1;
  v14[7] = a2;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5((uint64_t)v9, (uint64_t)&async function pointer to partial apply for closure #1 in PeoplePickerController.createActivityIfPossible(completion:), (uint64_t)v14);
  swift_release();
  if (one-time initialization token for default != -1)
    swift_once();
  v16 = type metadata accessor for Logger();
  __swift_project_value_buffer(v16, (uint64_t)static Log.default);
  v17 = Logger.logObject.getter();
  v18 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v17, v18))
  {
    swift_release();
LABEL_11:

    return v10 != 0;
  }
  v19 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)v19 = 0;
  _os_log_impl(&dword_21FD90000, v17, v18, "Proceeding with bypassing viewController", v19, 2u);
  MEMORY[0x2207D49E4](v19, -1, -1);

  swift_release();
  return v10 != 0;
}

uint64_t closure #1 in PeoplePickerController.createActivityIfPossible(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7[16] = a6;
  v7[17] = a7;
  v7[14] = a4;
  v7[15] = a5;
  v8 = type metadata accessor for UUID();
  v7[18] = v8;
  v7[19] = *(_QWORD *)(v8 - 8);
  v7[20] = swift_task_alloc();
  v7[21] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v7[22] = swift_task_alloc();
  v7[23] = swift_task_alloc();
  v9 = type metadata accessor for GroupActivityDescription();
  v7[24] = v9;
  v7[25] = *(_QWORD *)(v9 - 8);
  v7[26] = swift_task_alloc();
  type metadata accessor for MainActor();
  v7[27] = static MainActor.shared.getter();
  v7[28] = dispatch thunk of Actor.unownedExecutor.getter();
  v7[29] = v10;
  return swift_task_switch();
}

uint64_t closure #1 in PeoplePickerController.createActivityIfPossible(completion:)()
{
  _QWORD *v0;
  _QWORD *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  Class isa;
  void *v32;
  Class v33;
  uint64_t (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;

  v1 = (_QWORD *)v0[14];
  v2 = objc_msgSend((id)objc_opt_self(), sel_placeholderActivity);
  v0[30] = v2;
  if ((*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v1) + 0x148))())
  {
    v4 = v3;
    ObjectType = swift_getObjectType();
    v0[31] = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
    swift_unknownObjectRelease();
    v6 = (_QWORD *)swift_task_alloc();
    v0[32] = v6;
    type metadata accessor for UIView(0, &lazy cache variable for type metadata for TUConversationActivity);
    v0[33] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
    *v6 = v0;
    v6[1] = closure #1 in PeoplePickerController.createActivityIfPossible(completion:);
    return Task.value.getter();
  }
  else
  {
    v0[35] = v2;
    v9 = v0[25];
    v8 = v0[26];
    v11 = v0[23];
    v10 = v0[24];
    v12 = v0[22];
    static GroupActivityDescription.generic.getter();
    v13 = (void *)GroupActivityDescription.tuActivityContext.getter();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    v14 = type metadata accessor for URL();
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
    v15(v11, 1, 1, v14);
    v15(v12, 1, 1, v14);
    v16 = objc_allocWithZone(MEMORY[0x24BEB4990]);
    v17 = @nonobjc TUConversationActivityMetadata.init(context:linkMetadata:fallbackURL:invitationURL:supportsContinuationOnTV:title:subTitle:imageData:)(v13, 0, 0xF000000000000000, v11, v12, 0, 0, 0, 0, 0, 0, 0xF000000000000000);
    v0[36] = v17;
    v18 = objc_msgSend(v2, sel_metadata);
    if (!v18)
      v18 = v17;
    v19 = v0[21];
    v37 = v0[19];
    v38 = v0[18];
    v20 = (_QWORD *)v0[14];
    v21 = objc_msgSend(v2, sel_applicationContext);
    v22 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    v24 = v23;

    v25 = objc_msgSend(v2, sel_activityIdentifier);
    v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v28 = v27;

    v29 = objc_msgSend(v2, sel_UUID);
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    v30 = objc_allocWithZone(MEMORY[0x24BEB4988]);
    isa = Data._bridgeToObjectiveC()().super.isa;
    v32 = (void *)MEMORY[0x2207D3EF8](v26, v28);
    swift_bridgeObjectRelease();
    v33 = UUID._bridgeToObjectiveC()().super.isa;
    v0[37] = objc_msgSend(v30, sel_initWithMetadata_applicationContext_activityIdentifier_uuid_, v18, isa, v32, v33);

    outlined consume of Data._Representation(v22, v24);
    v34 = *(uint64_t (**)(uint64_t, uint64_t))(v37 + 8);
    v0[38] = v34;
    v35 = v34(v19, v38);
    (*(void (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v20) + 0xA8))(v35);
    __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
    dispatch thunk of Conversation.id.getter();
    v36 = (_QWORD *)swift_task_alloc();
    v0[39] = v36;
    *v36 = v0;
    v36[1] = closure #1 in PeoplePickerController.createActivityIfPossible(completion:);
    return dispatch thunk of ConversationManagerClientProtocol.createActivitySession(with:onConversationWithUUID:)();
  }
}

{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 272) = v0;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  void *v7;
  uint8_t *v8;
  _QWORD *v9;
  id v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  Class isa;
  void *v36;
  Class v37;
  uint64_t (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  _QWORD *v40;
  uint64_t v42;
  uint64_t v43;
  void *v44;

  v1 = (void *)v0[7];
  if (one-time initialization token for default != -1)
    swift_once();
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Log.default);
  v3 = v1;
  v4 = Logger.logObject.getter();
  v5 = static os_log_type_t.default.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = (void *)v0[30];
  if (v6)
  {
    v44 = (void *)v0[30];
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v8 = 138412290;
    v0[13] = v3;
    v10 = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *v9 = v3;

    _os_log_impl(&dword_21FD90000, v4, v5, "Received activity %@ from hostViewController", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    MEMORY[0x2207D49E4](v9, -1, -1);
    v11 = v8;
    v7 = v44;
    MEMORY[0x2207D49E4](v11, -1, -1);
  }
  else
  {

  }
  v0[35] = v3;
  v13 = v0[25];
  v12 = v0[26];
  v15 = v0[23];
  v14 = v0[24];
  v16 = v0[22];
  static GroupActivityDescription.generic.getter();
  v17 = (void *)GroupActivityDescription.tuActivityContext.getter();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  v18 = type metadata accessor for URL();
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v19(v15, 1, 1, v18);
  v19(v16, 1, 1, v18);
  v20 = objc_allocWithZone(MEMORY[0x24BEB4990]);
  v21 = @nonobjc TUConversationActivityMetadata.init(context:linkMetadata:fallbackURL:invitationURL:supportsContinuationOnTV:title:subTitle:imageData:)(v17, 0, 0xF000000000000000, v15, v16, 0, 0, 0, 0, 0, 0, 0xF000000000000000);
  v0[36] = v21;
  v22 = objc_msgSend(v3, sel_metadata);
  if (!v22)
    v22 = v21;
  v23 = v0[21];
  v42 = v0[19];
  v43 = v0[18];
  v24 = (_QWORD *)v0[14];
  v25 = objc_msgSend(v3, sel_applicationContext);
  v26 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  v28 = v27;

  v29 = objc_msgSend(v3, sel_activityIdentifier);
  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v32 = v31;

  v33 = objc_msgSend(v3, sel_UUID);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  v34 = objc_allocWithZone(MEMORY[0x24BEB4988]);
  isa = Data._bridgeToObjectiveC()().super.isa;
  v36 = (void *)MEMORY[0x2207D3EF8](v30, v32);
  swift_bridgeObjectRelease();
  v37 = UUID._bridgeToObjectiveC()().super.isa;
  v0[37] = objc_msgSend(v34, sel_initWithMetadata_applicationContext_activityIdentifier_uuid_, v22, isa, v36, v37);

  outlined consume of Data._Representation(v26, v28);
  v38 = *(uint64_t (**)(uint64_t, uint64_t))(v42 + 8);
  v0[38] = v38;
  v39 = v38(v23, v43);
  (*(void (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v24) + 0xA8))(v39);
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  dispatch thunk of Conversation.id.getter();
  v40 = (_QWORD *)swift_task_alloc();
  v0[39] = v40;
  *v40 = v0;
  v40[1] = closure #1 in PeoplePickerController.createActivityIfPossible(completion:);
  return dispatch thunk of ConversationManagerClientProtocol.createActivitySession(with:onConversationWithUUID:)();
}

{
  uint64_t v0;
  int v1;
  NSObject *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  void *v11;
  uint8_t *v12;
  _QWORD *v13;
  id v14;
  void (*v15)(_QWORD);

  v1 = *(unsigned __int8 *)(v0 + 328);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if (v1 == 1)
  {
    v3 = *(void **)(v0 + 288);
    v2 = *(NSObject **)(v0 + 296);
    v4 = *(void **)(v0 + 280);
    (*(void (**)(uint64_t))(v0 + 128))(1);
  }
  else
  {
    if (one-time initialization token for default != -1)
      swift_once();
    v5 = *(void **)(v0 + 296);
    v6 = type metadata accessor for Logger();
    __swift_project_value_buffer(v6, (uint64_t)static Log.default);
    v7 = v5;
    v8 = Logger.logObject.getter();
    v9 = static os_log_type_t.error.getter();
    v10 = os_log_type_enabled(v8, v9);
    v11 = *(void **)(v0 + 296);
    if (v10)
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v12 = 138412290;
      *(_QWORD *)(v0 + 80) = v11;
      v14 = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *v13 = v11;

      _os_log_impl(&dword_21FD90000, v8, v9, "Failed to create activitySession for request %@", v12, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      MEMORY[0x2207D49E4](v13, -1, -1);
      MEMORY[0x2207D49E4](v12, -1, -1);
      v2 = *(NSObject **)(v0 + 296);
    }
    else
    {

      v2 = *(NSObject **)(v0 + 296);
      v8 = v2;
    }
    v4 = *(void **)(v0 + 280);
    v3 = *(void **)(v0 + 288);
    v15 = *(void (**)(_QWORD))(v0 + 128);

    v15(0);
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  void *v8;
  uint8_t *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  Class isa;
  void *v38;
  Class v39;
  uint64_t (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  _QWORD *v42;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;

  if (one-time initialization token for default != -1)
    swift_once();
  v1 = (void *)v0[34];
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Log.default);
  v3 = v1;
  v4 = v1;
  v5 = Logger.logObject.getter();
  v6 = static os_log_type_t.error.getter();
  v7 = os_log_type_enabled(v5, v6);
  v8 = (void *)v0[34];
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v47 = v10;
    *(_DWORD *)v9 = 136315138;
    v0[11] = v8;
    v11 = v8;
    v12 = String.init<A>(reflecting:)();
    v0[12] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v13, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21FD90000, v5, v6, "Failed to create activity, error: %s falling back to placeholderActivity", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207D49E4](v10, -1, -1);
    MEMORY[0x2207D49E4](v9, -1, -1);

  }
  else
  {

  }
  v14 = (void *)v0[30];
  v0[35] = v14;
  v16 = v0[25];
  v15 = v0[26];
  v18 = v0[23];
  v17 = v0[24];
  v19 = v0[22];
  static GroupActivityDescription.generic.getter();
  v20 = (void *)GroupActivityDescription.tuActivityContext.getter();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  v21 = type metadata accessor for URL();
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
  v22(v18, 1, 1, v21);
  v22(v19, 1, 1, v21);
  v23 = objc_allocWithZone(MEMORY[0x24BEB4990]);
  v24 = @nonobjc TUConversationActivityMetadata.init(context:linkMetadata:fallbackURL:invitationURL:supportsContinuationOnTV:title:subTitle:imageData:)(v20, 0, 0xF000000000000000, v18, v19, 0, 0, 0, 0, 0, 0, 0xF000000000000000);
  v0[36] = v24;
  v25 = objc_msgSend(v14, sel_metadata);
  if (!v25)
    v25 = v24;
  v26 = v0[21];
  v44 = v0[19];
  v45 = v0[18];
  v46 = (_QWORD *)v0[14];
  v27 = objc_msgSend(v14, sel_applicationContext);
  v28 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  v30 = v29;

  v31 = objc_msgSend(v14, sel_activityIdentifier);
  v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v34 = v33;

  v35 = objc_msgSend(v14, sel_UUID);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  v36 = objc_allocWithZone(MEMORY[0x24BEB4988]);
  isa = Data._bridgeToObjectiveC()().super.isa;
  v38 = (void *)MEMORY[0x2207D3EF8](v32, v34);
  swift_bridgeObjectRelease();
  v39 = UUID._bridgeToObjectiveC()().super.isa;
  v0[37] = objc_msgSend(v36, sel_initWithMetadata_applicationContext_activityIdentifier_uuid_, v25, isa, v38, v39);

  outlined consume of Data._Representation(v28, v30);
  v40 = *(uint64_t (**)(uint64_t, uint64_t))(v44 + 8);
  v0[38] = v40;
  v41 = v40(v26, v45);
  (*(void (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v46) + 0xA8))(v41);
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  dispatch thunk of Conversation.id.getter();
  v42 = (_QWORD *)swift_task_alloc();
  v0[39] = v42;
  *v42 = v0;
  v42[1] = closure #1 in PeoplePickerController.createActivityIfPossible(completion:);
  return dispatch thunk of ConversationManagerClientProtocol.createActivitySession(with:onConversationWithUUID:)();
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  BOOL v9;
  void *v10;
  uint8_t *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  uint64_t v18;

  v2 = *(void **)(v0 + 288);
  v1 = *(void **)(v0 + 296);

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if (one-time initialization token for default != -1)
    swift_once();
  v3 = *(void **)(v0 + 320);
  v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)static Log.default);
  v5 = v3;
  v6 = v3;
  v7 = Logger.logObject.getter();
  v8 = static os_log_type_t.error.getter();
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(void **)(v0 + 320);
  if (v9)
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v18 = v12;
    *(_DWORD *)v11 = 136315138;
    *(_QWORD *)(v0 + 64) = v10;
    v13 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
    v14 = String.init<A>(reflecting:)();
    *(_QWORD *)(v0 + 72) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21FD90000, v7, v8, "Failed to create activity, error: %s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207D49E4](v12, -1, -1);
    MEMORY[0x2207D49E4](v11, -1, -1);
  }
  else
  {

  }
  v16 = *(void **)(v0 + 320);
  (*(void (**)(_QWORD))(v0 + 128))(0);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t closure #1 in PeoplePickerController.createActivityIfPossible(completion:)(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  v4 = *v2;
  *(_QWORD *)(*v2 + 320) = v1;
  swift_task_dealloc();
  v5 = *(void (**)(uint64_t, uint64_t))(v4 + 304);
  v6 = *(_QWORD *)(v4 + 160);
  v7 = *(_QWORD *)(v4 + 144);
  if (!v1)
    *(_BYTE *)(v4 + 328) = a1 & 1;
  v5(v6, v7);
  return swift_task_switch();
}

uint64_t PeoplePickerController.hostViewController.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC22_GroupActivities_UIKit22PeoplePickerController_hostViewController;
  swift_beginAccess();
  return MEMORY[0x2207D4A98](v1);
}

uint64_t PeoplePickerController.hostViewController.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC22_GroupActivities_UIKit22PeoplePickerController_hostViewController;
  swift_beginAccess();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*PeoplePickerController.hostViewController.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC22_GroupActivities_UIKit22PeoplePickerController_hostViewController;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x2207D4A98](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return PeoplePickerController.hostViewController.modify;
}

void PeoplePickerController.hostViewController.modify(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48) + 8) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

id PeoplePickerController.init()()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  objc_super v9;

  v1 = OBJC_IVAR____TtC22_GroupActivities_UIKit22PeoplePickerController_conversationManager;
  type metadata accessor for ConversationManager();
  v2 = v0;
  *(_QWORD *)&v0[v1] = static ConversationManager.shared.getter();
  v3 = (uint64_t *)&v2[OBJC_IVAR____TtC22_GroupActivities_UIKit22PeoplePickerController_conversationManagerClient];
  v4 = type metadata accessor for ConversationManagerClient();
  v5 = static ConversationManagerClient.shared.getter();
  v6 = MEMORY[0x24BE19F58];
  v3[3] = v4;
  v3[4] = v6;
  *v3 = v5;
  v7 = &v2[OBJC_IVAR____TtC22_GroupActivities_UIKit22PeoplePickerController_shareSheetSessionID];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v2[OBJC_IVAR____TtC22_GroupActivities_UIKit22PeoplePickerController_startStagedActivity] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC22_GroupActivities_UIKit22PeoplePickerController____lazy_storage___connection] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC22_GroupActivities_UIKit22PeoplePickerController____lazy_storage___hostViewControllerConfig] = 1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC22_GroupActivities_UIKit22PeoplePickerController____lazy_storage___extensionViewController] = 1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC22_GroupActivities_UIKit22PeoplePickerController_hostViewController + 8] = 0;
  swift_unknownObjectWeakInit();

  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for PeoplePickerController();
  return objc_msgSendSuper2(&v9, sel_init);
}

id PeoplePickerController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PeoplePickerController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall PeoplePickerController.handleServerDisconnect()()
{
  void *v0;
  uint64_t v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  id v7;

  if (one-time initialization token for extensionController != -1)
    swift_once();
  v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Log.extensionController);
  v2 = v0;
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v5 = 138412290;
    v7 = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *v6 = v2;

    _os_log_impl(&dword_21FD90000, v3, v4, "Controller %@ had extension's XPC disconnect", v5, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    MEMORY[0x2207D49E4](v6, -1, -1);
    MEMORY[0x2207D49E4](v5, -1, -1);
  }
  else
  {

  }
  PeoplePickerController.dismissViewController(success:)(0);
}

Swift::Void __swiftcall PeoplePickerController.dismissViewController(success:)(Swift::Bool success)
{
  void *v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD aBlock[6];

  v3 = type metadata accessor for DispatchWorkItemFlags();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v18 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UIView(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v13 = (void *)static OS_dispatch_queue.main.getter();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v1;
  *(_BYTE *)(v14 + 24) = success;
  aBlock[4] = partial apply for closure #1 in PeoplePickerController.dismissViewController(success:);
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor;
  v15 = _Block_copy(aBlock);
  v16 = v1;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  lazy protocol witness table accessor for type PeoplePickerController and conformance PeoplePickerController((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, 255, v4, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x2207D415C](0, v12, v7, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v3);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

uint64_t closure #1 in PeoplePickerController.dismissViewController(success:)(_QWORD *a1, char a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  BOOL v7;

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *a1) + 0x148))();
  if (result)
  {
    v5 = v4;
    ObjectType = swift_getObjectType();
    v7 = (a2 & 1) == 0;
    (*(void (**)(BOOL *, uint64_t, uint64_t))(v5 + 16))(&v7, ObjectType, v5);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t thunk for @escaping @callee_guaranteed () -> ()(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t PeoplePickerController.requestActivity()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[3] = v0;
  type metadata accessor for MainActor();
  v1[4] = static MainActor.shared.getter();
  v1[5] = dispatch thunk of Actor.unownedExecutor.getter();
  v1[6] = v2;
  return swift_task_switch();
}

{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  _QWORD *v10;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _DWORD *v15;

  if (one-time initialization token for default != -1)
    swift_once();
  v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Log.default);
  v2 = Logger.logObject.getter();
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21FD90000, v2, v3, "Received request for activity", v4, 2u);
    MEMORY[0x2207D49E4](v4, -1, -1);
  }
  v5 = *(_QWORD **)(v0 + 24);

  v6 = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v5) + 0x148))();
  *(_QWORD *)(v0 + 56) = v6;
  if (v6)
  {
    v8 = v7;
    ObjectType = swift_getObjectType();
    *(_QWORD *)(v0 + 64) = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(ObjectType, v8);
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v10;
    type metadata accessor for UIView(0, &lazy cache variable for type metadata for TUConversationActivity);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
    *v10 = v0;
    v10[1] = PeoplePickerController.requestActivity();
    return Task.value.getter();
  }
  else
  {
    swift_release();
    v12 = Logger.logObject.getter();
    v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_21FD90000, v12, v13, "Failed to get hostViewController during activity fetch", v14, 2u);
      MEMORY[0x2207D49E4](v14, -1, -1);
    }

    lazy protocol witness table accessor for type Errno and conformance Errno();
    swift_allocError();
    *v15 = 96;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;

  v1 = *(_QWORD **)(v0 + 24);
  v2 = swift_release();
  v3 = *(void **)(v0 + 16);
  objc_msgSend(v3, sel_setStartWhenStaged_, (*(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v1) + 0xD8))(v2) & 1);
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void *))(v0 + 8))(v3);
}

{
  uint64_t v0;

  swift_release();
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t protocol witness for PeoplePickerClientDelegate.requestActivity() in conformance PeoplePickerController()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = protocol witness for PeoplePickerClientDelegate.requestActivity() in conformance PeoplePickerController;
  return PeoplePickerController.requestActivity()();
}

uint64_t protocol witness for PeoplePickerClientDelegate.requestActivity() in conformance PeoplePickerController(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t PeoplePickerController.hostViewController(_:didPrepareToHost:)(void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  id v26;
  uint64_t result;
  char *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  _QWORD *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  _QWORD *v37;
  char *v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  _QWORD aBlock[6];

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchWorkItemFlags();
  v47 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v11);
  v46 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS();
  v44 = *(_QWORD *)(v13 - 8);
  v45 = v13;
  MEMORY[0x24BDAC7A8](v13, v14);
  v43 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for extensionController != -1)
    swift_once();
  v16 = type metadata accessor for Logger();
  __swift_project_value_buffer(v16, (uint64_t)static Log.extensionController);
  v17 = a1;
  v18 = a2;
  v19 = v17;
  v20 = v18;
  v21 = Logger.logObject.getter();
  v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v24 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v23 = 138412546;
    v40 = v3;
    v41 = v10;
    v42 = v9;
    aBlock[0] = v19;
    v25 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *v24 = v19;

    *(_WORD *)(v23 + 12) = 2112;
    aBlock[0] = v20;
    v26 = v20;
    v3 = v40;
    v10 = v41;
    v9 = v42;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v24[1] = v20;

    _os_log_impl(&dword_21FD90000, v21, v22, "Received signal that viewController %@ is prepared to host view %@", (uint8_t *)v23, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    MEMORY[0x2207D49E4](v24, -1, -1);
    MEMORY[0x2207D49E4](v23, -1, -1);

  }
  else
  {

  }
  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v3) + 0x148))();
  if (result)
  {
    v29 = result;
    v42 = v28;
    type metadata accessor for UIView(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
    v30 = (void *)static OS_dispatch_queue.main.getter();
    v31 = swift_allocObject();
    *(_QWORD *)(v31 + 16) = v3;
    aBlock[4] = partial apply for closure #1 in PeoplePickerController.hostViewController(_:didPrepareToHost:);
    aBlock[5] = v31;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
    aBlock[3] = &block_descriptor_15;
    v32 = _Block_copy(aBlock);
    v33 = v3;
    swift_release();
    v34 = v43;
    static DispatchQoS.unspecified.getter();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    lazy protocol witness table accessor for type PeoplePickerController and conformance PeoplePickerController((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
    v35 = v46;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    MEMORY[0x2207D415C](0, v34, v35, v32);
    _Block_release(v32);

    (*(void (**)(char *, uint64_t))(v47 + 8))(v35, v10);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v34, v45);
    v36 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v9, 1, 1, v36);
    v37 = (_QWORD *)swift_allocObject();
    v37[2] = 0;
    v37[3] = 0;
    v38 = v42;
    v37[4] = v29;
    v37[5] = v38;
    v37[6] = v33;
    v39 = v33;
    _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5((uint64_t)v9, (uint64_t)&async function pointer to partial apply for closure #2 in PeoplePickerController.hostViewController(_:didPrepareToHost:), (uint64_t)v37);
    return swift_release();
  }
  return result;
}

uint64_t closure #1 in PeoplePickerController.hostViewController(_:didPrepareToHost:)(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  _QWORD *v7;
  uint64_t result;
  _QWORD v9[6];

  v2 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *a1) + 0xF8))();
  v3 = XPCClient.queue.getter();

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = partial apply for closure #1 in closure #1 in PeoplePickerController.hostViewController(_:didPrepareToHost:);
  *(_QWORD *)(v5 + 24) = v4;
  v9[4] = thunk for @callee_guaranteed () -> ()partial apply;
  v9[5] = v5;
  v9[0] = MEMORY[0x24BDAC760];
  v9[1] = 1107296256;
  v9[2] = thunk for @escaping @callee_guaranteed () -> ();
  v9[3] = &block_descriptor_61;
  v6 = _Block_copy(v9);
  v7 = a1;
  swift_retain();
  swift_release();
  dispatch_sync((dispatch_queue_t)v3, v6);

  _Block_release(v6);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v3 & 1) != 0)
    __break(1u);
  return result;
}

void closure #1 in closure #1 in PeoplePickerController.hostViewController(_:didPrepareToHost:)(_QWORD *a1)
{
  void *v1;

  v1 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *a1) + 0xF8))();
  XPCClient.withSynchronousHost<A>(body:errorHandler:)();

}

uint64_t closure #1 in closure #1 in closure #1 in PeoplePickerController.hostViewController(_:didPrepareToHost:)(void **a1, _QWORD *a2)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t result;
  _QWORD v6[6];

  v2 = *a1;
  v3 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *a2) + 0xF0))();
  v6[4] = specialized thunk for @callee_guaranteed (@unowned Bool) -> ();
  v6[5] = 0;
  v6[0] = MEMORY[0x24BDAC760];
  v6[1] = 1107296256;
  v6[2] = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
  v6[3] = &block_descriptor_64;
  v4 = _Block_copy(v6);
  swift_release();
  objc_msgSend(v2, sel_checkIn_reply_, v3, v4);

  _Block_release(v4);
  result = swift_isEscapingClosureAtFileLocation();
  if ((result & 1) != 0)
    __break(1u);
  return result;
}

void closure #1 in closure #1 in closure #1 in closure #1 in PeoplePickerController.hostViewController(_:didPrepareToHost:)()
{
  uint64_t v0;
  os_log_type_t v1;
  uint8_t *v2;
  NSObject *oslog;

  if (one-time initialization token for extensionController != -1)
    swift_once();
  v0 = type metadata accessor for Logger();
  __swift_project_value_buffer(v0, (uint64_t)static Log.extensionController);
  oslog = Logger.logObject.getter();
  v1 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v2 = 67109120;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_21FD90000, oslog, v1, "Received checkIn result %{BOOL}d", v2, 8u);
    MEMORY[0x2207D49E4](v2, -1, -1);
  }

}

uint64_t thunk for @escaping @callee_guaranteed (@unowned Bool) -> ()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(a1 + 32))(a2);
}

uint64_t closure #2 in PeoplePickerController.hostViewController(_:didPrepareToHost:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[18] = a5;
  v6[19] = a6;
  v6[17] = a4;
  v7 = type metadata accessor for DispatchWorkItemFlags();
  v6[20] = v7;
  v6[21] = *(_QWORD *)(v7 - 8);
  v6[22] = swift_task_alloc();
  v8 = type metadata accessor for DispatchQoS();
  v6[23] = v8;
  v6[24] = *(_QWORD *)(v8 - 8);
  v6[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t closure #2 in PeoplePickerController.hostViewController(_:didPrepareToHost:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t ObjectType;
  _QWORD *v3;

  v1 = v0[18];
  ObjectType = swift_getObjectType();
  v0[26] = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(ObjectType, v1);
  v3 = (_QWORD *)swift_task_alloc();
  v0[27] = v3;
  v0[28] = type metadata accessor for UIView(0, &lazy cache variable for type metadata for TUConversationActivity);
  v0[29] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
  *v3 = v0;
  v3[1] = closure #2 in PeoplePickerController.hostViewController(_:didPrepareToHost:);
  return Task.value.getter();
}

{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  id v2;
  uint64_t v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **(_QWORD **)(v0 + 152)) + 0xD8);
  v2 = *(id *)(v0 + 88);
  objc_msgSend(v2, sel_setStartWhenStaged_, v1() & 1);

  if (one-time initialization token for default != -1)
    swift_once();
  v3 = type metadata accessor for Logger();
  __swift_project_value_buffer(v3, (uint64_t)static Log.default);
  v4 = v2;
  v5 = Logger.logObject.getter();
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v25 = v8;
    *(_DWORD *)v7 = 136315138;
    *(_QWORD *)(v0 + 120) = v4;
    v9 = v4;
    v10 = String.init<A>(reflecting:)();
    *(_QWORD *)(v0 + 128) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v11, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21FD90000, v5, v6, "Fetched activity %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207D49E4](v8, -1, -1);
    MEMORY[0x2207D49E4](v7, -1, -1);
  }
  else
  {

  }
  v12 = *(_QWORD *)(v0 + 200);
  v13 = *(_QWORD *)(v0 + 176);
  v23 = *(_QWORD *)(v0 + 192);
  v24 = *(_QWORD *)(v0 + 184);
  v14 = *(_QWORD *)(v0 + 160);
  v22 = *(_QWORD *)(v0 + 168);
  v15 = *(void **)(v0 + 152);
  type metadata accessor for UIView(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v16 = (void *)static OS_dispatch_queue.main.getter();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v15;
  *(_QWORD *)(v17 + 24) = v4;
  *(_QWORD *)(v0 + 48) = partial apply for closure #1 in closure #2 in PeoplePickerController.hostViewController(_:didPrepareToHost:);
  *(_QWORD *)(v0 + 56) = v17;
  *(_QWORD *)(v0 + 16) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = thunk for @escaping @callee_guaranteed () -> ();
  *(_QWORD *)(v0 + 40) = &block_descriptor_41;
  v18 = _Block_copy((const void *)(v0 + 16));
  v19 = v4;
  v20 = v15;
  static DispatchQoS.unspecified.getter();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BEE4AF8];
  lazy protocol witness table accessor for type PeoplePickerController and conformance PeoplePickerController((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x2207D415C](0, v12, v13, v18);
  _Block_release(v18);

  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v13, v14);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v12, v24);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (one-time initialization token for extensionController != -1)
    swift_once();
  v1 = *(void **)(v0 + 240);
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Log.extensionController);
  swift_unknownObjectRetain();
  v3 = v1;
  swift_unknownObjectRetain();
  v4 = v1;
  v5 = Logger.logObject.getter();
  v6 = static os_log_type_t.error.getter();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 240);
  if (v7)
  {
    v26 = *(_OWORD *)(v0 + 136);
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v29 = v10;
    *(_DWORD *)v9 = 136315394;
    *(_OWORD *)(v0 + 64) = v26;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PeoplePickerViewController);
    v11 = String.init<A>(reflecting:)();
    *(_QWORD *)(v0 + 96) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v12, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2080;
    *(_QWORD *)(v0 + 104) = v8;
    v13 = v8;
    v14 = String.init<A>(reflecting:)();
    *(_QWORD *)(v0 + 112) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21FD90000, v5, v6, "Not able to get activity from hostViewController %s reason: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207D49E4](v10, -1, -1);
    MEMORY[0x2207D49E4](v9, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  v16 = *(_QWORD *)(v0 + 200);
  v17 = *(_QWORD *)(v0 + 176);
  v27 = *(_QWORD *)(v0 + 192);
  v28 = *(_QWORD *)(v0 + 184);
  v19 = *(_QWORD *)(v0 + 160);
  v18 = *(_QWORD *)(v0 + 168);
  v20 = *(void **)(v0 + 152);
  type metadata accessor for UIView(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  v21 = (void *)static OS_dispatch_queue.main.getter();
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v20;
  *(_QWORD *)(v22 + 24) = 0;
  *(_QWORD *)(v0 + 48) = partial apply for closure #1 in closure #2 in PeoplePickerController.hostViewController(_:didPrepareToHost:);
  *(_QWORD *)(v0 + 56) = v22;
  *(_QWORD *)(v0 + 16) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = thunk for @escaping @callee_guaranteed () -> ();
  *(_QWORD *)(v0 + 40) = &block_descriptor_41;
  v23 = _Block_copy((const void *)(v0 + 16));
  v24 = v20;
  static DispatchQoS.unspecified.getter();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BEE4AF8];
  lazy protocol witness table accessor for type PeoplePickerController and conformance PeoplePickerController((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x2207D415C](0, v16, v17, v23);
  _Block_release(v23);

  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v16, v28);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t closure #1 in closure #2 in PeoplePickerController.hostViewController(_:didPrepareToHost:)(_QWORD *a1, void *a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD *v9;
  uint64_t result;
  _QWORD v11[6];

  v4 = (void *)(*(uint64_t (**)(void *))((*MEMORY[0x24BEE4EA0] & *a1) + 0xF8))(a2);
  v5 = XPCClient.queue.getter();

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = partial apply for closure #1 in closure #1 in closure #2 in PeoplePickerController.hostViewController(_:didPrepareToHost:);
  *(_QWORD *)(v7 + 24) = v6;
  v11[4] = partial apply for thunk for @callee_guaranteed () -> ();
  v11[5] = v7;
  v11[0] = MEMORY[0x24BDAC760];
  v11[1] = 1107296256;
  v11[2] = thunk for @escaping @callee_guaranteed () -> ();
  v11[3] = &block_descriptor_51;
  v8 = _Block_copy(v11);
  v9 = a1;
  swift_retain();
  swift_release();
  dispatch_sync((dispatch_queue_t)v5, v8);

  _Block_release(v8);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v5 & 1) != 0)
    __break(1u);
  return result;
}

void closure #1 in closure #1 in closure #2 in PeoplePickerController.hostViewController(_:didPrepareToHost:)(_QWORD *a1)
{
  void *v1;

  v1 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *a1) + 0xF8))();
  XPCClient.withSynchronousHost<A>(body:errorHandler:)();

}

void PeoplePickerController.hostViewController(_:didFailToHost:error:)(void *a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  NSObject *v20;
  int v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  id v25;
  _QWORD *v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  os_log_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  os_log_t v40;
  uint64_t v41;
  uint64_t v42;

  v4 = v3;
  v8 = type metadata accessor for Logger();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for default != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v8, (uint64_t)static Log.default);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v13, v8);
  v14 = a1;
  v15 = a2;
  v16 = a3;
  v17 = v14;
  v18 = v15;
  v19 = a3;
  v20 = Logger.logObject.getter();
  v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, (os_log_type_t)v21))
  {
    v38 = v21;
    v35 = v8;
    v36 = v9;
    v40 = v20;
    v37 = v4;
    v22 = swift_slowAlloc();
    v23 = (_QWORD *)swift_slowAlloc();
    v39 = swift_slowAlloc();
    v41 = (uint64_t)v17;
    v42 = v39;
    *(_DWORD *)v22 = 138412802;
    v24 = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *v23 = v17;

    *(_WORD *)(v22 + 12) = 2112;
    v41 = (uint64_t)v18;
    v25 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v23[1] = v18;
    v26 = v23;

    *(_WORD *)(v22 + 22) = 2080;
    if (a3)
    {
      v41 = (uint64_t)a3;
      v27 = a3;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
      v28 = String.init<A>(reflecting:)();
      v30 = v29;
    }
    else
    {
      v30 = 0xE300000000000000;
      v28 = 7104878;
    }
    v31 = v36;
    v32 = v35;
    v41 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v30, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    v33 = v40;
    _os_log_impl(&dword_21FD90000, v40, (os_log_type_t)v38, "Received signal that viewController %@ has failed to host view %@ error %s", (uint8_t *)v22, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    MEMORY[0x2207D49E4](v26, -1, -1);
    v34 = v39;
    swift_arrayDestroy();
    MEMORY[0x2207D49E4](v34, -1, -1);
    MEMORY[0x2207D49E4](v22, -1, -1);

    (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v32);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  PeoplePickerController.dismissViewController(success:)(0);
}

void PeoplePickerController.hostViewController(_:didEndHosting:error:)(void *a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  NSObject *v20;
  int v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  id v25;
  _QWORD *v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  id v31;
  uint64_t v32;
  NSObject *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v4 = v3;
  v8 = type metadata accessor for Logger();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for default != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v8, (uint64_t)static Log.default);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v13, v8);
  v14 = a1;
  v15 = a2;
  v16 = a3;
  v17 = v14;
  v18 = v15;
  v19 = a3;
  v20 = Logger.logObject.getter();
  v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, (os_log_type_t)v21))
  {
    v39 = v21;
    v36 = v8;
    v37 = v20;
    v38 = v9;
    v41 = v4;
    v22 = swift_slowAlloc();
    v23 = (_QWORD *)swift_slowAlloc();
    v40 = swift_slowAlloc();
    v42 = (uint64_t)v17;
    v43 = v40;
    *(_DWORD *)v22 = 138412802;
    v24 = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *v23 = v17;

    *(_WORD *)(v22 + 12) = 2112;
    v42 = (uint64_t)v18;
    v25 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v23[1] = v18;
    v26 = v23;

    *(_WORD *)(v22 + 22) = 2080;
    if (a3)
    {
      v42 = (uint64_t)a3;
      v27 = a3;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
      v28 = String.init<A>(reflecting:)();
      v30 = v29;
    }
    else
    {
      v30 = 0xE300000000000000;
      v28 = 7104878;
    }
    v33 = v37;
    v32 = v38;
    v34 = v36;
    v42 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v28, v30, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21FD90000, v33, (os_log_type_t)v39, "Received signal that viewController %@ has ended hosting view %@ error %s", (uint8_t *)v22, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    MEMORY[0x2207D49E4](v26, -1, -1);
    v35 = v40;
    swift_arrayDestroy();
    MEMORY[0x2207D49E4](v35, -1, -1);
    MEMORY[0x2207D49E4](v22, -1, -1);

    (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v34);
    if (!a3)
      goto LABEL_10;
LABEL_7:
    v31 = a3;
    PeoplePickerController.dismissViewController(success:)(0);

    return;
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  if (a3)
    goto LABEL_7;
LABEL_10:
  PeoplePickerController.dismissViewController(success:)(1);
}

void @objc PeoplePickerController.hostViewController(_:didFailToHost:error:)(void *a1, uint64_t a2, void *a3, void *a4, void *a5, void (*a6)(id, id, void *))
{
  id v10;
  id v11;
  id v12;
  id v13;

  v10 = a3;
  v11 = a4;
  v12 = a1;
  v13 = a5;
  a6(v10, v11, a5);

}

id @nonobjc TUConversationActivityMetadata.init(context:linkMetadata:fallbackURL:invitationURL:supportsContinuationOnTV:title:subTitle:imageData:)(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12)
{
  void *v15;
  Class isa;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(uint64_t, uint64_t, uint64_t);
  NSURL *v22;
  void *v23;
  void *v24;
  NSURL *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  unint64_t v29;
  void *v30;
  void *v31;
  Class v32;
  id v33;
  id v37;

  if (a3 >> 60 == 15)
  {
    v15 = a1;
    isa = 0;
  }
  else
  {
    v15 = a1;
    isa = Data._bridgeToObjectiveC()().super.isa;
    outlined consume of Data?(a2, a3);
  }
  v19 = type metadata accessor for URL();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  v23 = 0;
  if (v21(a4, 1, v19) != 1)
  {
    URL._bridgeToObjectiveC()(v22);
    v23 = v24;
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(a4, v19);
  }
  if (v21(a5, 1, v19) == 1)
  {
    v26 = 0;
    v27 = a10;
    if (a8)
      goto LABEL_8;
LABEL_11:
    v28 = 0;
    v29 = a12;
    if (v27)
      goto LABEL_9;
    goto LABEL_12;
  }
  URL._bridgeToObjectiveC()(v25);
  v26 = v31;
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(a5, v19);
  v27 = a10;
  if (!a8)
    goto LABEL_11;
LABEL_8:
  v28 = (void *)MEMORY[0x2207D3EF8](a7, a8);
  swift_bridgeObjectRelease();
  v29 = a12;
  if (v27)
  {
LABEL_9:
    v30 = (void *)MEMORY[0x2207D3EF8](a9, v27);
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_12:
  v30 = 0;
LABEL_13:
  if (v29 >> 60 == 15)
  {
    v32 = 0;
  }
  else
  {
    v32 = Data._bridgeToObjectiveC()().super.isa;
    outlined consume of Data?(a11, v29);
  }
  v33 = objc_msgSend(v37, sel_initWithContext_linkMetadata_fallbackURL_invitationURL_supportsContinuationOnTV_title_subTitle_imageData_, v15, isa, v23, v26, a6 & 1, v28, v30, v32);

  return v33;
}

uint64_t sub_21FDA2AF8()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in PeoplePickerController.createActivityIfPossible(completion:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = partial apply for closure #1 in GroupActivitySharingController.init<A>(preparationHandler:);
  return closure #1 in PeoplePickerController.createActivityIfPossible(completion:)(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_21FDA2BC0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in PeoplePickerController.dismissViewController(success:)()
{
  uint64_t v0;

  return closure #1 in PeoplePickerController.dismissViewController(success:)(*(_QWORD **)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t lazy protocol witness table accessor for type PeoplePickerController and conformance PeoplePickerController(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x2207D4924](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A];
  if (!lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    result = MEMORY[0x2207D4924](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A]);
  }
  return result;
}

uint64_t sub_21FDA2C94()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in PeoplePickerController.hostViewController(_:didPrepareToHost:)()
{
  uint64_t v0;

  return closure #1 in PeoplePickerController.hostViewController(_:didPrepareToHost:)(*(_QWORD **)(v0 + 16));
}

uint64_t sub_21FDA2CC0()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in PeoplePickerController.hostViewController(_:didPrepareToHost:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = partial apply for closure #1 in ReactionPickerView.sendReaction(_:to:);
  return closure #2 in PeoplePickerController.hostViewController(_:didPrepareToHost:)(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_21FDA2D74@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x90))();
  *a2 = result;
  return result;
}

uint64_t sub_21FDA2DB4(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & **a2) + 0x98);
  v3 = swift_retain();
  return v2(v3);
}

uint64_t sub_21FDA2DF4(_QWORD **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0xA8))();
}

uint64_t sub_21FDA2E2C(uint64_t a1, _QWORD **a2)
{
  _BYTE v4[40];

  outlined init with copy of ConversationManagerClientProtocol(a1, (uint64_t)v4);
  return (*(uint64_t (**)(_BYTE *))((*MEMORY[0x24BEE4EA0] & **a2) + 0xB0))(v4);
}

uint64_t sub_21FDA2E7C@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0xC0))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_21FDA2EBC(uint64_t *a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x24BEE4EA0] & **a2) + 0xC8);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_21FDA2F10@<X0>(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0xD8))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_21FDA2F54(unsigned __int8 *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(_QWORD))((*MEMORY[0x24BEE4EA0] & **a2) + 0xE0))(*a1);
}

uint64_t sub_21FDA2F90@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0xF8))();
  *a2 = result;
  return result;
}

uint64_t sub_21FDA2FD0(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x24BEE4EA0] & **a2) + 0x100))(*a1);
}

uint64_t sub_21FDA3010@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x110))();
  *a2 = result;
  return result;
}

uint64_t sub_21FDA3050(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x24BEE4EA0] & **a2) + 0x118);
  v4 = *a1;
  return v3(v2);
}

uint64_t sub_21FDA309C@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x128))();
  *a2 = result;
  return result;
}

uint64_t sub_21FDA30DC(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x24BEE4EA0] & **a2) + 0x130);
  v4 = *a1;
  return v3(v2);
}

uint64_t sub_21FDA3128@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x148))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_21FDA3168(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x24BEE4EA0] & **a2) + 0x150);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t dispatch thunk of PeoplePickerViewController.activity.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PeoplePickerViewController.dismissViewController(result:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t method lookup function for PeoplePickerController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PeoplePickerController.conversationManager.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of PeoplePickerController.conversationManager.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of PeoplePickerController.conversationManager.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of PeoplePickerController.conversationManagerClient.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of PeoplePickerController.conversationManagerClient.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of PeoplePickerController.conversationManagerClient.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of PeoplePickerController.shareSheetSessionID.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of PeoplePickerController.shareSheetSessionID.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of PeoplePickerController.shareSheetSessionID.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of PeoplePickerController.startStagedActivity.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of PeoplePickerController.startStagedActivity.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of PeoplePickerController.startStagedActivity.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of PeoplePickerController.configuration.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of PeoplePickerController.connection.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of PeoplePickerController.connection.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x100))();
}

uint64_t dispatch thunk of PeoplePickerController.connection.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x108))();
}

uint64_t dispatch thunk of PeoplePickerController.hostViewControllerConfig.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x110))();
}

uint64_t dispatch thunk of PeoplePickerController.hostViewControllerConfig.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x118))();
}

uint64_t dispatch thunk of PeoplePickerController.hostViewControllerConfig.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x120))();
}

uint64_t dispatch thunk of PeoplePickerController.extensionViewController.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x128))();
}

uint64_t dispatch thunk of PeoplePickerController.extensionViewController.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x130))();
}

uint64_t dispatch thunk of PeoplePickerController.extensionViewController.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x138))();
}

uint64_t dispatch thunk of PeoplePickerController.createActivityIfPossible(completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x140))();
}

uint64_t dispatch thunk of PeoplePickerController.hostViewController.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x148))();
}

uint64_t dispatch thunk of PeoplePickerController.hostViewController.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x150))();
}

uint64_t dispatch thunk of PeoplePickerController.hostViewController.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x158))();
}

uint64_t outlined destroy of weak PeoplePickerViewController?(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t sub_21FDA34D0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #2 in PeoplePickerController.hostViewController(_:didPrepareToHost:)()
{
  uint64_t v0;

  return closure #1 in closure #2 in PeoplePickerController.hostViewController(_:didPrepareToHost:)(*(_QWORD **)(v0 + 16), *(void **)(v0 + 24));
}

void partial apply for closure #1 in closure #1 in closure #2 in PeoplePickerController.hostViewController(_:didPrepareToHost:)()
{
  uint64_t v0;

  closure #1 in closure #1 in closure #2 in PeoplePickerController.hostViewController(_:didPrepareToHost:)(*(_QWORD **)(v0 + 16));
}

uint64_t sub_21FDA350C()
{
  return swift_deallocObject();
}

uint64_t partial apply for thunk for @callee_guaranteed () -> ()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

id partial apply for closure #1 in closure #1 in closure #1 in closure #2 in PeoplePickerController.hostViewController(_:didPrepareToHost:)(id *a1)
{
  uint64_t v1;

  return objc_msgSend(*a1, sel_updateActivity_, *(_QWORD *)(v1 + 16));
}

void partial apply for closure #1 in closure #1 in PeoplePickerController.hostViewController(_:didPrepareToHost:)()
{
  uint64_t v0;

  closure #1 in closure #1 in PeoplePickerController.hostViewController(_:didPrepareToHost:)(*(_QWORD **)(v0 + 16));
}

uint64_t sub_21FDA3578()
{
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in PeoplePickerController.hostViewController(_:didPrepareToHost:)(void **a1)
{
  uint64_t v1;

  return closure #1 in closure #1 in closure #1 in PeoplePickerController.hostViewController(_:didPrepareToHost:)(a1, *(_QWORD **)(v1 + 16));
}

uint64_t outlined consume of Data._Representation(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t outlined consume of Data?(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return outlined consume of Data._Representation(a1, a2);
  return a1;
}

void GroupSessionPreviewHostingController.Delegate.viewDataNeedsUpdate()()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(v0 + 16);
  if (v1)
  {
    v2 = swift_retain();
    v1(v2);
    outlined consume of (@escaping @callee_guaranteed () -> ())?((uint64_t)v1);
  }
}

uint64_t GroupSessionPreviewHostingController.Delegate.__deallocating_deinit()
{
  uint64_t v0;

  outlined consume of (@escaping @callee_guaranteed () -> ())?(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance();
}

uint64_t GroupSessionPreviewHostingController.Delegate.__allocating_init()()
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  return result;
}

void protocol witness for _ArchivedViewHostDelegate.viewDataNeedsUpdate() in conformance GroupSessionPreviewHostingController<A, B>.Delegate()
{
  GroupSessionPreviewHostingController.Delegate.viewDataNeedsUpdate()();
}

CGImageRef protocol witness for _ArchivedViewHostDelegate.filteredImage(_:) in conformance GroupSessionPreviewHostingController<A1, B1>.Delegate(CGImage *a1)
{
  return _ArchivedViewHostDelegate.filteredImage(_:)(a1);
}

uint64_t GroupSessionPreviewHostingController.session.getter()
{
  specialized GroupSessionPreviewHostingController.session.getter();
  return swift_retain();
}

uint64_t key path setter for GroupSessionPreviewHostingController.rootView : <A, B>GroupSessionPreviewHostingController<A, B>(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  MEMORY[0x24BDAC7A8](a1, a1);
  v4 = (char *)&v7 - v3;
  (*(void (**)(char *))(v5 + 16))((char *)&v7 - v3);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 144))(v4);
}

uint64_t GroupSessionPreviewHostingController.rootView.getter()
{
  return _ArchivedViewHost.content.getter();
}

uint64_t GroupSessionPreviewHostingController.rootView.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  specialized GroupSessionPreviewHostingController.rootView.setter(a1);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 88) - 8) + 8))(a1);
}

void (*GroupSessionPreviewHostingController.rootView.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  _ArchivedViewHost.content.getter();
  return GroupSessionPreviewHostingController.rootView.modify;
}

void GroupSessionPreviewHostingController.rootView.modify(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void *, uint64_t);

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 24);
  v4 = *(void **)(*(_QWORD *)a1 + 32);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if ((a2 & 1) != 0)
  {
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 24), v4, v5);
    specialized GroupSessionPreviewHostingController.rootView.setter((uint64_t)v3);
    v7 = *(void (**)(void *, uint64_t))(v6 + 8);
    v7(v3, v5);
  }
  else
  {
    specialized GroupSessionPreviewHostingController.rootView.setter(*(_QWORD *)(*(_QWORD *)a1 + 32));
    v7 = *(void (**)(void *, uint64_t))(v6 + 8);
  }
  v7(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

void GroupSessionPreviewHostingController.__allocating_init(session:rootView:previewPresenter:)()
{
  specialized GroupSessionPreviewHostingController.__allocating_init(session:rootView:previewPresenter:)();
}

uint64_t sub_21FDA3944(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 88) - 8) + 8))(v1);
  return a1;
}

void GroupSessionPreviewHostingController.init(session:rootView:previewPresenter:)(uint64_t a1, uint64_t a2)
{
  specialized GroupSessionPreviewHostingController.init(session:rootView:previewPresenter:)(a1, a2);
}

uint64_t sub_21FDA398C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 88) - 8) + 8))(v1);
  return a1;
}

uint64_t closure #1 in GroupSessionPreviewHostingController.init(session:rootView:previewPresenter:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  _QWORD *v19;
  void *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[6];

  v10 = type metadata accessor for DispatchWorkItemFlags();
  v24 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchQoS();
  v22 = *(_QWORD *)(v14 - 8);
  v23 = v14;
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for OS_dispatch_queue();
  v18 = (void *)static OS_dispatch_queue.main.getter();
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a2;
  v19[3] = a3;
  v19[4] = a4;
  v19[5] = a5;
  v19[6] = a1;
  aBlock[4] = partial apply for closure #1 in closure #1 in GroupSessionPreviewHostingController.init(session:rootView:previewPresenter:);
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_0;
  v20 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v25 = MEMORY[0x24BEE4AF8];
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  MEMORY[0x2207D415C](0, v17, v13, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v17, v23);
  return swift_release();
}

uint64_t closure #1 in closure #1 in GroupSessionPreviewHostingController.init(session:rootView:previewPresenter:)()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)result + 168))(result);
    return swift_release();
  }
  return result;
}

Swift::Void __swiftcall GroupSessionPreviewHostingController.updatePreviewIfNecessary()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  _OWORD v14[2];
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;

  v1 = *v0;
  if (one-time initialization token for previews != -1)
    swift_once();
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Log.previews);
  swift_retain();
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    *(_DWORD *)v5 = 136315138;
    *(_QWORD *)&v14[0] = v6;
    v15 = v0[2];
    v7 = type metadata accessor for GroupSession();
    MEMORY[0x2207D4924](MEMORY[0x24BDD1EB0], v7);
    v8 = dispatch thunk of CustomStringConvertible.description.getter();
    v15 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v9, (uint64_t *)v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FD90000, v3, v4, "Updating previews if necessary for session: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207D49E4](v6, -1, -1);
    MEMORY[0x2207D49E4](v5, -1, -1);

  }
  else
  {

    swift_release();
  }
  v10 = _ArchivedViewHost.archiveStates(count:body:)();
  v12 = v11;
  __swift_project_boxed_opaque_existential_1(v0 + 4, v0[7]);
  v16 = v12;
  v17 = v0;
  v15 = v10;
  outlined copy of Data._Representation(v10, v12);
  v13 = *(_OWORD *)(v1 + 96);
  v14[0] = *(_OWORD *)(v1 + 80);
  v14[1] = v13;
  type metadata accessor for GroupSessionPreviewHostingController();
}

uint64_t GroupSessionPreviewHostingController.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  return v0;
}

uint64_t GroupSessionPreviewHostingController.__deallocating_deinit()
{
  GroupSessionPreviewHostingController.deinit();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for GroupSessionPreviewSource.session.getter in conformance GroupSessionPreviewHostingController<A, B>()
{
  specialized GroupSessionPreviewHostingController.session.getter();
  return swift_retain();
}

uint64_t specialized GroupSessionPreviewHostingController.session.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t specialized GroupSessionPreviewHostingController.rootView.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  MEMORY[0x24BDAC7A8](a1, a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  return _ArchivedViewHost.content.setter();
}

void specialized GroupSessionPreviewHostingController.init(session:rootView:previewPresenter:)(uint64_t a1, uint64_t a2)
{
  MEMORY[0x24BDAC7A8](a1, a2);
  type metadata accessor for GroupSessionPreviewHostingController.Delegate();
}

void sub_21FDA412C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, _QWORD);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v1 + 16) = v8;
  v12 = MEMORY[0x2207D4924](&protocol conformance descriptor for GroupSessionPreviewHostingController<A, B>.Delegate, a1);
  *(_QWORD *)(v9 - 112) = v5;
  *(_QWORD *)(v9 - 104) = a1;
  *(_QWORD *)(v9 - 152) = v4;
  *(_QWORD *)(v9 - 96) = v4;
  *(_QWORD *)(v9 - 88) = v12;
  type metadata accessor for _ArchivedViewHost();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v2, v6, v5);
  *(_QWORD *)(v9 - 112) = v11;
  *(_QWORD *)(v9 - 128) = v8;
  swift_retain();
  swift_retain();
  *(_QWORD *)(v1 + 24) = _ArchivedViewHost.__allocating_init(content:delegate:)();
  outlined init with copy of ConversationManagerClientProtocol((uint64_t)v3, v1 + 32);
  swift_retain();
  _ArchivedViewHost.encodesStableDisplayListIdentifiers.setter();
  swift_release();
  swift_retain();
  v13 = (void (*)(uint64_t, _QWORD))_ArchivedViewHost.environment.modify();
  EnvironmentValues.displayScale.setter();
  v13(v9 - 112, 0);
  swift_release();
  v14 = one-time initialization token for defaultPresentationSize;
  swift_retain();
  if (v14 != -1)
    swift_once();
  _ArchivedViewHost.size.setter();
  swift_release();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  v15 = *(_QWORD *)(v9 - 136);
  *(_QWORD *)(v9 - 120) = v1;
  *(_QWORD *)(v9 - 112) = v15;
  *(_QWORD *)(v9 - 168) = v5;
  *(_QWORD *)(v9 - 160) = v3;
  v16 = *(_QWORD *)(v9 - 144);
  *(_QWORD *)(v9 - 104) = v5;
  *(_QWORD *)(v9 - 96) = v16;
  *(_QWORD *)(v9 - 88) = *(_QWORD *)(v9 - 152);
  type metadata accessor for GroupSessionPreviewHostingController();
}

void specialized GroupSessionPreviewHostingController.__allocating_init(session:rootView:previewPresenter:)()
{
  type metadata accessor for GroupSessionPreviewHostingController();
}

void sub_21FDA43B0()
{
  uint64_t v0;
  uint64_t v1;

  swift_allocObject();
  specialized GroupSessionPreviewHostingController.init(session:rootView:previewPresenter:)(v1, v0);
}

uint64_t outlined copy of Data._Representation(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

void type metadata accessor for GroupSessionPreviewHostingController()
{
  JUMPOUT(0x2207D48ACLL);
}

uint64_t associated type witness table accessor for GroupSessionPreviewSource.ActivityType : GroupActivity in GroupSessionPreviewHostingController<A, B>(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 96);
}

uint64_t sub_21FDA443C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(_QWORD **)a1 + 136))();
}

uint64_t sub_21FDA4468()
{
  return 32;
}

__n128 sub_21FDA4474(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t type metadata completion function for GroupSessionPreviewHostingController()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for GroupSessionPreviewHostingController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of GroupSessionPreviewHostingController.rootView.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of GroupSessionPreviewHostingController.rootView.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of GroupSessionPreviewHostingController.rootView.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of GroupSessionPreviewHostingController.__allocating_init(session:rootView:previewPresenter:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of GroupSessionPreviewHostingController.updatePreviewIfNecessary()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t type metadata completion function for GroupSessionPreviewHostingController.Delegate()
{
  return swift_initClassMetadata2();
}

void type metadata accessor for GroupSessionPreviewHostingController.Delegate()
{
  JUMPOUT(0x2207D48ACLL);
}

uint64_t outlined consume of (@escaping @callee_guaranteed () -> ())?(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_21FDA4574()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_21FDA4598()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in GroupSessionPreviewHostingController.init(session:rootView:previewPresenter:)()
{
  return partial apply for closure #1 in GroupSessionPreviewHostingController.init(session:rootView:previewPresenter:)(closure #1 in GroupSessionPreviewHostingController.init(session:rootView:previewPresenter:));
}

unint64_t type metadata accessor for OS_dispatch_queue()
{
  unint64_t result;

  result = lazy cache variable for type metadata for OS_dispatch_queue;
  if (!lazy cache variable for type metadata for OS_dispatch_queue)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #1 in GroupSessionPreviewHostingController.init(session:rootView:previewPresenter:)()
{
  return partial apply for closure #1 in GroupSessionPreviewHostingController.init(session:rootView:previewPresenter:)((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))closure #1 in closure #1 in GroupSessionPreviewHostingController.init(session:rootView:previewPresenter:));
}

uint64_t partial apply for closure #1 in GroupSessionPreviewHostingController.init(session:rootView:previewPresenter:)(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

unint64_t lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags;
  if (!lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags)
  {
    v1 = type metadata accessor for DispatchWorkItemFlags();
    result = MEMORY[0x2207D4924](MEMORY[0x24BEE5468], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags);
  }
  return result;
}

uint64_t NSItemProvider.loadGroupActivity()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[3];
  v2 = swift_task_alloc();
  v0[4] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[5] = v3;
  type metadata accessor for UIView(0, &lazy cache variable for type metadata for TUConversationActivity);
  *v3 = v0;
  v3[1] = NSItemProvider.loadGroupActivity();
  return withCheckedThrowingContinuation<A>(isolation:function:_:)();
}

{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void closure #1 in NSItemProvider.loadGroupActivity()(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  _QWORD aBlock[6];

  v20 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<TUConversationActivity, Error>);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3, v6);
  v7 = type metadata accessor for UTType();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UTType._groupActivity.getter();
  v12 = UTType.identifier.getter();
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  v15 = (void *)MEMORY[0x2207D3EF8](v12, v14);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  v16 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v17 + v16, (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  aBlock[4] = partial apply for closure #1 in closure #1 in NSItemProvider.loadGroupActivity();
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSSecureCoding?, @guaranteed Error?) -> ();
  aBlock[3] = &block_descriptor_1;
  v18 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v20, sel_loadItemForTypeIdentifier_options_completionHandler_, v15, 0, v18);
  _Block_release(v18);

}

uint64_t closure #1 in closure #1 in NSItemProvider.loadGroupActivity()(uint64_t a1, id a2)
{
  unint64_t v2;
  void *v4;
  uint64_t v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  _BYTE *v12;
  id v13;
  uint64_t v15;
  id v16;
  os_log_type_t v17;
  uint8_t *v18;
  id v19;
  id v20;
  id v21;
  _BYTE *v22;
  unint64_t *v23;
  _QWORD *v24;
  uint64_t v25;
  unint64_t v26[2];

  v26[1] = *MEMORY[0x24BDAC8D0];
  if (a1)
  {
    swift_unknownObjectRetain_n();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSSecureCoding);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v2 = v26[0];
      type metadata accessor for UIView(0, &lazy cache variable for type metadata for NSKeyedUnarchiver);
      type metadata accessor for UIView(0, &lazy cache variable for type metadata for TUConversationActivity);
      v4 = (void *)static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
      if (one-time initialization token for default != -1)
        swift_once();
      v15 = type metadata accessor for Logger();
      __swift_project_value_buffer(v15, (uint64_t)static Log.default);
      v16 = v4;
      v7 = Logger.logObject.getter();
      v17 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v7, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc();
        v24 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v18 = 138412290;
        if (v4)
        {
          v23 = v26;
          v19 = v16;
        }
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *v24 = v4;

        _os_log_impl(&dword_21FD90000, v7, v17, "Unarchiving activity from item provider data: %@", v18, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSObject?);
        swift_arrayDestroy();
        MEMORY[0x2207D49E4](v24, -1, -1);
        MEMORY[0x2207D49E4](v18, -1, -1);
        outlined consume of Data._Representation(v25, v2);
        goto LABEL_26;
      }

      outlined consume of Data._Representation(v25, v26[0]);
      if (!v4)
        goto LABEL_29;
    }
    else
    {
      objc_opt_self();
      v4 = (void *)swift_dynamicCastObjCClass();
      if (v4)
        swift_unknownObjectRetain();
      if (one-time initialization token for default != -1)
        swift_once();
      v5 = type metadata accessor for Logger();
      __swift_project_value_buffer(v5, (uint64_t)static Log.default);
      v6 = v4;
      v7 = Logger.logObject.getter();
      v8 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v7, v8))
      {
        v9 = (uint8_t *)swift_slowAlloc();
        v10 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v9 = 138412290;
        if (v4)
          v11 = v6;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *v10 = v4;

        _os_log_impl(&dword_21FD90000, v7, v8, "Received activity object from item provider: %@", v9, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSObject?);
        swift_arrayDestroy();
        MEMORY[0x2207D49E4](v10, -1, -1);
        MEMORY[0x2207D49E4](v9, -1, -1);
LABEL_26:

        if (!v4)
          goto LABEL_29;
        goto LABEL_27;
      }

      if (!v4)
        goto LABEL_29;
    }
LABEL_27:
    v20 = objc_msgSend(v4, sel_sanitizedCopy, v23);
    if (v20)
    {
      v21 = v20;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<TUConversationActivity, Error>);
      CheckedContinuation.resume(returning:)();

      return swift_unknownObjectRelease();
    }
LABEL_29:
    lazy protocol witness table accessor for type NSItemProvider.TUConversationActivityLoadError and conformance NSItemProvider.TUConversationActivityLoadError();
    swift_allocError();
    *v22 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<TUConversationActivity, Error>);
    CheckedContinuation.resume(throwing:)();

    return swift_unknownObjectRelease();
  }
  if (!a2)
  {
    lazy protocol witness table accessor for type NSItemProvider.TUConversationActivityLoadError and conformance NSItemProvider.TUConversationActivityLoadError();
    swift_allocError();
    *v12 = 1;
  }
  v13 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<TUConversationActivity, Error>);
  return CheckedContinuation.resume(throwing:)();
}

uint64_t sub_21FDA4F40()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<TUConversationActivity, Error>);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in NSItemProvider.loadGroupActivity()(uint64_t a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<TUConversationActivity, Error>);
  return closure #1 in closure #1 in NSItemProvider.loadGroupActivity()(a1, a2);
}

uint64_t thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSSecureCoding?, @guaranteed Error?) -> ()(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

unint64_t lazy protocol witness table accessor for type NSItemProvider.TUConversationActivityLoadError and conformance NSItemProvider.TUConversationActivityLoadError()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type NSItemProvider.TUConversationActivityLoadError and conformance NSItemProvider.TUConversationActivityLoadError;
  if (!lazy protocol witness table cache variable for type NSItemProvider.TUConversationActivityLoadError and conformance NSItemProvider.TUConversationActivityLoadError)
  {
    result = MEMORY[0x2207D4924](&protocol conformance descriptor for NSItemProvider.TUConversationActivityLoadError, &unk_24E5AC7E8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type NSItemProvider.TUConversationActivityLoadError and conformance NSItemProvider.TUConversationActivityLoadError);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type NSItemProvider.TUConversationActivityLoadError and conformance NSItemProvider.TUConversationActivityLoadError;
  if (!lazy protocol witness table cache variable for type NSItemProvider.TUConversationActivityLoadError and conformance NSItemProvider.TUConversationActivityLoadError)
  {
    result = MEMORY[0x2207D4924](&protocol conformance descriptor for NSItemProvider.TUConversationActivityLoadError, &unk_24E5AC7E8);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type NSItemProvider.TUConversationActivityLoadError and conformance NSItemProvider.TUConversationActivityLoadError);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for NSItemProvider.TUConversationActivityLoadError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21FDA5104 + 4 * byte_21FDD6105[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21FDA5138 + 4 * byte_21FDD6100[v4]))();
}

uint64_t sub_21FDA5138(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21FDA5140(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21FDA5148);
  return result;
}

uint64_t sub_21FDA5154(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21FDA515CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21FDA5160(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21FDA5168(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for NSItemProvider.TUConversationActivityLoadError()
{
  return &unk_24E5AC7E8;
}

uint64_t key path getter for CustomReactionPickerEntryView.onReaction : CustomReactionPickerEntryView@<X0>(_QWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD *);

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x58))();
  if (result)
  {
    v5 = result;
    v6 = v4;
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v5;
    *(_QWORD *)(result + 24) = v6;
    v7 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed String?) -> ();
  }
  else
  {
    v7 = 0;
  }
  *a2 = v7;
  a2[1] = result;
  return result;
}

uint64_t key path setter for CustomReactionPickerEntryView.onReaction : CustomReactionPickerEntryView(uint64_t *a1, _QWORD **a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t (*v7)(_QWORD, uint64_t);

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed String?) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(uint64_t (**)(_QWORD, uint64_t))((*MEMORY[0x24BEE4EA0] & **a2) + 0x60);
  outlined copy of (@escaping @callee_guaranteed (@guaranteed String?) -> ())?(v3);
  return v7(v6, v5);
}

uint64_t CustomReactionPickerEntryView.onReaction.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC22_GroupActivities_UIKit29CustomReactionPickerEntryView_onReaction);
  swift_beginAccess();
  v2 = *v1;
  outlined copy of (@escaping @callee_guaranteed (@guaranteed String?) -> ())?(*v1);
  return v2;
}

uint64_t outlined copy of (@escaping @callee_guaranteed (@guaranteed String?) -> ())?(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t CustomReactionPickerEntryView.onReaction.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC22_GroupActivities_UIKit29CustomReactionPickerEntryView_onReaction);
  swift_beginAccess();
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  return outlined consume of (@escaping @callee_guaranteed () -> ())?(v6);
}

uint64_t (*CustomReactionPickerEntryView.onReaction.modify())()
{
  swift_beginAccess();
  return ReactionPickerView.reactions.modify;
}

id CustomReactionPickerEntryView.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id CustomReactionPickerEntryView.init()()
{
  char *v0;
  char *v1;
  objc_class *v2;
  id v3;
  objc_super v5;

  v1 = &v0[OBJC_IVAR____TtC22_GroupActivities_UIKit29CustomReactionPickerEntryView_onReaction];
  v2 = (objc_class *)type metadata accessor for CustomReactionPickerEntryView();
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v5.receiver = v0;
  v5.super_class = v2;
  v3 = objc_msgSendSuper2(&v5, sel_initWithFrame_textContainer_, 0, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v3, sel_setKeyboardType_, 124);
  objc_msgSend(v3, sel_setForceDisableDictation_, 1);

  return v3;
}

uint64_t type metadata accessor for CustomReactionPickerEntryView()
{
  return objc_opt_self();
}

id CustomReactionPickerEntryView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void CustomReactionPickerEntryView.init(coder:)()
{
  char *v0;
  char *v1;

  v1 = &v0[OBJC_IVAR____TtC22_GroupActivities_UIKit29CustomReactionPickerEntryView_onReaction];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall CustomReactionPickerEntryView.insertText(_:)(Swift::String a1)
{
  _QWORD *v1;
  _QWORD *v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, void *);
  uint64_t v17;
  _QWORD v18[2];

  v2 = v1;
  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  v5 = type metadata accessor for CharacterSet();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = countAndFlagsBits;
  v18[1] = object;
  v10 = objc_msgSend((id)objc_opt_self(), sel_whitespaceAndNewlineCharacterSet);
  static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();

  lazy protocol witness table accessor for type String and conformance String();
  v11 = StringProtocol.trimmingCharacters(in:)();
  v13 = v12;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v14 = swift_bridgeObjectRelease();
  v15 = HIBYTE(v13) & 0xF;
  if ((v13 & 0x2000000000000000) == 0)
    v15 = v11 & 0xFFFFFFFFFFFFLL;
  if (v15)
  {
    v16 = (void (*)(uint64_t, void *))(*(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v2)
                                                                                   + 0x58))(v14);
    if (v16)
    {
      v17 = (uint64_t)v16;
      v16(countAndFlagsBits, object);
      outlined consume of (@escaping @callee_guaranteed () -> ())?(v17);
    }
  }
}

unint64_t lazy protocol witness table accessor for type String and conformance String()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type String and conformance String;
  if (!lazy protocol witness table cache variable for type String and conformance String)
  {
    result = MEMORY[0x2207D4924](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type String and conformance String);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type String and conformance String;
  if (!lazy protocol witness table cache variable for type String and conformance String)
  {
    result = MEMORY[0x2207D4924](MEMORY[0x24BEE0D40], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type String and conformance String);
  }
  return result;
}

id CustomReactionPickerEntryView.__allocating_init(frame:textContainer:)(void *a1, double a2, double a3, double a4, double a5)
{
  objc_class *v5;
  id v7;

  v7 = objc_msgSend(objc_allocWithZone(v5), sel_initWithFrame_textContainer_, a1, a2, a3, a4, a5);

  return v7;
}

void CustomReactionPickerEntryView.init(frame:textContainer:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id CustomReactionPickerEntryView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CustomReactionPickerEntryView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t CustomReactionPicker.model.getter(uint64_t a1)
{
  uint64_t result;

  if (a1)
    return swift_retain();
  type metadata accessor for ReactionPickerViewModel();
  lazy protocol witness table accessor for type ReactionPickerViewModel and conformance ReactionPickerViewModel();
  result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

unint64_t lazy protocol witness table accessor for type ReactionPickerViewModel and conformance ReactionPickerViewModel()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type ReactionPickerViewModel and conformance ReactionPickerViewModel;
  if (!lazy protocol witness table cache variable for type ReactionPickerViewModel and conformance ReactionPickerViewModel)
  {
    v1 = type metadata accessor for ReactionPickerViewModel();
    result = MEMORY[0x2207D4924]("uh}.4z", v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ReactionPickerViewModel and conformance ReactionPickerViewModel);
  }
  return result;
}

uint64_t CustomReactionPicker.$model.getter()
{
  type metadata accessor for ReactionPickerViewModel();
  lazy protocol witness table accessor for type ReactionPickerViewModel and conformance ReactionPickerViewModel();
  return EnvironmentObject.projectedValue.getter();
}

id CustomReactionPicker.makeUIView(context:)()
{
  return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CustomReactionPickerEntryView()), sel_init);
}

uint64_t CustomReactionPicker.updateUIView(_:context:)(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  if (a3)
  {
    v4 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a3 + 368);
    v5 = swift_retain();
    v6 = v4(v5);
    v8 = v7;
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x24BEE4EA0] & *a1) + 0x60))(v6, v8);
  }
  else
  {
    type metadata accessor for ReactionPickerViewModel();
    lazy protocol witness table accessor for type ReactionPickerViewModel and conformance ReactionPickerViewModel();
    result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t CustomReactionPicker.init()()
{
  type metadata accessor for ReactionPickerViewModel();
  lazy protocol witness table accessor for type ReactionPickerViewModel and conformance ReactionPickerViewModel();
  return EnvironmentObject.init()();
}

uint64_t default argument 0 of CustomReactionPicker.init(model:)()
{
  type metadata accessor for ReactionPickerViewModel();
  lazy protocol witness table accessor for type ReactionPickerViewModel and conformance ReactionPickerViewModel();
  return EnvironmentObject.init()();
}

unint64_t lazy protocol witness table accessor for type CustomReactionPicker and conformance CustomReactionPicker()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type CustomReactionPicker and conformance CustomReactionPicker;
  if (!lazy protocol witness table cache variable for type CustomReactionPicker and conformance CustomReactionPicker)
  {
    result = MEMORY[0x2207D4924](&protocol conformance descriptor for CustomReactionPicker, &type metadata for CustomReactionPicker);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CustomReactionPicker and conformance CustomReactionPicker);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type CustomReactionPicker and conformance CustomReactionPicker;
  if (!lazy protocol witness table cache variable for type CustomReactionPicker and conformance CustomReactionPicker)
  {
    result = MEMORY[0x2207D4924](&protocol conformance descriptor for CustomReactionPicker, &type metadata for CustomReactionPicker);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CustomReactionPicker and conformance CustomReactionPicker);
  }
  return result;
}

id protocol witness for UIViewRepresentable.makeUIView(context:) in conformance CustomReactionPicker()
{
  return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CustomReactionPickerEntryView()), sel_init);
}

uint64_t protocol witness for UIViewRepresentable.updateUIView(_:context:) in conformance CustomReactionPicker(_QWORD *a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  if (*(_QWORD *)v1)
  {
    v3 = *(uint64_t (**)(uint64_t))(**(_QWORD **)v1 + 368);
    v4 = swift_retain();
    v5 = v3(v4);
    v7 = v6;
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t))((*MEMORY[0x24BEE4EA0] & *a1) + 0x60))(v5, v7);
  }
  else
  {
    type metadata accessor for ReactionPickerViewModel();
    lazy protocol witness table accessor for type ReactionPickerViewModel and conformance ReactionPickerViewModel();
    result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t protocol witness for UIViewRepresentable.sizeThatFits(_:uiView:context:) in conformance CustomReactionPicker()
{
  return UIViewRepresentable.sizeThatFits(_:uiView:context:)();
}

uint64_t associated type witness table accessor for View.Body : View in CustomReactionPicker()
{
  return MEMORY[0x24BDF5560];
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance CustomReactionPicker()
{
  lazy protocol witness table accessor for type CustomReactionPicker and conformance CustomReactionPicker();
  return static UIViewRepresentable._makeView(view:inputs:)();
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance CustomReactionPicker()
{
  lazy protocol witness table accessor for type CustomReactionPicker and conformance CustomReactionPicker();
  return static UIViewRepresentable._makeViewList(view:inputs:)();
}

uint64_t protocol witness for static View._viewListCount(inputs:) in conformance CustomReactionPicker()
{
  return static View._viewListCount(inputs:)();
}

void protocol witness for View.body.getter in conformance CustomReactionPicker()
{
  lazy protocol witness table accessor for type CustomReactionPicker and conformance CustomReactionPicker();
  UIViewRepresentable.body.getter();
  __break(1u);
}

uint64_t method lookup function for CustomReactionPickerEntryView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CustomReactionPickerEntryView.onReaction.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x58))();
}

uint64_t dispatch thunk of CustomReactionPickerEntryView.onReaction.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of CustomReactionPickerEntryView.onReaction.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

_QWORD *initializeBufferWithCopyOfBuffer for CustomReactionPicker(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for CustomReactionPicker()
{
  return swift_release();
}

_QWORD *assignWithCopy for CustomReactionPicker(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  return a1;
}

_QWORD *assignWithTake for CustomReactionPicker(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for CustomReactionPicker(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CustomReactionPicker(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CustomReactionPicker()
{
  return &type metadata for CustomReactionPicker;
}

uint64_t sub_21FDA5F78()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed String?) -> (@out ())(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return thunk for @escaping @callee_guaranteed (@in_guaranteed String?) -> (@out ())(a1, a2, *(uint64_t (**)(_QWORD *))(v2 + 16));
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@guaranteed String?) -> ()(_QWORD *a1)
{
  uint64_t v1;

  return thunk for @escaping @callee_guaranteed (@guaranteed String?) -> ()(a1, *(uint64_t (**)(_QWORD, _QWORD))(v1 + 16));
}

uint64_t ReactionPickerBubble.model.getter(uint64_t a1)
{
  uint64_t result;

  if (a1)
    return swift_retain();
  type metadata accessor for ReactionPickerViewModel();
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel((unint64_t *)&lazy protocol witness table cache variable for type ReactionPickerViewModel and conformance ReactionPickerViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ReactionPickerViewModel, (uint64_t)"uh}.4z");
  result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t ReactionPickerBubble.$model.getter()
{
  type metadata accessor for ReactionPickerViewModel();
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel((unint64_t *)&lazy protocol witness table cache variable for type ReactionPickerViewModel and conformance ReactionPickerViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ReactionPickerViewModel, (uint64_t)"uh}.4z");
  return EnvironmentObject.projectedValue.getter();
}

uint64_t ReactionPickerBubble.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t);
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (**v37)();
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v61 = a5;
  v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialRangeThrough<DynamicTypeSize>);
  MEMORY[0x24BDAC7A8](v53, v9);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(ForEach<[(offset: Int, element: String)], Int, ModifiedContent<ReactionButton, _AnimationModifier<Bool>>>, ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ReactionButton, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<MoreReactions, _ScaleEffect>, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>>>>, _AnimationModifier<String?>>)>>);
  MEMORY[0x24BDAC7A8](v51, v12);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0);
  v55 = *(_QWORD *)(v15 - 8);
  v56 = v15;
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>);
  MEMORY[0x24BDAC7A8](v52, v19);
  v21 = (char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>);
  MEMORY[0x24BDAC7A8](v54, v22);
  v24 = (char *)&v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>);
  MEMORY[0x24BDAC7A8](v57, v25);
  v59 = (uint64_t)&v50 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v14 = static VerticalAlignment.center.getter();
  *((_QWORD *)v14 + 1) = 0x4030800000000000;
  v14[16] = 0;
  v27 = &v14[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(ForEach<[(offset: Int, element: String)], Int, ModifiedContent<ReactionButton, _AnimationModifier<Bool>>>, ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ReactionButton, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<MoreReactions, _ScaleEffect>, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>>>>, _AnimationModifier<String?>>)>>)
                    + 44)];
  v60 = a2;
  v58 = a3;
  closure #1 in ReactionPickerBubble.body.getter(a1, a2, a3, a4, v27);
  v28 = *MEMORY[0x24BDECF28];
  v29 = type metadata accessor for DynamicTypeSize();
  v30 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v11, v28, v29);
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type DynamicTypeSize and conformance DynamicTypeSize, v30, MEMORY[0x24BDECF78]);
  result = dispatch thunk of static Equatable.== infix(_:_:)();
  if ((result & 1) != 0)
  {
    lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type HStack<TupleView<(ForEach<[(offset: Int, element: String)], Int, ModifiedContent<ReactionButton, _AnimationModifier<Bool>>>, ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ReactionButton, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<MoreReactions, _ScaleEffect>, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>>>>, _AnimationModifier<String?>>)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(ForEach<[(offset: Int, element: String)], Int, ModifiedContent<ReactionButton, _AnimationModifier<Bool>>>, ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ReactionButton, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<MoreReactions, _ScaleEffect>, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>>>>, _AnimationModifier<String?>>)>>, MEMORY[0x24BDF4498]);
    lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type PartialRangeThrough<DynamicTypeSize> and conformance PartialRangeThrough<A>, &demangling cache variable for type metadata for PartialRangeThrough<DynamicTypeSize>, MEMORY[0x24BEE30C8]);
    View.dynamicTypeSize<A>(_:)();
    outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v11, &demangling cache variable for type metadata for PartialRangeThrough<DynamicTypeSize>);
    outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v14, &demangling cache variable for type metadata for HStack<TupleView<(ForEach<[(offset: Int, element: String)], Int, ModifiedContent<ReactionButton, _AnimationModifier<Bool>>>, ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ReactionButton, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<MoreReactions, _ScaleEffect>, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>>>>, _AnimationModifier<String?>>)>>);
    v32 = swift_allocObject();
    v33 = v60;
    *(_QWORD *)(v32 + 16) = a1;
    *(_QWORD *)(v32 + 24) = v33;
    v34 = v58 & 1;
    *(_BYTE *)(v32 + 32) = v34;
    *(_QWORD *)(v32 + 40) = a4;
    v36 = v55;
    v35 = v56;
    (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v21, v18, v56);
    v37 = (uint64_t (**)())&v21[*(int *)(v52 + 36)];
    *v37 = partial apply for closure #2 in ReactionPickerBubble.body.getter;
    v37[1] = (uint64_t (*)())v32;
    v37[2] = 0;
    v37[3] = 0;
    v38 = *(void (**)(char *, uint64_t))(v36 + 8);
    swift_retain();
    swift_retain();
    v38(v18, v35);
    v39 = swift_allocObject();
    *(_QWORD *)(v39 + 16) = a1;
    *(_QWORD *)(v39 + 24) = v33;
    *(_BYTE *)(v39 + 32) = v34;
    *(_QWORD *)(v39 + 40) = a4;
    outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>((uint64_t)v21, (uint64_t)v24, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>);
    v40 = &v24[*(int *)(v54 + 36)];
    *(_QWORD *)v40 = 0;
    *((_QWORD *)v40 + 1) = 0;
    *((_QWORD *)v40 + 2) = partial apply for closure #3 in ReactionPickerBubble.body.getter;
    *((_QWORD *)v40 + 3) = v39;
    swift_retain();
    swift_retain();
    outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v21, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>);
    LOBYTE(v39) = static Edge.Set.all.getter();
    v41 = v59;
    outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>((uint64_t)v24, v59, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>);
    v42 = v41 + *(int *)(v57 + 36);
    *(_BYTE *)v42 = v39;
    *(_OWORD *)(v42 + 8) = xmmword_21FDD6330;
    *(_OWORD *)(v42 + 24) = xmmword_21FDD6340;
    *(_BYTE *)(v42 + 40) = 0;
    outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v24, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>);
    v43 = static Alignment.bottomTrailing.getter();
    v45 = v44;
    v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>, _BackgroundModifier<_ConditionalContent<GeometryReader<ModifiedContent<_ShapeView<ScaledShape<PopoverBubble>, Material>, _AnimationModifier<Bool>>>, ModifiedContent<_ShapeView<ScaledShape<Capsule>, Material>, _AnimationModifier<Bool>>>>>);
    v47 = v61;
    v48 = v61 + *(int *)(v46 + 36);
    closure #4 in ReactionPickerBubble.body.getter(a1, v33, v34, a4, v48);
    v49 = (uint64_t *)(v48
                    + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _BackgroundModifier<_ConditionalContent<GeometryReader<ModifiedContent<_ShapeView<ScaledShape<PopoverBubble>, Material>, _AnimationModifier<Bool>>>, ModifiedContent<_ShapeView<ScaledShape<Capsule>, Material>, _AnimationModifier<Bool>>>>)
                             + 36));
    *v49 = v43;
    v49[1] = v45;
    return outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>(v41, v47, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t closure #1 in ReactionPickerBubble.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  void (*v52)(char *, uint64_t);
  uint64_t result;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v58 = a5;
  v59 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEach<[(offset: Int, element: String)], Int, ModifiedContent<ReactionButton, _AnimationModifier<Bool>>>);
  v70 = *(_QWORD *)(v59 - 8);
  v10 = MEMORY[0x24BDAC7A8](v59, v9);
  v71 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v15 = (char *)&v54 - v14;
  MEMORY[0x24BDAC7A8](v13, v16);
  v69 = (char *)&v54 - v17;
  if (a1)
  {
    v18 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 272);
    v19 = swift_retain();
    v20 = v18(v19);
    swift_release();
    v21 = specialized _copySequenceToContiguousArray<A>(_:)(v20);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v81 = v21;
    swift_getKeyPath();
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = a1;
    *(_QWORD *)(v22 + 24) = a2;
    v23 = a3 & 1;
    *(_BYTE *)(v22 + 32) = v23;
    *(_QWORD *)(v22 + 40) = a4;
    *(_OWORD *)(v22 + 48) = xmmword_21FDD6350;
    v24 = swift_allocObject();
    v68 = a2;
    *(_QWORD *)(v24 + 16) = partial apply for closure #1 in closure #1 in ReactionPickerBubble.body.getter;
    *(_QWORD *)(v24 + 24) = v22;
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [(offset: Int, element: String)]);
    v25 = a4;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ReactionButton, _AnimationModifier<Bool>>);
    lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type [(offset: Int, element: String)] and conformance [A], &demangling cache variable for type metadata for [(offset: Int, element: String)], MEMORY[0x24BEE12D8]);
    lazy protocol witness table accessor for type ModifiedContent<ReactionButton, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    ForEach<>.init(_:id:content:)();
    v26 = v69;
    v27 = v70;
    v28 = v59;
    (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v69, v15, v59);
    v29 = static Alignment.center.getter();
    v57 = v30;
    closure #2 in closure #1 in ReactionPickerBubble.body.getter(a1, v23, v25, &v81);
    v31 = v81;
    v55 = v82;
    v56 = *((_QWORD *)&v81 + 1);
    v54 = v84;
    v60 = v85;
    v61 = v83;
    v67 = v87;
    v68 = v86;
    v65 = v89;
    v66 = v88;
    LOBYTE(v25) = v90;
    static Animation.spring(response:dampingFraction:blendDuration:)();
    v64 = Animation.speed(_:)();
    swift_release();
    v32 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 224);
    v33 = swift_retain();
    v34 = v32(v33);
    v62 = v35;
    v63 = v34;
    swift_release();
    v72 = v25;
    v36 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
    v37 = v71;
    v36(v71, v26, v28);
    LOBYTE(v32) = v72;
    v38 = v58;
    v39 = v37;
    v40 = v28;
    v36(v58, v39, v28);
    v41 = &v38[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ForEach<[(offset: Int, element: String)], Int, ModifiedContent<ReactionButton, _AnimationModifier<Bool>>>, ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ReactionButton, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<MoreReactions, _ScaleEffect>, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>>>>, _AnimationModifier<String?>>))
                      + 48)];
    v42 = v29;
    v43 = v57;
    *(_QWORD *)&v73 = v29;
    *((_QWORD *)&v73 + 1) = v57;
    v44 = v31;
    *(_QWORD *)&v74 = v31;
    v46 = v55;
    v45 = v56;
    *((_QWORD *)&v74 + 1) = v56;
    *(_QWORD *)&v75 = v55;
    v47 = v54;
    *((_QWORD *)&v75 + 1) = v61;
    *(_QWORD *)&v76 = v54;
    *((_QWORD *)&v76 + 1) = v60;
    *(_QWORD *)&v77 = v68;
    *((_QWORD *)&v77 + 1) = v67;
    *(_QWORD *)&v78 = v66;
    *((_QWORD *)&v78 + 1) = v65;
    LOBYTE(v79) = (_BYTE)v32;
    *((_QWORD *)&v79 + 1) = v64;
    *(_QWORD *)&v80 = v63;
    *((_QWORD *)&v80 + 1) = v62;
    v48 = v74;
    *(_OWORD *)v41 = v73;
    *((_OWORD *)v41 + 1) = v48;
    v49 = v78;
    *((_OWORD *)v41 + 4) = v77;
    *((_OWORD *)v41 + 5) = v49;
    v50 = v80;
    *((_OWORD *)v41 + 6) = v79;
    *((_OWORD *)v41 + 7) = v50;
    v51 = v76;
    *((_OWORD *)v41 + 2) = v75;
    *((_OWORD *)v41 + 3) = v51;
    outlined retain of ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ReactionButton, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<MoreReactions, _ScaleEffect>, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>>>>, _AnimationModifier<String?>>((uint64_t)&v73);
    v52 = *(void (**)(char *, uint64_t))(v70 + 8);
    v52(v69, v40);
    *(_QWORD *)&v81 = v42;
    *((_QWORD *)&v81 + 1) = v43;
    v82 = v44;
    v83 = v45;
    v84 = v46;
    v85 = v61;
    v86 = v47;
    v87 = v60;
    v88 = v68;
    v89 = v67;
    v90 = v66;
    v91 = v65;
    v92 = (char)v32;
    v93 = v64;
    v94 = v63;
    v95 = v62;
    outlined release of ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ReactionButton, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<MoreReactions, _ScaleEffect>, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>>>>, _AnimationModifier<String?>>((uint64_t)&v81);
    return ((uint64_t (*)(char *, uint64_t))v52)(v71, v40);
  }
  else
  {
    type metadata accessor for ReactionPickerViewModel();
    lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel((unint64_t *)&lazy protocol witness table cache variable for type ReactionPickerViewModel and conformance ReactionPickerViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ReactionPickerViewModel, (uint64_t)"uh}.4z");
    result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t closure #1 in closure #1 in ReactionPickerBubble.body.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  char v11;

  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.getter();
  type metadata accessor for ReactionPickerViewModel();
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel((unint64_t *)&lazy protocol witness table cache variable for type ReactionPickerViewModel and conformance ReactionPickerViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ReactionPickerViewModel, (uint64_t)"uh}.4z");
  v5 = EnvironmentObject.init()();
  v7 = v6;
  static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)();
  v8 = Animation.delay(_:)();
  swift_release();
  result = State.wrappedValue.getter();
  *(_QWORD *)a3 = v5;
  *(_QWORD *)(a3 + 8) = v7;
  *(_QWORD *)(a3 + 16) = a1;
  *(_QWORD *)(a3 + 24) = a2;
  *(_BYTE *)(a3 + 32) = v11;
  *(_QWORD *)(a3 + 40) = v8;
  *(_BYTE *)(a3 + 48) = v11;
  return result;
}

uint64_t closure #2 in closure #1 in ReactionPickerBubble.body.getter@<X0>(uint64_t a1@<X0>, char a2@<W2>, uint64_t a3@<X3>, _OWORD *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  _QWORD *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t result;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  char v60;
  _OWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _OWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  char v93;

  v76 = a4;
  v73 = type metadata accessor for OpacityTransition();
  v71 = *(_QWORD *)(v73 - 8);
  MEMORY[0x24BDAC7A8](v73, v7);
  v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ScaleTransition();
  v70 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of Transition.combined<A>(with:)>>.0);
  v74 = *(_QWORD *)(v75 - 8);
  v15 = MEMORY[0x24BDAC7A8](v75, v14);
  v72 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15, v17);
  v69 = (char *)&v62 - v18;
  if (a1)
  {
    v19 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 224);
    v20 = swift_retain();
    v21 = v19(v20);
    v23 = v22;
    swift_release();
    if (v23)
    {
      v24 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 272);
      v25 = swift_retain();
      v26 = (_QWORD *)v24(v25);
      swift_release();
      v68 = v21;
      v27 = specialized Sequence<>.contains(_:)(v21, v23, v26);
      swift_bridgeObjectRelease();
      if ((v27 & 1) == 0)
      {
        LODWORD(v63) = a2 & 1;
        LOBYTE(v88) = a2 & 1;
        *((_QWORD *)&v88 + 1) = a3;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
        State.wrappedValue.getter();
        v67 = v77;
        type metadata accessor for ReactionPickerViewModel();
        lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel((unint64_t *)&lazy protocol witness table cache variable for type ReactionPickerViewModel and conformance ReactionPickerViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ReactionPickerViewModel, (uint64_t)"uh}.4z");
        v66 = EnvironmentObject.init()();
        v65 = v46;
        static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)();
        v47 = swift_retain();
        v24(v47);
        swift_release();
        swift_bridgeObjectRelease();
        v64 = Animation.delay(_:)();
        swift_release();
        LOBYTE(v88) = v63;
        *((_QWORD *)&v88 + 1) = a3;
        State.wrappedValue.getter();
        v63 = v77;
        static UnitPoint.center.getter();
        ScaleTransition.init(_:anchor:)();
        OpacityTransition.init()();
        v48 = lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type ScaleTransition and conformance ScaleTransition, (uint64_t (*)(uint64_t))MEMORY[0x24BDED3E0], MEMORY[0x24BDED3D8]);
        v49 = lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type OpacityTransition and conformance OpacityTransition, (uint64_t (*)(uint64_t))MEMORY[0x24BDEE630], MEMORY[0x24BDEE620]);
        v50 = v69;
        v51 = v73;
        Transition.combined<A>(with:)();
        (*(void (**)(char *, uint64_t))(v71 + 8))(v9, v51);
        (*(void (**)(char *, uint64_t))(v70 + 8))(v13, v10);
        v52 = v74;
        v53 = v75;
        (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v72, v50, v75);
        *(_QWORD *)&v88 = v10;
        *((_QWORD *)&v88 + 1) = v51;
        *(_QWORD *)&v89 = v48;
        *((_QWORD *)&v89 + 1) = v49;
        swift_getOpaqueTypeConformance2();
        v54 = AnyTransition.init<A>(_:)();
        (*(void (**)(char *, uint64_t))(v52 + 8))(v50, v53);
        v77 = v66;
        v78 = v65;
        v79 = v68;
        v80 = v23;
        v81 = v67;
        v82 = v64;
        v83 = v63;
        v84 = v54;
        v85 = 0;
        v86 = 0;
        v87 = 0;
LABEL_9:
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ReactionButton, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>>);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<MoreReactions, _ScaleEffect>, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>>);
        lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ReactionButton, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>> and conformance <> ModifiedContent<A, B>();
        lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<MoreReactions, _ScaleEffect>, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>> and conformance <> ModifiedContent<A, B>();
        result = _ConditionalContent<>.init(storage:)();
        v56 = v89;
        v57 = v90;
        v58 = v91;
        v59 = v92;
        v60 = v93;
        v61 = v76;
        *v76 = v88;
        v61[1] = v56;
        v61[2] = v57;
        v61[3] = v58;
        v61[4] = v59;
        *((_BYTE *)v61 + 80) = v60;
        return result;
      }
      swift_bridgeObjectRelease();
    }
    v67 = FocusState.init<>()();
    v68 = v28;
    v66 = v29;
    v30 = a2 & 1;
    LOBYTE(v88) = a2 & 1;
    *((_QWORD *)&v88 + 1) = a3;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
    State.wrappedValue.getter();
    LODWORD(v65) = v77;
    static UnitPoint.center.getter();
    v32 = v31;
    v34 = v33;
    static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)();
    v35 = *(void (**)(uint64_t))(*(_QWORD *)a1 + 272);
    v36 = swift_retain();
    v35(v36);
    swift_release();
    swift_bridgeObjectRelease();
    v64 = Animation.delay(_:)();
    swift_release();
    LOBYTE(v88) = v30;
    *((_QWORD *)&v88 + 1) = a3;
    State.wrappedValue.getter();
    v37 = v77;
    static UnitPoint.center.getter();
    ScaleTransition.init(_:anchor:)();
    OpacityTransition.init()();
    v38 = lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type ScaleTransition and conformance ScaleTransition, (uint64_t (*)(uint64_t))MEMORY[0x24BDED3E0], MEMORY[0x24BDED3D8]);
    v39 = lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type OpacityTransition and conformance OpacityTransition, (uint64_t (*)(uint64_t))MEMORY[0x24BDEE630], MEMORY[0x24BDEE620]);
    v40 = v69;
    v41 = v73;
    Transition.combined<A>(with:)();
    (*(void (**)(char *, uint64_t))(v71 + 8))(v9, v41);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v13, v10);
    v42 = v74;
    v43 = v75;
    (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v72, v40, v75);
    *(_QWORD *)&v88 = v10;
    *((_QWORD *)&v88 + 1) = v41;
    *(_QWORD *)&v89 = v38;
    *((_QWORD *)&v89 + 1) = v39;
    swift_getOpaqueTypeConformance2();
    v44 = AnyTransition.init<A>(_:)();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v40, v43);
    v77 = v67 & 1;
    v78 = v68;
    v45 = 0x3FF0000000000000;
    if (!(_DWORD)v65)
      v45 = 0;
    v79 = v66 & 1;
    v80 = v45;
    v81 = v45;
    v82 = v32;
    v83 = v34;
    v84 = v64;
    v85 = v37;
    v86 = v44;
    v87 = 1;
    goto LABEL_9;
  }
  type metadata accessor for ReactionPickerViewModel();
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel((unint64_t *)&lazy protocol witness table cache variable for type ReactionPickerViewModel and conformance ReactionPickerViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ReactionPickerViewModel, (uint64_t)"uh}.4z");
  result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t specialized Sequence<>.contains(_:)(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = _stringCompareWithSmolCheck(_:_:expecting:)();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_21FDA7400()
{
  return objectdestroyTm_0();
}

uint64_t partial apply for closure #2 in ReactionPickerBubble.body.getter()
{
  return partial apply for closure #2 in ReactionPickerBubble.body.getter();
}

{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  return State.wrappedValue.setter();
}

uint64_t sub_21FDA7410()
{
  return objectdestroyTm_0();
}

uint64_t partial apply for closure #3 in ReactionPickerBubble.body.getter()
{
  return partial apply for closure #2 in ReactionPickerBubble.body.getter();
}

uint64_t closure #4 in ReactionPickerBubble.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  double v38;
  double *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char *v44;
  uint64_t v45;
  uint64_t result;
  uint64_t v47;
  uint64_t v48;
  uint64_t (**v49)@<X0>(uint64_t@<X8>);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t (**v58)@<X0>(uint64_t@<X8>);
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  char v63;

  v56 = a3;
  v51 = a2;
  v60 = a5;
  v7 = type metadata accessor for Material();
  v53 = *(_QWORD *)(v7 - 8);
  v54 = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Capsule();
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledShape<Capsule>);
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ShapeView<ScaledShape<Capsule>, Material>);
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = (char *)&v50 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ShapeView<ScaledShape<Capsule>, Material>, _AnimationModifier<Bool>>);
  v24 = MEMORY[0x24BDAC7A8](v59, v23);
  v26 = (char *)&v50 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24, v27);
  v55 = (uint64_t)&v50 - v28;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<GeometryReader<ModifiedContent<_ShapeView<ScaledShape<PopoverBubble>, Material>, _AnimationModifier<Bool>>>, ModifiedContent<_ShapeView<ScaledShape<Capsule>, Material>, _AnimationModifier<Bool>>>.Storage);
  MEMORY[0x24BDAC7A8](v57, v29);
  v58 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)&v50 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1)
  {
    v31 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 176);
    v32 = swift_retain();
    if ((v31(v32) & 1) != 0)
    {
      v33 = a4;
      v34 = (*(uint64_t (**)(void))(*(_QWORD *)a1 + 320))();
      swift_release();
      if (!v34)
      {
        v47 = swift_allocObject();
        v48 = v51;
        *(_QWORD *)(v47 + 16) = a1;
        *(_QWORD *)(v47 + 24) = v48;
        *(_BYTE *)(v47 + 32) = v56 & 1;
        *(_QWORD *)(v47 + 40) = v33;
        v49 = v58;
        *v58 = partial apply for closure #1 in closure #4 in ReactionPickerBubble.body.getter;
        v49[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v47;
        swift_storeEnumTagMultiPayload();
        swift_retain();
        swift_retain();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GeometryReader<ModifiedContent<_ShapeView<ScaledShape<PopoverBubble>, Material>, _AnimationModifier<Bool>>>);
        lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type GeometryReader<ModifiedContent<_ShapeView<ScaledShape<PopoverBubble>, Material>, _AnimationModifier<Bool>>> and conformance GeometryReader<A>, &demangling cache variable for type metadata for GeometryReader<ModifiedContent<_ShapeView<ScaledShape<PopoverBubble>, Material>, _AnimationModifier<Bool>>>, MEMORY[0x24BDEC6F8]);
        lazy protocol witness table accessor for type ModifiedContent<_ShapeView<ScaledShape<Capsule>, Material>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>();
        return _ConditionalContent<>.init(storage:)();
      }
      a4 = v33;
    }
    v52 = a4;
    swift_release();
    v35 = *MEMORY[0x24BDEEB68];
    v36 = type metadata accessor for RoundedCornerStyle();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v14, v35, v36);
    v37 = v56 & 1;
    v61 = v56 & 1;
    v62 = a4;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
    State.wrappedValue.getter();
    if (v63)
      v38 = 1.0;
    else
      v38 = 0.1;
    outlined init with copy of Capsule((uint64_t)v14, (uint64_t)v18);
    v39 = (double *)&v18[*(int *)(v15 + 36)];
    *v39 = v38;
    v39[1] = v38;
    *(_OWORD *)&v18[*(int *)(v15 + 40)] = xmmword_21FDD6360;
    outlined destroy of Capsule((uint64_t)v14);
    static Material.thick.getter();
    outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>((uint64_t)v18, (uint64_t)v22, &demangling cache variable for type metadata for ScaledShape<Capsule>);
    v41 = v53;
    v40 = v54;
    (*(void (**)(char *, char *, uint64_t))(v53 + 16))(&v22[*(int *)(v19 + 52)], v10, v54);
    *(_WORD *)&v22[*(int *)(v19 + 56)] = 256;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v10, v40);
    outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v18, &demangling cache variable for type metadata for ScaledShape<Capsule>);
    v42 = static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)();
    v61 = v37;
    v62 = v52;
    State.wrappedValue.getter();
    v43 = v63;
    outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>((uint64_t)v22, (uint64_t)v26, &demangling cache variable for type metadata for _ShapeView<ScaledShape<Capsule>, Material>);
    v44 = &v26[*(int *)(v59 + 36)];
    *(_QWORD *)v44 = v42;
    v44[8] = v43;
    outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v22, &demangling cache variable for type metadata for _ShapeView<ScaledShape<Capsule>, Material>);
    v45 = v55;
    outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>((uint64_t)v26, v55, &demangling cache variable for type metadata for ModifiedContent<_ShapeView<ScaledShape<Capsule>, Material>, _AnimationModifier<Bool>>);
    outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>(v45, (uint64_t)v58, &demangling cache variable for type metadata for ModifiedContent<_ShapeView<ScaledShape<Capsule>, Material>, _AnimationModifier<Bool>>);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GeometryReader<ModifiedContent<_ShapeView<ScaledShape<PopoverBubble>, Material>, _AnimationModifier<Bool>>>);
    lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type GeometryReader<ModifiedContent<_ShapeView<ScaledShape<PopoverBubble>, Material>, _AnimationModifier<Bool>>> and conformance GeometryReader<A>, &demangling cache variable for type metadata for GeometryReader<ModifiedContent<_ShapeView<ScaledShape<PopoverBubble>, Material>, _AnimationModifier<Bool>>>, MEMORY[0x24BDEC6F8]);
    lazy protocol witness table accessor for type ModifiedContent<_ShapeView<ScaledShape<Capsule>, Material>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    return outlined destroy of PartialRangeThrough<DynamicTypeSize>(v45, &demangling cache variable for type metadata for ModifiedContent<_ShapeView<ScaledShape<Capsule>, Material>, _AnimationModifier<Bool>>);
  }
  else
  {
    type metadata accessor for ReactionPickerViewModel();
    lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel((unint64_t *)&lazy protocol witness table cache variable for type ReactionPickerViewModel and conformance ReactionPickerViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ReactionPickerViewModel, (uint64_t)"uh}.4z");
    result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t closure #1 in closure #4 in ReactionPickerBubble.body.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, int a3@<W3>, unint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double (*v25)(uint64_t);
  uint64_t v26;
  double v27;
  double v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  double v31;
  double v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  double v38;
  char v39;
  unint64_t v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t result;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  char v54;
  unint64_t v55;
  unint64_t v56;

  v52 = a4;
  v53 = a5;
  v49 = a3;
  v47 = a2;
  v51 = type metadata accessor for Material();
  v48 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51, v6);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ShapeView<ScaledShape<PopoverBubble>, Material>);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (double *)((char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ShapeView<ScaledShape<PopoverBubble>, Material>, _AnimationModifier<Bool>>);
  MEMORY[0x24BDAC7A8](v50, v13);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for NamedCoordinateSpace();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v18);
  v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = 0xD000000000000019;
  v56 = 0x800000021FDD8EC0;
  static CoordinateSpaceProtocol<>.named<A>(_:)();
  GeometryProxy.frame<A>(in:)();
  v22 = v21;
  v24 = v23;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  if (a1)
  {
    v25 = *(double (**)(uint64_t))(*(_QWORD *)a1 + 128);
    v26 = swift_retain();
    v27 = v25(v26);
    swift_release();
    v28 = v27 - v22;
    v29 = *(void (**)(uint64_t))(*(_QWORD *)a1 + 128);
    v30 = swift_retain();
    v29(v30);
    v32 = v31;
    v33 = swift_release();
    v34 = destructiveProjectEnumData for GroupActivitySharingResult(v33, v28, v32 - v24);
    v36 = v35;
    GeometryProxy.size.getter();
    v38 = v37 - v34;
    v39 = v49 & 1;
    LOBYTE(v55) = v49 & 1;
    v40 = v52;
    v56 = v52;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
    State.wrappedValue.getter();
    if (v54)
      v41 = 1.0;
    else
      v41 = 0.1;
    static Material.thick.getter();
    v42 = v48;
    v43 = v51;
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))((char *)v12 + *(int *)(v9 + 52), v8, v51);
    *(_OWORD *)v12 = xmmword_21FDD6370;
    v12[2] = v38;
    *((_QWORD *)v12 + 3) = v36;
    v12[4] = v41;
    v12[5] = v41;
    *((_OWORD *)v12 + 3) = xmmword_21FDD6360;
    *(_WORD *)((char *)v12 + *(int *)(v9 + 56)) = 256;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v8, v43);
    v44 = static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)();
    LOBYTE(v55) = v39;
    v56 = v40;
    State.wrappedValue.getter();
    LOBYTE(v43) = v54;
    outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>((uint64_t)v12, (uint64_t)v15, &demangling cache variable for type metadata for _ShapeView<ScaledShape<PopoverBubble>, Material>);
    v45 = &v15[*(int *)(v50 + 36)];
    *(_QWORD *)v45 = v44;
    v45[8] = v43;
    outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v12, &demangling cache variable for type metadata for _ShapeView<ScaledShape<PopoverBubble>, Material>);
    return outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>((uint64_t)v15, v53, &demangling cache variable for type metadata for ModifiedContent<_ShapeView<ScaledShape<PopoverBubble>, Material>, _AnimationModifier<Bool>>);
  }
  else
  {
    type metadata accessor for ReactionPickerViewModel();
    lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel((unint64_t *)&lazy protocol witness table cache variable for type ReactionPickerViewModel and conformance ReactionPickerViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ReactionPickerViewModel, (uint64_t)"uh}.4z");
    result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t ReactionPickerBubble.init()()
{
  uint64_t v0;

  type metadata accessor for ReactionPickerViewModel();
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel((unint64_t *)&lazy protocol witness table cache variable for type ReactionPickerViewModel and conformance ReactionPickerViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ReactionPickerViewModel, (uint64_t)"uh}.4z");
  v0 = EnvironmentObject.init()();
  State.init(wrappedValue:)();
  return v0;
}

uint64_t default argument 0 of ReactionPickerBubble.init(model:)()
{
  type metadata accessor for ReactionPickerViewModel();
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel((unint64_t *)&lazy protocol witness table cache variable for type ReactionPickerViewModel and conformance ReactionPickerViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ReactionPickerViewModel, (uint64_t)"uh}.4z");
  return EnvironmentObject.init()();
}

uint64_t ReactionPickerBubble.init(model:)(uint64_t a1)
{
  State.init(wrappedValue:)();
  return a1;
}

uint64_t associated type witness table accessor for View.Body : View in ReactionPickerBubble()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t protocol witness for View.body.getter in conformance ReactionPickerBubble@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return ReactionPickerBubble.body.getter(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(unsigned __int8 *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t initializeBufferWithCopyOfBuffer for ReactionPickerBubble(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for ReactionPickerBubble()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for ReactionPickerBubble(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ReactionPickerBubble(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for ReactionPickerBubble(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ReactionPickerBubble(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ReactionPickerBubble(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReactionPickerBubble()
{
  return &type metadata for ReactionPickerBubble;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>, _BackgroundModifier<_ConditionalContent<GeometryReader<ModifiedContent<_ShapeView<ScaledShape<PopoverBubble>, Material>, _AnimationModifier<Bool>>>, ModifiedContent<_ShapeView<ScaledShape<Capsule>, Material>, _AnimationModifier<Bool>>>>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>, _BackgroundModifier<_ConditionalContent<GeometryReader<ModifiedContent<_ShapeView<ScaledShape<PopoverBubble>, Material>, _AnimationModifier<Bool>>>, ModifiedContent<_ShapeView<ScaledShape<Capsule>, Material>, _AnimationModifier<Bool>>>>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>, _BackgroundModifier<_ConditionalContent<GeometryReader<ModifiedContent<_ShapeView<ScaledShape<PopoverBubble>, Material>, _AnimationModifier<Bool>>>, ModifiedContent<_ShapeView<ScaledShape<Capsule>, Material>, _AnimationModifier<Bool>>>>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>, _BackgroundModifier<_ConditionalContent<GeometryReader<ModifiedContent<_ShapeView<ScaledShape<PopoverBubble>, Material>, _AnimationModifier<Bool>>>, ModifiedContent<_ShapeView<ScaledShape<Capsule>, Material>, _AnimationModifier<Bool>>>>>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>, lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>, MEMORY[0x24BDECC60]);
    v2[1] = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type _BackgroundModifier<_ConditionalContent<GeometryReader<ModifiedContent<_ShapeView<ScaledShape<PopoverBubble>, Material>, _AnimationModifier<Bool>>>, ModifiedContent<_ShapeView<ScaledShape<Capsule>, Material>, _AnimationModifier<Bool>>>> and conformance _BackgroundModifier<A>, &demangling cache variable for type metadata for _BackgroundModifier<_ConditionalContent<GeometryReader<ModifiedContent<_ShapeView<ScaledShape<PopoverBubble>, Material>, _AnimationModifier<Bool>>>, ModifiedContent<_ShapeView<ScaledShape<Capsule>, Material>, _AnimationModifier<Bool>>>>, MEMORY[0x24BDEF370]);
    result = MEMORY[0x2207D4924](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>, _BackgroundModifier<_ConditionalContent<GeometryReader<ModifiedContent<_ShapeView<ScaledShape<PopoverBubble>, Material>, _AnimationModifier<Bool>>>, ModifiedContent<_ShapeView<ScaledShape<Capsule>, Material>, _AnimationModifier<Bool>>>>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>, MEMORY[0x24BDF0910]);
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout> and conformance <> ModifiedContent<A, B>(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4;
    result = MEMORY[0x2207D4924](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for HStack<TupleView<(ForEach<[(offset: Int, element: String)], Int, ModifiedContent<ReactionButton, _AnimationModifier<Bool>>>, ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ReactionButton, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<MoreReactions, _ScaleEffect>, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>>>>, _AnimationModifier<String?>>)>>);
    v2[3] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for PartialRangeThrough<DynamicTypeSize>);
    v2[4] = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type HStack<TupleView<(ForEach<[(offset: Int, element: String)], Int, ModifiedContent<ReactionButton, _AnimationModifier<Bool>>>, ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ReactionButton, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<MoreReactions, _ScaleEffect>, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>>>>, _AnimationModifier<String?>>)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(ForEach<[(offset: Int, element: String)], Int, ModifiedContent<ReactionButton, _AnimationModifier<Bool>>>, ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ReactionButton, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<MoreReactions, _ScaleEffect>, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>>>>, _AnimationModifier<String?>>)>>, MEMORY[0x24BDF4498]);
    v2[5] = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type PartialRangeThrough<DynamicTypeSize> and conformance PartialRangeThrough<A>, &demangling cache variable for type metadata for PartialRangeThrough<DynamicTypeSize>, MEMORY[0x24BEE30C8]);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x2207D4924](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t outlined init with copy of Capsule(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Capsule();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of Capsule(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Capsule();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<_ShapeView<ScaledShape<Capsule>, Material>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<_ShapeView<ScaledShape<Capsule>, Material>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<_ShapeView<ScaledShape<Capsule>, Material>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<_ShapeView<ScaledShape<Capsule>, Material>, _AnimationModifier<Bool>>);
    v2[0] = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type _ShapeView<ScaledShape<Capsule>, Material> and conformance _ShapeView<A, B>, &demangling cache variable for type metadata for _ShapeView<ScaledShape<Capsule>, Material>, MEMORY[0x24BDEB358]);
    v2[1] = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type _AnimationModifier<Bool> and conformance _AnimationModifier<A>, &demangling cache variable for type metadata for _AnimationModifier<Bool>, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x2207D4924](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<_ShapeView<ScaledShape<Capsule>, Material>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t sub_21FDA83E4()
{
  return objectdestroyTm_0();
}

uint64_t partial apply for closure #1 in closure #4 in ReactionPickerBubble.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return closure #1 in closure #4 in ReactionPickerBubble.body.getter(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

uint64_t outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t outlined destroy of PartialRangeThrough<DynamicTypeSize>(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t specialized _copySequenceToContiguousArray<A>(_:)(uint64_t result)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(result + 16);
  v2 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v1)
  {
    result = swift_bridgeObjectRetain();
    v3 = 0;
    v4 = 0;
    v5 = v2 + 4;
    v6 = (uint64_t *)(result + 40);
    while (1)
    {
      v7 = *(v6 - 1);
      v8 = *v6;
      if (v3)
      {
        result = swift_bridgeObjectRetain();
        v9 = __OFSUB__(v3--, 1);
        if (v9)
          goto LABEL_28;
      }
      else
      {
        v10 = v2[3];
        if ((uint64_t)((v10 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_29;
        v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
        if (v11 <= 1)
          v12 = 1;
        else
          v12 = v11;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(offset: Int, element: String)>);
        v13 = (_QWORD *)swift_allocObject();
        v14 = (uint64_t)(_swift_stdlib_malloc_size(v13) - 32) / 24;
        v13[2] = v12;
        v13[3] = 2 * v14;
        v15 = v13 + 4;
        v16 = v2[3] >> 1;
        v5 = &v13[3 * v16 + 4];
        v17 = (v14 & 0x7FFFFFFFFFFFFFFFLL) - v16;
        if (v2[2])
        {
          if (v13 != v2 || v15 >= &v2[3 * v16 + 4])
            memmove(v15, v2 + 4, 24 * v16);
          swift_bridgeObjectRetain();
          v2[2] = 0;
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        result = swift_release();
        v2 = v13;
        v9 = __OFSUB__(v17, 1);
        v3 = v17 - 1;
        if (v9)
        {
LABEL_28:
          __break(1u);
LABEL_29:
          __break(1u);
LABEL_30:
          __break(1u);
          return result;
        }
      }
      v6 += 2;
      *v5 = v4;
      v5[1] = v7;
      v5[2] = v8;
      v5 += 3;
      if (v1 == ++v4)
      {
        result = swift_bridgeObjectRelease();
        goto LABEL_24;
      }
    }
  }
  v3 = 0;
LABEL_24:
  v19 = v2[3];
  if (v19 >= 2)
  {
    v20 = v19 >> 1;
    v9 = __OFSUB__(v20, v3);
    v21 = v20 - v3;
    if (v9)
      goto LABEL_30;
    v2[2] = v21;
  }
  return (uint64_t)v2;
}

uint64_t sub_21FDA8674()
{
  return objectdestroyTm_0();
}

uint64_t objectdestroyTm_0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in ReactionPickerBubble.body.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return closure #1 in closure #1 in ReactionPickerBubble.body.getter(a1, a2, a3);
}

uint64_t sub_21FDA86C8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@unowned Int, @guaranteed String) -> (@out ModifiedContent<ReactionButton, _AnimationModifier<Bool>>)(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v1 + 16))(*a1, a1[1], a1[2]);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ReactionButton, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ReactionButton, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ReactionButton, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ReactionButton, _AnimationModifier<Bool>>);
    v2[0] = lazy protocol witness table accessor for type ReactionButton and conformance ReactionButton();
    v2[1] = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type _AnimationModifier<Bool> and conformance _AnimationModifier<A>, &demangling cache variable for type metadata for _AnimationModifier<Bool>, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x2207D4924](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ReactionButton, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ReactionButton and conformance ReactionButton()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ReactionButton and conformance ReactionButton;
  if (!lazy protocol witness table cache variable for type ReactionButton and conformance ReactionButton)
  {
    result = MEMORY[0x2207D4924](&protocol conformance descriptor for ReactionButton, &type metadata for ReactionButton);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ReactionButton and conformance ReactionButton);
  }
  return result;
}

uint64_t outlined retain of ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ReactionButton, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<MoreReactions, _ScaleEffect>, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>>>>, _AnimationModifier<String?>>(uint64_t a1)
{
  outlined copy of _ConditionalContent<ModifiedContent<ModifiedContent<ReactionButton, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<MoreReactions, _ScaleEffect>, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>>>.Storage(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_BYTE *)(a1 + 96));
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t outlined copy of _ConditionalContent<ModifiedContent<ModifiedContent<ReactionButton, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<MoreReactions, _ScaleEffect>, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>>>.Storage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  swift_retain();
  swift_retain();
  if ((a11 & 1) != 0)
    return swift_retain();
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t outlined release of ModifiedContent<ZStack<_ConditionalContent<ModifiedContent<ModifiedContent<ReactionButton, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<MoreReactions, _ScaleEffect>, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>>>>, _AnimationModifier<String?>>(uint64_t a1)
{
  outlined consume of _ConditionalContent<ModifiedContent<ModifiedContent<ReactionButton, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<MoreReactions, _ScaleEffect>, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>>>.Storage(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_BYTE *)(a1 + 96));
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t outlined consume of _ConditionalContent<ModifiedContent<ModifiedContent<ReactionButton, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<ModifiedContent<MoreReactions, _ScaleEffect>, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>>>.Storage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  if ((a11 & 1) == 0)
    swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_release();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ReactionButton, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ReactionButton, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ReactionButton, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ReactionButton, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<ReactionButton, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    v2[1] = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type _TraitWritingModifier<TransitionTraitKey> and conformance _TraitWritingModifier<A>, &demangling cache variable for type metadata for _TraitWritingModifier<TransitionTraitKey>, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x2207D4924](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ReactionButton, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<MoreReactions, _ScaleEffect>, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<MoreReactions, _ScaleEffect>, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<MoreReactions, _ScaleEffect>, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<MoreReactions, _ScaleEffect>, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<MoreReactions, _ScaleEffect>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    v2[1] = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type _TraitWritingModifier<TransitionTraitKey> and conformance _TraitWritingModifier<A>, &demangling cache variable for type metadata for _TraitWritingModifier<TransitionTraitKey>, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x2207D4924](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<MoreReactions, _ScaleEffect>, _AnimationModifier<Bool>>, _TraitWritingModifier<TransitionTraitKey>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<MoreReactions, _ScaleEffect>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<MoreReactions, _ScaleEffect>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<MoreReactions, _ScaleEffect>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<MoreReactions, _ScaleEffect>, _AnimationModifier<Bool>>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<MoreReactions, _ScaleEffect> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<MoreReactions, _ScaleEffect>, (uint64_t (*)(void))lazy protocol witness table accessor for type MoreReactions and conformance MoreReactions, MEMORY[0x24BDEBF50]);
    v2[1] = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type _AnimationModifier<Bool> and conformance _AnimationModifier<A>, &demangling cache variable for type metadata for _AnimationModifier<Bool>, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x2207D4924](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<MoreReactions, _ScaleEffect>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type MoreReactions and conformance MoreReactions()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type MoreReactions and conformance MoreReactions;
  if (!lazy protocol witness table cache variable for type MoreReactions and conformance MoreReactions)
  {
    result = MEMORY[0x2207D4924](&protocol conformance descriptor for MoreReactions, &type metadata for MoreReactions);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MoreReactions and conformance MoreReactions);
  }
  return result;
}

id GroupActivityPlaceholderSharingController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id GroupActivityPlaceholderSharingController.rootViewController.getter()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC22_GroupActivities_UIKit41GroupActivityPlaceholderSharingController_rootViewController));
}

uint64_t key path getter for GroupActivityPlaceholderSharingController.placeholderControllerDidCancel : GroupActivityPlaceholderSharingController@<X0>(_QWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD *);

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x60))();
  if (result)
  {
    v5 = result;
    v6 = v4;
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v5;
    *(_QWORD *)(result + 24) = v6;
    v7 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed GroupActivityPlaceholderSharingController) -> ();
  }
  else
  {
    v7 = 0;
  }
  *a2 = v7;
  a2[1] = result;
  return result;
}

uint64_t key path setter for GroupActivityPlaceholderSharingController.placeholderControllerDidCancel : GroupActivityPlaceholderSharingController(uint64_t *a1, _QWORD **a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t (*v7)(uint64_t (*)(uint64_t), uint64_t);

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed GroupActivityPlaceholderSharingController) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(uint64_t (**)(uint64_t (*)(uint64_t), uint64_t))((*MEMORY[0x24BEE4EA0] & **a2) + 0x68);
  outlined copy of (@escaping @callee_guaranteed (@guaranteed String?) -> ())?(v3);
  return v7(v6, v5);
}

uint64_t GroupActivityPlaceholderSharingController.placeholderControllerDidCancel.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0
                 + OBJC_IVAR____TtC22_GroupActivities_UIKit41GroupActivityPlaceholderSharingController_placeholderControllerDidCancel);
  swift_beginAccess();
  v2 = *v1;
  outlined copy of (@escaping @callee_guaranteed (@guaranteed String?) -> ())?(*v1);
  return v2;
}

uint64_t GroupActivityPlaceholderSharingController.placeholderControllerDidCancel.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;

  v5 = (uint64_t *)(v2
                 + OBJC_IVAR____TtC22_GroupActivities_UIKit41GroupActivityPlaceholderSharingController_placeholderControllerDidCancel);
  swift_beginAccess();
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  return outlined consume of (@escaping @callee_guaranteed () -> ())?(v6);
}

uint64_t (*GroupActivityPlaceholderSharingController.placeholderControllerDidCancel.modify())()
{
  swift_beginAccess();
  return ReactionPickerView.reactions.modify;
}

id GroupActivityPlaceholderSharingController.init()()
{
  char *v0;
  char *v1;
  id v2;
  char *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v8;

  v1 = &v0[OBJC_IVAR____TtC22_GroupActivities_UIKit41GroupActivityPlaceholderSharingController_placeholderControllerDidCancel];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v2 = objc_allocWithZone(MEMORY[0x24BEBDB08]);
  v3 = v0;
  v4 = objc_msgSend(v2, sel_init);
  v5 = OBJC_IVAR____TtC22_GroupActivities_UIKit41GroupActivityPlaceholderSharingController_rootViewController;
  *(_QWORD *)&v3[OBJC_IVAR____TtC22_GroupActivities_UIKit41GroupActivityPlaceholderSharingController_rootViewController] = v4;

  v6 = *(_QWORD *)&v3[v5];
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for GroupActivityPlaceholderSharingController();
  return objc_msgSendSuper2(&v8, sel_initWithRootViewController_, v6);
}

uint64_t type metadata accessor for GroupActivityPlaceholderSharingController()
{
  return objc_opt_self();
}

Swift::Void __swiftcall GroupActivityPlaceholderSharingController.viewWillAppear(_:)(Swift::Bool a1)
{
  char *v1;
  id v3;
  id v4;
  objc_super v5;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD410]), sel_initWithBarButtonSystemItem_target_action_, 1, v1, sel_cancelButtonTapped_);
  v4 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC22_GroupActivities_UIKit41GroupActivityPlaceholderSharingController_rootViewController], sel_navigationItem);
  objc_msgSend(v4, sel_setRightBarButtonItem_, v3);

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for GroupActivityPlaceholderSharingController();
  objc_msgSendSuper2(&v5, sel_viewWillAppear_, a1);
}

Swift::Void __swiftcall GroupActivityPlaceholderSharingController.viewDidLoad()()
{
  void *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  objc_super v13;

  v1 = objc_msgSend(v0, sel_view);
  if (!v1)
  {
    __break(1u);
    goto LABEL_6;
  }
  v2 = v1;
  v3 = (void *)objc_opt_self();
  v4 = objc_msgSend(v3, sel_systemGreenColor);
  objc_msgSend(v2, sel_setTintColor_, v4);

  v5 = objc_msgSend(v0, sel_navigationBar);
  v6 = objc_msgSend(v0, sel_navigationBar);
  v7 = objc_msgSend(v6, sel_standardAppearance);

  objc_msgSend(v5, sel_setScrollEdgeAppearance_, v7);
  v8 = objc_msgSend(v0, sel_view);
  if (!v8)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v9 = v8;
  objc_msgSend(v8, sel_setPreservesSuperviewLayoutMargins_, 1);

  v10 = objc_msgSend(v0, sel_view);
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(v3, sel_systemBackgroundColor);
    objc_msgSend(v11, sel_setBackgroundColor_, v12);

    v13.receiver = v0;
    v13.super_class = (Class)type metadata accessor for GroupActivityPlaceholderSharingController();
    objc_msgSendSuper2(&v13, sel_viewDidLoad);
    return;
  }
LABEL_7:
  __break(1u);
}

id GroupActivityPlaceholderSharingController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void GroupActivityPlaceholderSharingController.init(coder:)()
{
  char *v0;
  char *v1;

  v1 = &v0[OBJC_IVAR____TtC22_GroupActivities_UIKit41GroupActivityPlaceholderSharingController_placeholderControllerDidCancel];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void (*GroupActivityPlaceholderSharingController.hostViewController(_:didFailToHost:error:)())(_QWORD *)
{
  _QWORD *v0;
  void (*result)(_QWORD *);
  uint64_t v2;

  result = (void (*)(_QWORD *))(*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x60))();
  if (result)
  {
    v2 = (uint64_t)result;
    result(v0);
    return (void (*)(_QWORD *))outlined consume of (@escaping @callee_guaranteed () -> ())?(v2);
  }
  return result;
}

void @objc GroupActivityPlaceholderSharingController.hostViewController(_:didFailToHost:error:)(_QWORD *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t (*v8)(void);
  id v9;
  _QWORD *v10;
  id v11;
  void (*v12)(_QWORD *);
  uint64_t v13;
  id v14;

  v8 = *(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *a1) + 0x60);
  v9 = a3;
  v14 = a4;
  v10 = a1;
  v11 = a5;
  v12 = (void (*)(_QWORD *))v8();
  if (v12)
  {
    v13 = (uint64_t)v12;
    v12(v10);
    outlined consume of (@escaping @callee_guaranteed () -> ())?(v13);
  }

}

id GroupActivityPlaceholderSharingController.__allocating_init(navigationBarClass:toolbarClass:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;

  v3 = a2;
  if (!a1)
  {
    ObjCClassFromMetadata = 0;
    if (!a2)
      return objc_msgSend(objc_allocWithZone(v2), sel_initWithNavigationBarClass_toolbarClass_, ObjCClassFromMetadata, v3);
    goto LABEL_3;
  }
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  if (v3)
LABEL_3:
    v3 = swift_getObjCClassFromMetadata();
  return objc_msgSend(objc_allocWithZone(v2), sel_initWithNavigationBarClass_toolbarClass_, ObjCClassFromMetadata, v3);
}

void GroupActivityPlaceholderSharingController.init(navigationBarClass:toolbarClass:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id GroupActivityPlaceholderSharingController.__allocating_init(rootViewController:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithRootViewController_, a1);

  return v3;
}

void GroupActivityPlaceholderSharingController.init(rootViewController:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id GroupActivityPlaceholderSharingController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)MEMORY[0x2207D3EF8]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void GroupActivityPlaceholderSharingController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id GroupActivityPlaceholderSharingController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GroupActivityPlaceholderSharingController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void (*specialized GroupActivityPlaceholderSharingController.cancelButtonTapped(_:)())(_QWORD *)
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  void (*result)(_QWORD *);
  uint64_t v7;

  v1 = v0;
  if (one-time initialization token for default != -1)
    swift_once();
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Log.default);
  v3 = Logger.logObject.getter();
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_21FD90000, v3, v4, "Cancel button tapped", v5, 2u);
    MEMORY[0x2207D49E4](v5, -1, -1);
  }

  result = (void (*)(_QWORD *))(*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v1) + 0x60))();
  if (result)
  {
    v7 = (uint64_t)result;
    result(v1);
    return (void (*)(_QWORD *))outlined consume of (@escaping @callee_guaranteed () -> ())?(v7);
  }
  return result;
}

uint64_t method lookup function for GroupActivityPlaceholderSharingController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of GroupActivityPlaceholderSharingController.placeholderControllerDidCancel.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of GroupActivityPlaceholderSharingController.placeholderControllerDidCancel.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of GroupActivityPlaceholderSharingController.placeholderControllerDidCancel.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of GroupActivityPlaceholderSharingController.cancelButtonTapped(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of GroupActivityPlaceholderSharingController.hostViewController(_:didFailToHost:error:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of GroupActivityPlaceholderSharingController.hostViewController(_:didEndHosting:error:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x90))();
}

uint64_t sub_21FDA9964()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed GroupActivityPlaceholderSharingController) -> (@out ())(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@guaranteed GroupActivityPlaceholderSharingController) -> ()(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t ReactionPickerViewRepresentable.selectedReaction.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t ReactionPickerViewRepresentable.selectedReaction.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ReactionPickerViewRepresentable.selectedReaction.modify())()
{
  return destructiveProjectEnumData for GroupActivitySharingResult;
}

uint64_t ReactionPickerViewRepresentable.history.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ReactionPickerViewRepresentable.history.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*ReactionPickerViewRepresentable.history.modify())()
{
  return destructiveProjectEnumData for GroupActivitySharingResult;
}

id ReactionPickerViewRepresentable.makeUIView(context:)()
{
  return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ReactionPickerView()), sel_init);
}

uint64_t ReactionPickerViewRepresentable.updateUIView(_:context:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t (*v9)(uint64_t);
  uint64_t v10;

  v7 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v8 = *(void (**)(uint64_t, uint64_t))((*MEMORY[0x24BEE4EA0] & *a1) + 0xB0);
  swift_bridgeObjectRetain();
  v8(a3, a4);
  v9 = *(uint64_t (**)(uint64_t))((*v7 & *a1) + 0xE0);
  v10 = swift_bridgeObjectRetain();
  return v9(v10);
}

id protocol witness for UIViewRepresentable.makeUIView(context:) in conformance ReactionPickerViewRepresentable()
{
  return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ReactionPickerView()), sel_init);
}

uint64_t protocol witness for UIViewRepresentable.updateUIView(_:context:) in conformance ReactionPickerViewRepresentable(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t (*v7)(uint64_t);
  uint64_t v8;

  v3 = *v1;
  v4 = v1[1];
  v5 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v6 = *(void (**)(uint64_t, uint64_t))((*MEMORY[0x24BEE4EA0] & *a1) + 0xB0);
  swift_bridgeObjectRetain();
  v6(v3, v4);
  v7 = *(uint64_t (**)(uint64_t))((*v5 & *a1) + 0xE0);
  v8 = swift_bridgeObjectRetain();
  return v7(v8);
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance ReactionPickerViewRepresentable()
{
  lazy protocol witness table accessor for type ReactionPickerViewRepresentable and conformance ReactionPickerViewRepresentable();
  return static UIViewRepresentable._makeView(view:inputs:)();
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance ReactionPickerViewRepresentable()
{
  lazy protocol witness table accessor for type ReactionPickerViewRepresentable and conformance ReactionPickerViewRepresentable();
  return static UIViewRepresentable._makeViewList(view:inputs:)();
}

void protocol witness for View.body.getter in conformance ReactionPickerViewRepresentable()
{
  lazy protocol witness table accessor for type ReactionPickerViewRepresentable and conformance ReactionPickerViewRepresentable();
  UIViewRepresentable.body.getter();
  __break(1u);
}

uint64_t ReactionPicker.selectedReaction.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ReactionPicker.selectedReaction.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ReactionPicker.selectedReaction.modify())()
{
  return destructiveProjectEnumData for GroupActivitySharingResult;
}

uint64_t ReactionPicker.history.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ReactionPicker.history.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*ReactionPicker.history.modify())()
{
  return destructiveProjectEnumData for GroupActivitySharingResult;
}

_GroupActivities_UIKit::ReactionPicker __swiftcall ReactionPicker.init(selectedReaction:history:)(Swift::String_optional selectedReaction, Swift::OpaquePointer history)
{
  uint64_t v2;
  _GroupActivities_UIKit::ReactionPicker result;

  *(Swift::String_optional *)v2 = selectedReaction;
  *(Swift::OpaquePointer *)(v2 + 16) = history;
  result.selectedReaction = selectedReaction;
  result.history = history;
  return result;
}

uint64_t ReactionPicker.body.getter@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1[1];
  v3 = v1[2];
  *(_QWORD *)a1 = *v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_WORD *)(a1 + 24) = 257;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

unint64_t lazy protocol witness table accessor for type ReactionPickerViewRepresentable and conformance ReactionPickerViewRepresentable()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ReactionPickerViewRepresentable and conformance ReactionPickerViewRepresentable;
  if (!lazy protocol witness table cache variable for type ReactionPickerViewRepresentable and conformance ReactionPickerViewRepresentable)
  {
    result = MEMORY[0x2207D4924](&protocol conformance descriptor for ReactionPickerViewRepresentable, &type metadata for ReactionPickerViewRepresentable);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ReactionPickerViewRepresentable and conformance ReactionPickerViewRepresentable);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ReactionPickerViewRepresentable and conformance ReactionPickerViewRepresentable;
  if (!lazy protocol witness table cache variable for type ReactionPickerViewRepresentable and conformance ReactionPickerViewRepresentable)
  {
    result = MEMORY[0x2207D4924](&protocol conformance descriptor for ReactionPickerViewRepresentable, &type metadata for ReactionPickerViewRepresentable);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ReactionPickerViewRepresentable and conformance ReactionPickerViewRepresentable);
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in ReactionPicker()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t protocol witness for View.body.getter in conformance ReactionPicker@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1[1];
  v3 = v1[2];
  *(_QWORD *)a1 = *v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_WORD *)(a1 + 24) = 257;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for ReactionPickerViewRepresentable()
{
  return &type metadata for ReactionPickerViewRepresentable;
}

uint64_t destroy for ReactionPickerViewRepresentable()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeBufferWithCopyOfBuffer for ReactionPickerViewRepresentable(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ReactionPickerViewRepresentable(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ReactionPickerViewRepresentable(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ReactionPickerViewRepresentable(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReactionPickerViewRepresentable(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReactionPicker()
{
  return &type metadata for ReactionPicker;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ReactionPickerViewRepresentable, _FixedSizeLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ReactionPickerViewRepresentable, _FixedSizeLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ReactionPickerViewRepresentable, _FixedSizeLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ReactionPickerViewRepresentable, _FixedSizeLayout>);
    v2[0] = lazy protocol witness table accessor for type ReactionPickerViewRepresentable and conformance ReactionPickerViewRepresentable();
    v2[1] = MEMORY[0x24BDEDB80];
    result = MEMORY[0x2207D4924](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ReactionPickerViewRepresentable, _FixedSizeLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t Log.default.unsafeMutableAddressor()
{
  return Log.default.unsafeMutableAddressor(&one-time initialization token for default, (uint64_t)static Log.default);
}

uint64_t >> prefix<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v4[4];
  _QWORD v5[2];

  v4[2] = a2;
  type metadata accessor for Optional();
  _sSq3mapyqd_0_Sgqd_0_xqd__YKXEqd__YKs5ErrorRd__Ri_d_0_r0_lF((void (*)(char *, char *))partial apply for closure #1 in >> prefix<A>(_:), (uint64_t)v4, MEMORY[0x24BEE4078], MEMORY[0x24BEE0D00], v2, (uint64_t)v5);
  if (v5[1])
    return v5[0];
  else
    return 7104878;
}

uint64_t Log.runtimeIssues.unsafeMutableAddressor()
{
  return Log.default.unsafeMutableAddressor(&one-time initialization token for runtimeIssues, (uint64_t)static Log.runtimeIssues);
}

uint64_t Log.default.unsafeMutableAddressor(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  v3 = type metadata accessor for Logger();
  return __swift_project_value_buffer(v3, a2);
}

uint64_t Log.extensionController.unsafeMutableAddressor()
{
  return Log.default.unsafeMutableAddressor(&one-time initialization token for extensionController, (uint64_t)static Log.extensionController);
}

uint64_t Log.previews.unsafeMutableAddressor()
{
  return Log.default.unsafeMutableAddressor(&one-time initialization token for previews, (uint64_t)static Log.previews);
}

_GroupActivities_UIKit::Subsystem_optional __swiftcall Subsystem.init(rawValue:)(Swift::String rawValue)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;
  _GroupActivities_UIKit::Subsystem_optional v4;

  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of Subsystem.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 == 1)
    v4.value = _GroupActivities_UIKit_Subsystem_runtimeIssues;
  else
    v4.value = _GroupActivities_UIKit_Subsystem_unknownDefault;
  if (v3)
    return v4;
  else
    return 0;
}

unint64_t Subsystem.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000018;
  else
    return 0xD00000000000001ALL;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance Subsystem(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

uint64_t specialized == infix<A>(_:_:)(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000018;
  else
    v3 = 0xD00000000000001ALL;
  if (v2)
    v4 = 0x800000021FDD8440;
  else
    v4 = 0x800000021FDD8460;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000018;
  else
    v5 = 0xD00000000000001ALL;
  if ((a2 & 1) != 0)
    v6 = 0x800000021FDD8460;
  else
    v6 = 0x800000021FDD8440;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance Subsystem()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

Swift::Int specialized RawRepresentable<>.hashValue.getter()
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Subsystem()
{
  String.hash(into:)();
  return swift_bridgeObjectRelease();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance Subsystem()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

Swift::Int specialized RawRepresentable<>._rawHashValue(seed:)()
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance Subsystem@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3;
  uint64_t result;
  char v5;

  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of Subsystem.init(rawValue:), *a1);
  result = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *a2 = v5;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance Subsystem(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD000000000000018;
  else
    v2 = 0xD00000000000001ALL;
  v3 = 0x800000021FDD8440;
  if (*v1)
    v3 = 0x800000021FDD8460;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t one-time initialization function for sessionUI()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Logger.sessionUI);
  __swift_project_value_buffer(v0, (uint64_t)static Logger.sessionUI);
  return Logger.init(subsystem:category:)();
}

uint64_t Logger.init<A>(subsystem:category:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  dispatch thunk of RawRepresentable.rawValue.getter();
  Logger.init(subsystem:category:)();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 8))(a1, a4);
}

uint64_t Logger.sessionUI.unsafeMutableAddressor()
{
  return Log.default.unsafeMutableAddressor(&one-time initialization token for sessionUI, (uint64_t)static Logger.sessionUI);
}

uint64_t static Logger.sessionUI.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logger.sessionUI.getter(&one-time initialization token for sessionUI, (uint64_t)static Logger.sessionUI, a1);
}

uint64_t one-time initialization function for copmanager()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Logger.copmanager);
  __swift_project_value_buffer(v0, (uint64_t)static Logger.copmanager);
  return Logger.init(subsystem:category:)();
}

uint64_t Logger.copmanager.unsafeMutableAddressor()
{
  return Log.default.unsafeMutableAddressor(&one-time initialization token for copmanager, (uint64_t)static Logger.copmanager);
}

uint64_t static Logger.copmanager.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logger.sessionUI.getter(&one-time initialization token for copmanager, (uint64_t)static Logger.copmanager, a1);
}

uint64_t static Logger.sessionUI.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = type metadata accessor for Logger();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t one-time initialization function for modelsync()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Logger.modelsync);
  __swift_project_value_buffer(v0, (uint64_t)static Logger.modelsync);
  return Logger.init(subsystem:category:)();
}

uint64_t Logger.modelsync.unsafeMutableAddressor()
{
  return Log.default.unsafeMutableAddressor(&one-time initialization token for modelsync, (uint64_t)static Logger.modelsync);
}

uint64_t static Logger.modelsync.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logger.sessionUI.getter(&one-time initialization token for modelsync, (uint64_t)static Logger.modelsync, a1);
}

uint64_t one-time initialization function for client()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Logger.client);
  __swift_project_value_buffer(v0, (uint64_t)static Logger.client);
  return Logger.init(subsystem:category:)();
}

uint64_t Logger.client.unsafeMutableAddressor()
{
  return Log.default.unsafeMutableAddressor(&one-time initialization token for client, (uint64_t)static Logger.client);
}

uint64_t static Logger.client.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logger.sessionUI.getter(&one-time initialization token for client, (uint64_t)static Logger.client, a1);
}

uint64_t one-time initialization function for playback()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Logger.playback);
  __swift_project_value_buffer(v0, (uint64_t)static Logger.playback);
  return Logger.init(subsystem:category:)();
}

uint64_t Logger.playback.unsafeMutableAddressor()
{
  return Log.default.unsafeMutableAddressor(&one-time initialization token for playback, (uint64_t)static Logger.playback);
}

uint64_t static Logger.playback.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logger.sessionUI.getter(&one-time initialization token for playback, (uint64_t)static Logger.playback, a1);
}

uint64_t one-time initialization function for runtimeIssues(uint64_t a1)
{
  return one-time initialization function for runtimeIssues(a1, static Logger.runtimeIssues);
}

{
  return one-time initialization function for runtimeIssues(a1, static Log.runtimeIssues);
}

uint64_t Logger.runtimeIssues.unsafeMutableAddressor()
{
  return Log.default.unsafeMutableAddressor(&one-time initialization token for runtimeIssues, (uint64_t)static Logger.runtimeIssues);
}

uint64_t static Logger.runtimeIssues.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logger.sessionUI.getter(&one-time initialization token for runtimeIssues, (uint64_t)static Logger.runtimeIssues, a1);
}

uint64_t one-time initialization function for extensionController()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Log.extensionController);
  __swift_project_value_buffer(v0, (uint64_t)static Log.extensionController);
  return Logger.init(subsystem:category:)();
}

uint64_t static Log.extensionController.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logger.sessionUI.getter(&one-time initialization token for extensionController, (uint64_t)static Log.extensionController, a1);
}

uint64_t one-time initialization function for default()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Log.default);
  __swift_project_value_buffer(v0, (uint64_t)static Log.default);
  return Logger.init(subsystem:category:)();
}

uint64_t static Log.default.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logger.sessionUI.getter(&one-time initialization token for default, (uint64_t)static Log.default, a1);
}

uint64_t one-time initialization function for groupSessionProviderObserver()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Log.groupSessionProviderObserver);
  __swift_project_value_buffer(v0, (uint64_t)static Log.groupSessionProviderObserver);
  return Logger.init(subsystem:category:)();
}

uint64_t Log.groupSessionProviderObserver.unsafeMutableAddressor()
{
  return Log.default.unsafeMutableAddressor(&one-time initialization token for groupSessionProviderObserver, (uint64_t)static Log.groupSessionProviderObserver);
}

uint64_t static Log.groupSessionProviderObserver.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logger.sessionUI.getter(&one-time initialization token for groupSessionProviderObserver, (uint64_t)static Log.groupSessionProviderObserver, a1);
}

uint64_t one-time initialization function for groupSessionProvider()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Log.groupSessionProvider);
  __swift_project_value_buffer(v0, (uint64_t)static Log.groupSessionProvider);
  return Logger.init(subsystem:category:)();
}

uint64_t Log.groupSessionProvider.unsafeMutableAddressor()
{
  return Log.default.unsafeMutableAddressor(&one-time initialization token for groupSessionProvider, (uint64_t)static Log.groupSessionProvider);
}

uint64_t static Log.groupSessionProvider.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logger.sessionUI.getter(&one-time initialization token for groupSessionProvider, (uint64_t)static Log.groupSessionProvider, a1);
}

uint64_t one-time initialization function for ckShareGroupSessionProvider()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Log.ckShareGroupSessionProvider);
  __swift_project_value_buffer(v0, (uint64_t)static Log.ckShareGroupSessionProvider);
  return Logger.init(subsystem:category:)();
}

uint64_t Log.ckShareGroupSessionProvider.unsafeMutableAddressor()
{
  return Log.default.unsafeMutableAddressor(&one-time initialization token for ckShareGroupSessionProvider, (uint64_t)static Log.ckShareGroupSessionProvider);
}

uint64_t static Log.ckShareGroupSessionProvider.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logger.sessionUI.getter(&one-time initialization token for ckShareGroupSessionProvider, (uint64_t)static Log.ckShareGroupSessionProvider, a1);
}

uint64_t one-time initialization function for personalGroupSessionProvider()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Log.personalGroupSessionProvider);
  __swift_project_value_buffer(v0, (uint64_t)static Log.personalGroupSessionProvider);
  return Logger.init(subsystem:category:)();
}

uint64_t Log.personalGroupSessionProvider.unsafeMutableAddressor()
{
  return Log.default.unsafeMutableAddressor(&one-time initialization token for personalGroupSessionProvider, (uint64_t)static Log.personalGroupSessionProvider);
}

uint64_t static Log.personalGroupSessionProvider.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logger.sessionUI.getter(&one-time initialization token for personalGroupSessionProvider, (uint64_t)static Log.personalGroupSessionProvider, a1);
}

uint64_t one-time initialization function for shareChangeObserver()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Log.shareChangeObserver);
  __swift_project_value_buffer(v0, (uint64_t)static Log.shareChangeObserver);
  return Logger.init(subsystem:category:)();
}

uint64_t Log.shareChangeObserver.unsafeMutableAddressor()
{
  return Log.default.unsafeMutableAddressor(&one-time initialization token for shareChangeObserver, (uint64_t)static Log.shareChangeObserver);
}

uint64_t static Log.shareChangeObserver.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logger.sessionUI.getter(&one-time initialization token for shareChangeObserver, (uint64_t)static Log.shareChangeObserver, a1);
}

uint64_t one-time initialization function for reliableBroadcast()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Log.reliableBroadcast);
  __swift_project_value_buffer(v0, (uint64_t)static Log.reliableBroadcast);
  return Logger.init(subsystem:category:)();
}

uint64_t Log.reliableBroadcast.unsafeMutableAddressor()
{
  return Log.default.unsafeMutableAddressor(&one-time initialization token for reliableBroadcast, (uint64_t)static Log.reliableBroadcast);
}

uint64_t static Log.reliableBroadcast.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logger.sessionUI.getter(&one-time initialization token for reliableBroadcast, (uint64_t)static Log.reliableBroadcast, a1);
}

uint64_t one-time initialization function for topic(uint64_t a1)
{
  return one-time initialization function for topic(a1, static Log.topic);
}

uint64_t Log.topic.unsafeMutableAddressor()
{
  return Log.default.unsafeMutableAddressor(&one-time initialization token for topic, (uint64_t)static Log.topic);
}

uint64_t static Log.topic.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logger.sessionUI.getter(&one-time initialization token for topic, (uint64_t)static Log.topic, a1);
}

uint64_t one-time initialization function for attachmentLedgerTopic(uint64_t a1)
{
  return one-time initialization function for topic(a1, static Log.attachmentLedgerTopic);
}

uint64_t Log.attachmentLedgerTopic.unsafeMutableAddressor()
{
  return Log.default.unsafeMutableAddressor(&one-time initialization token for attachmentLedgerTopic, (uint64_t)static Log.attachmentLedgerTopic);
}

uint64_t static Log.attachmentLedgerTopic.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logger.sessionUI.getter(&one-time initialization token for attachmentLedgerTopic, (uint64_t)static Log.attachmentLedgerTopic, a1);
}

uint64_t one-time initialization function for topicManager(uint64_t a1)
{
  return one-time initialization function for topic(a1, static Log.topicManager);
}

uint64_t one-time initialization function for topic(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return Logger.init(subsystem:category:)();
}

uint64_t Log.topicManager.unsafeMutableAddressor()
{
  return Log.default.unsafeMutableAddressor(&one-time initialization token for topicManager, (uint64_t)static Log.topicManager);
}

uint64_t static Log.topicManager.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logger.sessionUI.getter(&one-time initialization token for topicManager, (uint64_t)static Log.topicManager, a1);
}

uint64_t one-time initialization function for ledger()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Log.ledger);
  __swift_project_value_buffer(v0, (uint64_t)static Log.ledger);
  return Logger.init(subsystem:category:)();
}

uint64_t Log.ledger.unsafeMutableAddressor()
{
  return Log.default.unsafeMutableAddressor(&one-time initialization token for ledger, (uint64_t)static Log.ledger);
}

uint64_t static Log.ledger.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logger.sessionUI.getter(&one-time initialization token for ledger, (uint64_t)static Log.ledger, a1);
}

uint64_t one-time initialization function for previews()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Log.previews);
  __swift_project_value_buffer(v0, (uint64_t)static Log.previews);
  return Logger.init(subsystem:category:)();
}

uint64_t static Log.previews.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logger.sessionUI.getter(&one-time initialization token for previews, (uint64_t)static Log.previews, a1);
}

uint64_t one-time initialization function for runtimeIssues(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return Logger.init(subsystem:category:)();
}

uint64_t static Log.runtimeIssues.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logger.sessionUI.getter(&one-time initialization token for runtimeIssues, (uint64_t)static Log.runtimeIssues, a1);
}

uint64_t one-time initialization function for uploadTask()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Log.uploadTask);
  __swift_project_value_buffer(v0, (uint64_t)static Log.uploadTask);
  return Logger.init(subsystem:category:)();
}

uint64_t Log.uploadTask.unsafeMutableAddressor()
{
  return Log.default.unsafeMutableAddressor(&one-time initialization token for uploadTask, (uint64_t)static Log.uploadTask);
}

uint64_t static Log.uploadTask.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logger.sessionUI.getter(&one-time initialization token for uploadTask, (uint64_t)static Log.uploadTask, a1);
}

uint64_t one-time initialization function for downloadTask()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Log.downloadTask);
  __swift_project_value_buffer(v0, (uint64_t)static Log.downloadTask);
  return Logger.init(subsystem:category:)();
}

uint64_t Log.downloadTask.unsafeMutableAddressor()
{
  return Log.default.unsafeMutableAddressor(&one-time initialization token for downloadTask, (uint64_t)static Log.downloadTask);
}

uint64_t static Log.downloadTask.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logger.sessionUI.getter(&one-time initialization token for downloadTask, (uint64_t)static Log.downloadTask, a1);
}

uint64_t one-time initialization function for presenceSession()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Log.presenceSession);
  __swift_project_value_buffer(v0, (uint64_t)static Log.presenceSession);
  return Logger.init(subsystem:category:)();
}

uint64_t Log.presenceSession.unsafeMutableAddressor()
{
  return Log.default.unsafeMutableAddressor(&one-time initialization token for presenceSession, (uint64_t)static Log.presenceSession);
}

uint64_t static Log.presenceSession.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logger.sessionUI.getter(&one-time initialization token for presenceSession, (uint64_t)static Log.presenceSession, a1);
}

uint64_t one-time initialization function for systemCoordinator()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Log.systemCoordinator);
  __swift_project_value_buffer(v0, (uint64_t)static Log.systemCoordinator);
  return Logger.init(subsystem:category:)();
}

uint64_t Log.systemCoordinator.unsafeMutableAddressor()
{
  return Log.default.unsafeMutableAddressor(&one-time initialization token for systemCoordinator, (uint64_t)static Log.systemCoordinator);
}

uint64_t static Log.systemCoordinator.getter@<X0>(uint64_t a1@<X8>)
{
  return static Logger.sessionUI.getter(&one-time initialization token for systemCoordinator, (uint64_t)static Log.systemCoordinator, a1);
}

uint64_t partial apply for closure #1 in >> prefix<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return closure #1 in >> prefix<A>(_:)(a1, a2);
}

uint64_t _sSq3mapyqd_0_Sgqd_0_xqd__YKXEqd__YKs5ErrorRd__Ri_d_0_r0_lF@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *);
  uint64_t v30;

  v27 = a5;
  v28 = a2;
  v30 = a4;
  v29 = a1;
  v26 = a3;
  v9 = *(_QWORD *)(a3 - 8);
  v10 = MEMORY[0x24BDAC7A8](a1, a2);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v13 + 16);
  v15 = *(_QWORD *)(v14 - 8);
  v17 = MEMORY[0x24BDAC7A8](v10, v16);
  v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v20);
  v22 = (char *)&v26 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v23 + 16))(v22, v6);
  v24 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v22, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v19, v22, v14);
    v29(v19, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v14);
    if (v7)
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v27, v12, v26);
    v24 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(a6, v24, 1);
}

uint64_t DefaultStringInterpolation.appendInterpolation<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD v7[4];
  uint64_t v8;
  unint64_t v9;

  v7[2] = a2;
  type metadata accessor for Optional();
  _sSq3mapyqd_0_Sgqd_0_xqd__YKXEqd__YKs5ErrorRd__Ri_d_0_r0_lF((void (*)(char *, char *))partial apply for closure #1 in DefaultStringInterpolation.appendInterpolation<A>(_:), (uint64_t)v7, MEMORY[0x24BEE4078], MEMORY[0x24BEE0D00], v2, (uint64_t)&v8);
  if (v9)
    v3 = v8;
  else
    v3 = 7104878;
  if (v9)
    v4 = v9;
  else
    v4 = 0xE300000000000000;
  v5 = v4;
  String.append(_:)(*(Swift::String *)&v3);
  return swift_bridgeObjectRelease();
}

uint64_t closure #1 in >> prefix<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  MEMORY[0x24BDAC7A8](a1, a1);
  (*(void (**)(char *))(v4 + 16))((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = String.init<A>(reflecting:)();
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t Optional.descriptionOfWrappedValue.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](a1, v1);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v4, v7);
  v10 = (char *)&v17 - v9;
  MEMORY[0x24BDAC7A8](v8, v11);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v14 + 16))(v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v13, 1, v2) == 1)
    return 7104878;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v10, v13, v2);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v10, v2);
  v15 = String.init<A>(describing:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
  return v15;
}

uint64_t String.init<A>(describing:in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  uint64_t v24;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;

  v6 = *(_QWORD *)(a3 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](a1, a2);
  v28 = v8;
  *(_QWORD *)&v33 = swift_getDynamicType();
  swift_getMetatypeMetadata();
  v9 = String.init<A>(describing:)();
  v27 = v10;
  *(_QWORD *)&v33 = a1;
  type metadata accessor for PartialKeyPath();
  v11 = type metadata accessor for Array();
  v12 = MEMORY[0x2207D4924](MEMORY[0x24BEE12C8], v11);
  MEMORY[0x2207D3F7C](&v30, v11, v12);
  swift_bridgeObjectRelease();
  v32 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a2, a3);
  v13 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v14 = (char *)swift_allocObject();
  *((_QWORD *)v14 + 2) = a3;
  *((_QWORD *)v14 + 3) = v9;
  v15 = v27;
  *((_QWORD *)v14 + 4) = v27;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v14[v13], (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a3);
  v16 = type metadata accessor for LazySequence();
  swift_bridgeObjectRetain();
  MEMORY[0x2207D4924](MEMORY[0x24BEE25B0], v16);
  LazySequenceProtocol.map<A>(_:)();
  swift_release();
  swift_bridgeObjectRelease();
  v26 = v33;
  v30 = v33;
  v31 = v34;
  v17 = type metadata accessor for LazyMapSequence();
  v29 = MEMORY[0x2207D4924](MEMORY[0x24BEE12B0], v11);
  MEMORY[0x2207D4924](MEMORY[0x24BEE2B38], v17, &v29);
  v18 = BidirectionalCollection<>.joined(separator:)();
  v20 = v19;
  swift_release();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v33 = v9;
  *((_QWORD *)&v33 + 1) = v15;
  v21._countAndFlagsBits = 40;
  v21._object = (void *)0xE100000000000000;
  String.append(_:)(v21);
  v22._countAndFlagsBits = v18;
  v22._object = v20;
  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  v23._countAndFlagsBits = 41;
  v23._object = (void *)0xE100000000000000;
  String.append(_:)(v23);
  v24 = v33;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v28, a3);
  return v24;
}

uint64_t closure #1 in String.init<A>(describing:in:)@<X0>(uint64_t a1@<X1>, void *a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  Swift::String v7;
  Swift::String v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t result;
  __int128 v25[2];
  uint64_t v26;
  char v27[32];
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[4];

  *(_QWORD *)&v25[0] = AnyKeyPath.debugDescription.getter();
  *((_QWORD *)&v25[0] + 1) = v6;
  v28 = 92;
  v29 = 0xE100000000000000;
  v7._countAndFlagsBits = a1;
  v7._object = a2;
  String.append(_:)(v7);
  v8._countAndFlagsBits = 46;
  v8._object = (void *)0xE100000000000000;
  String.append(_:)(v8);
  v33[0] = 92;
  v33[1] = 0xE100000000000000;
  lazy protocol witness table accessor for type String and conformance String();
  Collection<>.trimmingPrefix<A>(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = v30;
  v9 = v31;
  swift_getAtPartialKeyPath();
  outlined init with copy of Any((uint64_t)v33, (uint64_t)v27);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OptionalProtocol);
  if ((swift_dynamicCast() & 1) != 0)
  {
    outlined init with take of ConversationManagerClientProtocol(v25, (uint64_t)&v28);
    v11 = v31;
    v12 = v32;
    __swift_project_boxed_opaque_existential_1(&v28, v31);
    v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12);
    v15 = v14;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v28);
  }
  else
  {
    v26 = 0;
    memset(v25, 0, sizeof(v25));
    outlined destroy of OptionalProtocol?((uint64_t)v25);
    outlined init with copy of Any((uint64_t)v33, (uint64_t)&v28);
    v13 = String.init<A>(describing:)();
    v15 = v16;
  }
  v17 = MEMORY[0x2207D3F40](92, 0xE100000000000000, v10, v9);
  v19 = v18;
  swift_bridgeObjectRelease();
  v28 = v17;
  v29 = v19;
  v20._countAndFlagsBits = 8250;
  v20._object = (void *)0xE200000000000000;
  String.append(_:)(v20);
  v21._countAndFlagsBits = v13;
  v21._object = v15;
  String.append(_:)(v21);
  swift_bridgeObjectRelease();
  v22 = v28;
  v23 = v29;
  result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
  *a3 = v22;
  a3[1] = v23;
  return result;
}

uint64_t sub_21FDABE3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in String.init<A>(describing:in:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return closure #1 in String.init<A>(describing:in:)(*(_QWORD *)(v1 + 24), *(void **)(v1 + 32), a1);
}

unint64_t lazy protocol witness table accessor for type Subsystem and conformance Subsystem()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Subsystem and conformance Subsystem;
  if (!lazy protocol witness table cache variable for type Subsystem and conformance Subsystem)
  {
    result = MEMORY[0x2207D4924](&protocol conformance descriptor for Subsystem, &type metadata for Subsystem);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Subsystem and conformance Subsystem);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for Subsystem(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21FDABF5C + 4 * byte_21FDD6615[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21FDABF90 + 4 * asc_21FDD6610[v4]))();
}

uint64_t sub_21FDABF90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21FDABF98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21FDABFA0);
  return result;
}

uint64_t sub_21FDABFAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21FDABFB4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21FDABFB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21FDABFC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Subsystem()
{
  return &type metadata for Subsystem;
}

ValueMetadata *type metadata accessor for Log()
{
  return &type metadata for Log;
}

uint64_t outlined destroy of OptionalProtocol?(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for OptionalProtocol?);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t partial apply for closure #1 in DefaultStringInterpolation.appendInterpolation<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return partial apply for closure #1 in >> prefix<A>(_:)(a1, a2);
}

uint64_t one-time initialization function for canvasPreviewPresentationManager()
{
  uint64_t v0;

  v0 = type metadata accessor for GroupSessionEndpointIdentifier();
  __swift_allocate_value_buffer(v0, static GroupSessionEndpointIdentifier.canvasPreviewPresentationManager);
  __swift_project_value_buffer(v0, (uint64_t)static GroupSessionEndpointIdentifier.canvasPreviewPresentationManager);
  return GroupSessionEndpointIdentifier.init(rawValue:)();
}

uint64_t GroupSessionEndpointIdentifier.canvasPreviewPresentationManager.unsafeMutableAddressor()
{
  uint64_t v0;

  if (one-time initialization token for canvasPreviewPresentationManager != -1)
    swift_once();
  v0 = type metadata accessor for GroupSessionEndpointIdentifier();
  return __swift_project_value_buffer(v0, (uint64_t)static GroupSessionEndpointIdentifier.canvasPreviewPresentationManager);
}

uint64_t static GroupSessionEndpointIdentifier.canvasPreviewPresentationManager.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (one-time initialization token for canvasPreviewPresentationManager != -1)
    swift_once();
  v2 = type metadata accessor for GroupSessionEndpointIdentifier();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static GroupSessionEndpointIdentifier.canvasPreviewPresentationManager);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t GroupSession.requestCanvasPreviewPresentationManagerClient()()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = v0;
  *(_QWORD *)(v1 + 72) = *v0;
  return swift_task_switch();
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  if (one-time initialization token for canvasPreviewPresentationManager != -1)
    swift_once();
  v1 = type metadata accessor for GroupSessionEndpointIdentifier();
  __swift_project_value_buffer(v1, (uint64_t)static GroupSessionEndpointIdentifier.canvasPreviewPresentationManager);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v2;
  *v2 = v0;
  v2[1] = GroupSession.requestCanvasPreviewPresentationManagerClient();
  return GroupSession.requestEndpoint(with:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  if (*(_QWORD *)(v0 + 88))
  {
    type metadata accessor for GroupSessionCanvasPreviewPresentationManagerClient();
    v1 = XPCClient.__allocating_init(listenerEndpoint:)();
  }
  else
  {
    if (one-time initialization token for previews != -1)
      swift_once();
    v2 = type metadata accessor for Logger();
    __swift_project_value_buffer(v2, (uint64_t)static Log.previews);
    swift_retain();
    v3 = Logger.logObject.getter();
    v4 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = *(_QWORD *)(v0 + 64);
      v6 = *(_QWORD *)(v0 + 72);
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v12 = v8;
      *(_DWORD *)v7 = 136315138;
      *(_QWORD *)(v0 + 48) = v5;
      MEMORY[0x2207D4924](MEMORY[0x24BDD1EB0], v6);
      v9 = dispatch thunk of CustomStringConvertible.description.getter();
      *(_QWORD *)(v0 + 56) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v10, &v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release();
      _os_log_impl(&dword_21FD90000, v3, v4, "Unable to get endpoint for canvas preview presentation manager on session: %s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207D49E4](v8, -1, -1);
      MEMORY[0x2207D49E4](v7, -1, -1);
    }
    else
    {
      swift_release();
    }

    v1 = 0;
  }
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;

  if (one-time initialization token for previews != -1)
    swift_once();
  v1 = *(void **)(v0 + 96);
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Log.previews);
  swift_retain();
  v3 = v1;
  swift_retain();
  v4 = v1;
  v5 = Logger.logObject.getter();
  v6 = static os_log_type_t.error.getter();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 96);
  if (v7)
  {
    v10 = *(_QWORD *)(v0 + 64);
    v9 = *(_QWORD *)(v0 + 72);
    v11 = swift_slowAlloc();
    v19 = swift_slowAlloc();
    v20 = v19;
    *(_DWORD *)v11 = 136315394;
    *(_QWORD *)(v0 + 16) = v10;
    MEMORY[0x2207D4924](MEMORY[0x24BDD1EB0], v9);
    v12 = dispatch thunk of CustomStringConvertible.description.getter();
    v14 = v13;
    swift_release();
    *(_QWORD *)(v0 + 24) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v14, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release();
    *(_WORD *)(v11 + 12) = 2080;
    *(_QWORD *)(v0 + 32) = v8;
    v15 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
    v16 = String.init<A>(reflecting:)();
    *(_QWORD *)(v0 + 40) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16, v17, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21FD90000, v5, v6, "Failed to get endpoint for canvas preview presentation manager on session: %s, error: %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207D49E4](v19, -1, -1);
    MEMORY[0x2207D49E4](v11, -1, -1);

  }
  else
  {
    swift_release();

    swift_release();
  }
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t GroupSession.requestCanvasPreviewPresentationManagerClient()(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 88) = a1;
  *(_QWORD *)(v3 + 96) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

__int128 *GroupSessionPreviewPresentationController.defaultPresentationSize.unsafeMutableAddressor()
{
  if (one-time initialization token for defaultPresentationSize != -1)
    swift_once();
  return &static GroupSessionPreviewPresentationController.defaultPresentationSize;
}

uint64_t GroupSessionPreviewPresentationViewModel.previewData.getter()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t GroupSessionPreviewPresentationViewModel.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0
     + OBJC_IVAR____TtC22_GroupActivities_UIKitP33_7EC4E9541CA9C2130F5EA0FCD480FE6640GroupSessionPreviewPresentationViewModel__previewData;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Data?>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t protocol witness for ObservableObject.objectWillChange.getter in conformance GroupSessionPreviewPresentationViewModel@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for GroupSessionPreviewPresentationViewModel(0);
  result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t GroupSessionPreviewPresentationView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v23 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<_ArchivedView, EmptyView>.Storage);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for _ArchivedViewStates();
  v21 = *(_QWORD *)(v5 - 8);
  v22 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for _ArchivedView();
  v10 = *(_QWORD *)(v9 - 8);
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v15);
  v17 = (char *)&v21 - v16;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  v18 = v25;
  if (v25 >> 60 == 15)
  {
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type _ArchivedView and conformance _ArchivedView, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC3E0], MEMORY[0x24BDEC3D8]);
    return _ConditionalContent<>.init(storage:)();
  }
  else
  {
    v20 = v24;
    outlined copy of Data._Representation(v24, v25);
    _ArchivedViewStates.init(data:)();
    _ArchivedViewStates.state(at:)();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v17, v14, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v4, v17, v9);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type _ArchivedView and conformance _ArchivedView, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC3E0], MEMORY[0x24BDEC3D8]);
    _ConditionalContent<>.init(storage:)();
    outlined consume of Data?(v20, v18);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v17, v9);
  }
}

uint64_t protocol witness for View.body.getter in conformance GroupSessionPreviewPresentationView@<X0>(uint64_t a1@<X8>)
{
  return GroupSessionPreviewPresentationView.body.getter(a1);
}

double one-time initialization function for defaultPresentationSize()
{
  double result;

  result = 370.0;
  static GroupSessionPreviewPresentationController.defaultPresentationSize = xmmword_21FDD6710;
  return result;
}

double static GroupSessionPreviewPresentationController.defaultPresentationSize.getter()
{
  if (one-time initialization token for defaultPresentationSize != -1)
    swift_once();
  return *(double *)&static GroupSessionPreviewPresentationController.defaultPresentationSize;
}

uint64_t GroupSessionPreviewPresentationController.previewData.getter()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t GroupSessionPreviewPresentationController.previewData.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return static Published.subscript.setter();
}

void (*GroupSessionPreviewPresentationController.previewData.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = *(_QWORD *)(v1 + direct field offset for GroupSessionPreviewPresentationController.model);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  *(_OWORD *)v3 = *((_OWORD *)v3 + 1);
  return GroupSessionPreviewPresentationController.previewData.modify;
}

void GroupSessionPreviewPresentationController.previewData.modify(uint64_t **a1, char a2)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *a1;
  v4 = **a1;
  v5 = (*a1)[1];
  swift_getKeyPath();
  swift_getKeyPath();
  v3[2] = v4;
  v3[3] = v5;
  swift_retain();
  if ((a2 & 1) != 0)
  {
    outlined copy of Data?(v4, v5);
    static Published.subscript.setter();
    outlined consume of Data?(*v3, v3[1]);
  }
  else
  {
    static Published.subscript.setter();
  }
  free(v3);
}

uint64_t GroupSessionPreviewPresentationController.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + direct field offset for GroupSessionPreviewPresentationController.delegate;
  swift_beginAccess();
  return MEMORY[0x2207D4A98](v1);
}

uint64_t GroupSessionPreviewPresentationController.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + direct field offset for GroupSessionPreviewPresentationController.delegate;
  swift_beginAccess();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*GroupSessionPreviewPresentationController.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = direct field offset for GroupSessionPreviewPresentationController.delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x2207D4A98](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return PeoplePickerController.hostViewController.modify;
}

id GroupSessionPreviewPresentationController.__allocating_init()()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  return GroupSessionPreviewPresentationController.init()();
}

id GroupSessionPreviewPresentationController.init()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  id result;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  v1 = type metadata accessor for UIHostingControllerSizingOptions();
  MEMORY[0x24BDAC7A8](v1, v2);
  v3 = direct field offset for GroupSessionPreviewPresentationController.model;
  type metadata accessor for GroupSessionPreviewPresentationViewModel(0);
  v4 = swift_allocObject();
  v5 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Data?);
  Published.init(initialValue:)();
  *(_QWORD *)&v0[v3] = v4;
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter())
    v6 = specialized Set.init(_nonEmptyArrayLiteral:)(MEMORY[0x24BEE4AF8]);
  else
    v6 = MEMORY[0x24BEE4B08];
  *(_QWORD *)&v5[direct field offset for GroupSessionPreviewPresentationController.subscriptions] = v6;
  *(_QWORD *)&v5[direct field offset for GroupSessionPreviewPresentationController.delegate + 8] = 0;
  swift_unknownObjectWeakInit();

  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type GroupSessionPreviewPresentationViewModel and conformance GroupSessionPreviewPresentationViewModel, type metadata accessor for GroupSessionPreviewPresentationViewModel, (uint64_t)&protocol conformance descriptor for GroupSessionPreviewPresentationViewModel);
  swift_retain();
  ObservedObject.init(wrappedValue:)();
  v13 = v7;
  lazy protocol witness table accessor for type GroupSessionPreviewPresentationView and conformance GroupSessionPreviewPresentationView();
  v12 = AnyView.init<A>(_:)();
  v8 = (id)UIHostingController.init(rootView:)();
  result = objc_msgSend(v8, sel_view, v12, v13);
  if (result)
  {
    v10 = result;
    if (one-time initialization token for defaultPresentationSize != -1)
      swift_once();
    objc_msgSend(v10, sel_frame);
    objc_msgSend(v10, sel_setFrame_);

    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UIHostingControllerSizingOptions>);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_21FDD5AF0;
    v11 = v8;
    static UIHostingControllerSizingOptions.preferredContentSize.getter();
    lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type UIHostingControllerSizingOptions and conformance UIHostingControllerSizingOptions, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1200], MEMORY[0x24BDF1210]);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [UIHostingControllerSizingOptions]);
    lazy protocol witness table accessor for type [UIHostingControllerSizingOptions] and conformance [A]();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    dispatch thunk of UIHostingController.sizingOptions.setter();

    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

double @objc GroupSessionPreviewPresentationController.preferredContentSize.getter(void *a1)
{
  id v1;
  double v2;
  double v3;
  double v4;
  objc_super v6;

  v6.receiver = a1;
  v6.super_class = (Class)type metadata accessor for GroupSessionPreviewPresentationController(0);
  v1 = v6.receiver;
  objc_msgSendSuper2(&v6, sel_preferredContentSize);
  v4 = v3;
  if (v3 == 0.0 && v2 == 0.0)
  {
    if (one-time initialization token for defaultPresentationSize != -1)
      swift_once();
    v4 = *(double *)&static GroupSessionPreviewPresentationController.defaultPresentationSize;
  }

  return v4;
}

double GroupSessionPreviewPresentationController.preferredContentSize.getter()
{
  void *v0;
  double result;
  double v2;
  objc_super v3;

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for GroupSessionPreviewPresentationController(0);
  objc_msgSendSuper2(&v3, sel_preferredContentSize);
  if (result == 0.0 && v2 == 0.0)
  {
    if (one-time initialization token for defaultPresentationSize != -1)
      swift_once();
    return *(double *)&static GroupSessionPreviewPresentationController.defaultPresentationSize;
  }
  return result;
}

void @objc GroupSessionPreviewPresentationController.preferredContentSize.setter(void *a1, double a2, double a3)
{
  id v5;

  v5 = a1;
  GroupSessionPreviewPresentationController.preferredContentSize.setter(a2, a3);

}

uint64_t GroupSessionPreviewPresentationController.preferredContentSize.setter(double a1, double a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  objc_class *v13;
  id v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  objc_super v20;

  v3 = v2;
  if (one-time initialization token for previews != -1)
    swift_once();
  v6 = type metadata accessor for Logger();
  __swift_project_value_buffer(v6, (uint64_t)static Log.previews);
  v7 = Logger.logObject.getter();
  v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v19 = v10;
    *(_DWORD *)v9 = 136315138;
    type metadata accessor for CGSize(0);
    v11 = String.init<A>(reflecting:)();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v11, v12, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FD90000, v7, v8, "Updating preferred content size on presentation controller to new size: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207D49E4](v10, -1, -1);
    MEMORY[0x2207D49E4](v9, -1, -1);
  }

  v13 = (objc_class *)type metadata accessor for GroupSessionPreviewPresentationController(0);
  v20.receiver = v3;
  v20.super_class = v13;
  v14 = objc_msgSendSuper2(&v20, sel_setPreferredContentSize_, a1, a2);
  result = (*(uint64_t (**)(id))(class metadata base offset for GroupSessionPreviewPresentationController
                                         + (*MEMORY[0x24BEE4EA0] & *v3)
                                         + 72))(v14);
  if (result)
  {
    v17 = v16;
    ObjectType = swift_getObjectType();
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v17 + 8))(v3, ObjectType, v17);
    return swift_unknownObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall GroupSessionPreviewPresentationController.viewDidLayoutSubviews()()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for GroupSessionPreviewPresentationController(0);
  v1 = objc_msgSendSuper2(&v5, sel_viewDidLayoutSubviews);
  if ((*(uint64_t (**)(id))(class metadata base offset for GroupSessionPreviewPresentationController
                                     + (*MEMORY[0x24BEE4EA0] & *v0)
                                     + 72))(v1))
  {
    v3 = v2;
    ObjectType = swift_getObjectType();
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v3 + 8))(v0, ObjectType, v3);
    swift_unknownObjectRelease();
  }
}

void @objc GroupSessionPreviewPresentationController.viewDidLayoutSubviews()(void *a1)
{
  _QWORD *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  objc_super v6;

  v6.receiver = a1;
  v6.super_class = (Class)type metadata accessor for GroupSessionPreviewPresentationController(0);
  v1 = v6.receiver;
  v2 = objc_msgSendSuper2(&v6, sel_viewDidLayoutSubviews);
  if ((*(uint64_t (**)(id))(class metadata base offset for GroupSessionPreviewPresentationController
                                     + (*MEMORY[0x24BEE4EA0] & *v1)
                                     + 72))(v2))
  {
    v4 = v3;
    ObjectType = swift_getObjectType();
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v4 + 8))(v1, ObjectType, v4);

    swift_unknownObjectRelease();
  }
  else
  {

  }
}

id GroupSessionPreviewPresentationController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void @objc GroupSessionPreviewPresentationController.init(coder:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  specialized GroupSessionPreviewPresentationController.init(coder:)();
}

void GroupSessionPreviewPresentationController.__allocating_init(rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void GroupSessionPreviewPresentationController.init(rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void GroupSessionPreviewPresentationController.__allocating_init(coder:rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void GroupSessionPreviewPresentationController.init(coder:rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t GroupSessionPreviewPresentationController.__ivar_destroyer()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return outlined destroy of weak PeoplePickerViewController?(v0 + direct field offset for GroupSessionPreviewPresentationController.delegate);
}

id GroupSessionPreviewPresentationController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GroupSessionPreviewPresentationController(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t @objc GroupSessionPreviewPresentationController.__ivar_destroyer(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  return outlined destroy of weak PeoplePickerViewController?(a1 + direct field offset for GroupSessionPreviewPresentationController.delegate);
}

void vtable thunk for UIHostingController.__allocating_init(rootView:) dispatching to GroupSessionPreviewPresentationController.__allocating_init(rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void vtable thunk for UIHostingController.__allocating_init(coder:rootView:) dispatching to GroupSessionPreviewPresentationController.__allocating_init(coder:rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

double key path getter for GroupSessionPreviewPresentationViewModel.previewData : GroupSessionPreviewPresentationViewModel@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t key path setter for GroupSessionPreviewPresentationViewModel.previewData : GroupSessionPreviewPresentationViewModel(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_getKeyPath();
  swift_getKeyPath();
  outlined copy of Data?(v1, v2);
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t outlined copy of Data?(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return outlined copy of Data._Representation(a1, a2);
  return a1;
}

uint64_t type metadata accessor for GroupSessionPreviewPresentationViewModel(uint64_t a1)
{
  return type metadata accessor for GroupSessionPreviewPresentationViewModel(a1, (uint64_t *)&type metadata singleton initialization cache for GroupSessionPreviewPresentationViewModel);
}

unint64_t lazy protocol witness table accessor for type GroupSessionPreviewPresentationView and conformance GroupSessionPreviewPresentationView()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type GroupSessionPreviewPresentationView and conformance GroupSessionPreviewPresentationView;
  if (!lazy protocol witness table cache variable for type GroupSessionPreviewPresentationView and conformance GroupSessionPreviewPresentationView)
  {
    result = MEMORY[0x2207D4924](&protocol conformance descriptor for GroupSessionPreviewPresentationView, &unk_24E5ACF60);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type GroupSessionPreviewPresentationView and conformance GroupSessionPreviewPresentationView);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type [UIHostingControllerSizingOptions] and conformance [A]()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type [UIHostingControllerSizingOptions] and conformance [A];
  if (!lazy protocol witness table cache variable for type [UIHostingControllerSizingOptions] and conformance [A])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [UIHostingControllerSizingOptions]);
    result = MEMORY[0x2207D4924](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [UIHostingControllerSizingOptions] and conformance [A]);
  }
  return result;
}

uint64_t type metadata accessor for GroupSessionPreviewPresentationController(uint64_t a1)
{
  return type metadata accessor for GroupSessionPreviewPresentationViewModel(a1, (uint64_t *)&type metadata singleton initialization cache for GroupSessionPreviewPresentationController);
}

uint64_t type metadata accessor for GroupSessionPreviewPresentationViewModel(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

void specialized GroupSessionPreviewPresentationController.init(coder:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = direct field offset for GroupSessionPreviewPresentationController.model;
  type metadata accessor for GroupSessionPreviewPresentationViewModel(0);
  v2 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Data?);
  Published.init(initialValue:)();
  *(_QWORD *)&v0[v1] = v2;
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter())
    v3 = specialized Set.init(_nonEmptyArrayLiteral:)(MEMORY[0x24BEE4AF8]);
  else
    v3 = MEMORY[0x24BEE4B08];
  *(_QWORD *)&v0[direct field offset for GroupSessionPreviewPresentationController.subscriptions] = v3;
  *(_QWORD *)&v0[direct field offset for GroupSessionPreviewPresentationController.delegate + 8] = 0;
  swift_unknownObjectWeakInit();

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_21FDADCC4@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(class metadata base offset for GroupSessionPreviewPresentationController
                                + (*MEMORY[0x24BEE4EA0] & **a1)
                                + 48))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_21FDADD10(uint64_t *a1, _QWORD **a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t (*v4)(uint64_t, unint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, unint64_t))(class metadata base offset for GroupSessionPreviewPresentationController
                                                           + (*MEMORY[0x24BEE4EA0] & **a2)
                                                           + 56);
  outlined copy of Data?(*a1, v3);
  return v4(v2, v3);
}

uint64_t sub_21FDADD74@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(class metadata base offset for GroupSessionPreviewPresentationController
                                + (*MEMORY[0x24BEE4EA0] & **a1)
                                + 72))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_21FDADDC0(uint64_t a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))(class metadata base offset for GroupSessionPreviewPresentationController
                                                  + (*MEMORY[0x24BEE4EA0] & **a2)
                                                  + 80);
  v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t ObjC metadata update function for GroupSessionPreviewPresentationViewModel()
{
  return type metadata accessor for GroupSessionPreviewPresentationViewModel(0);
}

void type metadata completion function for GroupSessionPreviewPresentationViewModel()
{
  unint64_t v0;

  type metadata accessor for Published<Data?>();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void type metadata accessor for Published<Data?>()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Published<Data?>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Data?);
    v0 = type metadata accessor for Published();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Published<Data?>);
  }
}

uint64_t dispatch thunk of GroupSessionPreviewPresentationControllerDelegate.preferredContentSizeDidChangeForPresentationController(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata completion function for GroupSessionPreviewPresentationController()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for GroupSessionPreviewPresentationController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of GroupSessionPreviewPresentationController.previewData.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for GroupSessionPreviewPresentationController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 48))();
}

uint64_t dispatch thunk of GroupSessionPreviewPresentationController.previewData.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for GroupSessionPreviewPresentationController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 56))();
}

uint64_t dispatch thunk of GroupSessionPreviewPresentationController.previewData.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for GroupSessionPreviewPresentationController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 64))();
}

uint64_t dispatch thunk of GroupSessionPreviewPresentationController.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for GroupSessionPreviewPresentationController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 72))();
}

uint64_t dispatch thunk of GroupSessionPreviewPresentationController.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for GroupSessionPreviewPresentationController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 80))();
}

uint64_t dispatch thunk of GroupSessionPreviewPresentationController.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for GroupSessionPreviewPresentationController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 88))();
}

uint64_t dispatch thunk of GroupSessionPreviewPresentationController.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for GroupSessionPreviewPresentationController + v0 + 96))();
}

uint64_t ObjC metadata update function for GroupSessionPreviewPresentationController()
{
  return type metadata accessor for GroupSessionPreviewPresentationController(0);
}

_QWORD *initializeBufferWithCopyOfBuffer for GroupSessionPreviewPresentationView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for GroupSessionPreviewPresentationView()
{
  return swift_release();
}

_QWORD *assignWithCopy for GroupSessionPreviewPresentationView(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for GroupSessionPreviewPresentationView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupSessionPreviewPresentationView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GroupSessionPreviewPresentationView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void *type metadata accessor for GroupSessionPreviewPresentationView()
{
  return &unk_24E5ACF60;
}

uint64_t associated type witness table accessor for View.Body : View in GroupSessionPreviewPresentationView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for ObservableObject.ObjectWillChangePublisher : Publisher in GroupSessionPreviewPresentationViewModel()
{
  return MEMORY[0x24BDB9D70];
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<_ArchivedView, EmptyView> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type _ConditionalContent<_ArchivedView, EmptyView> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<_ArchivedView, EmptyView> and conformance <> _ConditionalContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for _ConditionalContent<_ArchivedView, EmptyView>);
    v2[0] = lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type _ArchivedView and conformance _ArchivedView, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC3E0], MEMORY[0x24BDEC3D8]);
    v2[1] = MEMORY[0x24BDF5138];
    result = MEMORY[0x2207D4924](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<_ArchivedView, EmptyView> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

uint64_t thunk for @escaping @callee_unowned @convention(block) (@unowned ObjCBool) -> ()(char a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a2 + 16))(a2, a1 & 1);
}

id PictureInPicturePreviewPresenter.sourceView.getter()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR____TtC22_GroupActivities_UIKit32PictureInPicturePreviewPresenter_sourceView);
  swift_beginAccess();
  return *v1;
}

void PictureInPicturePreviewPresenter.sourceView.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  id v5;

  v3 = (void **)(v1 + OBJC_IVAR____TtC22_GroupActivities_UIKit32PictureInPicturePreviewPresenter_sourceView);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;
  v5 = a1;

  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC22_GroupActivities_UIKit32PictureInPicturePreviewPresenter_pictureInPictureProxy), sel_viewFrameForInteractiveTransitionAnimationWhenEnteringBackgroundDidChangeForViewController);
}

id (*PictureInPicturePreviewPresenter.sourceView.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return PictureInPicturePreviewPresenter.sourceView.modify;
}

id PictureInPicturePreviewPresenter.sourceView.modify(uint64_t a1, char a2)
{
  id result;

  result = (id)swift_endAccess();
  if ((a2 & 1) == 0)
    return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 24)+ OBJC_IVAR____TtC22_GroupActivities_UIKit32PictureInPicturePreviewPresenter_pictureInPictureProxy), sel_viewFrameForInteractiveTransitionAnimationWhenEnteringBackgroundDidChangeForViewController);
  return result;
}

uint64_t PictureInPicturePreviewPresenter.pictureInPictureShouldStartWhenEnteringBackground.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  const char *v8;
  uint64_t v9;

  if (!objc_msgSend((id)objc_opt_self(), sel_isPictureInPictureSupported))
  {
    if (one-time initialization token for previews != -1)
      swift_once();
    v9 = type metadata accessor for Logger();
    __swift_project_value_buffer(v9, (uint64_t)static Log.previews);
    v5 = Logger.logObject.getter();
    v6 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v5, v6))
      goto LABEL_12;
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    v8 = "PIP will not start when entering background, as it's unsupported";
    goto LABEL_11;
  }
  v1 = (*(uint64_t (**)(void))(class metadata base offset for GroupSessionPreviewPresentationController
                            + (*MEMORY[0x24BEE4EA0] & **(_QWORD **)(v0
                                                                  + OBJC_IVAR____TtC22_GroupActivities_UIKit32PictureInPicturePreviewPresenter_presentationController))
                            + 48))();
  v3 = v2;
  outlined consume of Data?(v1, v2);
  if (v3 >> 60 == 15)
  {
    if (one-time initialization token for previews != -1)
      swift_once();
    v4 = type metadata accessor for Logger();
    __swift_project_value_buffer(v4, (uint64_t)static Log.previews);
    v5 = Logger.logObject.getter();
    v6 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v5, v6))
      goto LABEL_12;
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    v8 = "PIP will not start when entering background, as there's no preview to show";
LABEL_11:
    _os_log_impl(&dword_21FD90000, v5, v6, v8, v7, 2u);
    MEMORY[0x2207D49E4](v7, -1, -1);
LABEL_12:

    return 0;
  }
  return 1;
}

char *PictureInPicturePreviewPresenter.__allocating_init(sourceView:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return PictureInPicturePreviewPresenter.init(sourceView:)(a1);
}

char *PictureInPicturePreviewPresenter.init(sourceView:)(void *a1)
{
  char *v1;
  id v3;
  char *v4;
  id v5;
  id v6;
  _QWORD *v7;
  char *result;
  id v9;
  objc_class *v10;
  id v11;
  void (*v12)(id, _UNKNOWN **);
  id v13;
  objc_class *v14;
  id v15;
  char *v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  _QWORD v23[3];
  objc_class *v24;
  id (*v25)(id);
  uint64_t v26;
  objc_super v27;
  objc_super v28;

  *(_QWORD *)&v1[OBJC_IVAR____TtC22_GroupActivities_UIKit32PictureInPicturePreviewPresenter_pictureInPictureProxyDelegateAdapter] = 0;
  v3 = objc_allocWithZone((Class)type metadata accessor for GroupSessionPreviewPresentationController(0));
  v4 = v1;
  v5 = GroupSessionPreviewPresentationController.init()();
  *(_QWORD *)&v4[OBJC_IVAR____TtC22_GroupActivities_UIKit32PictureInPicturePreviewPresenter_presentationController] = v5;
  v6 = objc_allocWithZone(MEMORY[0x24BE6FB50]);
  v7 = v5;
  result = (char *)objc_msgSend(v6, sel_initWithControlsStyle_viewController_, 4, v7);
  if (result)
  {
    *(_QWORD *)&v4[OBJC_IVAR____TtC22_GroupActivities_UIKit32PictureInPicturePreviewPresenter_pictureInPictureProxy] = result;
    *(_QWORD *)&v4[OBJC_IVAR____TtC22_GroupActivities_UIKit32PictureInPicturePreviewPresenter_sourceView] = a1;
    v9 = a1;

    v10 = (objc_class *)type metadata accessor for PictureInPicturePreviewPresenter();
    v28.receiver = v4;
    v28.super_class = v10;
    v11 = objc_msgSendSuper2(&v28, sel_init);
    v12 = *(void (**)(id, _UNKNOWN **))(class metadata base offset for GroupSessionPreviewPresentationController
                                                 + (*MEMORY[0x24BEE4EA0] & *v7)
                                                 + 80);
    v13 = v11;
    v12(v11, &protocol witness table for PictureInPicturePreviewPresenter);
    v14 = (objc_class *)type metadata accessor for PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter();
    v15 = objc_allocWithZone(v14);
    v24 = v10;
    v25 = (id (*)(id))&protocol witness table for PictureInPicturePreviewPresenter;
    v23[0] = v13;
    outlined init with copy of ConversationManagerClientProtocol((uint64_t)v23, (uint64_t)v15+ OBJC_IVAR____TtCC22_GroupActivities_UIKit32PictureInPicturePreviewPresenter36PictureInPictureProxyDelegateAdapter_delegate);
    v27.receiver = v15;
    v27.super_class = v14;
    v16 = (char *)v13;
    v17 = objc_msgSendSuper2(&v27, sel_init);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
    v18 = OBJC_IVAR____TtC22_GroupActivities_UIKit32PictureInPicturePreviewPresenter_pictureInPictureProxyDelegateAdapter;
    v19 = *(void **)&v16[OBJC_IVAR____TtC22_GroupActivities_UIKit32PictureInPicturePreviewPresenter_pictureInPictureProxyDelegateAdapter];
    *(_QWORD *)&v16[OBJC_IVAR____TtC22_GroupActivities_UIKit32PictureInPicturePreviewPresenter_pictureInPictureProxyDelegateAdapter] = v17;

    v20 = *(void **)&v16[OBJC_IVAR____TtC22_GroupActivities_UIKit32PictureInPicturePreviewPresenter_pictureInPictureProxy];
    objc_msgSend(v20, sel_setDelegate_, *(_QWORD *)&v16[v18]);
    v25 = specialized thunk for @callee_guaranteed (@guaranteed PGMutablePlaybackState?) -> ();
    v26 = 0;
    v23[0] = MEMORY[0x24BDAC760];
    v23[1] = 1107296256;
    v23[2] = thunk for @escaping @callee_guaranteed (@guaranteed PGMutablePlaybackState?) -> ();
    v24 = (objc_class *)&block_descriptor_2;
    v21 = _Block_copy(v23);
    v22 = v20;
    swift_release();
    objc_msgSend(v22, sel_updatePlaybackStateUsingBlock_, v21);

    _Block_release(v21);
    return v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for PictureInPicturePreviewPresenter()
{
  return objc_opt_self();
}

id PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter.__allocating_init(delegate:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  v6 = specialized PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter.__allocating_init(delegate:)(v5, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v6;
}

uint64_t type metadata accessor for PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter()
{
  return objc_opt_self();
}

id specialized thunk for @callee_guaranteed (@guaranteed PGMutablePlaybackState?) -> ()(id result)
{
  if (result)
    return objc_msgSend(result, sel_setContentType_, 5);
  return result;
}

uint64_t thunk for @escaping @callee_guaranteed (@guaranteed PGMutablePlaybackState?) -> ()(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  v3(a2);
  return swift_unknownObjectRelease();
}

Swift::Void __swiftcall PictureInPicturePreviewPresenter.updatePictureInPictureShouldStartWhenEnteringBackground()()
{
  uint64_t v0;
  uint64_t v1;
  char ShouldStartWhenEntering;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  v1 = v0;
  ShouldStartWhenEntering = PictureInPicturePreviewPresenter.pictureInPictureShouldStartWhenEnteringBackground.getter();
  if (one-time initialization token for previews != -1)
    swift_once();
  v3 = type metadata accessor for Logger();
  __swift_project_value_buffer(v3, (uint64_t)static Log.previews);
  v4 = Logger.logObject.getter();
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v6 = 67109120;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl(&dword_21FD90000, v4, v5, "Updating picture and picture with intent to start when application enters background: %{BOOL}d", v6, 8u);
    MEMORY[0x2207D49E4](v6, -1, -1);
  }

  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC22_GroupActivities_UIKit32PictureInPicturePreviewPresenter_pictureInPictureProxy), sel_setPictureInPictureShouldStartWhenEnteringBackground_, ShouldStartWhenEntering & 1);
}

Swift::Void __swiftcall PictureInPicturePreviewPresenter.updatePreferredContentSizeForViewController()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  int v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = type metadata accessor for Logger();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for previews != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v1, (uint64_t)static Log.previews);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v6, v1);
  v7 = v0;
  v8 = Logger.logObject.getter();
  v9 = static os_log_type_t.debug.getter();
  v10 = &unk_25557A000;
  if (!os_log_type_enabled(v8, (os_log_type_t)v9))
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    goto LABEL_7;
  }
  v23 = v9;
  v24 = v2;
  v11 = swift_slowAlloc();
  v22 = swift_slowAlloc();
  v27 = v22;
  *(_DWORD *)v11 = 136315394;
  objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC22_GroupActivities_UIKit32PictureInPicturePreviewPresenter_presentationController], sel_preferredContentSize);
  v25 = v12;
  v26 = v13;
  type metadata accessor for CGSize(0);
  v14 = String.init<A>(reflecting:)();
  v25 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v14, v15, &v27);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();

  swift_bridgeObjectRelease();
  *(_WORD *)(v11 + 12) = 2080;
  v16 = objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC22_GroupActivities_UIKit32PictureInPicturePreviewPresenter_pictureInPictureProxy], sel_clientSessionIdentifier);
  if (v16)
  {
    v17 = v16;
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v20 = v19;

    v25 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v20, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FD90000, v8, (os_log_type_t)v23, "Updating preferred content size for preview to size: %s for session: %s", (uint8_t *)v11, 0x16u);
    v21 = v22;
    swift_arrayDestroy();
    MEMORY[0x2207D49E4](v21, -1, -1);
    MEMORY[0x2207D49E4](v11, -1, -1);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v1);
    v10 = (_QWORD *)&unk_25557A000;
LABEL_7:
    objc_msgSend(*(id *)&v7[v10[471]], sel_preferredContentSizeDidChangeForViewController);
    return;
  }

  __break(1u);
}

void PictureInPicturePreviewPresenter.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id PictureInPicturePreviewPresenter.__deallocating_deinit()
{
  return PictureInPicturePreviewPresenter.__deallocating_deinit(type metadata accessor for PictureInPicturePreviewPresenter);
}

uint64_t PictureInPicturePreviewPresenter.registerPreviewSource<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v18;

  v4 = v3;
  v7 = type metadata accessor for UUID();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void **)((char *)v4
                 + OBJC_IVAR____TtC22_GroupActivities_UIKit32PictureInPicturePreviewPresenter_pictureInPictureProxy);
  GroupSessionPreviewSource.groupSessionID.getter(a2, a3);
  v13 = UUID.uuidString.getter();
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  v16 = (void *)MEMORY[0x2207D3EF8](v13, v15);
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_setClientSessionIdentifier_, v16);

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v4) + 0xB0))();
}

uint64_t PictureInPicturePreviewPresenter.updatePreview<A>(for:using:)(uint64_t a1, uint64_t *a2)
{
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t, unint64_t);
  uint64_t v7;

  v4 = *a2;
  v3 = a2[1];
  v5 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v6 = *(uint64_t (**)(uint64_t, unint64_t))(class metadata base offset for GroupSessionPreviewPresentationController
                                                           + (*MEMORY[0x24BEE4EA0] & **(_QWORD **)((char *)v2
                                                                                                 + OBJC_IVAR____TtC22_GroupActivities_UIKit32PictureInPicturePreviewPresenter_presentationController))
                                                           + 56);
  outlined copy of Data._Representation(*a2, v3);
  v7 = v6(v4, v3);
  (*(void (**)(uint64_t))((*v5 & *v2) + 0xB0))(v7);
  return (*(uint64_t (**)(void))((*v5 & *v2) + 0xB8))();
}

uint64_t protocol witness for GroupSessionPreviewPresenter.registerPreviewSource<A>(_:) in conformance PictureInPicturePreviewPresenter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PictureInPicturePreviewPresenter.registerPreviewSource<A>(_:)(a1, a2, a3);
}

uint64_t protocol witness for GroupSessionPreviewPresenter.updatePreview<A>(for:using:) in conformance PictureInPicturePreviewPresenter(uint64_t a1, uint64_t *a2)
{
  _QWORD **v2;
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v7)(uint64_t, unint64_t);
  uint64_t v8;
  uint64_t v9;

  v3 = *v2;
  v5 = *a2;
  v4 = a2[1];
  v6 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v7 = *(uint64_t (**)(uint64_t, unint64_t))(class metadata base offset for GroupSessionPreviewPresentationController
                                                           + (*MEMORY[0x24BEE4EA0] & **(_QWORD **)((char *)*v2
                                                                                                 + OBJC_IVAR____TtC22_GroupActivities_UIKit32PictureInPicturePreviewPresenter_presentationController))
                                                           + 56);
  outlined copy of Data._Representation(*a2, v4);
  v8 = v7(v5, v4);
  v9 = (*(uint64_t (**)(uint64_t))((*v6 & *v3) + 0xB0))(v8);
  return (*(uint64_t (**)(uint64_t))((*v6 & *v3) + 0xB8))(v9);
}

uint64_t PictureInPicturePreviewPresenter.preferredContentSizeDidChangeForPresentationController(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB8))();
}

uint64_t protocol witness for GroupSessionPreviewPresentationControllerDelegate.preferredContentSizeDidChangeForPresentationController(_:) in conformance PictureInPicturePreviewPresenter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB8))();
}

uint64_t PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter.delegate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1
     + OBJC_IVAR____TtCC22_GroupActivities_UIKit32PictureInPicturePreviewPresenter36PictureInPictureProxyDelegateAdapter_delegate;
  swift_beginAccess();
  return outlined init with copy of ConversationManagerClientProtocol(v3, a1);
}

uint64_t PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter.delegate.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1
     + OBJC_IVAR____TtCC22_GroupActivities_UIKit32PictureInPicturePreviewPresenter36PictureInPictureProxyDelegateAdapter_delegate;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_0(v3);
  outlined init with take of ConversationManagerClientProtocol(a1, v3);
  return swift_endAccess();
}

uint64_t (*PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter.delegate.modify())()
{
  swift_beginAccess();
  return ReactionPickerView.reactions.modify;
}

id PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter.init(delegate:)(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  MEMORY[0x24BDAC7A8](v5, v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v7);
  v9 = specialized PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter.init(delegate:)((uint64_t)v7, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v9;
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

_QWORD *PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter.pictureInPictureProxyViewControllerWindow(forTransitionAnimation:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  (*(void (**)(_QWORD *__return_ptr))((*MEMORY[0x24BEE4EA0] & *v1) + 0x58))(v7);
  v3 = v8;
  v4 = v9;
  result = __swift_project_boxed_opaque_existential_1(v7, v8);
  if (a1)
  {
    v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, v3, v4);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
    return (_QWORD *)v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

_QWORD *PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter.pictureInPictureProxyViewFrame(forTransitionAnimation:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;

  (*(void (**)(_QWORD *__return_ptr))((*MEMORY[0x24BEE4EA0] & *v1) + 0x58))(v6);
  v3 = v7;
  v4 = v8;
  result = __swift_project_boxed_opaque_existential_1(v6, v7);
  if (a1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(a1, v3, v4);
    return (_QWORD *)__swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter.picture(_:willStartPictureInPictureWith:)(void *a1)
{
  specialized PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter.picture(_:willStartPictureInPictureWith:)(a1, "Will present preview in picture in picture for session: %s");
}

void PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter.picture(_:didStartPictureInPictureWith:)(void *a1)
{
  specialized PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter.picture(_:willStartPictureInPictureWith:)(a1, "Presented preview in picture in picture for session: %s");
}

void PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter.picture(_:didStopPictureInPictureWith:reason:)(void *a1)
{
  specialized PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter.picture(_:willStartPictureInPictureWith:)(a1, "Stopping preview in picture in picture for session: %s");
}

void PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter.picture(_:failedToStartPictureInPictureWith:error:)(void *a1, uint64_t a2, void *a3)
{
  specialized PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter.picture(_:failedToStartPictureInPictureWith:error:)(a1, a3);
}

uint64_t PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter.picture(inPictureProxyContentType:)()
{
  return 5;
}

id PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter.__deallocating_deinit()
{
  return PictureInPicturePreviewPresenter.__deallocating_deinit(type metadata accessor for PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter);
}

id PictureInPicturePreviewPresenter.__deallocating_deinit(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

void specialized Sequence.compactMap<A>(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  id v12;
  unint64_t v13;
  int64_t v14;
  void *v15;
  id v16;
  int64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;

  v1 = a1;
  v25 = MEMORY[0x24BEE4AF8];
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for UIScene();
    lazy protocol witness table accessor for type UIScene and conformance NSObject();
    Set.Iterator.init(_cocoa:)();
    v1 = v20;
    v18 = v21;
    v2 = v22;
    v3 = v23;
    v4 = v24;
  }
  else
  {
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v18 = a1 + 56;
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v3 = 0;
  }
  v8 = (unint64_t)(v2 + 64) >> 6;
  while (v1 < 0)
  {
    if (!__CocoaSet.Iterator.next()())
      goto LABEL_39;
    type metadata accessor for UIScene();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v12 = v19;
    swift_unknownObjectRelease();
    v11 = v3;
    v9 = v4;
    if (!v19)
      goto LABEL_39;
LABEL_28:
    objc_opt_self();
    v15 = (void *)swift_dynamicCastObjCClass();
    if (!v15)
    {

      goto LABEL_9;
    }
    v16 = objc_msgSend(v15, sel_keyWindow);

    v3 = v11;
    v4 = v9;
    if (v16)
    {
      MEMORY[0x2207D3F94]();
      if (*(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
LABEL_9:
      v3 = v11;
      v4 = v9;
    }
  }
  if (v4)
  {
    v9 = (v4 - 1) & v4;
    v10 = __clz(__rbit64(v4)) | (v3 << 6);
    v11 = v3;
LABEL_27:
    v12 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v10);
    if (!v12)
      goto LABEL_39;
    goto LABEL_28;
  }
  v11 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v11 >= v8)
      goto LABEL_39;
    v13 = *(_QWORD *)(v18 + 8 * v11);
    if (!v13)
    {
      v14 = v3 + 2;
      if (v3 + 2 >= v8)
        goto LABEL_39;
      v13 = *(_QWORD *)(v18 + 8 * v14);
      if (v13)
        goto LABEL_25;
      v14 = v3 + 3;
      if (v3 + 3 >= v8)
        goto LABEL_39;
      v13 = *(_QWORD *)(v18 + 8 * v14);
      if (v13)
        goto LABEL_25;
      v14 = v3 + 4;
      if (v3 + 4 >= v8)
        goto LABEL_39;
      v13 = *(_QWORD *)(v18 + 8 * v14);
      if (v13)
      {
LABEL_25:
        v11 = v14;
      }
      else
      {
        v11 = v3 + 5;
        if (v3 + 5 >= v8)
          goto LABEL_39;
        v13 = *(_QWORD *)(v18 + 8 * v11);
        if (!v13)
        {
          v17 = v3 + 6;
          while (v8 != v17)
          {
            v13 = *(_QWORD *)(v18 + 8 * v17++);
            if (v13)
            {
              v11 = v17 - 1;
              goto LABEL_26;
            }
          }
LABEL_39:
          outlined consume of Set<UIScene>.Iterator._Variant();
          return;
        }
      }
    }
LABEL_26:
    v9 = (v13 - 1) & v13;
    v10 = __clz(__rbit64(v13)) + (v11 << 6);
    goto LABEL_27;
  }
  __break(1u);
}

id protocol witness for PictureInPictureProxyDelegate.pictureInPictureProxyViewControllerWindowForTransitionAnimation(_:) in conformance PictureInPicturePreviewPresenter()
{
  return specialized PictureInPicturePreviewPresenter.pictureInPictureProxyViewControllerWindowForTransitionAnimation(_:)();
}

double protocol witness for PictureInPictureProxyDelegate.pictureInPictureProxyViewFrameForTransitionAnimation(_:) in conformance PictureInPicturePreviewPresenter()
{
  return specialized PictureInPicturePreviewPresenter.pictureInPictureProxyViewFrameForTransitionAnimation(_:)();
}

id specialized PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter.init(delegate:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t *boxed_opaque_existential_1;
  id v8;
  objc_super v10;
  uint64_t v11[5];

  v11[3] = a3;
  v11[4] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v11);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  outlined init with copy of ConversationManagerClientProtocol((uint64_t)v11, (uint64_t)a2+ OBJC_IVAR____TtCC22_GroupActivities_UIKit32PictureInPicturePreviewPresenter36PictureInPictureProxyDelegateAdapter_delegate);
  v10.receiver = a2;
  v10.super_class = (Class)type metadata accessor for PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter();
  v8 = objc_msgSendSuper2(&v10, sel_init);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
  return v8;
}

id specialized PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter.__allocating_init(delegate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v12;

  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_allocWithZone((Class)type metadata accessor for PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter());
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  return specialized PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter.init(delegate:)((uint64_t)v9, v10, a3, a4);
}

id specialized PictureInPicturePreviewPresenter.pictureInPictureProxyViewControllerWindowForTransitionAnimation(_:)()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;

  v1 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x88))();
  v2 = objc_msgSend(v1, sel_window);

  if (v2)
    return v2;
  v4 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v5 = objc_msgSend(v4, sel_connectedScenes);

  type metadata accessor for UIScene();
  lazy protocol witness table accessor for type UIScene and conformance NSObject();
  v6 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  specialized Sequence.compactMap<A>(_:)(v6);
  v8 = v7;
  swift_bridgeObjectRelease();
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    v9 = (void *)_CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v9)
    {
LABEL_5:
      if ((v8 & 0xC000000000000001) != 0)
      {
        v10 = (id)MEMORY[0x2207D4288](0, v8);
      }
      else
      {
        if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_20:
          swift_once();
LABEL_9:
          v11 = type metadata accessor for Logger();
          __swift_project_value_buffer(v11, (uint64_t)static Log.previews);
          v2 = v9;
          v12 = Logger.logObject.getter();
          v13 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v12, v13))
          {
            v14 = (uint8_t *)swift_slowAlloc();
            v15 = (_QWORD *)swift_slowAlloc();
            *(_DWORD *)v14 = 138412290;
            v16 = v2;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *v15 = v2;

            _os_log_impl(&dword_21FD90000, v12, v13, "Source view is yet attached to a window, returning the first window of the application: %@", v14, 0xCu);
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSObject?);
            swift_arrayDestroy();
            MEMORY[0x2207D49E4](v15, -1, -1);
            MEMORY[0x2207D49E4](v14, -1, -1);

            return v16;
          }
          else
          {

          }
          return v2;
        }
        v10 = *(id *)(v8 + 32);
      }
      v9 = v10;
      swift_bridgeObjectRelease();
      if (one-time initialization token for previews == -1)
        goto LABEL_9;
      goto LABEL_20;
    }
  }
  else
  {
    v9 = *(void **)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  if (one-time initialization token for previews != -1)
    swift_once();
  v17 = type metadata accessor for Logger();
  __swift_project_value_buffer(v17, (uint64_t)static Log.previews);
  v18 = Logger.logObject.getter();
  v19 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v20 = 0;
    _os_log_impl(&dword_21FD90000, v18, v19, "There are no windows associated with the application, returning an empty window.", v20, 2u);
    MEMORY[0x2207D49E4](v20, -1, -1);
  }

  return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB58]), sel_init);
}

double specialized PictureInPicturePreviewPresenter.pictureInPictureProxyViewFrameForTransitionAnimation(_:)()
{
  _QWORD *v0;
  uint64_t (*v1)(void);
  void *v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  void *v11;
  UIView *v12;
  void *v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  unint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  double v27;
  CGRect v29;
  CGRect v30;

  v1 = *(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x88);
  v2 = (void *)v1();
  objc_msgSend(v2, sel_frame);
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;

  v29.origin.x = v4;
  v29.origin.y = v6;
  v29.size.width = v8;
  v29.size.height = v10;
  if (CGRectIsEmpty(v29)
    || (v11 = (void *)v1(),
        v12 = (UIView *)objc_msgSend(v11, sel_superview),
        v11,
        !v12))
  {
    if (one-time initialization token for previews != -1)
      swift_once();
    v23 = type metadata accessor for Logger();
    __swift_project_value_buffer(v23, (uint64_t)static Log.previews);
    v24 = Logger.logObject.getter();
    v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_21FD90000, v24, v25, "The source view does not yet have a frame or superview set, returning the main screen bounds for picture-in-picture", v26, 2u);
      MEMORY[0x2207D49E4](v26, -1, -1);
    }

    v12 = (UIView *)objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    -[UIView bounds](v12, sel_bounds);
  }
  else
  {
    v13 = (void *)v1();
    objc_msgSend(v13, sel_frame);
    v15 = v14;
    v17 = v16;
    v19 = v18;
    v21 = v20;

    v30.origin.x = v15;
    v30.origin.y = v17;
    v30.size.width = v19;
    v30.size.height = v21;
    v22 = (unint64_t)UIAccessibilityConvertFrameToScreenCoordinates(v30, v12);
  }
  v27 = *(double *)&v22;

  return v27;
}

void specialized PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter.picture(_:willStartPictureInPictureWith:)(void *a1, const char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = type metadata accessor for Logger();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for previews != -1)
    swift_once();
  v9 = __swift_project_value_buffer(v4, (uint64_t)static Log.previews);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v9, v4);
  v10 = a1;
  v11 = Logger.logObject.getter();
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v26 = v14;
    *(_DWORD *)v13 = 136315138;
    if (a1)
    {
      v22 = v14;
      v23 = a2;
      v24 = v5;
      v15 = objc_msgSend(v10, sel_clientSessionIdentifier);
      if (v15)
      {
        v16 = v15;
        v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v19 = v18;

        v25 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v19, &v26);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_21FD90000, v11, v12, v23, v13, 0xCu);
        v20 = v22;
        swift_arrayDestroy();
        MEMORY[0x2207D49E4](v20, -1, -1);
        MEMORY[0x2207D49E4](v13, -1, -1);

        (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v4);
        return;
      }
    }
    else
    {
      __break(1u);
    }

    __break(1u);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
}

void specialized PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter.picture(_:failedToStartPictureInPictureWith:error:)(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[2];

  v36[1] = *MEMORY[0x24BDAC8D0];
  v4 = type metadata accessor for Logger();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for previews != -1)
    swift_once();
  v9 = __swift_project_value_buffer(v4, (uint64_t)static Log.previews);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v9, v4);
  v10 = a1;
  v11 = a2;
  v12 = v10;
  v13 = a2;
  v14 = Logger.logObject.getter();
  v15 = static os_log_type_t.error.getter();
  if (!os_log_type_enabled(v14, v15))
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    return;
  }
  v16 = swift_slowAlloc();
  v17 = swift_slowAlloc();
  v18 = swift_slowAlloc();
  v36[0] = v18;
  *(_DWORD *)v16 = 136315394;
  if (!a1)
  {

    __break(1u);
    goto LABEL_12;
  }
  v33 = (_QWORD *)v17;
  v34 = v18;
  v31 = v14;
  v32 = v5;
  v19 = objc_msgSend(v12, sel_clientSessionIdentifier);
  if (!v19)
  {
LABEL_12:

    __break(1u);
    return;
  }
  v20 = v19;
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v23 = v22;

  v35 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v23, v36);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();

  swift_bridgeObjectRelease();
  *(_WORD *)(v16 + 12) = 2112;
  if (a2)
  {
    v24 = a2;
    v25 = _swift_stdlib_bridgeErrorToNSError();
    v35 = v25;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
  }
  else
  {
    v35 = 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v25 = 0;
  }
  v27 = v31;
  v26 = v32;
  v28 = v33;
  *v33 = v25;

  _os_log_impl(&dword_21FD90000, v27, v15, "Failed to start preview in picture in picture for session: %s with error: %@", (uint8_t *)v16, 0x16u);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for NSObject?);
  swift_arrayDestroy();
  MEMORY[0x2207D49E4](v28, -1, -1);
  v29 = v34;
  swift_arrayDestroy();
  MEMORY[0x2207D49E4](v29, -1, -1);
  MEMORY[0x2207D49E4](v16, -1, -1);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v4);
}

void specialized PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter.picture(_:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:)(void *a1, void (*a2)(_QWORD), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  id v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD v22[2];
  void (*v23)(_QWORD);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = type metadata accessor for Logger();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for previews != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v6, (uint64_t)static Log.previews);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v11, v6);
  v12 = a1;
  v13 = Logger.logObject.getter();
  v14 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v13, v14))
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_8;
  }
  v15 = (uint8_t *)swift_slowAlloc();
  v24 = swift_slowAlloc();
  v26 = v24;
  *(_DWORD *)v15 = 136315138;
  if (!a1)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v22[0] = v7;
  v22[1] = a3;
  v23 = a2;
  v16 = objc_msgSend(v12, sel_clientSessionIdentifier);
  if (v16)
  {
    v17 = v16;
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v20 = v19;

    v25 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v18, v20, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FD90000, v13, v14, "Transitioning from preview to user interface for session: %s", v15, 0xCu);
    v21 = v24;
    swift_arrayDestroy();
    MEMORY[0x2207D49E4](v21, -1, -1);
    MEMORY[0x2207D49E4](v15, -1, -1);

    (*(void (**)(char *, uint64_t))(v22[0] + 8))(v10, v6);
    a2 = v23;
LABEL_8:
    if (a2)
    {
      a2(1);
      return;
    }
    __break(1u);
    goto LABEL_11;
  }
LABEL_12:

  __break(1u);
}

uint64_t sub_21FDB0A70@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x88))();
  *a2 = result;
  return result;
}

uint64_t sub_21FDB0AB0(id *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(id))((*MEMORY[0x24BEE4EA0] & **a2) + 0x90))(*a1);
}

uint64_t sub_21FDB0AF0(_QWORD **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x58))();
}

uint64_t sub_21FDB0B28(uint64_t a1, _QWORD **a2)
{
  _BYTE v4[40];

  outlined init with copy of ConversationManagerClientProtocol(a1, (uint64_t)v4);
  return (*(uint64_t (**)(_BYTE *))((*MEMORY[0x24BEE4EA0] & **a2) + 0x60))(v4);
}

uint64_t method lookup function for PictureInPicturePreviewPresenter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PictureInPicturePreviewPresenter.sourceView.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of PictureInPicturePreviewPresenter.sourceView.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of PictureInPicturePreviewPresenter.sourceView.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of PictureInPicturePreviewPresenter.__allocating_init(sourceView:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of PictureInPicturePreviewPresenter.updatePictureInPictureShouldStartWhenEnteringBackground()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of PictureInPicturePreviewPresenter.updatePreferredContentSizeForViewController()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of PictureInPictureProxyDelegate.pictureInPictureProxyViewControllerWindowForTransitionAnimation(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of PictureInPictureProxyDelegate.pictureInPictureProxyViewFrameForTransitionAnimation(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t method lookup function for PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x58))();
}

uint64_t dispatch thunk of PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter.__allocating_init(delegate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter.pictureInPictureProxyViewControllerWindow(forTransitionAnimation:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter.pictureInPictureProxyViewFrame(forTransitionAnimation:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter.picture(_:willStartPictureInPictureWith:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter.picture(_:didStartPictureInPictureWith:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter.picture(_:didStopPictureInPictureWith:reason:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter.picture(_:failedToStartPictureInPictureWith:error:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter.picture(_:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of PictureInPicturePreviewPresenter.PictureInPictureProxyDelegateAdapter.picture(inPictureProxyContentType:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB0))();
}

uint64_t sub_21FDB0D70()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t _s10ObjectiveC8ObjCBoolVIeyBy_SbIegy_TRTA_0(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 16) + 16))(*(_QWORD *)(v1 + 16), a1 & 1);
}

unint64_t type metadata accessor for UIScene()
{
  unint64_t result;

  result = lazy cache variable for type metadata for UIScene;
  if (!lazy cache variable for type metadata for UIScene)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for UIScene);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type UIScene and conformance NSObject()
{
  unint64_t result;
  unint64_t v1;

  result = lazy protocol witness table cache variable for type UIScene and conformance NSObject;
  if (!lazy protocol witness table cache variable for type UIScene and conformance NSObject)
  {
    v1 = type metadata accessor for UIScene();
    result = MEMORY[0x2207D4924](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UIScene and conformance NSObject);
  }
  return result;
}

uint64_t outlined consume of Set<UIScene>.Iterator._Variant()
{
  return swift_release();
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t CanvasPreviewPresenter.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t CanvasPreviewPresenter.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t CanvasPreviewPresenter.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t CanvasPreviewPresenter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t protocol witness for GroupSessionPreviewPresenter.registerPreviewSource<A>(_:) in conformance CanvasPreviewPresenter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 88))();
}

uint64_t protocol witness for GroupSessionPreviewPresenter.updatePreview<A>(for:using:) in conformance CanvasPreviewPresenter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 96))();
}

uint64_t type metadata accessor for CanvasPreviewPresenter()
{
  return objc_opt_self();
}

uint64_t method lookup function for CanvasPreviewPresenter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CanvasPreviewPresenter.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of CanvasPreviewPresenter.registerPreviewSource<A>(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of CanvasPreviewPresenter.updatePreview<A>(for:using:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t one-time initialization function for shared()
{
  uint64_t result;

  type metadata accessor for GroupSessionCanvasPreviewPresentationManager();
  result = swift_initStaticObject();
  static GroupSessionCanvasPreviewPresentationManager.shared = result;
  return result;
}

uint64_t GroupSessionCanvasPreviewPresentationManager.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t *GroupSessionCanvasPreviewPresentationManager.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1)
    swift_once();
  return &static GroupSessionCanvasPreviewPresentationManager.shared;
}

uint64_t static GroupSessionCanvasPreviewPresentationManager.shared.getter()
{
  type metadata accessor for GroupSessionCanvasPreviewPresentationManager();
  return swift_initStaticObject();
}

uint64_t GroupSessionCanvasPreviewPresentationManager.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t GroupSessionCanvasPreviewPresentationManager.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t GroupSessionCanvasPreviewPresentationManager.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t type metadata accessor for GroupSessionCanvasPreviewPresentationManager()
{
  return objc_opt_self();
}

uint64_t one-time initialization function for identifier()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  if (one-time initialization token for canvasPreviewPresentationManager != -1)
    swift_once();
  v0 = type metadata accessor for GroupSessionEndpointIdentifier();
  __swift_project_value_buffer(v0, (uint64_t)static GroupSessionEndpointIdentifier.canvasPreviewPresentationManager);
  result = GroupSessionEndpointIdentifier.rawValue.getter();
  static GroupSessionCanvasPreviewPresentationManager.identifier = result;
  unk_25557E510 = v2;
  return result;
}

uint64_t *GroupSessionCanvasPreviewPresentationManager.identifier.unsafeMutableAddressor()
{
  if (one-time initialization token for identifier != -1)
    swift_once();
  return &static GroupSessionCanvasPreviewPresentationManager.identifier;
}

uint64_t static GroupSessionCanvasPreviewPresentationManager.identifier.getter()
{
  uint64_t v0;

  if (one-time initialization token for identifier != -1)
    swift_once();
  v0 = static GroupSessionCanvasPreviewPresentationManager.identifier;
  swift_bridgeObjectRetain();
  return v0;
}

void GroupSessionCanvasPreviewPresentationManager.customEndpoint(for:activity:)()
{
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t protocol witness for static CustomEndpointProvider.identifier.getter in conformance GroupSessionCanvasPreviewPresentationManager()
{
  uint64_t v0;

  if (one-time initialization token for identifier != -1)
    swift_once();
  v0 = static GroupSessionCanvasPreviewPresentationManager.identifier;
  swift_bridgeObjectRetain();
  return v0;
}

void protocol witness for CustomEndpointProvider.customEndpoint(for:activity:) in conformance GroupSessionCanvasPreviewPresentationManager()
{
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t method lookup function for GroupSessionCanvasPreviewPresentationManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of GroupSessionCanvasPreviewPresentationManager.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t GroupSessionPreviewCoordinator.hostingController.getter()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t GroupSessionPreviewCoordinator.hostingController.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = a1;
  return swift_release();
}

uint64_t (*GroupSessionPreviewCoordinator.hostingController.modify())()
{
  swift_beginAccess();
  return ReactionPickerView.reactions.modify;
}

uint64_t GroupSessionPreviewCoordinator.updatePreview(session:presenter:previewContent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t);
  char *v51;
  char v52;
  void (*v53)(char *, uint64_t);
  _QWORD v54[3];
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  uint64_t v67;

  v5 = v4;
  v57 = a4;
  v58 = a3;
  v8 = *v5;
  v63 = *(_QWORD *)(*v5 + 88);
  v9 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v59 = (char *)v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UUID();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v55 = (char *)v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UUID?, UUID?));
  MEMORY[0x24BDAC7A8](v61, v15);
  v17 = (char *)v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v20 = MEMORY[0x24BDAC7A8](v18, v19);
  v56 = (uint64_t)v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v20, v22);
  v25 = (char *)v54 - v24;
  MEMORY[0x24BDAC7A8](v23, v26);
  v28 = (char *)v54 - v27;
  if (!a1)
    return (*(uint64_t (**)(_QWORD))(v8 + 128))(0);
  v60 = v8;
  v54[0] = a2;
  v54[1] = v9;
  swift_retain();
  v62 = a1;
  GroupSession.id.getter();
  v29 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v30 = v29(v28, 0, 1, v11);
  v31 = *(uint64_t (**)(uint64_t))(*v5 + 120);
  v54[2] = v5;
  v32 = v31(v30);
  v33 = v12;
  if (v32)
  {
    v67 = v32;
    v64 = *(_QWORD *)(v60 + 80);
    v65 = v63;
    v66 = *(_OWORD *)(v60 + 96);
    type metadata accessor for GroupSessionPreviewHostingController();
  }
  v29(v25, 1, 1, v11);
  v34 = (uint64_t)&v17[*(int *)(v61 + 48)];
  outlined init with copy of UUID?((uint64_t)v28, (uint64_t)v17);
  outlined init with copy of UUID?((uint64_t)v25, v34);
  v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v35((uint64_t)v17, 1, v11) != 1)
  {
    v37 = v56;
    outlined init with copy of UUID?((uint64_t)v17, v56);
    if (v35(v34, 1, v11) != 1)
    {
      v50 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 32);
      v51 = v55;
      v50(v55, v34, v11);
      lazy protocol witness table accessor for type UUID and conformance UUID();
      v52 = dispatch thunk of static Equatable.== infix(_:_:)();
      v53 = *(void (**)(char *, uint64_t))(v33 + 8);
      v53(v51, v11);
      outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v25, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v28, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v53((char *)v37, v11);
      outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      if ((v52 & 1) != 0)
        return swift_release();
LABEL_11:
      if (one-time initialization token for previews != -1)
        swift_once();
      v38 = type metadata accessor for Logger();
      __swift_project_value_buffer(v38, (uint64_t)static Log.previews);
      swift_retain();
      v39 = Logger.logObject.getter();
      v40 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v39, v40))
      {
        v41 = (uint8_t *)swift_slowAlloc();
        v42 = swift_slowAlloc();
        *(_DWORD *)v41 = 136315138;
        v64 = v42;
        v67 = v62;
        v43 = *(_QWORD *)(v60 + 80);
        v44 = *(_QWORD *)(v60 + 96);
        v45 = type metadata accessor for GroupSession();
        MEMORY[0x2207D4924](MEMORY[0x24BDD1EB0], v45);
        v46 = dispatch thunk of CustomStringConvertible.description.getter();
        v67 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v46, v47, &v64);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_21FD90000, v39, v40, "Session changed for preview coordinator to new session: %s", v41, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2207D49E4](v42, -1, -1);
        MEMORY[0x2207D49E4](v41, -1, -1);

        v48 = v60;
      }
      else
      {

        swift_release();
        v48 = v60;
        v43 = *(_QWORD *)(v60 + 80);
        v44 = *(_QWORD *)(v60 + 96);
      }
      v49 = *(_QWORD *)(v48 + 104);
      v64 = v43;
      v65 = v63;
      *(_QWORD *)&v66 = v44;
      *((_QWORD *)&v66 + 1) = v49;
      type metadata accessor for GroupSessionPreviewHostingController();
    }
    outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v25, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v28, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v37, v11);
LABEL_10:
    outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v17, &demangling cache variable for type metadata for (UUID?, UUID?));
    goto LABEL_11;
  }
  outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v25, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v28, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  if (v35(v34, 1, v11) != 1)
    goto LABEL_10;
  outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  return swift_release();
}

uint64_t outlined init with copy of UUID?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t GroupSessionPreviewCoordinator.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t GroupSessionPreviewCoordinator.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t GroupSessionPreviewCoordinator.__allocating_init()()
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  return result;
}

uint64_t GroupSessionPreviewCoordinator.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = 0;
  return result;
}

id GroupSessionPreviewSourceView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id GroupSessionPreviewSourceView.init(frame:)(double a1, double a2, double a3, double a4)
{
  void *v4;
  objc_super v10;

  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for GroupSessionPreviewSourceView();
  return objc_msgSendSuper2(&v10, sel_initWithFrame_, a1, a2, a3, a4);
}

id GroupSessionPreviewSourceView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id GroupSessionPreviewSourceView.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for GroupSessionPreviewSourceView();
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id GroupSessionPreviewSourceView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GroupSessionPreviewSourceView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t GroupSessionPreviewHostingView.session.getter()
{
  return swift_retain();
}

uint64_t GroupSessionPreviewHostingView.style.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 68));
}

uint64_t GroupSessionPreviewHostingView.previewContent.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 72));
  swift_retain();
  return v2;
}

id GroupSessionPreviewHostingView.makeUIView(context:)()
{
  type metadata accessor for GroupSessionPreviewSourceView();
  return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

uint64_t GroupSessionPreviewHostingView.updateUIView(_:context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v12;
  uint64_t v13[6];

  MEMORY[0x2207D4924](&protocol conformance descriptor for GroupSessionPreviewHostingView<A, B, C>, a3);
  type metadata accessor for UIViewRepresentableContext();
  UIViewRepresentableContext.coordinator.getter();
  v6 = v13[5];
  v7 = *v3;
  v12 = a1;
  v8 = *(_QWORD *)(a3 + 48);
  v9 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 24);
  v10 = *(_QWORD *)(a3 + 24);
  v13[3] = swift_getAssociatedTypeWitness();
  v13[4] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(v13);
  v9(&v12, v10, v8);
  (*(void (**)(uint64_t, uint64_t *, _QWORD, _QWORD))(*(_QWORD *)v6 + 144))(v7, v13, *(uint64_t *)((char *)v3 + *(int *)(a3 + 72)), *(uint64_t *)((char *)v3 + *(int *)(a3 + 72) + 8));
  swift_release();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
}

uint64_t GroupSessionPreviewPresentationStyleConfiguration.init(sourceView:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void GroupSessionPreviewHostingView.makeCoordinator()()
{
  specialized GroupSessionPreviewHostingView.makeCoordinator()();
}

void GroupSessionPreviewHostingView.init(session:style:previewContent:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = a1;
  type metadata accessor for GroupSessionPreviewHostingView();
}

uint64_t sub_21FDB1DD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _QWORD *v8;

  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v5 + *(int *)(a1 + 68), v4, v1);
  v8 = (_QWORD *)(v5 + *(int *)(a1 + 72));
  *v8 = v3;
  v8[1] = v2;
  return result;
}

id protocol witness for UIViewRepresentable.makeUIView(context:) in conformance GroupSessionPreviewHostingView<A, B, C>()
{
  type metadata accessor for GroupSessionPreviewSourceView();
  return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

void protocol witness for UIViewRepresentable.makeCoordinator() in conformance GroupSessionPreviewHostingView<A, B, C>()
{
  specialized GroupSessionPreviewHostingView.makeCoordinator()();
}

uint64_t sub_21FDB1E68(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance GroupSessionPreviewHostingView<A, B, C>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2207D4924](&protocol conformance descriptor for GroupSessionPreviewHostingView<A, B, C>, a3);
  return static UIViewRepresentable._makeView(view:inputs:)();
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance GroupSessionPreviewHostingView<A, B, C>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2207D4924](&protocol conformance descriptor for GroupSessionPreviewHostingView<A, B, C>, a3);
  return static UIViewRepresentable._makeViewList(view:inputs:)();
}

void protocol witness for View.body.getter in conformance GroupSessionPreviewHostingView<A, B, C>(uint64_t a1)
{
  MEMORY[0x2207D4924](&protocol conformance descriptor for GroupSessionPreviewHostingView<A, B, C>, a1);
  UIViewRepresentable.body.getter();
  __break(1u);
}

id GroupSessionPreviewPresentationStyleConfiguration.sourceView.getter()
{
  id *v0;

  return *v0;
}

void GroupSessionPreviewPresentationStyleConfiguration.sourceView.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*GroupSessionPreviewPresentationStyleConfiguration.sourceView.modify())()
{
  return destructiveProjectEnumData for GroupActivitySharingResult;
}

char *PictureInPicturePreviewPresentationStyle.makePreviewPresenter(configuration:)@<X0>(void **a1@<X0>, char **a2@<X8>)
{
  void *v3;
  id v4;
  char *result;

  v3 = *a1;
  v4 = objc_allocWithZone((Class)type metadata accessor for PictureInPicturePreviewPresenter());
  result = PictureInPicturePreviewPresenter.init(sourceView:)(v3);
  *a2 = result;
  return result;
}

char *protocol witness for GroupSessionPreviewPresentationStyle.makePreviewPresenter(configuration:) in conformance PictureInPicturePreviewPresentationStyle@<X0>(void **a1@<X0>, char **a2@<X8>)
{
  void *v3;
  id v4;
  char *result;

  v3 = *a1;
  v4 = objc_allocWithZone((Class)type metadata accessor for PictureInPicturePreviewPresenter());
  result = PictureInPicturePreviewPresenter.init(sourceView:)(v3);
  *a2 = result;
  return result;
}

void GroupSessionPreviewViewModifier.body(content:)(uint64_t a1, uint64_t a2)
{
  MEMORY[0x24BDAC7A8](a1, a2);
  type metadata accessor for GroupSessionPreviewHostingView();
}

void sub_21FDB20B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  *(_QWORD *)(v14 - 176) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v17 = (uint64_t *)((char *)&a9 - v16);
  MEMORY[0x2207D4924](&protocol conformance descriptor for GroupSessionPreviewViewModifier<A, B, C>, v9);
  *(_QWORD *)(v14 - 256) = type metadata accessor for _ViewModifier_Content();
  *(_QWORD *)(v14 - 208) = MEMORY[0x2207D4924]("!h}.", a1);
  *(_QWORD *)(v14 - 192) = type metadata accessor for _BackgroundModifier();
  v18 = type metadata accessor for ModifiedContent();
  *(_QWORD *)(v14 - 184) = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18, v19);
  *(_QWORD *)(v14 - 264) = (char *)&a9 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20, v22);
  *(_QWORD *)(v14 - 200) = (char *)&a9 - v23;
  v24 = *(_QWORD *)v10;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 16))(v12, &v10[*(int *)(v9 + 68)], v11);
  *v17 = v24;
  *(_QWORD *)(v14 - 136) = *(_QWORD *)(v14 - 248);
  *(_QWORD *)(v14 - 128) = v11;
  v25 = *(_QWORD *)(v14 - 224);
  *(_QWORD *)(v14 - 120) = *(_QWORD *)(v14 - 216);
  *(_QWORD *)(v14 - 112) = v25;
  v26 = *(_QWORD *)(v14 - 240);
  *(_QWORD *)(v14 - 104) = *(_QWORD *)(v14 - 232);
  *(_QWORD *)(v14 - 96) = v26;
  type metadata accessor for GroupSessionPreviewHostingView();
}

uint64_t sub_21FDB21F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v4 + *(int *)(a1 + 68), v6, v5);
  v11 = (_QWORD *)(v4 + *(int *)(a1 + 72));
  *v11 = v7;
  v11[1] = v1;
  swift_retain();
  swift_retain();
  static Alignment.center.getter();
  v12 = MEMORY[0x2207D4924](MEMORY[0x24BDEFB78], *(_QWORD *)(v9 - 256));
  v13 = *(_QWORD *)(v9 - 264);
  View.background<A>(_:alignment:)();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 176) + 8))(v4, v2);
  v14 = MEMORY[0x2207D4924](MEMORY[0x24BDEF370], *(_QWORD *)(v9 - 192));
  *(_QWORD *)(v9 - 152) = v12;
  *(_QWORD *)(v9 - 144) = v14;
  v15 = MEMORY[0x2207D4924](MEMORY[0x24BDED308], v3, v9 - 152);
  v16 = *(_QWORD *)(v9 - 200);
  ((void (*)(uint64_t, uint64_t, uint64_t))static ViewBuilder.buildExpression<A>(_:))(v13, v3, v15);
  v17 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 184) + 8);
  v17(v13, v3);
  static ViewBuilder.buildBlock<A>(_:)(v16, v3, *(_QWORD *)(v9 - 160));
  return v17(v16, v3);
}

uint64_t protocol witness for static ViewModifier._viewListCount(inputs:body:) in conformance GroupSessionPreviewViewModifier<A, B, C>()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

void View.preview<A, B, C>(for:style:content:)(uint64_t a1, uint64_t a2)
{
  MEMORY[0x24BDAC7A8](a1, a2);
  type metadata accessor for GroupSessionPreviewViewModifier();
}

void sub_21FDB23E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  *(_QWORD *)(v17 - 184) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v19 = (uint64_t *)((char *)&a9 - v18);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 16))(v11, *(_QWORD *)(v17 - 192), v15);
  *v19 = v16;
  *(_QWORD *)(v17 - 128) = v9;
  *(_QWORD *)(v17 - 120) = v15;
  *(_QWORD *)(v17 - 112) = *(_QWORD *)(v17 - 200);
  *(_QWORD *)(v17 - 104) = v14;
  *(_QWORD *)(v17 - 96) = v13;
  *(_QWORD *)(v17 - 88) = v10;
  type metadata accessor for GroupSessionPreviewViewModifier();
}

uint64_t sub_21FDB2444(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v8;
  uint64_t v9;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v2 + *(int *)(a1 + 68), v1, v4);
  v8 = (_QWORD *)(v2 + *(int *)(a1 + 72));
  v9 = *(_QWORD *)(v6 - 168);
  *v8 = *(_QWORD *)(v6 - 176);
  v8[1] = v9;
  swift_retain();
  swift_retain();
  MEMORY[0x2207D3BF8](v2, *(_QWORD *)(v6 - 144), v5, *(_QWORD *)(v6 - 152));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 184) + 8))(v2, v5);
}

void View.preview<A, B>(for:content:)(uint64_t a1)
{
  uint64_t v2;

  lazy protocol witness table accessor for type PictureInPicturePreviewPresentationStyle and conformance PictureInPicturePreviewPresentationStyle();
  View.preview<A, B, C>(for:style:content:)(a1, v2);
}

unint64_t lazy protocol witness table accessor for type UUID and conformance UUID()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type UUID and conformance UUID;
  if (!lazy protocol witness table cache variable for type UUID and conformance UUID)
  {
    v1 = type metadata accessor for UUID();
    result = MEMORY[0x2207D4924](MEMORY[0x24BDCEA98], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID);
  }
  return result;
}

uint64_t type metadata accessor for GroupSessionPreviewSourceView()
{
  return objc_opt_self();
}

void specialized GroupSessionPreviewHostingView.makeCoordinator()()
{
  type metadata accessor for GroupSessionPreviewCoordinator();
}

uint64_t sub_21FDB25F4()
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  return result;
}

void type metadata accessor for GroupSessionPreviewHostingView()
{
  JUMPOUT(0x2207D48ACLL);
}

void type metadata accessor for GroupSessionPreviewViewModifier()
{
  JUMPOUT(0x2207D48ACLL);
}

unint64_t lazy protocol witness table accessor for type PictureInPicturePreviewPresentationStyle and conformance PictureInPicturePreviewPresentationStyle()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PictureInPicturePreviewPresentationStyle and conformance PictureInPicturePreviewPresentationStyle;
  if (!lazy protocol witness table cache variable for type PictureInPicturePreviewPresentationStyle and conformance PictureInPicturePreviewPresentationStyle)
  {
    result = MEMORY[0x2207D4924](&protocol conformance descriptor for PictureInPicturePreviewPresentationStyle, &type metadata for PictureInPicturePreviewPresentationStyle);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PictureInPicturePreviewPresentationStyle and conformance PictureInPicturePreviewPresentationStyle);
  }
  return result;
}

void base witness table accessor for View in GroupSessionPreviewHostingView<A, B, C>()
{
  JUMPOUT(0x2207D4924);
}

uint64_t associated type witness table accessor for GroupSessionPreviewPresentationStyle.PreviewPresenter : GroupSessionPreviewPresenter in PictureInPicturePreviewPresentationStyle()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21FDB268C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 120))();
  *a2 = result;
  return result;
}

uint64_t sub_21FDB26BC(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 128);
  v3 = swift_retain();
  return v2(v3);
}

uint64_t sub_21FDB26EC()
{
  return 32;
}

__n128 sub_21FDB26F8(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t type metadata completion function for GroupSessionPreviewCoordinator()
{
  return swift_initClassMetadata2();
}

void type metadata accessor for GroupSessionPreviewCoordinator()
{
  JUMPOUT(0x2207D48ACLL);
}

uint64_t method lookup function for GroupSessionPreviewCoordinator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of GroupSessionPreviewCoordinator.hostingController.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of GroupSessionPreviewCoordinator.hostingController.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of GroupSessionPreviewCoordinator.hostingController.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of GroupSessionPreviewCoordinator.updatePreview(session:presenter:previewContent:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of GroupSessionPreviewCoordinator.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t type metadata instantiation function for GroupSessionPreviewHostingView()
{
  return swift_allocateGenericValueMetadata();
}

ValueMetadata *type metadata accessor for GroupSessionPreviewPresentationStyleConfiguration()
{
  return &type metadata for GroupSessionPreviewPresentationStyleConfiguration;
}

uint64_t dispatch thunk of GroupSessionPreviewPresentationStyle.makePreviewPresenter(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

ValueMetadata *type metadata accessor for PictureInPicturePreviewPresentationStyle()
{
  return &type metadata for PictureInPicturePreviewPresentationStyle;
}

_UNKNOWN **sub_21FDB27E8()
{
  return &protocol witness table for PictureInPicturePreviewPresenter;
}

void sub_21FDB27F4()
{
  type metadata accessor for GroupSessionPreviewViewModifier();
}

uint64_t sub_21FDB2838(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[14];

  v3 = type metadata accessor for ModifiedContent();
  v5[0] = v1;
  v5[1] = MEMORY[0x2207D4924](&protocol conformance descriptor for GroupSessionPreviewViewModifier<A, B, C>, a1);
  return MEMORY[0x2207D4924](MEMORY[0x24BDED308], v3, v5);
}

void sub_21FDB288C()
{
  lazy protocol witness table accessor for type PictureInPicturePreviewPresentationStyle and conformance PictureInPicturePreviewPresentationStyle();
  type metadata accessor for GroupSessionPreviewViewModifier();
}

uint64_t sub_21FDB28D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[16];

  v3 = type metadata accessor for ModifiedContent();
  v5[0] = v1;
  v5[1] = MEMORY[0x2207D4924](&protocol conformance descriptor for GroupSessionPreviewViewModifier<A, B, C>, a1);
  return MEMORY[0x2207D4924](MEMORY[0x24BDED308], v3, v5);
}

uint64_t type metadata completion function for GroupSessionPreviewHostingView()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for GroupSessionPreviewHostingView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;

  v4 = *(_QWORD *)(a3 + 24);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64) + 7;
  v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || ((v7 + ((v6 + 8) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
  }
  else
  {
    v12 = ((unint64_t)a1 + v6 + 8) & ~v6;
    v13 = ((unint64_t)a2 + v6 + 8) & ~v6;
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    v14(v12, v13, v4);
    v15 = (_QWORD *)((v7 + v13) & 0xFFFFFFFFFFFFFFF8);
    v16 = v15[1];
    v17 = (_QWORD *)((v7 + v12) & 0xFFFFFFFFFFFFFFF8);
    *v17 = *v15;
    v17[1] = v16;
  }
  swift_retain();
  return a1;
}

uint64_t destroy for GroupSessionPreviewHostingView(uint64_t a1, uint64_t a2)
{
  swift_release();
  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((a1
                                                                                            + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)
                                                                                            + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
  return swift_release();
}

_QWORD *initializeWithCopy for GroupSessionPreviewHostingView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 24);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  swift_retain();
  v9(v7, v8, v4);
  v10 = *(_QWORD *)(v5 + 64) + 7;
  v11 = (_QWORD *)((v10 + v7) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)((v10 + v8) & 0xFFFFFFFFFFFFFFF8);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for GroupSessionPreviewHostingView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 8) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 8) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v8, v9);
  v10 = *(_QWORD *)(v6 + 64) + 7;
  v11 = (_QWORD *)((v10 + v8) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)((v10 + v9) & 0xFFFFFFFFFFFFFFF8);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *initializeWithTake for GroupSessionPreviewHostingView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = ((unint64_t)a1 + v5 + 8) & ~v5;
  v7 = ((unint64_t)a2 + v5 + 8) & ~v5;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v6, v7);
  *(_OWORD *)((*(_QWORD *)(v4 + 64) + 7 + v6) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v4 + 64) + 7 + v7) & 0xFFFFFFFFFFFFF8);
  return a1;
}

_QWORD *assignWithTake for GroupSessionPreviewHostingView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  swift_release();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 8) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 8) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v6 + 40))(v8, v9);
  *(_OWORD *)((*(_QWORD *)(v6 + 64) + 7 + v8) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v6 + 64) + 7 + v9) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupSessionPreviewHostingView(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v13;
  unint64_t v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = *(_QWORD *)(v4 + 64) + 7;
  if (v6 >= a2)
  {
    v13 = (a1 + v7 + 8) & ~v7;
    if (v5 < 0x7FFFFFFF)
    {
      v14 = *(_QWORD *)((v8 + v13) & 0xFFFFFFFFFFFFF8);
      if (v14 >= 0xFFFFFFFF)
        LODWORD(v14) = -1;
      return (v14 + 1);
    }
    else
    {
      return (*(uint64_t (**)(uint64_t))(v4 + 48))(v13);
    }
  }
  else
  {
    if (((((v8 + ((v7 + 8) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v6 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_21FDB2DD8 + 4 * byte_21FDD6A90[v11]))();
  }
}

void storeEnumTagSinglePayload for GroupSessionPreviewHostingView(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 >= a3)
  {
    v10 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7 + (((_DWORD)v7 + 8) & ~(_DWORD)v7)) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v8 = a3 - v6 + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X14 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7 + (((_DWORD)v7 + 8) & ~(_DWORD)v7)) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v11 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7 + ((v7 + 8) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v11;
  }
  __asm { BR              X10 }
}

void sub_21FDB2F70()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x21FDB2FECLL);
}

void sub_21FDB2F78(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x21FDB2F80);
  JUMPOUT(0x21FDB2FECLL);
}

void sub_21FDB2FC4()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x21FDB2FECLL);
}

void sub_21FDB2FCC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x21FDB2FECLL);
}

uint64_t sub_21FDB2FD4@<X0>(int a1@<W1>, unsigned int a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a1)
    JUMPOUT(0x21FDB2FECLL);
  if (a2 < 0x7FFFFFFF)
  {
    if ((a1 & 0x80000000) == 0)
      JUMPOUT(0x21FDB2FE8);
    JUMPOUT(0x21FDB2FE0);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))((v6 + v5 + 8) & a3);
}

uint64_t associated type witness table accessor for ViewModifier.Body : View in GroupSessionPreviewViewModifier<A, B, C>()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_21FDB3040()
{
  type metadata accessor for GroupSessionPreviewViewModifier();
}

void sub_21FDB3080(uint64_t a1)
{
  MEMORY[0x2207D4924](&protocol conformance descriptor for GroupSessionPreviewViewModifier<A, B, C>, a1);
  type metadata accessor for _ViewModifier_Content();
  type metadata accessor for GroupSessionPreviewHostingView();
}

uint64_t sub_21FDB30C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[18];

  MEMORY[0x2207D4924]("!h}.", a1);
  v2 = type metadata accessor for _BackgroundModifier();
  v3 = type metadata accessor for ModifiedContent();
  v5[0] = MEMORY[0x2207D4924](MEMORY[0x24BDEFB78], v1);
  v5[1] = MEMORY[0x2207D4924](MEMORY[0x24BDEF370], v2);
  return MEMORY[0x2207D4924](MEMORY[0x24BDED308], v3, v5);
}

uint64_t GroupSessionCanvasPreviewPresentationManagerHostConnection.__allocating_init(connection:queue:)()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  return XPCHostConnection.init(connection:queue:)();
}

id GroupSessionCanvasPreviewPresentationManagerHostConnection.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GroupSessionCanvasPreviewPresentationManagerHostConnection();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for GroupSessionCanvasPreviewPresentationManagerHostConnection()
{
  uint64_t result;

  result = type metadata singleton initialization cache for GroupSessionCanvasPreviewPresentationManagerHostConnection;
  if (!type metadata singleton initialization cache for GroupSessionCanvasPreviewPresentationManagerHostConnection)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t @objc GroupSessionCanvasPreviewPresentationManagerHostConnection.registerPreview(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v0 = type metadata accessor for UUID();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t type metadata completion function for GroupSessionCanvasPreviewPresentationManagerHostConnection()
{
  return swift_initClassMetadata2();
}

uint64_t ObjC metadata update function for GroupSessionCanvasPreviewPresentationManagerHostConnection()
{
  return type metadata accessor for GroupSessionCanvasPreviewPresentationManagerHostConnection();
}

void @objc GroupSessionCanvasPreviewPresentationManagerHostConnection.updatePreview(_:)(void *a1, uint64_t a2, void *a3)
{
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  id v8;

  v4 = a3;
  v8 = a1;
  v5 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  v7 = v6;

  outlined consume of Data._Representation(v5, v7);
}

id GroupSessionCanvasPreviewPresentationManagerClient.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id GroupSessionCanvasPreviewPresentationManagerClient.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GroupSessionCanvasPreviewPresentationManagerClient();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for GroupSessionCanvasPreviewPresentationManagerClient()
{
  uint64_t result;

  result = type metadata singleton initialization cache for GroupSessionCanvasPreviewPresentationManagerClient;
  if (!type metadata singleton initialization cache for GroupSessionCanvasPreviewPresentationManagerClient)
    return swift_getSingletonMetadata();
  return result;
}

id @objc GroupSessionCanvasPreviewPresentationManagerClient.init()(void *a1)
{
  objc_super v2;

  v2.receiver = a1;
  v2.super_class = (Class)type metadata accessor for GroupSessionCanvasPreviewPresentationManagerClient();
  return objc_msgSendSuper2(&v2, sel_init);
}

id GroupSessionCanvasPreviewPresentationManagerClient.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GroupSessionCanvasPreviewPresentationManagerClient();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata completion function for GroupSessionCanvasPreviewPresentationManagerClient()
{
  return swift_initClassMetadata2();
}

uint64_t ObjC metadata update function for GroupSessionCanvasPreviewPresentationManagerClient()
{
  return type metadata accessor for GroupSessionCanvasPreviewPresentationManagerClient();
}

uint64_t static GroupSessionCanvasPreviewPresentationManagerInterface.identity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BE19EA8];
  v3 = type metadata accessor for XPCIdentity();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

id static GroupSessionCanvasPreviewPresentationManagerInterface.hostObjectInterface.getter()
{
  return static GroupSessionCanvasPreviewPresentationManagerInterface.hostObjectInterface.getter(&protocolRef__TtP22_GroupActivities_UIKit51GroupSessionCanvasPreviewPresentationManagerXPCHost_);
}

id static GroupSessionCanvasPreviewPresentationManagerInterface.clientObjectInterface.getter()
{
  return static GroupSessionCanvasPreviewPresentationManagerInterface.hostObjectInterface.getter(&protocolRef__TtP22_GroupActivities_UIKit53GroupSessionCanvasPreviewPresentationManagerXPCClient_);
}

id static GroupSessionCanvasPreviewPresentationManagerInterface.hostObjectInterface.getter(_QWORD *a1)
{
  return objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, *a1);
}

uint64_t protocol witness for static XPCInterface.identity.getter in conformance GroupSessionCanvasPreviewPresentationManagerInterface@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BE19EA8];
  v3 = type metadata accessor for XPCIdentity();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

id protocol witness for static XPCInterface.hostObjectInterface.getter in conformance GroupSessionCanvasPreviewPresentationManagerInterface(uint64_t a1, uint64_t a2)
{
  return protocol witness for static XPCInterface.hostObjectInterface.getter in conformance GroupSessionCanvasPreviewPresentationManagerInterface(a1, a2, &protocolRef__TtP22_GroupActivities_UIKit51GroupSessionCanvasPreviewPresentationManagerXPCHost_);
}

id protocol witness for static XPCInterface.clientObjectInterface.getter in conformance GroupSessionCanvasPreviewPresentationManagerInterface(uint64_t a1, uint64_t a2)
{
  return protocol witness for static XPCInterface.hostObjectInterface.getter in conformance GroupSessionCanvasPreviewPresentationManagerInterface(a1, a2, &protocolRef__TtP22_GroupActivities_UIKit53GroupSessionCanvasPreviewPresentationManagerXPCClient_);
}

id protocol witness for static XPCInterface.hostObjectInterface.getter in conformance GroupSessionCanvasPreviewPresentationManagerInterface(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  return objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, *a3);
}

ValueMetadata *type metadata accessor for GroupSessionCanvasPreviewPresentationManagerInterface()
{
  return &type metadata for GroupSessionCanvasPreviewPresentationManagerInterface;
}

uint64_t GroupSessionPreviewUpdate.init(data:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t GroupSessionPreviewSource.groupSessionID.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 24))();
  GroupSession.id.getter();
  return swift_release();
}

uint64_t GroupSessionPreviewUpdate.data.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  outlined copy of Data._Representation(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

uint64_t GroupSessionPreviewUpdate.data.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = outlined consume of Data._Representation(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  *(_QWORD *)v2 = a1;
  *(_QWORD *)(v2 + 8) = a2;
  return result;
}

uint64_t (*GroupSessionPreviewUpdate.data.modify())()
{
  return destructiveProjectEnumData for GroupActivitySharingResult;
}

uint64_t dispatch thunk of GroupSessionPreviewSource.session.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t *initializeBufferWithCopyOfBuffer for GroupSessionPreviewUpdate(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  outlined copy of Data._Representation(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t destroy for GroupSessionPreviewUpdate(uint64_t a1)
{
  return outlined consume of Data._Representation(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t *assignWithCopy for GroupSessionPreviewUpdate(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  outlined copy of Data._Representation(*a2, v4);
  v5 = *a1;
  v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  outlined consume of Data._Representation(v5, v6);
  return a1;
}

uint64_t *assignWithTake for GroupSessionPreviewUpdate(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  outlined consume of Data._Representation(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupSessionPreviewUpdate(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 13);
  v3 = (((*(_QWORD *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for GroupSessionPreviewUpdate(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)result = a2 - 13;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GroupSessionPreviewUpdate()
{
  return &type metadata for GroupSessionPreviewUpdate;
}

uint64_t dispatch thunk of GroupSessionPreviewPresenter.registerPreviewSource<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of GroupSessionPreviewPresenter.updatePreview<A>(for:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t ReactionHistoryViewModel.__allocating_init(entries:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  ReactionHistoryViewModel.init(entries:)(a1);
  return v2;
}

uint64_t ReactionHistoryView.init(model:)()
{
  type metadata accessor for ReactionHistoryViewModel();
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ReactionHistoryViewModel, (uint64_t)&protocol conformance descriptor for ReactionHistoryViewModel);
  return ObservedObject.init(wrappedValue:)();
}

void ReactionHistoryEntry.ImageProvider.hash(into:)(uint64_t a1, void *a2, char a3)
{
  id v4;

  Hasher._combine(_:)(a3 & 1);
  v4 = a2;
  NSObject.hash(into:)();

}

uint64_t static ReactionHistoryEntry.ImageProvider.== infix(_:_:)(void *a1, char a2, void *a3, char a4)
{
  return specialized static ReactionHistoryEntry.ImageProvider.== infix(_:_:)(a1, a2 & 1, a3, a4 & 1);
}

Swift::Int ReactionHistoryEntry.ImageProvider.hashValue.getter(void *a1, char a2)
{
  id v4;

  Hasher.init(_seed:)();
  Hasher._combine(_:)(a2 & 1);
  v4 = a1;
  NSObject.hash(into:)();

  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ReactionHistoryEntry.ImageProvider()
{
  uint64_t v0;
  void *v1;
  Swift::UInt v2;
  id v3;

  v1 = *(void **)v0;
  v2 = *(unsigned __int8 *)(v0 + 8);
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v2);
  v3 = v1;
  NSObject.hash(into:)();

  return Hasher._finalize()();
}

void protocol witness for Hashable.hash(into:) in conformance ReactionHistoryEntry.ImageProvider()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)v0;
  Hasher._combine(_:)(*(unsigned __int8 *)(v0 + 8));
  v2 = v1;
  NSObject.hash(into:)();

}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ReactionHistoryEntry.ImageProvider()
{
  uint64_t v0;
  void *v1;
  Swift::UInt v2;
  id v3;

  v1 = *(void **)v0;
  v2 = *(unsigned __int8 *)(v0 + 8);
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v2);
  v3 = v1;
  NSObject.hash(into:)();

  return Hasher._finalize()();
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance ReactionHistoryEntry.ImageProvider(uint64_t a1, uint64_t a2)
{
  return specialized static ReactionHistoryEntry.ImageProvider.== infix(_:_:)(*(void **)a1, *(_BYTE *)(a1 + 8), *(void **)a2, *(_BYTE *)(a2 + 8));
}

uint64_t ReactionHistoryEntry.displayName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ReactionHistoryEntry.displayName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ReactionHistoryEntry.displayName.modify())()
{
  return destructiveProjectEnumData for GroupActivitySharingResult;
}

uint64_t ReactionHistoryEntry.reaction.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ReactionHistoryEntry.reaction.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ReactionHistoryEntry.reaction.modify())()
{
  return destructiveProjectEnumData for GroupActivitySharingResult;
}

void *ReactionHistoryEntry.avatarImageProvider.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 32);
  v2 = v1;
  return v1;
}

void ReactionHistoryEntry.avatarImageProvider.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = a1;
  *(_BYTE *)(v2 + 40) = a2 & 1;
}

uint64_t (*ReactionHistoryEntry.avatarImageProvider.modify())()
{
  return destructiveProjectEnumData for GroupActivitySharingResult;
}

uint64_t ReactionHistoryEntry.init(displayName:reaction:avatarImage:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return ReactionHistoryEntry.init(displayName:reaction:avatarImage:)(a1, a2, a3, a4, a5, 0, a6);
}

uint64_t ReactionHistoryEntry.init(displayName:reaction:avatarImageProvider:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return ReactionHistoryEntry.init(displayName:reaction:avatarImage:)(a1, a2, a3, a4, a5, 1, a6);
}

uint64_t ReactionHistoryEntry.init(displayName:reaction:avatarImage:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  *(_QWORD *)a7 = result;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = a3;
  *(_QWORD *)(a7 + 24) = a4;
  *(_QWORD *)(a7 + 32) = a5;
  *(_BYTE *)(a7 + 40) = a6;
  return result;
}

uint64_t ReactionHistoryEntry.init<A>(displayName:reaction:avatarImage:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v23 = a3;
  v24 = a4;
  v22 = a2;
  v13 = *(_QWORD *)(a6 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](a1, a2);
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD15F0]), sel_init);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a5, a6);
  v16 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a6;
  *(_QWORD *)(v17 + 24) = a7;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v17 + v16, (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a6);
  NSItemProvider.register<A>(_:)();
  swift_release();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(a5, a6);
  v19 = v22;
  *(_QWORD *)a8 = a1;
  *(_QWORD *)(a8 + 8) = v19;
  v20 = v24;
  *(_QWORD *)(a8 + 16) = v23;
  *(_QWORD *)(a8 + 24) = v20;
  *(_QWORD *)(a8 + 32) = v15;
  *(_BYTE *)(a8 + 40) = 1;
  return result;
}

void ReactionHistoryEntry.hash(into:)()
{
  uint64_t v0;
  void *v1;
  Swift::UInt v2;
  id v3;

  v1 = *(void **)(v0 + 32);
  v2 = *(unsigned __int8 *)(v0 + 40);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(v2);
  v3 = v1;
  NSObject.hash(into:)();

}

Swift::Int ReactionHistoryEntry.hashValue.getter()
{
  uint64_t v0;
  void *v1;
  Swift::UInt v2;
  id v3;

  v1 = *(void **)(v0 + 32);
  v2 = *(unsigned __int8 *)(v0 + 40);
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(v2);
  v3 = v1;
  NSObject.hash(into:)();

  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ReactionHistoryEntry()
{
  uint64_t v0;
  void *v1;
  Swift::UInt v2;
  id v3;

  v1 = *(void **)(v0 + 32);
  v2 = *(unsigned __int8 *)(v0 + 40);
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(v2);
  v3 = v1;
  NSObject.hash(into:)();

  return Hasher._finalize()();
}

uint64_t ReactionFilter.filter.getter()
{
  uint64_t v0;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<String?>);
  MEMORY[0x2207D3D84](&v2, v0);
  return v2;
}

double key path getter for ReactionFilter.filter : ReactionFilter@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<String?>);
  MEMORY[0x2207D3D84](&v4, v2);
  result = *(double *)&v4;
  *a1 = v4;
  return result;
}

uint64_t key path setter for ReactionFilter.filter : ReactionFilter()
{
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<String?>);
  return Binding.wrappedValue.setter();
}

uint64_t ReactionFilter.filter.setter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<String?>);
  return Binding.wrappedValue.setter();
}

void (*ReactionFilter.filter.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  _OWORD *v1;
  _OWORD *v3;
  __int128 v4;
  uint64_t v5;
  __int128 v6;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v4 = v1[1];
  v3[2] = *v1;
  v3[3] = v4;
  outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>((uint64_t)(v3 + 3), (uint64_t)(v3 + 4), &demangling cache variable for type metadata for String?);
  v5 = *((_QWORD *)v3 + 4);
  *((_QWORD *)v3 + 15) = *((_QWORD *)v3 + 5);
  *((_QWORD *)v3 + 14) = v5;
  v6 = v3[3];
  *v3 = v3[2];
  v3[1] = v6;
  outlined retain of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)(v3 + 7));
  swift_retain();
  outlined retain of String?((uint64_t)(v3 + 4));
  *((_QWORD *)v3 + 16) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<String?>);
  MEMORY[0x2207D3D84]();
  return ReactionFilter.filter.modify;
}

void ReactionFilter.filter.modify(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)a1 + 64;
  *(_QWORD *)(*(_QWORD *)a1 + 96) = *(_QWORD *)(*(_QWORD *)a1 + 80);
  v4 = v2[11];
  v5 = *((_OWORD *)v2 + 3);
  *(_OWORD *)v2 = *((_OWORD *)v2 + 2);
  *((_OWORD *)v2 + 1) = v5;
  v2[13] = v4;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    Binding.wrappedValue.setter();
    outlined release of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)(v2 + 14));
    swift_release();
    outlined release of String?(v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    Binding.wrappedValue.setter();
    outlined release of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)(v2 + 14));
    swift_release();
    outlined release of String?(v3);
  }
  free(v2);
}

uint64_t ReactionFilter.$filter.getter()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<String?>);
  Binding.projectedValue.getter();
  return v1;
}

uint64_t ReactionFilter.reactions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ReactionFilter.reactions.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t (*ReactionFilter.reactions.modify())()
{
  return destructiveProjectEnumData for GroupActivitySharingResult;
}

uint64_t ReactionFilter.count.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t ReactionFilter.count.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = result;
  return result;
}

uint64_t (*ReactionFilter.count.modify())()
{
  return destructiveProjectEnumData for GroupActivitySharingResult;
}

double ReactionFilter.init(filter:reactions:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X8>)
{
  __int128 v7;
  double result;
  _OWORD v9[2];
  __int128 v10;

  specialized ReactionFilter.init(filter:reactions:)(a1, a2, a3, a4, a5, v9);
  v7 = v9[1];
  *a6 = v9[0];
  a6[1] = v7;
  result = *(double *)&v10;
  a6[2] = v10;
  return result;
}

uint64_t ReactionFilter.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v26 = a1;
  v2 = type metadata accessor for ScrollIndicatorVisibility();
  v24 = *(_QWORD *)(v2 - 8);
  v25 = v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScrollView<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0>);
  v23 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.scrollIndicators(_:axes:)>>.0);
  v21 = *(_QWORD *)(v10 - 8);
  v22 = v10;
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Axis.Set.horizontal.getter();
  v27 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0);
  v14 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for HStack<TupleView<(Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>>>, ForEach<[String], String, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ClipEffect<Rectangle>>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>>>>,);
  v15 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for PartialRangeThrough<DynamicTypeSize>);
  v16 = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type HStack<TupleView<(Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>>>, ForEach<[String], String, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ClipEffect<Rectangle>>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>, &demangling cache variable for type metadata for HStack<TupleView<(Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>>>, ForEach<[String], String, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ClipEffect<Rectangle>>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>>>>,, MEMORY[0x24BDF4498]);
  v17 = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type PartialRangeThrough<DynamicTypeSize> and conformance PartialRangeThrough<A>, &demangling cache variable for type metadata for PartialRangeThrough<DynamicTypeSize>, MEMORY[0x24BEE30C8]);
  v28 = v14;
  v29 = v15;
  v30 = v16;
  v31 = v17;
  swift_getOpaqueTypeConformance2();
  v18 = ScrollView.init(_:showsIndicators:content:)();
  MEMORY[0x2207D39C4](v18);
  LOBYTE(v14) = static Axis.Set.vertical.getter();
  v19 = static Axis.Set.horizontal.getter();
  Axis.Set.init(rawValue:)();
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v14)
    Axis.Set.init(rawValue:)();
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v19)
    Axis.Set.init(rawValue:)();
  lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type ScrollView<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0> and conformance ScrollView<A>, &demangling cache variable for type metadata for ScrollView<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0>, MEMORY[0x24BDEB238]);
  View.scrollIndicators(_:axes:)();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v25);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v21 + 32))(v26, v13, v22);
}

uint64_t closure #1 in ReactionFilter.body.getter(__int128 *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t result;
  uint64_t v15;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialRangeThrough<DynamicTypeSize>);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>>>, ForEach<[String], String, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ClipEffect<Rectangle>>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>>>>,);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v9 = static VerticalAlignment.center.getter();
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 1;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>>>, ForEach<[String], String, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ClipEffect<Rectangle>>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleMod);
  closure #1 in closure #1 in ReactionFilter.body.getter(a1, &v9[*(int *)(v10 + 44)]);
  v11 = *MEMORY[0x24BDECF28];
  v12 = type metadata accessor for DynamicTypeSize();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v5, v11, v12);
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type DynamicTypeSize and conformance DynamicTypeSize, v13, MEMORY[0x24BDECF78]);
  result = dispatch thunk of static Equatable.== infix(_:_:)();
  if ((result & 1) != 0)
  {
    lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type HStack<TupleView<(Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>>>, ForEach<[String], String, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ClipEffect<Rectangle>>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>, &demangling cache variable for type metadata for HStack<TupleView<(Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>>>, ForEach<[String], String, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ClipEffect<Rectangle>>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>>>>,, MEMORY[0x24BDF4498]);
    lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type PartialRangeThrough<DynamicTypeSize> and conformance PartialRangeThrough<A>, &demangling cache variable for type metadata for PartialRangeThrough<DynamicTypeSize>, MEMORY[0x24BEE30C8]);
    View.dynamicTypeSize<A>(_:)();
    outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v5, &demangling cache variable for type metadata for PartialRangeThrough<DynamicTypeSize>);
    return outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v9, &demangling cache variable for type metadata for HStack<TupleView<(Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>>>, ForEach<[String], String, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ClipEffect<Rectangle>>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>>>>,);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t closure #1 in closure #1 in ReactionFilter.body.getter@<X0>(__int128 *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  _OWORD *v19;
  __int128 v20;
  uint64_t v21;
  _QWORD *v22;
  _OWORD *v23;
  __int128 v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  void (*v36)(char *, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  __int128 *v46;
  _QWORD *v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  _BYTE v51[16];
  _QWORD v52[2];

  v45 = a2;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEach<[String], String, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ClipEffect<Rectangle>>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>>>>);
  v44 = *(_QWORD *)(v41 - 8);
  v4 = MEMORY[0x24BDAC7A8](v41, v3);
  v43 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v38 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>>>);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = v9;
  v13 = MEMORY[0x24BDAC7A8](v9, v12);
  v42 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)&v38 - v16;
  v18 = a1[1];
  v49 = *a1;
  v50 = v18;
  v52[0] = v49;
  outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>((uint64_t)&v50, (uint64_t)v51, &demangling cache variable for type metadata for String?);
  v48 = *((_QWORD *)a1 + 4);
  v19 = (_OWORD *)swift_allocObject();
  v20 = a1[1];
  v19[1] = *a1;
  v19[2] = v20;
  v19[3] = a1[2];
  v46 = a1;
  outlined retain of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)v52);
  swift_retain();
  outlined retain of String?((uint64_t)v51);
  outlined retain of [String : Int]((uint64_t)&v48);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>>);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>> and conformance <> ModifiedContent<A, B>();
  v40 = v17;
  Button.init(action:label:)();
  v21 = swift_bridgeObjectRetain();
  v22 = specialized _copyCollectionToContiguousArray<A>(_:)(v21);
  outlined release of [String : Int]((uint64_t)&v48);
  v47 = v22;
  swift_getKeyPath();
  v23 = (_OWORD *)swift_allocObject();
  v24 = a1[1];
  v23[1] = *a1;
  v23[2] = v24;
  v23[3] = a1[2];
  outlined retain of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)v52);
  swift_retain();
  outlined retain of String?((uint64_t)v51);
  outlined retain of [String : Int]((uint64_t)&v48);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ClipEffect<Rectangle>>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>>>);
  lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type [String] and conformance [A], &demangling cache variable for type metadata for [String], MEMORY[0x24BEE12D8]);
  lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ClipEffect<Rectangle>>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>>> and conformance Button<A>, &demangling cache variable for type metadata for Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ClipEffect<Rectangle>>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>>>, MEMORY[0x24BDF43B0]);
  v39 = v8;
  ForEach<>.init(_:id:content:)();
  v25 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v26 = v42;
  v25(v42, v17, v11);
  v27 = v43;
  v28 = v44;
  v29 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
  v30 = v8;
  v31 = v41;
  v29(v43, v30, v41);
  v32 = v45;
  v25(v45, v26, v11);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>>>, ForEach<[String], String, Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ClipEffect<Rectangle>>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>>>>, Spacer));
  v29(&v32[*(int *)(v33 + 48)], v27, v31);
  v34 = &v32[*(int *)(v33 + 64)];
  *(_QWORD *)v34 = 0;
  v34[8] = 1;
  v35 = *(void (**)(char *, uint64_t))(v28 + 8);
  v35(v39, v31);
  v36 = *(void (**)(char *, uint64_t))(v10 + 8);
  v36(v40, v11);
  v35(v27, v31);
  return ((uint64_t (*)(char *, uint64_t))v36)(v26, v11);
}

uint64_t closure #2 in closure #1 in closure #1 in ReactionFilter.body.getter@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;
  float v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v54[2];
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  int v61;
  int v62;
  uint64_t KeyPath;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _BYTE v79[7];
  char v80;
  _BYTE v81[7];
  char v82;
  _BYTE v83[7];
  _DWORD v84[2];
  _DWORD v85[2];
  _DWORD v86[2];
  _DWORD v87[2];
  __int128 v88;
  __int128 v89;
  _QWORD v90[2];
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unsigned __int8 v97;
  uint64_t v98;
  unsigned __int8 v99;
  _BYTE v100[7];
  _BYTE v101[7];
  char v102;
  char v103;
  char v104;

  v71 = a2;
  v70 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>);
  MEMORY[0x24BDAC7A8](v70, v3);
  v78 = (uint64_t)v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Capsule();
  MEMORY[0x24BDAC7A8](v5, v6);
  v77 = (uint64_t)v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Font.Design?);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Font.TextStyle();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>>);
  MEMORY[0x24BDAC7A8](v68, v17);
  v19 = (char *)v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = static VerticalAlignment.center.getter();
  closure #1 in closure #2 in closure #1 in closure #1 in ReactionFilter.body.getter((uint64_t)&v91);
  v74 = v91;
  v73 = v92;
  v20 = v93;
  v61 = v93;
  v65 = v94;
  v67 = v95;
  v66 = v96;
  v21 = v97;
  v62 = v97;
  v75 = v98;
  v69 = static Color.primary.getter();
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v16, *MEMORY[0x24BDF18E8], v12);
  v22 = type metadata accessor for Font.Design();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v11, 1, 1, v22);
  static Font.Weight.regular.getter();
  v76 = static Font.system(_:design:weight:)();
  outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v11, &demangling cache variable for type metadata for Font.Design?);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  v72 = swift_getKeyPath();
  v60 = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v104 = 0;
  v103 = v20;
  v102 = v21;
  v99 = 0;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v56 = v91;
  v31 = v92;
  v57 = v93;
  LOBYTE(v12) = v94;
  v59 = v95;
  v58 = v96;
  v32 = static Color.gray.getter();
  v33 = a1[1];
  v88 = *a1;
  v89 = v33;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<String?>);
  MEMORY[0x2207D3D84](v90, v34);
  v35 = v90[1];
  swift_bridgeObjectRelease();
  v36 = v104;
  v87[0] = v88;
  *(_DWORD *)((char *)v87 + 3) = *(_DWORD *)((char *)&v88 + 3);
  v37 = v103;
  v86[0] = v90[0];
  *(_DWORD *)((char *)v86 + 3) = *(_DWORD *)((char *)v90 + 3);
  v38 = v102;
  *(_DWORD *)((char *)v85 + 3) = *(_DWORD *)&v101[3];
  v85[0] = *(_DWORD *)v101;
  *(_DWORD *)((char *)v84 + 3) = *(_DWORD *)&v100[3];
  v84[0] = *(_DWORD *)v100;
  v55 = v99;
  v82 = v31;
  v80 = v12;
  if (v35)
    v39 = 0.0;
  else
    v39 = 0.9;
  v40 = *MEMORY[0x24BDEEB68];
  v41 = type metadata accessor for RoundedCornerStyle();
  v42 = v77;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 104))(v77, v40, v41);
  v43 = v70;
  v44 = v78;
  outlined init with copy of Capsule(v42, v78 + *(int *)(v70 + 52));
  *(_QWORD *)v44 = v32;
  *(_QWORD *)(v44 + 8) = 3;
  v54[1] = v32;
  *(float *)(v44 + 16) = v39;
  *(_WORD *)(v44 + *(int *)(v43 + 56)) = 256;
  outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>(v44, (uint64_t)&v19[*(int *)(v68 + 36)], &demangling cache variable for type metadata for _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>);
  *(_QWORD *)v19 = v64;
  *((_QWORD *)v19 + 1) = 0x4010000000000000;
  v19[16] = v36;
  *(_DWORD *)(v19 + 17) = v87[0];
  *((_DWORD *)v19 + 5) = *(_DWORD *)((char *)v87 + 3);
  v45 = v74;
  v46 = v73;
  *((_QWORD *)v19 + 3) = v74;
  *((_QWORD *)v19 + 4) = v46;
  v19[40] = v37;
  *(_DWORD *)(v19 + 41) = v86[0];
  *((_DWORD *)v19 + 11) = *(_DWORD *)((char *)v86 + 3);
  v47 = v67;
  *((_QWORD *)v19 + 6) = v65;
  *((_QWORD *)v19 + 7) = v47;
  v48 = v66;
  *((_QWORD *)v19 + 8) = v66;
  v19[72] = v38;
  *((_DWORD *)v19 + 19) = *(_DWORD *)((char *)v85 + 3);
  *(_DWORD *)(v19 + 73) = v85[0];
  v49 = KeyPath;
  *((_QWORD *)v19 + 10) = v75;
  *((_QWORD *)v19 + 11) = v49;
  v50 = v72;
  *((_QWORD *)v19 + 12) = v69;
  *((_QWORD *)v19 + 13) = v50;
  *((_QWORD *)v19 + 14) = v76;
  v19[120] = v60;
  *((_DWORD *)v19 + 31) = *(_DWORD *)((char *)v84 + 3);
  *(_DWORD *)(v19 + 121) = v84[0];
  *((_QWORD *)v19 + 16) = v24;
  *((_QWORD *)v19 + 17) = v26;
  *((_QWORD *)v19 + 18) = v28;
  *((_QWORD *)v19 + 19) = v30;
  v19[160] = v55;
  *(_DWORD *)(v19 + 161) = *(_DWORD *)v83;
  *((_DWORD *)v19 + 41) = *(_DWORD *)&v83[3];
  *((_QWORD *)v19 + 21) = v56;
  v19[176] = v82;
  *(_DWORD *)(v19 + 177) = *(_DWORD *)v81;
  *((_DWORD *)v19 + 45) = *(_DWORD *)&v81[3];
  *((_QWORD *)v19 + 23) = v57;
  v19[192] = v80;
  *((_DWORD *)v19 + 49) = *(_DWORD *)&v79[3];
  *(_DWORD *)(v19 + 193) = *(_DWORD *)v79;
  v51 = v58;
  *((_QWORD *)v19 + 25) = v59;
  *((_QWORD *)v19 + 26) = v51;
  swift_retain();
  v52 = v45;
  LOBYTE(v45) = v61;
  outlined copy of Text.Storage(v52, v46, v61);
  swift_bridgeObjectRetain();
  LOBYTE(v46) = v62;
  outlined copy of Text.Storage(v47, v48, v62);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined destroy of PartialRangeThrough<DynamicTypeSize>(v78, &demangling cache variable for type metadata for _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>);
  outlined destroy of Capsule(v77);
  swift_release();
  outlined consume of Text.Storage(v74, v73, v45);
  swift_bridgeObjectRelease();
  outlined consume of Text.Storage(v47, v48, v46);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>((uint64_t)v19, v71, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>>);
}

uint64_t closure #1 in closure #2 in closure #1 in closure #1 in ReactionFilter.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  Swift::String v11;
  char v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;

  v2 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  MEMORY[0x24BDAC7A8](v2, v3);
  LocalizedStringKey.init(stringLiteral:)();
  v4 = Text.init(_:tableName:bundle:comment:)();
  v6 = v5;
  v8 = v7;
  v10 = v9;
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v11);
  v12 = v8 & 1;
  LocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:specifier:)();
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v13);
  LocalizedStringKey.init(stringInterpolation:)();
  v14 = Text.init(_:tableName:bundle:comment:)();
  v16 = v15;
  v18 = v17 & 1;
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v12;
  *(_QWORD *)(a1 + 24) = v10;
  *(_QWORD *)(a1 + 32) = v14;
  *(_QWORD *)(a1 + 40) = v15;
  *(_BYTE *)(a1 + 48) = v17 & 1;
  *(_QWORD *)(a1 + 56) = v19;
  outlined copy of Text.Storage(v4, v6, v12);
  swift_bridgeObjectRetain();
  outlined copy of Text.Storage(v14, v16, v18);
  swift_bridgeObjectRetain();
  outlined consume of Text.Storage(v14, v16, v18);
  swift_bridgeObjectRelease();
  outlined consume of Text.Storage(v4, v6, v12);
  return swift_bridgeObjectRelease();
}

uint64_t closure #3 in closure #1 in closure #1 in ReactionFilter.body.getter(uint64_t *a1, __int128 *a2)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[16];
  uint64_t v13;

  v4 = *a1;
  v3 = a1[1];
  v5 = a2[1];
  v10 = *a2;
  v11 = v5;
  v13 = v10;
  outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>((uint64_t)&v11, (uint64_t)v12, &demangling cache variable for type metadata for String?);
  v9 = *((_QWORD *)a2 + 4);
  v6 = swift_allocObject();
  v7 = a2[1];
  *(_OWORD *)(v6 + 16) = *a2;
  *(_OWORD *)(v6 + 32) = v7;
  *(_OWORD *)(v6 + 48) = a2[2];
  *(_QWORD *)(v6 + 64) = v4;
  *(_QWORD *)(v6 + 72) = v3;
  outlined retain of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)&v13);
  swift_retain();
  outlined retain of String?((uint64_t)v12);
  outlined retain of [String : Int]((uint64_t)&v9);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ClipEffect<Rectangle>>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>>);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ClipEffect<Rectangle>>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>> and conformance <> ModifiedContent<A, B>();
  return Button.init(action:label:)();
}

uint64_t closure #1 in closure #3 in closure #1 in closure #1 in ReactionFilter.body.getter()
{
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<String?>);
  return Binding.wrappedValue.setter();
}

uint64_t closure #2 in closure #3 in closure #1 in closure #1 in ReactionFilter.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, _QWORD, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _OWORD *v86;
  __int128 v87;
  uint64_t v88;
  __int128 v89;
  uint64_t v90;
  char v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(uint64_t, _QWORD, uint64_t);
  uint64_t v102;
  unsigned int v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t KeyPath;
  uint64_t v114;
  __int128 v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(char *, uint64_t);
  void (*v119)(char *, uint64_t, uint64_t, uint64_t);
  char *v120;
  void (*v121)(char *);
  unsigned int v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  __int128 *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  __int128 v138;
  __int128 v139;
  uint64_t v140;
  uint64_t v141;
  __int128 v142;
  _BYTE v143[32];
  char v144;
  uint64_t v145;
  char v146;
  _BYTE v147[7];
  _BYTE v148[7];
  char v149;
  _BYTE v150[7];
  char v151;
  _BYTE v152[7];
  char v153;

  v4 = (uint64_t)a3;
  v133 = a3;
  v106 = a4;
  v7 = type metadata accessor for Capsule();
  MEMORY[0x24BDAC7A8](v7, v8);
  v120 = (char *)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ShapeView<Capsule, Color>);
  MEMORY[0x24BDAC7A8](v128, v10);
  v12 = (char *)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _BackgroundModifier<_ShapeView<Capsule, Color>>);
  MEMORY[0x24BDAC7A8](v127, v13);
  v125 = (uint64_t)&v99 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Font.Design?);
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Font.TextStyle();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19, v21);
  v23 = (char *)&v99 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>);
  MEMORY[0x24BDAC7A8](v123, v24);
  v26 = (char *)&v99 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>);
  MEMORY[0x24BDAC7A8](v129, v27);
  v126 = (uint64_t)&v99 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>);
  MEMORY[0x24BDAC7A8](v132, v29);
  v130 = (uint64_t)&v99 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>);
  MEMORY[0x24BDAC7A8](v134, v31);
  v131 = (uint64_t)&v99 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>);
  MEMORY[0x24BDAC7A8](v136, v33);
  v135 = (uint64_t)&v99 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ClipEffect<Rectangle>>);
  MEMORY[0x24BDAC7A8](v137, v35);
  v124 = (char *)&v99 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ClipEffect<Rectangle>>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>>);
  MEMORY[0x24BDAC7A8](v104, v37);
  v105 = (char *)&v99 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = static VerticalAlignment.center.getter();
  v99 = a1;
  v100 = a2;
  closure #1 in closure #2 in closure #3 in closure #1 in closure #1 in ReactionFilter.body.getter(a1, a2, v4, (uint64_t)&v142);
  v110 = *((_QWORD *)&v142 + 1);
  v111 = v142;
  LOBYTE(a2) = v143[0];
  v115 = *(_OWORD *)&v143[8];
  v114 = *(_QWORD *)&v143[24];
  LOBYTE(v4) = v144;
  v117 = v145;
  v116 = static Color.primary.getter();
  KeyPath = swift_getKeyPath();
  v122 = *MEMORY[0x24BDF18E8];
  v121 = *(void (**)(char *))(v20 + 104);
  v109 = v19;
  v121(v23);
  v39 = type metadata accessor for Font.Design();
  v119 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56);
  v119(v18, 1, 1, v39);
  static Font.Weight.regular.getter();
  v108 = static Font.system(_:design:weight:)();
  outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v18, &demangling cache variable for type metadata for Font.Design?);
  v118 = *(void (**)(char *, uint64_t))(v20 + 8);
  v118(v23, v19);
  v107 = swift_getKeyPath();
  LOBYTE(v20) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  v41 = v40;
  v43 = v42;
  v45 = v44;
  v47 = v46;
  v153 = 0;
  v151 = a2;
  v149 = v4;
  v146 = 0;
  v48 = static Alignment.center.getter();
  v50 = v49;
  v51 = *MEMORY[0x24BDEEB68];
  v52 = type metadata accessor for RoundedCornerStyle();
  v53 = *(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v52 - 8) + 104);
  v54 = (uint64_t)v120;
  v103 = v51;
  v102 = v52;
  v101 = v53;
  ((void (*)(char *, uint64_t))v53)(v120, v51);
  v55 = static Color.clear.getter();
  outlined init with copy of Capsule(v54, (uint64_t)v12);
  v56 = v128;
  *(_QWORD *)&v12[*(int *)(v128 + 52)] = v55;
  v57 = v54;
  *(_WORD *)&v12[*(int *)(v56 + 56)] = 256;
  outlined destroy of Capsule(v54);
  v58 = (uint64_t)v12;
  v59 = v125;
  outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>(v58, v125, &demangling cache variable for type metadata for _ShapeView<Capsule, Color>);
  v60 = (uint64_t *)(v59 + *(int *)(v127 + 36));
  *v60 = v48;
  v60[1] = v50;
  outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>(v59, (uint64_t)&v26[*(int *)(v123 + 36)], &demangling cache variable for type metadata for _BackgroundModifier<_ShapeView<Capsule, Color>>);
  *(_QWORD *)v26 = v112;
  *((_QWORD *)v26 + 1) = 0x4010000000000000;
  v26[16] = v153;
  *(_DWORD *)(v26 + 17) = *(_DWORD *)v152;
  *((_DWORD *)v26 + 5) = *(_DWORD *)&v152[3];
  v61 = v110;
  *((_QWORD *)v26 + 3) = v111;
  *((_QWORD *)v26 + 4) = v61;
  v26[40] = v151;
  *(_DWORD *)(v26 + 41) = *(_DWORD *)v150;
  *((_DWORD *)v26 + 11) = *(_DWORD *)&v150[3];
  *((_OWORD *)v26 + 3) = v115;
  *((_QWORD *)v26 + 8) = v114;
  v26[72] = v149;
  *(_DWORD *)(v26 + 73) = *(_DWORD *)v148;
  *((_DWORD *)v26 + 19) = *(_DWORD *)&v148[3];
  v62 = KeyPath;
  *((_QWORD *)v26 + 10) = v117;
  *((_QWORD *)v26 + 11) = v62;
  v63 = v107;
  *((_QWORD *)v26 + 12) = v116;
  *((_QWORD *)v26 + 13) = v63;
  *((_QWORD *)v26 + 14) = v108;
  v26[120] = v20;
  *(_DWORD *)(v26 + 121) = *(_DWORD *)v147;
  *((_DWORD *)v26 + 31) = *(_DWORD *)&v147[3];
  *((_QWORD *)v26 + 16) = v41;
  *((_QWORD *)v26 + 17) = v43;
  *((_QWORD *)v26 + 18) = v45;
  *((_QWORD *)v26 + 19) = v47;
  v26[160] = v146;
  outlined destroy of PartialRangeThrough<DynamicTypeSize>(v59, &demangling cache variable for type metadata for _BackgroundModifier<_ShapeView<Capsule, Color>>);
  v64 = static Color.black.getter();
  v65 = swift_getKeyPath();
  v66 = v126;
  outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>((uint64_t)v26, v126, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>);
  v67 = (uint64_t *)(v66 + *(int *)(v129 + 36));
  *v67 = v65;
  v67[1] = v64;
  outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v26, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>);
  v68 = v109;
  ((void (*)(char *, _QWORD, uint64_t))v121)(v23, v122, v109);
  v119(v18, 1, 1, v39);
  static Font.Weight.regular.getter();
  v69 = static Font.system(_:design:weight:)();
  outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v18, &demangling cache variable for type metadata for Font.Design?);
  v70 = v23;
  v71 = (uint64_t)v124;
  v118(v70, v68);
  v72 = swift_getKeyPath();
  v73 = v130;
  outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>(v66, v130, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>);
  v74 = (uint64_t *)(v73 + *(int *)(v132 + 36));
  *v74 = v72;
  v74[1] = v69;
  outlined destroy of PartialRangeThrough<DynamicTypeSize>(v66, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>);
  LOBYTE(v69) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  v76 = v75;
  v78 = v77;
  v80 = v79;
  v82 = v81;
  v83 = v131;
  outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>(v73, v131, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>);
  v84 = v83 + *(int *)(v134 + 36);
  *(_BYTE *)v84 = v69;
  *(_QWORD *)(v84 + 8) = v76;
  *(_QWORD *)(v84 + 16) = v78;
  *(_QWORD *)(v84 + 24) = v80;
  *(_QWORD *)(v84 + 32) = v82;
  *(_BYTE *)(v84 + 40) = 0;
  outlined destroy of PartialRangeThrough<DynamicTypeSize>(v73, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v85 = v135;
  outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>(v83, v135, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>);
  v86 = (_OWORD *)(v85 + *(int *)(v136 + 36));
  v87 = *(_OWORD *)v143;
  *v86 = v142;
  v86[1] = v87;
  v86[2] = *(_OWORD *)&v143[16];
  outlined destroy of PartialRangeThrough<DynamicTypeSize>(v83, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>);
  outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>(v85, v71, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>);
  *(_WORD *)(v71 + *(int *)(v137 + 36)) = 0;
  outlined destroy of PartialRangeThrough<DynamicTypeSize>(v85, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>);
  v88 = static Color.gray.getter();
  v89 = v133[1];
  v138 = *v133;
  v139 = v89;
  v90 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<String?>);
  MEMORY[0x2207D3D84](&v140, v90);
  if (!v141)
    goto LABEL_7;
  if (v140 != v99 || v141 != v100)
  {
    v91 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v91 & 1) != 0)
      goto LABEL_6;
LABEL_7:
    v92 = 0;
    goto LABEL_8;
  }
  swift_bridgeObjectRelease();
LABEL_6:
  v92 = 1063675494;
LABEL_8:
  v93 = v106;
  v94 = (uint64_t)v105;
  v95 = v104;
  v101(v57, v103, v102);
  v96 = v94 + *(int *)(v95 + 36);
  v97 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>);
  outlined init with copy of Capsule(v57, v96 + *(int *)(v97 + 52));
  *(_QWORD *)v96 = v88;
  *(_QWORD *)(v96 + 8) = 3;
  *(_DWORD *)(v96 + 16) = v92;
  *(_WORD *)(v96 + *(int *)(v97 + 56)) = 256;
  outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>(v71, v94, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ClipEffect<Rectangle>>);
  outlined destroy of Capsule(v57);
  outlined destroy of PartialRangeThrough<DynamicTypeSize>(v71, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ClipEffect<Rectangle>>);
  return outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>(v94, v93, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ClipEffect<Rectangle>>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>>);
}

uint64_t closure #1 in closure #2 in closure #3 in closure #1 in closure #1 in ReactionFilter.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  Swift::String v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  char v27;
  uint64_t v29;
  uint64_t v30;

  v7 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  MEMORY[0x24BDAC7A8](v7, v8);
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  v9 = Text.init<A>(_:)();
  v11 = v10;
  v13 = v12 & 1;
  static Font.title2.getter();
  v29 = Text.font(_:)();
  v30 = v14;
  v16 = v15;
  v27 = v17;
  swift_release();
  outlined consume of Text.Storage(v9, v11, v13);
  swift_bridgeObjectRelease();
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v18);
  if (*(_QWORD *)(*(_QWORD *)(a3 + 32) + 16))
  {
    swift_bridgeObjectRetain();
    specialized __RawDictionaryStorage.find<A>(_:)(a1, a2);
    swift_bridgeObjectRelease();
  }
  LocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:specifier:)();
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v19);
  LocalizedStringKey.init(stringInterpolation:)();
  v20 = Text.init(_:tableName:bundle:comment:)();
  v22 = v21;
  v24 = v23 & 1;
  *(_QWORD *)a4 = v29;
  *(_QWORD *)(a4 + 8) = v16;
  *(_BYTE *)(a4 + 16) = v27 & 1;
  *(_QWORD *)(a4 + 24) = v30;
  *(_QWORD *)(a4 + 32) = v20;
  *(_QWORD *)(a4 + 40) = v21;
  *(_BYTE *)(a4 + 48) = v23 & 1;
  *(_QWORD *)(a4 + 56) = v25;
  outlined copy of Text.Storage(v29, v16, v27 & 1);
  swift_bridgeObjectRetain();
  outlined copy of Text.Storage(v20, v22, v24);
  swift_bridgeObjectRetain();
  outlined consume of Text.Storage(v20, v22, v24);
  swift_bridgeObjectRelease();
  outlined consume of Text.Storage(v29, v16, v27 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t protocol witness for View.body.getter in conformance ReactionFilter@<X0>(uint64_t a1@<X8>)
{
  return ReactionFilter.body.getter(a1);
}

uint64_t ReactionHistoryEntryAvatarImage.LoadingState.task.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_release();
  *v1 = a1;
  return result;
}

uint64_t (*ReactionHistoryEntryAvatarImage.LoadingState.task.modify())()
{
  return destructiveProjectEnumData for GroupActivitySharingResult;
}

void *ReactionHistoryEntryAvatarImage.LoadingState.imageProvider.getter(uint64_t a1, void *a2, char a3)
{
  outlined copy of ReactionHistoryEntry.ImageProvider?(a2, a3);
  return a2;
}

void ReactionHistoryEntryAvatarImage.LoadingState.imageProvider.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  outlined consume of ReactionHistoryEntry.ImageProvider?(*(id *)(v2 + 8), *(_BYTE *)(v2 + 16));
  *(_QWORD *)(v2 + 8) = a1;
  *(_BYTE *)(v2 + 16) = a2;
}

uint64_t (*ReactionHistoryEntryAvatarImage.LoadingState.imageProvider.modify())()
{
  return destructiveProjectEnumData for GroupActivitySharingResult;
}

unint64_t ReactionHistoryEntryAvatarImage.LoadingState.phase.getter(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  outlined copy of ReactionHistoryEntryAvatarImage.ImagePhase(a4);
  return a4;
}

void ReactionHistoryEntryAvatarImage.LoadingState.phase.setter(uint64_t a1)
{
  uint64_t v1;

  outlined consume of ReactionHistoryEntryAvatarImage.ImagePhase(*(_QWORD *)(v1 + 24));
  *(_QWORD *)(v1 + 24) = a1;
}

uint64_t (*ReactionHistoryEntryAvatarImage.LoadingState.phase.modify())()
{
  return destructiveProjectEnumData for GroupActivitySharingResult;
}

uint64_t ReactionHistoryEntryAvatarImage.LoadingState.init()()
{
  return 0;
}

unint64_t default argument 2 of ReactionHistoryEntryAvatarImage.LoadingState.init(task:imageProvider:phase:)()
{
  return 0x8000000000000000;
}

id ReactionHistoryEntryAvatarImage.imageProvider.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

void ReactionHistoryEntryAvatarImage.imageProvider.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = a1;
  *(_BYTE *)(v2 + 8) = a2 & 1;
}

uint64_t (*ReactionHistoryEntryAvatarImage.imageProvider.modify())()
{
  return destructiveProjectEnumData for GroupActivitySharingResult;
}

uint64_t ReactionHistoryEntryAvatarImage.transaction.getter()
{
  return swift_retain();
}

uint64_t ReactionHistoryEntryAvatarImage.transaction.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*ReactionHistoryEntryAvatarImage.transaction.modify())()
{
  return destructiveProjectEnumData for GroupActivitySharingResult;
}

uint64_t ReactionHistoryEntryAvatarImage.loadingState.getter()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ReactionHistoryEntryAvatarImage.LoadingState>);
  State.wrappedValue.getter();
  return v1;
}

double key path getter for ReactionHistoryEntryAvatarImage.loadingState : ReactionHistoryEntryAvatarImage@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  char v4;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ReactionHistoryEntryAvatarImage.LoadingState>);
  State.wrappedValue.getter();
  result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_BYTE *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  return result;
}

uint64_t key path setter for ReactionHistoryEntryAvatarImage.loadingState : ReactionHistoryEntryAvatarImage(uint64_t a1)
{
  void *v1;
  unint64_t v2;
  char v3;

  v1 = *(void **)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_BYTE *)(a1 + 16);
  swift_retain();
  outlined copy of ReactionHistoryEntry.ImageProvider?(v1, v3);
  outlined copy of ReactionHistoryEntryAvatarImage.ImagePhase(v2);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ReactionHistoryEntryAvatarImage.LoadingState>);
  return State.wrappedValue.setter();
}

uint64_t ReactionHistoryEntryAvatarImage.loadingState.setter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ReactionHistoryEntryAvatarImage.LoadingState>);
  return State.wrappedValue.setter();
}

void (*ReactionHistoryEntryAvatarImage.loadingState.modify(_QWORD *a1))(char **a1, char a2)
{
  uint64_t v1;
  char *v3;
  __int128 v4;
  __int128 v5;

  v3 = (char *)malloc(0xE0uLL);
  *a1 = v3;
  *(_OWORD *)(v3 + 40) = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(v3 + 56) = *(_OWORD *)(v1 + 40);
  *((_QWORD *)v3 + 9) = *(_QWORD *)(v1 + 56);
  outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>((uint64_t)(v3 + 72), (uint64_t)(v3 + 208), &demangling cache variable for type metadata for AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?);
  v4 = *(_OWORD *)(v3 + 56);
  *((_OWORD *)v3 + 5) = *(_OWORD *)(v3 + 40);
  *((_OWORD *)v3 + 6) = v4;
  outlined init with take of ReactionHistoryEntryAvatarImage.ImagePhase((_QWORD *)v3 + 13, (_QWORD *)v3 + 24);
  outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>((uint64_t)(v3 + 88), (uint64_t)(v3 + 176), &demangling cache variable for type metadata for ReactionHistoryEntry.ImageProvider?);
  outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>((uint64_t)(v3 + 80), (uint64_t)(v3 + 200), &demangling cache variable for type metadata for Task<(), Error>?);
  v5 = *(_OWORD *)(v3 + 56);
  *(_OWORD *)v3 = *(_OWORD *)(v3 + 40);
  *((_OWORD *)v3 + 1) = v5;
  *((_QWORD *)v3 + 4) = *((_QWORD *)v3 + 9);
  outlined retain of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)(v3 + 200));
  outlined retain of ReactionHistoryEntry.ImageProvider?((uint64_t)(v3 + 176));
  outlined retain of ReactionHistoryEntryAvatarImage.ImagePhase((unint64_t *)v3 + 24);
  outlined retain of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)(v3 + 208));
  *((_QWORD *)v3 + 27) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ReactionHistoryEntryAvatarImage.LoadingState>);
  State.wrappedValue.getter();
  return ReactionHistoryEntryAvatarImage.loadingState.modify;
}

void ReactionHistoryEntryAvatarImage.loadingState.modify(char **a1, char a2)
{
  char *v2;
  void *v3;
  char v4;
  unint64_t v5;
  __int128 v6;
  void *v7;
  unint64_t v8;
  char v9;

  v2 = *a1;
  *((_QWORD *)v2 + 18) = *((_QWORD *)*a1 + 14);
  v3 = (void *)*((_QWORD *)v2 + 15);
  v4 = v2[128];
  v5 = *((_QWORD *)v2 + 17);
  v6 = *(_OWORD *)(v2 + 56);
  *(_OWORD *)v2 = *(_OWORD *)(v2 + 40);
  *((_OWORD *)v2 + 1) = v6;
  *((_QWORD *)v2 + 4) = *((_QWORD *)v2 + 9);
  *((_QWORD *)v2 + 19) = v3;
  v2[160] = v4;
  *((_QWORD *)v2 + 21) = v5;
  if ((a2 & 1) != 0)
  {
    swift_retain();
    outlined copy of ReactionHistoryEntry.ImageProvider?(v3, v4);
    outlined copy of ReactionHistoryEntryAvatarImage.ImagePhase(v5);
    State.wrappedValue.setter();
    outlined release of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)(v2 + 200));
    outlined release of ReactionHistoryEntry.ImageProvider?((uint64_t)(v2 + 176));
    outlined release of ReactionHistoryEntryAvatarImage.ImagePhase((unint64_t *)v2 + 24);
    outlined release of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)(v2 + 208));
    v7 = (void *)*((_QWORD *)v2 + 15);
    v8 = *((_QWORD *)v2 + 17);
    v9 = v2[128];
    swift_release();
    outlined consume of ReactionHistoryEntry.ImageProvider?(v7, v9);
    outlined consume of ReactionHistoryEntryAvatarImage.ImagePhase(v8);
  }
  else
  {
    State.wrappedValue.setter();
    outlined release of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)(v2 + 200));
    outlined release of ReactionHistoryEntry.ImageProvider?((uint64_t)(v2 + 176));
    outlined release of ReactionHistoryEntryAvatarImage.ImagePhase((unint64_t *)v2 + 24);
    outlined release of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)(v2 + 208));
  }
  free(v2);
}

__n128 ReactionHistoryEntryAvatarImage.$loadingState.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 result;
  unint64_t v3;
  unint64_t v4;
  __n128 v5;
  unsigned __int8 v6;
  unint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ReactionHistoryEntryAvatarImage.LoadingState>);
  State.projectedValue.getter();
  result = v5;
  a1->n128_u64[0] = v3;
  a1->n128_u64[1] = v4;
  a1[1] = v5;
  a1[2].n128_u8[0] = v6;
  a1[2].n128_u64[1] = v7;
  return result;
}

double ReactionHistoryEntryAvatarImage.content.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 v8;
  void *v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  double result;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  __int128 v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[24];
  uint64_t v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  char v44;
  unint64_t v45;
  unsigned __int8 v46;
  uint64_t v47;
  unsigned __int8 v48;
  __int128 v49;

  v3 = type metadata accessor for Image.ResizingMode();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_OWORD *)(v1 + 40);
  v38 = *(_OWORD *)(v1 + 24);
  v39 = v8;
  *(_QWORD *)&v40 = *(_QWORD *)(v1 + 56);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ReactionHistoryEntryAvatarImage.LoadingState>);
  State.wrappedValue.getter();
  v9 = (void *)v30;
  v10 = v31;
  v11 = BYTE8(v30);
  outlined copy of ReactionHistoryEntryAvatarImage.ImagePhase(v31);
  swift_release();
  outlined consume of ReactionHistoryEntry.ImageProvider?(v9, v11);
  outlined consume of ReactionHistoryEntryAvatarImage.ImagePhase(v10);
  if (v10 >> 62)
  {
    outlined consume of ReactionHistoryEntryAvatarImage.ImagePhase(v10);
    v20 = objc_msgSend((id)objc_opt_self(), sel_quaternaryLabelColor);
    v21 = MEMORY[0x2207D3C70](v20);
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    v29 = v21;
    *(_QWORD *)&v30 = 256;
    *((_QWORD *)&v30 + 1) = v45;
    v31 = v46;
    v32 = v47;
    v33 = v48;
    *(_OWORD *)v34 = v49;
    v35 = 0;
    v36 = 0;
    *(_QWORD *)&v34[16] = 0;
    v37 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _MaskAlignmentEffect<Circle>>);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _MaskAlignmentEffect<Circle>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v7, *MEMORY[0x24BDF3FD0], v3);
    v12 = Image.resizable(capInsets:resizingMode:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    v13 = v45;
    v14 = v46;
    v15 = v47;
    v16 = v48;
    v17 = v49;
    v18 = static Alignment.center.getter();
    v29 = v12;
    v30 = xmmword_21FDD6F90;
    v31 = v13;
    v32 = v14;
    v33 = v15;
    *(_QWORD *)v34 = v16;
    *(_OWORD *)&v34[8] = v17;
    v35 = v18;
    v36 = v19;
    v37 = 0;
    swift_retain_n();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _MaskAlignmentEffect<Circle>>);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _MaskAlignmentEffect<Circle>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    outlined consume of ReactionHistoryEntryAvatarImage.ImagePhase(v10);
    swift_release_n();
  }
  result = *(double *)&v38;
  v23 = v39;
  v24 = v40;
  v25 = v41;
  v26 = v42;
  v27 = v43;
  v28 = v44;
  *(_OWORD *)a1 = v38;
  *(_OWORD *)(a1 + 16) = v23;
  *(_OWORD *)(a1 + 32) = v24;
  *(_OWORD *)(a1 + 48) = v25;
  *(_OWORD *)(a1 + 64) = v26;
  *(_QWORD *)(a1 + 80) = v27;
  *(_BYTE *)(a1 + 88) = v28;
  return result;
}

uint64_t ReactionHistoryEntryAvatarImage.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  void *v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  _OWORD *v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  id v12;
  id v13;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  char v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  _BYTE v26[8];
  __int128 v27;
  __int128 v28;
  unint64_t v29;
  _BYTE v30[16];
  _BYTE v31[8];
  uint64_t v32;
  char v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;

  ReactionHistoryEntryAvatarImage.content.getter((uint64_t)&v34);
  v18 = v35;
  v19 = v34;
  v16 = v37;
  v17 = v36;
  v15 = v38;
  v1 = v39;
  v2 = BYTE8(v39);
  v3 = *(void **)v0;
  v4 = *(_BYTE *)(v0 + 8);
  v32 = *(_QWORD *)(v0 + 16);
  v23 = *(_OWORD *)(v0 + 24);
  v24 = *(_OWORD *)(v0 + 40);
  v25 = *(_QWORD *)(v0 + 56);
  v27 = v23;
  v28 = v24;
  outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>((uint64_t)&v27, (uint64_t)v31, &demangling cache variable for type metadata for Task<(), Error>?);
  outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>((uint64_t)&v27 + 8, (uint64_t)v30, &demangling cache variable for type metadata for ReactionHistoryEntry.ImageProvider?);
  outlined init with take of ReactionHistoryEntryAvatarImage.ImagePhase((_QWORD *)&v28 + 1, &v29);
  outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>((uint64_t)&v25, (uint64_t)v26, &demangling cache variable for type metadata for AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?);
  v5 = (_OWORD *)swift_allocObject();
  v6 = *(_OWORD *)(v0 + 16);
  v5[1] = *(_OWORD *)v0;
  v5[2] = v6;
  v7 = *(_OWORD *)(v0 + 48);
  v5[3] = *(_OWORD *)(v0 + 32);
  v5[4] = v7;
  v33 = v2;
  *(_QWORD *)&v21 = v1;
  BYTE8(v21) = v2;
  *(_QWORD *)&v22 = partial apply for closure #1 in ReactionHistoryEntryAvatarImage.body.getter;
  *((_QWORD *)&v22 + 1) = v5;
  v20 = v4;
  v8 = (_OWORD *)swift_allocObject();
  v9 = *(_OWORD *)(v0 + 16);
  v8[1] = *(_OWORD *)v0;
  v8[2] = v9;
  v10 = *(_OWORD *)(v0 + 48);
  v8[3] = *(_OWORD *)(v0 + 32);
  v8[4] = v10;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = partial apply for implicit closure #2 in implicit closure #1 in ReactionHistoryEntryAvatarImage.body.getter;
  *(_QWORD *)(v11 + 24) = v8;
  v12 = v3;
  outlined retain of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)&v32);
  outlined retain of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)v31);
  outlined retain of ReactionHistoryEntry.ImageProvider?((uint64_t)v30);
  outlined retain of ReactionHistoryEntryAvatarImage.ImagePhase(&v29);
  outlined retain of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)v26);
  v13 = v12;
  outlined retain of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)&v32);
  outlined retain of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)v31);
  outlined retain of ReactionHistoryEntry.ImageProvider?((uint64_t)v30);
  outlined retain of ReactionHistoryEntryAvatarImage.ImagePhase(&v29);
  outlined retain of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)v26);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _MaskAlignmentEffect<Circle>>, ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>>, _AppearanceActionModifier>);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ReactionHistoryEntry.ImageProvider?);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _MaskAlignmentEffect<Circle>>, ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _MaskAlignmentEffect<Circle>>, ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>>, _AppearanceActionModifier>, (uint64_t (*)(void))lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _MaskAlignmentEffect<Circle>>, ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>> and conformance <> _ConditionalContent<A, B>, MEMORY[0x24BDF0910]);
  lazy protocol witness table accessor for type ReactionHistoryEntry.ImageProvider? and conformance <A> A?(&lazy protocol witness table cache variable for type ReactionHistoryEntry.ImageProvider? and conformance <A> A?, &demangling cache variable for type metadata for ReactionHistoryEntry.ImageProvider?, (uint64_t (*)(void))lazy protocol witness table accessor for type ReactionHistoryEntry.ImageProvider and conformance ReactionHistoryEntry.ImageProvider, MEMORY[0x24BEE4AB8]);
  View.onChange<A>(of:initial:_:)();
  swift_release();
  outlined consume of ReactionHistoryEntry.ImageProvider?(v3, v20);
  v38 = v15;
  v39 = v21;
  v40 = 0uLL;
  v41 = v22;
  v34 = v19;
  v35 = v18;
  v36 = v17;
  v37 = v16;
  return outlined release of ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _MaskAlignmentEffect<Circle>>, ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>>, _AppearanceActionModifier>((uint64_t)&v34);
}

void closure #1 in ReactionHistoryEntryAvatarImage.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char v3;
  unint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ReactionHistoryEntryAvatarImage.LoadingState>);
  State.wrappedValue.getter();
  outlined consume of ReactionHistoryEntry.ImageProvider?(v2, v3);
  outlined consume of ReactionHistoryEntryAvatarImage.ImagePhase(v4);
  if (v1)
  {
    v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
    MEMORY[0x2207D406C](v1, MEMORY[0x24BEE4AE0] + 8, v0, MEMORY[0x24BEE3F20]);
    swift_release();
  }
}

uint64_t closure #1 in ReactionHistoryEntryAvatarImage.load(oldImageProvider:imageProvider:)(uint64_t a1)
{
  void *v2;
  char v3;
  unint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[8];
  _BYTE v11[16];
  unint64_t v12;
  _BYTE v13[8];

  v5 = *(_OWORD *)(a1 + 24);
  v6 = *(_OWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 56);
  outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>((uint64_t)&v7, (uint64_t)v13, &demangling cache variable for type metadata for AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?);
  v8 = v5;
  v9 = v6;
  outlined init with take of ReactionHistoryEntryAvatarImage.ImagePhase((_QWORD *)&v9 + 1, &v12);
  outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>((uint64_t)&v8 + 8, (uint64_t)v11, &demangling cache variable for type metadata for ReactionHistoryEntry.ImageProvider?);
  outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>((uint64_t)&v8, (uint64_t)v10, &demangling cache variable for type metadata for Task<(), Error>?);
  outlined retain of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)v10);
  outlined retain of ReactionHistoryEntry.ImageProvider?((uint64_t)v11);
  outlined retain of ReactionHistoryEntryAvatarImage.ImagePhase(&v12);
  outlined retain of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)v13);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ReactionHistoryEntryAvatarImage.LoadingState>);
  State.wrappedValue.getter();
  swift_release();
  State.wrappedValue.setter();
  outlined release of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)v10);
  outlined release of ReactionHistoryEntry.ImageProvider?((uint64_t)v11);
  outlined release of ReactionHistoryEntryAvatarImage.ImagePhase(&v12);
  outlined release of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)v13);
  outlined retain of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)v10);
  outlined retain of ReactionHistoryEntry.ImageProvider?((uint64_t)v11);
  outlined retain of ReactionHistoryEntryAvatarImage.ImagePhase(&v12);
  outlined retain of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)v13);
  State.wrappedValue.getter();
  outlined consume of ReactionHistoryEntry.ImageProvider?(v2, v3);
  State.wrappedValue.setter();
  outlined release of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)v10);
  outlined release of ReactionHistoryEntry.ImageProvider?((uint64_t)v11);
  outlined release of ReactionHistoryEntryAvatarImage.ImagePhase(&v12);
  outlined release of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)v13);
  outlined retain of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)v10);
  outlined retain of ReactionHistoryEntry.ImageProvider?((uint64_t)v11);
  outlined retain of ReactionHistoryEntryAvatarImage.ImagePhase(&v12);
  outlined retain of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)v13);
  State.wrappedValue.getter();
  outlined consume of ReactionHistoryEntryAvatarImage.ImagePhase(v4);
  State.wrappedValue.setter();
  outlined release of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)v10);
  outlined release of ReactionHistoryEntry.ImageProvider?((uint64_t)v11);
  outlined release of ReactionHistoryEntryAvatarImage.ImagePhase(&v12);
  return outlined release of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)v13);
}

uint64_t closure #3 in ReactionHistoryEntryAvatarImage.load(oldImageProvider:imageProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[3] = a4;
  v5[4] = a5;
  v5[5] = type metadata accessor for MainActor();
  v5[6] = static MainActor.shared.getter();
  v5[7] = dispatch thunk of Actor.unownedExecutor.getter();
  v5[8] = v6;
  return swift_task_switch();
}

uint64_t closure #3 in ReactionHistoryEntryAvatarImage.load(oldImageProvider:imageProvider:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[3];
  v0[9] = static MainActor.shared.getter();
  v2 = swift_task_alloc();
  v0[10] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[11] = v3;
  type metadata accessor for UIView(0, &lazy cache variable for type metadata for UIImage);
  *v3 = v0;
  v3[1] = closure #3 in ReactionHistoryEntryAvatarImage.load(oldImageProvider:imageProvider:);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)();
}

{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void **)(v0 + 96);
  swift_release();
  v2 = *(void **)(v0 + 16);
  static Task<>.checkCancellation()();
  if (v1)
  {

    v3 = *(_QWORD *)(v0 + 32);
    v4 = swift_task_alloc();
    *(_QWORD *)(v4 + 16) = v3;
    *(_QWORD *)(v4 + 24) = v1;
    withTransaction<A>(_:_:)();

  }
  else
  {
    v5 = *(_QWORD *)(v0 + 32);
    v6 = swift_task_alloc();
    *(_QWORD *)(v6 + 16) = v5;
    *(_QWORD *)(v6 + 24) = v2;
    withTransaction<A>(_:_:)();

  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  swift_release();
  swift_release();
  swift_task_dealloc();
  v1 = *(void **)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  withTransaction<A>(_:_:)();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void closure #1 in closure #3 in ReactionHistoryEntryAvatarImage.load(oldImageProvider:imageProvider:)(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjCClassFromMetadata;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<UIImage, Error>);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4, v7);
  type metadata accessor for UIView(0, &lazy cache variable for type metadata for UIImage);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = partial apply for closure #1 in closure #1 in closure #3 in ReactionHistoryEntryAvatarImage.load(oldImageProvider:imageProvider:);
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable (@guaranteed NSSecureCoding?, @guaranteed Error?) -> ();
  aBlock[3] = &block_descriptor_3;
  v11 = _Block_copy(aBlock);
  swift_release();
  v12 = objc_msgSend(a2, sel_loadObjectOfClass_completionHandler_, ObjCClassFromMetadata, v11);
  _Block_release(v11);

}

uint64_t closure #1 in closure #1 in closure #3 in ReactionHistoryEntryAvatarImage.load(oldImageProvider:imageProvider:)(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v4 = type metadata accessor for POSIXError();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 && (objc_opt_self(), (v9 = swift_dynamicCastObjCClass()) != 0))
  {
    v14 = v9;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<UIImage, Error>);
    return CheckedContinuation.resume(returning:)();
  }
  else
  {
    if (a2)
    {
      v11 = (uint64_t)a2;
    }
    else
    {
      LODWORD(v14) = 2;
      specialized Dictionary.init(dictionaryLiteral:)(MEMORY[0x24BEE4AF8]);
      lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type POSIXError and conformance POSIXError, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
      _BridgedStoredNSError.init(_:userInfo:)();
      v11 = POSIXError._nsError.getter();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
    v14 = v11;
    v12 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<UIImage, Error>);
    return CheckedContinuation.resume(throwing:)();
  }
}

uint64_t closure #2 in ReactionHistoryEntryAvatarImage.load(oldImageProvider:imageProvider:)(uint64_t a1, void *a2)
{
  id v3;
  unint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[8];
  _BYTE v12[16];
  unint64_t v13;
  _BYTE v14[8];

  v3 = a2;
  Image.init(uiImage:)();
  v6 = *(_OWORD *)(a1 + 24);
  v7 = *(_OWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 56);
  outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>((uint64_t)&v8, (uint64_t)v14, &demangling cache variable for type metadata for AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?);
  v9 = v6;
  v10 = v7;
  outlined init with take of ReactionHistoryEntryAvatarImage.ImagePhase((_QWORD *)&v10 + 1, &v13);
  outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>((uint64_t)&v9 + 8, (uint64_t)v12, &demangling cache variable for type metadata for ReactionHistoryEntry.ImageProvider?);
  outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>((uint64_t)&v9, (uint64_t)v11, &demangling cache variable for type metadata for Task<(), Error>?);
  outlined retain of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)v11);
  outlined retain of ReactionHistoryEntry.ImageProvider?((uint64_t)v12);
  outlined retain of ReactionHistoryEntryAvatarImage.ImagePhase(&v13);
  outlined retain of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)v14);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ReactionHistoryEntryAvatarImage.LoadingState>);
  State.wrappedValue.getter();
  outlined consume of ReactionHistoryEntryAvatarImage.ImagePhase(v5);
  State.wrappedValue.setter();
  outlined release of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)v11);
  outlined release of ReactionHistoryEntry.ImageProvider?((uint64_t)v12);
  outlined release of ReactionHistoryEntryAvatarImage.ImagePhase(&v13);
  return outlined release of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)v14);
}

uint64_t closure #3 in closure #3 in ReactionHistoryEntryAvatarImage.load(oldImageProvider:imageProvider:)(uint64_t a1, void *a2)
{
  id v3;
  unint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[8];
  _BYTE v12[16];
  unint64_t v13;
  _BYTE v14[8];

  v6 = *(_OWORD *)(a1 + 24);
  v7 = *(_OWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 56);
  outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>((uint64_t)&v8, (uint64_t)v14, &demangling cache variable for type metadata for AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?);
  v9 = v6;
  v10 = v7;
  outlined init with take of ReactionHistoryEntryAvatarImage.ImagePhase((_QWORD *)&v10 + 1, &v13);
  outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>((uint64_t)&v9 + 8, (uint64_t)v12, &demangling cache variable for type metadata for ReactionHistoryEntry.ImageProvider?);
  outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>((uint64_t)&v9, (uint64_t)v11, &demangling cache variable for type metadata for Task<(), Error>?);
  outlined retain of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)v11);
  outlined retain of ReactionHistoryEntry.ImageProvider?((uint64_t)v12);
  outlined retain of ReactionHistoryEntryAvatarImage.ImagePhase(&v13);
  outlined retain of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)v14);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ReactionHistoryEntryAvatarImage.LoadingState>);
  State.wrappedValue.getter();
  v3 = a2;
  outlined consume of ReactionHistoryEntryAvatarImage.ImagePhase(v5);
  State.wrappedValue.setter();
  outlined release of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)v11);
  outlined release of ReactionHistoryEntry.ImageProvider?((uint64_t)v12);
  outlined release of ReactionHistoryEntryAvatarImage.ImagePhase(&v13);
  return outlined release of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)v14);
}

uint64_t default argument 1 of ReactionHistoryEntryAvatarImage.init(imageProvider:transaction:loadingState:)()
{
  static Animation.spring(response:dampingFraction:blendDuration:)();
  return Transaction.init(animation:)();
}

uint64_t default argument 2 of ReactionHistoryEntryAvatarImage.init(imageProvider:transaction:loadingState:)()
{
  return 0;
}

__n128 ReactionHistoryEntryAvatarImage.init(imageProvider:transaction:loadingState:)@<Q0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  __n128 result;
  __n128 v9;
  char v10;
  __int128 v11;

  State.init(wrappedValue:)();
  result = v9;
  *(_QWORD *)a4 = a1;
  *(_BYTE *)(a4 + 8) = a2 & 1;
  *(_QWORD *)(a4 + 16) = a3;
  *(__n128 *)(a4 + 24) = v9;
  *(_BYTE *)(a4 + 40) = v10;
  *(_OWORD *)(a4 + 48) = v11;
  return result;
}

uint64_t ReactionHistoryEntryView.entry.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char v6;
  id v7;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(void **)(v1 + 32);
  v6 = *(_BYTE *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 40) = v6;
  v7 = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 ReactionHistoryEntryView.entry.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  void *v4;
  __n128 result;
  __n128 v6;
  __int128 v7;

  v6 = (__n128)a1[1];
  v7 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  v3 = *((_BYTE *)a1 + 40);
  v4 = *(void **)(v1 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  result = v6;
  *(_OWORD *)v1 = v7;
  *(__n128 *)(v1 + 16) = v6;
  *(_QWORD *)(v1 + 32) = v2;
  *(_BYTE *)(v1 + 40) = v3;
  return result;
}

uint64_t (*ReactionHistoryEntryView.entry.modify())()
{
  return destructiveProjectEnumData for GroupActivitySharingResult;
}

double ReactionHistoryEntryView.body.getter@<D0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  double result;
  __int128 v9;
  __int128 v10;
  _OWORD v11[2];
  _OWORD v12[9];
  _BYTE v13[151];

  v3 = v1[1];
  v10 = *v1;
  v11[0] = v3;
  *(_OWORD *)((char *)v11 + 9) = *(__int128 *)((char *)v1 + 25);
  v4 = static VerticalAlignment.center.getter();
  closure #1 in ReactionHistoryEntryView.body.getter((uint64_t)&v10, (uint64_t)v12);
  *(_OWORD *)&v13[103] = v12[6];
  *(_OWORD *)&v13[87] = v12[5];
  *(_OWORD *)&v13[39] = v12[2];
  *(_OWORD *)&v13[23] = v12[1];
  *(_OWORD *)&v13[119] = v12[7];
  *(_OWORD *)&v13[135] = v12[8];
  *(_OWORD *)&v13[55] = v12[3];
  *(_OWORD *)&v13[71] = v12[4];
  *(_OWORD *)&v13[7] = v12[0];
  v5 = *(_OWORD *)&v13[112];
  *(_OWORD *)(a1 + 113) = *(_OWORD *)&v13[96];
  *(_OWORD *)(a1 + 129) = v5;
  *(_OWORD *)(a1 + 145) = *(_OWORD *)&v13[128];
  v6 = *(_OWORD *)&v13[48];
  *(_OWORD *)(a1 + 49) = *(_OWORD *)&v13[32];
  *(_OWORD *)(a1 + 65) = v6;
  v7 = *(_OWORD *)&v13[80];
  *(_OWORD *)(a1 + 81) = *(_OWORD *)&v13[64];
  *(_OWORD *)(a1 + 97) = v7;
  result = *(double *)v13;
  v9 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a1 + 17) = *(_OWORD *)v13;
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(_QWORD *)(a1 + 160) = *(_QWORD *)&v13[143];
  *(_OWORD *)(a1 + 33) = v9;
  return result;
}

uint64_t closure #1 in ReactionHistoryEntryView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  char v34;
  uint64_t v35;
  unint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v44[4];
  int v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  id v54;
  id v55;
  void *v56;
  uint64_t v57;
  id v58;
  unint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  unint64_t v65;
  uint64_t v66;
  void *v67;
  unsigned __int8 v68;
  unint64_t v69;
  uint64_t v70;
  _BYTE v71[7];
  char v72;
  _BYTE v73[7];
  char v74;
  _BYTE v75[7];
  char v76;
  char v77;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Font.Design?);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (uint64_t)&v44[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for Font.TextStyle();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = &v44[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = *(_QWORD *)a1;
  v13 = *(void **)(a1 + 8);
  v57 = *(_QWORD *)(a1 + 16);
  v56 = *(void **)(a1 + 24);
  v54 = *(id *)(a1 + 32);
  v52 = *(unsigned __int8 *)(a1 + 40);
  v55 = v54;
  static Animation.spring(response:dampingFraction:blendDuration:)();
  v53 = Transaction.init(animation:)();
  v62 = 0;
  v63 = 0;
  v64 = -1;
  v65 = 0x8000000000000000;
  State.init(wrappedValue:)();
  v51 = v66;
  v58 = v67;
  v59 = v69;
  v60 = v70;
  v50 = v68;
  v66 = v14;
  v67 = v13;
  v46 = lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  v15 = Text.init<A>(_:)();
  v17 = v16;
  LOBYTE(a1) = v18 & 1;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v9 + 104))(v12, *MEMORY[0x24BDF1878], v8);
  v19 = type metadata accessor for Font.Design();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v7, 1, 1, v19);
  static Font.Weight.regular.getter();
  static Font.system(_:design:weight:)();
  outlined destroy of PartialRangeThrough<DynamicTypeSize>(v7, &demangling cache variable for type metadata for Font.Design?);
  (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v12, v8);
  v48 = Text.font(_:)();
  v47 = v20;
  LOBYTE(v7) = v21;
  v49 = v22;
  swift_release();
  LODWORD(v9) = v7 & 1;
  outlined consume of Text.Storage(v15, v17, a1);
  swift_bridgeObjectRelease();
  v66 = v57;
  v67 = v56;
  swift_bridgeObjectRetain();
  v23 = Text.init<A>(_:)();
  v25 = v24;
  LOBYTE(v12) = v26 & 1;
  static Font.title3.getter();
  v27 = Text.font(_:)();
  v56 = (void *)v28;
  LOBYTE(a1) = v29;
  v57 = v30;
  swift_release();
  LODWORD(a1) = a1 & 1;
  LODWORD(v46) = a1;
  outlined consume of Text.Storage(v23, v25, (char)v12);
  swift_bridgeObjectRelease();
  v61 = v9;
  v31 = v52 & 1;
  v77 = v52 & 1;
  v76 = v9;
  v32 = v9;
  v45 = v9;
  v74 = 1;
  v72 = a1;
  *(_DWORD *)(a2 + 9) = v66;
  *(_DWORD *)(a2 + 12) = *(_DWORD *)((char *)&v66 + 3);
  *(_DWORD *)(a2 + 41) = v62;
  *(_DWORD *)(a2 + 44) = *(_DWORD *)((char *)&v62 + 3);
  *(_DWORD *)(a2 + 84) = *(_DWORD *)&v75[3];
  *(_DWORD *)(a2 + 81) = *(_DWORD *)v75;
  v33 = v74;
  *(_DWORD *)(a2 + 105) = *(_DWORD *)v73;
  *(_DWORD *)(a2 + 108) = *(_DWORD *)&v73[3];
  v34 = a1;
  *(_DWORD *)(a2 + 129) = *(_DWORD *)v71;
  *(_DWORD *)(a2 + 132) = *(_DWORD *)&v71[3];
  *(_QWORD *)a2 = v54;
  *(_BYTE *)(a2 + 8) = v31;
  v35 = v51;
  *(_QWORD *)(a2 + 16) = v53;
  *(_QWORD *)(a2 + 24) = v35;
  v37 = v58;
  v36 = v59;
  *(_QWORD *)(a2 + 32) = v58;
  LOBYTE(v12) = v50;
  *(_BYTE *)(a2 + 40) = v50;
  v38 = v60;
  *(_QWORD *)(a2 + 48) = v36;
  *(_QWORD *)(a2 + 56) = v38;
  v39 = v48;
  v40 = v47;
  *(_QWORD *)(a2 + 64) = v48;
  *(_QWORD *)(a2 + 72) = v40;
  *(_BYTE *)(a2 + 80) = v32;
  *(_QWORD *)(a2 + 88) = v49;
  *(_QWORD *)(a2 + 96) = 0;
  *(_BYTE *)(a2 + 104) = v33;
  v41 = (uint64_t)v56;
  *(_QWORD *)(a2 + 112) = v27;
  *(_QWORD *)(a2 + 120) = v41;
  *(_BYTE *)(a2 + 128) = v34;
  *(_QWORD *)(a2 + 136) = v57;
  swift_retain();
  v55 = v55;
  swift_retain();
  outlined copy of ReactionHistoryEntry.ImageProvider?(v37, (char)v12);
  outlined copy of ReactionHistoryEntryAvatarImage.ImagePhase(v36);
  swift_retain();
  outlined copy of Text.Storage(v39, v40, v45);
  swift_bridgeObjectRetain();
  v42 = (uint64_t)v56;
  LOBYTE(v37) = v46;
  outlined copy of Text.Storage(v27, (uint64_t)v56, v46);
  swift_bridgeObjectRetain();
  outlined consume of Text.Storage(v27, v42, (char)v37);
  swift_bridgeObjectRelease();
  outlined consume of Text.Storage(v39, v40, v61);
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  outlined consume of ReactionHistoryEntry.ImageProvider?(v58, (char)v12);
  outlined consume of ReactionHistoryEntryAvatarImage.ImagePhase(v59);
  return swift_release();
}

__n128 ReactionHistoryEntryView.init(entry:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result;
  __int128 v3;
  uint64_t v4;
  char v5;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_BYTE *)(a1 + 40);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v3;
  *(_QWORD *)(a2 + 32) = v4;
  *(_BYTE *)(a2 + 40) = v5;
  return result;
}

double protocol witness for View.body.getter in conformance ReactionHistoryEntryView@<D0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  double result;
  __int128 v9;
  __int128 v10;
  _OWORD v11[2];
  _OWORD v12[9];
  _BYTE v13[151];

  v3 = v1[1];
  v10 = *v1;
  v11[0] = v3;
  *(_OWORD *)((char *)v11 + 9) = *(__int128 *)((char *)v1 + 25);
  v4 = static VerticalAlignment.center.getter();
  closure #1 in ReactionHistoryEntryView.body.getter((uint64_t)&v10, (uint64_t)v12);
  *(_OWORD *)&v13[103] = v12[6];
  *(_OWORD *)&v13[87] = v12[5];
  *(_OWORD *)&v13[39] = v12[2];
  *(_OWORD *)&v13[23] = v12[1];
  *(_OWORD *)&v13[119] = v12[7];
  *(_OWORD *)&v13[135] = v12[8];
  *(_OWORD *)&v13[55] = v12[3];
  *(_OWORD *)&v13[71] = v12[4];
  *(_OWORD *)&v13[7] = v12[0];
  v5 = *(_OWORD *)&v13[112];
  *(_OWORD *)(a1 + 113) = *(_OWORD *)&v13[96];
  *(_OWORD *)(a1 + 129) = v5;
  *(_OWORD *)(a1 + 145) = *(_OWORD *)&v13[128];
  v6 = *(_OWORD *)&v13[48];
  *(_OWORD *)(a1 + 49) = *(_OWORD *)&v13[32];
  *(_OWORD *)(a1 + 65) = v6;
  v7 = *(_OWORD *)&v13[80];
  *(_OWORD *)(a1 + 81) = *(_OWORD *)&v13[64];
  *(_OWORD *)(a1 + 97) = v7;
  result = *(double *)v13;
  v9 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a1 + 17) = *(_OWORD *)v13;
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(_QWORD *)(a1 + 160) = *(_QWORD *)&v13[143];
  *(_OWORD *)(a1 + 33) = v9;
  return result;
}

uint64_t ReactionHistoryView.model.getter()
{
  return swift_retain();
}

uint64_t ReactionHistoryView.model.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*ReactionHistoryView.model.modify())()
{
  return destructiveProjectEnumData for GroupActivitySharingResult;
}

uint64_t ReactionHistoryView.$model.getter()
{
  type metadata accessor for ReactionHistoryViewModel();
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ReactionHistoryViewModel, (uint64_t)&protocol conformance descriptor for ReactionHistoryViewModel);
  return ObservedObject.projectedValue.getter();
}

uint64_t ReactionHistoryView.body.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(ReactionFilter, ModifiedContent<Spacer, _FrameLayout>, <<opaque return type of View.listStyle<A>(_:)>>.0)>>);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v7 = static HorizontalAlignment.center.getter();
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(ReactionFilter, ModifiedContent<Spacer, _FrameLayout>, <<opaque return type of View.listStyle<A>(_:)>>.0)>>);
  closure #1 in ReactionHistoryView.body.getter(a1, &v7[*(int *)(v8 + 44)]);
  LOBYTE(a1) = static Edge.Set.all.getter();
  outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>((uint64_t)v7, a2, &demangling cache variable for type metadata for VStack<TupleView<(ReactionFilter, ModifiedContent<Spacer, _FrameLayout>, <<opaque return type of View.listStyle<A>(_:)>>.0)>>);
  v9 = a2
     + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ReactionFilter, ModifiedContent<Spacer, _FrameLayout>, <<opaque return type of View.listStyle<A>(_:)>>.0)>>, _PaddingLayout>)
              + 36);
  *(_BYTE *)v9 = a1;
  *(_OWORD *)(v9 + 8) = 0u;
  *(_OWORD *)(v9 + 24) = 0u;
  *(_BYTE *)(v9 + 40) = 1;
  return outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v7, &demangling cache variable for type metadata for VStack<TupleView<(ReactionFilter, ModifiedContent<Spacer, _FrameLayout>, <<opaque return type of View.listStyle<A>(_:)>>.0)>>);
}

uint64_t closure #1 in ReactionHistoryView.body.getter@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  _QWORD *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t (*v59)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[6];
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v43 = a2;
  v53 = type metadata accessor for PlainListStyle();
  v54 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53, v3);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for List<Never, ForEach<[ReactionHistoryEntry], ReactionHistoryEntry, ModifiedContent<ModifiedContent<<<opaque return type of View.listRowSeparator(_:edges:)>>.0, _TraitWritingModifier<ListRowInsetsTraitKey>>, _TraitWritingModifier<ListRowBackgroundTraitKey>>>>);
  v52 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50, v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.listStyle<A>(_:)>>.0);
  v56 = *(_QWORD *)(v51 - 8);
  v10 = MEMORY[0x24BDAC7A8](v51, v9);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v13);
  v55 = (char *)&v43 - v14;
  type metadata accessor for ReactionHistoryViewModel();
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ReactionHistoryViewModel, (uint64_t)&protocol conformance descriptor for ReactionHistoryViewModel);
  ObservedObject.projectedValue.getter();
  swift_getKeyPath();
  ObservedObject.Wrapper.subscript.getter();
  swift_release();
  swift_release();
  v15 = v63;
  v16 = v64;
  v18 = v65;
  v17 = v66;
  v19 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 232);
  v20 = swift_retain();
  v21 = v19(v20);
  swift_release();
  specialized ReactionFilter.init(filter:reactions:)(v15, v16, v18, v17, v21, v62);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v49 = v63;
  v48 = v64;
  v47 = v65;
  v46 = v66;
  v45 = v67;
  v44 = v68;
  v22 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 208);
  v23 = swift_retain();
  v24 = v22(v23);
  swift_release();
  KeyPath = swift_getKeyPath();
  v60 = 0;
  v61 = v24;
  v57 = &v61;
  v58 = KeyPath;
  v59 = closure #1 in closure #1 in ReactionHistoryView.body.getter;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEach<[ReactionHistoryEntry], ReactionHistoryEntry, ModifiedContent<ModifiedContent<<<opaque return type of View.listRowSeparator(_:edges:)>>.0, _TraitWritingModifier<ListRowInsetsTraitKey>>, _TraitWritingModifier<ListRowBackgroundTraitKey>>>);
  lazy protocol witness table accessor for type ReactionHistoryEntry.ImageProvider? and conformance <A> A?(&lazy protocol witness table cache variable for type ForEach<[ReactionHistoryEntry], ReactionHistoryEntry, ModifiedContent<ModifiedContent<<<opaque return type of View.listRowSeparator(_:edges:)>>.0, _TraitWritingModifier<ListRowInsetsTraitKey>>, _TraitWritingModifier<ListRowBackgroundTraitKey>>> and conformance <> ForEach<A, B, C>, &demangling cache variable for type metadata for ForEach<[ReactionHistoryEntry], ReactionHistoryEntry, ModifiedContent<ModifiedContent<<<opaque return type of View.listRowSeparator(_:edges:)>>.0, _TraitWritingModifier<ListRowInsetsTraitKey>>, _TraitWritingModifier<ListRowBackgroundTraitKey>>>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.listRowSeparator(_:edges:)>>.0, _TraitWritingModifier<ListRowInsetsTraitKey>>, _TraitWritingModifier<ListRowBackgroundTraitKey>> and conformance <> ModifiedContent<A, B>, MEMORY[0x24BDF4A08]);
  List<>.init(content:)();
  swift_release();
  swift_bridgeObjectRelease();
  PlainListStyle.init()();
  lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type List<Never, ForEach<[ReactionHistoryEntry], ReactionHistoryEntry, ModifiedContent<ModifiedContent<<<opaque return type of View.listRowSeparator(_:edges:)>>.0, _TraitWritingModifier<ListRowInsetsTraitKey>>, _TraitWritingModifier<ListRowBackgroundTraitKey>>>> and conformance List<A, B>, &demangling cache variable for type metadata for List<Never, ForEach<[ReactionHistoryEntry], ReactionHistoryEntry, ModifiedContent<ModifiedContent<<<opaque return type of View.listRowSeparator(_:edges:)>>.0, _TraitWritingModifier<ListRowInsetsTraitKey>>, _TraitWritingModifier<ListRowBackgroundTraitKey>>>>, MEMORY[0x24BDF1A30]);
  v26 = v50;
  v27 = v53;
  View.listStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v5, v27);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v8, v26);
  v28 = v55;
  v29 = v56;
  v30 = v51;
  (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v55, v12, v51);
  v32 = v62[0];
  v31 = v62[1];
  v33 = v62[3];
  v54 = v62[2];
  v34 = v62[4];
  v35 = v62[5];
  v36 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
  v36(v12, v28, v30);
  v37 = v43;
  *v43 = v32;
  v37[1] = v31;
  v37[2] = v54;
  v37[3] = v33;
  v37[4] = v34;
  v37[5] = v35;
  v37[6] = 0;
  *((_BYTE *)v37 + 56) = 1;
  v37[8] = v49;
  *((_BYTE *)v37 + 72) = v48;
  v37[10] = v47;
  *((_BYTE *)v37 + 88) = v46;
  v38 = v44;
  v37[12] = v45;
  v37[13] = v38;
  v39 = (char *)v37
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ReactionFilter, ModifiedContent<Spacer, _FrameLayout>, <<opaque return type of View.listStyle<A>(_:)>>.0))
               + 64);
  v40 = v12;
  v36(v39, v12, v30);
  v41 = *(void (**)(char *, uint64_t))(v56 + 8);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v41(v55, v30);
  v41(v40, v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t key path getter for ReactionHistoryViewModel.filter : ReactionHistoryViewModel@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 112))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for ReactionHistoryViewModel.filter : ReactionHistoryViewModel(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 120);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t closure #1 in closure #1 in ReactionHistoryView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char v19;
  id v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  ValueMetadata *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  char v40;

  v34 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.listSectionSeparator(_:edges:)>>.0);
  v4 = *(_QWORD *)(v3 - 8);
  v32 = v3;
  v33 = v4;
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.listRowSeparator(_:edges:)>>.0);
  v30 = *(_QWORD *)(v8 - 8);
  v31 = v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.listRowSeparator(_:edges:)>>.0, _TraitWritingModifier<ListRowInsetsTraitKey>>);
  MEMORY[0x24BDAC7A8](v29, v12);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a1 + 8);
  v16 = *(_QWORD *)(a1 + 16);
  v17 = *(_QWORD *)(a1 + 24);
  v18 = *(void **)(a1 + 32);
  v19 = *(_BYTE *)(a1 + 40);
  v35 = *(ValueMetadata **)a1;
  v36 = v15;
  v37 = v16;
  v38 = v17;
  v39 = v18;
  v40 = v19;
  v20 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  static VerticalEdge.Set.all.getter();
  v21 = lazy protocol witness table accessor for type ReactionHistoryEntryView and conformance ReactionHistoryEntryView();
  View.listSectionSeparator(_:edges:)();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  static VerticalEdge.Set.bottom.getter();
  v35 = &type metadata for ReactionHistoryEntryView;
  v36 = v21;
  swift_getOpaqueTypeConformance2();
  v22 = v32;
  View.listRowSeparator(_:edges:)();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v22);
  v24 = v30;
  v23 = v31;
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v14, v11, v31);
  v25 = &v14[*(int *)(v29 + 36)];
  *(_OWORD *)v25 = xmmword_21FDD6FA0;
  *((_OWORD *)v25 + 1) = xmmword_21FDD6FA0;
  v25[32] = 0;
  (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v23);
  v35 = (ValueMetadata *)static Color.clear.getter();
  swift_retain();
  v26 = AnyView.init<A>(_:)();
  v27 = v34;
  outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>((uint64_t)v14, v34, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.listRowSeparator(_:edges:)>>.0, _TraitWritingModifier<ListRowInsetsTraitKey>>);
  swift_release();
  *(_QWORD *)(v27
            + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.listRowSeparator(_:edges:)>>.0, _TraitWritingModifier<ListRowInsetsTraitKey>>, _TraitWritingModifier<ListRowBackgroundTraitKey>>)
                     + 36)) = v26;
  return outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v14, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.listRowSeparator(_:edges:)>>.0, _TraitWritingModifier<ListRowInsetsTraitKey>>);
}

uint64_t protocol witness for View.body.getter in conformance ReactionHistoryView@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(ReactionFilter, ModifiedContent<Spacer, _FrameLayout>, <<opaque return type of View.listStyle<A>(_:)>>.0)>>);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)v6 = static HorizontalAlignment.center.getter();
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(ReactionFilter, ModifiedContent<Spacer, _FrameLayout>, <<opaque return type of View.listStyle<A>(_:)>>.0)>>);
  closure #1 in ReactionHistoryView.body.getter(v7, &v6[*(int *)(v8 + 44)]);
  LOBYTE(v7) = static Edge.Set.all.getter();
  outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>((uint64_t)v6, a1, &demangling cache variable for type metadata for VStack<TupleView<(ReactionFilter, ModifiedContent<Spacer, _FrameLayout>, <<opaque return type of View.listStyle<A>(_:)>>.0)>>);
  v9 = a1
     + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ReactionFilter, ModifiedContent<Spacer, _FrameLayout>, <<opaque return type of View.listStyle<A>(_:)>>.0)>>, _PaddingLayout>)
              + 36);
  *(_BYTE *)v9 = v7;
  *(_OWORD *)(v9 + 8) = 0u;
  *(_OWORD *)(v9 + 24) = 0u;
  *(_BYTE *)(v9 + 40) = 1;
  return outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v6, &demangling cache variable for type metadata for VStack<TupleView<(ReactionFilter, ModifiedContent<Spacer, _FrameLayout>, <<opaque return type of View.listStyle<A>(_:)>>.0)>>);
}

uint64_t ReactionHistoryViewModel.filter.didset(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v5)(void);
  uint64_t result;
  uint64_t v7;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;

  v5 = *(uint64_t (**)(void))(*(_QWORD *)v2 + 112);
  result = v5();
  if (a2)
  {
    if (!v7)
      goto LABEL_8;
    if (result == a1 && v7 == a2)
    {
      return swift_bridgeObjectRelease();
    }
    else
    {
      v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
      result = swift_bridgeObjectRelease();
      if ((v9 & 1) == 0)
      {
LABEL_8:
        v10 = ((uint64_t (*)(uint64_t))v5)(result);
        if (v11)
        {
LABEL_9:
          v12 = v10;
          v13 = v11;
          v14 = (*(uint64_t (**)(void))(*(_QWORD *)v2 + 160))();
          v15 = specialized _ArrayProtocol.filter(_:)(v14, v12, v13);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v16 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 216);
          v17 = v15;
          return v16(v17);
        }
LABEL_12:
        v17 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 160))(v10);
        v16 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 216);
        return v16(v17);
      }
    }
  }
  else if (v7)
  {
    v18 = swift_bridgeObjectRelease();
    v10 = ((uint64_t (*)(uint64_t))v5)(v18);
    if (v11)
      goto LABEL_9;
    goto LABEL_12;
  }
  return result;
}

uint64_t ReactionHistoryViewModel.filter.getter()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t ReactionHistoryViewModel.filter.setter()
{
  uint64_t v1;
  uint64_t v2;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.setter();
  ReactionHistoryViewModel.filter.didset(v1, v2);
  return swift_bridgeObjectRelease();
}

void (*ReactionHistoryViewModel.filter.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  *(_OWORD *)v3 = *((_OWORD *)v3 + 1);
  return ReactionHistoryViewModel.filter.modify;
}

void ReactionHistoryViewModel.filter.modify(uint64_t **a1, char a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *a1;
  v5 = **a1;
  v4 = (*a1)[1];
  swift_getKeyPath();
  swift_getKeyPath();
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    v6 = v3[2];
    v7 = v3[3];
    swift_getKeyPath();
    swift_getKeyPath();
    v3[2] = v5;
    v3[3] = v4;
    swift_retain();
    static Published.subscript.setter();
    ReactionHistoryViewModel.filter.didset(v6, v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    static Published.subscript.getter();
    swift_release();
    swift_release();
    v9 = v3[2];
    v8 = v3[3];
    swift_getKeyPath();
    swift_getKeyPath();
    v3[2] = v5;
    v3[3] = v4;
    swift_retain();
    static Published.subscript.setter();
    ReactionHistoryViewModel.filter.didset(v9, v8);
  }
  swift_bridgeObjectRelease();
  free(v3);
}

uint64_t key path setter for ReactionHistoryViewModel.$filter : ReactionHistoryViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<String?>.Publisher);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v8 + 16))(v7, a1);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 144))(v7);
}

uint64_t ReactionHistoryViewModel.$filter.getter()
{
  return ReactionHistoryViewModel.$filter.getter((uint64_t)&OBJC_IVAR____TtC22_GroupActivities_UIKit24ReactionHistoryViewModel__filter, (uint64_t *)&demangling cache variable for type metadata for Published<String?>);
}

uint64_t ReactionHistoryViewModel.$filter.setter(uint64_t a1)
{
  return ReactionHistoryViewModel.$filter.setter(a1, (uint64_t *)&demangling cache variable for type metadata for Published<String?>.Publisher, (uint64_t)&OBJC_IVAR____TtC22_GroupActivities_UIKit24ReactionHistoryViewModel__filter, (uint64_t *)&demangling cache variable for type metadata for Published<String?>);
}

uint64_t (*ReactionHistoryViewModel.$filter.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<String?>.Publisher);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC22_GroupActivities_UIKit24ReactionHistoryViewModel__filter;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<String?>);
  Published.projectedValue.getter();
  swift_endAccess();
  return ReactionHistoryViewModel.$filter.modify;
}

uint64_t key path getter for ReactionHistoryViewModel.entries : ReactionHistoryViewModel@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 160))();
  *a2 = result;
  return result;
}

uint64_t key path setter for ReactionHistoryViewModel.entries : ReactionHistoryViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 168);
  v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t ReactionHistoryViewModel.entries.getter()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t ReactionHistoryViewModel.entries.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  v1 = static Published.subscript.setter();
  v2 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v0 + 112))(v1);
  if (v3)
  {
    v4 = v2;
    v5 = v3;
    v6 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
    v7 = specialized _ArrayProtocol.filter(_:)(v6, v4, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v0 + 160))(v2);
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v0 + 216))(v7);
  return ReactionHistoryViewModel.updateReactionCounts()();
}

uint64_t (*ReactionHistoryViewModel.entries.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  a1[2] = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  *a1 = a1[1];
  return ReactionHistoryViewModel.entries.modify;
}

uint64_t ReactionHistoryViewModel.entries.modify(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
    return ReactionHistoryViewModel.entries.setter();
  swift_bridgeObjectRetain();
  ReactionHistoryViewModel.entries.setter();
  return swift_bridgeObjectRelease();
}

uint64_t key path setter for ReactionHistoryViewModel.$entries : ReactionHistoryViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[ReactionHistoryEntry]>.Publisher);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v8 + 16))(v7, a1);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 192))(v7);
}

uint64_t ReactionHistoryViewModel.$entries.getter()
{
  return ReactionHistoryViewModel.$filter.getter((uint64_t)&OBJC_IVAR____TtC22_GroupActivities_UIKit24ReactionHistoryViewModel__entries, &demangling cache variable for type metadata for Published<[ReactionHistoryEntry]>);
}

uint64_t ReactionHistoryViewModel.$filter.getter(uint64_t a1, uint64_t *a2)
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a2);
  Published.projectedValue.getter();
  return swift_endAccess();
}

uint64_t ReactionHistoryViewModel.$entries.setter(uint64_t a1)
{
  return ReactionHistoryViewModel.$filter.setter(a1, &demangling cache variable for type metadata for Published<[ReactionHistoryEntry]>.Publisher, (uint64_t)&OBJC_IVAR____TtC22_GroupActivities_UIKit24ReactionHistoryViewModel__entries, &demangling cache variable for type metadata for Published<[ReactionHistoryEntry]>);
}

uint64_t ReactionHistoryViewModel.$filter.setter(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v11 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a4);
  Published.projectedValue.setter();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
}

uint64_t (*ReactionHistoryViewModel.$entries.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[ReactionHistoryEntry]>.Publisher);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC22_GroupActivities_UIKit24ReactionHistoryViewModel__entries;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[ReactionHistoryEntry]>);
  Published.projectedValue.getter();
  swift_endAccess();
  return ReactionHistoryViewModel.$filter.modify;
}

uint64_t ReactionHistoryViewModel.visibleEntries.getter()
{
  return ReactionHistoryViewModel.visibleEntries.getter();
}

{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t ReactionHistoryViewModel.visibleEntries.setter(uint64_t a1)
{
  return ReactionHistoryViewModel.visibleEntries.setter(a1, &OBJC_IVAR____TtC22_GroupActivities_UIKit24ReactionHistoryViewModel_visibleEntries);
}

uint64_t (*ReactionHistoryViewModel.visibleEntries.modify())()
{
  swift_beginAccess();
  return PeoplePickerController.conversationManagerClient.modify;
}

unint64_t specialized Dictionary.init(dictionaryLiteral:)(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<String, Int>);
  v2 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = specialized __RawDictionaryStorage.find<A>(_:)(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<String, UIImage>);
  v2 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 48);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 2);
    v6 = (uint64_t)*(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    v8 = v7;
    result = specialized __RawDictionaryStorage.find<A>(_:)(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v8;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<NSAttributedStringKey, Any>);
  v2 = static _DictionaryStorage.allocate(capacity:)();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>(v6, (uint64_t)&v13, &demangling cache variable for type metadata for (NSAttributedStringKey, Any));
    v7 = v13;
    result = specialized __RawDictionaryStorage.find<A>(_:)(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)outlined init with take of Any(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<String, Any>);
  v2 = static _DictionaryStorage.allocate(capacity:)();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>(v6, (uint64_t)&v15, &demangling cache variable for type metadata for (String, Any));
    v7 = v15;
    v8 = v16;
    result = specialized __RawDictionaryStorage.find<A>(_:)(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)outlined init with take of Any(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t ReactionHistoryViewModel.reactionCounts.getter()
{
  return ReactionHistoryViewModel.visibleEntries.getter();
}

uint64_t ReactionHistoryViewModel.reactionCounts.setter(uint64_t a1)
{
  return ReactionHistoryViewModel.visibleEntries.setter(a1, &OBJC_IVAR____TtC22_GroupActivities_UIKit24ReactionHistoryViewModel_reactionCounts);
}

uint64_t ReactionHistoryViewModel.visibleEntries.setter(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)(v2 + *a2);
  swift_beginAccess();
  *v4 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*ReactionHistoryViewModel.reactionCounts.modify())()
{
  swift_beginAccess();
  return ReactionPickerView.reactions.modify;
}

uint64_t ReactionHistoryViewModel.init(entries:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[6];

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<String?>);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1 + OBJC_IVAR____TtC22_GroupActivities_UIKit24ReactionHistoryViewModel__filter;
  v19[3] = 0;
  v19[4] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v8, v7, v3);
  v9 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v1 + OBJC_IVAR____TtC22_GroupActivities_UIKit24ReactionHistoryViewModel_visibleEntries) = MEMORY[0x24BEE4AF8];
  v10 = OBJC_IVAR____TtC22_GroupActivities_UIKit24ReactionHistoryViewModel_reactionCounts;
  *(_QWORD *)(v1 + v10) = specialized Dictionary.init(dictionaryLiteral:)(v9);
  swift_beginAccess();
  v19[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [ReactionHistoryEntry]);
  Published.init(initialValue:)();
  v11 = swift_endAccess();
  v12 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 112))(v11);
  if (v13)
  {
    v14 = v12;
    v15 = v13;
    v16 = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 160))();
    v17 = specialized _ArrayProtocol.filter(_:)(v16, v14, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 160))(v12);
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 216))(v17);
  ReactionHistoryViewModel.updateReactionCounts()();
  return v1;
}

uint64_t type metadata accessor for ReactionHistoryViewModel()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ReactionHistoryViewModel;
  if (!type metadata singleton initialization cache for ReactionHistoryViewModel)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ReactionHistoryViewModel.updateReactionCounts()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  id *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  char isUniquelyReferenced_nonNull_native;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  uint64_t *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;

  v1 = v0;
  v2 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
  v3 = (_QWORD *)specialized Dictionary.init(dictionaryLiteral:)(MEMORY[0x24BEE4AF8]);
  v4 = *(_QWORD *)(v2 + 16);
  if (v4)
  {
    v26 = v1;
    swift_bridgeObjectRetain();
    v5 = (id *)(v2 + 64);
    while (1)
    {
      v6 = (uint64_t)*(v5 - 2);
      v7 = (uint64_t)*(v5 - 1);
      v8 = *v5;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v11 = specialized __RawDictionaryStorage.find<A>(_:)(v6, v7);
      v12 = v3[2];
      v13 = (v10 & 1) == 0;
      v14 = v12 + v13;
      if (__OFADD__(v12, v13))
        break;
      v15 = v10;
      if (v3[3] >= v14)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          specialized _NativeDictionary.copy()();
      }
      else
      {
        specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v14, isUniquelyReferenced_nonNull_native);
        v16 = specialized __RawDictionaryStorage.find<A>(_:)(v6, v7);
        if ((v15 & 1) != (v17 & 1))
          goto LABEL_19;
        v11 = v16;
      }
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0)
      {
        v3[(v11 >> 6) + 8] |= 1 << v11;
        v18 = (uint64_t *)(v3[6] + 16 * v11);
        *v18 = v6;
        v18[1] = v7;
        *(_QWORD *)(v3[7] + 8 * v11) = 0;
        v19 = v3[2];
        v20 = __OFADD__(v19, 1);
        v21 = v19 + 1;
        if (v20)
          goto LABEL_18;
        v3[2] = v21;
        swift_bridgeObjectRetain();
      }
      v22 = v3[7];
      v23 = *(_QWORD *)(v22 + 8 * v11);
      v20 = __OFADD__(v23, 1);
      v24 = v23 + 1;
      if (v20)
        goto LABEL_17;
      *(_QWORD *)(v22 + 8 * v11) = v24;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      v5 += 6;
      if (!--v4)
      {
        swift_bridgeObjectRelease();
        v1 = v26;
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(_QWORD *))(*(_QWORD *)v1 + 240))(v3);
  }
  return result;
}

uint64_t ReactionHistoryViewModel.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC22_GroupActivities_UIKit24ReactionHistoryViewModel__filter;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<String?>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC22_GroupActivities_UIKit24ReactionHistoryViewModel__entries;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[ReactionHistoryEntry]>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ReactionHistoryViewModel.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC22_GroupActivities_UIKit24ReactionHistoryViewModel__filter;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<String?>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC22_GroupActivities_UIKit24ReactionHistoryViewModel__entries;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[ReactionHistoryEntry]>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t protocol witness for ObservableObject.objectWillChange.getter in conformance ReactionHistoryViewModel@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for ReactionHistoryViewModel();
  result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

unint64_t specialized __RawDictionaryStorage.find<A>(_:)(uint64_t a1, uint64_t a2)
{
  Swift::Int v4;

  Hasher.init(_seed:)();
  String.hash(into:)();
  v4 = Hasher._finalize()();
  return specialized __RawDictionaryStorage.find<A>(_:hashValue:)(a1, a2, v4);
}

{
  Swift::Int v4;

  Hasher.init(_seed:)();
  String.hash(into:)();
  v4 = Hasher._finalize()();
  return specialized __RawDictionaryStorage.find<A>(_:hashValue:)(a1, a2, v4);
}

unint64_t specialized __RawDictionaryStorage.find<A>(_:hashValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v15;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      v12 = ~v5;
      i = (i + 1) & v12;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v13 = (_QWORD *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          for (i = (i + 1) & v12; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v12)
          {
            v15 = (_QWORD *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2)
              break;
            if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
    }
  }
  return v6;
}

_QWORD *specialized _copyCollectionToContiguousArray<A>(_:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = specialized Sequence._copySequenceContents(initializing:)((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  outlined consume of Set<UIScene>.Iterator._Variant();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t specialized Sequence._copySequenceContents(initializing:)(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t specialized closure #1 in List<>.init<A, B, C>(_:id:rowContent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [ReactionHistoryEntry]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.listRowSeparator(_:edges:)>>.0, _TraitWritingModifier<ListRowInsetsTraitKey>>, _TraitWritingModifier<ListRowBackgroundTraitKey>>);
  lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type [ReactionHistoryEntry] and conformance [A], &demangling cache variable for type metadata for [ReactionHistoryEntry], MEMORY[0x24BEE12D8]);
  lazy protocol witness table accessor for type ReactionHistoryEntry and conformance ReactionHistoryEntry();
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.listRowSeparator(_:edges:)>>.0, _TraitWritingModifier<ListRowInsetsTraitKey>>, _TraitWritingModifier<ListRowBackgroundTraitKey>> and conformance <> ModifiedContent<A, B>();
  return ForEach<>.init(_:id:content:)();
}

uint64_t specialized _ArrayProtocol.filter(_:)(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char v14;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;

  v3 = 0;
  v4 = *(_QWORD *)(result + 16);
  v5 = result + 72;
  v23 = result + 72;
  v24 = MEMORY[0x24BEE4AF8];
  v27 = v4;
LABEL_2:
  if (v3 <= v4)
    v6 = v4;
  else
    v6 = v3;
  v28 = v6 + 1;
  v7 = (_BYTE *)(v5 + 48 * v3);
  while (1)
  {
    if (v4 == v3)
      return v24;
    v8 = v3++;
    if (v28 == v3)
      break;
    v10 = *((_QWORD *)v7 - 5);
    v9 = *((_QWORD *)v7 - 4);
    v11 = *((_QWORD *)v7 - 3);
    v12 = *((_QWORD *)v7 - 2);
    v13 = (void *)*((_QWORD *)v7 - 1);
    v14 = *v7;
    if (v11 == a2 && v12 == a3)
    {
      v11 = a2;
      v12 = a3;
LABEL_15:
      v16 = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v17 = v24;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(v24 + 16) + 1, 1);
        v17 = v24;
      }
      v19 = *(_QWORD *)(v17 + 16);
      v18 = *(_QWORD *)(v17 + 24);
      v20 = v19 + 1;
      v4 = v27;
      if (v19 >= v18 >> 1)
      {
        v22 = v19 + 1;
        v29 = *(_QWORD *)(v17 + 16);
        result = specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
        v20 = v22;
        v4 = v27;
        v19 = v29;
        v17 = v24;
      }
      v3 = v8 + 1;
      *(_QWORD *)(v17 + 16) = v20;
      v24 = v17;
      v21 = v17 + 48 * v19;
      *(_QWORD *)(v21 + 32) = v10;
      *(_QWORD *)(v21 + 40) = v9;
      *(_QWORD *)(v21 + 48) = v11;
      *(_QWORD *)(v21 + 56) = v12;
      *(_QWORD *)(v21 + 64) = v13;
      *(_BYTE *)(v21 + 72) = v14;
      v5 = v23;
      goto LABEL_2;
    }
    v7 += 48;
    result = _stringCompareWithSmolCheck(_:_:expecting:)();
    v4 = v27;
    if ((result & 1) != 0)
      goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t specialized static ReactionHistoryEntry.ImageProvider.== infix(_:_:)(void *a1, char a2, void *a3, char a4)
{
  char v6;
  id v7;
  id v8;

  if ((a2 & 1) != 0)
  {
    if ((a4 & 1) == 0)
      goto LABEL_3;
LABEL_5:
    type metadata accessor for UIView(0, &lazy cache variable for type metadata for NSObject);
    v7 = a1;
    v8 = a3;
    v6 = static NSObject.== infix(_:_:)();

    return v6 & 1;
  }
  if ((a4 & 1) == 0)
    goto LABEL_5;
LABEL_3:
  v6 = 0;
  return v6 & 1;
}

uint64_t sub_21FDBAC2C()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t partial apply for implicit closure #1 in ReactionHistoryEntry.init<A>(displayName:reaction:avatarImage:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, unint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 16) - 8) + 16))(a1, v1+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 16) - 8) + 80)));
}

uint64_t specialized static ReactionHistoryEntry.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char v9;
  char v10;
  uint64_t result;
  char v12;
  id v13;
  id v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(void **)(a1 + 32);
  v5 = *(_BYTE *)(a1 + 40);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(void **)(a2 + 32);
  v9 = *(_BYTE *)(a2 + 40);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v10 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v10 & 1) != 0))
  {
    if (v2 == v6 && v3 == v7 || (v12 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v12 & 1) != 0))
    {
      if ((v5 & 1) != 0)
      {
        if ((v9 & 1) != 0)
        {
LABEL_11:
          type metadata accessor for UIView(0, &lazy cache variable for type metadata for NSObject);
          v13 = v4;
          v14 = v8;
          v15 = static NSObject.== infix(_:_:)();

          if ((v15 & 1) != 0)
            return 1;
        }
      }
      else if ((v9 & 1) == 0)
      {
        goto LABEL_11;
      }
      return 0;
    }
  }
  return result;
}

uint64_t outlined retain of String?(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t outlined release of String?(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t specialized ReactionFilter.init(filter:reactions:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  BOOL v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v6 = 0;
  v7 = 0;
  v8 = a5 + 64;
  v9 = 1 << *(_BYTE *)(a5 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a5 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  do
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v6 << 6);
    }
    else
    {
      v17 = v6 + 1;
      if (__OFADD__(v6, 1))
        goto LABEL_27;
      if (v17 >= v12)
      {
LABEL_25:
        *a6 = result;
        a6[1] = a2;
        a6[2] = a3;
        a6[3] = a4;
        a6[4] = a5;
        a6[5] = v7;
        return result;
      }
      v18 = *(_QWORD *)(v8 + 8 * v17);
      ++v6;
      if (!v18)
      {
        v6 = v17 + 1;
        if (v17 + 1 >= v12)
          goto LABEL_25;
        v18 = *(_QWORD *)(v8 + 8 * v6);
        if (!v18)
        {
          v6 = v17 + 2;
          if (v17 + 2 >= v12)
            goto LABEL_25;
          v18 = *(_QWORD *)(v8 + 8 * v6);
          if (!v18)
          {
            v6 = v17 + 3;
            if (v17 + 3 >= v12)
              goto LABEL_25;
            v18 = *(_QWORD *)(v8 + 8 * v6);
            if (!v18)
            {
              v6 = v17 + 4;
              if (v17 + 4 >= v12)
                goto LABEL_25;
              v18 = *(_QWORD *)(v8 + 8 * v6);
              if (!v18)
              {
                v19 = v17 + 5;
                if (v19 >= v12)
                  goto LABEL_25;
                v18 = *(_QWORD *)(v8 + 8 * v19);
                if (!v18)
                {
                  while (1)
                  {
                    v6 = v19 + 1;
                    if (__OFADD__(v19, 1))
                      goto LABEL_28;
                    if (v6 >= v12)
                      goto LABEL_25;
                    v18 = *(_QWORD *)(v8 + 8 * v6);
                    ++v19;
                    if (v18)
                      goto LABEL_24;
                  }
                }
                v6 = v19;
              }
            }
          }
        }
      }
LABEL_24:
      v11 = (v18 - 1) & v18;
      v14 = __clz(__rbit64(v18)) + (v6 << 6);
    }
    v15 = *(_QWORD *)(*(_QWORD *)(a5 + 56) + 8 * v14);
    v16 = __OFADD__(v7, v15);
    v7 += v15;
  }
  while (!v16);
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t partial apply for closure #1 in ReactionFilter.body.getter()
{
  uint64_t v0;

  return closure #1 in ReactionFilter.body.getter(*(__int128 **)(v0 + 16));
}

id outlined copy of ReactionHistoryEntry.ImageProvider?(id result, char a2)
{
  if (a2 != -1)
    return result;
  return result;
}

void outlined consume of ReactionHistoryEntry.ImageProvider?(id a1, char a2)
{
  if (a2 != -1)

}

unint64_t outlined copy of ReactionHistoryEntryAvatarImage.ImagePhase(unint64_t result)
{
  if (result >> 62 == 1)
    return (unint64_t)(id)(result & 0x3FFFFFFFFFFFFFFFLL);
  if (!(result >> 62))
    return swift_retain();
  return result;
}

void outlined consume of ReactionHistoryEntryAvatarImage.ImagePhase(unint64_t a1)
{
  if (a1 >> 62 == 1)
  {

  }
  else if (!(a1 >> 62))
  {
    swift_release();
  }
}

_QWORD *outlined init with take of ReactionHistoryEntryAvatarImage.ImagePhase(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return a2;
}

uint64_t outlined retain of ReactionHistoryEntry.ImageProvider?(uint64_t a1)
{
  outlined copy of ReactionHistoryEntry.ImageProvider?(*(id *)a1, *(_BYTE *)(a1 + 8));
  return a1;
}

unint64_t *outlined retain of ReactionHistoryEntryAvatarImage.ImagePhase(unint64_t *a1)
{
  outlined copy of ReactionHistoryEntryAvatarImage.ImagePhase(*a1);
  return a1;
}

uint64_t outlined retain of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t outlined release of ReactionHistoryEntry.ImageProvider?(uint64_t a1)
{
  outlined consume of ReactionHistoryEntry.ImageProvider?(*(id *)a1, *(_BYTE *)(a1 + 8));
  return a1;
}

unint64_t *outlined release of ReactionHistoryEntryAvatarImage.ImagePhase(unint64_t *a1)
{
  outlined consume of ReactionHistoryEntryAvatarImage.ImagePhase(*a1);
  return a1;
}

uint64_t outlined release of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?(uint64_t a1)
{
  swift_release();
  return a1;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _MaskAlignmentEffect<Circle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _MaskAlignmentEffect<Circle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _MaskAlignmentEffect<Circle>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _MaskAlignmentEffect<Circle>>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<Image, _AspectRatioLayout> and conformance <> ModifiedContent<A, B>, MEMORY[0x24BDEBEE0]);
    v2[1] = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type _MaskAlignmentEffect<Circle> and conformance _MaskAlignmentEffect<A>, &demangling cache variable for type metadata for _MaskAlignmentEffect<Circle>, MEMORY[0x24BDEF828]);
    result = MEMORY[0x2207D4924](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _MaskAlignmentEffect<Circle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Image, _AspectRatioLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<Image, _AspectRatioLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Image, _AspectRatioLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Image, _AspectRatioLayout>);
    v2[0] = MEMORY[0x24BDF40E8];
    v2[1] = MEMORY[0x24BDEEC40];
    result = MEMORY[0x2207D4924](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Image, _AspectRatioLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>);
    v2[0] = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type _ShapeView<Circle, Color> and conformance _ShapeView<A, B>, &demangling cache variable for type metadata for _ShapeView<Circle, Color>, MEMORY[0x24BDEB358]);
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x2207D4924](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

void partial apply for closure #1 in ReactionHistoryEntryAvatarImage.body.getter()
{
  closure #1 in ReactionHistoryEntryAvatarImage.body.getter();
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();
  if (*(unsigned __int8 *)(v0 + 56) != 255)

  outlined consume of ReactionHistoryEntryAvatarImage.ImagePhase(*(_QWORD *)(v0 + 64));
  swift_release();
  return swift_deallocObject();
}

void partial apply for implicit closure #2 in implicit closure #1 in ReactionHistoryEntryAvatarImage.body.getter(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  specialized ReactionHistoryEntryAvatarImage.load(oldImageProvider:imageProvider:)(a3, a4);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@guaranteed ReactionHistoryEntry.ImageProvider?, @guaranteed ReactionHistoryEntry.ImageProvider?) -> ()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v2 + 16))(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8), *(_QWORD *)a2, *(unsigned __int8 *)(a2 + 8));
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _MaskAlignmentEffect<Circle>>, ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _MaskAlignmentEffect<Circle>>, ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _MaskAlignmentEffect<Circle>>, ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>> and conformance <> _ConditionalContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _MaskAlignmentEffect<Circle>>, ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _MaskAlignmentEffect<Circle>> and conformance <> ModifiedContent<A, B>();
    v2[1] = lazy protocol witness table accessor for type ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout> and conformance <> ModifiedContent<A, B>();
    result = MEMORY[0x2207D4924](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _MaskAlignmentEffect<Circle>>, ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ReactionHistoryEntry.ImageProvider and conformance ReactionHistoryEntry.ImageProvider()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ReactionHistoryEntry.ImageProvider and conformance ReactionHistoryEntry.ImageProvider;
  if (!lazy protocol witness table cache variable for type ReactionHistoryEntry.ImageProvider and conformance ReactionHistoryEntry.ImageProvider)
  {
    result = MEMORY[0x2207D4924](&protocol conformance descriptor for ReactionHistoryEntry.ImageProvider, &type metadata for ReactionHistoryEntry.ImageProvider);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ReactionHistoryEntry.ImageProvider and conformance ReactionHistoryEntry.ImageProvider);
  }
  return result;
}

uint64_t outlined release of ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _MaskAlignmentEffect<Circle>>, ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>>, _AppearanceActionModifier>(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v5;

  v2 = *(_QWORD *)(a1 + 96);
  v3 = *(_QWORD *)(a1 + 112);
  v5 = *(_BYTE *)(a1 + 88);
  outlined consume of _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _MaskAlignmentEffect<Circle>>, ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>>.Storage(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), v5);
  outlined consume of (@escaping @callee_guaranteed () -> ())?(v2);
  outlined consume of (@escaping @callee_guaranteed () -> ())?(v3);
  return a1;
}

uint64_t sub_21FDBB44C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 112))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_21FDBB47C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 120);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_21FDBB4C0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 160))();
  *a2 = result;
  return result;
}

uint64_t sub_21FDBB4F0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 168);
  v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

unint64_t lazy protocol witness table accessor for type ReactionHistoryEntry and conformance ReactionHistoryEntry()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ReactionHistoryEntry and conformance ReactionHistoryEntry;
  if (!lazy protocol witness table cache variable for type ReactionHistoryEntry and conformance ReactionHistoryEntry)
  {
    result = MEMORY[0x2207D4924](&protocol conformance descriptor for ReactionHistoryEntry, &type metadata for ReactionHistoryEntry);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ReactionHistoryEntry and conformance ReactionHistoryEntry);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ReactionHistoryEntry and conformance ReactionHistoryEntry;
  if (!lazy protocol witness table cache variable for type ReactionHistoryEntry and conformance ReactionHistoryEntry)
  {
    result = MEMORY[0x2207D4924](&protocol conformance descriptor for ReactionHistoryEntry, &type metadata for ReactionHistoryEntry);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ReactionHistoryEntry and conformance ReactionHistoryEntry);
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in ReactionFilter()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in ReactionHistoryEntryAvatarImage()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in ReactionHistoryEntryView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in ReactionHistoryView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21FDBB5BC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 8);
  return swift_retain();
}

uint64_t sub_21FDBB5C8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 8) = v3;
  return result;
}

uint64_t sub_21FDBB608(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(_QWORD **)a1 + 136))();
}

uint64_t sub_21FDBB634(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(_QWORD **)a1 + 184))();
}

uint64_t sub_21FDBB660@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 208))();
  *a2 = result;
  return result;
}

uint64_t sub_21FDBB690(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 216);
  v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_21FDBB6C0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 232))();
  *a2 = result;
  return result;
}

uint64_t sub_21FDBB6F0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 240);
  v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ReactionHistoryEntry()
{
  return &type metadata for ReactionHistoryEntry;
}

uint64_t initializeBufferWithCopyOfBuffer for ReactionHistoryEntry.ImageProvider(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v5 = v3;
  return a1;
}

void destroy for ReactionHistoryEntry.ImageProvider(id *a1)
{

}

uint64_t assignWithCopy for ReactionHistoryEntry.ImageProvider(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  void *v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v6 = v3;

  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for ReactionHistoryEntry.ImageProvider(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;

  return a1;
}

uint64_t getEnumTagSinglePayload for ReactionHistoryEntry.ImageProvider(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ReactionHistoryEntry.ImageProvider(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t getEnumTag for ReactionHistoryEntry.ImageProvider(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t destructiveInjectEnumTag for ReactionHistoryEntry.ImageProvider(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ReactionHistoryEntry.ImageProvider()
{
  return &type metadata for ReactionHistoryEntry.ImageProvider;
}

uint64_t destroy for ReactionFilter()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ReactionFilter(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ReactionFilter(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ReactionFilter(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReactionFilter(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReactionFilter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReactionFilter()
{
  return &type metadata for ReactionFilter;
}

uint64_t destroy for ReactionHistoryEntryAvatarImage(uint64_t a1)
{

  swift_release();
  swift_release();
  if (*(unsigned __int8 *)(a1 + 40) != 255)

  outlined consume of ReactionHistoryEntryAvatarImage.ImagePhase(*(_QWORD *)(a1 + 48));
  return swift_release();
}

uint64_t initializeWithCopy for ReactionHistoryEntryAvatarImage(uint64_t a1, uint64_t a2)
{
  void *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  id v9;
  void *v10;
  id v11;
  unint64_t v12;
  uint64_t v13;

  v4 = *(void **)a2;
  v5 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = a2 + 32;
  v8 = *(unsigned __int8 *)(a2 + 40);
  v9 = v4;
  swift_retain();
  swift_retain();
  if (v8 == 255)
  {
    *(_QWORD *)(a1 + 32) = *(_QWORD *)v7;
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(v7 + 8);
  }
  else
  {
    v10 = *(void **)v7;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)v7;
    *(_BYTE *)(a1 + 40) = v8 & 1;
    v11 = v10;
  }
  v12 = *(_QWORD *)(a2 + 48);
  outlined copy of ReactionHistoryEntryAvatarImage.ImagePhase(v12);
  v13 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v12;
  *(_QWORD *)(a1 + 56) = v13;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ReactionHistoryEntryAvatarImage(uint64_t a1, uint64_t a2)
{
  void *v4;
  char v5;
  void *v6;
  id v7;
  void **v8;
  void **v9;
  int v10;
  char v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  unint64_t v18;
  unint64_t v19;

  v4 = *(void **)a2;
  v5 = *(_BYTE *)(a2 + 8);
  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v5;
  v7 = v4;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  v8 = (void **)(a1 + 32);
  v9 = (void **)(a2 + 32);
  v10 = *(unsigned __int8 *)(a2 + 40);
  if (*(unsigned __int8 *)(a1 + 40) == 255)
  {
    if (v10 == 255)
    {
      v12 = *v9;
      *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
      *v8 = v12;
    }
    else
    {
      v16 = *v9;
      *(_QWORD *)(a1 + 32) = *v9;
      *(_BYTE *)(a1 + 40) = v10 & 1;
      v17 = v16;
    }
  }
  else if (v10 == 255)
  {
    outlined destroy of ReactionHistoryEntry.ImageProvider((id *)(a1 + 32));
    v11 = *(_BYTE *)(a2 + 40);
    *v8 = *v9;
    *(_BYTE *)(a1 + 40) = v11;
  }
  else
  {
    v13 = *v9;
    v14 = *(void **)(a1 + 32);
    *(_QWORD *)(a1 + 32) = *v9;
    *(_BYTE *)(a1 + 40) = v10 & 1;
    v15 = v13;

  }
  v18 = *(_QWORD *)(a2 + 48);
  outlined copy of ReactionHistoryEntryAvatarImage.ImagePhase(v18);
  v19 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v18;
  outlined consume of ReactionHistoryEntryAvatarImage.ImagePhase(v19);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  return a1;
}

id *outlined destroy of ReactionHistoryEntry.ImageProvider(id *a1)
{

  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ReactionHistoryEntryAvatarImage(uint64_t a1, uint64_t a2)
{
  char v4;
  void *v5;
  _QWORD *v6;
  int v7;
  void *v8;
  unint64_t v9;

  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  v6 = (_QWORD *)(a2 + 32);
  if (*(unsigned __int8 *)(a1 + 40) != 255)
  {
    v7 = *(unsigned __int8 *)(a2 + 40);
    if (v7 != 255)
    {
      v8 = *(void **)(a1 + 32);
      *(_QWORD *)(a1 + 32) = *v6;
      *(_BYTE *)(a1 + 40) = v7 & 1;

      goto LABEL_6;
    }
    outlined destroy of ReactionHistoryEntry.ImageProvider((id *)(a1 + 32));
  }
  *(_QWORD *)(a1 + 32) = *v6;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
LABEL_6:
  v9 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  outlined consume of ReactionHistoryEntryAvatarImage.ImagePhase(v9);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ReactionHistoryEntryAvatarImage(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ReactionHistoryEntryAvatarImage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReactionHistoryEntryAvatarImage()
{
  return &type metadata for ReactionHistoryEntryAvatarImage;
}

unint64_t *initializeBufferWithCopyOfBuffer for ReactionHistoryEntryAvatarImage.ImagePhase(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  outlined copy of ReactionHistoryEntryAvatarImage.ImagePhase(*a2);
  *a1 = v3;
  return a1;
}

void destroy for ReactionHistoryEntryAvatarImage.ImagePhase(unint64_t *a1)
{
  outlined consume of ReactionHistoryEntryAvatarImage.ImagePhase(*a1);
}

unint64_t *assignWithCopy for ReactionHistoryEntryAvatarImage.ImagePhase(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a2;
  outlined copy of ReactionHistoryEntryAvatarImage.ImagePhase(*a2);
  v4 = *a1;
  *a1 = v3;
  outlined consume of ReactionHistoryEntryAvatarImage.ImagePhase(v4);
  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

unint64_t *assignWithTake for ReactionHistoryEntryAvatarImage.ImagePhase(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  outlined consume of ReactionHistoryEntryAvatarImage.ImagePhase(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReactionHistoryEntryAvatarImage.ImagePhase(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 126);
  v3 = (((*(_QWORD *)a1 >> 57) >> 5) | (4 * ((*(_QWORD *)a1 >> 57) & 0x18 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7D)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ReactionHistoryEntryAvatarImage.ImagePhase(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7D)
  {
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t getEnumTag for ReactionHistoryEntryAvatarImage.ImagePhase(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1 >> 62;
  if (v1 <= 1)
    return v1;
  else
    return (*a1 >> 3) + 2;
}

_QWORD *destructiveProjectEnumData for ReactionHistoryEntryAvatarImage.ImagePhase(_QWORD *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *destructiveInjectEnumTag for ReactionHistoryEntryAvatarImage.ImagePhase(unint64_t *result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  if (a2 < 2)
  {
    v2 = *result & 0xFFFFFFFFFFFFFF8;
    v3 = a2 << 62;
  }
  else
  {
    v2 = 8 * (a2 - 2);
    v3 = 0x8000000000000000;
  }
  *result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for ReactionHistoryEntryAvatarImage.ImagePhase()
{
  return &type metadata for ReactionHistoryEntryAvatarImage.ImagePhase;
}

void destroy for ReactionHistoryEntryAvatarImage.LoadingState(uint64_t a1)
{
  swift_release();
  if (*(unsigned __int8 *)(a1 + 16) != 255)

  outlined consume of ReactionHistoryEntryAvatarImage.ImagePhase(*(_QWORD *)(a1 + 24));
}

uint64_t initializeWithCopy for ReactionHistoryEntryAvatarImage.LoadingState(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  int v6;
  void *v7;
  id v8;
  unint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = (_QWORD *)(a1 + 8);
  v5 = a2 + 8;
  v6 = *(unsigned __int8 *)(a2 + 16);
  swift_retain();
  if (v6 == 255)
  {
    *v4 = *(_QWORD *)v5;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(v5 + 8);
  }
  else
  {
    v7 = *(void **)v5;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)v5;
    *(_BYTE *)(a1 + 16) = v6 & 1;
    v8 = v7;
  }
  v9 = *(_QWORD *)(a2 + 24);
  outlined copy of ReactionHistoryEntryAvatarImage.ImagePhase(v9);
  *(_QWORD *)(a1 + 24) = v9;
  return a1;
}

uint64_t assignWithCopy for ReactionHistoryEntryAvatarImage.LoadingState(uint64_t a1, uint64_t a2)
{
  void **v4;
  void **v5;
  int v6;
  char v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  unint64_t v14;
  unint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  v4 = (void **)(a1 + 8);
  v5 = (void **)(a2 + 8);
  v6 = *(unsigned __int8 *)(a2 + 16);
  if (*(unsigned __int8 *)(a1 + 16) == 255)
  {
    if (v6 == 255)
    {
      v8 = *v5;
      *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
      *v4 = v8;
    }
    else
    {
      v12 = *v5;
      *(_QWORD *)(a1 + 8) = *v5;
      *(_BYTE *)(a1 + 16) = v6 & 1;
      v13 = v12;
    }
  }
  else if (v6 == 255)
  {
    outlined destroy of ReactionHistoryEntry.ImageProvider((id *)(a1 + 8));
    v7 = *(_BYTE *)(a2 + 16);
    *v4 = *v5;
    *(_BYTE *)(a1 + 16) = v7;
  }
  else
  {
    v9 = *v5;
    v10 = *(void **)(a1 + 8);
    *(_QWORD *)(a1 + 8) = *v5;
    *(_BYTE *)(a1 + 16) = v6 & 1;
    v11 = v9;

  }
  v14 = *(_QWORD *)(a2 + 24);
  outlined copy of ReactionHistoryEntryAvatarImage.ImagePhase(v14);
  v15 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v14;
  outlined consume of ReactionHistoryEntryAvatarImage.ImagePhase(v15);
  return a1;
}

uint64_t assignWithTake for ReactionHistoryEntryAvatarImage.LoadingState(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  int v5;
  void *v6;
  unint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v4 = (_QWORD *)(a2 + 8);
  if (*(unsigned __int8 *)(a1 + 16) != 255)
  {
    v5 = *(unsigned __int8 *)(a2 + 16);
    if (v5 != 255)
    {
      v6 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = *v4;
      *(_BYTE *)(a1 + 16) = v5 & 1;

      goto LABEL_6;
    }
    outlined destroy of ReactionHistoryEntry.ImageProvider((id *)(a1 + 8));
  }
  *(_QWORD *)(a1 + 8) = *v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
LABEL_6:
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  outlined consume of ReactionHistoryEntryAvatarImage.ImagePhase(v7);
  return a1;
}

ValueMetadata *type metadata accessor for ReactionHistoryEntryAvatarImage.LoadingState()
{
  return &type metadata for ReactionHistoryEntryAvatarImage.LoadingState;
}

void destroy for ReactionHistoryEntry(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

uint64_t initializeWithCopy for ReactionHistoryEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char v6;
  id v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(void **)(a2 + 32);
  v6 = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 40) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = v5;
  return a1;
}

uint64_t assignWithCopy for ReactionHistoryEntry(uint64_t a1, uint64_t a2)
{
  void *v4;
  char v5;
  void *v6;
  id v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a2 + 32);
  v5 = *(_BYTE *)(a2 + 40);
  v6 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = v5;
  v7 = v4;

  return a1;
}

uint64_t assignWithTake for ReactionHistoryEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_BYTE *)(a2 + 40);
  v7 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = v6;

  return a1;
}

uint64_t getEnumTagSinglePayload for ReactionHistoryEntry(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReactionHistoryEntry(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReactionHistoryEntryView()
{
  return &type metadata for ReactionHistoryEntryView;
}

ValueMetadata *type metadata accessor for ReactionHistoryView()
{
  return &type metadata for ReactionHistoryView;
}

uint64_t ObjC metadata update function for ReactionHistoryViewModel()
{
  return type metadata accessor for ReactionHistoryViewModel();
}

void type metadata completion function for ReactionHistoryViewModel()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for Published<String?>(319, (unint64_t *)&lazy cache variable for type metadata for Published<String?>, &demangling cache variable for type metadata for String?);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Published<String?>(319, &lazy cache variable for type metadata for Published<[ReactionHistoryEntry]>, &demangling cache variable for type metadata for [ReactionHistoryEntry]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for ReactionHistoryViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ReactionHistoryViewModel.filter.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of ReactionHistoryViewModel.filter.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of ReactionHistoryViewModel.filter.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of ReactionHistoryViewModel.$filter.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of ReactionHistoryViewModel.$filter.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of ReactionHistoryViewModel.$filter.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of ReactionHistoryViewModel.entries.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of ReactionHistoryViewModel.entries.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of ReactionHistoryViewModel.entries.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of ReactionHistoryViewModel.$entries.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of ReactionHistoryViewModel.$entries.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of ReactionHistoryViewModel.$entries.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of ReactionHistoryViewModel.visibleEntries.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of ReactionHistoryViewModel.visibleEntries.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of ReactionHistoryViewModel.visibleEntries.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of ReactionHistoryViewModel.reactionCounts.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of ReactionHistoryViewModel.reactionCounts.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of ReactionHistoryViewModel.reactionCounts.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of ReactionHistoryViewModel.__allocating_init(entries:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 256))();
}

void type metadata accessor for Published<String?>(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v4 = type metadata accessor for Published();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_21FDBC774()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ScrollView<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0>);
  lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type ScrollView<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0> and conformance ScrollView<A>, &demangling cache variable for type metadata for ScrollView<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0>, MEMORY[0x24BDEB238]);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21FDBC7DC()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _MaskAlignmentEffect<Circle>>, ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>>, _AppearanceActionModifier>);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ReactionHistoryEntry.ImageProvider?);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _MaskAlignmentEffect<Circle>>, ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _MaskAlignmentEffect<Circle>>, ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>>, _AppearanceActionModifier>, (uint64_t (*)(void))lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _FrameLayout>, _MaskAlignmentEffect<Circle>>, ModifiedContent<_ShapeView<Circle, Color>, _FrameLayout>> and conformance <> _ConditionalContent<A, B>, MEMORY[0x24BDF0910]);
  lazy protocol witness table accessor for type ReactionHistoryEntry.ImageProvider? and conformance <A> A?(&lazy protocol witness table cache variable for type ReactionHistoryEntry.ImageProvider? and conformance <A> A?, &demangling cache variable for type metadata for ReactionHistoryEntry.ImageProvider?, (uint64_t (*)(void))lazy protocol witness table accessor for type ReactionHistoryEntry.ImageProvider and conformance ReactionHistoryEntry.ImageProvider, MEMORY[0x24BEE4AB8]);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21FDBC88C()
{
  return lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type HStack<TupleView<(ReactionHistoryEntryAvatarImage, Text, Spacer, Text)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(ReactionHistoryEntryAvatarImage, Text, Spacer, Text)>>, MEMORY[0x24BDF4498]);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(ReactionFilter, ModifiedContent<Spacer, _FrameLayout>, <<opaque return type of View.listStyle<A>(_:)>>.0)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(ReactionFilter, ModifiedContent<Spacer, _FrameLayout>, <<opaque return type of View.listStyle<A>(_:)>>.0)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(ReactionFilter, ModifiedContent<Spacer, _FrameLayout>, <<opaque return type of View.listStyle<A>(_:)>>.0)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ReactionFilter, ModifiedContent<Spacer, _FrameLayout>, <<opaque return type of View.listStyle<A>(_:)>>.0)>>, _PaddingLayout>);
    v2[0] = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type VStack<TupleView<(ReactionFilter, ModifiedContent<Spacer, _FrameLayout>, <<opaque return type of View.listStyle<A>(_:)>>.0)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(ReactionFilter, ModifiedContent<Spacer, _FrameLayout>, <<opaque return type of View.listStyle<A>(_:)>>.0)>>, MEMORY[0x24BDF4700]);
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x2207D4924](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(ReactionFilter, ModifiedContent<Spacer, _FrameLayout>, <<opaque return type of View.listStyle<A>(_:)>>.0)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

_OWORD *outlined init with take of Any(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t partial apply for specialized closure #1 in List<>.init<A, B, C>(_:id:rowContent:)()
{
  uint64_t *v0;

  return specialized closure #1 in List<>.init<A, B, C>(_:id:rowContent:)(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t lazy protocol witness table accessor for type ReactionHistoryEntry.ImageProvider? and conformance <A> A?(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3();
    result = MEMORY[0x2207D4924](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.listRowSeparator(_:edges:)>>.0, _TraitWritingModifier<ListRowInsetsTraitKey>>, _TraitWritingModifier<ListRowBackgroundTraitKey>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.listRowSeparator(_:edges:)>>.0, _TraitWritingModifier<ListRowInsetsTraitKey>>, _TraitWritingModifier<ListRowBackgroundTraitKey>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.listRowSeparator(_:edges:)>>.0, _TraitWritingModifier<ListRowInsetsTraitKey>>, _TraitWritingModifier<ListRowBackgroundTraitKey>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.listRowSeparator(_:edges:)>>.0, _TraitWritingModifier<ListRowInsetsTraitKey>>, _TraitWritingModifier<ListRowBackgroundTraitKey>>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.listRowSeparator(_:edges:)>>.0, _TraitWritingModifier<ListRowInsetsTraitKey>> and conformance <> ModifiedContent<A, B>();
    v2[1] = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type _TraitWritingModifier<ListRowBackgroundTraitKey> and conformance _TraitWritingModifier<A>, &demangling cache variable for type metadata for _TraitWritingModifier<ListRowBackgroundTraitKey>, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x2207D4924](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.listRowSeparator(_:edges:)>>.0, _TraitWritingModifier<ListRowInsetsTraitKey>>, _TraitWritingModifier<ListRowBackgroundTraitKey>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.listRowSeparator(_:edges:)>>.0, _TraitWritingModifier<ListRowInsetsTraitKey>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[4];

  result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.listRowSeparator(_:edges:)>>.0, _TraitWritingModifier<ListRowInsetsTraitKey>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.listRowSeparator(_:edges:)>>.0, _TraitWritingModifier<ListRowInsetsTraitKey>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.listRowSeparator(_:edges:)>>.0, _TraitWritingModifier<ListRowInsetsTraitKey>>);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of View.listSectionSeparator(_:edges:)>>.0);
    lazy protocol witness table accessor for type ReactionHistoryEntryView and conformance ReactionHistoryEntryView();
    v3[2] = v2;
    v3[3] = swift_getOpaqueTypeConformance2();
    v3[0] = swift_getOpaqueTypeConformance2();
    v3[1] = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type _TraitWritingModifier<ListRowInsetsTraitKey> and conformance _TraitWritingModifier<A>, &demangling cache variable for type metadata for _TraitWritingModifier<ListRowInsetsTraitKey>, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x2207D4924](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.listRowSeparator(_:edges:)>>.0, _TraitWritingModifier<ListRowInsetsTraitKey>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ReactionHistoryEntryView and conformance ReactionHistoryEntryView()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ReactionHistoryEntryView and conformance ReactionHistoryEntryView;
  if (!lazy protocol witness table cache variable for type ReactionHistoryEntryView and conformance ReactionHistoryEntryView)
  {
    result = MEMORY[0x2207D4924](&protocol conformance descriptor for ReactionHistoryEntryView, &type metadata for ReactionHistoryEntryView);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ReactionHistoryEntryView and conformance ReactionHistoryEntryView);
  }
  return result;
}

uint64_t sub_21FDBCB54()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for specialized closure #1 in closure #1 in List<>.init<A, B, C>(_:id:rowContent:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(_OWORD *);
  __int128 v3;
  uint64_t v4;
  char v5;
  _OWORD v7[2];
  uint64_t v8;
  char v9;

  v2 = *(uint64_t (**)(_OWORD *))(v1 + 16);
  v3 = *(_OWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_BYTE *)(a1 + 40);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  v8 = v4;
  v9 = v5;
  return v2(v7);
}

uint64_t outlined consume of Text.Storage(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease();
}

uint64_t outlined copy of Text.Storage(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain();
  else
    return swift_bridgeObjectRetain();
}

void specialized ReactionHistoryEntryAvatarImage.load(oldImageProvider:imageProvider:)(void *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  __int128 v11;
  void *v12;
  int v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  char v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  id v43[2];
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  char v49[8];
  _BYTE v50[16];
  unint64_t v51;
  _BYTE v52[24];

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_OWORD *)(v2 + 40);
  v44 = *(_OWORD *)(v2 + 24);
  v45 = v10;
  v46 = *(_QWORD *)(v2 + 56);
  v11 = *(_OWORD *)(v2 + 40);
  v39 = *(_OWORD *)(v2 + 24);
  v40 = v11;
  v41 = *(_QWORD *)(v2 + 56);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ReactionHistoryEntryAvatarImage.LoadingState>);
  State.wrappedValue.getter();
  swift_release();
  v12 = (void *)*((_QWORD *)&v47 + 1);
  v13 = v48;
  outlined consume of ReactionHistoryEntryAvatarImage.ImagePhase(*((unint64_t *)&v48 + 1));
  if (v13 == 255)
  {
    if (a2 == -1)
      return;
    goto LABEL_10;
  }
  if (a2 == -1)
    goto LABEL_5;
  if ((v13 & 1) != 0)
  {
    if ((a2 & 1) == 0)
      goto LABEL_5;
LABEL_9:
    type metadata accessor for UIView(0, &lazy cache variable for type metadata for NSObject);
    outlined copy of ReactionHistoryEntry.ImageProvider?(a1, a2);
    outlined copy of ReactionHistoryEntry.ImageProvider?(v12, v13);
    v14 = static NSObject.== infix(_:_:)();
    outlined consume of ReactionHistoryEntry.ImageProvider?(a1, a2);
    outlined consume of ReactionHistoryEntry.ImageProvider?(v12, v13);
    outlined consume of ReactionHistoryEntry.ImageProvider?(v12, v13);
    if ((v14 & 1) != 0)
      return;
    goto LABEL_10;
  }
  if ((a2 & 1) == 0)
    goto LABEL_9;
LABEL_5:
  outlined consume of ReactionHistoryEntry.ImageProvider?(v12, v13);
LABEL_10:
  v39 = v44;
  v40 = v45;
  v41 = v46;
  State.wrappedValue.getter();
  v15 = v47;
  v16 = *((_QWORD *)&v48 + 1);
  outlined consume of ReactionHistoryEntry.ImageProvider?(*((id *)&v47 + 1), v48);
  outlined consume of ReactionHistoryEntryAvatarImage.ImagePhase(v16);
  v18 = MEMORY[0x24BEE4AE0];
  if (v15)
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
    MEMORY[0x2207D406C](v15, v18 + 8, v19, MEMORY[0x24BEE3F20]);
    swift_release();
  }
  if (a2 == -1)
  {
    MEMORY[0x24BDAC7A8](*(_QWORD *)(v3 + 16), v17);
    *(&v30 - 2) = v3;
    withTransaction<A>(_:_:)();
  }
  else
  {
    outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>((uint64_t)&v46, (uint64_t)v52, &demangling cache variable for type metadata for AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?);
    v47 = v44;
    v48 = v45;
    outlined init with take of ReactionHistoryEntryAvatarImage.ImagePhase((_QWORD *)&v48 + 1, &v51);
    outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>((uint64_t)&v47 + 8, (uint64_t)v50, &demangling cache variable for type metadata for ReactionHistoryEntry.ImageProvider?);
    v20 = outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>((uint64_t)&v47, (uint64_t)v49, &demangling cache variable for type metadata for Task<(), Error>?);
    if ((a2 & 1) != 0)
    {
      v23 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v9, 1, 1, v23);
      outlined init with take of ReactionHistoryEntry.ImageProvider((uint64_t *)v3, (uint64_t)v43);
      v42 = *(_QWORD *)(v3 + 16);
      type metadata accessor for MainActor();
      outlined copy of ReactionHistoryEntry.ImageProvider?(a1, a2);
      outlined copy of ReactionHistoryEntry.ImageProvider?(a1, a2);
      outlined copy of ReactionHistoryEntry.ImageProvider?(a1, a2);
      outlined retain of ReactionHistoryEntry.ImageProvider(v43);
      outlined retain of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)&v42);
      outlined retain of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)v49);
      outlined retain of ReactionHistoryEntry.ImageProvider?((uint64_t)v50);
      outlined retain of ReactionHistoryEntryAvatarImage.ImagePhase(&v51);
      outlined retain of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)v52);
      v24 = static MainActor.shared.getter();
      v25 = swift_allocObject();
      v26 = MEMORY[0x24BEE6930];
      *(_QWORD *)(v25 + 16) = v24;
      *(_QWORD *)(v25 + 24) = v26;
      *(_QWORD *)(v25 + 32) = a1;
      v27 = *(_OWORD *)(v3 + 16);
      *(_OWORD *)(v25 + 40) = *(_OWORD *)v3;
      *(_OWORD *)(v25 + 56) = v27;
      v28 = *(_OWORD *)(v3 + 48);
      *(_OWORD *)(v25 + 72) = *(_OWORD *)(v3 + 32);
      *(_OWORD *)(v25 + 88) = v28;
      v29 = _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5((uint64_t)v9, (uint64_t)&async function pointer to partial apply for closure #3 in ReactionHistoryEntryAvatarImage.load(oldImageProvider:imageProvider:), v25);
      v39 = v44;
      v40 = v45;
      v41 = v46;
      outlined retain of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)v49);
      outlined retain of ReactionHistoryEntry.ImageProvider?((uint64_t)v50);
      outlined retain of ReactionHistoryEntryAvatarImage.ImagePhase(&v51);
      outlined retain of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)v52);
      State.wrappedValue.getter();
      swift_release();
      v39 = v44;
      v40 = v45;
      v41 = v46;
      v31 = v29;
      v32 = v36;
      v33 = v37;
      v34 = v38;
      State.wrappedValue.setter();
      outlined release of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)v49);
      outlined release of ReactionHistoryEntry.ImageProvider?((uint64_t)v50);
      outlined release of ReactionHistoryEntryAvatarImage.ImagePhase(&v51);
      outlined release of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)v52);
      outlined consume of ReactionHistoryEntry.ImageProvider?(a1, a2);
    }
    else
    {
      MEMORY[0x24BDAC7A8](v20, v21);
      *(&v30 - 2) = v3;
      *(&v30 - 1) = (uint64_t)a1;
      v22 = a1;
      withTransaction<A>(_:_:)();
    }
    v39 = v44;
    v40 = v45;
    v41 = v46;
    outlined copy of ReactionHistoryEntry.ImageProvider?(a1, a2);
    outlined retain of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)v49);
    outlined retain of ReactionHistoryEntry.ImageProvider?((uint64_t)v50);
    outlined retain of ReactionHistoryEntryAvatarImage.ImagePhase(&v51);
    outlined retain of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)v52);
    State.wrappedValue.getter();
    outlined consume of ReactionHistoryEntry.ImageProvider?(v36, v37);
    v39 = v44;
    v40 = v45;
    v41 = v46;
    v31 = v35;
    v32 = a1;
    v33 = a2 & 1;
    v34 = v38;
    State.wrappedValue.setter();
    outlined release of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)v49);
    outlined release of ReactionHistoryEntry.ImageProvider?((uint64_t)v50);
    outlined release of ReactionHistoryEntryAvatarImage.ImagePhase(&v51);
    outlined release of AnyLocation<ReactionHistoryEntryAvatarImage.LoadingState>?((uint64_t)v52);
    outlined consume of ReactionHistoryEntry.ImageProvider?(a1, a2);
  }
}

uint64_t partial apply for closure #1 in ReactionHistoryEntryAvatarImage.load(oldImageProvider:imageProvider:)()
{
  uint64_t v0;

  return closure #1 in ReactionHistoryEntryAvatarImage.load(oldImageProvider:imageProvider:)(*(_QWORD *)(v0 + 16));
}

uint64_t outlined init with take of ReactionHistoryEntry.ImageProvider(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *a1;
  *(_BYTE *)(a2 + 8) = *((_BYTE *)a1 + 8);
  *(_QWORD *)a2 = v2;
  return a2;
}

id *outlined retain of ReactionHistoryEntry.ImageProvider(id *a1)
{
  id v2;

  v2 = *a1;
  return a1;
}

uint64_t sub_21FDBD1D8()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  if (*(unsigned __int8 *)(v0 + 80) != 255)

  outlined consume of ReactionHistoryEntryAvatarImage.ImagePhase(*(_QWORD *)(v0 + 88));
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #3 in ReactionHistoryEntryAvatarImage.load(oldImageProvider:imageProvider:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = partial apply for closure #1 in ReactionPickerView.sendReaction(_:to:);
  return closure #3 in ReactionHistoryEntryAvatarImage.load(oldImageProvider:imageProvider:)(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

uint64_t partial apply for closure #2 in ReactionHistoryEntryAvatarImage.load(oldImageProvider:imageProvider:)()
{
  uint64_t v0;

  return closure #2 in ReactionHistoryEntryAvatarImage.load(oldImageProvider:imageProvider:)(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void partial apply for closure #1 in closure #3 in ReactionHistoryEntryAvatarImage.load(oldImageProvider:imageProvider:)(uint64_t a1)
{
  uint64_t v1;

  closure #1 in closure #3 in ReactionHistoryEntryAvatarImage.load(oldImageProvider:imageProvider:)(a1, *(void **)(v1 + 16));
}

uint64_t partial apply for closure #3 in closure #3 in ReactionHistoryEntryAvatarImage.load(oldImageProvider:imageProvider:)()
{
  uint64_t v0;

  return closure #3 in closure #3 in ReactionHistoryEntryAvatarImage.load(oldImageProvider:imageProvider:)(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_21FDBD2F4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<UIImage, Error>);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in closure #3 in ReactionHistoryEntryAvatarImage.load(oldImageProvider:imageProvider:)(uint64_t a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<UIImage, Error>);
  return closure #1 in closure #1 in closure #3 in ReactionHistoryEntryAvatarImage.load(oldImageProvider:imageProvider:)(a1, a2);
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in ReactionFilter.body.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<String?>);
  return Binding.wrappedValue.setter();
}

uint64_t partial apply for closure #2 in closure #1 in closure #1 in ReactionFilter.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return closure #2 in closure #1 in closure #1 in ReactionFilter.body.getter(*(__int128 **)(v1 + 16), a1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, MEMORY[0x24BDEBEE0]);
    v2[1] = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule> and conformance _InsettableBackgroundShapeModifier<A, B>, &demangling cache variable for type metadata for _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>, MEMORY[0x24BDF1330]);
    result = MEMORY[0x2207D4924](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>, MEMORY[0x24BDECC60]);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
    v2[1] = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Font?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Font?>, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2207D4924](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>);
    v2[0] = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type HStack<TupleView<(Text, Text)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(Text, Text)>>, MEMORY[0x24BDF4498]);
    v2[1] = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2207D4924](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t objectdestroy_53Tm()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #3 in closure #1 in closure #1 in ReactionFilter.body.getter(uint64_t *a1)
{
  uint64_t v1;

  return closure #3 in closure #1 in closure #1 in ReactionFilter.body.getter(a1, (__int128 *)(v1 + 16));
}

uint64_t sub_21FDBD694()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #3 in closure #1 in closure #1 in ReactionFilter.body.getter()
{
  return closure #1 in closure #3 in closure #1 in closure #1 in ReactionFilter.body.getter();
}

uint64_t partial apply for closure #2 in closure #3 in closure #1 in closure #1 in ReactionFilter.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return closure #2 in closure #3 in closure #1 in closure #1 in ReactionFilter.body.getter(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(__int128 **)(v1 + 32), a1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ClipEffect<Rectangle>>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ClipEffect<Rectangle>>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ClipEffect<Rectangle>>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ClipEffect<Rectangle>>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ClipEffect<Rectangle>> and conformance <> ModifiedContent<A, B>();
    v2[1] = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule> and conformance _InsettableBackgroundShapeModifier<A, B>, &demangling cache variable for type metadata for _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>, MEMORY[0x24BDF1330]);
    result = MEMORY[0x2207D4924](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ClipEffect<Rectangle>>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyleModifier<Color>>, Capsule>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ClipEffect<Rectangle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ClipEffect<Rectangle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ClipEffect<Rectangle>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ClipEffect<Rectangle>>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, MEMORY[0x24BDEBEE0]);
    v2[1] = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type _ClipEffect<Rectangle> and conformance _ClipEffect<A>, &demangling cache variable for type metadata for _ClipEffect<Rectangle>, MEMORY[0x24BDEB950]);
    result = MEMORY[0x2207D4924](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FrameLayout>, _ClipEffect<Rectangle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>, MEMORY[0x24BDECC60]);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
    v2[1] = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Font?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Font?>, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2207D4924](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>> and conformance <> ModifiedContent<A, B>();
    v2[1] = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2207D4924](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>();
    v2[1] = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type _BackgroundModifier<_ShapeView<Capsule, Color>> and conformance _BackgroundModifier<A>, &demangling cache variable for type metadata for _BackgroundModifier<_ShapeView<Capsule, Color>>, MEMORY[0x24BDEF370]);
    result = MEMORY[0x2207D4924](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _BackgroundModifier<_ShapeView<Capsule, Color>>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t sub_21FDBD9C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_21FDBD9F0()
{
  swift_retain();
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t sub_21FDBDA18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_21FDBDA40()
{
  swift_retain();
  return EnvironmentValues.font.setter();
}

uint64_t partial apply for closure #2 in closure #3 in ReactionHistoryEntryAvatarImage.load(oldImageProvider:imageProvider:)()
{
  return partial apply for closure #2 in ReactionHistoryEntryAvatarImage.load(oldImageProvider:imageProvider:)();
}

uint64_t Sequence.firstNonNil<A>(_:)@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t AssociatedConformanceWitness;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v46 = a2;
  v45 = a1;
  v38 = a6;
  v48 = a4;
  v9 = type metadata accessor for Optional();
  v43 = *(_QWORD *)(v9 - 8);
  v44 = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v37 - v11;
  v41 = a5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v49 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness, v14);
  v16 = (char *)&v37 - v15;
  v17 = type metadata accessor for Optional();
  v19 = MEMORY[0x24BDAC7A8](v17, v18);
  v21 = (char *)&v37 - v20;
  v42 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v19, v22);
  v24 = (char *)&v37 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = swift_getAssociatedTypeWitness();
  v39 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25, v26);
  v28 = (char *)&v37 - v27;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v40 = a3;
  v29(v24, v47, a3);
  dispatch thunk of Sequence.makeIterator()();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v47 = v25;
  v42 = AssociatedConformanceWitness;
  dispatch thunk of IteratorProtocol.next()();
  v31 = v49;
  v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48);
  if (v32(v21, 1, AssociatedTypeWitness) == 1)
  {
LABEL_6:
    (*(void (**)(char *, uint64_t))(v39 + 8))(v28, v47);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v38, 1, 1);
  }
  else
  {
    v33 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
    while (1)
    {
      v33(v16, v21, AssociatedTypeWitness);
      v45(v16);
      if (v6)
      {
        (*(void (**)(char *, uint64_t))(v49 + 8))(v16, AssociatedTypeWitness);
        return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v28, v47);
      }
      (*(void (**)(char *, uint64_t))(v49 + 8))(v16, AssociatedTypeWitness);
      v34 = *(_QWORD *)(v48 - 8);
      if ((*(unsigned int (**)(char *, uint64_t))(v34 + 48))(v12, 1) != 1)
        break;
      (*(void (**)(char *, uint64_t))(v43 + 8))(v12, v44);
      dispatch thunk of IteratorProtocol.next()();
      if (v32(v21, 1, AssociatedTypeWitness) == 1)
        goto LABEL_6;
    }
    (*(void (**)(char *, uint64_t))(v39 + 8))(v28, v47);
    v36 = v38;
    (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v38, v12, v48);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v34 + 56))(v36, 0, 1);
  }
}

double CGRect.scaledBy(x:y:anchor:)(double a1, double a2, double a3, double a4, double a5, double a6, double a7)
{
  return a3 * a7 + a5 - a1 * a7 * a3;
}

double CGRect.scaledBy(_:anchor:)(double a1, double a2, double a3, double a4, double a5, double a6, double a7)
{
  return a3 * a7 + a5 - a1 * a7 * a3;
}

double CGRect.scaledBy(_:anchor:)(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a2 * a6 + a4 - a1 * a6 * a2;
}

uint64_t Reaction.init(emoji:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t inited;
  Swift::Int v7;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21FDD5AF0;
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 40) = a2;
  v7 = specialized Set.init(_nonEmptyArrayLiteral:)(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  UUID.init()();
  result = type metadata accessor for Reaction(0);
  *(_QWORD *)(a3 + *(int *)(result + 20)) = v7;
  return result;
}

uint64_t static ViewBuilder.buildBlock<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

uint64_t Reaction.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for UUID();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t Reaction.id.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for UUID();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*Reaction.id.modify())()
{
  return destructiveProjectEnumData for GroupActivitySharingResult;
}

uint64_t Reaction.emojis.getter()
{
  type metadata accessor for Reaction(0);
  return swift_bridgeObjectRetain();
}

uint64_t Reaction.emojis.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for Reaction(0) + 20);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

double (*Reaction.emojis.modify())(_QWORD, double, double)
{
  type metadata accessor for Reaction(0);
  return destructiveProjectEnumData for GroupActivitySharingResult;
}

uint64_t Reaction.init(emojis:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  UUID.init()();
  result = type metadata accessor for Reaction(0);
  *(_QWORD *)(a2 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t Reaction.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  type metadata accessor for UUID();
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  dispatch thunk of Hashable.hash(into:)();
  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for Reaction(0) + 20));
  swift_bridgeObjectRetain();
  specialized Set.hash(into:)(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t static Reaction.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if ((static UUID.== infix(_:_:)() & 1) == 0)
    return 0;
  v4 = *(int *)(type metadata accessor for Reaction(0) + 20);
  return specialized static Set.== infix(_:_:)(*(_QWORD *)(a1 + v4), *(_QWORD *)(a2 + v4));
}

uint64_t specialized static Set.== infix(_:_:)(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  Swift::Int v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  BOOL v23;
  uint64_t v24;
  unint64_t i;
  uint64_t v26;
  _QWORD *v27;
  BOOL v28;
  uint64_t v29;
  int64_t v30;
  int64_t v31;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v29 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(result + 56);
  v30 = (unint64_t)(v4 + 63) >> 6;
  v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v31 = v3;
      v9 = v8 | (v3 << 6);
      goto LABEL_26;
    }
    v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v10 >= v30)
      return 1;
    v11 = *(_QWORD *)(v29 + 8 * v10);
    v12 = v3 + 1;
    if (!v11)
    {
      v12 = v3 + 2;
      if (v3 + 2 >= v30)
        return 1;
      v11 = *(_QWORD *)(v29 + 8 * v12);
      if (!v11)
      {
        v12 = v3 + 3;
        if (v3 + 3 >= v30)
          return 1;
        v11 = *(_QWORD *)(v29 + 8 * v12);
        if (!v11)
        {
          v12 = v3 + 4;
          if (v3 + 4 >= v30)
            return 1;
          v11 = *(_QWORD *)(v29 + 8 * v12);
          if (!v11)
            break;
        }
      }
    }
LABEL_25:
    v6 = (v11 - 1) & v11;
    v31 = v12;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_26:
    v14 = result;
    v15 = (uint64_t *)(*(_QWORD *)(result + 48) + 16 * v9);
    v17 = *v15;
    v16 = v15[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    v18 = Hasher._finalize()();
    v19 = -1 << *(_BYTE *)(a2 + 32);
    v20 = v18 & ~v19;
    if (((*(_QWORD *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
      goto LABEL_41;
    v21 = *(_QWORD *)(a2 + 48);
    v22 = (_QWORD *)(v21 + 16 * v20);
    v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      v24 = ~v19;
      for (i = v20 + 1; ; i = v26 + 1)
      {
        v26 = i & v24;
        if (((*(_QWORD *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0)
          break;
        v27 = (_QWORD *)(v21 + 16 * v26);
        v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          goto LABEL_7;
      }
LABEL_41:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    result = v14;
    v3 = v31;
  }
  v13 = v3 + 5;
  if (v3 + 5 >= v30)
    return 1;
  v11 = *(_QWORD *)(v29 + 8 * v13);
  if (v11)
  {
    v12 = v3 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v12 >= v30)
      return 1;
    v11 = *(_QWORD *)(v29 + 8 * v12);
    ++v13;
    if (v11)
      goto LABEL_25;
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t Reaction.CodingKeys.stringValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x73696A6F6D65;
  else
    return 25705;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance Reaction.CodingKeys()
{
  char *v0;

  return Reaction.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance Reaction.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = specialized Reaction.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CodingKey.intValue.getter in conformance Reaction.CodingKeys()
{
  return 0;
}

void protocol witness for CodingKey.init(intValue:) in conformance Reaction.CodingKeys(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance Reaction.CodingKeys()
{
  lazy protocol witness table accessor for type Reaction.CodingKeys and conformance Reaction.CodingKeys();
  return CodingKey.description.getter();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Reaction.CodingKeys()
{
  lazy protocol witness table accessor for type Reaction.CodingKeys and conformance Reaction.CodingKeys();
  return CodingKey.debugDescription.getter();
}

uint64_t Reaction.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];
  uint64_t v12;
  char v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<Reaction.CodingKeys>);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type Reaction.CodingKeys and conformance Reaction.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v13 = 0;
  type metadata accessor for UUID();
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    v12 = *(_QWORD *)(v3 + *(int *)(type metadata accessor for Reaction(0) + 20));
    v11[15] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<String>);
    lazy protocol witness table accessor for type Set<String> and conformance <> Set<A>(&lazy protocol witness table cache variable for type Set<String> and conformance <> Set<A>, MEMORY[0x24BEE0D08], MEMORY[0x24BEE1700]);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
}

Swift::Int Reaction.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  Hasher.init(_seed:)();
  type metadata accessor for UUID();
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  dispatch thunk of Hashable.hash(into:)();
  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Reaction(0) + 20));
  swift_bridgeObjectRetain();
  specialized Set.hash(into:)((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t Reaction.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;

  v22 = a2;
  v26 = type metadata accessor for UUID();
  v3 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26, v4);
  v23 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<Reaction.CodingKeys>);
  v6 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25, v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Reaction(0);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  lazy protocol witness table accessor for type Reaction.CodingKeys and conformance Reaction.CodingKeys();
  v24 = v9;
  v14 = v27;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v21 = a1;
  v27 = v6;
  v15 = (uint64_t)v13;
  v30 = 0;
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v17 = v23;
  v16 = v24;
  v18 = v25;
  v19 = v26;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v15, v17, v19);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<String>);
  v29 = 1;
  lazy protocol witness table accessor for type Set<String> and conformance <> Set<A>((unint64_t *)&lazy protocol witness table cache variable for type Set<String> and conformance <> Set<A>, MEMORY[0x24BEE0D38], MEMORY[0x24BEE1720]);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v18);
  *(_QWORD *)(v15 + *(int *)(v10 + 20)) = v28;
  outlined init with copy of Reaction(v15, v22);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
  return outlined destroy of Reaction(v15);
}

uint64_t protocol witness for Decodable.init(from:) in conformance Reaction@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Reaction.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance Reaction(_QWORD *a1)
{
  return Reaction.encode(to:)(a1);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance Reaction(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[72];

  Hasher.init(_seed:)();
  type metadata accessor for UUID();
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  dispatch thunk of Hashable.hash(into:)();
  v3 = *(_QWORD *)(v1 + *(int *)(a1 + 20));
  swift_bridgeObjectRetain();
  specialized Set.hash(into:)((uint64_t)v5, v3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Reaction(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  type metadata accessor for UUID();
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  dispatch thunk of Hashable.hash(into:)();
  v5 = *(_QWORD *)(v2 + *(int *)(a2 + 20));
  swift_bridgeObjectRetain();
  specialized Set.hash(into:)(a1, v5);
  return swift_bridgeObjectRelease();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance Reaction(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _BYTE v6[72];

  Hasher.init(_seed:)();
  type metadata accessor for UUID();
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  dispatch thunk of Hashable.hash(into:)();
  v4 = *(_QWORD *)(v2 + *(int *)(a2 + 20));
  swift_bridgeObjectRetain();
  specialized Set.hash(into:)((uint64_t)v6, v4);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t protocol witness for Identifiable.id.getter in conformance Reaction@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for UUID();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance Reaction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((static UUID.== infix(_:_:)() & 1) != 0)
    return specialized static Set.== infix(_:_:)(*(_QWORD *)(a1 + *(int *)(a3 + 20)), *(_QWORD *)(a2 + *(int *)(a3 + 20)));
  else
    return 0;
}

uint64_t key path getter for ReactionEffectInteraction.reaction : ReactionEffectInteraction(_QWORD **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x80))();
}

uint64_t key path setter for ReactionEffectInteraction.reaction : ReactionEffectInteraction(uint64_t a1, void **a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reaction?);
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (char *)&v16 - v10;
  outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>(a1, (uint64_t)&v16 - v10, &demangling cache variable for type metadata for Reaction?);
  v12 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>((uint64_t)v11, (uint64_t)v8, &demangling cache variable for type metadata for Reaction?);
  v13 = v12;
  v14 = static Published.subscript.setter();
  (*(void (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v13) + 0x178))(v14);
  return outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v11, &demangling cache variable for type metadata for Reaction?);
}

uint64_t ReactionEffectInteraction.reaction.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  return swift_release();
}

uint64_t key path setter for ReactionEffectInteraction.$reaction : ReactionEffectInteraction(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v13;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Reaction?>.Publisher);
  v3 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2, v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = (char *)&v13 - v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v11((char *)&v13 - v9, a1, v2);
  v11(v7, (uint64_t)v10, v2);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Reaction?>);
  Published.projectedValue.setter();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v10, v2);
}

uint64_t ReactionEffectInteraction.$reaction.getter()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Reaction?>);
  Published.projectedValue.getter();
  return swift_endAccess();
}

uint64_t ReactionEffectInteraction.view.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC22_GroupActivities_UIKit25ReactionEffectInteraction_view;
  swift_beginAccess();
  return MEMORY[0x2207D4A98](v1);
}

_QWORD *ReactionEffectInteraction.__allocating_init<A>(session:)(uint64_t a1)
{
  objc_class *v1;
  _QWORD *v3;
  void (*v4)(uint64_t);
  _QWORD *v5;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_init);
  v4 = *(void (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v3) + 0x110);
  v5 = v3;
  v4(a1);

  swift_release();
  return v5;
}

id ReactionEffectInteraction.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

_QWORD *ReactionEffectInteraction.init()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  objc_class *v38;
  _QWORD *v39;
  void (*v40)(void);
  _QWORD *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  objc_super v62;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  MEMORY[0x24BDAC7A8](v1, v2);
  v53 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSRunLoop.SchedulerTimeType.Stride?);
  MEMORY[0x24BDAC7A8](v4, v5);
  v51 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride();
  v60 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57, v7);
  v56 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Reaction?>.Publisher);
  v10 = *(_QWORD *)(v9 - 8);
  v54 = v9;
  v55 = v10;
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Publishers.Delay<Published<Reaction?>.Publisher, NSRunLoop>);
  v58 = *(_QWORD *)(v14 - 8);
  v59 = v14;
  MEMORY[0x24BDAC7A8](v14, v15);
  v52 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Reaction?>);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17, v19);
  v21 = (char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reaction?);
  v24 = MEMORY[0x24BDAC7A8](v22, v23);
  v26 = (char *)&v50 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24, v27);
  v29 = (char *)&v50 - v28;
  v30 = &v0[OBJC_IVAR____TtC22_GroupActivities_UIKit25ReactionEffectInteraction__reaction];
  v31 = type metadata accessor for Reaction(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v29, 1, 1, v31);
  outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>((uint64_t)v29, (uint64_t)v26, &demangling cache variable for type metadata for Reaction?);
  v32 = v0;
  Published.init(initialValue:)();
  outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v29, &demangling cache variable for type metadata for Reaction?);
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v30, v21, v17);
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v32[OBJC_IVAR____TtC22_GroupActivities_UIKit25ReactionEffectInteraction_messenger] = 0;
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter())
    v33 = specialized Set.init(_nonEmptyArrayLiteral:)(MEMORY[0x24BEE4AF8]);
  else
    v33 = MEMORY[0x24BEE4B08];
  v35 = v52;
  v34 = (uint64_t)v53;
  v36 = (uint64_t)v51;
  *(_QWORD *)&v32[OBJC_IVAR____TtC22_GroupActivities_UIKit25ReactionEffectInteraction_groupSessionSubscriptions] = v33;
  *(_QWORD *)&v32[OBJC_IVAR____TtC22_GroupActivities_UIKit25ReactionEffectInteraction_reactionDurationSubscription] = 0;
  v37 = &v32[OBJC_IVAR____TtC22_GroupActivities_UIKit25ReactionEffectInteraction__presentationContext];
  *(_QWORD *)v37 = 0;
  *((_QWORD *)v37 + 1) = 0;

  v38 = (objc_class *)type metadata accessor for ReactionEffectInteraction(0);
  v62.receiver = v32;
  v62.super_class = v38;
  v39 = objc_msgSendSuper2(&v62, sel_init);
  v40 = *(void (**)(void))((*MEMORY[0x24BEE4EA0] & *v39) + 0x98);
  v41 = v39;
  v42 = v13;
  v40();
  v43 = v56;
  static NSRunLoop.SchedulerTimeType.Stride.seconds(_:)();
  v44 = v57;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 56))(v36, 1, 1, v57);
  v61 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v45 = type metadata accessor for NSRunLoop.SchedulerOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v34, 1, 1, v45);
  type metadata accessor for UIView(0, &lazy cache variable for type metadata for NSRunLoop);
  lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type Published<Reaction?>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<Reaction?>.Publisher, MEMORY[0x24BDB9EE8]);
  lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop();
  v46 = v54;
  Publisher.delay<A>(for:tolerance:scheduler:options:)();
  outlined destroy of PartialRangeThrough<DynamicTypeSize>(v34, &demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);

  outlined destroy of PartialRangeThrough<DynamicTypeSize>(v36, &demangling cache variable for type metadata for NSRunLoop.SchedulerTimeType.Stride?);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v43, v44);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v42, v46);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher((unint64_t *)&lazy protocol witness table cache variable for type Publishers.Delay<Published<Reaction?>.Publisher, NSRunLoop> and conformance Publishers.Delay<A, B>, (uint64_t *)&demangling cache variable for type metadata for Publishers.Delay<Published<Reaction?>.Publisher, NSRunLoop>, MEMORY[0x24BDB9758]);
  v47 = v59;
  v48 = Publisher<>.sink(receiveValue:)();

  swift_release();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v35, v47);
  *(_QWORD *)((char *)v41
            + OBJC_IVAR____TtC22_GroupActivities_UIKit25ReactionEffectInteraction_reactionDurationSubscription) = v48;
  swift_release();
  return v41;
}

void closure #1 in ReactionEffectInteraction.init()(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *v4;
  void *v5;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = (_QWORD *)MEMORY[0x2207D4A98](v3);
  if (v4)
  {
    v5 = v4;
    (*(void (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v4) + 0x128))(a1);

  }
}

uint64_t ReactionEffectInteraction.associateWithSession<A>(_:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v37[3];
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v2 = v1;
  v4 = *a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  MEMORY[0x24BDAC7A8](v5, v6);
  v39 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t *)(v4 + *MEMORY[0x24BDD1EA8]);
  v9 = *v8;
  v42 = v8[1];
  v43 = v9;
  type metadata accessor for GroupSession.State();
  v10 = (_QWORD *)type metadata accessor for Published.Publisher();
  v40 = *(v10 - 1);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)v37 - v12;
  v14 = type metadata accessor for UIView(255, &lazy cache variable for type metadata for NSRunLoop);
  v37[2] = v14;
  v15 = MEMORY[0x2207D4924](MEMORY[0x24BDB9EE8], v10);
  v37[1] = v15;
  v37[0] = lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop();
  v45 = v10;
  v46 = v14;
  v47 = v15;
  v48 = v37[0];
  v38 = type metadata accessor for Publishers.ReceiveOn();
  v41 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38, v16);
  v18 = (char *)v37 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = (char *)v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for GroupSessionMessenger();
  swift_retain();
  v23 = GroupSessionMessenger.__allocating_init<A>(session:)();
  v24 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v22, 1, 1, v24);
  v25 = swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for MainActor();
  swift_retain();
  swift_retain();
  swift_retain();
  v26 = static MainActor.shared.getter();
  v27 = (_QWORD *)swift_allocObject();
  v28 = MEMORY[0x24BEE6930];
  v27[2] = v26;
  v27[3] = v28;
  v27[4] = v23;
  v27[5] = v25;
  v27[6] = a1;
  swift_release();
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5((uint64_t)v22, (uint64_t)&async function pointer to partial apply for closure #1 in ReactionEffectInteraction.associateWithSession<A>(_:), (uint64_t)v27);
  swift_beginAccess();
  type metadata accessor for AnyCancellable();
  swift_allocObject();
  swift_retain();
  v29 = AnyCancellable.init(_:)();
  specialized Set._Variant.insert(_:)(&v44, v29);
  swift_release();
  swift_release();
  swift_endAccess();
  GroupSession.$state.getter();
  v45 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v30 = type metadata accessor for NSRunLoop.SchedulerOptions();
  v31 = (uint64_t)v39;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v39, 1, 1, v30);
  Publisher.receive<A>(on:options:)();
  outlined destroy of PartialRangeThrough<DynamicTypeSize>(v31, &demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);

  (*(void (**)(char *, _QWORD *))(v40 + 8))(v13, v10);
  v32 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v33 = (_QWORD *)swift_allocObject();
  v34 = v42;
  v33[2] = v43;
  v33[3] = v34;
  v33[4] = v32;
  v35 = v38;
  MEMORY[0x2207D4924](MEMORY[0x24BDB9A08], v38);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v18, v35);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  *(_QWORD *)(v2 + OBJC_IVAR____TtC22_GroupActivities_UIKit25ReactionEffectInteraction_messenger) = v23;
  return swift_release();
}

uint64_t closure #1 in ReactionEffectInteraction.associateWithSession<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6[10] = a5;
  v6[11] = a6;
  v6[9] = a4;
  v7 = type metadata accessor for Participant();
  v6[12] = v7;
  v6[13] = *(_QWORD *)(v7 - 8);
  v6[14] = swift_task_alloc();
  v8 = type metadata accessor for GroupSessionMessenger.MessageContext();
  v6[15] = v8;
  v6[16] = *(_QWORD *)(v8 - 8);
  v6[17] = swift_task_alloc();
  v6[18] = type metadata accessor for Reaction(0);
  v6[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Reaction, GroupSessionMessenger.MessageContext)?);
  v6[20] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GroupSessionMessenger.Messages<Reaction>);
  v6[21] = v9;
  v6[22] = *(_QWORD *)(v9 - 8);
  v6[23] = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GroupSessionMessenger.Messages<Reaction>.Iterator);
  v6[24] = v10;
  v6[25] = *(_QWORD *)(v10 - 8);
  v6[26] = swift_task_alloc();
  v6[27] = type metadata accessor for MainActor();
  v6[28] = static MainActor.shared.getter();
  v6[29] = dispatch thunk of Actor.unownedExecutor.getter();
  v6[30] = v11;
  return swift_task_switch();
}

uint64_t closure #1 in ReactionEffectInteraction.associateWithSession<A>(_:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[22];
  v2 = v0[23];
  v3 = v0[21];
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type Reaction and conformance Reaction, type metadata accessor for Reaction, (uint64_t)&protocol conformance descriptor for Reaction);
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel((unint64_t *)&lazy protocol witness table cache variable for type Reaction and conformance Reaction, type metadata accessor for Reaction, (uint64_t)&protocol conformance descriptor for Reaction);
  GroupSessionMessenger.messages<A>(of:)();
  GroupSessionMessenger.Messages.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  swift_beginAccess();
  swift_beginAccess();
  v0[31] = static MainActor.shared.getter();
  lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type GroupSessionMessenger.Messages<Reaction>.Iterator and conformance GroupSessionMessenger.Messages<A>.Iterator, &demangling cache variable for type metadata for GroupSessionMessenger.Messages<Reaction>.Iterator, MEMORY[0x24BDD1D48]);
  v4 = (_QWORD *)swift_task_alloc();
  v0[32] = v4;
  *v4 = v0;
  v4[1] = closure #1 in ReactionEffectInteraction.associateWithSession<A>(_:);
  return dispatch thunk of AsyncIteratorProtocol.next()();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 264) = v0;
  swift_task_dealloc();
  v3 = *(_QWORD *)(v2 + 248);
  if (v0)
  {
    if (v3)
      goto LABEL_5;
  }
  else if (v3)
  {
LABEL_5:
    swift_getObjectType();
    dispatch thunk of Actor.unownedExecutor.getter();
  }
  return swift_task_switch();
}

{
  swift_release();
  return swift_task_switch();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  uint64_t v19;
  _QWORD *v20;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Reaction, GroupSessionMessenger.MessageContext));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 8))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 192));
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 128);
    v4 = *(_QWORD *)(v0 + 136);
    v6 = *(_QWORD *)(v0 + 120);
    v7 = *(_QWORD *)(v0 + 80) + 16;
    v8 = v1 + *(int *)(v2 + 48);
    outlined init with take of Reaction(v1, *(_QWORD *)(v0 + 152));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v4, v8, v6);
    v9 = MEMORY[0x2207D4A98](v7);
    v10 = (_QWORD *)MEMORY[0x24BEE4EA0];
    if (v9)
    {
      v11 = (_QWORD *)v9;
      v12 = *(_QWORD *)(v0 + 152);
      v14 = *(_QWORD *)(v0 + 104);
      v13 = *(_QWORD *)(v0 + 112);
      v16 = *(_QWORD *)(v0 + 88);
      v15 = *(_QWORD *)(v0 + 96);
      GroupSessionMessenger.MessageContext.source.getter();
      (*(void (**)(uint64_t, uint64_t, uint64_t))((*v10 & *v11) + 0x148))(v12, v13, v16);

      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    }
    v17 = (_QWORD *)MEMORY[0x2207D4A98](*(_QWORD *)(v0 + 80) + 16);
    if (v17)
    {
      v18 = v17;
      (*(void (**)(_QWORD))((*v10 & *v17) + 0x120))(*(_QWORD *)(v0 + 152));

    }
    v19 = *(_QWORD *)(v0 + 152);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
    outlined destroy of Reaction(v19);
    *(_QWORD *)(v0 + 248) = static MainActor.shared.getter();
    lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type GroupSessionMessenger.Messages<Reaction>.Iterator and conformance GroupSessionMessenger.Messages<A>.Iterator, &demangling cache variable for type metadata for GroupSessionMessenger.Messages<Reaction>.Iterator, MEMORY[0x24BDD1D48]);
    v20 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 256) = v20;
    *v20 = v0;
    v20[1] = closure #1 in ReactionEffectInteraction.associateWithSession<A>(_:);
    return dispatch thunk of AsyncIteratorProtocol.next()();
  }
}

{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(v0 + 264);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

void closure #2 in ReactionEffectInteraction.associateWithSession<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;

  v4 = type metadata accessor for GroupSession.State();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v11 - v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v11 - v7, a1, v4);
  if ((*(unsigned int (**)(char *, uint64_t))(v5 + 88))(v8, v4) == *MEMORY[0x24BDD1E20])
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    swift_beginAccess();
    v9 = (_QWORD *)MEMORY[0x2207D4A98](a2 + 16);
    if (v9)
    {
      v10 = v9;
      (*(void (**)(void))((*MEMORY[0x24BEE4EA0] & *v9) + 0x118))();

    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
}

Swift::Void __swiftcall ReactionEffectInteraction.disassociateFromSession()()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t *v2;

  *(_QWORD *)(v0 + OBJC_IVAR____TtC22_GroupActivities_UIKit25ReactionEffectInteraction_messenger) = 0;
  swift_release();
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter())
    v1 = specialized Set.init(_nonEmptyArrayLiteral:)(MEMORY[0x24BEE4AF8]);
  else
    v1 = MEMORY[0x24BEE4B08];
  v2 = (unint64_t *)(v0
                          + OBJC_IVAR____TtC22_GroupActivities_UIKit25ReactionEffectInteraction_groupSessionSubscriptions);
  swift_beginAccess();
  *v2 = v1;
  swift_bridgeObjectRelease();
}

uint64_t ReactionEffectInteraction.setReaction(_:)(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reaction?);
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = (char *)&v15 - v9;
  outlined init with copy of Reaction(a1, (uint64_t)&v15 - v9);
  v11 = type metadata accessor for Reaction(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 0, 1, v11);
  swift_getKeyPath();
  swift_getKeyPath();
  outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>((uint64_t)v10, (uint64_t)v7, &demangling cache variable for type metadata for Reaction?);
  v12 = v1;
  v13 = static Published.subscript.setter();
  (*(void (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v12) + 0x178))(v13);
  return outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v10, &demangling cache variable for type metadata for Reaction?);
}

uint64_t ReactionEffectInteraction.clearReaction(_:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t *v29;
  uint64_t v30;
  char v31;
  uint64_t result;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;

  v3 = type metadata accessor for Reaction(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Reaction?, Reaction?));
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reaction?);
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v37 = (uint64_t)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14, v16);
  v38 = (char *)&v37 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17, v19);
  v22 = (char *)&v37 - v21;
  v24 = MEMORY[0x24BDAC7A8](v20, v23);
  v26 = (char *)&v37 - v25;
  (*(void (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v1) + 0x80))(v24);
  v27 = (uint64_t)&v11[*(int *)(v8 + 48)];
  outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>((uint64_t)v26, (uint64_t)v11, &demangling cache variable for type metadata for Reaction?);
  outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>(a1, v27, &demangling cache variable for type metadata for Reaction?);
  v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v28((uint64_t)v11, 1, v3) == 1)
  {
    outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v26, &demangling cache variable for type metadata for Reaction?);
    if (v28(v27, 1, v3) == 1)
    {
      outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v11, &demangling cache variable for type metadata for Reaction?);
LABEL_9:
      v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v34 = (uint64_t)v38;
      v33(v38, 1, 1, v3);
      swift_getKeyPath();
      swift_getKeyPath();
      outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>(v34, v37, &demangling cache variable for type metadata for Reaction?);
      v35 = v1;
      v36 = static Published.subscript.setter();
      (*(void (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v35) + 0x178))(v36);
      v30 = v34;
      v29 = &demangling cache variable for type metadata for Reaction?;
      return outlined destroy of PartialRangeThrough<DynamicTypeSize>(v30, v29);
    }
  }
  else
  {
    outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>((uint64_t)v11, (uint64_t)v22, &demangling cache variable for type metadata for Reaction?);
    if (v28(v27, 1, v3) != 1)
    {
      outlined init with take of Reaction(v27, (uint64_t)v7);
      if ((static UUID.== infix(_:_:)() & 1) == 0)
      {
        outlined destroy of Reaction((uint64_t)v7);
        outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v26, &demangling cache variable for type metadata for Reaction?);
        outlined destroy of Reaction((uint64_t)v22);
        v30 = (uint64_t)v11;
        v29 = &demangling cache variable for type metadata for Reaction?;
        return outlined destroy of PartialRangeThrough<DynamicTypeSize>(v30, v29);
      }
      v31 = specialized static Set.== infix(_:_:)(*(_QWORD *)&v22[*(int *)(v3 + 20)], *(_QWORD *)&v7[*(int *)(v3 + 20)]);
      outlined destroy of Reaction((uint64_t)v7);
      outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v26, &demangling cache variable for type metadata for Reaction?);
      outlined destroy of Reaction((uint64_t)v22);
      result = outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v11, &demangling cache variable for type metadata for Reaction?);
      if ((v31 & 1) == 0)
        return result;
      goto LABEL_9;
    }
    outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v26, &demangling cache variable for type metadata for Reaction?);
    outlined destroy of Reaction((uint64_t)v22);
  }
  v29 = &demangling cache variable for type metadata for (Reaction?, Reaction?);
  v30 = (uint64_t)v11;
  return outlined destroy of PartialRangeThrough<DynamicTypeSize>(v30, v29);
}

uint64_t ReactionEffectInteraction.updateReaction(_:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[4] = a1;
  v2[5] = v1;
  v3 = type metadata accessor for Participants();
  v2[6] = v3;
  v2[7] = *(_QWORD *)(v3 - 8);
  v2[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reaction?);
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[11] = static MainActor.shared.getter();
  v2[12] = dispatch thunk of Actor.unownedExecutor.getter();
  v2[13] = v4;
  return swift_task_switch();
}

uint64_t ReactionEffectInteraction.updateReaction(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(void **)(v0 + 40);
  outlined init with copy of Reaction(*(_QWORD *)(v0 + 32), v2);
  v4 = type metadata accessor for Reaction(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v2, 0, 1, v4);
  swift_getKeyPath();
  swift_getKeyPath();
  outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>(v2, v1, &demangling cache variable for type metadata for Reaction?);
  v5 = v3;
  v6 = static Published.subscript.setter();
  (*(void (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v5) + 0x178))(v6);
  outlined destroy of PartialRangeThrough<DynamicTypeSize>(v2, &demangling cache variable for type metadata for Reaction?);
  v7 = *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC22_GroupActivities_UIKit25ReactionEffectInteraction_messenger);
  *(_QWORD *)(v0 + 112) = v7;
  if (v7)
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 104))(*(_QWORD *)(v0 + 64), *MEMORY[0x24BDD1F50], *(_QWORD *)(v0 + 48));
    swift_retain();
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v8;
    lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type Reaction and conformance Reaction, type metadata accessor for Reaction, (uint64_t)&protocol conformance descriptor for Reaction);
    lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel((unint64_t *)&lazy protocol witness table cache variable for type Reaction and conformance Reaction, type metadata accessor for Reaction, (uint64_t)&protocol conformance descriptor for Reaction);
    *v8 = v0;
    v8[1] = ReactionEffectInteraction.updateReaction(_:);
    return GroupSessionMessenger.send<A>(_:to:)();
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  return swift_task_switch();
}

{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint8_t *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;

  swift_release();
  if (one-time initialization token for default != -1)
    swift_once();
  v1 = *(void **)(v0 + 128);
  v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Log.default);
  v3 = v1;
  v4 = v1;
  v5 = Logger.logObject.getter();
  v6 = static os_log_type_t.error.getter();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 128);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v15 = v10;
    *(_DWORD *)v9 = 136315138;
    *(_QWORD *)(v0 + 16) = v8;
    v11 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Error);
    v12 = String.init<A>(reflecting:)();
    *(_QWORD *)(v0 + 24) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v13, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21FD90000, v5, v6, "Error sending reaction message: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207D49E4](v10, -1, -1);
    MEMORY[0x2207D49E4](v9, -1, -1);

  }
  else
  {

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ReactionEffectInteraction.showReactions(_:)(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  type metadata accessor for MainActor();
  v8 = v1;
  swift_bridgeObjectRetain();
  v9 = static MainActor.shared.getter();
  v10 = (_QWORD *)swift_allocObject();
  v11 = MEMORY[0x24BEE6930];
  v10[2] = v9;
  v10[3] = v11;
  v10[4] = v8;
  v10[5] = a1;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5((uint64_t)v6, (uint64_t)&async function pointer to partial apply for closure #1 in ReactionEffectInteraction.showReactions(_:), (uint64_t)v10);
  return swift_release();
}

uint64_t closure #1 in ReactionEffectInteraction.showReactions(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[2] = a4;
  v5[3] = a5;
  v5[4] = type metadata accessor for Reaction(0);
  v5[5] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[6] = static MainActor.shared.getter();
  v5[7] = dispatch thunk of Actor.unownedExecutor.getter();
  v5[8] = v6;
  return swift_task_switch();
}

uint64_t closure #1 in ReactionEffectInteraction.showReactions(_:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int *v5;
  _QWORD *v6;
  uint64_t (*v8)(_QWORD);

  v2 = v0[4];
  v1 = v0[5];
  v4 = (_QWORD *)v0[2];
  v3 = v0[3];
  swift_bridgeObjectRetain();
  UUID.init()();
  *(_QWORD *)(v1 + *(int *)(v2 + 20)) = v3;
  v5 = *(int **)((*MEMORY[0x24BEE4EA0] & *v4) + 0x130);
  v8 = (uint64_t (*)(_QWORD))((char *)v5 + *v5);
  v6 = (_QWORD *)swift_task_alloc();
  v0[9] = v6;
  *v6 = v0;
  v6[1] = closure #1 in ReactionEffectInteraction.showReactions(_:);
  return v8(v0[5]);
}

{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  swift_task_dealloc();
  outlined destroy of Reaction(v1);
  return swift_task_switch();
}

{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall ReactionEffectInteraction.clearReactions()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  NSObject *v29;
  _BOOL4 v30;
  _QWORD *v31;
  uint8_t *v32;
  uint64_t v33;
  int v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v1 = type metadata accessor for Reaction(0);
  v51 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1, v2);
  v47 = (uint64_t)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3, v5);
  v48 = (uint64_t)&v42 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reaction?);
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v50 = (uint64_t)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v14 = (char *)&v42 - v13;
  v16 = MEMORY[0x24BDAC7A8](v12, v15);
  v18 = (char *)&v42 - v17;
  MEMORY[0x24BDAC7A8](v16, v19);
  v21 = (char *)&v42 - v20;
  v22 = type metadata accessor for Logger();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22, v24);
  v26 = (char *)&v42 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for default != -1)
    swift_once();
  v27 = __swift_project_value_buffer(v22, (uint64_t)static Log.default);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v26, v27, v22);
  v28 = v0;
  v29 = Logger.logObject.getter();
  v49 = static os_log_type_t.info.getter();
  v30 = os_log_type_enabled(v29, (os_log_type_t)v49);
  v31 = (_QWORD *)MEMORY[0x24BEE4EA0];
  if (v30)
  {
    v44 = v23;
    v46 = v14;
    v32 = (uint8_t *)swift_slowAlloc();
    v33 = swift_slowAlloc();
    v53 = v33;
    *(_DWORD *)v32 = 136315138;
    (*(void (**)(void))((*v31 & *v28) + 0x80))();
    outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>((uint64_t)v21, (uint64_t)v18, &demangling cache variable for type metadata for Reaction?);
    v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48))(v18, 1, v1);
    v45 = v1;
    if (v34 == 1)
    {
      v35 = 0xE300000000000000;
      v36 = 7104878;
    }
    else
    {
      v43 = v33;
      v37 = v48;
      outlined init with take of Reaction((uint64_t)v18, v48);
      outlined init with copy of Reaction(v37, v47);
      v36 = String.init<A>(reflecting:)();
      v35 = v38;
      v39 = v37;
      v33 = v43;
      outlined destroy of Reaction(v39);
    }
    outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v21, &demangling cache variable for type metadata for Reaction?);
    v52 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v36, v35, &v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21FD90000, v29, (os_log_type_t)v49, "Clearing effect for current reaction: %s", v32, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207D49E4](v33, -1, -1);
    MEMORY[0x2207D49E4](v32, -1, -1);

    (*(void (**)(char *, uint64_t))(v44 + 8))(v26, v22);
    v1 = v45;
    v14 = v46;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v22);
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v51 + 56))(v14, 1, 1, v1);
  swift_getKeyPath();
  swift_getKeyPath();
  outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>((uint64_t)v14, v50, &demangling cache variable for type metadata for Reaction?);
  v40 = v28;
  v41 = static Published.subscript.setter();
  (*(void (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v40) + 0x178))(v41);
  outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v14, &demangling cache variable for type metadata for Reaction?);
}

uint64_t ReactionEffectInteraction.postEvent<A>(for:from:in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  _BOOL4 v31;
  _DWORD *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  os_log_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  int64_t v50;
  unint64_t v51;
  int64_t v52;
  _QWORD v54[2];
  os_log_t v55;
  uint64_t v56;
  int v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(unint64_t, uint64_t, int64_t);
  int64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v68 = a3;
  v62 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for GroupSessionEvent.Action();
  MEMORY[0x24BDAC7A8](v8, v9);
  v10 = type metadata accessor for GroupSessionEvent();
  v65 = *(_QWORD *)(v10 - 8);
  v66 = v10;
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for UUID();
  v58 = *(uint64_t **)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (int64_t)v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for Reaction(0);
  MEMORY[0x24BDAC7A8](v59, v18);
  v61 = (uint64_t)v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Participant();
  v60 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x24BDAC7A8](v20, v21);
  v24 = (char *)v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22, v25);
  v27 = (unint64_t)v54 - v26;
  if (one-time initialization token for default != -1)
LABEL_28:
    swift_once();
  v28 = type metadata accessor for Logger();
  __swift_project_value_buffer(v28, (uint64_t)static Log.default);
  v63 = *(void (**)(unint64_t, uint64_t, int64_t))(v60 + 16);
  v63(v27, a2, v20);
  outlined init with copy of Reaction(v62, v61);
  v29 = Logger.logObject.getter();
  v30 = static os_log_type_t.info.getter();
  v57 = v30;
  v31 = os_log_type_enabled(v29, v30);
  v67 = a2;
  v64 = v20;
  if (v31)
  {
    v32 = (_DWORD *)swift_slowAlloc();
    v56 = swift_slowAlloc();
    v70 = v56;
    *v32 = 136315394;
    v54[0] = v32;
    v54[1] = v32 + 1;
    v55 = v29;
    Participant.id.getter();
    lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v33 = dispatch thunk of CustomStringConvertible.description.getter();
    v35 = v34;
    ((void (*)(int64_t, uint64_t))v58[1])(v17, v14);
    v36 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v35, &v70);
    v37 = v54[0];
    v69 = v36;
    v58 = &v70;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, int64_t))(v60 + 8))(v27, v20);
    v38 = (uint8_t *)v37;
    *(_WORD *)(v37 + 12) = 2080;
    v14 = v59;
    v39 = v61;
    swift_bridgeObjectRetain();
    v60 = Set.description.getter();
    v41 = v40;
    swift_bridgeObjectRelease();
    v69 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v60, v41, &v70);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    outlined destroy of Reaction(v39);
    v42 = v55;
    _os_log_impl(&dword_21FD90000, v55, (os_log_type_t)v57, "Posting event for participant %s reacting with \"%s\"", v38, 0x16u);
    v43 = v56;
    swift_arrayDestroy();
    MEMORY[0x2207D49E4](v43, -1, -1);
    MEMORY[0x2207D49E4](v38, -1, -1);

  }
  else
  {
    (*(void (**)(unint64_t, int64_t))(v60 + 8))(v27, v20);
    outlined destroy of Reaction(v61);

    v14 = v59;
  }
  a2 = *(_QWORD *)(v62 + *(int *)(v14 + 20));
  v44 = *(_QWORD *)(a2 + 56);
  v62 = a2 + 56;
  v45 = 1 << *(_BYTE *)(a2 + 32);
  v46 = -1;
  if (v45 < 64)
    v46 = ~(-1 << v45);
  v27 = v46 & v44;
  v20 = (unint64_t)(v45 + 63) >> 6;
  swift_bridgeObjectRetain();
  v17 = 0;
  while (1)
  {
    if (v27)
    {
      v47 = __clz(__rbit64(v27));
      v27 &= v27 - 1;
      v48 = v47 | (v17 << 6);
      goto LABEL_9;
    }
    v50 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    if (v50 >= v20)
      return swift_release();
    v51 = *(_QWORD *)(v62 + 8 * v50);
    ++v17;
    if (!v51)
    {
      v17 = v50 + 1;
      if (v50 + 1 >= v20)
        return swift_release();
      v51 = *(_QWORD *)(v62 + 8 * v17);
      if (!v51)
      {
        v17 = v50 + 2;
        if (v50 + 2 >= v20)
          return swift_release();
        v51 = *(_QWORD *)(v62 + 8 * v17);
        if (!v51)
          break;
      }
    }
LABEL_24:
    v27 = (v51 - 1) & v51;
    v48 = __clz(__rbit64(v51)) + (v17 << 6);
LABEL_9:
    v14 = *(_QWORD *)(*(_QWORD *)(a2 + 48) + 16 * v48 + 8);
    v63((unint64_t)v24, v67, v64);
    swift_bridgeObjectRetain();
    static GroupSessionEvent.Action.react(with:)();
    swift_bridgeObjectRelease();
    v49 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v7, 1, 1, v49);
    GroupSessionEvent.init(originator:action:url:)();
    GroupSession.showNotice(_:)();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v13, v66);
  }
  v52 = v50 + 3;
  if (v52 < v20)
  {
    v51 = *(_QWORD *)(v62 + 8 * v52);
    if (!v51)
    {
      while (1)
      {
        v17 = v52 + 1;
        if (__OFADD__(v52, 1))
          goto LABEL_27;
        if (v17 >= v20)
          return swift_release();
        v51 = *(_QWORD *)(v62 + 8 * v17);
        ++v52;
        if (v51)
          goto LABEL_24;
      }
    }
    v17 = v52;
    goto LABEL_24;
  }
  return swift_release();
}

void ReactionEffectInteraction.PresentationContext.window.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*ReactionEffectInteraction.PresentationContext.window.modify())()
{
  return destructiveProjectEnumData for GroupActivitySharingResult;
}

void ReactionEffectInteraction.PresentationContext.effectViewController.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
}

uint64_t (*ReactionEffectInteraction.PresentationContext.effectViewController.modify())()
{
  return destructiveProjectEnumData for GroupActivitySharingResult;
}

id ReactionEffectInteraction._presentationContext.getter()
{
  uint64_t v0;
  id *v1;
  id v2;

  v1 = (id *)(v0 + OBJC_IVAR____TtC22_GroupActivities_UIKit25ReactionEffectInteraction__presentationContext);
  swift_beginAccess();
  v2 = *v1;
  outlined copy of ReactionEffectInteraction.PresentationContext?(*v1, v1[1]);
  return v2;
}

void ReactionEffectInteraction._presentationContext.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;
  void *v7;

  v5 = v2 + OBJC_IVAR____TtC22_GroupActivities_UIKit25ReactionEffectInteraction__presentationContext;
  swift_beginAccess();
  v6 = *(void **)v5;
  v7 = *(void **)(v5 + 8);
  *(_QWORD *)v5 = a1;
  *(_QWORD *)(v5 + 8) = a2;
  outlined consume of ReactionEffectInteraction.PresentationContext?(v6, v7);
}

uint64_t (*ReactionEffectInteraction._presentationContext.modify())()
{
  swift_beginAccess();
  return ReactionPickerView.reactions.modify;
}

void ReactionEffectInteraction.presentationContext.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  void *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  void (*v11)(id, id);
  id v12;
  id v13;

  v1 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v2 = *(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x150);
  v3 = (void *)v2();
  outlined consume of ReactionEffectInteraction.PresentationContext?(v3, v4);
  if (v3)
    goto LABEL_6;
  type metadata accessor for ReactionEffectViewController();
  v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v6 = (void *)(*(uint64_t (**)(void))((*v1 & *v0) + 0xB0))();
  if (!v6)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v7 = v6;
  v8 = objc_msgSend(v6, sel_window);

  if (!v8)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v9 = objc_msgSend(v8, sel_windowScene);

  if (v9)
  {
    v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB58]), sel_initWithWindowScene_, v9);

    objc_msgSend(v10, sel_setRootViewController_, v5);
    objc_msgSend(v10, sel_setUserInteractionEnabled_, 0);
    objc_msgSend(v10, sel_setWindowLevel_, *MEMORY[0x24BEBE9E8]);
    objc_msgSend(v10, sel_setHidden_, 0);
    v11 = *(void (**)(id, id))((*v1 & *v0) + 0x158);
    v12 = v10;
    v13 = v5;
    v11(v10, v5);

LABEL_6:
    if (v2())
      return;
    __break(1u);
    goto LABEL_8;
  }
LABEL_10:
  __break(1u);
}

void ReactionEffectInteraction.renderReaction(_:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t (*v10)(void);
  void *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  double v17;
  double v18;
  double v19;
  id v20;
  double v21;
  double v22;
  double v23;
  double v24;
  void *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;

  v3 = type metadata accessor for Logger();
  v4 = *(_QWORD *)(v3 - 8);
  v6 = MEMORY[0x24BDAC7A8](v3, v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v10 = *(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v1) + 0xB0);
  v11 = (void *)((uint64_t (*)(uint64_t))v10)(v6);
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend(v11, sel_superview);
    if (v13)
    {
      v14 = v13;
      v15 = objc_msgSend(v12, sel_window);
      if (v15)
      {
        v16 = v15;
        objc_msgSend(v12, sel_alpha);
        if (v17 > 0.0)
        {
          objc_msgSend(v12, sel_center);
          v19 = v18;
          objc_msgSend(v12, sel_frame);
          v20 = objc_msgSend(v14, sel_convertPoint_toCoordinateSpace_, v16, v19);
          v22 = v21;
          v24 = v23;
          v25 = (void *)(*(uint64_t (**)(id))((*v9 & *v1) + 0x168))(v20);
          v38 = v26;

          (*(void (**)(uint64_t, double, double))((*v9 & *v38) + 0x58))(a1, v22, v24);
          return;
        }

        v12 = v14;
        v14 = v16;
      }

    }
    else
    {
      v14 = v12;
    }

  }
  if (one-time initialization token for default != -1)
    swift_once();
  v27 = __swift_project_value_buffer(v3, (uint64_t)static Log.default);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v8, v27, v3);
  v28 = v1;
  v29 = Logger.logObject.getter();
  v30 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc();
    v32 = swift_slowAlloc();
    v40 = v32;
    *(_DWORD *)v31 = 136315138;
    v33 = v10();
    if (v33)
    {
      v39 = v33;
      type metadata accessor for UIView(0, (unint64_t *)&lazy cache variable for type metadata for UIView);
      v34 = String.init<A>(reflecting:)();
      v36 = v35;
    }
    else
    {
      v36 = 0xE300000000000000;
      v34 = 7104878;
    }
    v39 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v36, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21FD90000, v29, v30, "Not rendering reaction because the source view is not visible: %s", v31, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207D49E4](v32, -1, -1);
    MEMORY[0x2207D49E4](v31, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v3);
}

Swift::Void __swiftcall ReactionEffectInteraction.updateReactionEffect()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reaction?);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Reaction(0);
  v6 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)MEMORY[0x24BEE4EA0];
  (*(void (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v0) + 0x80))(v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    v12 = outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v4, &demangling cache variable for type metadata for Reaction?);
    v13 = (void *)(*(uint64_t (**)(uint64_t))((*v11 & *v0) + 0x150))(v12);
    if (v13)
    {
      v15 = v13;
      v16 = v14;
      v17 = v13;
      outlined consume of ReactionEffectInteraction.PresentationContext?(v15, v16);
      objc_msgSend(v17, sel_setHidden_, 1);

    }
    (*(void (**)(_QWORD, _QWORD))((*v11 & *v0) + 0x158))(0, 0);
  }
  else
  {
    outlined init with take of Reaction((uint64_t)v4, (uint64_t)v10);
    ReactionEffectInteraction.renderReaction(_:)((uint64_t)v10);
    outlined destroy of Reaction((uint64_t)v10);
  }
}

id ReactionEffectInteraction.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ReactionEffectInteraction(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall ReactionEffectInteraction.didMove(to:)(UIView_optional *to)
{
  void *v1;
  UIView_optional *v3;
  id v4;
  void *v5;
  id v6;
  id v7;

  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  if (to)
  {
    v3 = to;
    v4 = -[UIView_optional window](v3, sel_window);
    if (v4)
    {
      v5 = v4;
      v6 = objc_msgSend(v4, sel_windowScene);

      if (v6)
      {
        v7 = v1;
        UIScene.reactionEffectInteraction.setter(v1);

      }
    }

  }
}

void ReactionEffectSourceView.effectInteraction.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + direct field offset for ReactionEffectSourceView.effectInteraction);
  *(_QWORD *)(v1 + direct field offset for ReactionEffectSourceView.effectInteraction) = a1;

}

void ReactionEffectSourceView.shouldClear.didset(char a1)
{
  uint64_t v1;
  int v2;
  unsigned __int8 *v3;
  _QWORD *v4;
  void (*v5)(void);
  _QWORD *v6;

  v2 = a1 & 1;
  v3 = (unsigned __int8 *)(v1 + direct field offset for ReactionEffectSourceView.shouldClear);
  swift_beginAccess();
  if (*v3 != v2)
  {
    v4 = *(_QWORD **)(v1 + direct field offset for ReactionEffectSourceView.effectInteraction);
    if (v4)
    {
      v5 = *(void (**)(void))((*MEMORY[0x24BEE4EA0] & *v4) + 0x140);
      v6 = v4;
      v5();

    }
  }
}

uint64_t ReactionEffectSourceView.shouldClear.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + direct field offset for ReactionEffectSourceView.shouldClear);
  swift_beginAccess();
  return *v1;
}

void ReactionEffectSourceView.shouldClear.setter(char a1)
{
  uint64_t v1;
  char *v3;
  char v4;

  v3 = (char *)(v1 + direct field offset for ReactionEffectSourceView.shouldClear);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;
  ReactionEffectSourceView.shouldClear.didset(v4);
}

void (*ReactionEffectSourceView.shouldClear.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE *v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = (_BYTE *)(v1 + direct field offset for ReactionEffectSourceView.shouldClear);
  swift_beginAccess();
  *((_BYTE *)v3 + 32) = *v4;
  return ReactionEffectSourceView.shouldClear.modify;
}

void ReactionEffectSourceView.shouldClear.modify(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  ReactionEffectSourceView.shouldClear.setter(*(_BYTE *)(*(_QWORD *)a1 + 32));
  free(v1);
}

uint64_t ReactionEffectSourceView.session.didset(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  char *v29;
  char v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  char *v33;
  _QWORD *v34;

  v3 = type metadata accessor for UUID();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v33 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UUID?, UUID?));
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for UUID?);
  v13 = MEMORY[0x24BDAC7A8](v11, v12);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v13, v16);
  v19 = (char *)&v32 - v18;
  MEMORY[0x24BDAC7A8](v17, v20);
  v22 = (char *)&v32 - v21;
  v34 = v1;
  v23 = (_QWORD *)((char *)v1 + direct field offset for ReactionEffectSourceView.session);
  swift_beginAccess();
  if (*v23)
  {
    swift_retain();
    GroupSession.id.getter();
    swift_release();
    v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v24(v22, 0, 1, v3);
  }
  else
  {
    v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v24(v22, 1, 1, v3);
  }
  if (a1)
  {
    GroupSession.id.getter();
    v25 = 0;
  }
  else
  {
    v25 = 1;
  }
  v24(v19, v25, 1, v3);
  v26 = (uint64_t)&v10[*(int *)(v7 + 48)];
  outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>((uint64_t)v22, (uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>((uint64_t)v19, v26, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v27((uint64_t)v10, 1, v3) == 1)
  {
    outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v22, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (v27(v26, 1, v3) == 1)
      return outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for UUID?);
  }
  else
  {
    outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>((uint64_t)v10, (uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    if (v27(v26, 1, v3) != 1)
    {
      v29 = v33;
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v33, v26, v3);
      lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v30 = dispatch thunk of static Equatable.== infix(_:_:)();
      v31 = *(void (**)(char *, uint64_t))(v4 + 8);
      v31(v29, v3);
      outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v22, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      v31(v15, v3);
      result = outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for UUID?);
      if ((v30 & 1) != 0)
        return result;
      return (*(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v34) + 0xC8))(result);
    }
    outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v22, (uint64_t *)&demangling cache variable for type metadata for UUID?);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v15, v3);
  }
  result = outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v10, &demangling cache variable for type metadata for (UUID?, UUID?));
  return (*(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v34) + 0xC8))(result);
}

uint64_t ReactionEffectSourceView.session.getter()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t ReactionEffectSourceView.session.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)(v1 + direct field offset for ReactionEffectSourceView.session);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;
  swift_retain();
  ReactionEffectSourceView.session.didset(v4);
  swift_release();
  return swift_release();
}

void (*ReactionEffectSourceView.session.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = (_QWORD *)(v1 + direct field offset for ReactionEffectSourceView.session);
  swift_beginAccess();
  v3[3] = *v4;
  swift_retain();
  return ReactionEffectSourceView.session.modify;
}

void ReactionEffectSourceView.session.modify(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  if ((a2 & 1) != 0)
  {
    v4 = swift_retain();
    ReactionEffectSourceView.session.setter(v4);
    swift_release();
  }
  else
  {
    ReactionEffectSourceView.session.setter(v3);
  }
  free(v2);
}

_QWORD *ReactionEffectSourceView.__allocating_init(session:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return ReactionEffectSourceView.init(session:)(a1);
}

_QWORD *ReactionEffectSourceView.init(session:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  objc_class *v8;
  _QWORD *v9;
  void (*v10)(void);
  _QWORD *v11;
  objc_super v13;

  v3 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v4 = *MEMORY[0x24BEE4EA0] & *v1;
  *(_QWORD *)((char *)v1 + direct field offset for ReactionEffectSourceView.effectInteraction) = 0;
  v5 = (_QWORD *)((char *)v1 + direct field offset for ReactionEffectSourceView.session);
  *(_QWORD *)((char *)v1 + direct field offset for ReactionEffectSourceView.session) = 0;
  swift_beginAccess();
  *v5 = a1;
  v6 = v1;
  swift_retain();
  swift_release();
  *((_BYTE *)v6 + direct field offset for ReactionEffectSourceView.shouldClear) = 0;

  v8 = (objc_class *)type metadata accessor for ReactionEffectSourceView(0, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), v7);
  v13.receiver = v6;
  v13.super_class = v8;
  v9 = objc_msgSendSuper2(&v13, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v10 = *(void (**)(void))((*v3 & *v9) + 0xC8);
  v11 = v9;
  v10();

  swift_release();
  return v11;
}

id ReactionEffectSourceView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

uint64_t ReactionEffectSourceView.init(coder:)(void *a1)
{
  uint64_t ObjectType;
  uint64_t v3;

  ObjectType = swift_getObjectType();
  v3 = (*(uint64_t (**)(_QWORD))(ObjectType + 192))(0);

  swift_deallocPartialClassInstance();
  return v3;
}

uint64_t @objc ReactionEffectSourceView.init(coder:)(uint64_t a1, uint64_t a2, void *a3)
{
  return ReactionEffectSourceView.init(coder:)(a3);
}

Swift::Void __swiftcall ReactionEffectSourceView.updateEffectInteraction()()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  void *v8;

  v1 = v0;
  v2 = *(void **)&v0[direct field offset for ReactionEffectSourceView.effectInteraction];
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v0, sel_removeInteraction_, v3);

  }
  v4 = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *(_QWORD *)v0) + 0xA8))();
  if (v4)
  {
    v5 = v4;
    type metadata accessor for ReactionEffectInteraction(0);
    v6 = ReactionEffectInteraction.__allocating_init<A>(session:)(v5);
  }
  else
  {
    v6 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ReactionEffectInteraction(0)), sel_init);
  }
  v7 = v6;
  objc_msgSend(v1, sel_addInteraction_, v6);
  v8 = *(void **)&v1[direct field offset for ReactionEffectSourceView.effectInteraction];
  *(_QWORD *)&v1[direct field offset for ReactionEffectSourceView.effectInteraction] = v7;

}

id ReactionEffectSourceView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void ReactionEffectSourceView.init(frame:)()
{
  specialized ReactionEffectSourceView.init(frame:)();
}

void @objc ReactionEffectSourceView.init(frame:)()
{
  specialized ReactionEffectSourceView.init(frame:)();
}

id ReactionEffectSourceView.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for ReactionEffectSourceView(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x50), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x58), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

uint64_t @objc ReactionEffectSourceView.__ivar_destroyer(uint64_t a1)
{

  return swift_release();
}

uint64_t ReactionEffectSourceViewRepresentable.shouldClear.getter(uint64_t a1, char a2)
{
  return a2 & 1;
}

_QWORD *ReactionEffectSourceViewRepresentable.makeUIView(context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return specialized ReactionEffectSourceViewRepresentable.makeUIView(context:)(a2, a3, a4, a5);
}

uint64_t ReactionEffectSourceViewRepresentable.updateUIView(_:context:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return specialized ReactionEffectSourceViewRepresentable.updateUIView(_:context:)(a1, a3, a4);
}

_QWORD *protocol witness for UIViewRepresentable.makeUIView(context:) in conformance ReactionEffectSourceViewRepresentable<A>(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return specialized ReactionEffectSourceViewRepresentable.makeUIView(context:)(*(_QWORD *)v2, *(unsigned __int8 *)(v2 + 8), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

uint64_t protocol witness for UIViewRepresentable.updateUIView(_:context:) in conformance ReactionEffectSourceViewRepresentable<A>(_QWORD *a1)
{
  uint64_t v1;

  return specialized ReactionEffectSourceViewRepresentable.updateUIView(_:context:)(a1, *(_QWORD *)v1, *(unsigned __int8 *)(v1 + 8));
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance ReactionEffectSourceViewRepresentable<A>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2207D4924](&protocol conformance descriptor for ReactionEffectSourceViewRepresentable<A>, a3);
  return static UIViewRepresentable._makeView(view:inputs:)();
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance ReactionEffectSourceViewRepresentable<A>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2207D4924](&protocol conformance descriptor for ReactionEffectSourceViewRepresentable<A>, a3);
  return static UIViewRepresentable._makeViewList(view:inputs:)();
}

void protocol witness for View.body.getter in conformance ReactionEffectSourceViewRepresentable<A>(uint64_t a1)
{
  MEMORY[0x2207D4924](&protocol conformance descriptor for ReactionEffectSourceViewRepresentable<A>, a1);
  UIViewRepresentable.body.getter();
  __break(1u);
}

uint64_t ReactionEffectModifier.shouldClear.getter(uint64_t a1, char a2)
{
  return a2 & 1;
}

uint64_t ReactionEffectModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  _QWORD v32[3];
  char v33;

  v30 = a1;
  v31 = a6;
  v10 = type metadata accessor for ReactionEffectModifier(255, a4, a5, a4);
  MEMORY[0x2207D4924](&protocol conformance descriptor for ReactionEffectModifier<A>, v10);
  v11 = type metadata accessor for _ViewModifier_Content();
  v13 = type metadata accessor for ReactionEffectSourceViewRepresentable(255, a4, a5, v12);
  v28 = MEMORY[0x2207D4924](&protocol conformance descriptor for ReactionEffectSourceViewRepresentable<A>, v13);
  v29 = type metadata accessor for _BackgroundModifier();
  v14 = type metadata accessor for ModifiedContent();
  v15 = *(_QWORD *)(v14 - 8);
  v17 = MEMORY[0x24BDAC7A8](v14, v16);
  v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v20);
  v22 = (char *)&v28 - v21;
  v32[2] = a2;
  v33 = a3;
  swift_retain();
  static Alignment.center.getter();
  v23 = MEMORY[0x2207D4924](MEMORY[0x24BDEFB78], v11);
  View.background<A>(_:alignment:)();
  swift_release();
  v24 = MEMORY[0x2207D4924](MEMORY[0x24BDEF370], v29);
  v32[0] = v23;
  v32[1] = v24;
  MEMORY[0x2207D4924](MEMORY[0x24BDED308], v14, v32);
  v25 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  v25(v22, v19, v14);
  v26 = *(void (**)(char *, uint64_t))(v15 + 8);
  v26(v19, v14);
  v25(v31, v22, v14);
  return ((uint64_t (*)(char *, uint64_t))v26)(v22, v14);
}

uint64_t protocol witness for ViewModifier.body(content:) in conformance ReactionEffectModifier<A>@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v3;

  return ReactionEffectModifier.body(content:)(a1, *(_QWORD *)v3, *(_BYTE *)(v3 + 8), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t View.reactionEffect<A>(for:shouldClear:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v10;
  char v11;

  v10 = a1;
  v11 = a2;
  v8 = type metadata accessor for ReactionEffectModifier(0, a4, a6, a4);
  swift_retain();
  MEMORY[0x2207D3BF8](&v10, a3, v8, a5);
  return swift_release();
}

void specialized Set.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  Swift::UInt v8;
  int64_t v9;
  Swift::Int v10;
  uint64_t v12;
  int64_t v13;

  Hasher._finalize()();
  v3 = a2 + 56;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  v8 = 0;
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v9++, 1))
      goto LABEL_19;
    if (v9 >= v7)
    {
LABEL_17:
      swift_release();
      Hasher._combine(_:)(v8);
      return;
    }
    v12 = *(_QWORD *)(v3 + 8 * v9);
    if (!v12)
      break;
LABEL_16:
    v6 = (v12 - 1) & v12;
LABEL_5:
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    v10 = Hasher._finalize()();
    swift_bridgeObjectRelease();
    v8 ^= v10;
  }
  v13 = v9 + 1;
  if (v9 + 1 >= v7)
    goto LABEL_17;
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
  {
    ++v9;
    goto LABEL_16;
  }
  while (1)
  {
    v9 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v9 >= v7)
      goto LABEL_17;
    v12 = *(_QWORD *)(v3 + 8 * v9);
    ++v13;
    if (v12)
      goto LABEL_16;
  }
  __break(1u);
LABEL_19:
  __break(1u);
}

unint64_t specialized Set.init(_nonEmptyArrayLiteral:)(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t (*v8)(uint64_t);
  BOOL v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;

  v1 = result;
  v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = _CocoaArrayWrapper.endIndex.getter();
    result = swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _SetStorage<AnyCancellable>);
      result = static _SetStorage.allocate(capacity:)();
      v3 = result;
      v19 = v1;
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = _CocoaArrayWrapper.endIndex.getter();
      result = swift_bridgeObjectRelease();
      if (!v4)
        return v3;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x24BEE4B08];
  v19 = v1;
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return v3;
LABEL_9:
  v6 = 0;
  v7 = v3 + 56;
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BDB9B60];
  v18 = v4;
  while ((v19 & 0xC000000000000001) != 0)
  {
    result = MEMORY[0x2207D4288](v6, v19);
    v9 = __OFADD__(v6++, 1);
    if (v9)
      goto LABEL_26;
LABEL_18:
    v20 = result;
    type metadata accessor for AnyCancellable();
    lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type AnyCancellable and conformance AnyCancellable, v8, MEMORY[0x24BDB9B70]);
    result = dispatch thunk of Hashable._rawHashValue(seed:)();
    v10 = -1 << *(_BYTE *)(v3 + 32);
    v11 = result & ~v10;
    v12 = v11 >> 6;
    v13 = *(_QWORD *)(v7 + 8 * (v11 >> 6));
    v14 = 1 << v11;
    if (((1 << v11) & v13) != 0)
    {
      v15 = ~v10;
      lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type AnyCancellable and conformance AnyCancellable, v8, MEMORY[0x24BDB9B78]);
      do
      {
        result = dispatch thunk of static Equatable.== infix(_:_:)();
        if ((result & 1) != 0)
        {
          result = swift_release();
          v4 = v18;
          goto LABEL_11;
        }
        v11 = (v11 + 1) & v15;
        v12 = v11 >> 6;
        v13 = *(_QWORD *)(v7 + 8 * (v11 >> 6));
        v14 = 1 << v11;
      }
      while ((v13 & (1 << v11)) != 0);
      v4 = v18;
    }
    *(_QWORD *)(v7 + 8 * v12) = v14 | v13;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11) = v20;
    v16 = *(_QWORD *)(v3 + 16);
    v9 = __OFADD__(v16, 1);
    v17 = v16 + 1;
    if (v9)
      goto LABEL_27;
    *(_QWORD *)(v3 + 16) = v17;
LABEL_11:
    v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BDB9B60];
    if (v6 == v4)
      return v3;
  }
  if (v6 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_28;
  result = swift_retain();
  v9 = __OFADD__(v6++, 1);
  if (!v9)
    goto LABEL_18;
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

Swift::Int specialized Set.init(_nonEmptyArrayLiteral:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Int result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<String>);
    v3 = static _SetStorage.allocate(capacity:)();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      Hasher.init(_seed:)();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      result = Hasher._finalize()();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = _stringCompareWithSmolCheck(_:_:expecting:)();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t type metadata accessor for Reaction(uint64_t a1)
{
  return type metadata accessor for GroupSessionPreviewPresentationViewModel(a1, type metadata singleton initialization cache for Reaction);
}

unint64_t lazy protocol witness table accessor for type Reaction.CodingKeys and conformance Reaction.CodingKeys()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Reaction.CodingKeys and conformance Reaction.CodingKeys;
  if (!lazy protocol witness table cache variable for type Reaction.CodingKeys and conformance Reaction.CodingKeys)
  {
    result = MEMORY[0x2207D4924](&protocol conformance descriptor for Reaction.CodingKeys, &unk_24E5ADFC0);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Reaction.CodingKeys and conformance Reaction.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Reaction.CodingKeys and conformance Reaction.CodingKeys;
  if (!lazy protocol witness table cache variable for type Reaction.CodingKeys and conformance Reaction.CodingKeys)
  {
    result = MEMORY[0x2207D4924]("\rg}.x|", &unk_24E5ADFC0);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Reaction.CodingKeys and conformance Reaction.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Reaction.CodingKeys and conformance Reaction.CodingKeys;
  if (!lazy protocol witness table cache variable for type Reaction.CodingKeys and conformance Reaction.CodingKeys)
  {
    result = MEMORY[0x2207D4924](&protocol conformance descriptor for Reaction.CodingKeys, &unk_24E5ADFC0);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Reaction.CodingKeys and conformance Reaction.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Reaction.CodingKeys and conformance Reaction.CodingKeys;
  if (!lazy protocol witness table cache variable for type Reaction.CodingKeys and conformance Reaction.CodingKeys)
  {
    result = MEMORY[0x2207D4924](&protocol conformance descriptor for Reaction.CodingKeys, &unk_24E5ADFC0);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Reaction.CodingKeys and conformance Reaction.CodingKeys);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type Set<String> and conformance <> Set<A>(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Set<String>);
    v8 = a2;
    result = MEMORY[0x2207D4924](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21FDC3944(_QWORD **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x80))();
}

uint64_t type metadata accessor for ReactionEffectInteraction(uint64_t a1)
{
  return type metadata accessor for GroupSessionPreviewPresentationViewModel(a1, (uint64_t *)&type metadata singleton initialization cache for ReactionEffectInteraction);
}

unint64_t lazy protocol witness table accessor for type NSRunLoop and conformance NSRunLoop()
{
  unint64_t result;
  uint64_t v1;

  result = lazy protocol witness table cache variable for type NSRunLoop and conformance NSRunLoop;
  if (!lazy protocol witness table cache variable for type NSRunLoop and conformance NSRunLoop)
  {
    v1 = type metadata accessor for UIView(255, &lazy cache variable for type metadata for NSRunLoop);
    result = MEMORY[0x2207D4924](MEMORY[0x24BDD0408], v1);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type NSRunLoop and conformance NSRunLoop);
  }
  return result;
}

uint64_t sub_21FDC39EC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void partial apply for closure #1 in ReactionEffectInteraction.init()(uint64_t a1)
{
  uint64_t v1;

  closure #1 in ReactionEffectInteraction.init()(a1, v1);
}

uint64_t sub_21FDC3A18()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ReactionEffectInteraction.associateWithSession<A>(_:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = partial apply for closure #1 in GroupActivitySharingController.init<A>(preparationHandler:);
  return closure #1 in ReactionEffectInteraction.associateWithSession<A>(_:)(a1, v4, v5, v6, v7, v8);
}

void partial apply for specialized closure #1 in Task.store(in:)()
{
  JUMPOUT(0x2207D406CLL);
}

uint64_t sub_21FDC3AF8()
{
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #2 in ReactionEffectInteraction.associateWithSession<A>(_:)(uint64_t a1)
{
  uint64_t v1;

  closure #2 in ReactionEffectInteraction.associateWithSession<A>(_:)(a1, *(_QWORD *)(v1 + 32));
}

uint64_t sub_21FDC3B28()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ReactionEffectInteraction.showReactions(_:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = partial apply for closure #1 in GroupActivitySharingController.init<A>(preparationHandler:);
  return closure #1 in ReactionEffectInteraction.showReactions(_:)(a1, v4, v5, v7, v6);
}

id outlined copy of ReactionEffectInteraction.PresentationContext?(id result, void *a2)
{
  id v2;

  if (result)
  {
    v2 = result;
    return a2;
  }
  return result;
}

void outlined consume of ReactionEffectInteraction.PresentationContext?(void *a1, void *a2)
{
  if (a1)
  {

  }
}

uint64_t specialized Reaction.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73696A6F6D65 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void specialized ReactionEffectInteraction.willMove(to:)()
{
  _QWORD *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;

  v1 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB0))();
  if (v1)
  {
    v5 = v1;
    v2 = objc_msgSend(v1, sel_window);
    if (v2)
    {
      v3 = v2;
      v4 = objc_msgSend(v2, sel_windowScene);

      if (v4)
      {
        UIScene.reactionEffectInteraction.setter(0);

      }
    }

  }
}

uint64_t type metadata accessor for ReactionEffectSourceView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ReactionEffectSourceView);
}

void specialized ReactionEffectSourceView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

_QWORD *specialized ReactionEffectSourceViewRepresentable.makeUIView(context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v5;
  id v6;

  v5 = (objc_class *)type metadata accessor for ReactionEffectSourceView(0, a3, a4, a4);
  swift_retain();
  v6 = objc_allocWithZone(v5);
  return ReactionEffectSourceView.init(session:)(a1);
}

uint64_t specialized ReactionEffectSourceViewRepresentable.updateUIView(_:context:)(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  void (*v7)(uint64_t);

  v6 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v7 = *(void (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *a1) + 0xB0);
  swift_retain();
  v7(a2);
  return (*(uint64_t (**)(uint64_t))((*v6 & *a1) + 0x98))(a3);
}

uint64_t type metadata accessor for ReactionEffectModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ReactionEffectModifier);
}

uint64_t type metadata accessor for ReactionEffectSourceViewRepresentable(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ReactionEffectSourceViewRepresentable);
}

uint64_t base witness table accessor for Equatable in Reaction()
{
  return lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel((unint64_t *)&lazy protocol witness table cache variable for type Reaction and conformance Reaction, type metadata accessor for Reaction, (uint64_t)&protocol conformance descriptor for Reaction);
}

uint64_t associated type witness table accessor for Identifiable.ID : Hashable in Reaction()
{
  return lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
}

void base witness table accessor for View in ReactionEffectSourceViewRepresentable<A>()
{
  JUMPOUT(0x2207D4924);
}

uint64_t associated type witness table accessor for ViewModifier.Body : View in ReactionEffectModifier<A>()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21FDC3F40(_QWORD **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x98))();
}

uint64_t sub_21FDC3F7C@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0xB0))();
  *a2 = result;
  return result;
}

uint64_t sub_21FDC3FBC()
{
  swift_beginAccess();
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_21FDC4010@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x150))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_21FDC4050(uint64_t a1, _QWORD **a2)
{
  id v2;
  void *v3;
  uint64_t (*v4)(id, void *);

  v2 = *(id *)a1;
  v3 = *(void **)(a1 + 8);
  v4 = *(uint64_t (**)(id, void *))((*MEMORY[0x24BEE4EA0] & **a2) + 0x158);
  outlined copy of ReactionEffectInteraction.PresentationContext?(*(id *)a1, v3);
  return v4(v2, v3);
}

uint64_t sub_21FDC40A8@<X0>(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x90))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_21FDC40EC(unsigned __int8 *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(_QWORD))((*MEMORY[0x24BEE4EA0] & **a2) + 0x98))(*a1);
}

uint64_t sub_21FDC4128()
{
  return 16;
}

__n128 sub_21FDC4134(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_21FDC4140@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0xA8))();
  *a2 = result;
  return result;
}

uint64_t sub_21FDC4180(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & **a2) + 0xB0);
  v3 = swift_retain();
  return v2(v3);
}

uint64_t sub_21FDC41C0()
{
  return 16;
}

__n128 sub_21FDC41CC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for Reaction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for Reaction(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Reaction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Reaction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for Reaction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for Reaction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Reaction()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FDC4440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for UUID();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for Reaction()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21FDC44C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UUID();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata completion function for Reaction()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t ObjC metadata update function for ReactionEffectInteraction()
{
  return type metadata accessor for ReactionEffectInteraction(0);
}

void type metadata completion function for ReactionEffectInteraction()
{
  unint64_t v0;

  type metadata accessor for Published<Reaction?>();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for ReactionEffectInteraction()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ReactionEffectInteraction.reaction.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ReactionEffectInteraction.$reaction.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ReactionEffectInteraction.view.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of ReactionEffectInteraction.associateWithSession<A>(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x110))();
}

uint64_t dispatch thunk of ReactionEffectInteraction.disassociateFromSession()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x118))();
}

uint64_t dispatch thunk of ReactionEffectInteraction.setReaction(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x120))();
}

uint64_t dispatch thunk of ReactionEffectInteraction.clearReaction(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x128))();
}

uint64_t dispatch thunk of ReactionEffectInteraction.updateReaction(_:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v4 = *(int **)((*MEMORY[0x24BEE4EA0] & *v1) + 0x130);
  v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = partial apply for closure #1 in ReactionPickerView.sendReaction(_:to:);
  return v7(a1);
}

uint64_t dispatch thunk of ReactionEffectInteraction.showReactions(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x138))();
}

uint64_t dispatch thunk of ReactionEffectInteraction.clearReactions()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x140))();
}

uint64_t dispatch thunk of ReactionEffectInteraction.postEvent<A>(for:from:in:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x148))();
}

uint64_t dispatch thunk of ReactionEffectInteraction._presentationContext.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x150))();
}

uint64_t dispatch thunk of ReactionEffectInteraction._presentationContext.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x158))();
}

uint64_t dispatch thunk of ReactionEffectInteraction._presentationContext.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x160))();
}

uint64_t dispatch thunk of ReactionEffectInteraction.presentationContext.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x168))();
}

uint64_t dispatch thunk of ReactionEffectInteraction.updateReactionEffect()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x178))();
}

void type metadata accessor for Published<Reaction?>()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Published<Reaction?>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Reaction?);
    v0 = type metadata accessor for Published();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Published<Reaction?>);
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for ReactionEffectInteraction.PresentationContext(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

void destroy for ReactionEffectInteraction.PresentationContext(id *a1)
{

}

uint64_t assignWithCopy for ReactionEffectInteraction.PresentationContext(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  return a1;
}

uint64_t assignWithTake for ReactionEffectInteraction.PresentationContext(uint64_t a1, _OWORD *a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for ReactionEffectInteraction.PresentationContext(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReactionEffectInteraction.PresentationContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReactionEffectInteraction.PresentationContext()
{
  return &type metadata for ReactionEffectInteraction.PresentationContext;
}

uint64_t type metadata completion function for ReactionEffectSourceView()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for ReactionEffectSourceView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ReactionEffectSourceView.shouldClear.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ReactionEffectSourceView.shouldClear.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ReactionEffectSourceView.shouldClear.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ReactionEffectSourceView.session.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ReactionEffectSourceView.session.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of ReactionEffectSourceView.session.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ReactionEffectSourceView.__allocating_init(session:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of ReactionEffectSourceView.updateEffectInteraction()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC8))();
}

uint64_t type metadata instantiation function for ReactionEffectSourceViewRepresentable()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t initializeBufferWithCopyOfBuffer for ReactionEffectModifier(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ReactionEffectSourceViewRepresentable(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for ReactionEffectModifier(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReactionEffectSourceViewRepresentable(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 9))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ReactionEffectSourceViewRepresentable(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_21FDC4CF0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  v4 = *a1;
  v5 = a1[1];
  v6 = type metadata accessor for ReactionEffectModifier(255, *a1, v5, a4);
  MEMORY[0x2207D4924](&protocol conformance descriptor for ReactionEffectModifier<A>, v6);
  v7 = type metadata accessor for _ViewModifier_Content();
  v9 = type metadata accessor for ReactionEffectSourceViewRepresentable(255, v4, v5, v8);
  MEMORY[0x2207D4924](&protocol conformance descriptor for ReactionEffectSourceViewRepresentable<A>, v9);
  v10 = type metadata accessor for _BackgroundModifier();
  v11 = type metadata accessor for ModifiedContent();
  v13[0] = MEMORY[0x2207D4924](MEMORY[0x24BDEFB78], v7);
  v13[1] = MEMORY[0x2207D4924](MEMORY[0x24BDEF370], v10);
  return MEMORY[0x2207D4924](MEMORY[0x24BDED308], v11, v13);
}

uint64_t sub_21FDC4DDC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v4 = a1[2];
  v5 = type metadata accessor for ReactionEffectModifier(255, a1[1], a1[3], a4);
  v6 = type metadata accessor for ModifiedContent();
  v8[0] = v4;
  v8[1] = MEMORY[0x2207D4924](&protocol conformance descriptor for ReactionEffectModifier<A>, v5);
  return MEMORY[0x2207D4924](MEMORY[0x24BDED308], v6, v8);
}

uint64_t storeEnumTagSinglePayload for Reaction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21FDC4EA0 + 4 * byte_21FDD7455[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21FDC4ED4 + 4 * byte_21FDD7450[v4]))();
}

uint64_t sub_21FDC4ED4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21FDC4EDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21FDC4EE4);
  return result;
}

uint64_t sub_21FDC4EF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21FDC4EF8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21FDC4EFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21FDC4F04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void *type metadata accessor for Reaction.CodingKeys()
{
  return &unk_24E5ADFC0;
}

uint64_t specialized Set.init(_nonEmptyArrayLiteral:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t result;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;

  v2 = type metadata accessor for PresentationDetent();
  v3 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2, v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = (char *)&v29 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<PresentationDetent>);
    v12 = static _SetStorage.allocate(capacity:)();
    v13 = 0;
    v14 = *(unsigned __int8 *)(v3 + 80);
    v30 = v11;
    v31 = a1 + ((v14 + 32) & ~v14);
    v15 = *(_QWORD *)(v3 + 72);
    v33 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v34 = v12 + 56;
    while (1)
    {
      v32 = v13;
      v33(v10, v31 + v15 * v13, v2);
      lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type PresentationDetent and conformance PresentationDetent, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEB10], MEMORY[0x24BDEEB20]);
      v16 = dispatch thunk of Hashable._rawHashValue(seed:)();
      v17 = ~(-1 << *(_BYTE *)(v12 + 32));
      v18 = v16 & v17;
      v19 = (v16 & (unint64_t)v17) >> 6;
      v20 = *(_QWORD *)(v34 + 8 * v19);
      v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        do
        {
          v33(v7, *(_QWORD *)(v12 + 48) + v18 * v15, v2);
          lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel((unint64_t *)&lazy protocol witness table cache variable for type PresentationDetent and conformance PresentationDetent, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEB10], MEMORY[0x24BDEEB28]);
          v22 = dispatch thunk of static Equatable.== infix(_:_:)();
          v23 = v3;
          v24 = *(void (**)(char *, uint64_t))(v3 + 8);
          v24(v7, v2);
          if ((v22 & 1) != 0)
          {
            v24(v10, v2);
            v3 = v23;
            v11 = v30;
            goto LABEL_4;
          }
          v18 = (v18 + 1) & v17;
          v19 = v18 >> 6;
          v20 = *(_QWORD *)(v34 + 8 * (v18 >> 6));
          v21 = 1 << v18;
          v3 = v23;
        }
        while ((v20 & (1 << v18)) != 0);
        v11 = v30;
      }
      *(_QWORD *)(v34 + 8 * v19) = v21 | v20;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v12 + 48) + v18 * v15, v10, v2);
      v26 = *(_QWORD *)(v12 + 16);
      v27 = __OFADD__(v26, 1);
      v28 = v26 + 1;
      if (v27)
        break;
      *(_QWORD *)(v12 + 16) = v28;
LABEL_4:
      v13 = v32 + 1;
      if (v32 + 1 == v11)
        return v12;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B08];
  }
  return result;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x2207D48AC](a1, v6, a5);
}

uint64_t ReactionPickerViewModel.isShowingPickerInPopover.getter()
{
  uint64_t v0;

  if (((*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))() & 1) == 0)
    return 0;
  if ((*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))())
  {
    swift_release();
    return 0;
  }
  return 1;
}

void key path getter for ReactionPickerViewModel.anchorPoint : ReactionPickerViewModel(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  *(double *)a2 = (*(double (**)(void))(**(_QWORD **)a1 + 128))();
  *(_QWORD *)(a2 + 8) = v3;
}

uint64_t key path setter for ReactionPickerViewModel.anchorPoint : ReactionPickerViewModel(double *a1, uint64_t a2)
{
  return (*(uint64_t (**)(double, double))(**(_QWORD **)a2 + 136))(*a1, a1[1]);
}

double ReactionPickerViewModel.anchorPoint.getter()
{
  double v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

void sub_21FDC53B8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  *(double *)a2 = (*(double (**)(void))(**(_QWORD **)a1 + 128))();
  *(_QWORD *)(a2 + 8) = v3;
}

uint64_t sub_21FDC53E8(double *a1, uint64_t a2)
{
  return (*(uint64_t (**)(double, double))(**(_QWORD **)a2 + 136))(*a1, a1[1]);
}

uint64_t ReactionPickerViewModel.anchorPoint.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t (*ReactionPickerViewModel.anchorPoint.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return ReactionPickerViewModel.anchorPoint.modify;
}

uint64_t key path setter for ReactionPickerViewModel.$anchorPoint : ReactionPickerViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGPoint>.Publisher);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v8 + 16))(v7, a1);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 160))(v7);
}

uint64_t ReactionPickerViewModel.$anchorPoint.getter()
{
  return ReactionHistoryViewModel.$filter.getter((uint64_t)&OBJC_IVAR____TtC22_GroupActivities_UIKit23ReactionPickerViewModel__anchorPoint, &demangling cache variable for type metadata for Published<CGPoint>);
}

uint64_t ReactionPickerViewModel.$anchorPoint.setter(uint64_t a1)
{
  return ReactionHistoryViewModel.$filter.setter(a1, &demangling cache variable for type metadata for Published<CGPoint>.Publisher, (uint64_t)&OBJC_IVAR____TtC22_GroupActivities_UIKit23ReactionPickerViewModel__anchorPoint, &demangling cache variable for type metadata for Published<CGPoint>);
}

uint64_t (*ReactionPickerViewModel.$anchorPoint.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGPoint>.Publisher);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC22_GroupActivities_UIKit23ReactionPickerViewModel__anchorPoint;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGPoint>);
  Published.projectedValue.getter();
  swift_endAccess();
  return ReactionHistoryViewModel.$filter.modify;
}

uint64_t key path getter for ReactionPickerViewModel.isShowingPicker : ReactionPickerViewModel@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 176))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for ReactionPickerViewModel.isShowingPicker : ReactionPickerViewModel(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 184))(*a1);
}

uint64_t ReactionPickerViewModel.isShowingPicker.getter()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_21FDC575C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 176))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_21FDC5790(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a2 + 184))(*a1);
}

uint64_t ReactionPickerViewModel.isShowingPicker.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t (*ReactionPickerViewModel.isShowingPicker.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return ReactionPickerViewModel.anchorPoint.modify;
}

uint64_t key path setter for ReactionPickerViewModel.$isShowingPicker : ReactionPickerViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v8 + 16))(v7, a1);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 208))(v7);
}

uint64_t ReactionPickerViewModel.$isShowingPicker.getter()
{
  return ReactionHistoryViewModel.$filter.getter((uint64_t)&OBJC_IVAR____TtC22_GroupActivities_UIKit23ReactionPickerViewModel__isShowingPicker, &demangling cache variable for type metadata for Published<Bool>);
}

uint64_t ReactionPickerViewModel.$isShowingPicker.setter(uint64_t a1)
{
  return ReactionHistoryViewModel.$filter.setter(a1, &demangling cache variable for type metadata for Published<Bool>.Publisher, (uint64_t)&OBJC_IVAR____TtC22_GroupActivities_UIKit23ReactionPickerViewModel__isShowingPicker, &demangling cache variable for type metadata for Published<Bool>);
}

uint64_t (*ReactionPickerViewModel.$isShowingPicker.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC22_GroupActivities_UIKit23ReactionPickerViewModel__isShowingPicker;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.getter();
  swift_endAccess();
  return ReactionHistoryViewModel.$filter.modify;
}

uint64_t key path getter for ReactionPickerViewModel.selectedReaction : ReactionPickerViewModel@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 224))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t key path setter for ReactionPickerViewModel.selectedReaction : ReactionPickerViewModel(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 232);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t ReactionPickerViewModel.selectedReaction.getter()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_21FDC5B08@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 224))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_21FDC5B38(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)a2 + 232);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t ReactionPickerViewModel.selectedReaction.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t (*ReactionPickerViewModel.selectedReaction.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return ReactionPickerViewModel.anchorPoint.modify;
}

uint64_t key path setter for ReactionPickerViewModel.$selectedReaction : ReactionPickerViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<String?>.Publisher);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v8 + 16))(v7, a1);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 256))(v7);
}

uint64_t ReactionPickerViewModel.$selectedReaction.getter()
{
  return ReactionHistoryViewModel.$filter.getter((uint64_t)&OBJC_IVAR____TtC22_GroupActivities_UIKit23ReactionPickerViewModel__selectedReaction, (uint64_t *)&demangling cache variable for type metadata for Published<String?>);
}

uint64_t ReactionPickerViewModel.$selectedReaction.setter(uint64_t a1)
{
  return ReactionHistoryViewModel.$filter.setter(a1, (uint64_t *)&demangling cache variable for type metadata for Published<String?>.Publisher, (uint64_t)&OBJC_IVAR____TtC22_GroupActivities_UIKit23ReactionPickerViewModel__selectedReaction, (uint64_t *)&demangling cache variable for type metadata for Published<String?>);
}

uint64_t (*ReactionPickerViewModel.$selectedReaction.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<String?>.Publisher);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC22_GroupActivities_UIKit23ReactionPickerViewModel__selectedReaction;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<String?>);
  Published.projectedValue.getter();
  swift_endAccess();
  return ReactionHistoryViewModel.$filter.modify;
}

uint64_t key path getter for ReactionPickerViewModel.reactions : ReactionPickerViewModel@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 272))();
  *a2 = result;
  return result;
}

uint64_t key path setter for ReactionPickerViewModel.reactions : ReactionPickerViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 280);
  v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t ReactionPickerViewModel.reactions.getter()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_21FDC5EC0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 272))();
  *a2 = result;
  return result;
}

uint64_t sub_21FDC5EF0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 280);
  v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t ReactionPickerViewModel.reactions.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t (*ReactionPickerViewModel.reactions.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return ReactionPickerViewModel.anchorPoint.modify;
}

uint64_t key path setter for ReactionPickerViewModel.$reactions : ReactionPickerViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[String]>.Publisher);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v8 + 16))(v7, a1);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 304))(v7);
}

uint64_t ReactionPickerViewModel.$reactions.getter()
{
  return ReactionHistoryViewModel.$filter.getter((uint64_t)&OBJC_IVAR____TtC22_GroupActivities_UIKit23ReactionPickerViewModel__reactions, &demangling cache variable for type metadata for Published<[String]>);
}

uint64_t ReactionPickerViewModel.$reactions.setter(uint64_t a1)
{
  return ReactionHistoryViewModel.$filter.setter(a1, &demangling cache variable for type metadata for Published<[String]>.Publisher, (uint64_t)&OBJC_IVAR____TtC22_GroupActivities_UIKit23ReactionPickerViewModel__reactions, &demangling cache variable for type metadata for Published<[String]>);
}

uint64_t (*ReactionPickerViewModel.$reactions.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[String]>.Publisher);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC22_GroupActivities_UIKit23ReactionPickerViewModel__reactions;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[String]>);
  Published.projectedValue.getter();
  swift_endAccess();
  return ReactionHistoryViewModel.$filter.modify;
}

uint64_t key path getter for ReactionPickerViewModel.detailsView : ReactionPickerViewModel@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 320))();
  *a2 = result;
  return result;
}

uint64_t key path setter for ReactionPickerViewModel.detailsView : ReactionPickerViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 328);
  v3 = swift_retain();
  return v2(v3);
}

uint64_t ReactionPickerViewModel.detailsView.getter()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_21FDC6258@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 320))();
  *a2 = result;
  return result;
}

uint64_t sub_21FDC6288(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a2 + 328);
  v3 = swift_retain();
  return v2(v3);
}

uint64_t ReactionPickerViewModel.detailsView.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t (*ReactionPickerViewModel.detailsView.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return ReactionPickerViewModel.anchorPoint.modify;
}

uint64_t key path setter for ReactionPickerViewModel.$detailsView : ReactionPickerViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<AnyView?>.Publisher);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v8 + 16))(v7, a1);
  return (*(uint64_t (**)(char *))(**(_QWORD **)a2 + 352))(v7);
}

uint64_t ReactionPickerViewModel.$detailsView.getter()
{
  return ReactionHistoryViewModel.$filter.getter((uint64_t)&OBJC_IVAR____TtC22_GroupActivities_UIKit23ReactionPickerViewModel__detailsView, &demangling cache variable for type metadata for Published<AnyView?>);
}

uint64_t ReactionPickerViewModel.$detailsView.setter(uint64_t a1)
{
  return ReactionHistoryViewModel.$filter.setter(a1, &demangling cache variable for type metadata for Published<AnyView?>.Publisher, (uint64_t)&OBJC_IVAR____TtC22_GroupActivities_UIKit23ReactionPickerViewModel__detailsView, &demangling cache variable for type metadata for Published<AnyView?>);
}

uint64_t (*ReactionPickerViewModel.$detailsView.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<AnyView?>.Publisher);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC22_GroupActivities_UIKit23ReactionPickerViewModel__detailsView;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<AnyView?>);
  Published.projectedValue.getter();
  swift_endAccess();
  return ReactionHistoryViewModel.$filter.modify;
}

uint64_t key path getter for ReactionPickerViewModel.onReaction : ReactionPickerViewModel@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD *);

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 368))();
  if (result)
  {
    v5 = result;
    v6 = v4;
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v5;
    *(_QWORD *)(result + 24) = v6;
    v7 = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed String?) -> ();
  }
  else
  {
    v7 = 0;
  }
  *a2 = v7;
  a2[1] = result;
  return result;
}

uint64_t key path setter for ReactionPickerViewModel.onReaction : ReactionPickerViewModel(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t (*v7)(_QWORD, uint64_t);

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed String?) -> (@out ());
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)a2 + 376);
  outlined copy of (@escaping @callee_guaranteed (@guaranteed String?) -> ())?(v3);
  return v7(v6, v5);
}

uint64_t ReactionPickerViewModel.onReaction.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC22_GroupActivities_UIKit23ReactionPickerViewModel_onReaction);
  swift_beginAccess();
  v2 = *v1;
  outlined copy of (@escaping @callee_guaranteed (@guaranteed String?) -> ())?(*v1);
  return v2;
}

uint64_t ReactionPickerViewModel.onReaction.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC22_GroupActivities_UIKit23ReactionPickerViewModel_onReaction);
  swift_beginAccess();
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  return outlined consume of (@escaping @callee_guaranteed () -> ())?(v6);
}

uint64_t (*ReactionPickerViewModel.onReaction.modify())()
{
  swift_beginAccess();
  return ReactionPickerView.reactions.modify;
}

uint64_t ReactionPickerViewModel.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = v0 + OBJC_IVAR____TtC22_GroupActivities_UIKit23ReactionPickerViewModel__anchorPoint;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGPoint>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC22_GroupActivities_UIKit23ReactionPickerViewModel__isShowingPicker;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC22_GroupActivities_UIKit23ReactionPickerViewModel__selectedReaction;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<String?>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v0 + OBJC_IVAR____TtC22_GroupActivities_UIKit23ReactionPickerViewModel__reactions;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[String]>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v0 + OBJC_IVAR____TtC22_GroupActivities_UIKit23ReactionPickerViewModel__detailsView;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<AnyView?>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  outlined consume of (@escaping @callee_guaranteed () -> ())?(*(_QWORD *)(v0
                                                                         + OBJC_IVAR____TtC22_GroupActivities_UIKit23ReactionPickerViewModel_onReaction));
  return v0;
}

uint64_t ReactionPickerViewModel.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = v0 + OBJC_IVAR____TtC22_GroupActivities_UIKit23ReactionPickerViewModel__anchorPoint;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGPoint>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC22_GroupActivities_UIKit23ReactionPickerViewModel__isShowingPicker;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC22_GroupActivities_UIKit23ReactionPickerViewModel__selectedReaction;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<String?>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v0 + OBJC_IVAR____TtC22_GroupActivities_UIKit23ReactionPickerViewModel__reactions;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[String]>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v0 + OBJC_IVAR____TtC22_GroupActivities_UIKit23ReactionPickerViewModel__detailsView;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<AnyView?>);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  outlined consume of (@escaping @callee_guaranteed () -> ())?(*(_QWORD *)(v0
                                                                         + OBJC_IVAR____TtC22_GroupActivities_UIKit23ReactionPickerViewModel_onReaction));
  return swift_deallocClassInstance();
}

uint64_t ReactionPickerViewModel.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  ReactionPickerViewModel.init()();
  return v0;
}

uint64_t ReactionPickerViewModel.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<AnyView?>);
  v36 = *(_QWORD *)(v1 - 8);
  v37 = v1;
  MEMORY[0x24BDAC7A8](v1, v2);
  v35 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[String]>);
  v33 = *(_QWORD *)(v4 - 8);
  v34 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<String?>);
  v31 = *(_QWORD *)(v8 - 8);
  v32 = v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<CGPoint>);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17, v19);
  v21 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = v0 + OBJC_IVAR____TtC22_GroupActivities_UIKit23ReactionPickerViewModel__anchorPoint;
  type metadata accessor for CGPoint(0);
  v38 = 0;
  v39 = 0;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v22, v21, v17);
  v23 = v0 + OBJC_IVAR____TtC22_GroupActivities_UIKit23ReactionPickerViewModel__isShowingPicker;
  LOBYTE(v38) = 0;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v23, v16, v12);
  v24 = v0 + OBJC_IVAR____TtC22_GroupActivities_UIKit23ReactionPickerViewModel__selectedReaction;
  v38 = 0;
  v39 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v24, v11, v32);
  v25 = v0 + OBJC_IVAR____TtC22_GroupActivities_UIKit23ReactionPickerViewModel__reactions;
  v38 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(v25, v7, v34);
  v26 = v0 + OBJC_IVAR____TtC22_GroupActivities_UIKit23ReactionPickerViewModel__detailsView;
  v38 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AnyView?);
  v27 = v35;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))(v26, v27, v37);
  v28 = (_QWORD *)(v0 + OBJC_IVAR____TtC22_GroupActivities_UIKit23ReactionPickerViewModel_onReaction);
  *v28 = 0;
  v28[1] = 0;
  return v0;
}

uint64_t protocol witness for ObservableObject.objectWillChange.getter in conformance ReactionPickerViewModel@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for ReactionPickerViewModel();
  result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t key path getter for ReactionPickerViewModel.isShowingPickerInPopover : ReactionPickerViewModel@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *a1;
  result = (*(uint64_t (**)(void))(*(_QWORD *)*a1 + 176))();
  if ((result & 1) != 0)
  {
    result = (*(uint64_t (**)(void))(*(_QWORD *)v3 + 320))();
    if (!result)
    {
      v5 = 1;
      goto LABEL_6;
    }
    result = swift_release();
  }
  v5 = 0;
LABEL_6:
  *a2 = v5;
  return result;
}

uint64_t (*ReactionPickerViewModel.isShowingPickerInPopover.modify(_QWORD *a1))()
{
  uint64_t v1;
  char *v2;
  char v3;

  *a1 = v1;
  v2 = (char *)(a1 + 1);
  if (((*(uint64_t (**)(void))(*(_QWORD *)v1 + 176))() & 1) != 0)
  {
    if (!(*(uint64_t (**)(void))(*(_QWORD *)v1 + 320))())
    {
      v3 = 1;
      goto LABEL_6;
    }
    swift_release();
  }
  v3 = 0;
LABEL_6:
  *v2 = v3;
  return ReactionPickerViewModel.isShowingPickerInPopover.modify;
}

uint64_t ReactionPickerViewModel.isShowingPickerInSheet.getter()
{
  uint64_t v0;
  uint64_t result;

  if (((*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))() & 1) == 0)
    return 0;
  result = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
  if (result)
  {
    swift_release();
    return 1;
  }
  return result;
}

uint64_t key path getter for ReactionPickerViewModel.isShowingPickerInSheet : ReactionPickerViewModel@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *a1;
  result = (*(uint64_t (**)(void))(*(_QWORD *)*a1 + 176))();
  if ((result & 1) != 0 && (result = (*(uint64_t (**)(void))(*(_QWORD *)v3 + 320))()) != 0)
  {
    result = swift_release();
    v5 = 1;
  }
  else
  {
    v5 = 0;
  }
  *a2 = v5;
  return result;
}

uint64_t ReactionPickerViewModel.isShowingPickerInSheet.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t (*ReactionPickerViewModel.isShowingPickerInSheet.modify(_QWORD *a1))()
{
  uint64_t v1;
  char *v2;
  char v3;

  *a1 = v1;
  v2 = (char *)(a1 + 1);
  if (((*(uint64_t (**)(void))(*(_QWORD *)v1 + 176))() & 1) != 0 && (*(uint64_t (**)(void))(*(_QWORD *)v1 + 320))())
  {
    swift_release();
    v3 = 1;
  }
  else
  {
    v3 = 0;
  }
  *v2 = v3;
  return ReactionPickerViewModel.isShowingPickerInPopover.modify;
}

uint64_t ReactionPickerViewModel.isShowingPickerInPopover.modify(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a1 + 184))(a1[8]);
}

uint64_t ReactionPickerOverlayView.model.getter(uint64_t a1)
{
  uint64_t result;

  if (a1)
    return swift_retain();
  type metadata accessor for ReactionPickerViewModel();
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel((unint64_t *)&lazy protocol witness table cache variable for type ReactionPickerViewModel and conformance ReactionPickerViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ReactionPickerViewModel, (uint64_t)"uh}.4z");
  result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ReactionPickerViewModel()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ReactionPickerViewModel;
  if (!type metadata singleton initialization cache for ReactionPickerViewModel)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ReactionPickerOverlayView.$model.getter()
{
  type metadata accessor for ReactionPickerViewModel();
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel((unint64_t *)&lazy protocol witness table cache variable for type ReactionPickerViewModel and conformance ReactionPickerViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ReactionPickerViewModel, (uint64_t)"uh}.4z");
  return EnvironmentObject.projectedValue.getter();
}

uint64_t ReactionPickerOverlayView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t OpaqueTypeConformance2;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD v28[2];
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 v39;

  v33 = a3;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ZStack<TupleView<(<<opaque return type of View.onTapGesture(count:perform:)>>.0, _VariadicView.Tree<_LayoutRoot<ReactionPickerAnchoredLayout>, ReactionPickerBubble?>)>>);
  MEMORY[0x24BDAC7A8](v30, v5);
  v7 = (_QWORD *)((char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0);
  v31 = *(_QWORD *)(v8 - 8);
  v32 = v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v7 = static Alignment.bottomTrailing.getter();
  v7[1] = v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_ZStackLayout, TupleView<(<<opaque return type of View.onTapGesture(count:perform:)>>.0, _VariadicView.Tree<_LayoutRoot<ReactionPickerAnchoredLayout>, ReactionPickerBubble?>)>>);
  closure #1 in ReactionPickerOverlayView.body.getter(a1, a2, (char *)v7 + *(int *)(v13 + 44));
  type metadata accessor for ReactionPickerViewModel();
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel((unint64_t *)&lazy protocol witness table cache variable for type ReactionPickerViewModel and conformance ReactionPickerViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ReactionPickerViewModel, (uint64_t)"uh}.4z");
  EnvironmentObject.projectedValue.getter();
  swift_getKeyPath();
  EnvironmentObject.Wrapper.subscript.getter();
  swift_release();
  swift_release();
  v28[1] = v38;
  v29 = v39;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  swift_retain();
  v28[0] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.presentationDetents(_:)>>.0);
  lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type ZStack<TupleView<(<<opaque return type of View.onTapGesture(count:perform:)>>.0, _VariadicView.Tree<_LayoutRoot<ReactionPickerAnchoredLayout>, ReactionPickerBubble?>)>> and conformance ZStack<A>, &demangling cache variable for type metadata for ZStack<TupleView<(<<opaque return type of View.onTapGesture(count:perform:)>>.0, _VariadicView.Tree<_LayoutRoot<ReactionPickerAnchoredLayout>, ReactionPickerBubble?>)>>, MEMORY[0x24BDF4750]);
  v15 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of View.presentationBackground<A>(alignment:content:)>>.0);
  v16 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of View.presentationDragIndicator(_:)>>.0);
  v17 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ShapeView<RoundedRectangle, Material>, _OverlayModifier<VStack<TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ShapeView<Capsule, Color>, _FrameLayout>, Spacer)>>>>)>>);
  v18 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(AnyView?, Spacer)>>, _InsetViewModifier<VStack<TupleView<(ReactionPickerBubble, ModifiedContent<Spacer, _FrameLayout>)>>>>);
  v19 = lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(AnyView?, Spacer)>>, _InsetViewModifier<VStack<TupleView<(ReactionPickerBubble, ModifiedContent<Spacer, _FrameLayout>)>>>> and conformance <> ModifiedContent<A, B>();
  v34 = v18;
  v35 = v19;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v21 = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type VStack<TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ShapeView<RoundedRectangle, Material>, _OverlayModifier<VStack<TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ShapeView<Capsule, Color>, _FrameLayout>, Spacer)>>>>)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ShapeView<RoundedRectangle, Material>, _OverlayModifier<VStack<TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ShapeView<Capsule, Color>, _FrameLayout>, Spacer)>>>>)>>, MEMORY[0x24BDF4700]);
  v34 = v16;
  v35 = v17;
  v36 = OpaqueTypeConformance2;
  v37 = v21;
  v22 = swift_getOpaqueTypeConformance2();
  v34 = v15;
  v35 = v22;
  swift_getOpaqueTypeConformance2();
  View.sheet<A>(isPresented:onDismiss:content:)();
  swift_release();
  swift_release();
  swift_release();
  outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v7, &demangling cache variable for type metadata for ZStack<TupleView<(<<opaque return type of View.onTapGesture(count:perform:)>>.0, _VariadicView.Tree<_LayoutRoot<ReactionPickerAnchoredLayout>, ReactionPickerBubble?>)>>);
  v24 = v31;
  v23 = v32;
  v25 = v33;
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 16))(v33, v11, v32);
  v26 = (_QWORD *)(v25
                 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, _CoordinateSpaceModifier<String>>)
                          + 36));
  *v26 = 0xD000000000000019;
  v26[1] = 0x800000021FDD7B50;
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v11, v23);
}

uint64_t closure #1 in ReactionPickerOverlayView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  double (*v31)(uint64_t);
  uint64_t v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  double *v46;
  void (*v47)(char *, uint64_t);
  uint64_t result;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;

  v50 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.onTapGesture(count:perform:)>>.0);
  v51 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v7, v10);
  v13 = (char *)&v49 - v12;
  MEMORY[0x24BDAC7A8](v11, v14);
  v16 = (char *)&v49 - v15;
  v17 = static Color.black.getter();
  v18 = static Edge.Set.all.getter();
  if (a1)
  {
    v19 = v18;
    v20 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 176);
    v21 = swift_retain();
    v22 = v20(v21);
    v52 = v9;
    if ((v22 & 1) != 0 && (v23 = (*(uint64_t (**)(void))(*(_QWORD *)a1 + 320))(), swift_release(), !v23))
    {
      v24 = 0x3FD3333333333333;
    }
    else
    {
      swift_release();
      v24 = 0;
    }
    v25 = static Animation.default.getter();
    v26 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 176);
    v27 = swift_retain();
    v28 = v26(v27);
    swift_release();
    v54 = v17;
    LOBYTE(v55) = v19;
    v56 = v24;
    v57 = v25;
    v58 = v28 & 1;
    v29 = swift_allocObject();
    *(_QWORD *)(v29 + 16) = a1;
    *(_QWORD *)(v29 + 24) = a2;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Color, _SafeAreaIgnoringLayout>, _OpacityEffect>, _AnimationModifier<Bool>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Color, _SafeAreaIgnoringLayout>, _OpacityEffect>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    View.onTapGesture(count:perform:)();
    swift_release();
    swift_release();
    swift_release();
    v30 = v51;
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v16, v13, v5);
    v31 = *(double (**)(uint64_t))(*(_QWORD *)a1 + 128);
    v32 = swift_retain();
    v33 = v31(v32);
    v35 = v34;
    swift_release();
    v36 = swift_retain();
    if ((v26(v36) & 1) != 0)
    {
      v37 = (*(uint64_t (**)(void))(*(_QWORD *)a1 + 320))();
      swift_release();
      v38 = v52;
      if (v37)
      {
        swift_release();
        v39 = 0;
        v40 = 0;
        v41 = 0;
        v42 = 1;
      }
      else
      {
        type metadata accessor for ReactionPickerViewModel();
        lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel((unint64_t *)&lazy protocol witness table cache variable for type ReactionPickerViewModel and conformance ReactionPickerViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ReactionPickerViewModel, (uint64_t)"uh}.4z");
        v42 = EnvironmentObject.init()();
        v39 = v43;
        v53 = 0;
        State.init(wrappedValue:)();
        v40 = v54;
        v41 = v55;
      }
    }
    else
    {
      swift_release();
      v39 = 0;
      v40 = 0;
      v41 = 0;
      v42 = 1;
      v38 = v52;
    }
    v44 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
    v44(v38, v16, v5);
    v45 = v50;
    v44(v50, v38, v5);
    v46 = (double *)&v45[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (<<opaque return type of View.onTapGesture(count:perform:)>>.0, _VariadicView.Tree<_LayoutRoot<ReactionPickerAnchoredLayout>, ReactionPickerBubble?>))
                                + 48)];
    *v46 = v33;
    *((_QWORD *)v46 + 1) = v35;
    v46[2] = 10.0;
    *((_QWORD *)v46 + 3) = v42;
    *((_QWORD *)v46 + 4) = v39;
    *((_QWORD *)v46 + 5) = v40;
    *((_QWORD *)v46 + 6) = v41;
    outlined copy of ReactionPickerBubble?(v42);
    v47 = *(void (**)(char *, uint64_t))(v30 + 8);
    v47(v16, v5);
    outlined consume of ReactionPickerBubble?(v42);
    return ((uint64_t (*)(char *, uint64_t))v47)(v38, v5);
  }
  else
  {
    type metadata accessor for ReactionPickerViewModel();
    lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel((unint64_t *)&lazy protocol witness table cache variable for type ReactionPickerViewModel and conformance ReactionPickerViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ReactionPickerViewModel, (uint64_t)"uh}.4z");
    result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t closure #1 in closure #1 in ReactionPickerOverlayView.body.getter(uint64_t a1)
{
  void (*v1)(_QWORD);
  uint64_t result;

  if (a1)
  {
    v1 = *(void (**)(_QWORD))(*(_QWORD *)a1 + 184);
    swift_retain();
    v1(0);
    return swift_release();
  }
  else
  {
    type metadata accessor for ReactionPickerViewModel();
    lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel((unint64_t *)&lazy protocol witness table cache variable for type ReactionPickerViewModel and conformance ReactionPickerViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ReactionPickerViewModel, (uint64_t)"uh}.4z");
    result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

double default argument 1 of ReactionPickerAnchoredLayout.init(anchorPoint:paddingFromEdge:)()
{
  return 10.0;
}

uint64_t closure #2 in ReactionPickerOverlayView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  char v17;
  int v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t OpaqueTypeConformance2;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  char v64;
  char v65;
  char v66;
  char v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;

  v50 = a2;
  v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.presentationDragIndicator(_:)>>.0);
  v42 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45, v3);
  v41 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.presentationBackground<A>(alignment:content:)>>.0);
  v48 = *(_QWORD *)(v5 - 8);
  v49 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v47 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.presentationDetents(_:)>>.0);
  v44 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46, v8);
  v43 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = static HorizontalAlignment.center.getter();
  if (a1)
  {
    v10 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 320);
    v11 = swift_retain();
    v38 = v10(v11);
    swift_release();
    OpaqueTypeConformance2 = static HorizontalAlignment.center.getter();
    v37 = static HorizontalAlignment.center.getter();
    closure #1 in closure #2 in closure #2 in ReactionPickerOverlayView.body.getter((uint64_t)&v69);
    v12 = v69;
    v13 = v70;
    v14 = v71;
    v15 = *((_QWORD *)&v71 + 1);
    v16 = BYTE8(v72);
    v32 = v73;
    v33 = v72;
    v17 = BYTE8(v73);
    LOBYTE(v10) = BYTE8(v74);
    v36 = v75;
    v34 = v74;
    v35 = *((_QWORD *)&v75 + 1);
    v18 = VerticalEdge.rawValue.getter();
    v19 = MEMORY[0x2207D3A6C]((2 * v18));
    v20 = static SafeAreaRegions.container.getter();
    v68 = 1;
    v67 = v16;
    v66 = v17;
    v65 = (char)v10;
    v64 = 1;
    v69 = v40;
    v70 = 0;
    LOBYTE(v71) = 1;
    *((_QWORD *)&v71 + 1) = v38;
    *(_QWORD *)&v72 = 0;
    BYTE8(v72) = 1;
    v73 = (unint64_t)v37;
    LOBYTE(v74) = 1;
    *((_QWORD *)&v74 + 1) = v12;
    *(_QWORD *)&v75 = v13;
    BYTE8(v75) = v14;
    *(_QWORD *)&v76 = v15;
    *((_QWORD *)&v76 + 1) = v33;
    LOBYTE(v77) = v16;
    *((_QWORD *)&v77 + 1) = v32;
    LOBYTE(v78) = v17;
    *((_QWORD *)&v78 + 1) = v34;
    LOBYTE(v79) = (_BYTE)v10;
    *((_QWORD *)&v79 + 1) = v36;
    *(_QWORD *)&v80 = v35;
    *((_QWORD *)&v80 + 1) = v20;
    *(_QWORD *)&v81 = 0;
    BYTE8(v81) = 1;
    BYTE9(v81) = v19;
    v82 = OpaqueTypeConformance2;
    v61 = v80;
    v62 = v81;
    v63 = OpaqueTypeConformance2;
    v57 = v76;
    v58 = v77;
    v59 = v78;
    v60 = v79;
    v53 = v72;
    v54 = (unint64_t)v37;
    v55 = v74;
    v56 = v75;
    v51 = (unint64_t)v40;
    v52 = v71;
    v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(AnyView?, Spacer)>>, _InsetViewModifier<VStack<TupleView<(ReactionPickerBubble, ModifiedContent<Spacer, _FrameLayout>)>>>>);
    v22 = lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(AnyView?, Spacer)>>, _InsetViewModifier<VStack<TupleView<(ReactionPickerBubble, ModifiedContent<Spacer, _FrameLayout>)>>>> and conformance <> ModifiedContent<A, B>();
    v23 = v41;
    View.presentationDragIndicator(_:)();
    outlined release of ModifiedContent<VStack<TupleView<(AnyView?, Spacer)>>, _InsetViewModifier<VStack<TupleView<(ReactionPickerBubble, ModifiedContent<Spacer, _FrameLayout>)>>>>((uint64_t)&v69);
    static Alignment.center.getter();
    v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ShapeView<RoundedRectangle, Material>, _OverlayModifier<VStack<TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ShapeView<Capsule, Color>, _FrameLayout>, Spacer)>>>>)>>);
    *(_QWORD *)&v51 = v21;
    *((_QWORD *)&v51 + 1) = v22;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v24 = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type VStack<TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ShapeView<RoundedRectangle, Material>, _OverlayModifier<VStack<TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ShapeView<Capsule, Color>, _FrameLayout>, Spacer)>>>>)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ShapeView<RoundedRectangle, Material>, _OverlayModifier<VStack<TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ShapeView<Capsule, Color>, _FrameLayout>, Spacer)>>>>)>>, MEMORY[0x24BDF4700]);
    v25 = v47;
    v26 = v45;
    View.presentationBackground<A>(alignment:content:)();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v23, v26);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<PresentationDetent>);
    type metadata accessor for PresentationDetent();
    v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_21FDD79B0;
    static PresentationDetent.medium.getter();
    static PresentationDetent.fraction(_:)();
    specialized Set.init(_nonEmptyArrayLiteral:)(v27);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    *(_QWORD *)&v51 = v26;
    *((_QWORD *)&v51 + 1) = v40;
    *(_QWORD *)&v52 = OpaqueTypeConformance2;
    *((_QWORD *)&v52 + 1) = v24;
    swift_getOpaqueTypeConformance2();
    v28 = v43;
    v29 = v49;
    View.presentationDetents(_:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v25, v29);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v44 + 32))(v50, v28, v46);
  }
  else
  {
    type metadata accessor for ReactionPickerViewModel();
    lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel((unint64_t *)&lazy protocol witness table cache variable for type ReactionPickerViewModel and conformance ReactionPickerViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ReactionPickerViewModel, (uint64_t)"uh}.4z");
    result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_21FDC7B94()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in ReactionPickerOverlayView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return closure #2 in ReactionPickerOverlayView.body.getter(*(_QWORD *)(v1 + 16), a1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(AnyView?, Spacer)>>, _InsetViewModifier<VStack<TupleView<(ReactionPickerBubble, ModifiedContent<Spacer, _FrameLayout>)>>>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(AnyView?, Spacer)>>, _InsetViewModifier<VStack<TupleView<(ReactionPickerBubble, ModifiedContent<Spacer, _FrameLayout>)>>>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(AnyView?, Spacer)>>, _InsetViewModifier<VStack<TupleView<(ReactionPickerBubble, ModifiedContent<Spacer, _FrameLayout>)>>>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(AnyView?, Spacer)>>, _InsetViewModifier<VStack<TupleView<(ReactionPickerBubble, ModifiedContent<Spacer, _FrameLayout>)>>>>);
    v2[0] = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type VStack<TupleView<(AnyView?, Spacer)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(AnyView?, Spacer)>>, MEMORY[0x24BDF4700]);
    v2[1] = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type _InsetViewModifier<VStack<TupleView<(ReactionPickerBubble, ModifiedContent<Spacer, _FrameLayout>)>>> and conformance _InsetViewModifier<A>, &demangling cache variable for type metadata for _InsetViewModifier<VStack<TupleView<(ReactionPickerBubble, ModifiedContent<Spacer, _FrameLayout>)>>>, MEMORY[0x24BDEEC88]);
    result = MEMORY[0x2207D4924](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(AnyView?, Spacer)>>, _InsetViewModifier<VStack<TupleView<(ReactionPickerBubble, ModifiedContent<Spacer, _FrameLayout>)>>>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

double closure #1 in closure #2 in closure #2 in ReactionPickerOverlayView.body.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __int128 v10;

  type metadata accessor for ReactionPickerViewModel();
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel((unint64_t *)&lazy protocol witness table cache variable for type ReactionPickerViewModel and conformance ReactionPickerViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ReactionPickerViewModel, (uint64_t)"uh}.4z");
  v2 = EnvironmentObject.init()();
  v4 = v3;
  State.init(wrappedValue:)();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 1;
  *(_QWORD *)(a1 + 48) = v6;
  *(_BYTE *)(a1 + 56) = v7;
  *(_QWORD *)(a1 + 64) = v8;
  *(_BYTE *)(a1 + 72) = v9;
  result = *(double *)&v10;
  *(_OWORD *)(a1 + 80) = v10;
  return result;
}

uint64_t closure #3 in closure #2 in ReactionPickerOverlayView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  *(_QWORD *)a1 = static HorizontalAlignment.center.getter();
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ShapeView<RoundedRectangle, Material>, _OverlayModifier<VStack<TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ShapeView<Capsule, Color>, _FrameLayout>, Spacer)>>>>)>>);
  return closure #1 in closure #3 in closure #2 in ReactionPickerOverlayView.body.getter(a1 + *(int *)(v2 + 44));
}

uint64_t closure #1 in closure #3 in closure #2 in ReactionPickerOverlayView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v29)(void);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned __int8 v49;
  uint64_t v50;
  unsigned __int8 v51;
  uint64_t v52;
  uint64_t v53;

  v47 = type metadata accessor for Material();
  v2 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47, v3);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for RoundedRectangle();
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (_OWORD *)((char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ShapeView<RoundedRectangle, Material>);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ShapeView<RoundedRectangle, Material>, _OverlayModifier<VStack<TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ShapeView<Capsule, Color>, _FrameLayout>, Spacer)>>>>);
  v15 = MEMORY[0x24BDAC7A8](v40, v14);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15, v18);
  v20 = (char *)&v40 - v19;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v46 = v48;
  v45 = v49;
  v44 = v50;
  v43 = v51;
  v41 = v53;
  v42 = v52;
  v21 = (char *)v9 + *(int *)(v6 + 20);
  v22 = *MEMORY[0x24BDEEB68];
  v23 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v21, v22, v23);
  __asm { FMOV            V0.2D, #16.0 }
  *v9 = _Q0;
  static Material.thick.getter();
  v29 = MEMORY[0x24BDED998];
  outlined init with copy of RoundedRectangle((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  v30 = v47;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(&v13[*(int *)(v10 + 52)], v5, v47);
  *(_WORD *)&v13[*(int *)(v10 + 56)] = 256;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v30);
  outlined destroy of RoundedRectangle((uint64_t)v9, (uint64_t (*)(_QWORD))v29);
  v31 = static Alignment.center.getter();
  v33 = v32;
  v34 = &v20[*(int *)(v40 + 36)];
  *(_QWORD *)v34 = static HorizontalAlignment.center.getter();
  *((_QWORD *)v34 + 1) = 0;
  v34[16] = 1;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ShapeView<Capsule, Color>, _FrameLayout>, Spacer)>>);
  closure #1 in closure #1 in closure #1 in closure #3 in closure #2 in ReactionPickerOverlayView.body.getter((uint64_t)&v34[*(int *)(v35 + 44)]);
  v36 = (uint64_t *)&v34[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _OverlayModifier<VStack<TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ShapeView<Capsule, Color>, _FrameLayout>, Spacer)>>>)
                               + 36)];
  *v36 = v31;
  v36[1] = v33;
  outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>((uint64_t)v13, (uint64_t)v20, &demangling cache variable for type metadata for _ShapeView<RoundedRectangle, Material>);
  outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>((uint64_t)v20, (uint64_t)v17, &demangling cache variable for type metadata for ModifiedContent<_ShapeView<RoundedRectangle, Material>, _OverlayModifier<VStack<TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ShapeView<Capsule, Color>, _FrameLayout>, Spacer)>>>>);
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)(a1 + 16) = v46;
  *(_BYTE *)(a1 + 24) = v45;
  *(_QWORD *)(a1 + 32) = v44;
  *(_BYTE *)(a1 + 40) = v43;
  v37 = v41;
  *(_QWORD *)(a1 + 48) = v42;
  *(_QWORD *)(a1 + 56) = v37;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ShapeView<RoundedRectangle, Material>, _OverlayModifier<VStack<TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ShapeView<Capsule, Color>, _FrameLayout>, Spacer)>>>>));
  outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>((uint64_t)v17, a1 + *(int *)(v38 + 48), &demangling cache variable for type metadata for ModifiedContent<_ShapeView<RoundedRectangle, Material>, _OverlayModifier<VStack<TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ShapeView<Capsule, Color>, _FrameLayout>, Spacer)>>>>);
  outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v20, &demangling cache variable for type metadata for ModifiedContent<_ShapeView<RoundedRectangle, Material>, _OverlayModifier<VStack<TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ShapeView<Capsule, Color>, _FrameLayout>, Spacer)>>>>);
  return outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v17, &demangling cache variable for type metadata for ModifiedContent<_ShapeView<RoundedRectangle, Material>, _OverlayModifier<VStack<TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ShapeView<Capsule, Color>, _FrameLayout>, Spacer)>>>>);
}

uint64_t closure #1 in closure #1 in closure #1 in closure #3 in closure #2 in ReactionPickerOverlayView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void);
  char *v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 v40;
  uint64_t v41;
  unsigned __int8 v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;

  v2 = type metadata accessor for Color.RGBColorSpace();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Capsule();
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ShapeView<Capsule, Color>);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ShapeView<Capsule, Color>, _FrameLayout>);
  v16 = MEMORY[0x24BDAC7A8](v38, v15);
  v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16, v19);
  v21 = (char *)&v32 - v20;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v37 = v39;
  v36 = v40;
  v35 = v41;
  v34 = v42;
  v32 = v44;
  v33 = v43;
  v22 = *MEMORY[0x24BDEEB68];
  v23 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v10, v22, v23);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, *MEMORY[0x24BDF3C28], v2);
  v24 = MEMORY[0x2207D3C64](v6, 0.73, 0.74, 0.74, 1.0);
  v25 = MEMORY[0x24BDF48E8];
  outlined init with copy of RoundedRectangle((uint64_t)v10, (uint64_t)v14, (uint64_t (*)(_QWORD))MEMORY[0x24BDF48E8]);
  *(_QWORD *)&v14[*(int *)(v11 + 52)] = v24;
  *(_WORD *)&v14[*(int *)(v11 + 56)] = 256;
  outlined destroy of RoundedRectangle((uint64_t)v10, (uint64_t (*)(_QWORD))v25);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>((uint64_t)v14, (uint64_t)v18, &demangling cache variable for type metadata for _ShapeView<Capsule, Color>);
  v26 = &v18[*(int *)(v38 + 36)];
  v27 = v46;
  *(_OWORD *)v26 = v45;
  *((_OWORD *)v26 + 1) = v27;
  *((_OWORD *)v26 + 2) = v47;
  outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v14, &demangling cache variable for type metadata for _ShapeView<Capsule, Color>);
  outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>((uint64_t)v18, (uint64_t)v21, &demangling cache variable for type metadata for ModifiedContent<_ShapeView<Capsule, Color>, _FrameLayout>);
  outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>((uint64_t)v21, (uint64_t)v18, &demangling cache variable for type metadata for ModifiedContent<_ShapeView<Capsule, Color>, _FrameLayout>);
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)(a1 + 16) = v37;
  *(_BYTE *)(a1 + 24) = v36;
  *(_QWORD *)(a1 + 32) = v35;
  *(_BYTE *)(a1 + 40) = v34;
  v28 = v32;
  *(_QWORD *)(a1 + 48) = v33;
  *(_QWORD *)(a1 + 56) = v28;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ShapeView<Capsule, Color>, _FrameLayout>, Spacer));
  outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>((uint64_t)v18, a1 + *(int *)(v29 + 48), &demangling cache variable for type metadata for ModifiedContent<_ShapeView<Capsule, Color>, _FrameLayout>);
  v30 = a1 + *(int *)(v29 + 64);
  *(_QWORD *)v30 = 0;
  *(_BYTE *)(v30 + 8) = 1;
  outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v21, &demangling cache variable for type metadata for ModifiedContent<_ShapeView<Capsule, Color>, _FrameLayout>);
  return outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v18, &demangling cache variable for type metadata for ModifiedContent<_ShapeView<Capsule, Color>, _FrameLayout>);
}

uint64_t ReactionPickerOverlayView.init()()
{
  type metadata accessor for ReactionPickerViewModel();
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel((unint64_t *)&lazy protocol witness table cache variable for type ReactionPickerViewModel and conformance ReactionPickerViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ReactionPickerViewModel, (uint64_t)"uh}.4z");
  return EnvironmentObject.init()();
}

uint64_t default argument 0 of ReactionPickerOverlayView.init(model:)()
{
  type metadata accessor for ReactionPickerViewModel();
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel((unint64_t *)&lazy protocol witness table cache variable for type ReactionPickerViewModel and conformance ReactionPickerViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ReactionPickerViewModel, (uint64_t)"uh}.4z");
  return EnvironmentObject.init()();
}

uint64_t protocol witness for View.body.getter in conformance ReactionPickerOverlayView@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return ReactionPickerOverlayView.body.getter(*v1, v1[1], a1);
}

void ReactionPickerAnchoredLayout.anchorPoint.setter(double a1, double a2)
{
  double *v2;

  *v2 = a1;
  v2[1] = a2;
}

uint64_t (*ReactionPickerAnchoredLayout.anchorPoint.modify())()
{
  return destructiveProjectEnumData for GroupActivitySharingResult;
}

double ReactionPickerAnchoredLayout.paddingFromEdge.getter(double a1, double a2, double a3)
{
  return a3;
}

void ReactionPickerAnchoredLayout.paddingFromEdge.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t (*ReactionPickerAnchoredLayout.paddingFromEdge.modify())()
{
  return destructiveProjectEnumData for GroupActivitySharingResult;
}

double ReactionPickerAnchoredLayout.sizeThatFits(proposal:subviews:cache:)(uint64_t a1, char a2)
{
  double result;

  result = *(double *)&a1;
  if ((a2 & 1) != 0)
    return 10.0;
  return result;
}

uint64_t ReactionPickerAnchoredLayout.placeSubviews(in:proposal:subviews:cache:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  return specialized ReactionPickerAnchoredLayout.placeSubviews(in:proposal:subviews:cache:)(a1, a2 & 1, a3, a4 & 1, a5);
}

double protocol witness for Layout.sizeThatFits(proposal:subviews:cache:) in conformance ReactionPickerAnchoredLayout(uint64_t a1, char a2)
{
  double result;

  result = *(double *)&a1;
  if ((a2 & 1) != 0)
    return 10.0;
  return result;
}

uint64_t protocol witness for Layout.placeSubviews(in:proposal:subviews:cache:) in conformance ReactionPickerAnchoredLayout(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  return specialized ReactionPickerAnchoredLayout.placeSubviews(in:proposal:subviews:cache:)(a1, a2 & 1, a3, a4 & 1, a5);
}

uint64_t protocol witness for Layout.explicitAlignment(of:in:proposal:subviews:cache:) in conformance ReactionPickerAnchoredLayout(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return protocol witness for Layout.explicitAlignment(of:in:proposal:subviews:cache:) in conformance ReactionPickerAnchoredLayout(a1, a2, a3, a4, a5, a6, a7, a8, a9, MEMORY[0x24BDF44F8]);
}

{
  return protocol witness for Layout.explicitAlignment(of:in:proposal:subviews:cache:) in conformance ReactionPickerAnchoredLayout(a1, a2, a3, a4, a5, a6, a7, a8, a9, MEMORY[0x24BDF4500]);
}

uint64_t protocol witness for Layout.explicitAlignment(of:in:proposal:subviews:cache:) in conformance ReactionPickerAnchoredLayout(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t))
{
  return a10(a1);
}

void (*protocol witness for Animatable.animatableData.modify in conformance ReactionPickerAnchoredLayout(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = Animatable<>.animatableData.modify();
  return protocol witness for Animatable.animatableData.modify in conformance ReactionPickerAnchoredLayout;
}

void protocol witness for Animatable.animatableData.modify in conformance ReactionPickerAnchoredLayout(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t specialized ReactionPickerAnchoredLayout.placeSubviews(in:proposal:subviews:cache:)(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(uint64_t *, _QWORD);
  char *v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  char *v32;
  char v33;
  char v34;
  uint64_t v35;
  int v37;
  int v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  char *v43;
  uint64_t v44;
  char v45;
  uint64_t v46[4];

  v37 = a4;
  v38 = a2;
  v40 = a1;
  v41 = a3;
  v6 = type metadata accessor for LayoutSubview();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v39 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LayoutSubviews();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEC778];
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v13);
  v43 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LayoutSubview?);
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IndexingIterator<LayoutSubviews>);
  v21 = MEMORY[0x24BDAC7A8](v19, v20);
  v23 = (char *)&v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21, v24);
  v26 = (char *)&v37 - v25;
  v44 = v12;
  v42 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v42(v23, a5, v10);
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type LayoutSubviews and conformance LayoutSubviews, v11, MEMORY[0x24BDEC7A0]);
  dispatch thunk of Collection.startIndex.getter();
  *(_QWORD *)&v23[*(int *)(v19 + 36)] = v46[0];
  outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>((uint64_t)v23, (uint64_t)v26, &demangling cache variable for type metadata for IndexingIterator<LayoutSubviews>);
  v27 = &v26[*(int *)(v19 + 36)];
  v28 = *(_QWORD *)v27;
  dispatch thunk of Collection.endIndex.getter();
  if (v28 == v46[0])
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v18, 1, 1, v6);
  }
  else
  {
    v37 &= 1u;
    v38 &= 1u;
    while (1)
    {
      v29 = (void (*)(uint64_t *, _QWORD))dispatch thunk of Collection.subscript.read();
      (*(void (**)(char *))(v7 + 16))(v18);
      v29(v46, 0);
      v30 = v43;
      v42(v43, (uint64_t)v26, v10);
      dispatch thunk of Collection.formIndex(after:)();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v30, v10);
      v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
      v31(v18, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v18, 1, v6) == 1)
        break;
      v32 = v39;
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v39, v18, v6);
      static ProposedViewSize.unspecified.getter();
      LOBYTE(v46[0]) = v33 & 1;
      v45 = v34 & 1;
      LayoutSubview.sizeThatFits(_:)();
      static UnitPoint.bottomTrailing.getter();
      LOBYTE(v46[0]) = v38;
      v45 = v37;
      LayoutSubview.place(at:anchor:proposal:)();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v32, v6);
      v35 = *(_QWORD *)v27;
      dispatch thunk of Collection.endIndex.getter();
      if (v35 == v46[0])
      {
        v31(v18, 1, 1, v6);
        return outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v26, &demangling cache variable for type metadata for IndexingIterator<LayoutSubviews>);
      }
    }
  }
  return outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v26, &demangling cache variable for type metadata for IndexingIterator<LayoutSubviews>);
}

uint64_t associated type witness table accessor for View.Body : View in ReactionPickerOverlayView()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t lazy protocol witness table accessor for type ReactionPickerAnchoredLayout and conformance ReactionPickerAnchoredLayout()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ReactionPickerAnchoredLayout and conformance ReactionPickerAnchoredLayout;
  if (!lazy protocol witness table cache variable for type ReactionPickerAnchoredLayout and conformance ReactionPickerAnchoredLayout)
  {
    result = MEMORY[0x2207D4924](&protocol conformance descriptor for ReactionPickerAnchoredLayout, &type metadata for ReactionPickerAnchoredLayout);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ReactionPickerAnchoredLayout and conformance ReactionPickerAnchoredLayout);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type EmptyAnimatableData and conformance EmptyAnimatableData()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type EmptyAnimatableData and conformance EmptyAnimatableData;
  if (!lazy protocol witness table cache variable for type EmptyAnimatableData and conformance EmptyAnimatableData)
  {
    result = MEMORY[0x2207D4924](MEMORY[0x24BDEEF18], MEMORY[0x24BDEEF38]);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EmptyAnimatableData and conformance EmptyAnimatableData);
  }
  return result;
}

uint64_t sub_21FDC8AF4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(_QWORD **)a1 + 152))();
}

uint64_t sub_21FDC8B20(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(_QWORD **)a1 + 200))();
}

uint64_t sub_21FDC8B4C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(_QWORD **)a1 + 248))();
}

uint64_t sub_21FDC8B78(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(_QWORD **)a1 + 296))();
}

uint64_t sub_21FDC8BA4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(_QWORD **)a1 + 344))();
}

uint64_t ObjC metadata update function for ReactionPickerViewModel()
{
  return type metadata accessor for ReactionPickerViewModel();
}

void type metadata completion function for ReactionPickerViewModel()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  type metadata accessor for Published<CGPoint>();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Published<Bool>();
    if (v1 <= 0x3F)
    {
      type metadata accessor for Published<String?>(319, (unint64_t *)&lazy cache variable for type metadata for Published<String?>, &demangling cache variable for type metadata for String?);
      if (v2 <= 0x3F)
      {
        type metadata accessor for Published<String?>(319, &lazy cache variable for type metadata for Published<[String]>, &demangling cache variable for type metadata for [String]);
        if (v3 <= 0x3F)
        {
          type metadata accessor for Published<String?>(319, &lazy cache variable for type metadata for Published<AnyView?>, &demangling cache variable for type metadata for AnyView?);
          if (v4 <= 0x3F)
            swift_updateClassMetadata2();
        }
      }
    }
  }
}

uint64_t method lookup function for ReactionPickerViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ReactionPickerViewModel.anchorPoint.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of ReactionPickerViewModel.anchorPoint.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of ReactionPickerViewModel.anchorPoint.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of ReactionPickerViewModel.$anchorPoint.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of ReactionPickerViewModel.$anchorPoint.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of ReactionPickerViewModel.$anchorPoint.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of ReactionPickerViewModel.isShowingPicker.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of ReactionPickerViewModel.isShowingPicker.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of ReactionPickerViewModel.isShowingPicker.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of ReactionPickerViewModel.$isShowingPicker.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of ReactionPickerViewModel.$isShowingPicker.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of ReactionPickerViewModel.$isShowingPicker.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of ReactionPickerViewModel.selectedReaction.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of ReactionPickerViewModel.selectedReaction.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of ReactionPickerViewModel.selectedReaction.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of ReactionPickerViewModel.$selectedReaction.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of ReactionPickerViewModel.$selectedReaction.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of ReactionPickerViewModel.$selectedReaction.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of ReactionPickerViewModel.reactions.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of ReactionPickerViewModel.reactions.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of ReactionPickerViewModel.reactions.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of ReactionPickerViewModel.$reactions.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of ReactionPickerViewModel.$reactions.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of ReactionPickerViewModel.$reactions.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of ReactionPickerViewModel.detailsView.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of ReactionPickerViewModel.detailsView.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of ReactionPickerViewModel.detailsView.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of ReactionPickerViewModel.$detailsView.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of ReactionPickerViewModel.$detailsView.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of ReactionPickerViewModel.$detailsView.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of ReactionPickerViewModel.onReaction.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t dispatch thunk of ReactionPickerViewModel.onReaction.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of ReactionPickerViewModel.onReaction.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of ReactionPickerViewModel.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 392))();
}

void type metadata accessor for Published<CGPoint>()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Published<CGPoint>)
  {
    type metadata accessor for CGPoint(255);
    v0 = type metadata accessor for Published();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Published<CGPoint>);
  }
}

void type metadata accessor for Published<Bool>()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for Published<Bool>)
  {
    v0 = type metadata accessor for Published();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Published<Bool>);
  }
}

ValueMetadata *type metadata accessor for ReactionPickerOverlayView()
{
  return &type metadata for ReactionPickerOverlayView;
}

uint64_t getEnumTagSinglePayload for ReactionPickerAnchoredLayout(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ReactionPickerAnchoredLayout(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ReactionPickerAnchoredLayout()
{
  return &type metadata for ReactionPickerAnchoredLayout;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, _CoordinateSpaceModifier<String>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[6];

  result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, _CoordinateSpaceModifier<String>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, _CoordinateSpaceModifier<String>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, _CoordinateSpaceModifier<String>>);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ZStack<TupleView<(<<opaque return type of View.onTapGesture(count:perform:)>>.0, _VariadicView.Tree<_LayoutRoot<ReactionPickerAnchoredLayout>, ReactionPickerBubble?>)>>);
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of View.presentationDetents(_:)>>.0);
    v4 = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type ZStack<TupleView<(<<opaque return type of View.onTapGesture(count:perform:)>>.0, _VariadicView.Tree<_LayoutRoot<ReactionPickerAnchoredLayout>, ReactionPickerBubble?>)>> and conformance ZStack<A>, &demangling cache variable for type metadata for ZStack<TupleView<(<<opaque return type of View.onTapGesture(count:perform:)>>.0, _VariadicView.Tree<_LayoutRoot<ReactionPickerAnchoredLayout>, ReactionPickerBubble?>)>>, MEMORY[0x24BDF4750]);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of View.presentationBackground<A>(alignment:content:)>>.0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of View.presentationDragIndicator(_:)>>.0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ShapeView<RoundedRectangle, Material>, _OverlayModifier<VStack<TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ShapeView<Capsule, Color>, _FrameLayout>, Spacer)>>>>)>>);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(AnyView?, Spacer)>>, _InsetViewModifier<VStack<TupleView<(ReactionPickerBubble, ModifiedContent<Spacer, _FrameLayout>)>>>>);
    lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(AnyView?, Spacer)>>, _InsetViewModifier<VStack<TupleView<(ReactionPickerBubble, ModifiedContent<Spacer, _FrameLayout>)>>>> and conformance <> ModifiedContent<A, B>();
    swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type VStack<TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ShapeView<RoundedRectangle, Material>, _OverlayModifier<VStack<TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ShapeView<Capsule, Color>, _FrameLayout>, Spacer)>>>>)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ShapeView<RoundedRectangle, Material>, _OverlayModifier<VStack<TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<_ShapeView<Capsule, Color>, _FrameLayout>, Spacer)>>>>)>>, MEMORY[0x24BDF4700]);
    swift_getOpaqueTypeConformance2();
    v5[2] = v2;
    v5[3] = v3;
    v5[4] = v4;
    v5[5] = swift_getOpaqueTypeConformance2();
    v5[0] = swift_getOpaqueTypeConformance2();
    v5[1] = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type _CoordinateSpaceModifier<String> and conformance _CoordinateSpaceModifier<A>, &demangling cache variable for type metadata for _CoordinateSpaceModifier<String>, MEMORY[0x24BDF06F0]);
    result = MEMORY[0x2207D4924](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, _CoordinateSpaceModifier<String>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t sub_21FDC915C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t outlined release of ModifiedContent<VStack<TupleView<(AnyView?, Spacer)>>, _InsetViewModifier<VStack<TupleView<(ReactionPickerBubble, ModifiedContent<Spacer, _FrameLayout>)>>>>(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t outlined init with copy of RoundedRectangle(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t outlined destroy of RoundedRectangle(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t partial apply for closure #1 in closure #1 in ReactionPickerOverlayView.body.getter()
{
  uint64_t v0;

  return closure #1 in closure #1 in ReactionPickerOverlayView.body.getter(*(_QWORD *)(v0 + 16));
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Color, _SafeAreaIgnoringLayout>, _OpacityEffect>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Color, _SafeAreaIgnoringLayout>, _OpacityEffect>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Color, _SafeAreaIgnoringLayout>, _OpacityEffect>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Color, _SafeAreaIgnoringLayout>, _OpacityEffect>, _AnimationModifier<Bool>>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Color, _SafeAreaIgnoringLayout>, _OpacityEffect> and conformance <> ModifiedContent<A, B>();
    v2[1] = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type _AnimationModifier<Bool> and conformance _AnimationModifier<A>, &demangling cache variable for type metadata for _AnimationModifier<Bool>, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x2207D4924](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Color, _SafeAreaIgnoringLayout>, _OpacityEffect>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Color, _SafeAreaIgnoringLayout>, _OpacityEffect> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Color, _SafeAreaIgnoringLayout>, _OpacityEffect> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Color, _SafeAreaIgnoringLayout>, _OpacityEffect> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Color, _SafeAreaIgnoringLayout>, _OpacityEffect>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<Color, _SafeAreaIgnoringLayout> and conformance <> ModifiedContent<A, B>();
    v2[1] = MEMORY[0x24BDECC38];
    result = MEMORY[0x2207D4924](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Color, _SafeAreaIgnoringLayout>, _OpacityEffect> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Color, _SafeAreaIgnoringLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<Color, _SafeAreaIgnoringLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Color, _SafeAreaIgnoringLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Color, _SafeAreaIgnoringLayout>);
    v2[0] = MEMORY[0x24BDF3E20];
    v2[1] = MEMORY[0x24BDF0420];
    result = MEMORY[0x2207D4924](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Color, _SafeAreaIgnoringLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t outlined copy of ReactionPickerBubble?(uint64_t result)
{
  if (result != 1)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t outlined consume of ReactionPickerBubble?(uint64_t result)
{
  if (result != 1)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t default argument 0 of ReactionButton.init(model:emoji:isVisible:)()
{
  type metadata accessor for ReactionPickerViewModel();
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel((unint64_t *)&lazy protocol witness table cache variable for type ReactionPickerViewModel and conformance ReactionPickerViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ReactionPickerViewModel, (uint64_t)"uh}.4z");
  return EnvironmentObject.init()();
}

uint64_t ReactionButton.init(model:emoji:isVisible:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  *(_QWORD *)a6 = result;
  *(_QWORD *)(a6 + 8) = a2;
  *(_QWORD *)(a6 + 16) = a3;
  *(_QWORD *)(a6 + 24) = a4;
  *(_BYTE *)(a6 + 32) = a5;
  return result;
}

uint64_t ReactionButtonTransform.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  double v49;
  char *v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  BOOL v67;
  double v68;
  char *v69;
  double v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  double v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;

  v90 = a4;
  v91 = a1;
  v96 = a5;
  v93 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>, ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>>, ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>>.Storage);
  MEMORY[0x24BDAC7A8](v93, v7);
  v95 = (uint64_t)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>, ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>>.Storage);
  MEMORY[0x24BDAC7A8](v88, v9);
  v11 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>, ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>>);
  MEMORY[0x24BDAC7A8](v94, v12);
  v89 = (char *)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>);
  v15 = MEMORY[0x24BDAC7A8](v92, v14);
  v17 = (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v15, v18);
  v86 = (char *)&v85 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19, v21);
  v24 = (char *)&v85 - v23;
  MEMORY[0x24BDAC7A8](v22, v25);
  v27 = (char *)&v85 - v26;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>);
  v30 = MEMORY[0x24BDAC7A8](v28, v29);
  v32 = (char *)&v85 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BDAC7A8](v30, v33);
  v87 = (uint64_t)&v85 - v35;
  v37 = MEMORY[0x24BDAC7A8](v34, v36);
  v39 = (char *)&v85 - v38;
  MEMORY[0x24BDAC7A8](v37, v40);
  v42 = (char *)&v85 - v41;
  if (a2 == 2375131120 && a3 == 0xA400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    static UnitPoint.center.getter();
    v44 = v43;
    v46 = v45;
    v47 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ViewModifier_Content<ReactionButtonTransform>);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v27, v91, v47);
    v48 = (v90 & 1) == 0;
    v49 = 1.0;
    if ((v90 & 1) != 0)
      v49 = 0.0;
    v50 = &v27[*(int *)(v92 + 36)];
    *(double *)v50 = v49;
    *((double *)v50 + 1) = v49;
    *((_QWORD *)v50 + 2) = v44;
    *((_QWORD *)v50 + 3) = v46;
    if (v48)
      v51 = 0.0;
    else
      v51 = -0.785398163;
    static UnitPoint.bottomLeading.getter();
    v53 = v52;
    v55 = v54;
    outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>((uint64_t)v27, (uint64_t)v39, &demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>);
    v56 = &v39[*(int *)(v28 + 36)];
    *(double *)v56 = v51;
    *((_QWORD *)v56 + 1) = v53;
    *((_QWORD *)v56 + 2) = v55;
    outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v27, &demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>);
    v57 = &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>;
    outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>((uint64_t)v39, (uint64_t)v42, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>);
    outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>((uint64_t)v42, (uint64_t)v11, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect> and conformance <> ModifiedContent<A, B>, MEMORY[0x24BDED5D8]);
    v58 = (uint64_t)v89;
    _ConditionalContent<>.init(storage:)();
    outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>(v58, v95, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>, ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>, ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>> and conformance <> _ConditionalContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    outlined destroy of PartialRangeThrough<DynamicTypeSize>(v58, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>, ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>>);
    goto LABEL_10;
  }
  if ((a2 != 2391908336 || a3 != 0xA400000000000000) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    if ((v90 & 1) != 0)
      v78 = 0.0;
    else
      v78 = 1.0;
    static UnitPoint.center.getter();
    v80 = v79;
    v82 = v81;
    v83 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ViewModifier_Content<ReactionButtonTransform>);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 16))(v17, v91, v83);
    v84 = &v17[*(int *)(v92 + 36)];
    *(double *)v84 = v78;
    *((double *)v84 + 1) = v78;
    *((_QWORD *)v84 + 2) = v80;
    *((_QWORD *)v84 + 3) = v82;
    v57 = &demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>;
    v42 = v86;
    outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>((uint64_t)v17, (uint64_t)v86, &demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>);
    outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>((uint64_t)v42, v95, &demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>, ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>> and conformance <> _ConditionalContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
LABEL_10:
    v59 = (uint64_t)v42;
    v60 = v57;
    return outlined destroy of PartialRangeThrough<DynamicTypeSize>(v59, v60);
  }
  static UnitPoint.center.getter();
  v63 = v62;
  v65 = v64;
  v66 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ViewModifier_Content<ReactionButtonTransform>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v24, v91, v66);
  v67 = (v90 & 1) == 0;
  v68 = 1.0;
  if ((v90 & 1) != 0)
    v68 = 0.0;
  v69 = &v24[*(int *)(v92 + 36)];
  *(double *)v69 = v68;
  *((double *)v69 + 1) = v68;
  *((_QWORD *)v69 + 2) = v63;
  *((_QWORD *)v69 + 3) = v65;
  if (v67)
    v70 = 0.0;
  else
    v70 = -0.785398163;
  static UnitPoint.topTrailing.getter();
  v72 = v71;
  v74 = v73;
  outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>((uint64_t)v24, (uint64_t)v32, &demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>);
  v75 = &v32[*(int *)(v28 + 36)];
  *(double *)v75 = v70;
  *((_QWORD *)v75 + 1) = v72;
  *((_QWORD *)v75 + 2) = v74;
  outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v24, &demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>);
  v76 = v87;
  outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>((uint64_t)v32, v87, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>);
  outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>(v76, (uint64_t)v11, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>);
  swift_storeEnumTagMultiPayload();
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect> and conformance <> ModifiedContent<A, B>, MEMORY[0x24BDED5D8]);
  v77 = (uint64_t)v89;
  _ConditionalContent<>.init(storage:)();
  outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>(v77, v95, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>, ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>>);
  swift_storeEnumTagMultiPayload();
  lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>, ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>> and conformance <> _ConditionalContent<A, B>();
  lazy protocol witness table accessor for type ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect> and conformance <> ModifiedContent<A, B>();
  _ConditionalContent<>.init(storage:)();
  outlined destroy of PartialRangeThrough<DynamicTypeSize>(v77, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>, ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>>);
  v59 = v76;
  v60 = &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>;
  return outlined destroy of PartialRangeThrough<DynamicTypeSize>(v59, v60);
}

uint64_t protocol witness for ViewModifier.body(content:) in conformance ReactionButtonTransform@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return ReactionButtonTransform.body(content:)(a1, *(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(unsigned __int8 *)(v2 + 16), a2);
}

uint64_t ReactionButton.model.getter()
{
  _QWORD *v0;
  uint64_t result;

  if (*v0)
    return swift_retain();
  type metadata accessor for ReactionPickerViewModel();
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel((unint64_t *)&lazy protocol witness table cache variable for type ReactionPickerViewModel and conformance ReactionPickerViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ReactionPickerViewModel, (uint64_t)"uh}.4z");
  result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t ReactionButton.$model.getter()
{
  type metadata accessor for ReactionPickerViewModel();
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel((unint64_t *)&lazy protocol witness table cache variable for type ReactionPickerViewModel and conformance ReactionPickerViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ReactionPickerViewModel, (uint64_t)"uh}.4z");
  return EnvironmentObject.projectedValue.getter();
}

uint64_t ReactionButton.emoji.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ReactionButton.emoji.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ReactionButton.emoji.modify())()
{
  return destructiveProjectEnumData for GroupActivitySharingResult;
}

uint64_t ReactionButton.isVisible.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t ReactionButton.isVisible.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = result;
  return result;
}

uint64_t (*ReactionButton.isVisible.modify())()
{
  return destructiveProjectEnumData for GroupActivitySharingResult;
}

uint64_t ReactionButton.isSelected.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t result;

  v1 = v0;
  if (*(_QWORD *)v0)
  {
    v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)v0 + 224);
    v3 = swift_retain();
    v4 = v2(v3);
    v6 = v5;
    swift_release();
    if (v6)
    {
      if (v4 == *(_QWORD *)(v1 + 16) && v6 == *(_QWORD *)(v1 + 24))
        v8 = 1;
      else
        v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      v8 = 0;
    }
    return v8 & 1;
  }
  else
  {
    type metadata accessor for ReactionPickerViewModel();
    lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel((unint64_t *)&lazy protocol witness table cache variable for type ReactionPickerViewModel and conformance ReactionPickerViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ReactionPickerViewModel, (uint64_t)"uh}.4z");
    result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t ReactionButton.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t (*v49)(uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  unint64_t *v60;
  uint64_t result;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v2 = v1;
  v78 = a1;
  v3 = type metadata accessor for AutomaticHoverEffect();
  v73 = *(_QWORD *)(v3 - 8);
  v74 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v72 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for AccessibilityTraits();
  v66 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68, v6);
  v8 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0>);
  v63 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64, v9);
  v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Button<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0>, AccessibilityAttachmentModifier>);
  MEMORY[0x24BDAC7A8](v67, v12);
  v14 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0);
  v70 = *(_QWORD *)(v15 - 8);
  v71 = v15;
  MEMORY[0x24BDAC7A8](v15, v16);
  v69 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0, ReactionButtonTransform>);
  MEMORY[0x24BDAC7A8](v65, v18);
  v77 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0, ReactionButtonTransform>, _BackgroundModifier<ModifiedContent<_ShapeView<Circle._Inset, _OpacityShapeStyle<HierarchicalShapeStyle>>, _OpacityEffect>?>>);
  MEMORY[0x24BDAC7A8](v75, v20);
  v76 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *v1;
  v62 = v1[1];
  v23 = v1[3];
  v79 = v1[2];
  v24 = swift_allocObject();
  v25 = *((_OWORD *)v1 + 1);
  *(_OWORD *)(v24 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v24 + 32) = v25;
  *(_BYTE *)(v24 + 48) = *((_BYTE *)v1 + 32);
  v80 = v1;
  swift_retain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0);
  v26 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for PartialRangeThrough<DynamicTypeSize>);
  v27 = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type PartialRangeThrough<DynamicTypeSize> and conformance PartialRangeThrough<A>, &demangling cache variable for type metadata for PartialRangeThrough<DynamicTypeSize>, MEMORY[0x24BEE30C8]);
  v81 = MEMORY[0x24BDF1FA8];
  v82 = v26;
  v83 = MEMORY[0x24BDF1F80];
  v84 = v27;
  swift_getOpaqueTypeConformance2();
  Button.init(action:label:)();
  if (v22)
  {
    v28 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v22 + 224);
    v29 = swift_retain();
    v30 = v28(v29);
    v32 = v31;
    swift_release();
    if (v32)
    {
      if (v30 == v79 && v32 == v23)
      {
        swift_bridgeObjectRelease();
LABEL_7:
        static AccessibilityTraits.isSelected.getter();
        v34 = v68;
        goto LABEL_9;
      }
      v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v33 & 1) != 0)
        goto LABEL_7;
    }
    v81 = MEMORY[0x24BEE4AF8];
    lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type AccessibilityTraits and conformance AccessibilityTraits, (uint64_t (*)(uint64_t))MEMORY[0x24BDEED88], MEMORY[0x24BDEEDA8]);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [AccessibilityTraits]);
    lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type [AccessibilityTraits] and conformance [A], &demangling cache variable for type metadata for [AccessibilityTraits], MEMORY[0x24BEE12C8]);
    v34 = v68;
    dispatch thunk of SetAlgebra.init<A>(_:)();
LABEL_9:
    lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type Button<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0> and conformance Button<A>, &demangling cache variable for type metadata for Button<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0>, MEMORY[0x24BDF43B0]);
    v35 = v64;
    View.accessibilityAddTraits(_:)();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v8, v34);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v11, v35);
    v36 = v72;
    static CustomHoverEffect<>.automatic.getter();
    lazy protocol witness table accessor for type ModifiedContent<Button<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type AutomaticHoverEffect and conformance AutomaticHoverEffect, (uint64_t (*)(uint64_t))MEMORY[0x24BDEF428], MEMORY[0x24BDEF420]);
    v37 = v69;
    v38 = v74;
    View.hoverEffect<A>(_:isEnabled:)();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v36, v38);
    outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v14, &demangling cache variable for type metadata for ModifiedContent<Button<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0>, AccessibilityAttachmentModifier>);
    v39 = v2[4] & 1;
    v40 = v70;
    v41 = v71;
    v42 = (uint64_t)v77;
    (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v77, v37, v71);
    v43 = v42 + *(int *)(v65 + 36);
    v44 = v79;
    *(_QWORD *)v43 = v79;
    *(_QWORD *)(v43 + 8) = v23;
    *(_BYTE *)(v43 + 16) = v39 ^ 1;
    v45 = *(void (**)(char *, uint64_t))(v40 + 8);
    swift_bridgeObjectRetain();
    v45(v37, v41);
    v46 = static Alignment.center.getter();
    v48 = v47;
    v49 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v22 + 224);
    v50 = swift_retain();
    v51 = v49(v50);
    v53 = v52;
    swift_release();
    if (v53)
    {
      v54 = v78;
      v55 = (uint64_t)v76;
      if (v51 == v44 && v53 == v23)
      {
        swift_bridgeObjectRelease();
LABEL_15:
        v53 = static HierarchicalShapeStyle.quaternary.getter() | 0x3F00000000000000;
        if (v39)
          v57 = 0x3FF0000000000000;
        else
          v57 = 0;
        v56 = 0xC020000000000000;
        v58 = 256;
        goto LABEL_20;
      }
      v59 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v59 & 1) != 0)
        goto LABEL_15;
      v56 = 0;
      v53 = 0;
      v57 = 0;
      v58 = 2;
    }
    else
    {
      v56 = 0;
      v57 = 0;
      v58 = 2;
      v54 = v78;
      v55 = (uint64_t)v76;
    }
LABEL_20:
    outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>(v42, v55, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0, ReactionButtonTransform>);
    v60 = (unint64_t *)(v55 + *(int *)(v75 + 36));
    *v60 = v56;
    v60[1] = v53;
    v60[2] = v58;
    v60[3] = v57;
    v60[4] = v46;
    v60[5] = v48;
    outlined destroy of PartialRangeThrough<DynamicTypeSize>(v42, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0, ReactionButtonTransform>);
    return outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout>(v55, v54, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0, ReactionButtonTransform>, _BackgroundModifier<ModifiedContent<_ShapeView<Circle._Inset, _OpacityShapeStyle<HierarchicalShapeStyle>>, _OpacityEffect>?>>);
  }
  type metadata accessor for ReactionPickerViewModel();
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel((unint64_t *)&lazy protocol witness table cache variable for type ReactionPickerViewModel and conformance ReactionPickerViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ReactionPickerViewModel, (uint64_t)"uh}.4z");
  result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t closure #1 in ReactionButton.body.getter(uint64_t *a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;

  v2 = *a1;
  if (*a1)
  {
    v3 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 368);
    v4 = swift_retain();
    v5 = (void (*)(uint64_t, uint64_t))v3(v4);
    result = swift_release();
    if (v5)
    {
      v7 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 224);
      v8 = swift_retain();
      v9 = v7(v8);
      v11 = v10;
      swift_release();
      v12 = a1[2];
      v13 = a1[3];
      if (v11)
      {
        if (v9 == v12 && v11 == v13)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if ((v15 & 1) == 0)
            goto LABEL_13;
        }
        v12 = 0;
        v13 = 0;
      }
LABEL_13:
      v5(v12, v13);
      return outlined consume of (@escaping @callee_guaranteed () -> ())?((uint64_t)v5);
    }
  }
  else
  {
    type metadata accessor for ReactionPickerViewModel();
    lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel((unint64_t *)&lazy protocol witness table cache variable for type ReactionPickerViewModel and conformance ReactionPickerViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ReactionPickerViewModel, (uint64_t)"uh}.4z");
    result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_21FDCA510()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ReactionButton.body.getter()
{
  uint64_t v0;

  return closure #1 in ReactionButton.body.getter((uint64_t *)(v0 + 16));
}

uint64_t closure #2 in ReactionButton.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  v26 = a2;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialRangeThrough<DynamicTypeSize>);
  MEMORY[0x24BDAC7A8](v25, v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v27 = v6;
  v28 = v7;
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  v8 = Text.init<A>(_:)();
  v10 = v9;
  v12 = v11 & 1;
  static Font.title2.getter();
  v13 = Text.font(_:)();
  v15 = v14;
  v17 = v16;
  v19 = v18;
  swift_release();
  outlined consume of Text.Storage(v8, v10, v12);
  swift_bridgeObjectRelease();
  v27 = v13;
  v28 = v15;
  v29 = v17 & 1;
  v30 = v19;
  v20 = *MEMORY[0x24BDECF28];
  v21 = type metadata accessor for DynamicTypeSize();
  v22 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v5, v20, v21);
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type DynamicTypeSize and conformance DynamicTypeSize, v22, MEMORY[0x24BDECF78]);
  result = dispatch thunk of static Equatable.== infix(_:_:)();
  if ((result & 1) != 0)
  {
    lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type PartialRangeThrough<DynamicTypeSize> and conformance PartialRangeThrough<A>, &demangling cache variable for type metadata for PartialRangeThrough<DynamicTypeSize>, MEMORY[0x24BEE30C8]);
    View.dynamicTypeSize<A>(_:)();
    outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v5, &demangling cache variable for type metadata for PartialRangeThrough<DynamicTypeSize>);
    outlined consume of Text.Storage(v27, v28, v29);
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t partial apply for closure #2 in ReactionButton.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return closure #2 in ReactionButton.body.getter(*(_QWORD *)(v1 + 16), a1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Button<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<Button<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Button<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Button<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0>, AccessibilityAttachmentModifier>);
    v2[0] = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type Button<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0> and conformance Button<A>, &demangling cache variable for type metadata for Button<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0>, MEMORY[0x24BDF43B0]);
    v2[1] = lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type AccessibilityAttachmentModifier and conformance AccessibilityAttachmentModifier, MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x2207D4924](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Button<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t protocol witness for View.body.getter in conformance ReactionButton@<X0>(uint64_t a1@<X8>)
{
  return ReactionButton.body.getter(a1);
}

uint64_t MoreReactions.isEntryViewFocused.getter()
{
  unsigned __int8 v1;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FocusState<Bool>);
  FocusState.wrappedValue.getter();
  return v1;
}

uint64_t key path getter for MoreReactions.isEntryViewFocused : MoreReactions@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FocusState<Bool>);
  result = FocusState.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t key path setter for MoreReactions.isEntryViewFocused : MoreReactions()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FocusState<Bool>);
  return FocusState.wrappedValue.setter();
}

uint64_t MoreReactions.isEntryViewFocused.setter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FocusState<Bool>);
  return FocusState.wrappedValue.setter();
}

void (*MoreReactions.isEntryViewFocused.modify(_QWORD *a1, char a2, uint64_t a3, char a4))(uint64_t a1)
{
  _BYTE *v8;

  v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[20] = a4;
  *((_QWORD *)v8 + 3) = a3;
  v8[19] = a2;
  *v8 = a2;
  *((_QWORD *)v8 + 1) = a3;
  v8[16] = a4;
  swift_retain();
  *((_QWORD *)v8 + 4) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FocusState<Bool>);
  FocusState.wrappedValue.getter();
  return MoreReactions.isEntryViewFocused.modify;
}

void MoreReactions.isEntryViewFocused.modify(uint64_t a1)
{
  _QWORD *v1;
  char v2;
  char v3;
  uint64_t v4;

  v1 = *(_QWORD **)a1;
  v2 = *(_BYTE *)(*(_QWORD *)a1 + 17);
  v3 = *(_BYTE *)(*(_QWORD *)a1 + 20);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  *(_BYTE *)v1 = *(_BYTE *)(*(_QWORD *)a1 + 19);
  v1[1] = v4;
  *((_BYTE *)v1 + 16) = v3;
  *((_BYTE *)v1 + 18) = v2;
  FocusState.wrappedValue.setter();
  swift_release();
  free(v1);
}

uint64_t MoreReactions.$isEntryViewFocused.getter()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FocusState<Bool>);
  FocusState.projectedValue.getter();
  return v1;
}

uint64_t MoreReactions.body.getter@<X0>(char a1@<W0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  __int128 v15;
  _OWORD v17[3];

  v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ZStack<TupleView<(<<opaque return type of View.focused(_:)>>.0, <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0)>>);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (uint64_t *)((char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v11 = static Alignment.center.getter();
  v11[1] = v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_ZStackLayout, TupleView<(<<opaque return type of View.focused(_:)>>.0, <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0)>>);
  closure #1 in MoreReactions.body.getter(a1, a2, a3, (char *)v11 + *(int *)(v13 + 44));
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>((uint64_t)v11, a4, &demangling cache variable for type metadata for ZStack<TupleView<(<<opaque return type of View.focused(_:)>>.0, <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0)>>);
  v14 = (_OWORD *)(a4
                 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ZStack<TupleView<(<<opaque return type of View.focused(_:)>>.0, <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0)>>, _FrameLayout>)
                          + 36));
  v15 = v17[1];
  *v14 = v17[0];
  v14[1] = v15;
  v14[2] = v17[2];
  return outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v11, &demangling cache variable for type metadata for ZStack<TupleView<(<<opaque return type of View.focused(_:)>>.0, <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0)>>);
}

uint64_t closure #1 in MoreReactions.body.getter@<X0>(char a1@<W0>, uint64_t a2@<X1>, char a3@<W2>, char *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  char *v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  void (*v49)(char *, uint64_t);
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  char v76;
  __int128 v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  char v81;
  __int128 v82;

  v66 = a4;
  v64 = type metadata accessor for AutomaticHoverEffect();
  v65 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64, v7);
  v63 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<ModifiedContent<ModifiedContent<Image, _PaddingLayout>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyle>, Circle>>>);
  v56 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57, v9);
  v52 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Button<ModifiedContent<ModifiedContent<Image, _PaddingLayout>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyle>, Circle>>>, _EnvironmentKeyWritingModifier<Color?>>);
  MEMORY[0x24BDAC7A8](v54, v11);
  v53 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0);
  v67 = *(_QWORD *)(v62 - 8);
  v14 = MEMORY[0x24BDAC7A8](v62, v13);
  v55 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v16);
  v60 = (char *)&v51 - v17;
  v61 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.focused(_:)>>.0);
  v59 = *(_QWORD *)(v61 - 8);
  v19 = MEMORY[0x24BDAC7A8](v61, v18);
  v58 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19, v21);
  v51 = (char *)&v51 - v22;
  type metadata accessor for ReactionPickerViewModel();
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel((unint64_t *)&lazy protocol witness table cache variable for type ReactionPickerViewModel and conformance ReactionPickerViewModel, (uint64_t (*)(uint64_t))type metadata accessor for ReactionPickerViewModel, (uint64_t)"uh}.4z");
  v23 = EnvironmentObject.init()();
  v25 = v24;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v71 = v23;
  v72 = v25;
  v73 = v78;
  v74 = v79;
  v75 = v80;
  v76 = v81;
  v77 = v82;
  v68 = a1;
  v69 = a2;
  v70 = a3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FocusState<Bool>);
  FocusState.projectedValue.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<CustomReactionPicker, _FrameLayout>);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<CustomReactionPicker, _FrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<CustomReactionPicker, _FrameLayout>, (uint64_t (*)(void))lazy protocol witness table accessor for type CustomReactionPicker and conformance CustomReactionPicker, MEMORY[0x24BDEBEE0]);
  View.focused(_:)();
  swift_release();
  swift_release();
  swift_release();
  v26 = swift_allocObject();
  *(_BYTE *)(v26 + 16) = a1;
  *(_QWORD *)(v26 + 24) = a2;
  *(_BYTE *)(v26 + 32) = a3;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _PaddingLayout>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyle>, Circle>>);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Image, _PaddingLayout>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyle>, Circle>> and conformance <> ModifiedContent<A, B>();
  v27 = v52;
  Button.init(action:label:)();
  v28 = static Color.secondary.getter();
  KeyPath = swift_getKeyPath();
  v30 = v56;
  v31 = (uint64_t)v53;
  v32 = v57;
  (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v53, v27, v57);
  v33 = (uint64_t *)(v31 + *(int *)(v54 + 36));
  *v33 = KeyPath;
  v33[1] = v28;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v27, v32);
  v34 = v63;
  static CustomHoverEffect<>.automatic.getter();
  lazy protocol witness table accessor for type ModifiedContent<Button<ModifiedContent<ModifiedContent<Image, _PaddingLayout>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyle>, Circle>>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type AutomaticHoverEffect and conformance AutomaticHoverEffect, (uint64_t (*)(uint64_t))MEMORY[0x24BDEF428], MEMORY[0x24BDEF420]);
  v35 = v55;
  v36 = v64;
  View.hoverEffect<A>(_:isEnabled:)();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v34, v36);
  outlined destroy of PartialRangeThrough<DynamicTypeSize>(v31, &demangling cache variable for type metadata for ModifiedContent<Button<ModifiedContent<ModifiedContent<Image, _PaddingLayout>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyle>, Circle>>>, _EnvironmentKeyWritingModifier<Color?>>);
  v37 = v67;
  v38 = v60;
  v39 = v62;
  (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v60, v35, v62);
  v40 = v59;
  v41 = *(void (**)(char *, char *, uint64_t))(v59 + 16);
  v42 = v58;
  v43 = v51;
  v44 = v61;
  v41(v58, v51, v61);
  v45 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
  v45(v35, v38, v39);
  v46 = v66;
  v41(v66, v42, v44);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (<<opaque return type of View.focused(_:)>>.0, <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0));
  v45(&v46[*(int *)(v47 + 48)], v35, v39);
  v48 = *(void (**)(char *, uint64_t))(v67 + 8);
  v48(v38, v39);
  v49 = *(void (**)(char *, uint64_t))(v40 + 8);
  v49(v43, v44);
  v48(v35, v39);
  return ((uint64_t (*)(char *, uint64_t))v49)(v42, v44);
}

uint64_t closure #1 in closure #1 in MoreReactions.body.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FocusState<Bool>);
  return FocusState.wrappedValue.setter();
}

uint64_t closure #2 in closure #1 in MoreReactions.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v2 = Image.init(systemName:)();
  v3 = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  result = static HierarchicalShapeStyle.quaternary.getter();
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v11;
  *(_BYTE *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 52) = result;
  *(_DWORD *)(a1 + 56) = 1061158912;
  *(_WORD *)(a1 + 60) = 256;
  return result;
}

uint64_t MoreReactions.init(isEntryViewFocused:)(char a1)
{
  return a1 & 1;
}

uint64_t associated type witness table accessor for View.Body : View in ReactionButton()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in MoreReactions()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t protocol witness for View.body.getter in conformance MoreReactions@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  __int128 v13;
  _OWORD v15[3];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ZStack<TupleView<(<<opaque return type of View.focused(_:)>>.0, <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0)>>);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (uint64_t *)((char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(_BYTE *)v1;
  v8 = *(_QWORD *)(v1 + 8);
  v9 = *(_BYTE *)(v1 + 16);
  *v6 = static Alignment.center.getter();
  v6[1] = v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_ZStackLayout, TupleView<(<<opaque return type of View.focused(_:)>>.0, <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0)>>);
  closure #1 in MoreReactions.body.getter(v7, v8, v9, (char *)v6 + *(int *)(v11 + 44));
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  outlined init with copy of ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>((uint64_t)v6, a1, &demangling cache variable for type metadata for ZStack<TupleView<(<<opaque return type of View.focused(_:)>>.0, <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0)>>);
  v12 = (_OWORD *)(a1
                 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ZStack<TupleView<(<<opaque return type of View.focused(_:)>>.0, <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0)>>, _FrameLayout>)
                          + 36));
  v13 = v15[1];
  *v12 = v15[0];
  v12[1] = v13;
  v12[2] = v15[2];
  return outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v6, &demangling cache variable for type metadata for ZStack<TupleView<(<<opaque return type of View.focused(_:)>>.0, <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0)>>);
}

uint64_t destroy for ReactionButton()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ReactionButton(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ReactionButton(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ReactionButton(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReactionButton(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReactionButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReactionButton()
{
  return &type metadata for ReactionButton;
}

uint64_t initializeBufferWithCopyOfBuffer for MoreReactions(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MoreReactions(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for MoreReactions(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for MoreReactions(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MoreReactions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MoreReactions()
{
  return &type metadata for MoreReactions;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0, ReactionButtonTransform>, _BackgroundModifier<ModifiedContent<_ShapeView<Circle._Inset, _OpacityShapeStyle<HierarchicalShapeStyle>>, _OpacityEffect>?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0, ReactionButtonTransform>, _BackgroundModifier<ModifiedContent<_ShapeView<Circle._Inset, _OpacityShapeStyle<HierarchicalShapeStyle>>, _OpacityEffect>?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0, ReactionButtonTransform>, _BackgroundModifier<ModifiedContent<_ShapeView<Circle._Inset, _OpacityShapeStyle<HierarchicalShapeStyle>>, _OpacityEffect>?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0, ReactionButtonTransform>, _BackgroundModifier<ModifiedContent<_ShapeView<Circle._Inset, _OpacityShapeStyle<HierarchicalShapeStyle>>, _OpacityEffect>?>>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0, ReactionButtonTransform> and conformance <> ModifiedContent<A, B>();
    v2[1] = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type _BackgroundModifier<ModifiedContent<_ShapeView<Circle._Inset, _OpacityShapeStyle<HierarchicalShapeStyle>>, _OpacityEffect>?> and conformance _BackgroundModifier<A>, &demangling cache variable for type metadata for _BackgroundModifier<ModifiedContent<_ShapeView<Circle._Inset, _OpacityShapeStyle<HierarchicalShapeStyle>>, _OpacityEffect>?>, MEMORY[0x24BDEF370]);
    result = MEMORY[0x2207D4924](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0, ReactionButtonTransform>, _BackgroundModifier<ModifiedContent<_ShapeView<Circle._Inset, _OpacityShapeStyle<HierarchicalShapeStyle>>, _OpacityEffect>?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0, ReactionButtonTransform> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  _QWORD v5[6];

  result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0, ReactionButtonTransform> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0, ReactionButtonTransform> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0, ReactionButtonTransform>);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Button<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0>, AccessibilityAttachmentModifier>);
    v3 = type metadata accessor for AutomaticHoverEffect();
    v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEF428];
    v5[2] = v2;
    v5[3] = v3;
    v5[4] = lazy protocol witness table accessor for type ModifiedContent<Button<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>();
    v5[5] = lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type AutomaticHoverEffect and conformance AutomaticHoverEffect, v4, MEMORY[0x24BDEF420]);
    v5[0] = swift_getOpaqueTypeConformance2();
    v5[1] = lazy protocol witness table accessor for type ReactionButtonTransform and conformance ReactionButtonTransform();
    result = MEMORY[0x2207D4924](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0, ReactionButtonTransform> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ReactionButtonTransform and conformance ReactionButtonTransform()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ReactionButtonTransform and conformance ReactionButtonTransform;
  if (!lazy protocol witness table cache variable for type ReactionButtonTransform and conformance ReactionButtonTransform)
  {
    result = MEMORY[0x2207D4924](&protocol conformance descriptor for ReactionButtonTransform, &unk_24E5AE698);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ReactionButtonTransform and conformance ReactionButtonTransform);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ZStack<TupleView<(<<opaque return type of View.focused(_:)>>.0, <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0)>>, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ZStack<TupleView<(<<opaque return type of View.focused(_:)>>.0, <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0)>>, _FrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ZStack<TupleView<(<<opaque return type of View.focused(_:)>>.0, <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0)>>, _FrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ZStack<TupleView<(<<opaque return type of View.focused(_:)>>.0, <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0)>>, _FrameLayout>);
    v2[0] = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type ZStack<TupleView<(<<opaque return type of View.focused(_:)>>.0, <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0)>> and conformance ZStack<A>, &demangling cache variable for type metadata for ZStack<TupleView<(<<opaque return type of View.focused(_:)>>.0, <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0)>>, MEMORY[0x24BDF4750]);
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x2207D4924](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ZStack<TupleView<(<<opaque return type of View.focused(_:)>>.0, <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0)>>, _FrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t destroy for ReactionButtonTransform()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeBufferWithCopyOfBuffer for ReactionButtonTransform(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ReactionButtonTransform(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for ReactionButtonTransform(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReactionButtonTransform(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReactionButtonTransform(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void *type metadata accessor for ReactionButtonTransform()
{
  return &unk_24E5AE698;
}

uint64_t associated type witness table accessor for ViewModifier.Body : View in ReactionButtonTransform()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>, ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>, ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>, ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>> and conformance <> _ConditionalContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>, ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, _AppearanceActionModifier>, _AppearanceActionModifier>, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>, (uint64_t (*)(void))lazy protocol witness table accessor for type ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect> and conformance <> ModifiedContent<A, B>, MEMORY[0x24BDED5D8]);
    v2[1] = v2[0];
    result = MEMORY[0x2207D4924](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>, ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>);
    v2[0] = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type _ViewModifier_Content<ReactionButtonTransform> and conformance _ViewModifier_Content<A>, &demangling cache variable for type metadata for _ViewModifier_Content<ReactionButtonTransform>, MEMORY[0x24BDEFB78]);
    v2[1] = MEMORY[0x24BDEBF50];
    result = MEMORY[0x2207D4924](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t sub_21FDCBB90()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in MoreReactions.body.getter()
{
  return closure #1 in closure #1 in MoreReactions.body.getter();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Image, _PaddingLayout>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyle>, Circle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _PaddingLayout>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyle>, Circle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _PaddingLayout>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyle>, Circle>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _PaddingLayout>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyle>, Circle>>);
    v2[0] = lazy protocol witness table accessor for type ModifiedContent<Image, _PaddingLayout> and conformance <> ModifiedContent<A, B>();
    v2[1] = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyle>, Circle> and conformance _InsettableBackgroundShapeModifier<A, B>, &demangling cache variable for type metadata for _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyle>, Circle>, MEMORY[0x24BDF1330]);
    result = MEMORY[0x2207D4924](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _PaddingLayout>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyle>, Circle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Image, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<Image, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Image, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Image, _PaddingLayout>);
    v2[0] = MEMORY[0x24BDF40E8];
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x2207D4924](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Image, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t sub_21FDCBCAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.tintColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_21FDCBCD4()
{
  swift_retain();
  return EnvironmentValues.tintColor.setter();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Button<ModifiedContent<ModifiedContent<Image, _PaddingLayout>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyle>, Circle>>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<Button<ModifiedContent<ModifiedContent<Image, _PaddingLayout>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyle>, Circle>>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Button<ModifiedContent<ModifiedContent<Image, _PaddingLayout>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyle>, Circle>>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Button<ModifiedContent<ModifiedContent<Image, _PaddingLayout>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyle>, Circle>>>, _EnvironmentKeyWritingModifier<Color?>>);
    v2[0] = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type Button<ModifiedContent<ModifiedContent<Image, _PaddingLayout>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyle>, Circle>>> and conformance Button<A>, &demangling cache variable for type metadata for Button<ModifiedContent<ModifiedContent<Image, _PaddingLayout>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyle>, Circle>>>, MEMORY[0x24BDF43B0]);
    v2[1] = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2207D4924](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Button<ModifiedContent<ModifiedContent<Image, _PaddingLayout>, _InsettableBackgroundShapeModifier<_OpacityShapeStyle<HierarchicalShapeStyle>, Circle>>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>, ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>>, ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type _ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>, ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>>, ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>, ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>>, ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>> and conformance <> _ConditionalContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>, ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>>, ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>>);
    v2[0] = lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>, ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>> and conformance <> _ConditionalContent<A, B>();
    v2[1] = lazy protocol witness table accessor for type ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect> and conformance <> ModifiedContent<A, B>();
    result = MEMORY[0x2207D4924](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>, ModifiedContent<ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>, _RotationEffect>>, ModifiedContent<_ViewModifier_Content<ReactionButtonTransform>, _ScaleEffect>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

double PopoverBubble.init(anchorPoint:)()
{
  return 40.0;
}

uint64_t Path.addShape<A>(_:in:)()
{
  _BYTE v1[40];
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  dispatch thunk of Shape.path(in:)();
  v2 = 0x3FF0000000000000;
  v3 = 0;
  v4 = 0;
  v5 = 0x3FF0000000000000;
  v6 = 0;
  v7 = 0;
  Path.addPath(_:transform:)();
  return outlined release of Path((uint64_t)v1);
}

uint64_t outlined release of Path(uint64_t a1)
{
  outlined consume of Path.Storage(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return a1;
}

uint64_t outlined consume of Path.Storage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a5 - 2 <= 3)
    return swift_release();
  return result;
}

double Bump.path(in:)@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  __int128 v4;
  char v5;

  Path.init(_:)();
  result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  return result;
}

void closure #1 in Bump.path(in:)(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double MinX;
  unint64_t v9;
  double MinY;
  CGFloat Height;
  double v12;
  double v13;
  double v14;
  unint64_t v15;
  double v16;
  unint64_t v17;
  double v18;
  unint64_t v19;
  double v20;
  CGFloat v21;
  double v22;
  double v23;
  double v24;
  unint64_t v25;
  double v26;
  unint64_t v27;
  double v28;
  unint64_t v29;
  double v30;
  CGFloat v31;
  double v32;
  double v33;
  double v34;
  unint64_t v35;
  double v36;
  unint64_t v37;
  double v38;
  unint64_t v39;
  double v40;
  CGFloat v41;
  double v42;
  double v43;
  double v44;
  unint64_t v45;
  double v46;
  unint64_t v47;
  double v48;
  unint64_t v49;
  double v50;
  CGFloat v51;
  double v52;
  double v53;
  double v54;
  unint64_t v55;
  double v56;
  unint64_t v57;
  double v58;
  unint64_t v59;
  double v60;
  CGFloat v61;
  double v62;
  double v63;
  double v64;
  unint64_t v65;
  double v66;
  unint64_t v67;
  double v68;
  unint64_t v69;
  double v70;
  CGFloat v71;
  double v72;
  double v73;
  double v74;
  unint64_t v75;
  double v76;
  unint64_t v77;
  double v78;
  unint64_t v79;
  double v80;
  CGFloat v81;
  double v82;
  double v83;
  double v84;
  unint64_t v85;
  double v86;
  unint64_t v87;
  double v88;
  unint64_t v89;
  double v90;
  CGFloat v91;
  double v92;
  double v93;
  double v94;
  unint64_t v95;
  double v96;
  unint64_t v97;
  double v98;
  unint64_t v99;
  double v100;
  CGFloat v101;
  double v102;
  double v103;
  double v104;
  unint64_t v105;
  double v106;
  unint64_t v107;
  double v108;
  unint64_t v109;
  double v110;
  CGFloat v111;
  double v112;
  double v113;
  double v114;
  unint64_t v115;
  double v116;
  unint64_t v117;
  double v118;
  unint64_t v119;
  double v120;
  CGFloat v121;
  double v122;
  double v123;
  double v124;
  unint64_t v125;
  double v126;
  unint64_t v127;
  double v128;
  unint64_t v129;
  double v130;
  CGFloat v131;
  unint64_t v132;
  unint64_t v133;
  unint64_t to;
  unint64_t toa;
  unint64_t tob;
  unint64_t v137;
  unint64_t v138;
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  unint64_t v144;
  unint64_t v145;
  unint64_t v146;
  unint64_t v147;
  unint64_t v148;
  unint64_t v149;
  unint64_t v150;
  unint64_t v151;
  unint64_t v152;
  unint64_t v153;
  unint64_t v154;
  unint64_t v155;
  CGRect v156;
  CGRect v157;
  CGRect v158;
  CGRect v159;
  CGRect v160;
  CGRect v161;
  CGRect v162;
  CGRect v163;
  CGRect v164;
  CGRect v165;
  CGRect v166;
  CGRect v167;
  CGRect v168;
  CGRect v169;
  CGRect v170;
  CGRect v171;
  CGRect v172;
  CGRect v173;
  CGRect v174;
  CGRect v175;
  CGRect v176;
  CGRect v177;
  CGRect v178;
  CGRect v179;
  CGRect v180;
  CGRect v181;
  CGRect v182;
  CGRect v183;
  CGRect v184;
  CGRect v185;
  CGRect v186;
  CGRect v187;
  CGRect v188;
  CGRect v189;
  CGRect v190;
  CGRect v191;
  CGRect v192;
  CGRect v193;
  CGRect v194;
  CGRect v195;
  CGRect v196;
  CGRect v197;
  CGRect v198;
  CGRect v199;
  CGRect v200;
  CGRect v201;
  CGRect v202;
  CGRect v203;
  CGRect v204;
  CGRect v205;
  CGRect v206;
  CGRect v207;
  CGRect v208;
  CGRect v209;
  CGRect v210;
  CGRect v211;
  CGRect v212;
  CGRect v213;
  CGRect v214;
  CGRect v215;
  CGRect v216;
  CGRect v217;
  CGRect v218;
  CGRect v219;
  CGRect v220;
  CGRect v221;
  CGRect v222;
  CGRect v223;
  CGRect v224;
  CGRect v225;
  CGRect v226;
  CGRect v227;
  CGRect v228;
  CGRect v229;
  CGRect v230;
  CGRect v231;
  CGRect v232;
  CGRect v233;
  CGRect v234;
  CGRect v235;
  CGRect v236;
  CGRect v237;
  CGRect v238;
  CGRect v239;
  CGRect v240;
  CGRect v241;
  CGRect v242;
  CGRect v243;
  CGRect v244;
  CGRect v245;
  CGRect v246;
  CGRect v247;
  CGRect v248;
  CGRect v249;
  CGRect v250;
  CGRect v251;
  CGRect v252;
  CGRect v253;
  CGRect v254;
  CGRect v255;
  CGRect v256;
  CGRect v257;
  CGRect v258;
  CGRect v259;
  CGRect v260;
  CGRect v261;
  CGRect v262;
  CGRect v263;
  CGRect v264;
  CGRect v265;
  CGRect v266;
  CGRect v267;
  CGRect v268;
  CGRect v269;
  CGRect v270;
  CGRect v271;
  CGRect v272;
  CGRect v273;
  CGRect v274;
  CGRect v275;
  CGRect v276;
  CGRect v277;
  CGRect v278;
  CGRect v279;
  CGRect v280;
  CGRect v281;
  CGRect v282;
  CGRect v283;
  CGRect v284;
  CGRect v285;
  CGRect v286;
  CGRect v287;
  CGRect v288;
  CGRect v289;
  CGRect v290;
  CGRect v291;
  CGRect v292;
  CGRect v293;
  CGRect v294;
  CGRect v295;
  CGRect v296;
  CGRect v297;
  CGRect v298;
  CGRect v299;
  CGRect v300;
  CGRect v301;
  CGRect v302;

  MinX = CGRectGetMinX(*(CGRect *)&a1);
  v156.origin.x = a1;
  v156.origin.y = a2;
  v156.size.width = a3;
  v156.size.height = a4;
  *(double *)&v9 = MinX + CGRectGetWidth(v156) * 0.0;
  v157.origin.x = a1;
  v157.origin.y = a2;
  v157.size.width = a3;
  v157.size.height = a4;
  MinY = CGRectGetMinY(v157);
  v158.origin.x = a1;
  v158.origin.y = a2;
  v158.size.width = a3;
  v158.size.height = a4;
  Height = CGRectGetHeight(v158);
  Path.move(to:)((CGPoint)__PAIR128__(MinY + Height * 0.00015, v9));
  v159.origin.x = a1;
  v159.origin.y = a2;
  v159.size.width = a3;
  v159.size.height = a4;
  v12 = CGRectGetMinX(v159);
  v160.origin.x = a1;
  v160.origin.y = a2;
  v160.size.width = a3;
  v160.size.height = a4;
  *(double *)&v146 = v12 + CGRectGetWidth(v160) * 0.1093;
  v161.origin.x = a1;
  v161.origin.y = a2;
  v161.size.width = a3;
  v161.size.height = a4;
  v13 = CGRectGetMinY(v161);
  v162.origin.x = a1;
  v162.origin.y = a2;
  v162.size.width = a3;
  v162.size.height = a4;
  *(double *)&to = v13 + CGRectGetHeight(v162) * 0.00092;
  v163.origin.x = a1;
  v163.origin.y = a2;
  v163.size.width = a3;
  v163.size.height = a4;
  v14 = CGRectGetMinX(v163);
  v164.origin.x = a1;
  v164.origin.y = a2;
  v164.size.width = a3;
  v164.size.height = a4;
  *(double *)&v15 = v14 + CGRectGetWidth(v164) * 0.03644;
  v165.origin.x = a1;
  v165.origin.y = a2;
  v165.size.width = a3;
  v165.size.height = a4;
  v16 = CGRectGetMinY(v165);
  v166.origin.x = a1;
  v166.origin.y = a2;
  v166.size.width = a3;
  v166.size.height = a4;
  *(double *)&v17 = v16 + CGRectGetHeight(v166) * 0.00015;
  v167.origin.x = a1;
  v167.origin.y = a2;
  v167.size.width = a3;
  v167.size.height = a4;
  v18 = CGRectGetMinX(v167);
  v168.origin.x = a1;
  v168.origin.y = a2;
  v168.size.width = a3;
  v168.size.height = a4;
  *(double *)&v19 = v18 + CGRectGetWidth(v168) * 0.07286;
  v169.origin.x = a1;
  v169.origin.y = a2;
  v169.size.width = a3;
  v169.size.height = a4;
  v20 = CGRectGetMinY(v169);
  v170.origin.x = a1;
  v170.origin.y = a2;
  v170.size.width = a3;
  v170.size.height = a4;
  v21 = CGRectGetHeight(v170);
  Path.addCurve(to:control1:control2:)((CGPoint)__PAIR128__(to, v146), (CGPoint)__PAIR128__(v17, v15), (CGPoint)__PAIR128__(v20 + v21 * -0.0005, v19));
  v171.origin.x = a1;
  v171.origin.y = a2;
  v171.size.width = a3;
  v171.size.height = a4;
  v22 = CGRectGetMinX(v171);
  v172.origin.x = a1;
  v172.origin.y = a2;
  v172.size.width = a3;
  v172.size.height = a4;
  *(double *)&v147 = v22 + CGRectGetWidth(v172) * 0.21714;
  v173.origin.x = a1;
  v173.origin.y = a2;
  v173.size.width = a3;
  v173.size.height = a4;
  v23 = CGRectGetMinY(v173);
  v174.origin.x = a1;
  v174.origin.y = a2;
  v174.size.width = a3;
  v174.size.height = a4;
  *(double *)&v137 = v23 + CGRectGetHeight(v174) * 0.05054;
  v175.origin.x = a1;
  v175.origin.y = a2;
  v175.size.width = a3;
  v175.size.height = a4;
  v24 = CGRectGetMinX(v175);
  v176.origin.x = a1;
  v176.origin.y = a2;
  v176.size.width = a3;
  v176.size.height = a4;
  *(double *)&v25 = v24 + CGRectGetWidth(v176) * 0.14417;
  v177.origin.x = a1;
  v177.origin.y = a2;
  v177.size.width = a3;
  v177.size.height = a4;
  v26 = CGRectGetMinY(v177);
  v178.origin.x = a1;
  v178.origin.y = a2;
  v178.size.width = a3;
  v178.size.height = a4;
  *(double *)&v27 = v26 + CGRectGetHeight(v178) * 0.0023;
  v179.origin.x = a1;
  v179.origin.y = a2;
  v179.size.width = a3;
  v179.size.height = a4;
  v28 = CGRectGetMinX(v179);
  v180.origin.x = a1;
  v180.origin.y = a2;
  v180.size.width = a3;
  v180.size.height = a4;
  *(double *)&v29 = v28 + CGRectGetWidth(v180) * 0.1832;
  v181.origin.x = a1;
  v181.origin.y = a2;
  v181.size.width = a3;
  v181.size.height = a4;
  v30 = CGRectGetMinY(v181);
  v182.origin.x = a1;
  v182.origin.y = a2;
  v182.size.width = a3;
  v182.size.height = a4;
  v31 = CGRectGetHeight(v182);
  Path.addCurve(to:control1:control2:)((CGPoint)__PAIR128__(v137, v147), (CGPoint)__PAIR128__(v27, v25), (CGPoint)__PAIR128__(v30 + v31 * 0.00427, v29));
  v183.origin.x = a1;
  v183.origin.y = a2;
  v183.size.width = a3;
  v183.size.height = a4;
  v32 = CGRectGetMinX(v183);
  v184.origin.x = a1;
  v184.origin.y = a2;
  v184.size.width = a3;
  v184.size.height = a4;
  *(double *)&v148 = v32 + CGRectGetWidth(v184) * 0.30248;
  v185.origin.x = a1;
  v185.origin.y = a2;
  v185.size.width = a3;
  v185.size.height = a4;
  v33 = CGRectGetMinY(v185);
  v186.origin.x = a1;
  v186.origin.y = a2;
  v186.size.width = a3;
  v186.size.height = a4;
  *(double *)&v138 = v33 + CGRectGetHeight(v186) * 0.29085;
  v187.origin.x = a1;
  v187.origin.y = a2;
  v187.size.width = a3;
  v187.size.height = a4;
  v34 = CGRectGetMinX(v187);
  v188.origin.x = a1;
  v188.origin.y = a2;
  v188.size.width = a3;
  v188.size.height = a4;
  *(double *)&v35 = v34 + CGRectGetWidth(v188) * 0.2538;
  v189.origin.x = a1;
  v189.origin.y = a2;
  v189.size.width = a3;
  v189.size.height = a4;
  v36 = CGRectGetMinY(v189);
  v190.origin.x = a1;
  v190.origin.y = a2;
  v190.size.width = a3;
  v190.size.height = a4;
  *(double *)&v37 = v36 + CGRectGetHeight(v190) * 0.10054;
  v191.origin.x = a1;
  v191.origin.y = a2;
  v191.size.width = a3;
  v191.size.height = a4;
  v38 = CGRectGetMinX(v191);
  v192.origin.x = a1;
  v192.origin.y = a2;
  v192.size.width = a3;
  v192.size.height = a4;
  *(double *)&v39 = v38 + CGRectGetWidth(v192) * 0.27807;
  v193.origin.x = a1;
  v193.origin.y = a2;
  v193.size.width = a3;
  v193.size.height = a4;
  v40 = CGRectGetMinY(v193);
  v194.origin.x = a1;
  v194.origin.y = a2;
  v194.size.width = a3;
  v194.size.height = a4;
  v41 = CGRectGetHeight(v194);
  Path.addCurve(to:control1:control2:)((CGPoint)__PAIR128__(v138, v148), (CGPoint)__PAIR128__(v37, v35), (CGPoint)__PAIR128__(v40 + v41 * 0.18796, v39));
  v195.origin.x = a1;
  v195.origin.y = a2;
  v195.size.width = a3;
  v195.size.height = a4;
  v42 = CGRectGetMinX(v195);
  v196.origin.x = a1;
  v196.origin.y = a2;
  v196.size.width = a3;
  v196.size.height = a4;
  *(double *)&v149 = v42 + CGRectGetWidth(v196) * 0.37141;
  v197.origin.x = a1;
  v197.origin.y = a2;
  v197.size.width = a3;
  v197.size.height = a4;
  v43 = CGRectGetMinY(v197);
  v198.origin.x = a1;
  v198.origin.y = a2;
  v198.size.width = a3;
  v198.size.height = a4;
  *(double *)&v139 = v43 + CGRectGetHeight(v198) * 0.59897;
  v199.origin.x = a1;
  v199.origin.y = a2;
  v199.size.width = a3;
  v199.size.height = a4;
  v44 = CGRectGetMinX(v199);
  v200.origin.x = a1;
  v200.origin.y = a2;
  v200.size.width = a3;
  v200.size.height = a4;
  *(double *)&v45 = v44 + CGRectGetWidth(v200) * 0.32006;
  v201.origin.x = a1;
  v201.origin.y = a2;
  v201.size.width = a3;
  v201.size.height = a4;
  v46 = CGRectGetMinY(v201);
  v202.origin.x = a1;
  v202.origin.y = a2;
  v202.size.width = a3;
  v202.size.height = a4;
  *(double *)&v47 = v46 + CGRectGetHeight(v202) * 0.36485;
  v203.origin.x = a1;
  v203.origin.y = a2;
  v203.size.width = a3;
  v203.size.height = a4;
  v48 = CGRectGetMinX(v203);
  v204.origin.x = a1;
  v204.origin.y = a2;
  v204.size.width = a3;
  v204.size.height = a4;
  *(double *)&v49 = v48 + CGRectGetWidth(v204) * 0.3546;
  v205.origin.x = a1;
  v205.origin.y = a2;
  v205.size.width = a3;
  v205.size.height = a4;
  v50 = CGRectGetMinY(v205);
  v206.origin.x = a1;
  v206.origin.y = a2;
  v206.size.width = a3;
  v206.size.height = a4;
  v51 = CGRectGetHeight(v206);
  Path.addCurve(to:control1:control2:)((CGPoint)__PAIR128__(v139, v149), (CGPoint)__PAIR128__(v47, v45), (CGPoint)__PAIR128__(v50 + v51 * 0.52274, v49));
  v207.origin.x = a1;
  v207.origin.y = a2;
  v207.size.width = a3;
  v207.size.height = a4;
  v52 = CGRectGetMinX(v207);
  v208.origin.x = a1;
  v208.origin.y = a2;
  v208.size.width = a3;
  v208.size.height = a4;
  *(double *)&v150 = v52 + CGRectGetWidth(v208) * 0.42682;
  v209.origin.x = a1;
  v209.origin.y = a2;
  v209.size.width = a3;
  v209.size.height = a4;
  v53 = CGRectGetMinY(v209);
  v210.origin.x = a1;
  v210.origin.y = a2;
  v210.size.width = a3;
  v210.size.height = a4;
  *(double *)&v140 = v53 + CGRectGetHeight(v210) * 0.84478;
  v211.origin.x = a1;
  v211.origin.y = a2;
  v211.size.width = a3;
  v211.size.height = a4;
  v54 = CGRectGetMinX(v211);
  v212.origin.x = a1;
  v212.origin.y = a2;
  v212.size.width = a3;
  v212.size.height = a4;
  *(double *)&v55 = v54 + CGRectGetWidth(v212) * 0.38517;
  v213.origin.x = a1;
  v213.origin.y = a2;
  v213.size.width = a3;
  v213.size.height = a4;
  v56 = CGRectGetMinY(v213);
  v214.origin.x = a1;
  v214.origin.y = a2;
  v214.size.width = a3;
  v214.size.height = a4;
  *(double *)&v57 = v56 + CGRectGetHeight(v214) * 0.66147;
  v215.origin.x = a1;
  v215.origin.y = a2;
  v215.size.width = a3;
  v215.size.height = a4;
  v58 = CGRectGetMinX(v215);
  v216.origin.x = a1;
  v216.origin.y = a2;
  v216.size.width = a3;
  v216.size.height = a4;
  *(double *)&v59 = v58 + CGRectGetWidth(v216) * 0.41211;
  v217.origin.x = a1;
  v217.origin.y = a2;
  v217.size.width = a3;
  v217.size.height = a4;
  v60 = CGRectGetMinY(v217);
  v218.origin.x = a1;
  v218.origin.y = a2;
  v218.size.width = a3;
  v218.size.height = a4;
  v61 = CGRectGetHeight(v218);
  Path.addCurve(to:control1:control2:)((CGPoint)__PAIR128__(v140, v150), (CGPoint)__PAIR128__(v57, v55), (CGPoint)__PAIR128__(v60 + v61 * 0.78501, v59));
  v219.origin.x = a1;
  v219.origin.y = a2;
  v219.size.width = a3;
  v219.size.height = a4;
  v62 = CGRectGetMinX(v219);
  v220.origin.x = a1;
  v220.origin.y = a2;
  v220.size.width = a3;
  v220.size.height = a4;
  *(double *)&toa = v62 + CGRectGetWidth(v220) * 0.50001;
  v221.origin.x = a1;
  v221.origin.y = a2;
  v221.size.width = a3;
  v221.size.height = a4;
  v63 = CGRectGetMinY(v221);
  v222.origin.x = a1;
  v222.origin.y = a2;
  v222.size.width = a3;
  v222.size.height = a4;
  *(double *)&v132 = v63 + CGRectGetHeight(v222) * 0.9999;
  v223.origin.x = a1;
  v223.origin.y = a2;
  v223.size.width = a3;
  v223.size.height = a4;
  v64 = CGRectGetMinX(v223);
  v224.origin.x = a1;
  v224.origin.y = a2;
  v224.size.width = a3;
  v224.size.height = a4;
  *(double *)&v65 = v64 + CGRectGetWidth(v224) * 0.44534;
  v225.origin.x = a1;
  v225.origin.y = a2;
  v225.size.width = a3;
  v225.size.height = a4;
  v66 = CGRectGetMinY(v225);
  v226.origin.x = a1;
  v226.origin.y = a2;
  v226.size.width = a3;
  v226.size.height = a4;
  *(double *)&v67 = v66 + CGRectGetHeight(v226) * 0.91998;
  v227.origin.x = a1;
  v227.origin.y = a2;
  v227.size.width = a3;
  v227.size.height = a4;
  v68 = CGRectGetMinX(v227);
  v228.origin.x = a1;
  v228.origin.y = a2;
  v228.size.width = a3;
  v228.size.height = a4;
  *(double *)&v69 = v68 + CGRectGetWidth(v228) * 0.46822;
  v229.origin.x = a1;
  v229.origin.y = a2;
  v229.size.width = a3;
  v229.size.height = a4;
  v70 = CGRectGetMinY(v229);
  v230.origin.x = a1;
  v230.origin.y = a2;
  v230.size.width = a3;
  v230.size.height = a4;
  v71 = CGRectGetHeight(v230);
  Path.addCurve(to:control1:control2:)((CGPoint)__PAIR128__(v132, toa), (CGPoint)__PAIR128__(v67, v65), (CGPoint)__PAIR128__(v70 + v71 * 0.9999, v69));
  v231.origin.x = a1;
  v231.origin.y = a2;
  v231.size.width = a3;
  v231.size.height = a4;
  v72 = CGRectGetMinX(v231);
  v232.origin.x = a1;
  v232.origin.y = a2;
  v232.size.width = a3;
  v232.size.height = a4;
  *(double *)&tob = v72 + CGRectGetWidth(v232) * 0.57318;
  v233.origin.x = a1;
  v233.origin.y = a2;
  v233.size.width = a3;
  v233.size.height = a4;
  v73 = CGRectGetMinY(v233);
  v234.origin.x = a1;
  v234.origin.y = a2;
  v234.size.width = a3;
  v234.size.height = a4;
  *(double *)&v133 = v73 + CGRectGetHeight(v234) * 0.84486;
  v235.origin.x = a1;
  v235.origin.y = a2;
  v235.size.width = a3;
  v235.size.height = a4;
  v74 = CGRectGetMinX(v235);
  v236.origin.x = a1;
  v236.origin.y = a2;
  v236.size.width = a3;
  v236.size.height = a4;
  *(double *)&v75 = v74 + CGRectGetWidth(v236) * 0.5318;
  v237.origin.x = a1;
  v237.origin.y = a2;
  v237.size.width = a3;
  v237.size.height = a4;
  v76 = CGRectGetMinY(v237);
  v238.origin.x = a1;
  v238.origin.y = a2;
  v238.size.width = a3;
  v238.size.height = a4;
  *(double *)&v77 = v76 + CGRectGetHeight(v238) * 0.9999;
  v239.origin.x = a1;
  v239.origin.y = a2;
  v239.size.width = a3;
  v239.size.height = a4;
  v78 = CGRectGetMinX(v239);
  v240.origin.x = a1;
  v240.origin.y = a2;
  v240.size.width = a3;
  v240.size.height = a4;
  *(double *)&v79 = v78 + CGRectGetWidth(v240) * 0.55468;
  v241.origin.x = a1;
  v241.origin.y = a2;
  v241.size.width = a3;
  v241.size.height = a4;
  v80 = CGRectGetMinY(v241);
  v242.origin.x = a1;
  v242.origin.y = a2;
  v242.size.width = a3;
  v242.size.height = a4;
  v81 = CGRectGetHeight(v242);
  Path.addCurve(to:control1:control2:)((CGPoint)__PAIR128__(v133, tob), (CGPoint)__PAIR128__(v77, v75), (CGPoint)__PAIR128__(v80 + v81 * 0.91998, v79));
  v243.origin.x = a1;
  v243.origin.y = a2;
  v243.size.width = a3;
  v243.size.height = a4;
  v82 = CGRectGetMinX(v243);
  v244.origin.x = a1;
  v244.origin.y = a2;
  v244.size.width = a3;
  v244.size.height = a4;
  *(double *)&v151 = v82 + CGRectGetWidth(v244) * 0.6286;
  v245.origin.x = a1;
  v245.origin.y = a2;
  v245.size.width = a3;
  v245.size.height = a4;
  v83 = CGRectGetMinY(v245);
  v246.origin.x = a1;
  v246.origin.y = a2;
  v246.size.width = a3;
  v246.size.height = a4;
  *(double *)&v141 = v83 + CGRectGetHeight(v246) * 0.59905;
  v247.origin.x = a1;
  v247.origin.y = a2;
  v247.size.width = a3;
  v247.size.height = a4;
  v84 = CGRectGetMinX(v247);
  v248.origin.x = a1;
  v248.origin.y = a2;
  v248.size.width = a3;
  v248.size.height = a4;
  *(double *)&v85 = v84 + CGRectGetWidth(v248) * 0.58789;
  v249.origin.x = a1;
  v249.origin.y = a2;
  v249.size.width = a3;
  v249.size.height = a4;
  v86 = CGRectGetMinY(v249);
  v250.origin.x = a1;
  v250.origin.y = a2;
  v250.size.width = a3;
  v250.size.height = a4;
  *(double *)&v87 = v86 + CGRectGetHeight(v250) * 0.78513;
  v251.origin.x = a1;
  v251.origin.y = a2;
  v251.size.width = a3;
  v251.size.height = a4;
  v88 = CGRectGetMinX(v251);
  v252.origin.x = a1;
  v252.origin.y = a2;
  v252.size.width = a3;
  v252.size.height = a4;
  *(double *)&v89 = v88 + CGRectGetWidth(v252) * 0.61483;
  v253.origin.x = a1;
  v253.origin.y = a2;
  v253.size.width = a3;
  v253.size.height = a4;
  v90 = CGRectGetMinY(v253);
  v254.origin.x = a1;
  v254.origin.y = a2;
  v254.size.width = a3;
  v254.size.height = a4;
  v91 = CGRectGetHeight(v254);
  Path.addCurve(to:control1:control2:)((CGPoint)__PAIR128__(v141, v151), (CGPoint)__PAIR128__(v87, v85), (CGPoint)__PAIR128__(v90 + v91 * 0.66151, v89));
  v255.origin.x = a1;
  v255.origin.y = a2;
  v255.size.width = a3;
  v255.size.height = a4;
  v92 = CGRectGetMinX(v255);
  v256.origin.x = a1;
  v256.origin.y = a2;
  v256.size.width = a3;
  v256.size.height = a4;
  *(double *)&v152 = v92 + CGRectGetWidth(v256) * 0.69752;
  v257.origin.x = a1;
  v257.origin.y = a2;
  v257.size.width = a3;
  v257.size.height = a4;
  v93 = CGRectGetMinY(v257);
  v258.origin.x = a1;
  v258.origin.y = a2;
  v258.size.width = a3;
  v258.size.height = a4;
  *(double *)&v142 = v93 + CGRectGetHeight(v258) * 0.29093;
  v259.origin.x = a1;
  v259.origin.y = a2;
  v259.size.width = a3;
  v259.size.height = a4;
  v94 = CGRectGetMinX(v259);
  v260.origin.x = a1;
  v260.origin.y = a2;
  v260.size.width = a3;
  v260.size.height = a4;
  *(double *)&v95 = v94 + CGRectGetWidth(v260) * 0.64539;
  v261.origin.x = a1;
  v261.origin.y = a2;
  v261.size.width = a3;
  v261.size.height = a4;
  v96 = CGRectGetMinY(v261);
  v262.origin.x = a1;
  v262.origin.y = a2;
  v262.size.width = a3;
  v262.size.height = a4;
  *(double *)&v97 = v96 + CGRectGetHeight(v262) * 0.52281;
  v263.origin.x = a1;
  v263.origin.y = a2;
  v263.size.width = a3;
  v263.size.height = a4;
  v98 = CGRectGetMinX(v263);
  v264.origin.x = a1;
  v264.origin.y = a2;
  v264.size.width = a3;
  v264.size.height = a4;
  *(double *)&v99 = v98 + CGRectGetWidth(v264) * 0.67993;
  v265.origin.x = a1;
  v265.origin.y = a2;
  v265.size.width = a3;
  v265.size.height = a4;
  v100 = CGRectGetMinY(v265);
  v266.origin.x = a1;
  v266.origin.y = a2;
  v266.size.width = a3;
  v266.size.height = a4;
  v101 = CGRectGetHeight(v266);
  Path.addCurve(to:control1:control2:)((CGPoint)__PAIR128__(v142, v152), (CGPoint)__PAIR128__(v97, v95), (CGPoint)__PAIR128__(v100 + v101 * 0.36493, v99));
  v267.origin.x = a1;
  v267.origin.y = a2;
  v267.size.width = a3;
  v267.size.height = a4;
  v102 = CGRectGetMinX(v267);
  v268.origin.x = a1;
  v268.origin.y = a2;
  v268.size.width = a3;
  v268.size.height = a4;
  *(double *)&v153 = v102 + CGRectGetWidth(v268) * 0.78285;
  v269.origin.x = a1;
  v269.origin.y = a2;
  v269.size.width = a3;
  v269.size.height = a4;
  v103 = CGRectGetMinY(v269);
  v270.origin.x = a1;
  v270.origin.y = a2;
  v270.size.width = a3;
  v270.size.height = a4;
  *(double *)&v143 = v103 + CGRectGetHeight(v270) * 0.05061;
  v271.origin.x = a1;
  v271.origin.y = a2;
  v271.size.width = a3;
  v271.size.height = a4;
  v104 = CGRectGetMinX(v271);
  v272.origin.x = a1;
  v272.origin.y = a2;
  v272.size.width = a3;
  v272.size.height = a4;
  *(double *)&v105 = v104 + CGRectGetWidth(v272) * 0.72198;
  v273.origin.x = a1;
  v273.origin.y = a2;
  v273.size.width = a3;
  v273.size.height = a4;
  v106 = CGRectGetMinY(v273);
  v274.origin.x = a1;
  v274.origin.y = a2;
  v274.size.width = a3;
  v274.size.height = a4;
  *(double *)&v107 = v106 + CGRectGetHeight(v274) * 0.18804;
  v275.origin.x = a1;
  v275.origin.y = a2;
  v275.size.width = a3;
  v275.size.height = a4;
  v108 = CGRectGetMinX(v275);
  v276.origin.x = a1;
  v276.origin.y = a2;
  v276.size.width = a3;
  v276.size.height = a4;
  *(double *)&v109 = v108 + CGRectGetWidth(v276) * 0.7462;
  v277.origin.x = a1;
  v277.origin.y = a2;
  v277.size.width = a3;
  v277.size.height = a4;
  v110 = CGRectGetMinY(v277);
  v278.origin.x = a1;
  v278.origin.y = a2;
  v278.size.width = a3;
  v278.size.height = a4;
  v111 = CGRectGetHeight(v278);
  Path.addCurve(to:control1:control2:)((CGPoint)__PAIR128__(v143, v153), (CGPoint)__PAIR128__(v107, v105), (CGPoint)__PAIR128__(v110 + v111 * 0.10061, v109));
  v279.origin.x = a1;
  v279.origin.y = a2;
  v279.size.width = a3;
  v279.size.height = a4;
  v112 = CGRectGetMinX(v279);
  v280.origin.x = a1;
  v280.origin.y = a2;
  v280.size.width = a3;
  v280.size.height = a4;
  *(double *)&v154 = v112 + CGRectGetWidth(v280) * 0.89069;
  v281.origin.x = a1;
  v281.origin.y = a2;
  v281.size.width = a3;
  v281.size.height = a4;
  v113 = CGRectGetMinY(v281);
  v282.origin.x = a1;
  v282.origin.y = a2;
  v282.size.width = a3;
  v282.size.height = a4;
  *(double *)&v144 = v113 + CGRectGetHeight(v282) * 0.001;
  v283.origin.x = a1;
  v283.origin.y = a2;
  v283.size.width = a3;
  v283.size.height = a4;
  v114 = CGRectGetMinX(v283);
  v284.origin.x = a1;
  v284.origin.y = a2;
  v284.size.width = a3;
  v284.size.height = a4;
  *(double *)&v115 = v114 + CGRectGetWidth(v284) * 0.8168;
  v285.origin.x = a1;
  v285.origin.y = a2;
  v285.size.width = a3;
  v285.size.height = a4;
  v116 = CGRectGetMinY(v285);
  v286.origin.x = a1;
  v286.origin.y = a2;
  v286.size.width = a3;
  v286.size.height = a4;
  *(double *)&v117 = v116 + CGRectGetHeight(v286) * 0.00446;
  v287.origin.x = a1;
  v287.origin.y = a2;
  v287.size.width = a3;
  v287.size.height = a4;
  v118 = CGRectGetMinX(v287);
  v288.origin.x = a1;
  v288.origin.y = a2;
  v288.size.width = a3;
  v288.size.height = a4;
  *(double *)&v119 = v118 + CGRectGetWidth(v288) * 0.85584;
  v289.origin.x = a1;
  v289.origin.y = a2;
  v289.size.width = a3;
  v289.size.height = a4;
  v120 = CGRectGetMinY(v289);
  v290.origin.x = a1;
  v290.origin.y = a2;
  v290.size.width = a3;
  v290.size.height = a4;
  v121 = CGRectGetHeight(v290);
  Path.addCurve(to:control1:control2:)((CGPoint)__PAIR128__(v144, v154), (CGPoint)__PAIR128__(v117, v115), (CGPoint)__PAIR128__(v120 + v121 * 0.00238, v119));
  v291.origin.x = a1;
  v291.origin.y = a2;
  v291.size.width = a3;
  v291.size.height = a4;
  v122 = CGRectGetMinX(v291);
  v292.origin.x = a1;
  v292.origin.y = a2;
  v292.size.width = a3;
  v292.size.height = a4;
  *(double *)&v155 = v122 + CGRectGetWidth(v292);
  v293.origin.x = a1;
  v293.origin.y = a2;
  v293.size.width = a3;
  v293.size.height = a4;
  v123 = CGRectGetMinY(v293);
  v294.origin.x = a1;
  v294.origin.y = a2;
  v294.size.width = a3;
  v294.size.height = a4;
  *(double *)&v145 = v123 + CGRectGetHeight(v294) * 0.00023;
  v295.origin.x = a1;
  v295.origin.y = a2;
  v295.size.width = a3;
  v295.size.height = a4;
  v124 = CGRectGetMinX(v295);
  v296.origin.x = a1;
  v296.origin.y = a2;
  v296.size.width = a3;
  v296.size.height = a4;
  *(double *)&v125 = v124 + CGRectGetWidth(v296) * 0.92714;
  v297.origin.x = a1;
  v297.origin.y = a2;
  v297.size.width = a3;
  v297.size.height = a4;
  v126 = CGRectGetMinY(v297);
  v298.origin.x = a1;
  v298.origin.y = a2;
  v298.size.width = a3;
  v298.size.height = a4;
  *(double *)&v127 = v126 + CGRectGetHeight(v298) * -0.00043;
  v299.origin.x = a1;
  v299.origin.y = a2;
  v299.size.width = a3;
  v299.size.height = a4;
  v128 = CGRectGetMinX(v299);
  v300.origin.x = a1;
  v300.origin.y = a2;
  v300.size.width = a3;
  v300.size.height = a4;
  *(double *)&v129 = v128 + CGRectGetWidth(v300) * 0.96356;
  v301.origin.x = a1;
  v301.origin.y = a2;
  v301.size.width = a3;
  v301.size.height = a4;
  v130 = CGRectGetMinY(v301);
  v302.origin.x = a1;
  v302.origin.y = a2;
  v302.size.width = a3;
  v302.size.height = a4;
  v131 = CGRectGetHeight(v302);
  Path.addCurve(to:control1:control2:)((CGPoint)__PAIR128__(v145, v155), (CGPoint)__PAIR128__(v127, v125), (CGPoint)__PAIR128__(v130 + v131 * 0.00023, v129));
  Path.closeSubpath()();
}

void partial apply for closure #1 in Bump.path(in:)()
{
  CGFloat *v0;

  closure #1 in Bump.path(in:)(v0[2], v0[3], v0[4], v0[5]);
}

double protocol witness for Shape.path(in:) in conformance Bump@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  __int128 v4;
  char v5;

  Path.init(_:)();
  result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  return result;
}

uint64_t protocol witness for Shape.sizeThatFits(_:) in conformance Bump()
{
  return Shape.sizeThatFits(_:)();
}

uint64_t (*protocol witness for Animatable.animatableData.modify in conformance Bump(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = Animatable<>.animatableData.modify();
  return protocol witness for Animatable.animatableData.modify in conformance Bump;
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance Bump()
{
  lazy protocol witness table accessor for type Bump and conformance Bump();
  return static Shape._makeView(view:inputs:)();
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance Bump()
{
  lazy protocol witness table accessor for type Bump and conformance Bump();
  return static Shape._makeViewList(view:inputs:)();
}

uint64_t protocol witness for View.body.getter in conformance Bump()
{
  lazy protocol witness table accessor for type Bump and conformance Bump();
  return Shape.body.getter();
}

double PopoverBubble.anchorPoint.getter(double a1, double a2, double a3)
{
  return a3;
}

void PopoverBubble.anchorPoint.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 16) = a1;
  *(double *)(v2 + 24) = a2;
}

uint64_t (*PopoverBubble.anchorPoint.modify())()
{
  return destructiveProjectEnumData for GroupActivitySharingResult;
}

double PopoverBubble.path(in:)@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  __int128 v4;
  char v5;

  Path.init(_:)();
  result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  return result;
}

uint64_t closure #1 in PopoverBubble.path(in:)(double a1, double a2, double a3, double a4, double a5, double a6, double a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE v20[16];
  double v21;
  double v22;
  double v23;
  double v24;
  _BYTE v25[40];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v14 = type metadata accessor for RoundedCornerStyle();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = &v20[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = a1 + a3 - a7 - a5 * 0.5;
  v22 = a2 + a4;
  v23 = a5;
  v24 = a6;
  Path.init(_:)();
  v26 = 0x3FF0000000000000;
  v27 = 0;
  v28 = 0;
  v29 = 0x3FF0000000000000;
  v30 = 0;
  v31 = 0;
  Path.addPath(_:transform:)();
  outlined release of Path((uint64_t)v25);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v15 + 104))(v18, *MEMORY[0x24BDEEB68], v14);
  Path.addRoundedRect(in:cornerSize:style:transform:)();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v15 + 8))(v18, v14);
}

double protocol witness for Shape.path(in:) in conformance PopoverBubble@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  __int128 v4;
  char v5;

  Path.init(_:)();
  result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  return result;
}

uint64_t (*protocol witness for Animatable.animatableData.modify in conformance PopoverBubble(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = Animatable<>.animatableData.modify();
  return protocol witness for Animatable.animatableData.modify in conformance Bump;
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance PopoverBubble()
{
  lazy protocol witness table accessor for type PopoverBubble and conformance PopoverBubble();
  return static Shape._makeView(view:inputs:)();
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance PopoverBubble()
{
  lazy protocol witness table accessor for type PopoverBubble and conformance PopoverBubble();
  return static Shape._makeViewList(view:inputs:)();
}

uint64_t protocol witness for View.body.getter in conformance PopoverBubble()
{
  lazy protocol witness table accessor for type PopoverBubble and conformance PopoverBubble();
  return Shape.body.getter();
}

void PopoverBubble.inset(by:)(double *a1@<X8>, double a2@<D1>, double a3@<D2>, double a4@<D3>, double a5@<D4>)
{
  *a1 = a2;
  a1[1] = a3;
  a1[2] = a4;
  a1[3] = a5;
}

unint64_t lazy protocol witness table accessor for type Bump and conformance Bump()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Bump and conformance Bump;
  if (!lazy protocol witness table cache variable for type Bump and conformance Bump)
  {
    result = MEMORY[0x2207D4924](&protocol conformance descriptor for Bump, &type metadata for Bump);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Bump and conformance Bump);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Bump and conformance Bump;
  if (!lazy protocol witness table cache variable for type Bump and conformance Bump)
  {
    result = MEMORY[0x2207D4924](&protocol conformance descriptor for Bump, &type metadata for Bump);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Bump and conformance Bump);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type Bump and conformance Bump;
  if (!lazy protocol witness table cache variable for type Bump and conformance Bump)
  {
    result = MEMORY[0x2207D4924]("\tg}.Tw", &type metadata for Bump);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Bump and conformance Bump);
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in Bump()
{
  return lazy protocol witness table accessor for type _ShapeView<Bump, ForegroundStyle> and conformance _ShapeView<A, B>(&lazy protocol witness table cache variable for type _ShapeView<Bump, ForegroundStyle> and conformance _ShapeView<A, B>, &demangling cache variable for type metadata for _ShapeView<Bump, ForegroundStyle>);
}

unint64_t lazy protocol witness table accessor for type PopoverBubble and conformance PopoverBubble()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PopoverBubble and conformance PopoverBubble;
  if (!lazy protocol witness table cache variable for type PopoverBubble and conformance PopoverBubble)
  {
    result = MEMORY[0x2207D4924](&protocol conformance descriptor for PopoverBubble, &type metadata for PopoverBubble);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PopoverBubble and conformance PopoverBubble);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PopoverBubble and conformance PopoverBubble;
  if (!lazy protocol witness table cache variable for type PopoverBubble and conformance PopoverBubble)
  {
    result = MEMORY[0x2207D4924](&protocol conformance descriptor for PopoverBubble, &type metadata for PopoverBubble);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PopoverBubble and conformance PopoverBubble);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PopoverBubble and conformance PopoverBubble;
  if (!lazy protocol witness table cache variable for type PopoverBubble and conformance PopoverBubble)
  {
    result = MEMORY[0x2207D4924](&protocol conformance descriptor for PopoverBubble, &type metadata for PopoverBubble);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PopoverBubble and conformance PopoverBubble);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type PopoverBubble and conformance PopoverBubble;
  if (!lazy protocol witness table cache variable for type PopoverBubble and conformance PopoverBubble)
  {
    result = MEMORY[0x2207D4924](&protocol conformance descriptor for PopoverBubble, &type metadata for PopoverBubble);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PopoverBubble and conformance PopoverBubble);
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in PopoverBubble()
{
  return lazy protocol witness table accessor for type _ShapeView<Bump, ForegroundStyle> and conformance _ShapeView<A, B>(&lazy protocol witness table cache variable for type _ShapeView<PopoverBubble, ForegroundStyle> and conformance _ShapeView<A, B>, &demangling cache variable for type metadata for _ShapeView<PopoverBubble, ForegroundStyle>);
}

uint64_t lazy protocol witness table accessor for type _ShapeView<Bump, ForegroundStyle> and conformance _ShapeView<A, B>(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x2207D4924](MEMORY[0x24BDEB358], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t associated type witness table accessor for InsettableShape.InsetShape : InsettableShape in PopoverBubble()
{
  return swift_getOpaqueTypeConformance2();
}

__n128 protocol witness for InsettableShape.inset(by:) in conformance PopoverBubble@<Q0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  __n128 result;
  __int128 v3;

  result = *(__n128 *)v1;
  v3 = *(_OWORD *)(v1 + 16);
  *a1 = *(_OWORD *)v1;
  a1[1] = v3;
  return result;
}

ValueMetadata *type metadata accessor for Bump()
{
  return &type metadata for Bump;
}

uint64_t getEnumTagSinglePayload for PopoverBubble(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PopoverBubble(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for PopoverBubble()
{
  return &type metadata for PopoverBubble;
}

uint64_t partial apply for closure #1 in PopoverBubble.path(in:)()
{
  double *v0;

  return closure #1 in PopoverBubble.path(in:)(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7], v0[8]);
}

uint64_t UIScene.reactionEffectInteraction.getter()
{
  void *v0;
  char *v1;
  objc_class *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  objc_super v12;

  if (one-time initialization token for sceneComponentKey != -1)
    swift_once();
  if (objc_msgSend(v0, sel__sceneComponentForKey_, static ReactionEffectSceneComponent.sceneComponentKey))
  {
    type metadata accessor for ReactionEffectSceneComponent();
    v1 = (char *)swift_dynamicCastClass();
    if (v1)
      goto LABEL_7;
    swift_unknownObjectRelease();
  }
  v2 = (objc_class *)type metadata accessor for ReactionEffectSceneComponent();
  v3 = objc_allocWithZone(v2);
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  v12.receiver = v3;
  v12.super_class = v2;
  v1 = (char *)objc_msgSendSuper2(&v12, sel_init);
  objc_msgSend(v0, sel__registerSceneComponent_forKey_, v1, static ReactionEffectSceneComponent.sceneComponentKey);
LABEL_7:
  v4 = MEMORY[0x2207D4A98](&v1[OBJC_IVAR____TtC22_GroupActivities_UIKitP33_61045C1AF14ACF7709647F197782129928ReactionEffectSceneComponent__reactionEffectInteraction]);
  if (v4)
  {
    v5 = v4;

  }
  else
  {
    v7 = MEMORY[0x2207D4A98](&v1[OBJC_IVAR____TtC22_GroupActivities_UIKitP33_61045C1AF14ACF7709647F197782129928ReactionEffectSceneComponent__scene]);
    if (v7)
    {
      v8 = (void *)v7;
      objc_opt_self();
      v9 = (void *)swift_dynamicCastObjCClass();
      if (v9)
      {
        v10 = objc_msgSend(v9, sel_keyWindow);
        if (v10)
        {
          v11 = v10;
          v5 = UIView.firstReactionEffectInteraction.getter();

        }
        else
        {
          v5 = 0;
        }
        swift_unknownObjectWeakAssign();

      }
      else
      {

        return 0;
      }
    }
    else
    {

      return 0;
    }
  }
  return v5;
}

void UIScene.reactionEffectInteraction.setter(void *a1)
{
  void *v1;
  void *v3;
  objc_class *v4;
  id v5;
  objc_super v6;

  if (one-time initialization token for sceneComponentKey != -1)
    swift_once();
  if (!objc_msgSend(v1, sel__sceneComponentForKey_, static ReactionEffectSceneComponent.sceneComponentKey))
    goto LABEL_6;
  type metadata accessor for ReactionEffectSceneComponent();
  v3 = (void *)swift_dynamicCastClass();
  if (!v3)
  {
    swift_unknownObjectRelease();
LABEL_6:
    v4 = (objc_class *)type metadata accessor for ReactionEffectSceneComponent();
    v5 = objc_allocWithZone(v4);
    swift_unknownObjectWeakInit();
    swift_unknownObjectWeakInit();
    swift_unknownObjectWeakAssign();
    v6.receiver = v5;
    v6.super_class = v4;
    v3 = objc_msgSendSuper2(&v6, sel_init);
    objc_msgSend(v1, sel__registerSceneComponent_forKey_, v3, static ReactionEffectSceneComponent.sceneComponentKey);
  }
  swift_unknownObjectWeakAssign();

}

uint64_t one-time initialization function for sceneComponentKey()
{
  uint64_t result;

  result = MEMORY[0x2207D3EF8](0xD00000000000005ALL, 0x800000021FDD9C00);
  static ReactionEffectSceneComponent.sceneComponentKey = result;
  return result;
}

uint64_t type metadata accessor for ReactionEffectSceneComponent()
{
  return objc_opt_self();
}

uint64_t UIView.firstReactionEffectInteraction.getter()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;

  v1 = objc_msgSend(v0, sel_interactions);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIInteraction);
  v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v2 >> 62)
    goto LABEL_26;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v3)
    goto LABEL_3;
  do
  {
LABEL_11:
    swift_bridgeObjectRelease_n();
    v8 = objc_msgSend(v0, sel_subviews);
    type metadata accessor for UIView();
    v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v2 >> 62)
    {
      swift_bridgeObjectRetain();
      v9 = _CocoaArrayWrapper.endIndex.getter();
      if (!v9)
      {
LABEL_20:
        swift_bridgeObjectRelease_n();
        return 0;
      }
    }
    else
    {
      v9 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v9)
        goto LABEL_20;
    }
    v10 = 4;
    while (1)
    {
      v0 = (void *)(v10 - 4);
      v11 = (v2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2207D4288](v10 - 4, v2) : *(id *)(v2 + 8 * v10);
      v12 = v11;
      v13 = v10 - 3;
      if (__OFADD__(v0, 1))
        break;
      v14 = UIView.firstReactionEffectInteraction.getter();

      if (v14)
        goto LABEL_22;
      ++v10;
      if (v13 == v9)
        goto LABEL_20;
    }
LABEL_25:
    __break(1u);
LABEL_26:
    swift_bridgeObjectRetain();
    v3 = _CocoaArrayWrapper.endIndex.getter();
  }
  while (!v3);
LABEL_3:
  v4 = 4;
  while (1)
  {
    v5 = v4 - 4;
    if ((v2 & 0xC000000000000001) != 0)
    {
      MEMORY[0x2207D4288](v4 - 4, v2);
      v6 = v4 - 3;
      if (__OFADD__(v5, 1))
        goto LABEL_24;
    }
    else
    {
      swift_unknownObjectRetain();
      v6 = v4 - 3;
      if (__OFADD__(v5, 1))
      {
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
    }
    type metadata accessor for ReactionEffectInteraction(0);
    v7 = swift_dynamicCastClass();
    if (v7)
      break;
    swift_unknownObjectRelease();
    ++v4;
    if (v6 == v3)
      goto LABEL_11;
  }
  v14 = v7;
LABEL_22:
  swift_bridgeObjectRelease_n();
  return v14;
}

id ReactionEffectSceneComponent.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ReactionEffectSceneComponent();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void (*UIScene.reactionEffectInteraction.modify(uint64_t *a1))(void **a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = UIScene.reactionEffectInteraction.getter();
  return UIScene.reactionEffectInteraction.modify;
}

void UIScene.reactionEffectInteraction.modify(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    UIScene.reactionEffectInteraction.setter(v2);

  }
  else
  {
    UIScene.reactionEffectInteraction.setter(*a1);
  }
}

uint64_t sub_21FDCE19C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = UIScene.reactionEffectInteraction.getter();
  *a1 = result;
  return result;
}

void sub_21FDCE1C4(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  UIScene.reactionEffectInteraction.setter(v1);
}

unint64_t type metadata accessor for UIView()
{
  unint64_t result;

  result = lazy cache variable for type metadata for UIView;
  if (!lazy cache variable for type metadata for UIView)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for UIView);
  }
  return result;
}

char *ReactionPickerOverlayViewController.__allocating_init()()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  return ReactionPickerOverlayViewController.init()();
}

uint64_t thunk for @escaping @callee_guaranteed (@guaranteed String?) -> ()(_QWORD *a1, uint64_t (*a2)(_QWORD, _QWORD))
{
  return a2(*a1, a1[1]);
}

uint64_t thunk for @escaping @callee_guaranteed (@in_guaranteed String?) -> (@out ())(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD *))
{
  _QWORD v4[2];

  v4[0] = a1;
  v4[1] = a2;
  return a3(v4);
}

uint64_t ReactionPickerOverlayViewController.detailsView.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)(v0 + direct field offset for ReactionPickerOverlayViewController.model)
                              + 320))();
}

uint64_t ReactionPickerOverlayViewController.detailsView.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)(v0 + direct field offset for ReactionPickerOverlayViewController.model)
                              + 328))();
}

uint64_t (*ReactionPickerOverlayViewController.detailsView.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + direct field offset for ReactionPickerOverlayViewController.model);
  a1[1] = v2;
  *a1 = (*(uint64_t (**)(void))(*(_QWORD *)v2 + 320))();
  return ReactionPickerOverlayViewController.detailsView.modify;
}

uint64_t ReactionPickerOverlayViewController.detailsView.modify(uint64_t a1, char a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(a1 + 8) + 328);
  if ((a2 & 1) == 0)
    return v2(*(_QWORD *)a1);
  v3 = swift_retain();
  v2(v3);
  return swift_release();
}

uint64_t ReactionPickerOverlayViewController.selectedReaction.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)(v0 + direct field offset for ReactionPickerOverlayViewController.model)
                              + 224))();
}

uint64_t ReactionPickerOverlayViewController.selectedReaction.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)(v0 + direct field offset for ReactionPickerOverlayViewController.model)
                              + 232))();
}

uint64_t (*ReactionPickerOverlayViewController.selectedReaction.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v1 + direct field offset for ReactionPickerOverlayViewController.model);
  a1[2] = v3;
  *a1 = (*(uint64_t (**)(void))(*(_QWORD *)v3 + 224))();
  a1[1] = v4;
  return ReactionPickerOverlayViewController.selectedReaction.modify;
}

uint64_t ReactionPickerOverlayViewController.selectedReaction.modify(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = a1[1];
  v3 = *a1;
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a1[2] + 232);
  if ((a2 & 1) == 0)
    return v4(*a1, v2);
  swift_bridgeObjectRetain();
  v4(v3, v2);
  return swift_bridgeObjectRelease();
}

uint64_t ReactionPickerOverlayViewController.reactions.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)(v0 + direct field offset for ReactionPickerOverlayViewController.model)
                              + 272))();
}

uint64_t ReactionPickerOverlayViewController.reactions.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)(v0 + direct field offset for ReactionPickerOverlayViewController.model)
                              + 280))();
}

uint64_t (*ReactionPickerOverlayViewController.reactions.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + direct field offset for ReactionPickerOverlayViewController.model);
  a1[1] = v2;
  *a1 = (*(uint64_t (**)(void))(*(_QWORD *)v2 + 272))();
  return ReactionPickerOverlayViewController.reactions.modify;
}

uint64_t ReactionPickerOverlayViewController.reactions.modify(uint64_t a1, char a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(a1 + 8) + 280);
  if ((a2 & 1) == 0)
    return v2(*(_QWORD *)a1);
  v3 = swift_bridgeObjectRetain();
  v2(v3);
  return swift_bridgeObjectRelease();
}

uint64_t ReactionPickerOverlayViewController.showingStatus.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)(v0 + direct field offset for ReactionPickerOverlayViewController.model)
                              + 176))() & 1;
}

uint64_t ReactionPickerOverlayViewController.showingStatus.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)(v0 + direct field offset for ReactionPickerOverlayViewController.model)
                              + 184))();
}

uint64_t (*ReactionPickerOverlayViewController.showingStatus.modify(uint64_t a1))(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + direct field offset for ReactionPickerOverlayViewController.model);
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = (*(uint64_t (**)(void))(*(_QWORD *)v2 + 176))() & 1;
  return ReactionPickerViewModel.isShowingPickerInPopover.modify;
}

uint64_t key path getter for ReactionPickerOverlayViewController.onReaction : ReactionPickerOverlayViewController@<X0>(_QWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD *);

  result = (*(uint64_t (**)(void))(class metadata base offset for ReactionPickerOverlayViewController
                                + (*MEMORY[0x24BEE4EA0] & **a1)
                                + 176))();
  if (result)
  {
    v5 = result;
    v6 = v4;
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v5;
    *(_QWORD *)(result + 24) = v6;
    v7 = _sSSSgIegg_AAytIegnr_TRTA_0;
  }
  else
  {
    v7 = 0;
  }
  *a2 = v7;
  a2[1] = result;
  return result;
}

uint64_t key path setter for ReactionPickerOverlayViewController.onReaction : ReactionPickerOverlayViewController(uint64_t *a1, _QWORD **a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t (*v7)(_QWORD, uint64_t);

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = _sSSSgytIegnr_AAIegg_TRTA_0;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(uint64_t (**)(_QWORD, uint64_t))(class metadata base offset for ReactionPickerOverlayViewController
                                                 + (*MEMORY[0x24BEE4EA0] & **a2)
                                                 + 184);
  outlined copy of (@escaping @callee_guaranteed (@guaranteed String?) -> ())?(v3);
  return v7(v6, v5);
}

uint64_t ReactionPickerOverlayViewController.onReaction.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + direct field offset for ReactionPickerOverlayViewController.onReaction);
  swift_beginAccess();
  v2 = *v1;
  outlined copy of (@escaping @callee_guaranteed (@guaranteed String?) -> ())?(*v1);
  return v2;
}

uint64_t ReactionPickerOverlayViewController.onReaction.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;

  v5 = (uint64_t *)(v2 + direct field offset for ReactionPickerOverlayViewController.onReaction);
  swift_beginAccess();
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  return outlined consume of (@escaping @callee_guaranteed () -> ())?(v6);
}

uint64_t (*ReactionPickerOverlayViewController.onReaction.modify())()
{
  swift_beginAccess();
  return ReactionPickerView.reactions.modify;
}

char *ReactionPickerOverlayViewController.init()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *result;
  char *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_QWORD, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  v24 = *(_QWORD *)(v1 - 8);
  v25 = v1;
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = direct field offset for ReactionPickerOverlayViewController.model;
  type metadata accessor for ReactionPickerViewModel();
  swift_allocObject();
  v6 = v0;
  v7 = ReactionPickerViewModel.init()();
  *(_QWORD *)&v0[v5] = v7;
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter())
    v8 = specialized Set.init(_nonEmptyArrayLiteral:)(MEMORY[0x24BEE4AF8]);
  else
    v8 = MEMORY[0x24BEE4B08];
  *(_QWORD *)&v6[direct field offset for ReactionPickerOverlayViewController.subscriptions] = v8;
  swift_unknownObjectWeakInit();
  v9 = &v6[direct field offset for ReactionPickerOverlayViewController.onReaction];
  lazy protocol witness table accessor for type ReactionPickerViewModel and conformance ReactionPickerViewModel();
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v10 = EnvironmentObject.init()();
  v12 = v11;
  v13 = static ObservableObject.environmentStore.getter();
  swift_retain();

  v26 = v10;
  v27 = v12;
  v28 = v13;
  v29 = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ReactionPickerOverlayView, _EnvironmentKeyWritingModifier<ReactionPickerViewModel?>>);
  lazy protocol witness table accessor for type ModifiedContent<ReactionPickerOverlayView, _EnvironmentKeyWritingModifier<ReactionPickerViewModel?>> and conformance <> ModifiedContent<A, B>();
  v26 = AnyView.init<A>(_:)();
  v14 = (char *)(id)UIHostingController.init(rootView:)();
  result = (char *)objc_msgSend(v14, sel_view);
  if (result)
  {
    v16 = result;
    v17 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
    objc_msgSend(v16, sel_setBackgroundColor_, v17);

    objc_msgSend(v14, sel_setModalPresentationStyle_, 5);
    objc_msgSend(v14, sel_setModalTransitionStyle_, 2);
    v18 = direct field offset for ReactionPickerOverlayViewController.model;
    v19 = *(_QWORD *)&v14[direct field offset for ReactionPickerOverlayViewController.model];
    v20 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v21 = *(void (**)(_QWORD, uint64_t))(*(_QWORD *)v19 + 376);
    swift_retain();
    swift_retain();
    v21(partial apply for closure #1 in ReactionPickerOverlayViewController.init(), v20);
    swift_release();
    v22 = swift_release();
    (*(void (**)(uint64_t))(**(_QWORD **)&v14[v18] + 200))(v22);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type Published<Bool>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<Bool>.Publisher, MEMORY[0x24BDB9EE8]);
    v23 = v25;
    Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v4, v23);
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    return v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ReactionPickerOverlayView, _EnvironmentKeyWritingModifier<ReactionPickerViewModel?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = lazy protocol witness table cache variable for type ModifiedContent<ReactionPickerOverlayView, _EnvironmentKeyWritingModifier<ReactionPickerViewModel?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ReactionPickerOverlayView, _EnvironmentKeyWritingModifier<ReactionPickerViewModel?>> and conformance <> ModifiedContent<A, B>)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ReactionPickerOverlayView, _EnvironmentKeyWritingModifier<ReactionPickerViewModel?>>);
    v2[0] = lazy protocol witness table accessor for type ReactionPickerOverlayView and conformance ReactionPickerOverlayView();
    v2[1] = lazy protocol witness table accessor for type Published<GroupActivitySharingResult?>.Publisher and conformance Published<A>.Publisher(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<ReactionPickerViewModel?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ReactionPickerViewModel?>, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2207D4924](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ReactionPickerOverlayView, _EnvironmentKeyWritingModifier<ReactionPickerViewModel?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ReactionPickerOverlayView and conformance ReactionPickerOverlayView()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ReactionPickerOverlayView and conformance ReactionPickerOverlayView;
  if (!lazy protocol witness table cache variable for type ReactionPickerOverlayView and conformance ReactionPickerOverlayView)
  {
    result = MEMORY[0x2207D4924]("]h}.L{", &type metadata for ReactionPickerOverlayView);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ReactionPickerOverlayView and conformance ReactionPickerOverlayView);
  }
  return result;
}

uint64_t sub_21FDCECEC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void closure #1 in ReactionPickerOverlayViewController.init()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  void (*v13)(_QWORD);

  v5 = a3 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x2207D4A98](v5);
  if (v6)
  {
    v7 = (_QWORD *)v6;
    v8 = direct field offset for ReactionPickerOverlayViewController.model;
    v9 = *(void (**)(uint64_t, uint64_t))(**(_QWORD **)(v6
                                                               + direct field offset for ReactionPickerOverlayViewController.model)
                                                 + 232);
    swift_bridgeObjectRetain();
    swift_retain();
    v9(a1, a2);
    v10 = swift_release();
    v11 = (void (*)(uint64_t, uint64_t))(*(uint64_t (**)(uint64_t))(class metadata base offset for ReactionPickerOverlayViewController
                                                                                    + (*MEMORY[0x24BEE4EA0] & *v7)
                                                                                    + 176))(v10);
    if (v11)
    {
      v12 = (uint64_t)v11;
      v11(a1, a2);
      outlined consume of (@escaping @callee_guaranteed () -> ())?(v12);
    }
    if (a2)
    {
      v13 = *(void (**)(_QWORD))(**(_QWORD **)((char *)v7 + v8) + 184);
      swift_retain();
      v13(0);

      swift_release();
    }
    else
    {

    }
  }
}

void partial apply for closure #1 in ReactionPickerOverlayViewController.init()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  closure #1 in ReactionPickerOverlayViewController.init()(a1, a2, v2);
}

void closure #2 in ReactionPickerOverlayViewController.init()(char *a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x2207D4A98](v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(v4
                                                         + direct field offset for ReactionPickerOverlayViewController.model)
                                           + 176);
    v7 = swift_retain();
    LOBYTE(v6) = v6(v7);
    swift_release();
    if (!(v2 & 1 | ((v6 & 1) == 0)))
      objc_msgSend(v5, sel_dismissViewControllerAnimated_completion_, 1, 0);

  }
}

void partial apply for closure #2 in ReactionPickerOverlayViewController.init()(char *a1)
{
  uint64_t v1;

  closure #2 in ReactionPickerOverlayViewController.init()(a1, v1);
}

id ReactionPickerOverlayViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void @objc ReactionPickerOverlayViewController.init(coder:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  specialized ReactionPickerOverlayViewController.init(coder:)();
}

void ReactionPickerOverlayViewController.present(from:using:animated:completion:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  id v9;
  void *v10;
  _QWORD *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  _QWORD v16[6];

  swift_unknownObjectWeakAssign();
  v9 = objc_msgSend((id)objc_opt_self(), sel__viewControllerForFullScreenPresentationFromView_, a2);
  if (v9)
  {
    v10 = v9;
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = v5;
    v11[3] = a2;
    v11[4] = a4;
    v11[5] = a5;
    v16[4] = partial apply for closure #1 in ReactionPickerOverlayViewController.present(from:using:animated:completion:);
    v16[5] = v11;
    v16[0] = MEMORY[0x24BDAC760];
    v16[1] = 1107296256;
    v16[2] = thunk for @escaping @callee_guaranteed () -> ();
    v16[3] = &block_descriptor_4;
    v12 = _Block_copy(v16);
    v13 = v10;
    v14 = v5;
    v15 = a2;
    outlined copy of (@escaping @callee_guaranteed (@guaranteed String?) -> ())?(a4);
    swift_release();
    objc_msgSend(v13, sel_presentViewController_animated_completion_, v14, 0, v12);

    _Block_release(v12);
  }
}

void closure #1 in ReactionPickerOverlayViewController.present(from:using:animated:completion:)(uint64_t a1, void *a2, void (*a3)(void))
{
  uint64_t v6;
  void *v7;
  id v8;
  double v9;
  double v10;
  id v11;
  double v12;
  double v13;

  v6 = MEMORY[0x2207D4A98](a1 + direct field offset for ReactionPickerOverlayViewController.sourceView);
  if (v6)
  {
    v7 = (void *)v6;
    v8 = a2;
    objc_msgSend(v7, sel_center);
    v10 = v9;
    v11 = objc_msgSend(v7, sel_frame);
    v13 = destructiveProjectEnumData for GroupActivitySharingResult(v11, v10, v12);
    (*(void (**)(id))(**(_QWORD **)(a1 + direct field offset for ReactionPickerOverlayViewController.model)
                               + 136))(objc_msgSend(v7, sel_convertPoint_toView_, v8, v13));

  }
  (*(void (**)(uint64_t))(**(_QWORD **)(a1 + direct field offset for ReactionPickerOverlayViewController.model)
                                  + 184))(1);
  UIAccessibilityPostNotification(*MEMORY[0x24BEBDEC8], 0);
  if (a3)
    a3();
}

Swift::Void __swiftcall ReactionPickerOverlayViewController.dismiss()()
{
  uint64_t v0;

  (*(void (**)(_QWORD))(**(_QWORD **)(v0 + direct field offset for ReactionPickerOverlayViewController.model)
                                 + 184))(0);
  swift_unknownObjectWeakAssign();
}

void ReactionPickerOverlayViewController.viewWillTransition(to:with:)(void *a1, double a2, double a3)
{
  void *v3;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD v10[6];
  objc_super v11;

  v11.receiver = v3;
  v11.super_class = (Class)type metadata accessor for ReactionPickerOverlayViewController();
  objc_msgSendSuper2(&v11, sel_viewWillTransitionToSize_withTransitionCoordinator_, a1, a2, a3);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v3;
  v10[4] = partial apply for closure #1 in ReactionPickerOverlayViewController.viewWillTransition(to:with:);
  v10[5] = v7;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = thunk for @escaping @callee_guaranteed (@guaranteed UIViewControllerTransitionCoordinatorContext) -> ();
  v10[3] = &block_descriptor_10;
  v8 = _Block_copy(v10);
  v9 = v3;
  swift_release();
  objc_msgSend(a1, sel_animateAlongsideTransition_completion_, v8, 0);
  _Block_release(v8);
}

void closure #1 in ReactionPickerOverlayViewController.viewWillTransition(to:with:)(uint64_t a1, char *a2)
{
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  double v7;
  double v8;
  id v9;
  double v10;
  double v11;
  void *v12;
  id v13;

  v3 = MEMORY[0x2207D4A98](&a2[direct field offset for ReactionPickerOverlayViewController.sourceView]);
  if (v3)
  {
    v13 = (id)v3;
    v4 = objc_msgSend(a2, sel_view);
    if (v4)
    {
      v5 = v4;
      v6 = objc_msgSend(v4, sel_window);

      if (v6)
      {
        objc_msgSend(v13, sel_center);
        v8 = v7;
        v9 = objc_msgSend(v13, sel_frame);
        v11 = destructiveProjectEnumData for GroupActivitySharingResult(v9, v8, v10);
        (*(void (**)(id))(**(_QWORD **)&a2[direct field offset for ReactionPickerOverlayViewController.model]
                                   + 136))(objc_msgSend(v13, sel_convertPoint_toView_, 0, v11));

        v12 = v6;
      }
      else
      {
        v12 = v13;
      }

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t thunk for @escaping @callee_guaranteed (@guaranteed UIViewControllerTransitionCoordinatorContext) -> ()(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

void @objc ReactionPickerOverlayViewController.viewWillTransition(to:with:)(void *a1, double a2, double a3, uint64_t a4, void *a5)
{
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  _QWORD v12[6];
  objc_super v13;

  v13.receiver = a1;
  v13.super_class = (Class)type metadata accessor for ReactionPickerOverlayViewController();
  swift_unknownObjectRetain();
  v8 = v13.receiver;
  objc_msgSendSuper2(&v13, sel_viewWillTransitionToSize_withTransitionCoordinator_, a5, a2, a3);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  v12[4] = closure #1 in ReactionPickerOverlayViewController.viewWillTransition(to:with:)partial apply;
  v12[5] = v9;
  v12[0] = MEMORY[0x24BDAC760];
  v12[1] = 1107296256;
  v12[2] = thunk for @escaping @callee_guaranteed (@guaranteed UIViewControllerTransitionCoordinatorContext) -> ();
  v12[3] = &block_descriptor_25;
  v10 = _Block_copy(v12);
  v11 = v8;
  swift_release();
  objc_msgSend(a5, sel_animateAlongsideTransition_completion_, v10, 0);
  _Block_release(v10);
  swift_unknownObjectRelease();

}

void ReactionPickerOverlayViewController.__allocating_init(rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void ReactionPickerOverlayViewController.init(rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void ReactionPickerOverlayViewController.__allocating_init(coder:rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void ReactionPickerOverlayViewController.init(coder:rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t ReactionPickerOverlayViewController.__ivar_destroyer()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakDestroy();
  return outlined consume of (@escaping @callee_guaranteed () -> ())?(*(_QWORD *)(v0
                                                                                + direct field offset for ReactionPickerOverlayViewController.onReaction));
}

id ReactionPickerOverlayViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ReactionPickerOverlayViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t @objc ReactionPickerOverlayViewController.__ivar_destroyer(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakDestroy();
  return outlined consume of (@escaping @callee_guaranteed () -> ())?(*(_QWORD *)(a1
                                                                                + direct field offset for ReactionPickerOverlayViewController.onReaction));
}

void vtable thunk for UIHostingController.__allocating_init(rootView:) dispatching to ReactionPickerOverlayViewController.__allocating_init(rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void vtable thunk for UIHostingController.__allocating_init(coder:rootView:) dispatching to ReactionPickerOverlayViewController.__allocating_init(coder:rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

Swift::Bool __swiftcall ReactionPickerOverlayViewController.accessibilityPerformEscape()()
{
  _QWORD *v0;

  (*(void (**)(void))(class metadata base offset for ReactionPickerOverlayViewController
                    + (*MEMORY[0x24BEE4EA0] & *v0)
                    + 224))();
  return 1;
}

uint64_t @objc ReactionPickerOverlayViewController.accessibilityPerformEscape()(_QWORD *a1)
{
  void (*v1)(void);
  _QWORD *v2;

  v1 = *(void (**)(void))(class metadata base offset for ReactionPickerOverlayViewController
                        + (*MEMORY[0x24BEE4EA0] & *a1)
                        + 224);
  v2 = a1;
  v1();

  return 1;
}

void specialized ReactionPickerOverlayViewController.init(coder:)()
{
  char *v0;
  uint64_t v1;
  unint64_t v2;
  char *v3;

  v1 = direct field offset for ReactionPickerOverlayViewController.model;
  type metadata accessor for ReactionPickerViewModel();
  swift_allocObject();
  *(_QWORD *)&v0[v1] = ReactionPickerViewModel.init()();
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter())
    v2 = specialized Set.init(_nonEmptyArrayLiteral:)(MEMORY[0x24BEE4AF8]);
  else
    v2 = MEMORY[0x24BEE4B08];
  *(_QWORD *)&v0[direct field offset for ReactionPickerOverlayViewController.subscriptions] = v2;
  swift_unknownObjectWeakInit();
  v3 = &v0[direct field offset for ReactionPickerOverlayViewController.onReaction];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_21FDCF89C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 32))
    swift_release();
  return swift_deallocObject();
}

void partial apply for closure #1 in ReactionPickerOverlayViewController.present(from:using:animated:completion:)()
{
  uint64_t v0;

  closure #1 in ReactionPickerOverlayViewController.present(from:using:animated:completion:)(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void (**)(void))(v0 + 32));
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t type metadata accessor for ReactionPickerOverlayViewController()
{
  uint64_t result;

  result = type metadata singleton initialization cache for ReactionPickerOverlayViewController;
  if (!type metadata singleton initialization cache for ReactionPickerOverlayViewController)
    return swift_getSingletonMetadata();
  return result;
}

void partial apply for closure #1 in ReactionPickerOverlayViewController.viewWillTransition(to:with:)(uint64_t a1)
{
  uint64_t v1;

  closure #1 in ReactionPickerOverlayViewController.viewWillTransition(to:with:)(a1, *(char **)(v1 + 16));
}

uint64_t sub_21FDCF940@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(class metadata base offset for ReactionPickerOverlayViewController
                                + (*MEMORY[0x24BEE4EA0] & **a1)
                                + 80))();
  *a2 = result;
  return result;
}

uint64_t sub_21FDCF98C(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(class metadata base offset for ReactionPickerOverlayViewController
                                         + (*MEMORY[0x24BEE4EA0] & **a2)
                                         + 88);
  v3 = swift_retain();
  return v2(v3);
}

uint64_t sub_21FDCF9D8@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(class metadata base offset for ReactionPickerOverlayViewController
                                + (*MEMORY[0x24BEE4EA0] & **a1)
                                + 104))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_21FDCFA24(uint64_t *a1, _QWORD **a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v2 = *a1;
  v3 = a1[1];
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(class metadata base offset for ReactionPickerOverlayViewController
                                                  + (*MEMORY[0x24BEE4EA0] & **a2)
                                                  + 112);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_21FDCFA84@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(class metadata base offset for ReactionPickerOverlayViewController
                                + (*MEMORY[0x24BEE4EA0] & **a1)
                                + 128))();
  *a2 = result;
  return result;
}

uint64_t sub_21FDCFAD0(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))(class metadata base offset for ReactionPickerOverlayViewController
                                         + (*MEMORY[0x24BEE4EA0] & **a2)
                                         + 136);
  v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_21FDCFB1C@<X0>(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(class metadata base offset for ReactionPickerOverlayViewController
                                + (*MEMORY[0x24BEE4EA0] & **a1)
                                + 152))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_21FDCFB6C(unsigned __int8 *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(_QWORD))(class metadata base offset for ReactionPickerOverlayViewController
                                           + (*MEMORY[0x24BEE4EA0] & **a2)
                                           + 160))(*a1);
}

uint64_t type metadata completion function for ReactionPickerOverlayViewController()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for ReactionPickerOverlayViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ReactionPickerOverlayViewController.detailsView.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for ReactionPickerOverlayViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 80))();
}

uint64_t dispatch thunk of ReactionPickerOverlayViewController.detailsView.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for ReactionPickerOverlayViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 88))();
}

uint64_t dispatch thunk of ReactionPickerOverlayViewController.detailsView.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for ReactionPickerOverlayViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 96))();
}

uint64_t dispatch thunk of ReactionPickerOverlayViewController.selectedReaction.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for ReactionPickerOverlayViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 104))();
}

uint64_t dispatch thunk of ReactionPickerOverlayViewController.selectedReaction.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for ReactionPickerOverlayViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 112))();
}

uint64_t dispatch thunk of ReactionPickerOverlayViewController.selectedReaction.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for ReactionPickerOverlayViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 120))();
}

uint64_t dispatch thunk of ReactionPickerOverlayViewController.reactions.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for ReactionPickerOverlayViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 128))();
}

uint64_t dispatch thunk of ReactionPickerOverlayViewController.reactions.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for ReactionPickerOverlayViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 136))();
}

uint64_t dispatch thunk of ReactionPickerOverlayViewController.reactions.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for ReactionPickerOverlayViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 144))();
}

uint64_t dispatch thunk of ReactionPickerOverlayViewController.showingStatus.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for ReactionPickerOverlayViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 152))();
}

uint64_t dispatch thunk of ReactionPickerOverlayViewController.showingStatus.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for ReactionPickerOverlayViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 160))();
}

uint64_t dispatch thunk of ReactionPickerOverlayViewController.showingStatus.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for ReactionPickerOverlayViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 168))();
}

uint64_t dispatch thunk of ReactionPickerOverlayViewController.onReaction.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for ReactionPickerOverlayViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 176))();
}

uint64_t dispatch thunk of ReactionPickerOverlayViewController.onReaction.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for ReactionPickerOverlayViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 184))();
}

uint64_t dispatch thunk of ReactionPickerOverlayViewController.onReaction.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for ReactionPickerOverlayViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 192))();
}

uint64_t dispatch thunk of ReactionPickerOverlayViewController.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for ReactionPickerOverlayViewController + v0 + 200))();
}

uint64_t dispatch thunk of ReactionPickerOverlayViewController.present(from:using:animated:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for ReactionPickerOverlayViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 216))();
}

uint64_t dispatch thunk of ReactionPickerOverlayViewController.dismiss()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for ReactionPickerOverlayViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 224))();
}

uint64_t ObjC metadata update function for ReactionPickerOverlayViewController()
{
  return type metadata accessor for ReactionPickerOverlayViewController();
}

uint64_t sub_21FDCFEF8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_21FDCFF1C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t _sSSSgytIegnr_AAIegg_TRTA_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(_QWORD *);
  _QWORD v5[2];

  v3 = *(uint64_t (**)(_QWORD *))(v2 + 16);
  v5[0] = a1;
  v5[1] = a2;
  return v3(v5);
}

uint64_t _sSSSgIegg_AAytIegnr_TRTA_0(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*a1, a1[1]);
}

uint64_t Task.store(in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12;

  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a3;
  v9[3] = a4;
  v9[4] = a5;
  v9[5] = a2;
  type metadata accessor for AnyCancellable();
  swift_allocObject();
  swift_retain();
  v10 = AnyCancellable.init(_:)();
  specialized Set._Variant.insert(_:)(&v12, v10);
  return swift_release();
}

uint64_t sub_21FDD005C()
{
  swift_release();
  return swift_deallocObject();
}

void partial apply for closure #1 in Task.store(in:)()
{
  JUMPOUT(0x2207D406CLL);
}

uint64_t specialized Collection.first.getter(uint64_t a1)
{
  uint64_t result;
  int v3;
  char v4;
  uint64_t v5;

  result = specialized Set.startIndex.getter(a1);
  if ((v4 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
    return 0;
  v5 = specialized Set.subscript.getter(result, v3, 0, a1);
  swift_bridgeObjectRetain();
  return v5;
}

void *ReactionEffectView.defaultAnimationDuration.unsafeMutableAddressor()
{
  return &static ReactionEffectView.defaultAnimationDuration;
}

double static ReactionEffectView.defaultAnimationDuration.getter()
{
  return 4.5;
}

uint64_t one-time initialization function for reactionEffectURL()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t ObjCClassFromMetadata;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t result;
  uint64_t v17;

  v0 = type metadata accessor for URL();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v0, static ReactionEffectView.reactionEffectURL);
  v9 = __swift_project_value_buffer(v0, (uint64_t)static ReactionEffectView.reactionEffectURL);
  type metadata accessor for ReactionEffectView();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v11 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v12 = (void *)MEMORY[0x2207D3EF8](0xD000000000000012, 0x800000021FDD83E0);
  v13 = (void *)MEMORY[0x2207D3EF8](24931, 0xE200000000000000);
  v14 = objc_msgSend(v11, sel_URLForResource_withExtension_, v12, v13);

  if (v14)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    v15 = *(void (**)(char *, char *, uint64_t))(v1 + 32);
    v15(v8, v4, v0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1 + 56))(v8, 0, 1, v0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 48))(v8, 1, v0);
    if ((_DWORD)result != 1)
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v15)(v9, v8, v0);
  }
  else
  {
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v8, 1, 1, v0);
  }
  __break(1u);
  return result;
}

uint64_t ReactionEffectView.reactionEffectURL.unsafeMutableAddressor()
{
  uint64_t v0;

  if (one-time initialization token for reactionEffectURL != -1)
    swift_once();
  v0 = type metadata accessor for URL();
  return __swift_project_value_buffer(v0, (uint64_t)static ReactionEffectView.reactionEffectURL);
}

uint64_t static ReactionEffectView.reactionEffectURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (one-time initialization token for reactionEffectURL != -1)
    swift_once();
  v2 = type metadata accessor for URL();
  v3 = __swift_project_value_buffer(v2, (uint64_t)static ReactionEffectView.reactionEffectURL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

void *one-time initialization function for reactionToImageMap()
{
  void *result;

  result = (void *)specialized Dictionary.init(dictionaryLiteral:)(MEMORY[0x24BEE4AF8]);
  static ReactionEffectView.reactionToImageMap = result;
  return result;
}

unint64_t one-time initialization function for stringAttrs()
{
  uint64_t inited;
  void **v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  unint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(NSAttributedStringKey, Any)>);
  inited = swift_initStackObject();
  v1 = (void **)MEMORY[0x24BEBB360];
  *(_OWORD *)(inited + 16) = xmmword_21FDD5AF0;
  v2 = *v1;
  *(_QWORD *)(inited + 32) = *v1;
  v3 = (void *)objc_opt_self();
  v4 = v2;
  v5 = objc_msgSend(v3, sel_systemFontOfSize_, 55.0);
  *(_QWORD *)(inited + 64) = type metadata accessor for UIView(0, &lazy cache variable for type metadata for UIFont);
  *(_QWORD *)(inited + 40) = v5;
  result = specialized Dictionary.init(dictionaryLiteral:)(inited);
  static ReactionEffectView.stringAttrs = result;
  return result;
}

uint64_t specialized EnumeratedSequence.Iterator.next()()
{
  _QWORD *v0;
  uint64_t v1;
  int64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  int64_t v11;
  uint64_t result;

  v2 = v0[3];
  v1 = v0[4];
  v3 = v2;
  if (!v1)
  {
    v6 = v2 + 1;
    if (__OFADD__(v2, 1))
      goto LABEL_26;
    v7 = (unint64_t)(v0[2] + 64) >> 6;
    if (v6 < v7)
    {
      v8 = v0[1];
      v9 = *(_QWORD *)(v8 + 8 * v6);
      if (v9)
      {
LABEL_8:
        v4 = (v9 - 1) & v9;
        v3 = v6;
        goto LABEL_3;
      }
      v10 = v2 + 2;
      v3 = v2 + 1;
      if (v2 + 2 < v7)
      {
        v9 = *(_QWORD *)(v8 + 8 * v10);
        if (v9)
        {
LABEL_11:
          v6 = v10;
          goto LABEL_8;
        }
        v3 = v2 + 2;
        if (v2 + 3 < v7)
        {
          v9 = *(_QWORD *)(v8 + 8 * (v2 + 3));
          if (v9)
          {
            v6 = v2 + 3;
            goto LABEL_8;
          }
          v10 = v2 + 4;
          v3 = v2 + 3;
          if (v2 + 4 < v7)
          {
            v9 = *(_QWORD *)(v8 + 8 * v10);
            if (v9)
              goto LABEL_11;
            v6 = v2 + 5;
            v3 = v2 + 4;
            if (v2 + 5 < v7)
            {
              v9 = *(_QWORD *)(v8 + 8 * v6);
              if (v9)
                goto LABEL_8;
              v3 = v7 - 1;
              v11 = v2 + 6;
              while (v7 != v11)
              {
                v9 = *(_QWORD *)(v8 + 8 * v11++);
                if (v9)
                {
                  v6 = v11 - 1;
                  goto LABEL_8;
                }
              }
            }
          }
        }
      }
    }
    v5 = 0;
    v0[3] = v3;
    v0[4] = 0;
    return v5;
  }
  v4 = (v1 - 1) & v1;
LABEL_3:
  v0[3] = v3;
  v0[4] = v4;
  v5 = v0[5];
  if (!__OFADD__(v5, 1))
  {
    v0[5] = v5 + 1;
    swift_bridgeObjectRetain();
    return v5;
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t ReactionEffectView.reactions.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t ReactionEffectView.reactions.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC22_GroupActivities_UIKit18ReactionEffectView_reactions);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*ReactionEffectView.reactions.modify())()
{
  swift_beginAccess();
  return ReactionPickerView.reactions.modify;
}

void ReactionEffectView.renderReaction(_:at:)(uint64_t a1, double a2, double a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  void *v51;
  void *v52;
  void *v53;
  id v54;
  NSObject *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  void (*v60)(CATransform3D *, _QWORD);
  CGFloat v61;
  id v62;
  id v63;
  id v64;
  id v65;
  void *v66;
  unint64_t v67;
  id v68;
  void *v69;
  id v70;
  _QWORD *v71;
  uint64_t v72;
  char *v73;
  void (**v74)(_QWORD, _QWORD, _QWORD);
  uint64_t v75;
  uint64_t v76;
  NSObject *v77;
  _BOOL4 v78;
  id v79;
  uint8_t *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  void (**v87)(_QWORD, _QWORD, _QWORD);
  id v88;
  NSObject *v89;
  uint64_t v90;
  void *v91;
  double v92;
  double v93;
  double v94;
  double v95;
  uint64_t v96;
  double v97;
  double v98;
  id v99;
  double v100;
  double v101;
  double v102;
  double v103;
  id v104;
  void *v105;
  double v106;
  double v107;
  double v108;
  double v109;
  double v110;
  double v111;
  double v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  id v117;
  double v118;
  CGFloat v119;
  id v120;
  void *v121;
  unint64_t v122;
  id v123;
  void *v124;
  id v125;
  void *v126;
  Class isa;
  uint64_t v128;
  void *v129;
  id v130;
  uint64_t v131;
  double v132;
  uint64_t v133;
  id v134;
  void *v135;
  uint64_t v136;
  id v137;
  NSArray v138;
  uint64_t v139;
  char *v140;
  char **v141;
  id v142;
  id v143;
  char *v144;
  uint64_t v145;
  void *v146;
  char *v147;
  char *v148;
  uint64_t v149;
  void *v150;
  uint64_t v151;
  uint64_t v152;
  id v153;
  id v154;
  id v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  void (**v170)(_QWORD, _QWORD, _QWORD);
  void *v171;
  NSObject *v172;
  _QWORD *v173;
  _QWORD v174[4];
  CATransform3D v175;
  CATransform3D v176;

  v171 = (void *)a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reaction?);
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  v156 = (uint64_t)&v152 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v9);
  v157 = (uint64_t)&v152 - v10;
  v173 = (_QWORD *)type metadata accessor for Logger();
  v170 = (void (**)(_QWORD, _QWORD, _QWORD))*(v173 - 1);
  MEMORY[0x24BDAC7A8](v173, v11);
  v169 = (char *)&v152 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchWorkItemFlags();
  v165 = *(_QWORD *)(v13 - 8);
  v166 = v13;
  MEMORY[0x24BDAC7A8](v13, v14);
  v164 = (char *)&v152 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for DispatchQoS();
  v162 = *(_QWORD *)(v16 - 8);
  v163 = v16;
  MEMORY[0x24BDAC7A8](v16, v17);
  v161 = (char *)&v152 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = type metadata accessor for DispatchTime();
  v159 = *(_QWORD *)(v167 - 8);
  v20 = MEMORY[0x24BDAC7A8](v167, v19);
  v158 = (char *)&v152 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20, v22);
  v160 = (char *)&v152 - v23;
  v24 = type metadata accessor for Reaction(0);
  v25 = *(_QWORD *)(v24 - 8);
  v27 = MEMORY[0x24BDAC7A8](v24, v26);
  v168 = (uint64_t)&v152 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v27, v29);
  v32 = (char *)&v152 - v31;
  MEMORY[0x24BDAC7A8](v30, v33);
  v35 = (char *)&v152 - v34;
  v36 = type metadata accessor for URL();
  v37 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36, v38);
  v40 = (char *)&v152 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UIView(0, &lazy cache variable for type metadata for CAPackage);
  if (one-time initialization token for reactionEffectURL != -1)
    swift_once();
  v41 = __swift_project_value_buffer(v36, (uint64_t)static ReactionEffectView.reactionEffectURL);
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v40, v41, v36);
  v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v44 = @nonobjc CAPackage.__allocating_init(contentsOf:type:options:)((uint64_t)v40, v42, v43, 0);
  v51 = v44;
  if (!v44)
    goto LABEL_4;
  v52 = (void *)CAPackage.firstEmitterLayer()();
  if (!v52)
  {

LABEL_4:
    if (one-time initialization token for default != -1)
      swift_once();
    __swift_project_value_buffer((uint64_t)v173, (uint64_t)static Log.default);
    v45 = Logger.logObject.getter();
    v46 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v45, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc();
      v48 = swift_slowAlloc();
      *(_QWORD *)&v176.m11 = v48;
      *(_DWORD *)v47 = 136315138;
      lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type URL and conformance URL, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
      v49 = dispatch thunk of CustomStringConvertible.description.getter();
      *(_QWORD *)&v175.m11 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v49, v50, (uint64_t *)&v176);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21FD90000, v45, v46, "Cannot find emitter layer to render reaction from bundle: %s", v47, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207D49E4](v48, -1, -1);
      MEMORY[0x2207D49E4](v47, -1, -1);
    }

    return;
  }
  v53 = v52;
  v54 = objc_msgSend(v52, sel_superlayer);
  if (!v54)
  {

    goto LABEL_4;
  }
  v153 = v53;
  v154 = v54;
  v155 = v51;
  v55 = v172;
  v56 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v57 = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & (uint64_t)v172->isa) + 0x58))();
  v58 = (uint64_t)v171;
  v59 = specialized Set.contains(_:)((uint64_t)v171, v57);
  swift_bridgeObjectRelease();
  if ((v59 & 1) != 0)
  {

    return;
  }
  outlined init with copy of Reaction(v58, (uint64_t)v32);
  v60 = (void (*)(CATransform3D *, _QWORD))(*(uint64_t (**)(CATransform3D *))((*v56 & (uint64_t)v55->isa)
                                                                                                 + 0x68))(&v176);
  specialized Set._Variant.insert(_:)((uint64_t)v35, (uint64_t)v32);
  outlined destroy of Reaction((uint64_t)v35);
  v60(&v176, 0);
  *(_QWORD *)&v61 = *(int *)(v24 + 20);
  if (!*(_QWORD *)(*(_QWORD *)(v58 + *(_QWORD *)&v61) + 16))
  {
    if (one-time initialization token for default != -1)
      swift_once();
    v71 = v173;
    v72 = __swift_project_value_buffer((uint64_t)v173, (uint64_t)static Log.default);
    v73 = v169;
    v74 = v170;
    ((void (**)(char *, uint64_t, _QWORD *))v170)[2](v169, v72, v71);
    v75 = v58;
    v76 = v168;
    outlined init with copy of Reaction(v75, v168);
    v77 = Logger.logObject.getter();
    LODWORD(v171) = static os_log_type_t.error.getter();
    v172 = v77;
    v78 = os_log_type_enabled(v77, (os_log_type_t)v171);
    v79 = v155;
    if (v78)
    {
      v80 = (uint8_t *)swift_slowAlloc();
      v167 = swift_slowAlloc();
      *(_QWORD *)&v176.m11 = v167;
      *(_DWORD *)v80 = 136315138;
      v81 = v157;
      outlined init with copy of Reaction(v76, v157);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v81, 0, 1, v24);
      v82 = v156;
      outlined init with copy of Reaction?(v81, v156);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v82, 1, v24) == 1)
      {
        v83 = 0xE300000000000000;
        v84 = 7104878;
      }
      else
      {
        outlined init with take of Reaction(v82, (uint64_t)v35);
        outlined init with copy of Reaction((uint64_t)v35, (uint64_t)v32);
        v84 = String.init<A>(reflecting:)();
        v83 = v85;
        outlined destroy of Reaction((uint64_t)v35);
      }
      v86 = v169;
      v87 = v170;
      v88 = v153;
      outlined destroy of PartialRangeThrough<DynamicTypeSize>(v81, &demangling cache variable for type metadata for Reaction?);
      *(_QWORD *)&v175.m11 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v84, v83, (uint64_t *)&v176);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      outlined destroy of Reaction(v168);
      v89 = v172;
      _os_log_impl(&dword_21FD90000, v172, (os_log_type_t)v171, "No emojis to render for reaction: %s", v80, 0xCu);
      v90 = v167;
      swift_arrayDestroy();
      MEMORY[0x2207D49E4](v90, -1, -1);
      MEMORY[0x2207D49E4](v80, -1, -1);

      ((void (*)(char *, _QWORD *))v87[1])(v86, v173);
    }
    else
    {

      outlined destroy of Reaction(v76);
      ((void (*)(char *, _QWORD *))v74[1])(v73, v71);
    }
    return;
  }
  v62 = v153;
  v63 = objc_msgSend(v153, sel_emitterCells);
  v65 = v154;
  v64 = v155;
  if (!v63)
    goto LABEL_38;
  v66 = v63;
  type metadata accessor for UIView(0, &lazy cache variable for type metadata for CAEmitterCell);
  v67 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v67 >> 62))
  {
    if (*(_QWORD *)((v67 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_20;
    goto LABEL_37;
  }
  swift_bridgeObjectRetain();
  v96 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v96)
  {
LABEL_37:
    swift_bridgeObjectRelease();
LABEL_38:
    memset(&v175, 0, 32);
    goto LABEL_39;
  }
LABEL_20:
  if ((v67 & 0xC000000000000001) != 0)
  {
    v68 = (id)MEMORY[0x2207D4288](0, v67);
  }
  else
  {
    if (!*(_QWORD *)((v67 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_74;
    }
    v68 = *(id *)(v67 + 32);
  }
  v69 = v68;
  swift_bridgeObjectRelease();
  v70 = objc_msgSend(v69, sel_contents);

  if (v70)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v174, 0, sizeof(v174));
  }
  outlined init with take of Any?((uint64_t)v174, (uint64_t)&v175);
  if (*(_QWORD *)&v175.m14)
  {
    outlined init with take of Any(&v175, &v176);
    outlined init with copy of Any((uint64_t)&v176, (uint64_t)&v175);
    type metadata accessor for CGImageRef(0);
    swift_dynamicCast();
    v91 = (void *)v174[0];
    CGImageGetSizeAfterOrientation();
    v93 = v92;
    v95 = v94;

    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v176);
    goto LABEL_40;
  }
LABEL_39:
  outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)&v175, &demangling cache variable for type metadata for Any?);
  v93 = 74.0;
  v95 = 76.0;
LABEL_40:
  v97 = v93 * 0.125 + a2;
  v98 = a3 - v95 * 0.125;
  v99 = -[NSObject layer](v172, sel_layer);
  objc_msgSend(v99, sel_bounds);
  v101 = v100;
  v103 = v102;

  v104 = objc_msgSend(v64, sel_rootLayer);
  if (v104)
  {
    v105 = v104;
    objc_msgSend(v104, sel_size);
    v107 = v106;
    v109 = v108;

  }
  else
  {
    v109 = v103;
    v107 = v101;
  }
  v110 = v107 / v101;
  if (v109 / v103 < v107 / v101)
    v110 = v109 / v103;
  v111 = 1.0 / v110;
  if (v111 <= 1.05)
    v112 = v111;
  else
    v112 = 1.05;
  objc_msgSend(v65, sel_setBeginTime_, CACurrentMediaTime());
  objc_msgSend(v65, sel_setAnchorPoint_, 0.5, 0.5);
  objc_msgSend(v65, sel_setPosition_, v97, v98);
  v113 = *(_OWORD *)(MEMORY[0x24BDE5598] + 16);
  *(_OWORD *)&v176.m11 = *MEMORY[0x24BDE5598];
  *(_OWORD *)&v176.m13 = v113;
  v114 = *(_OWORD *)(MEMORY[0x24BDE5598] + 48);
  *(_OWORD *)&v176.m21 = *(_OWORD *)(MEMORY[0x24BDE5598] + 32);
  *(_OWORD *)&v176.m23 = v114;
  v115 = *(_OWORD *)(MEMORY[0x24BDE5598] + 80);
  *(_OWORD *)&v176.m31 = *(_OWORD *)(MEMORY[0x24BDE5598] + 64);
  *(_OWORD *)&v176.m33 = v115;
  v116 = *(_OWORD *)(MEMORY[0x24BDE5598] + 112);
  *(_OWORD *)&v176.m41 = *(_OWORD *)(MEMORY[0x24BDE5598] + 96);
  *(_OWORD *)&v176.m43 = v116;
  CATransform3DScale(&v175, &v176, v112, v112, v112);
  v176 = v175;
  objc_msgSend(v65, sel_setTransform_, &v176);
  objc_msgSend(v65, sel_setMasksToBounds_, 0);
  objc_msgSend(v62, sel_setSeed_, 0);
  objc_msgSend(v62, sel_setGeometryFlipped_, 1);
  objc_msgSend(v62, sel_setMasksToBounds_, 0);
  v117 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v117, sel_scale);
  v119 = v118;

  v120 = objc_msgSend(v62, sel_emitterCells);
  if (!v120)
  {

    return;
  }
  v121 = v120;
  type metadata accessor for UIView(0, &lazy cache variable for type metadata for CAEmitterCell);
  v122 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v122 >> 62))
  {
    if (*(_QWORD *)((v122 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_51;
LABEL_70:

    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  v151 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v151)
    goto LABEL_70;
LABEL_51:
  if ((v122 & 0xC000000000000001) != 0)
  {
    v123 = (id)MEMORY[0x2207D4288](0, v122);
    goto LABEL_54;
  }
  if (!*(_QWORD *)((v122 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  v123 = *(id *)(v122 + 32);
LABEL_54:
  v124 = v123;
  swift_bridgeObjectRelease();
  v125 = objc_msgSend(v62, sel_emitterCells);
  if (v125)
  {
    v126 = v125;
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    swift_bridgeObjectRelease();

    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v62, sel_setEmitterCells_, isa);

  }
  else
  {
    objc_msgSend(v62, sel_setEmitterCells_, 0);
  }
  v128 = *(_QWORD *)(v58 + *(_QWORD *)&v61);
  v129 = (void *)specialized static ReactionEffectView.cellContents(from:size:contentScale:)(v128, v93, v95, v119);
  v130 = objc_msgSend(v129, sel_CGImage);

  if (v130)
  {
    v131 = v58;
    v132 = (double)*(uint64_t *)(v128 + 16);
    objc_msgSend(v124, sel_copy);
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    swift_dynamicCast();
    v58 = *(_QWORD *)&v175.m11;
    objc_msgSend(*(id *)&v175.m11, sel_setContents_, v130);
    objc_msgSend((id)v58, sel_setContentsScale_, v119);
    objc_msgSend((id)v58, sel_setContentsRect_, 0.0, 0.0, 1.0 / v132, 1.0);
    objc_msgSend((id)v58, sel_setContentsFrameMode_, *MEMORY[0x24BDE5948]);
    v133 = *(_QWORD *)(v131 + *(_QWORD *)&v61);
    if (!HIDWORD(*(_QWORD *)(v133 + 16)))
    {
      objc_msgSend((id)v58, sel_setContentsFrameCount_);
      if (!HIDWORD(*(_QWORD *)(v133 + 16)))
      {
        v61 = MEMORY[0x24BEE4AF8];
        objc_msgSend((id)v58, sel_setContentsFramesPerRow_);
        v134 = objc_msgSend(v62, sel_emitterCells);
        v173 = v124;
        v170 = (void (**)(_QWORD, _QWORD, _QWORD))v130;
        if (!v134)
        {
          objc_msgSend(v62, sel_setEmitterCells_, 0);
          swift_bridgeObjectRelease();
          v140 = v158;
          v139 = v159;
          v141 = &selRef_animateAlongsideTransition_completion_;
LABEL_68:
          v142 = objc_msgSend(v172, v141[4]);
          v143 = v154;
          objc_msgSend(v142, sel_addSublayer_, v154);

          type metadata accessor for UIView(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
          v171 = (void *)static OS_dispatch_queue.main.getter();
          static DispatchTime.now()();
          v144 = v160;
          MEMORY[0x2207D3EA4](v140, 4.5);
          v172 = *(NSObject **)(v139 + 8);
          ((void (*)(char *, uint64_t))v172)(v140, v167);
          v145 = swift_allocObject();
          *(_QWORD *)(v145 + 16) = v143;
          *(_QWORD *)&v176.m21 = partial apply for closure #1 in ReactionEffectView.renderReaction(_:at:);
          *(_QWORD *)&v176.m22 = v145;
          *(_QWORD *)&v176.m11 = MEMORY[0x24BDAC760];
          *(_QWORD *)&v176.m12 = 1107296256;
          *(_QWORD *)&v176.m13 = thunk for @escaping @callee_guaranteed () -> ();
          *(_QWORD *)&v176.m14 = &block_descriptor_5;
          v146 = _Block_copy(&v176);
          v169 = (char *)v143;
          swift_release();
          v147 = v161;
          static DispatchQoS.unspecified.getter();
          v176.m11 = v61;
          lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
          lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
          v148 = v164;
          v149 = v166;
          dispatch thunk of SetAlgebra.init<A>(_:)();
          v150 = v171;
          MEMORY[0x2207D4144](v144, v147, v148, v146);

          _Block_release(v146);
          (*(void (**)(char *, uint64_t))(v165 + 8))(v148, v149);
          (*(void (**)(char *, uint64_t))(v162 + 8))(v147, v163);
          ((void (*)(char *, uint64_t))v172)(v144, v167);
          return;
        }
        v135 = v134;
        v136 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        *(_QWORD *)&v176.m11 = v136;
        v137 = (id)v58;
        MEMORY[0x2207D3F94]();
        if (*(_QWORD *)((*(_QWORD *)&v176.m11 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((*(_QWORD *)&v176.m11 & 0xFFFFFFFFFFFFFF8)
                                                                                          + 0x18) >> 1)
        {
LABEL_63:
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          if (*(_QWORD *)&v176.m11)
          {
            v138.super.isa = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
          }
          else
          {
            v138.super.isa = 0;
          }
          v140 = v158;
          v139 = v159;
          v141 = &selRef_animateAlongsideTransition_completion_;
          objc_msgSend(v62, sel_setEmitterCells_, v138.super.isa);

          goto LABEL_68;
        }
LABEL_75:
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        goto LABEL_63;
      }
    }
  }
  else
  {
    __break(1u);
  }
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id @nonobjc CAPackage.__allocating_init(contentsOf:type:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v8;
  void *v9;
  void *v10;
  NSDictionary v11;
  id v12;
  id v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  id v16;
  id v17;
  uint64_t v18;
  id v20;
  NSURL *v21;

  v21 = (NSURL *)*MEMORY[0x24BDAC8D0];
  URL._bridgeToObjectiveC()(v21);
  v9 = v8;
  v10 = (void *)MEMORY[0x2207D3EF8](a2, a3);
  swift_bridgeObjectRelease();
  if (a4)
  {
    v11.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v11.super.isa = 0;
  }
  v20 = 0;
  v12 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_packageWithContentsOfURL_type_options_error_, v9, v10, v11.super.isa, &v20);

  v13 = v20;
  if (v12)
  {
    v14 = type metadata accessor for URL();
    v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8);
    v16 = v13;
    v15(a1, v14);
  }
  else
  {
    v17 = v20;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    v18 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(a1, v18);
  }
  return v12;
}

CAEmitterLayer_optional __swiftcall CAPackage.firstEmitterLayer()()
{
  void *v0;
  void *v1;
  id v2;
  Swift::Bool v3;
  unint64_t v4;
  id v5;
  void *v6;
  objc_class *v7;
  unint64_t v8;
  _OWORD v9[2];
  _BYTE v10[24];
  uint64_t v11;
  CAEmitterLayer_optional result;

  v1 = (void *)MEMORY[0x2207D3EF8](0x72657474696D65, 0xE700000000000000);
  v2 = objc_msgSend(v0, sel_publishedObjectWithName_, v1);

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  outlined init with take of Any?((uint64_t)v9, (uint64_t)v10);
  if (v11)
  {
    type metadata accessor for UIView(0, &lazy cache variable for type metadata for CAEmitterLayer);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v4 = v8;
      goto LABEL_11;
    }
  }
  else
  {
    outlined destroy of PartialRangeThrough<DynamicTypeSize>((uint64_t)v10, &demangling cache variable for type metadata for Any?);
  }
  v5 = objc_msgSend(v0, sel_rootLayer);
  if (v5)
  {
    v6 = v5;
    v4 = (unint64_t)CAPackage.emitterLayer(in:)((CALayer)v5);

  }
  else
  {
    v4 = 0;
  }
LABEL_11:
  v7 = (objc_class *)v4;
  result.value.super.super.isa = v7;
  result.is_nil = v3;
  return result;
}

uint64_t specialized Set.contains(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v18[72];

  v4 = type metadata accessor for Reaction(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (!*(_QWORD *)(a2 + 16))
    return 0;
  Hasher.init(_seed:)();
  type metadata accessor for UUID();
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type UUID and conformance UUID, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  dispatch thunk of Hashable.hash(into:)();
  v9 = *(int *)(v4 + 20);
  v10 = *(_QWORD *)(a1 + v9);
  swift_bridgeObjectRetain();
  specialized Set.hash(into:)((uint64_t)v18, v10);
  swift_bridgeObjectRelease();
  v11 = Hasher._finalize()();
  v12 = -1 << *(_BYTE *)(a2 + 32);
  v13 = v11 & ~v12;
  if (((*(_QWORD *)(a2 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
    return 0;
  v14 = ~v12;
  v15 = *(_QWORD *)(v5 + 72);
  while (1)
  {
    outlined init with copy of Reaction(*(_QWORD *)(a2 + 48) + v15 * v13, (uint64_t)v8);
    if ((static UUID.== infix(_:_:)() & 1) != 0
      && (specialized static Set.== infix(_:_:)(*(_QWORD *)&v8[*(int *)(v4 + 20)], *(_QWORD *)(a1 + v9)) & 1) != 0)
    {
      break;
    }
    outlined destroy of Reaction((uint64_t)v8);
    v13 = (v13 + 1) & v14;
    if (((*(_QWORD *)(a2 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      return 0;
  }
  outlined destroy of Reaction((uint64_t)v8);
  return 1;
}

id ReactionEffectView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id ReactionEffectView.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_super v10;

  *(_QWORD *)&v4[OBJC_IVAR____TtC22_GroupActivities_UIKit18ReactionEffectView_reactions] = MEMORY[0x24BEE4B08];
  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for ReactionEffectView();
  return objc_msgSendSuper2(&v10, sel_initWithFrame_, a1, a2, a3, a4);
}

id ReactionEffectView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id ReactionEffectView.init(coder:)(void *a1)
{
  char *v1;
  id v3;
  objc_super v5;

  *(_QWORD *)&v1[OBJC_IVAR____TtC22_GroupActivities_UIKit18ReactionEffectView_reactions] = MEMORY[0x24BEE4B08];
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ReactionEffectView();
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id ReactionEffectView.__deallocating_deinit()
{
  return PictureInPicturePreviewPresenter.__deallocating_deinit(type metadata accessor for ReactionEffectView);
}

Swift::Void __swiftcall ReactionEffectViewController.loadView()()
{
  char *v0;
  void *v1;

  v1 = *(void **)&v0[OBJC_IVAR____TtC22_GroupActivities_UIKit28ReactionEffectViewController_effectView];
  objc_msgSend(v1, sel_setUserInteractionEnabled_, 0);
  objc_msgSend(v0, sel_setView_, v1);
}

uint64_t ReactionEffectViewController.renderReaction(_:at:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **(_QWORD **)(v0
                                                                    + OBJC_IVAR____TtC22_GroupActivities_UIKit28ReactionEffectViewController_effectView))
                              + 0x70))();
}

id ReactionEffectViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)MEMORY[0x2207D3EF8]();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

id ReactionEffectViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  uint64_t v7;
  id v8;
  char *v9;
  void *v10;
  id v11;
  objc_super v13;

  v7 = OBJC_IVAR____TtC22_GroupActivities_UIKit28ReactionEffectViewController_effectView;
  type metadata accessor for ReactionEffectView();
  v8 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v9 = v3;
  *(_QWORD *)&v3[v7] = objc_msgSend(v8, sel_init);

  if (a2)
  {
    v10 = (void *)MEMORY[0x2207D3EF8](a1, a2);
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
  }
  v13.receiver = v9;
  v13.super_class = (Class)type metadata accessor for ReactionEffectViewController();
  v11 = objc_msgSendSuper2(&v13, sel_initWithNibName_bundle_, v10, a3);

  return v11;
}

id ReactionEffectViewController.init(coder:)(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  id v6;
  objc_super v8;

  v3 = OBJC_IVAR____TtC22_GroupActivities_UIKit28ReactionEffectViewController_effectView;
  type metadata accessor for ReactionEffectView();
  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, sel_init);

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for ReactionEffectViewController();
  v6 = objc_msgSendSuper2(&v8, sel_initWithCoder_, a1);

  return v6;
}

id ReactionEffectViewController.__deallocating_deinit()
{
  return PictureInPicturePreviewPresenter.__deallocating_deinit(type metadata accessor for ReactionEffectViewController);
}

CAEmitterLayer_optional __swiftcall CAPackage.emitterLayer(in:)(CALayer in)
{
  uint64_t v2;
  unint64_t v3;
  objc_class *v4;
  Swift::Bool v5;
  id v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  objc_class *v14;
  CAEmitterLayer_optional result;

  objc_opt_self();
  v2 = swift_dynamicCastObjCClass();
  if (v2)
  {
    v3 = v2;
    v4 = in.super.isa;
  }
  else
  {
    v6 = -[objc_class sublayers](in.super.isa, sel_sublayers);
    if (v6)
    {
      v7 = v6;
      type metadata accessor for UIView(0, &lazy cache variable for type metadata for CALayer);
      v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v8 >> 62)
        goto LABEL_18;
      v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      while (v9)
      {
        v10 = 4;
        while (1)
        {
          v11 = (v8 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x2207D4288](v10 - 4, v8)
              : *(id *)(v8 + 8 * v10);
          v12 = v11;
          v13 = v10 - 3;
          if (__OFADD__(v10 - 4, 1))
            break;
          v3 = (unint64_t)CAPackage.emitterLayer(in:)((CALayer)v11);

          if (v3)
          {
            swift_bridgeObjectRelease();
            goto LABEL_15;
          }
          ++v10;
          if (v13 == v9)
            goto LABEL_13;
        }
        __break(1u);
LABEL_18:
        swift_bridgeObjectRetain();
        v9 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
LABEL_13:
      swift_bridgeObjectRelease();
    }
    v3 = 0;
  }
LABEL_15:
  v14 = (objc_class *)v3;
  result.value.super.super.isa = v14;
  result.is_nil = v5;
  return result;
}

unint64_t specialized __RawDictionaryStorage.find<A>(_:)(uint64_t a1)
{
  Swift::Int v2;

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  v2 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return specialized __RawDictionaryStorage.find<A>(_:hashValue:)(a1, v2);
}

unint64_t specialized __RawDictionaryStorage.find<A>(_:hashValue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v8 = v7;
    if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          v15 = v14;
          if (v13 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v15 == v16)
            break;
          v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

uint64_t specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<String, Int>);
  v37 = a2;
  v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_38;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v2;
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v14++, 1))
      goto LABEL_40;
    if (v14 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v14);
    if (!v24)
    {
      v25 = v14 + 1;
      if (v14 + 1 >= v11)
      {
LABEL_31:
        swift_release();
        v3 = v35;
        if ((v37 & 1) == 0)
          goto LABEL_38;
        goto LABEL_34;
      }
      v24 = *(_QWORD *)(v36 + 8 * v25);
      if (!v24)
      {
        while (1)
        {
          v14 = v25 + 1;
          if (__OFADD__(v25, 1))
            break;
          if (v14 >= v11)
            goto LABEL_31;
          v24 = *(_QWORD *)(v36 + 8 * v14);
          ++v25;
          if (v24)
            goto LABEL_20;
        }
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return result;
      }
      ++v14;
    }
LABEL_20:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_21:
    v26 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v28 = *v26;
    v27 = v26[1];
    v29 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    Hasher.init(_seed:)();
    String.hash(into:)();
    result = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v32 = v17 == v31;
        if (v17 == v31)
          v17 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v33 == -1);
      v18 = __clz(__rbit64(~v33)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v18);
    *v19 = v28;
    v19[1] = v27;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v18) = v29;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_38;
LABEL_34:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_38:
  result = swift_release();
  *v3 = v7;
  return result;
}

{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<String, UIImage>);
  v38 = a2;
  v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v36)
        goto LABEL_33;
      v23 = *(_QWORD *)(v37 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v36)
              goto LABEL_33;
            v23 = *(_QWORD *)(v37 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v33 = v32;
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    result = Hasher._finalize()();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v22 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

void *specialized _NativeDictionary.copy()()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<String, Int>);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_24:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1))
      goto LABEL_26;
    if (v9 >= v13)
      goto LABEL_24;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    if (!v24)
      break;
LABEL_23:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 8 * v15;
    v21 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v22 = v19;
    v22[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v20) = v21;
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v9 + 1;
  if (v9 + 1 >= v13)
    goto LABEL_24;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_24;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_23;
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

id specialized _NativeDictionary.copy()()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<String, UIImage>);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void specialized _NativeDictionary.setValue(_:forKey:isUnique:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = specialized __RawDictionaryStorage.find<A>(_:)(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    specialized _NativeDictionary.copy()();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v15, a4 & 1);
  v20 = specialized __RawDictionaryStorage.find<A>(_:)(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
}

uint64_t specialized Set.startIndex.getter(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t specialized Set.subscript.getter(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return *(_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * result);
LABEL_8:
  __break(1u);
  return result;
}

UIImage *specialized static ReactionEffectView.image(from:size:contentScale:)(uint64_t a1, uint64_t a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  UIImage *v14;
  void *v15;
  Class isa;
  UIImage *result;
  UIImage *v18;
  char isUniquelyReferenced_nonNull_native;
  void *v20;
  CGSize v21;

  if (one-time initialization token for reactionToImageMap != -1)
    swift_once();
  swift_beginAccess();
  v10 = static ReactionEffectView.reactionToImageMap;
  v11 = *((_QWORD *)static ReactionEffectView.reactionToImageMap + 2);
  swift_bridgeObjectRetain();
  if (v11)
  {
    v12 = specialized __RawDictionaryStorage.find<A>(_:)(a1, a2);
    if ((v13 & 1) != 0)
    {
      v14 = (UIImage *)*(id *)(v10[7] + 8 * v12);
LABEL_10:
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v18 = v14;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v20 = static ReactionEffectView.reactionToImageMap;
      static ReactionEffectView.reactionToImageMap = (_UNKNOWN *)0x8000000000000000;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)v18, a1, a2, isUniquelyReferenced_nonNull_native);
      static ReactionEffectView.reactionToImageMap = v20;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      return v18;
    }
  }
  v21.width = a3;
  v21.height = a4;
  UIGraphicsBeginImageContextWithOptions(v21, 0, a5);
  v15 = (void *)MEMORY[0x2207D3EF8](a1, a2);
  if (one-time initialization token for stringAttrs != -1)
    swift_once();
  type metadata accessor for NSAttributedStringKey(0);
  lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey, (uint64_t (*)(uint64_t))type metadata accessor for NSAttributedStringKey, (uint64_t)&protocol conformance descriptor for NSAttributedStringKey);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v15, sel_drawInRect_withAttributes_, isa, 0.0, 0.0, a3, a4);

  result = UIGraphicsGetImageFromCurrentImageContext();
  if (result)
  {
    v14 = result;
    UIGraphicsEndImageContext();
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t specialized static ReactionEffectView.cellContents(from:size:contentScale:)(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v8;
  uint64_t v9;
  UIImage *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  UIImage *v25;
  void *v26;
  Class isa;
  UIImage *v28;
  UIImage *v29;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v31;
  char v32;
  unint64_t v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  char v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  UIImage *v45;
  uint64_t result;
  _QWORD *v47;
  CGSize v48;
  CGSize v49;

  v8 = specialized Collection.first.getter(a1);
  if (v9)
  {
    if (*(_QWORD *)(a1 + 16) == 1)
    {
      v10 = specialized static ReactionEffectView.image(from:size:contentScale:)(v8, v9, a2, a3, a4);
      swift_bridgeObjectRelease();
      return (uint64_t)v10;
    }
    swift_bridgeObjectRelease();
  }
  v48.width = (double)*(uint64_t *)(a1 + 16) * a2;
  v48.height = a3;
  UIGraphicsBeginImageContextWithOptions(v48, 0, a4);
  swift_bridgeObjectRetain();
  v11 = specialized EnumeratedSequence.Iterator.next()();
  if (!v13)
  {
LABEL_29:
    outlined consume of Set<UIScene>.Iterator._Variant();
    v45 = UIGraphicsGetImageFromCurrentImageContext();
    if (!v45)
      goto LABEL_35;
    v10 = v45;
    UIGraphicsEndImageContext();
    return (uint64_t)v10;
  }
  v14 = v11;
  v15 = v12;
  v16 = v13;
  while (1)
  {
    if (one-time initialization token for reactionToImageMap != -1)
      swift_once();
    swift_beginAccess();
    v21 = static ReactionEffectView.reactionToImageMap;
    v22 = *((_QWORD *)static ReactionEffectView.reactionToImageMap + 2);
    swift_bridgeObjectRetain();
    if (v22 && (v23 = specialized __RawDictionaryStorage.find<A>(_:)(v15, v16), (v24 & 1) != 0))
    {
      v25 = (UIImage *)*(id *)(v21[7] + 8 * v23);
    }
    else
    {
      v49.width = a2;
      v49.height = a3;
      UIGraphicsBeginImageContextWithOptions(v49, 0, a4);
      v26 = (void *)MEMORY[0x2207D3EF8](v15, v16);
      if (one-time initialization token for stringAttrs != -1)
        swift_once();
      type metadata accessor for NSAttributedStringKey(0);
      lazy protocol witness table accessor for type ReactionHistoryViewModel and conformance ReactionHistoryViewModel(&lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey, (uint64_t (*)(uint64_t))type metadata accessor for NSAttributedStringKey, (uint64_t)&protocol conformance descriptor for NSAttributedStringKey);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v26, sel_drawInRect_withAttributes_, isa, 0.0, 0.0, a2, a3);

      v28 = UIGraphicsGetImageFromCurrentImageContext();
      if (!v28)
        goto LABEL_34;
      v25 = v28;
      UIGraphicsEndImageContext();
    }
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v29 = v25;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v31 = static ReactionEffectView.reactionToImageMap;
    v47 = static ReactionEffectView.reactionToImageMap;
    static ReactionEffectView.reactionToImageMap = (_UNKNOWN *)0x8000000000000000;
    v33 = specialized __RawDictionaryStorage.find<A>(_:)(v15, v16);
    v34 = v31[2];
    v35 = (v32 & 1) == 0;
    v36 = v34 + v35;
    if (__OFADD__(v34, v35))
      break;
    v37 = v32;
    if (v31[3] >= v36)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v40 = v47;
        if ((v32 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        specialized _NativeDictionary.copy()();
        v40 = v47;
        if ((v37 & 1) != 0)
          goto LABEL_7;
      }
    }
    else
    {
      specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v36, isUniquelyReferenced_nonNull_native);
      v38 = specialized __RawDictionaryStorage.find<A>(_:)(v15, v16);
      if ((v37 & 1) != (v39 & 1))
        goto LABEL_36;
      v33 = v38;
      v40 = v47;
      if ((v37 & 1) != 0)
      {
LABEL_7:
        v17 = v40[7];
        v18 = 8 * v33;

        *(_QWORD *)(v17 + v18) = v29;
        goto LABEL_8;
      }
    }
    v40[(v33 >> 6) + 8] |= 1 << v33;
    v41 = (uint64_t *)(v40[6] + 16 * v33);
    *v41 = v15;
    v41[1] = v16;
    *(_QWORD *)(v40[7] + 8 * v33) = v29;
    v42 = v40[2];
    v43 = __OFADD__(v42, 1);
    v44 = v42 + 1;
    if (v43)
      goto LABEL_33;
    v40[2] = v44;
    swift_bridgeObjectRetain();
LABEL_8:
    static ReactionEffectView.reactionToImageMap = v40;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_bridgeObjectRelease();
    -[UIImage drawAtPoint:](v29, sel_drawAtPoint_, (double)v14 * a2, 0.0);

    v14 = specialized EnumeratedSequence.Iterator.next()();
    v15 = v19;
    v16 = v20;
    if (!v20)
      goto LABEL_29;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_21FDD39E0()
{
  uint64_t v0;

  return swift_deallocObject();
}

id partial apply for closure #1 in ReactionEffectView.renderReaction(_:at:)()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_removeFromSuperlayer);
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t outlined init with take of Any?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Any?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with copy of Reaction?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Reaction?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for ReactionEffectView()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ReactionEffectViewController()
{
  return objc_opt_self();
}

uint64_t sub_21FDD3AFC@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x58))();
  *a2 = result;
  return result;
}

uint64_t sub_21FDD3B3C(uint64_t a1, _QWORD **a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & **a2) + 0x60);
  v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t method lookup function for ReactionEffectView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ReactionEffectView.reactions.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x58))();
}

uint64_t dispatch thunk of ReactionEffectView.reactions.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of ReactionEffectView.reactions.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of ReactionEffectView.renderReaction(_:at:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
}

uint64_t method lookup function for ReactionEffectViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ReactionEffectViewController.renderReaction(_:at:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x58))();
}

uint64_t POSIXError._nsError.getter()
{
  return MEMORY[0x24BDCAFC8]();
}

uint64_t type metadata accessor for POSIXError()
{
  return MEMORY[0x24BDCAFE0]();
}

uint64_t static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x24BDCB6D0]();
}

uint64_t type metadata accessor for CharacterSet()
{
  return MEMORY[0x24BDCB750]();
}

uint64_t _BridgedStoredNSError.init(_:userInfo:)()
{
  return MEMORY[0x24BDCD2C0]();
}

uint64_t _convertNSErrorToError(_:)()
{
  return MEMORY[0x24BDCD2F8]();
}

void __swiftcall URL._bridgeToObjectiveC()(NSURL *__return_ptr retstr)
{
  MEMORY[0x24BDCD8D0](retstr);
}

uint64_t static URL._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x24BDCD9C0]();
}

uint64_t type metadata accessor for URL()
{
  return MEMORY[0x24BDCDAC0]();
}

NSData __swiftcall Data._bridgeToObjectiveC()()
{
  return (NSData)MEMORY[0x24BDCDCA0]();
}

uint64_t static Data._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t UUID.uuidString.getter()
{
  return MEMORY[0x24BDCE9B0]();
}

NSUUID __swiftcall UUID._bridgeToObjectiveC()()
{
  return (NSUUID)MEMORY[0x24BDCE9D0]();
}

uint64_t static UUID.== infix(_:_:)()
{
  return MEMORY[0x24BDCE9E0]();
}

uint64_t static UUID._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x24BDCE9F8]();
}

uint64_t UUID.init()()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t type metadata accessor for UUID()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t type metadata accessor for XPCIdentity()
{
  return MEMORY[0x24BE19EB0]();
}

uint64_t static XPCInterface.isConnectionEntitled(_:)()
{
  return MEMORY[0x24BE19EB8]();
}

uint64_t XPCHostConnection.init(connection:queue:)()
{
  return MEMORY[0x24BE19F10]();
}

uint64_t PeoplePickerClient.delegate.setter()
{
  return MEMORY[0x24BE19F20]();
}

uint64_t type metadata accessor for PeoplePickerClient()
{
  return MEMORY[0x24BE19F28]();
}

uint64_t GroupActivityDescription.tuActivityContext.getter()
{
  return MEMORY[0x24BE19F38]();
}

uint64_t static GroupActivityDescription.generic.getter()
{
  return MEMORY[0x24BE19F40]();
}

uint64_t type metadata accessor for GroupActivityDescription()
{
  return MEMORY[0x24BE19F48]();
}

uint64_t static ConversationManagerClient.shared.getter()
{
  return MEMORY[0x24BE19F50]();
}

uint64_t type metadata accessor for ConversationManagerClient()
{
  return MEMORY[0x24BE19F60]();
}

uint64_t dispatch thunk of PeoplePickerConfiguration.shareSheetSessionID.setter()
{
  return MEMORY[0x24BE19F68]();
}

uint64_t type metadata accessor for PeoplePickerConfiguration()
{
  return MEMORY[0x24BE19F70]();
}

uint64_t dispatch thunk of ConversationManagerClientProtocol.createActivitySession(with:onConversationWithUUID:)()
{
  return MEMORY[0x24BE19F80]();
}

uint64_t XPCClient.__allocating_init(connection:)()
{
  return MEMORY[0x24BE19FC8]();
}

uint64_t XPCClient.__allocating_init(listenerEndpoint:)()
{
  return MEMORY[0x24BE19FD0]();
}

uint64_t XPCClient.withSynchronousHost<A>(body:errorHandler:)()
{
  return MEMORY[0x24BE19FE0]();
}

uint64_t XPCClient.queue.getter()
{
  return MEMORY[0x24BE19FE8]();
}

uint64_t AnyGroupActivity.tuConversationActivity<A>(as:)()
{
  return MEMORY[0x24BDD1B88]();
}

uint64_t type metadata accessor for AnyGroupActivity()
{
  return MEMORY[0x24BDD1B98]();
}

uint64_t GroupSessionEvent.init(originator:action:url:)()
{
  return MEMORY[0x24BDD1BC0]();
}

uint64_t static GroupSessionEvent.Action.react(with:)()
{
  return MEMORY[0x24BDD1BC8]();
}

uint64_t type metadata accessor for GroupSessionEvent.Action()
{
  return MEMORY[0x24BDD1BD0]();
}

uint64_t type metadata accessor for GroupSessionEvent()
{
  return MEMORY[0x24BDD1BD8]();
}

uint64_t GroupSessionMessenger.MessageContext.source.getter()
{
  return MEMORY[0x24BDD1CF0]();
}

uint64_t type metadata accessor for GroupSessionMessenger.MessageContext()
{
  return MEMORY[0x24BDD1CF8]();
}

uint64_t GroupSessionMessenger.send<A>(_:to:)()
{
  return MEMORY[0x24BDD1D10]();
}

uint64_t GroupSessionMessenger.__allocating_init<A>(session:)()
{
  return MEMORY[0x24BDD1D28]();
}

uint64_t GroupSessionMessenger.Messages.makeAsyncIterator()()
{
  return MEMORY[0x24BDD1D38]();
}

uint64_t GroupSessionMessenger.messages<A>(of:)()
{
  return MEMORY[0x24BDD1D58]();
}

uint64_t type metadata accessor for GroupSessionMessenger()
{
  return MEMORY[0x24BDD1D60]();
}

uint64_t GroupSessionEndpointIdentifier.init(rawValue:)()
{
  return MEMORY[0x24BDD1DB8]();
}

uint64_t GroupSessionEndpointIdentifier.rawValue.getter()
{
  return MEMORY[0x24BDD1DC0]();
}

uint64_t type metadata accessor for GroupSessionEndpointIdentifier()
{
  return MEMORY[0x24BDD1DC8]();
}

uint64_t GroupSession.showNotice(_:)()
{
  return MEMORY[0x24BDD1DD0]();
}

uint64_t GroupSession.requestEndpoint(with:)()
{
  return MEMORY[0x24BDD1DE0]();
}

uint64_t GroupSession.id.getter()
{
  return MEMORY[0x24BDD1E10]();
}

uint64_t type metadata accessor for GroupSession.State()
{
  return MEMORY[0x24BDD1E40]();
}

uint64_t GroupSession.$state.getter()
{
  return MEMORY[0x24BDD1E60]();
}

uint64_t type metadata accessor for GroupSession()
{
  return MEMORY[0x24BDD1E98]();
}

uint64_t GroupActivity.eraseToAnyGroupActivity()()
{
  return MEMORY[0x24BDD1EC0]();
}

uint64_t Participant.id.getter()
{
  return MEMORY[0x24BDD1EF0]();
}

uint64_t type metadata accessor for Participant()
{
  return MEMORY[0x24BDD1F00]();
}

uint64_t dispatch thunk of Conversation.id.getter()
{
  return MEMORY[0x24BDD1F40]();
}

uint64_t type metadata accessor for Participants()
{
  return MEMORY[0x24BDD1F68]();
}

uint64_t ConversationManager.activeConversation.getter()
{
  return MEMORY[0x24BDD1FC8]();
}

uint64_t static ConversationManager.shared.getter()
{
  return MEMORY[0x24BDD1FD0]();
}

uint64_t type metadata accessor for ConversationManager()
{
  return MEMORY[0x24BDD1FD8]();
}

uint64_t UTType.identifier.getter()
{
  return MEMORY[0x24BEE6190]();
}

uint64_t static UTType._groupActivity.getter()
{
  return MEMORY[0x24BDD2008]();
}

uint64_t type metadata accessor for UTType()
{
  return MEMORY[0x24BEE63B8]();
}

uint64_t Logger.logObject.getter()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t Logger.init(subsystem:category:)()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t type metadata accessor for Logger()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t type metadata accessor for Publishers.ReceiveOn()
{
  return MEMORY[0x24BDB99F8]();
}

uint64_t AnyCancellable.store(in:)()
{
  return MEMORY[0x24BDB9B40]();
}

uint64_t type metadata accessor for AnyCancellable()
{
  return MEMORY[0x24BDB9B60]();
}

uint64_t AnyCancellable.init(_:)()
{
  return MEMORY[0x24BDB9B90]();
}

uint64_t static ObservableObject.environmentStore.getter()
{
  return MEMORY[0x24BDEAE18]();
}

uint64_t ObservableObject<>.objectWillChange.getter()
{
  return MEMORY[0x24BDB9C48]();
}

uint64_t Published.init(initialValue:)()
{
  return MEMORY[0x24BDB9E98]();
}

uint64_t Published.projectedValue.getter()
{
  return MEMORY[0x24BDB9EA0]();
}

uint64_t Published.projectedValue.setter()
{
  return MEMORY[0x24BDB9EA8]();
}

uint64_t static Published.subscript.modify()
{
  return MEMORY[0x24BDB9EC0]();
}

uint64_t static Published.subscript.getter()
{
  return MEMORY[0x24BDB9EC8]();
}

uint64_t static Published.subscript.setter()
{
  return MEMORY[0x24BDB9ED0]();
}

uint64_t type metadata accessor for Published.Publisher()
{
  return MEMORY[0x24BDB9ED8]();
}

uint64_t type metadata accessor for Published()
{
  return MEMORY[0x24BDB9EF0]();
}

uint64_t Publisher<>.sinkOnce(_:)()
{
  return MEMORY[0x24BE1A000]();
}

uint64_t Publisher.delay<A>(for:tolerance:scheduler:options:)()
{
  return MEMORY[0x24BDB9FC0]();
}

uint64_t Publisher.filter(_:)()
{
  return MEMORY[0x24BDBA030]();
}

uint64_t Publisher.receive<A>(on:options:)()
{
  return MEMORY[0x24BDBA090]();
}

uint64_t Publisher<>.sink(receiveValue:)()
{
  return MEMORY[0x24BDBA110]();
}

uint64_t Animatable<>.animatableData.modify()
{
  return MEMORY[0x24BDEAE98]();
}

uint64_t static Animatable<>._makeAnimatable(value:inputs:)()
{
  return MEMORY[0x24BDEAEB0]();
}

uint64_t EdgeInsets.init(_all:)()
{
  return MEMORY[0x24BDEB040]();
}

uint64_t FocusState.wrappedValue.getter()
{
  return MEMORY[0x24BDEB0A8]();
}

uint64_t FocusState.wrappedValue.setter()
{
  return MEMORY[0x24BDEB0B0]();
}

uint64_t FocusState.projectedValue.getter()
{
  return MEMORY[0x24BDEB0B8]();
}

uint64_t FocusState.init<>()()
{
  return MEMORY[0x24BDEB0E0]();
}

uint64_t ScrollView.init(_:showsIndicators:content:)()
{
  return MEMORY[0x24BDEB230]();
}

uint64_t Transition.combined<A>(with:)()
{
  return MEMORY[0x24BDEB2F0]();
}

uint64_t Transaction.init(animation:)()
{
  return MEMORY[0x24BDEB8B0]();
}

uint64_t static VerticalEdge.Set.all.getter()
{
  return MEMORY[0x24BDEBD70]();
}

uint64_t static VerticalEdge.Set.bottom.getter()
{
  return MEMORY[0x24BDEBD80]();
}

uint64_t VerticalEdge.rawValue.getter()
{
  return MEMORY[0x24BDEBD98]();
}

uint64_t static ViewModifier._makeView(modifier:inputs:body:)()
{
  return MEMORY[0x24BDEBDE0]();
}

uint64_t static ViewModifier._makeViewList(modifier:inputs:body:)()
{
  return MEMORY[0x24BDEBDF0]();
}

uint64_t static ViewModifier._viewListCount(inputs:body:)()
{
  return MEMORY[0x24BDEBE00]();
}

uint64_t _FrameLayout.init(width:height:alignment:)()
{
  return MEMORY[0x24BDEBED0]();
}

uint64_t AnyTransition.init<A>(_:)()
{
  return MEMORY[0x24BDEC000]();
}

uint64_t GeometryProxy.size.getter()
{
  return MEMORY[0x24BDEC120]();
}

uint64_t GeometryProxy.frame<A>(in:)()
{
  return MEMORY[0x24BDEC138]();
}

uint64_t LayoutSubview.sizeThatFits(_:)()
{
  return MEMORY[0x24BDEC260]();
}

uint64_t LayoutSubview.place(at:anchor:proposal:)()
{
  return MEMORY[0x24BDEC268]();
}

uint64_t type metadata accessor for LayoutSubview()
{
  return MEMORY[0x24BDEC280]();
}

uint64_t type metadata accessor for _ArchivedView()
{
  return MEMORY[0x24BDEC3E0]();
}

uint64_t type metadata accessor for LayoutSubviews()
{
  return MEMORY[0x24BDEC778]();
}

uint64_t ObservedObject.init(wrappedValue:)()
{
  return MEMORY[0x24BDEC998]();
}

uint64_t ObservedObject.projectedValue.getter()
{
  return MEMORY[0x24BDEC9A0]();
}

uint64_t ObservedObject.Wrapper.subscript.getter()
{
  return MEMORY[0x24BDEC9B0]();
}

uint64_t PlainListStyle.init()()
{
  return MEMORY[0x24BDECA00]();
}

uint64_t type metadata accessor for PlainListStyle()
{
  return MEMORY[0x24BDECA08]();
}

uint64_t type metadata accessor for DynamicTypeSize()
{
  return MEMORY[0x24BDECF50]();
}

uint64_t type metadata accessor for ModifiedContent()
{
  return MEMORY[0x24BDED2D0]();
}

uint64_t static SafeAreaRegions.container.getter()
{
  return MEMORY[0x24BDED3C8]();
}

uint64_t type metadata accessor for ScaleTransition()
{
  return MEMORY[0x24BDED3E0]();
}

uint64_t ScaleTransition.init(_:anchor:)()
{
  return MEMORY[0x24BDED3F0]();
}

uint64_t withTransaction<A>(_:_:)()
{
  return MEMORY[0x24BDED5F8]();
}

uint64_t static ProposedViewSize.unspecified.getter()
{
  return MEMORY[0x24BDED8E0]();
}

uint64_t type metadata accessor for RoundedRectangle()
{
  return MEMORY[0x24BDED998]();
}

uint64_t static CustomHoverEffect<>.automatic.getter()
{
  return MEMORY[0x24BDEDDF0]();
}

uint64_t EnvironmentObject.projectedValue.getter()
{
  return MEMORY[0x24BDEDE40]();
}

uint64_t EnvironmentObject.error()()
{
  return MEMORY[0x24BDEDE50]();
}

uint64_t EnvironmentObject.Wrapper.subscript.getter()
{
  return MEMORY[0x24BDEDE58]();
}

uint64_t EnvironmentObject.init()()
{
  return MEMORY[0x24BDEDE60]();
}

uint64_t EnvironmentValues.displayScale.setter()
{
  return MEMORY[0x24BDEDF70]();
}

uint64_t EnvironmentValues.foregroundColor.getter()
{
  return MEMORY[0x24BDEE038]();
}

uint64_t EnvironmentValues.foregroundColor.setter()
{
  return MEMORY[0x24BDEE048]();
}

uint64_t EnvironmentValues.font.getter()
{
  return MEMORY[0x24BDEE390]();
}

uint64_t EnvironmentValues.font.setter()
{
  return MEMORY[0x24BDEE3A0]();
}

uint64_t EnvironmentValues.tintColor.getter()
{
  return MEMORY[0x24BDEE4C0]();
}

uint64_t EnvironmentValues.tintColor.setter()
{
  return MEMORY[0x24BDEE4D8]();
}

uint64_t OpacityTransition.init()()
{
  return MEMORY[0x24BDEE628]();
}

uint64_t type metadata accessor for OpacityTransition()
{
  return MEMORY[0x24BDEE630]();
}

uint64_t static VerticalAlignment.center.getter()
{
  return MEMORY[0x24BDEE730]();
}

uint64_t _ArchivedViewHost.environment.modify()
{
  return MEMORY[0x24BDEE768]();
}

uint64_t _ArchivedViewHost.archiveStates(count:body:)()
{
  return MEMORY[0x24BDEE778]();
}

uint64_t _ArchivedViewHost.encodesStableDisplayListIdentifiers.setter()
{
  return MEMORY[0x24BDEE798]();
}

uint64_t _ArchivedViewHost.size.setter()
{
  return MEMORY[0x24BDEE7A0]();
}

uint64_t _ArchivedViewHost.__allocating_init(content:delegate:)()
{
  return MEMORY[0x24BDEE7A8]();
}

uint64_t _ArchivedViewHost.content.getter()
{
  return MEMORY[0x24BDEE7B8]();
}

uint64_t _ArchivedViewHost.content.setter()
{
  return MEMORY[0x24BDEE7C0]();
}

uint64_t type metadata accessor for _ArchivedViewHost()
{
  return MEMORY[0x24BDEE7C8]();
}

uint64_t LocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:specifier:)()
{
  return MEMORY[0x24BDEE9E8]();
}

Swift::Void __swiftcall LocalizedStringKey.StringInterpolation.appendLiteral(_:)(Swift::String a1)
{
  MEMORY[0x24BDEEA28](a1._countAndFlagsBits, a1._object);
}

uint64_t LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)()
{
  return MEMORY[0x24BDEEA30]();
}

uint64_t type metadata accessor for LocalizedStringKey.StringInterpolation()
{
  return MEMORY[0x24BDEEA40]();
}

uint64_t LocalizedStringKey.init(stringLiteral:)()
{
  return MEMORY[0x24BDEEA50]();
}

uint64_t LocalizedStringKey.init(stringInterpolation:)()
{
  return MEMORY[0x24BDEEA60]();
}

uint64_t static PresentationDetent.medium.getter()
{
  return MEMORY[0x24BDEEB00]();
}

uint64_t static PresentationDetent.fraction(_:)()
{
  return MEMORY[0x24BDEEB08]();
}

uint64_t type metadata accessor for PresentationDetent()
{
  return MEMORY[0x24BDEEB10]();
}

uint64_t type metadata accessor for RoundedCornerStyle()
{
  return MEMORY[0x24BDEEB88]();
}

uint64_t static AccessibilityTraits.isSelected.getter()
{
  return MEMORY[0x24BDEECF8]();
}

uint64_t type metadata accessor for AccessibilityTraits()
{
  return MEMORY[0x24BDEED88]();
}

uint64_t static HorizontalAlignment.center.getter()
{
  return MEMORY[0x24BDEEF60]();
}

uint64_t dispatch thunk of UIHostingController.sizingOptions.setter()
{
  return MEMORY[0x24BDEF188]();
}

uint64_t UIHostingController.init(rootView:)()
{
  return MEMORY[0x24BDEF1D0]();
}

uint64_t UIViewRepresentable._resetUIView(_:coordinator:destroy:)()
{
  return MEMORY[0x24BDEF228]();
}

uint64_t static UIViewRepresentable.dismantleUIView(_:coordinator:)()
{
  return MEMORY[0x24BDEF238]();
}

uint64_t UIViewRepresentable.sizeThatFits(_:uiView:context:)()
{
  return MEMORY[0x24BDEF248]();
}

uint64_t static UIViewRepresentable._makeViewList(view:inputs:)()
{
  return MEMORY[0x24BDEF260]();
}

uint64_t static UIViewRepresentable._layoutOptions(_:)()
{
  return MEMORY[0x24BDEF270]();
}

uint64_t UIViewRepresentable._identifiedViewTree(in:)()
{
  return MEMORY[0x24BDEF278]();
}

uint64_t UIViewRepresentable._overrideLayoutTraits(_:for:)()
{
  return MEMORY[0x24BDEF288]();
}

uint64_t UIViewRepresentable._overrideSizeThatFits(_:in:uiView:)()
{
  return MEMORY[0x24BDEF298]();
}

uint64_t static UIViewRepresentable._modifyBridgedViewInputs(_:)()
{
  return MEMORY[0x24BDEF2A8]();
}

uint64_t UIViewRepresentable.body.getter()
{
  return MEMORY[0x24BDEF2C0]();
}

uint64_t static UIViewRepresentable._makeView(view:inputs:)()
{
  return MEMORY[0x24BDEF2C8]();
}

uint64_t UIViewRepresentable<>.makeCoordinator()()
{
  return MEMORY[0x24BDEF2D8]();
}

uint64_t _ArchivedViewStates.init(data:)()
{
  return MEMORY[0x24BDEF338]();
}

uint64_t _ArchivedViewStates.state(at:)()
{
  return MEMORY[0x24BDEF340]();
}

uint64_t type metadata accessor for _ArchivedViewStates()
{
  return MEMORY[0x24BDEF348]();
}

uint64_t type metadata accessor for _BackgroundModifier()
{
  return MEMORY[0x24BDEF358]();
}

uint64_t _ConditionalContent<>.init(storage:)()
{
  return MEMORY[0x24BDEF3A0]();
}

uint64_t type metadata accessor for AutomaticHoverEffect()
{
  return MEMORY[0x24BDEF428]();
}

uint64_t type metadata accessor for NamedCoordinateSpace()
{
  return MEMORY[0x24BDEF560]();
}

uint64_t type metadata accessor for _ViewModifier_Content()
{
  return MEMORY[0x24BDEFB50]();
}

uint64_t static HierarchicalShapeStyle.quaternary.getter()
{
  return MEMORY[0x24BDEFC98]();
}

uint64_t static CoordinateSpaceProtocol<>.named<A>(_:)()
{
  return MEMORY[0x24BDF0150]();
}

uint64_t static ScrollIndicatorVisibility.hidden.getter()
{
  return MEMORY[0x24BDF08B8]();
}

uint64_t type metadata accessor for ScrollIndicatorVisibility()
{
  return MEMORY[0x24BDF08D0]();
}

uint64_t _ArchivedViewHostDelegate.failedToEncodeView(type:)()
{
  return MEMORY[0x24BDF0938]();
}

CGImageRef __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> _ArchivedViewHostDelegate.filteredImage(_:)(CGImageRef a1)
{
  return (CGImageRef)MEMORY[0x24BDF0940](a1);
}

uint64_t _ArchivedViewHostDelegate.preferredImageType(for:)()
{
  return MEMORY[0x24BDF0948]();
}

uint64_t UIViewRepresentableContext.coordinator.getter()
{
  return MEMORY[0x24BDF0AF0]();
}

uint64_t type metadata accessor for UIViewRepresentableContext()
{
  return MEMORY[0x24BDF0B08]();
}

uint64_t static UIHostingControllerSizingOptions.preferredContentSize.getter()
{
  return MEMORY[0x24BDF11F0]();
}

uint64_t type metadata accessor for UIHostingControllerSizingOptions()
{
  return MEMORY[0x24BDF1200]();
}

uint64_t static Axis.Set.horizontal.getter()
{
  return MEMORY[0x24BDF1450]();
}

uint64_t Axis.Set.init(rawValue:)()
{
  return MEMORY[0x24BDF1458]();
}

uint64_t static Axis.Set.vertical.getter()
{
  return MEMORY[0x24BDF1468]();
}

uint64_t static Edge.Set.horizontal.getter()
{
  return MEMORY[0x24BDF14A0]();
}

uint64_t static Edge.Set.all.getter()
{
  return MEMORY[0x24BDF14A8]();
}

uint64_t Edge.init(rawValue:)()
{
  return MEMORY[0x24BDF1540]();
}

uint64_t type metadata accessor for Font.Design()
{
  return MEMORY[0x24BDF1678]();
}

uint64_t static Font.Weight.regular.getter()
{
  return MEMORY[0x24BDF16E8]();
}

uint64_t static Font.system(_:design:weight:)()
{
  return MEMORY[0x24BDF1768]();
}

uint64_t static Font.title2.getter()
{
  return MEMORY[0x24BDF1778]();
}

uint64_t static Font.title3.getter()
{
  return MEMORY[0x24BDF1790]();
}

uint64_t type metadata accessor for Font.TextStyle()
{
  return MEMORY[0x24BDF1900]();
}

uint64_t List<>.init(content:)()
{
  return MEMORY[0x24BDF1A00]();
}

uint64_t Path.addPath(_:transform:)()
{
  return MEMORY[0x24BDF1A80]();
}

Swift::Void __swiftcall Path.closeSubpath()()
{
  MEMORY[0x24BDF1AC8]();
}

uint64_t Path.addRoundedRect(in:cornerSize:style:transform:)()
{
  return MEMORY[0x24BDF1AE0]();
}

Swift::Void __swiftcall Path.move(to:)(CGPoint to)
{
  unint64_t v1;
  unint64_t v2;

  MEMORY[0x24BDF1AF0]((__n128)__PAIR128__(v1, *(unint64_t *)&to.x), (__n128)__PAIR128__(v2, *(unint64_t *)&to.y));
}

Swift::Void __swiftcall Path.addCurve(to:control1:control2:)(CGPoint to, CGPoint control1, CGPoint control2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  MEMORY[0x24BDF1B50]((__n128)__PAIR128__(v3, *(unint64_t *)&to.x), (__n128)__PAIR128__(v4, *(unint64_t *)&to.y), (__n128)__PAIR128__(v5, *(unint64_t *)&control1.x), (__n128)__PAIR128__(v6, *(unint64_t *)&control1.y), (__n128)__PAIR128__(v7, *(unint64_t *)&control2.x), (__n128)__PAIR128__(v8, *(unint64_t *)&control2.y));
}

uint64_t Path.init(_:)()
{
  return MEMORY[0x24BDF1BD0]();
}

uint64_t Text.font(_:)()
{
  return MEMORY[0x24BDF1DC8]();
}

uint64_t Text.init(_:tableName:bundle:comment:)()
{
  return MEMORY[0x24BDF1FC0]();
}

uint64_t Text.init<A>(_:)()
{
  return MEMORY[0x24BDF1FF0]();
}

uint64_t static View._makeView(view:inputs:)()
{
  return MEMORY[0x24BDF2088]();
}

uint64_t static View._makeViewList(view:inputs:)()
{
  return MEMORY[0x24BDF20A0]();
}

uint64_t View.background<A>(_:alignment:)()
{
  return MEMORY[0x24BDF2100]();
}

uint64_t View.hoverEffect<A>(_:isEnabled:)()
{
  return MEMORY[0x24BDF2378]();
}

uint64_t View.onTapGesture(count:perform:)()
{
  return MEMORY[0x24BDF2548]();
}

uint64_t static View._viewListCount(inputs:)()
{
  return MEMORY[0x24BDF2698]();
}

uint64_t View.dynamicTypeSize<A>(_:)()
{
  return MEMORY[0x24BDF27F0]();
}

uint64_t View.listRowSeparator(_:edges:)()
{
  return MEMORY[0x24BDF29A0]();
}

uint64_t View.scrollIndicators(_:axes:)()
{
  return MEMORY[0x24BDF29F0]();
}

uint64_t View.presentationDetents(_:)()
{
  return MEMORY[0x24BDF2E70]();
}

uint64_t View.listSectionSeparator(_:edges:)()
{
  return MEMORY[0x24BDF2FA0]();
}

uint64_t View.accessibilityAddTraits(_:)()
{
  return MEMORY[0x24BDF30D8]();
}

uint64_t View.presentationBackground<A>(alignment:content:)()
{
  return MEMORY[0x24BDF3158]();
}

uint64_t View.presentationDragIndicator(_:)()
{
  return MEMORY[0x24BDF32C8]();
}

uint64_t View.sheet<A>(isPresented:onDismiss:content:)()
{
  return MEMORY[0x24BDF3640]();
}

uint64_t View.focused(_:)()
{
  return MEMORY[0x24BDF3750]();
}

uint64_t View.modifier<A>(_:)()
{
  return MEMORY[0x24BDF38C0]();
}

uint64_t View.onChange<A>(of:initial:_:)()
{
  return MEMORY[0x24BDF38E0]();
}

uint64_t View.listStyle<A>(_:)()
{
  return MEMORY[0x24BDF3A68]();
}

uint64_t type metadata accessor for Color.RGBColorSpace()
{
  return MEMORY[0x24BDF3C40]();
}

uint64_t static Color.gray.getter()
{
  return MEMORY[0x24BDF3CA8]();
}

uint64_t static Color.black.getter()
{
  return MEMORY[0x24BDF3CF0]();
}

uint64_t static Color.clear.getter()
{
  return MEMORY[0x24BDF3D10]();
}

uint64_t static Color.primary.getter()
{
  return MEMORY[0x24BDF3D88]();
}

uint64_t static Color.secondary.getter()
{
  return MEMORY[0x24BDF3E08]();
}

uint64_t Color.init(_:red:green:blue:opacity:)()
{
  return MEMORY[0x24BDF3E70]();
}

uint64_t Color.init(_:)()
{
  return MEMORY[0x24BDF3EB0]();
}

uint64_t Image.init(uiImage:)()
{
  return MEMORY[0x24BDF3F58]();
}

uint64_t Image.init(systemName:)()
{
  return MEMORY[0x24BDF3F80]();
}

uint64_t type metadata accessor for Image.ResizingMode()
{
  return MEMORY[0x24BDF3FE8]();
}

uint64_t Image.resizable(capInsets:resizingMode:)()
{
  return MEMORY[0x24BDF40D8]();
}

uint64_t dispatch thunk of Shape.path(in:)()
{
  return MEMORY[0x24BDF41F8]();
}

uint64_t Shape.sizeThatFits(_:)()
{
  return MEMORY[0x24BDF4208]();
}

uint64_t static Shape._makeViewList(view:inputs:)()
{
  return MEMORY[0x24BDF4218]();
}

uint64_t Shape.layoutDirectionBehavior.getter()
{
  return MEMORY[0x24BDF4230]();
}

uint64_t Shape.body.getter()
{
  return MEMORY[0x24BDF4238]();
}

uint64_t static Shape.role.getter()
{
  return MEMORY[0x24BDF4248]();
}

uint64_t static Shape._makeView(view:inputs:)()
{
  return MEMORY[0x24BDF4278]();
}

uint64_t State.init(wrappedValue:)()
{
  return MEMORY[0x24BDF4280]();
}

uint64_t State.wrappedValue.getter()
{
  return MEMORY[0x24BDF4290]();
}

uint64_t State.wrappedValue.setter()
{
  return MEMORY[0x24BDF42A8]();
}

uint64_t State.projectedValue.getter()
{
  return MEMORY[0x24BDF42B0]();
}

uint64_t Button.init(action:label:)()
{
  return MEMORY[0x24BDF4340]();
}

uint64_t static Layout._makeLayoutView(root:inputs:body:)()
{
  return MEMORY[0x24BDF44E0]();
}

uint64_t Layout.updateCache(_:subviews:)()
{
  return MEMORY[0x24BDF44E8]();
}

uint64_t static Layout.layoutProperties.getter()
{
  return MEMORY[0x24BDF44F0]();
}

uint64_t Layout.spacing(subviews:cache:)()
{
  return MEMORY[0x24BDF4508]();
}

uint64_t Layout<>.makeCache(subviews:)()
{
  return MEMORY[0x24BDF4510]();
}

uint64_t AnyView.init<A>(_:)()
{
  return MEMORY[0x24BDF4790]();
}

uint64_t Binding.wrappedValue.getter()
{
  return MEMORY[0x24BDF47B0]();
}

uint64_t Binding.wrappedValue.setter()
{
  return MEMORY[0x24BDF47B8]();
}

uint64_t Binding.projectedValue.getter()
{
  return MEMORY[0x24BDF47E0]();
}

uint64_t type metadata accessor for Capsule()
{
  return MEMORY[0x24BDF48E8]();
}

uint64_t ForEach<>.init(_:id:content:)()
{
  return MEMORY[0x24BDF49A0]();
}

uint64_t static Material.thick.getter()
{
  return MEMORY[0x24BDF4E20]();
}

uint64_t type metadata accessor for Material()
{
  return MEMORY[0x24BDF4E58]();
}

uint64_t static Alignment.bottomTrailing.getter()
{
  return MEMORY[0x24BDF4ED8]();
}

uint64_t static Alignment.center.getter()
{
  return MEMORY[0x24BDF4F18]();
}

uint64_t static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)()
{
  return MEMORY[0x24BDF4F80]();
}

uint64_t Animation.delay(_:)()
{
  return MEMORY[0x24BDF4F98]();
}

uint64_t Animation.speed(_:)()
{
  return MEMORY[0x24BDF4FA0]();
}

uint64_t static Animation.spring(response:dampingFraction:blendDuration:)()
{
  return MEMORY[0x24BDF4FC8]();
}

uint64_t static Animation.default.getter()
{
  return MEMORY[0x24BDF4FE0]();
}

uint64_t static UnitPoint.topTrailing.getter()
{
  return MEMORY[0x24BDF5450]();
}

uint64_t static UnitPoint.bottomLeading.getter()
{
  return MEMORY[0x24BDF5458]();
}

uint64_t static UnitPoint.bottomTrailing.getter()
{
  return MEMORY[0x24BDF5460]();
}

uint64_t static UnitPoint.center.getter()
{
  return MEMORY[0x24BDF54A0]();
}

uint64_t type metadata accessor for DispatchWorkItemFlags()
{
  return MEMORY[0x24BEE5458]();
}

uint64_t static DispatchQoS.unspecified.getter()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t type metadata accessor for DispatchQoS()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t static DispatchTime.now()()
{
  return MEMORY[0x24BEE5570]();
}

uint64_t type metadata accessor for DispatchTime()
{
  return MEMORY[0x24BEE5590]();
}

uint64_t type metadata accessor for DispatchPredicate()
{
  return MEMORY[0x24BEE5618]();
}

uint64_t + infix(_:_:)()
{
  return MEMORY[0x24BEE5628]();
}

uint64_t _dispatchPreconditionTest(_:)()
{
  return MEMORY[0x24BEE5648]();
}

NSDictionary __swiftcall Dictionary._bridgeToObjectiveC()()
{
  return (NSDictionary)MEMORY[0x24BDCF808]();
}

uint64_t dispatch thunk of Hashable._rawHashValue(seed:)()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t dispatch thunk of Hashable.hash(into:)()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t BidirectionalCollection<>.joined(separator:)()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t dispatch thunk of static Equatable.== infix(_:_:)()
{
  return MEMORY[0x24BEE0980]();
}

NSString __swiftcall String._bridgeToObjectiveC()()
{
  return (NSString)MEMORY[0x24BDCF9E0]();
}

uint64_t static String._forceBridgeFromObjectiveC(_:result:)()
{
  return MEMORY[0x24BDCFA08]();
}

uint64_t static String._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return MEMORY[0x24BDCFA18]();
}

uint64_t static String._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t String.init<A>(describing:)()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t String.init<A>(reflecting:)()
{
  return MEMORY[0x24BEE0A10]();
}

uint64_t static String._fromSubstring(_:)()
{
  return MEMORY[0x24BEE0A50]();
}

uint64_t String.hash(into:)()
{
  return MEMORY[0x24BEE0B20]();
}

Swift::Void __swiftcall String.append(_:)(Swift::String a1)
{
  MEMORY[0x24BEE0BC0](a1._countAndFlagsBits, a1._object);
}

Swift::Int __swiftcall String.UTF8View._foreignCount()()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t dispatch thunk of Sequence.makeIterator()()
{
  return MEMORY[0x24BEE0DE8]();
}

uint64_t Sequence.lazy.getter()
{
  return MEMORY[0x24BEE0E90]();
}

uint64_t dispatch thunk of RawRepresentable.rawValue.getter()
{
  return MEMORY[0x24BEE0FD8]();
}

uint64_t specialized Array._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return MEMORY[0x24BEE1110]();
}

NSArray __swiftcall Array._bridgeToObjectiveC()()
{
  return (NSArray)MEMORY[0x24BDCFBA8]();
}

uint64_t static Array._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t specialized Array._endMutation()()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t type metadata accessor for Array()
{
  return MEMORY[0x24BEE1250]();
}

uint64_t dispatch thunk of Actor.unownedExecutor.getter()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t CheckedContinuation.resume(throwing:)()
{
  return MEMORY[0x24BEE6820]();
}

uint64_t CheckedContinuation.resume(returning:)()
{
  return MEMORY[0x24BEE6828]();
}

uint64_t dispatch thunk of AsyncIteratorProtocol.next()()
{
  return MEMORY[0x24BEE68C8]();
}

uint64_t static MainActor.shared.getter()
{
  return MEMORY[0x24BEE6920]();
}

uint64_t type metadata accessor for MainActor()
{
  return MEMORY[0x24BEE6928]();
}

uint64_t TaskPriority.rawValue.getter()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t type metadata accessor for TaskPriority()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t static Task.== infix(_:_:)()
{
  return MEMORY[0x24BEE6AB0]();
}

uint64_t Task.hash(into:)()
{
  return MEMORY[0x24BEE6AB8]();
}

uint64_t Task.value.getter()
{
  return MEMORY[0x24BEE6AC0]();
}

Swift::Void __swiftcall Task.cancel()()
{
  MEMORY[0x24BEE6AD0]();
}

uint64_t Task<>.value.getter()
{
  return MEMORY[0x24BEE6B00]();
}

uint64_t static Task<>.checkCancellation()()
{
  return MEMORY[0x24BEE6B20]();
}

uint64_t static Set._unconditionallyBridgeFromObjectiveC(_:)()
{
  return MEMORY[0x24BDCFCE8]();
}

uint64_t Set.description.getter()
{
  return MEMORY[0x24BEE1598]();
}

uint64_t Set.Iterator.init(_cocoa:)()
{
  return MEMORY[0x24BEE1678]();
}

uint64_t dispatch thunk of Collection.startIndex.getter()
{
  return MEMORY[0x24BEE18A0]();
}

uint64_t Collection<>.trimmingPrefix<A>(_:)()
{
  return MEMORY[0x24BEE7610]();
}

uint64_t dispatch thunk of Collection.endIndex.getter()
{
  return MEMORY[0x24BEE1910]();
}

uint64_t dispatch thunk of Collection.formIndex(after:)()
{
  return MEMORY[0x24BEE1918]();
}

uint64_t dispatch thunk of Collection.subscript.read()
{
  return MEMORY[0x24BEE1A28]();
}

uint64_t static os_log_type_t.info.getter()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t static os_log_type_t.debug.getter()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t static os_log_type_t.error.getter()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t static os_log_type_t.fault.getter()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t static os_log_type_t.default.getter()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t NSItemProvider.register<A>(_:)()
{
  return MEMORY[0x24BDC5120]();
}

uint64_t static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)()
{
  return MEMORY[0x24BDCFFB0]();
}

uint64_t OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)()
{
  return MEMORY[0x24BEE56B8]();
}

uint64_t static OS_dispatch_queue.main.getter()
{
  return MEMORY[0x24BEE5770]();
}

uint64_t OS_dispatch_queue.async(group:qos:flags:execute:)()
{
  return MEMORY[0x24BEE5790]();
}

uint64_t static NSObject.== infix(_:_:)()
{
  return MEMORY[0x24BEE5BC0]();
}

uint64_t NSObject.hash(into:)()
{
  return MEMORY[0x24BEE5BC8]();
}

uint64_t type metadata accessor for NSRunLoop.SchedulerOptions()
{
  return MEMORY[0x24BDD03C0]();
}

uint64_t static NSRunLoop.SchedulerTimeType.Stride.seconds(_:)()
{
  return MEMORY[0x24BDD03E0]();
}

uint64_t type metadata accessor for NSRunLoop.SchedulerTimeType.Stride()
{
  return MEMORY[0x24BDD03F0]();
}

uint64_t type metadata accessor for Optional()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t dispatch thunk of IteratorProtocol.next()()
{
  return MEMORY[0x24BEE1E70]();
}

uint64_t UnsafeMutableRawBufferPointer.copyMemory(from:)()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t UnsafeMutableRawBufferPointer.subscript.setter()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t StringProtocol.trimmingCharacters(in:)()
{
  return MEMORY[0x24BDD0548]();
}

uint64_t _bridgeAnyObjectToAny(_:)()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t AnyKeyPath.debugDescription.getter()
{
  return MEMORY[0x24BEE20C0]();
}

uint64_t dispatch thunk of SetAlgebra.init<A>(_:)()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t _HashTable.nextHole(atOrAfter:)()
{
  return MEMORY[0x24BEE22E0]();
}

uint64_t __CocoaSet.makeIterator()()
{
  return MEMORY[0x24BEE2300]();
}

uint64_t __CocoaSet.count.getter()
{
  return MEMORY[0x24BEE2330]();
}

uint64_t __CocoaSet.member(for:)()
{
  return MEMORY[0x24BEE2340]();
}

uint64_t __CocoaSet.Iterator.next()()
{
  return MEMORY[0x24BEE2358]();
}

uint64_t static _SetStorage.copy(original:)()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t static _SetStorage.resize(original:capacity:move:)()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t static _SetStorage.convert(_:capacity:)()
{
  return MEMORY[0x24BEE24C8]();
}

uint64_t static _SetStorage.allocate(capacity:)()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t _StringGuts.copyUTF8(into:)()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t type metadata accessor for LazySequence()
{
  return MEMORY[0x24BEE2588]();
}

uint64_t specialized _ArrayBuffer._getElementSlowPath(_:)()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t _StringObject.sharedUTF8.getter()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t type metadata accessor for PartialKeyPath()
{
  return MEMORY[0x24BEE2868]();
}

uint64_t specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t specialized ContiguousArray._endMutation()()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t type metadata accessor for LazyMapSequence()
{
  return MEMORY[0x24BEE2B20]();
}

uint64_t _assertionFailure(_:_:file:line:flags:)()
{
  return MEMORY[0x24BEE2F40]();
}

{
  return MEMORY[0x24BEE2F48]();
}

uint64_t _CocoaArrayWrapper.endIndex.getter()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t static _DictionaryStorage.copy(original:)()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t static _DictionaryStorage.resize(original:capacity:move:)()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t static _DictionaryStorage.allocate(capacity:)()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t _fatalErrorMessage(_:_:file:line:flags:)()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t LazySequenceProtocol.map<A>(_:)()
{
  return MEMORY[0x24BEE3168]();
}

uint64_t _SwiftNewtypeWrapper<>._toCustomAnyHashable()()
{
  return MEMORY[0x24BEE31D0]();
}

Swift::Int __swiftcall _findStringSwitchCase(cases:string:)(Swift::OpaquePointer cases, Swift::String string)
{
  return MEMORY[0x24BEE3290](cases._rawValue, string._countAndFlagsBits, string._object);
}

uint64_t KeyedDecodingContainer.decode<A>(_:forKey:)()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t KeyedEncodingContainer.encode<A>(_:forKey:)()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t dispatch thunk of CustomStringConvertible.description.getter()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t withCheckedContinuation<A>(isolation:function:_:)()
{
  return MEMORY[0x24BEE7040]();
}

uint64_t _stringCompareWithSmolCheck(_:_:expecting:)()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t withCheckedThrowingContinuation<A>(isolation:function:_:)()
{
  return MEMORY[0x24BEE70E0]();
}

uint64_t ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t Error._getEmbeddedNSError()()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t Error._code.getter()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t Error._domain.getter()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t Error._userInfo.getter()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t Hasher.init(_seed:)()
{
  return MEMORY[0x24BEE42E0]();
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt a1)
{
  MEMORY[0x24BEE42F8](a1);
}

Swift::Int __swiftcall Hasher._finalize()()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t dispatch thunk of Decoder.container<A>(keyedBy:)()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t dispatch thunk of Encoder.container<A>(keyedBy:)()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t CodingKey.description.getter()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t CodingKey.debugDescription.getter()
{
  return MEMORY[0x24BEE4A10]();
}

CFTimeInterval CACurrentMediaTime(void)
{
  CFTimeInterval result;

  MEMORY[0x24BDE5410]();
  return result;
}

CATransform3D *__cdecl CATransform3DScale(CATransform3D *__return_ptr retstr, CATransform3D *t, CGFloat sx, CGFloat sy, CGFloat sz)
{
  return (CATransform3D *)MEMORY[0x24BDE55F8](retstr, t, sx, sy, sz);
}

uint64_t CGImageGetSizeAfterOrientation()
{
  return MEMORY[0x24BDBE6D0]();
}

CGFloat CGRectGetHeight(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBEFE8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF010]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF018]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF020]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

BOOL CGRectIsEmpty(CGRect rect)
{
  return MEMORY[0x24BDBF050]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

CGRect UIAccessibilityConvertFrameToScreenCoordinates(CGRect rect, UIView *view)
{
  double v2;
  double v3;
  double v4;
  double v5;
  CGRect result;

  MEMORY[0x24BEBDDD0](view, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  result.size.height = v5;
  result.size.width = v4;
  result.origin.y = v3;
  result.origin.x = v2;
  return result;
}

void UIAccessibilityPostNotification(UIAccessibilityNotifications notification, id argument)
{
  MEMORY[0x24BEBDE98](*(_QWORD *)&notification, argument);
}

void UIGraphicsBeginImageContextWithOptions(CGSize size, BOOL opaque, CGFloat scale)
{
  MEMORY[0x24BEBE280](opaque, (__n128)size, *(__n128 *)&size.height, scale);
}

void UIGraphicsEndImageContext(void)
{
  MEMORY[0x24BEBE298]();
}

UIImage *UIGraphicsGetImageFromCurrentImageContext(void)
{
  return (UIImage *)MEMORY[0x24BEBE2B0]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x24BDADFE8](queue, block);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x24BEE4B78]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_deletedMethodError()
{
  return MEMORY[0x24BEE4C28]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x24BEE4C40]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x24BEE4C60]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x24BEE4CD0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getAtPartialKeyPath()
{
  return MEMORY[0x24BEE4CF0]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x24BEE4D00]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x24BEE4D98]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x24BEE4DC0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStaticObject()
{
  return MEMORY[0x24BEE4E50]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x24BEE4E68]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x24BEE4F68]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x24BEE4F78]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x24BEE4F88]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x24BEE4FB0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x24BEE4FC8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x24BEE4FD0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x24BEE4FD8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x24BEE5028]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x24BEE5030]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x24BEE5038]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

