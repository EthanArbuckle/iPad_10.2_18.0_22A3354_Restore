uint64_t OUTLINED_FUNCTION_44_3()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_45_5()
{
  return sub_1B25CD6A8();
}

uint64_t OUTLINED_FUNCTION_47_5()
{
  return sub_1B25CD0D8();
}

BOOL OUTLINED_FUNCTION_49_3(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_58_2()
{
  return sub_1B25CD5D0();
}

size_t OUTLINED_FUNCTION_61_5(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  size_t result;

  result = _swift_stdlib_malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / v2);
  return result;
}

uint64_t OUTLINED_FUNCTION_63_3()
{
  return sub_1B25CCAE4();
}

uint64_t OUTLINED_FUNCTION_65_4()
{
  return sub_1B25CD0D8();
}

uint64_t OUTLINED_FUNCTION_68_4()
{
  uint64_t v0;

  return v0;
}

id OUTLINED_FUNCTION_69_5(void *a1)
{
  uint64_t v1;
  uint64_t v2;

  return objc_msgSend(a1, (SEL)(v2 + 2389), v1);
}

void OUTLINED_FUNCTION_70_5(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_1B24EACC4(a1, v1);
}

void OUTLINED_FUNCTION_71_5()
{
  sub_1B252C10C();
}

void OUTLINED_FUNCTION_73_4(uint64_t a1, unint64_t *a2)
{
  sub_1B24B3050(0, a2);
}

id OUTLINED_FUNCTION_74_3()
{
  uint64_t v0;
  uint64_t v1;

  return *(id *)(*(_QWORD *)(v0 + 48) + 8 * v1);
}

id OUTLINED_FUNCTION_77_3()
{
  uint64_t v0;
  uint64_t v1;

  return *(id *)(*(_QWORD *)(v0 + 48) + 8 * v1);
}

uint64_t SpeechDetector.results.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC6Speech14SpeechDetector__results;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEFD92D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

double SpeechDetector.Result.range.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 16);
  result = *(double *)(v1 + 32);
  *(double *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 40) = v2;
  return result;
}

uint64_t SpeechDetector.Result.resultsFinalToTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t SpeechDetector.Result.detected.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 72);
}

double SpeechDetector.Result.probability.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 80);
}

uint64_t SpeechDetector.compatibleAudioFormats.getter()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t SpeechDetector.availableCompatibleAudioFormats.getter()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t SpeechDetector.availableCompatibleAudioFormats(clientID:)()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t SpeechDetector.deinit()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEFD92D8);
  OUTLINED_FUNCTION_278_0(v1);
  return v0;
}

uint64_t SpeechDetector.__deallocating_deinit()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEFD92D8);
  OUTLINED_FUNCTION_278_0(v0);
  return swift_deallocClassInstance();
}

uint64_t sub_1B2508F8C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1B2508FD0;
  return OUTLINED_FUNCTION_190_0();
}

uint64_t sub_1B2508FD0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1B2509018(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1B249793C(&qword_1EEFD92E8, (uint64_t (*)(uint64_t))type metadata accessor for SpeechDetector, (uint64_t)&protocol conformance descriptor for SpeechDetector);
  result = sub_1B249793C(qword_1EEFD92F0, (uint64_t (*)(uint64_t))type metadata accessor for SpeechDetector, (uint64_t)&unk_1B25DC5F8);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for SpeechDetector()
{
  uint64_t result;

  result = qword_1EEFD9318;
  if (!qword_1EEFD9318)
    return swift_getSingletonMetadata();
  return result;
}

_UNKNOWN **sub_1B25090AC()
{
  return &protocol witness table for SpeechDetector.Result;
}

uint64_t sub_1B25090B8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B25090CC()
{
  uint64_t v0;

  return sub_1B2509308(*(uint64_t (**)(uint64_t))(v0 + 8), v0, MEMORY[0x1E0DEE9D8]);
}

uint64_t sub_1B25090E0()
{
  return sub_1B249793C(&qword_1EEFD9310, (uint64_t (*)(uint64_t))type metadata accessor for NullWorker, (uint64_t)&unk_1B25DBFF8);
}

uint64_t sub_1B250910C()
{
  return 0;
}

uint64_t sub_1B2509114()
{
  return 0;
}

uint64_t sub_1B250911C()
{
  return type metadata accessor for SpeechDetector();
}

void sub_1B2509124()
{
  unint64_t v0;

  sub_1B250919C();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for SpeechDetector()
{
  return swift_lookUpClassMethod();
}

void sub_1B250919C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEFD9328)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED36D060);
    v0 = sub_1B25CCDD8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEFD9328);
  }
}

void *__swift_memcpy88_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x58uLL);
}

uint64_t getEnumTagSinglePayload for SpeechDetector.Result(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 88))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 72);
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SpeechDetector.Result(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 88) = 0;
    if (a2)
      *(_BYTE *)(result + 72) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for SpeechDetector.Result()
{
  return &type metadata for SpeechDetector.Result;
}

unint64_t sub_1B25092C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEFD9330;
  if (!qword_1EEFD9330)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EEFD92D8);
    result = MEMORY[0x1B5E261DC](MEMORY[0x1E0DF0AE0], v1);
    atomic_store(result, &qword_1EEFD9330);
  }
  return result;
}

uint64_t sub_1B2509308(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t sub_1B250931C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t result;
  _QWORD v3[5];

  if (qword_1ED36D200 != -1)
    swift_once();
  v3[3] = &type metadata for EARXPCRegistry;
  v3[4] = &off_1E647D970;
  v3[0] = qword_1ED36D958;
  v0 = swift_retain_n();
  v1 = sub_1B2509F84(v0, (uint64_t)v3);
  result = swift_release();
  qword_1ED36D998 = (uint64_t)v1;
  return result;
}

uint64_t sub_1B25093AC()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CEF0);
  result = OUTLINED_FUNCTION_8_4();
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 16) = MEMORY[0x1E0DEE9D8];
  qword_1ED36D958 = result;
  return result;
}

id sub_1B25093E8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  id v4;
  id result;
  uint64_t v6;
  id v7;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD71C0);
  MEMORY[0x1E0C80A78]();
  v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for EARSpeechRecognitionResultStream();
  if (OUTLINED_FUNCTION_98())
  {
    v3 = OUTLINED_FUNCTION_22_3();
    OUTLINED_FUNCTION_21_5(v3);
    v4 = objc_allocWithZone((Class)type metadata accessor for EARSpeechRecognitionResultStream.XPCProxy());
    OUTLINED_FUNCTION_27_4();
    return sub_1B254F6D0(v0, (uint64_t)v2);
  }
  else
  {
    type metadata accessor for EARLanguageDetectorResultStream();
    result = (id)OUTLINED_FUNCTION_98();
    if (result)
    {
      v6 = OUTLINED_FUNCTION_22_3();
      OUTLINED_FUNCTION_21_5(v6);
      v7 = objc_allocWithZone((Class)type metadata accessor for EARLanguageDetectorResultStream.XPCProxy());
      OUTLINED_FUNCTION_27_4();
      return sub_1B2586EDC(v0, (uint64_t)v2);
    }
  }
  return result;
}

void sub_1B25094B0()
{
  uint64_t *v0;
  id v1;

  type metadata accessor for EARSpeechRecognitionResultStream();
  if (OUTLINED_FUNCTION_98())
  {
    if (qword_1EEFD6868 != -1)
      swift_once();
    v0 = &qword_1EEFE4100;
  }
  else
  {
    type metadata accessor for EARLanguageDetectorResultStream();
    if (!OUTLINED_FUNCTION_98())
      goto LABEL_10;
    if (qword_1EEFD8018 != -1)
      swift_once();
    v0 = &qword_1EEFE4270;
  }
  v1 = (id)*v0;
LABEL_10:
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1B250955C(uint64_t a1, int a2, int a3, int a4, id a5)
{
  uint64_t v5;
  id v7;
  void *v8;
  void *v9;
  char v10;
  uint64_t v11;
  unint64_t *v12;
  uint64_t (*v13)();
  void *v14;
  void *v15;
  void *v16;
  char v17;
  uint64_t v18;
  void *v19;
  void *v20;
  char v21;
  uint64_t v22;
  void *v23;
  void *v24;
  char v25;
  uint64_t v26;

  v7 = objc_msgSend(a5, sel_protocol);
  if (swift_dynamicCastObjCProtocolConditional())
  {
    type metadata accessor for EARSpeechRecognizer();
    v8 = (void *)OUTLINED_FUNCTION_3_7();
    sub_1B249FCE0(v8, v9, v10, v11);
    OUTLINED_FUNCTION_6_7();
    if (v5)
      return a1;
    v12 = (unint64_t *)&unk_1EEFD6F70;
    v13 = type metadata accessor for EARSpeechRecognizer;
    v14 = &unk_1B25DB544;
    goto LABEL_15;
  }
  if (OUTLINED_FUNCTION_13_5())
  {
    type metadata accessor for EARSpeechRecognitionAudioBuffer();
    v15 = (void *)OUTLINED_FUNCTION_3_7();
    sub_1B2598548(v15, v16, v17, v18);
    OUTLINED_FUNCTION_6_7();
    if (v5)
      return a1;
    v12 = (unint64_t *)&unk_1EEFD7090;
    v13 = type metadata accessor for EARSpeechRecognitionAudioBuffer;
    v14 = &unk_1B25E20B0;
    goto LABEL_15;
  }
  if (OUTLINED_FUNCTION_13_5())
  {
    type metadata accessor for LSRAssets();
    v19 = (void *)OUTLINED_FUNCTION_3_7();
    sub_1B255B8C8(v19, v20, v21, v22);
    OUTLINED_FUNCTION_6_7();
    if (v5)
      return a1;
    v12 = (unint64_t *)&unk_1EEFD70D8;
    v13 = type metadata accessor for LSRAssets;
    v14 = &unk_1B25DF204;
    goto LABEL_15;
  }
  if (OUTLINED_FUNCTION_13_5())
  {
    type metadata accessor for EAREuclid();
    v23 = (void *)OUTLINED_FUNCTION_3_7();
    sub_1B2595144(v23, v24, v25, v26);
    OUTLINED_FUNCTION_6_7();
    if (v5)
      return a1;
    v12 = (unint64_t *)&unk_1EEFD6908;
    v13 = type metadata accessor for EAREuclid;
    v14 = &unk_1B25E1D9C;
LABEL_15:
    sub_1B24FFD30(v12, (uint64_t (*)(uint64_t))v13, (uint64_t)v14);
    return a1;
  }

  return 0;
}

void sub_1B2509710(int a1, id a2)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = objc_msgSend(a2, sel__xpcConnection);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CEF8);
  v3 = OUTLINED_FUNCTION_8_4();
  v4 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v3 + 16) = xmmword_1B25DB5B0;
  OUTLINED_FUNCTION_12_5((_QWORD *)v3, v4);
  OUTLINED_FUNCTION_18_5();
  if (qword_1ED36CF48 != -1)
    swift_once();
  v5 = sub_1B25CC8C8();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED36D980);
  OUTLINED_FUNCTION_17_6();
  swift_bridgeObjectRetain();
  v6 = (void *)sub_1B25CC8B0();
  v7 = sub_1B25CCFD0();
  if (OUTLINED_FUNCTION_111_1(v7))
  {
    OUTLINED_FUNCTION_246();
    OUTLINED_FUNCTION_246();
    v8 = OUTLINED_FUNCTION_14_3(4.8752e-34);
    OUTLINED_FUNCTION_19_4(v8);
    OUTLINED_FUNCTION_4_3();
    OUTLINED_FUNCTION_26_3();
    OUTLINED_FUNCTION_10_5();
    v9 = sub_1B25CD738();
    OUTLINED_FUNCTION_24_5(v9, v10, v11);
    OUTLINED_FUNCTION_8_7();
    OUTLINED_FUNCTION_7_5();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_11_4(&dword_1B2494000, v12, v13, "[%{public}s] is connection to local %{public}s");
    OUTLINED_FUNCTION_20_4();
    OUTLINED_FUNCTION_174();
  }

  OUTLINED_FUNCTION_7_5();
  OUTLINED_FUNCTION_25_6();
  OUTLINED_FUNCTION_9_3();
}

uint64_t sub_1B2509884@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B25098A0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(_QWORD *__return_ptr, uint64_t);
  uint64_t v12;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_QWORD *__return_ptr, uint64_t);
  uint64_t v20;
  _QWORD v21[4];

  v4 = v3;
  v7 = *a1;
  v8 = *(_QWORD *)(*a1 + 16);
  if (v8)
  {
    v21[3] = v3;
    swift_bridgeObjectRetain();
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *(void (**)(_QWORD *__return_ptr, uint64_t))(v7 + v9 + 32);
      v12 = OUTLINED_FUNCTION_289();
      v11(v21, v12);
      OUTLINED_FUNCTION_28_6();
      swift_unknownObjectRelease();
      if (!v4)
        break;
      ++v10;
      v9 += 16;
      if (v8 == v10)
      {
        result = swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    result = swift_bridgeObjectRelease();
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_18;
    if (v14 != v8)
    {
      v8 = v10;
      while (v14 < *(_QWORD *)(v7 + 16))
      {
        v19 = *(void (**)(_QWORD *__return_ptr, uint64_t))(v7 + v9 + 48);
        v20 = OUTLINED_FUNCTION_289();
        v19(v21, v20);
        OUTLINED_FUNCTION_28_6();
        result = swift_unknownObjectRelease();
        ++v14;
        v9 += 16;
        if (v14 == *(_QWORD *)(v7 + 16))
          goto LABEL_10;
      }
      __break(1u);
      __break(1u);
      __break(1u);
      __break(1u);
      __break(1u);
      __break(1u);
      goto LABEL_17;
    }
    v8 = v10;
LABEL_10:
    if (*(_QWORD *)(v7 + 16) >= v8)
      goto LABEL_11;
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
  }
  else
  {
LABEL_11:
    sub_1B25699C8();
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 24) = a3;
    swift_unknownObjectWeakInit();
    swift_retain();
    sub_1B2568CF8();
    v16 = *(_QWORD *)(*a1 + 16);
    sub_1B2568DFC(v16);
    v17 = *a1;
    *(_QWORD *)(v17 + 16) = v16 + 1;
    v18 = v17 + 16 * v16;
    *(_QWORD *)(v18 + 32) = sub_1B250A0E4;
    *(_QWORD *)(v18 + 40) = v15;
    result = swift_release();
    *a1 = v17;
  }
  return result;
}

uint64_t sub_1B2509B08@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x1B5E26380](v4);
  v6 = *(_QWORD *)(a1 + 24);
  *a2 = result;
  a2[1] = v6;
  return result;
}

void sub_1B2509B60(int a1, id a2)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = objc_msgSend(a2, sel__xpcConnection);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CEF8);
  v3 = OUTLINED_FUNCTION_8_4();
  v4 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v3 + 16) = xmmword_1B25DB5B0;
  OUTLINED_FUNCTION_12_5((_QWORD *)v3, v4);
  OUTLINED_FUNCTION_18_5();
  if (qword_1ED36CF48 != -1)
    swift_once();
  v5 = sub_1B25CC8C8();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED36D980);
  OUTLINED_FUNCTION_17_6();
  swift_bridgeObjectRetain();
  v6 = (void *)sub_1B25CC8B0();
  v7 = sub_1B25CCFD0();
  if (OUTLINED_FUNCTION_111_1(v7))
  {
    OUTLINED_FUNCTION_246();
    OUTLINED_FUNCTION_246();
    v8 = OUTLINED_FUNCTION_14_3(4.8752e-34);
    OUTLINED_FUNCTION_19_4(v8);
    OUTLINED_FUNCTION_4_3();
    OUTLINED_FUNCTION_26_3();
    OUTLINED_FUNCTION_10_5();
    v9 = sub_1B25CD738();
    OUTLINED_FUNCTION_24_5(v9, v10, v11);
    OUTLINED_FUNCTION_8_7();
    OUTLINED_FUNCTION_7_5();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_11_4(&dword_1B2494000, v12, v13, "[%{public}s] is connection to remote %{public}s");
    OUTLINED_FUNCTION_20_4();
    OUTLINED_FUNCTION_174();
  }

  OUTLINED_FUNCTION_7_5();
  OUTLINED_FUNCTION_25_6();
  OUTLINED_FUNCTION_9_3();
}

uint64_t sub_1B2509CD4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;

  type metadata accessor for LocalSpeechRecognitionService();
  if (OUTLINED_FUNCTION_84())
  {
    v0 = OUTLINED_FUNCTION_44();
    sub_1B24B782C(v0, v1, v2, v3, v4, v5);
  }
  else
  {
    type metadata accessor for EARSpeechRecognizer();
    if (OUTLINED_FUNCTION_84())
    {
      v7 = (void *)OUTLINED_FUNCTION_44();
      sub_1B24A0284(v7, v8, v9, v10, v11, v12);
    }
    else
    {
      type metadata accessor for EARSpeechRecognitionAudioBuffer();
      if (OUTLINED_FUNCTION_84())
      {
        v13 = OUTLINED_FUNCTION_44();
        sub_1B25985CC(v13, v14, v15, v16, v17, v18);
      }
      else
      {
        type metadata accessor for LSRAssets();
        if (OUTLINED_FUNCTION_84())
        {
          v19 = OUTLINED_FUNCTION_44();
          sub_1B255B948(v19, v20, v21, v22, v23, v24);
        }
        else
        {
          type metadata accessor for EAREuclid();
          if (OUTLINED_FUNCTION_84())
          {
            v25 = OUTLINED_FUNCTION_44();
            sub_1B25951C4(v25, v26, v27, v28, v29, v30);
          }
          else
          {
            type metadata accessor for EARLanguageDetector();
            if (OUTLINED_FUNCTION_84())
            {
              v31 = OUTLINED_FUNCTION_44();
              sub_1B25783D0(v31, v32, v33, v34, v35, v36);
            }
            else
            {
              type metadata accessor for EARLanguageDetectorAudioBuffer();
              result = OUTLINED_FUNCTION_84();
              if (!result)
                return result;
              v38 = OUTLINED_FUNCTION_44();
              sub_1B2519EFC(v38, v39, v40, v41);
            }
          }
        }
      }
    }
  }
  return v6 & 1;
}

_QWORD *sub_1B2509DCC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  _DWORD *v6;
  uint64_t v7;
  _DWORD *v8;
  __int128 v10;
  ValueMetadata *v11;
  _UNKNOWN **v12;

  v11 = &type metadata for EARXPCRegistry;
  v12 = &off_1E647D9B0;
  *(_QWORD *)&v10 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF20);
  sub_1B24A019C();
  a3[12] = sub_1B25CC904();
  sub_1B24ADA58(0, &qword_1ED36CFE8);
  a3[13] = sub_1B25CC904();
  type metadata accessor for NSXPCActorSystem.ArgumentListenerDelegate();
  a3[14] = sub_1B25CC904();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36CFF0);
  a3[15] = sub_1B25CC904();
  type metadata accessor for _Lock();
  v5 = swift_allocObject();
  v6 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v5 + 16) = v6;
  *v6 = 0;
  a3[16] = v5;
  sub_1B24ADA58(0, (unint64_t *)&unk_1ED36D000);
  a3[17] = sub_1B25CC904();
  v7 = swift_allocObject();
  v8 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v7 + 16) = v8;
  *v8 = 0;
  a3[18] = v7;
  sub_1B24AD190(&v10, (uint64_t)(a3 + 2));
  sub_1B250A078(a2, (uint64_t)(a3 + 7));
  return a3;
}

_QWORD *sub_1B2509F84(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD v11[5];

  v11[3] = &type metadata for EARXPCRegistry;
  v11[4] = &off_1E647D9B0;
  v11[0] = a1;
  type metadata accessor for NSXPCActorSystem();
  v3 = (_QWORD *)swift_allocObject();
  v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v11, (uint64_t)&type metadata for EARXPCRegistry);
  MEMORY[0x1E0C80A78](v4, v4);
  v6 = (_QWORD *)((char *)&v11[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v7 + 16))(v6);
  v8 = sub_1B2509DCC(*v6, a2, v3);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v11);
  return v8;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_1B250A078(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CFA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B250A0C0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B250A0E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1B2509B08(v1, a1);
}

ValueMetadata *type metadata accessor for EARXPCRegistry()
{
  return &type metadata for EARXPCRegistry;
}

uint64_t OUTLINED_FUNCTION_3_7()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_4_3()
{
  return sub_1B25CD12C();
}

void OUTLINED_FUNCTION_6_7()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_7_5()
{
  return swift_unknownObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_8_7()
{
  return sub_1B25CD12C();
}

uint64_t OUTLINED_FUNCTION_10_5()
{
  uint64_t v0;

  *(_WORD *)(v0 + 12) = 2082;
  return swift_getObjectType();
}

void OUTLINED_FUNCTION_11_4(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

uint64_t OUTLINED_FUNCTION_12_5@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  a1[7] = a2;
  a1[8] = v2;
  a1[4] = v3;
  return sub_1B25CCA3C();
}

uint64_t OUTLINED_FUNCTION_13_5()
{
  return swift_dynamicCastObjCProtocolConditional();
}

uint64_t OUTLINED_FUNCTION_14_3(float a1)
{
  float *v1;

  *v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_17_6()
{
  return swift_unknownObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_18_5()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_19_4(uint64_t a1, ...)
{
  unint64_t v1;
  uint64_t v2;
  va_list va;

  va_start(va, a1);
  return sub_1B2504AB0(v2, v1, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_20_4()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_21_5(uint64_t a1)
{
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
  return 0;
}

uint64_t OUTLINED_FUNCTION_22_3()
{
  return sub_1B25CCCDC();
}

uint64_t OUTLINED_FUNCTION_24_5(uint64_t a1, unint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  return sub_1B2504AB0(a1, a2, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_25_6()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_26_3()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_27_4()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_28_6()
{
  return swift_release();
}

uint64_t VoiceCommandDebugInfoAggregated.hasVoiceCommandInExhaustiveParses.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t VoiceCommandDebugInfoAggregated.hasVoiceCommandInExhaustiveParses.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*VoiceCommandDebugInfoAggregated.hasVoiceCommandInExhaustiveParses.modify())(void)
{
  return nullsub_1;
}

uint64_t VoiceCommandDebugInfoAggregated.hasVoiceCommandParses.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t VoiceCommandDebugInfoAggregated.hasVoiceCommandParses.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*VoiceCommandDebugInfoAggregated.hasVoiceCommandParses.modify())(void)
{
  return nullsub_1;
}

uint64_t VoiceCommandDebugInfoAggregated.hasVoiceCommandEditIntent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t VoiceCommandDebugInfoAggregated.hasVoiceCommandEditIntent.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = result;
  return result;
}

uint64_t (*VoiceCommandDebugInfoAggregated.hasVoiceCommandEditIntent.modify())(void)
{
  return nullsub_1;
}

uint64_t VoiceCommandDebugInfoAggregated.hasVoiceCommandAfterReranking.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 3);
}

uint64_t VoiceCommandDebugInfoAggregated.hasVoiceCommandAfterReranking.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 3) = result;
  return result;
}

uint64_t (*VoiceCommandDebugInfoAggregated.hasVoiceCommandAfterReranking.modify())(void)
{
  return nullsub_1;
}

uint64_t VoiceCommandDebugInfoAggregated.hasNoVoiceCommandAfterRespeakCheck.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 4);
}

uint64_t VoiceCommandDebugInfoAggregated.hasNoVoiceCommandAfterRespeakCheck.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 4) = result;
  return result;
}

uint64_t (*VoiceCommandDebugInfoAggregated.hasNoVoiceCommandAfterRespeakCheck.modify())(void)
{
  return nullsub_1;
}

uint64_t __swift_memcpy5_1(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_BYTE *)(result + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for VoiceCommandDebugInfoAggregated(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && a1[5])
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *a1;
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VoiceCommandDebugInfoAggregated(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 5) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 5) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for VoiceCommandDebugInfoAggregated()
{
  return &type metadata for VoiceCommandDebugInfoAggregated;
}

uint64_t sub_1B250A3DC()
{
  unint64_t v0;

  v0 = sub_1B25CD4D4();
  OUTLINED_FUNCTION_10_0();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

unint64_t sub_1B250A420(unsigned __int8 a1)
{
  return ((unint64_t (*)())((char *)sub_1B250A44C + 4 * byte_1B25DCA00[a1]))();
}

unint64_t sub_1B250A44C()
{
  return 0xD000000000000024;
}

void sub_1B250A498(int a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  unint64_t v47;
  void (*v48)(uint64_t, uint64_t);
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, _BYTE *, uint64_t);
  _BYTE v63[4];
  int v64;
  os_log_t v65;
  uint64_t v66;
  uint64_t v67;
  _BYTE *v68;
  void (*v69)(uint64_t, uint64_t);
  void (*v70)(uint64_t, _BYTE *, uint64_t);
  _BYTE *v71;
  _BYTE *v72;
  _BYTE *v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v75 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD71C0);
  MEMORY[0x1E0C80A78](v3, v4);
  v73 = &v63[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6998);
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = &v63[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = OUTLINED_FUNCTION_72_2();
  v11 = *(_QWORD **)(v10 - 8);
  v12 = v11[8];
  v14 = MEMORY[0x1E0C80A78](v10, v13);
  v72 = &v63[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = MEMORY[0x1E0C80A78](v14, v15);
  v18 = &v63[-v17];
  v20 = MEMORY[0x1E0C80A78](v16, v19);
  v22 = &v63[-v21];
  v24 = MEMORY[0x1E0C80A78](v20, v23);
  v26 = &v63[-v25];
  MEMORY[0x1E0C80A78](v24, v27);
  v29 = &v63[-v28];
  v74 = a1;
  sub_1B250A420(a1);
  v31 = v30;
  sub_1B25CC5D4();
  OUTLINED_FUNCTION_10_0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10) == 1)
  {
    sub_1B250ADF4((uint64_t)v9);
    if (qword_1EEFD6A20 != -1)
      swift_once();
    v32 = OUTLINED_FUNCTION_147();
    __swift_project_value_buffer(v32, (uint64_t)qword_1EEFE40B0);
    v33 = sub_1B25CC8B0();
    v34 = sub_1B25CCFDC();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)OUTLINED_FUNCTION_246();
      v77 = OUTLINED_FUNCTION_246();
      *(_DWORD *)v35 = 136315138;
      v76 = sub_1B2504AB0(0xD000000000000024, v31, &v77);
      sub_1B25CD12C();
      OUTLINED_FUNCTION_10_0();
      _os_log_impl(&dword_1B2494000, v33, v34, "Invalid codepath UUID string: %s", v35, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_174();
    }

  }
  else
  {
    v70 = (void (*)(uint64_t, _BYTE *, uint64_t))v11[4];
    v70((uint64_t)v29, v9, v10);
    if (qword_1EEFD6A20 != -1)
      swift_once();
    v36 = OUTLINED_FUNCTION_147();
    __swift_project_value_buffer(v36, (uint64_t)qword_1EEFE40B0);
    v37 = v11[2];
    v71 = v29;
    OUTLINED_FUNCTION_6_8((uint64_t)v26, (uint64_t)v29);
    OUTLINED_FUNCTION_6_8((uint64_t)v22, v75);
    v38 = sub_1B25CC8B0();
    v39 = sub_1B25CCFD0();
    v40 = v39;
    if (os_log_type_enabled(v38, v39))
    {
      v41 = OUTLINED_FUNCTION_246();
      v68 = v18;
      v42 = v41;
      v66 = OUTLINED_FUNCTION_246();
      v77 = v66;
      *(_DWORD *)v42 = 136315394;
      v65 = v38;
      v64 = v40;
      v43 = sub_1B25CC5E0();
      v76 = OUTLINED_FUNCTION_10_6(v43, v44);
      v67 = v37;
      OUTLINED_FUNCTION_5_5();
      swift_bridgeObjectRelease();
      v45 = (void (*)(uint64_t, uint64_t))v11[1];
      v45((uint64_t)v26, v10);
      *(_WORD *)(v42 + 12) = 2080;
      v46 = sub_1B25CC5E0();
      v76 = OUTLINED_FUNCTION_10_6(v46, v47);
      OUTLINED_FUNCTION_5_5();
      swift_bridgeObjectRelease();
      v69 = v45;
      v45((uint64_t)v22, v10);
      _os_log_impl(&dword_1B2494000, v65, (os_log_type_t)v64, "Enqueuing experiment trigger log on a background task. codepathId=%s requestId=%s", (uint8_t *)v42, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_174();
    }
    v48 = (void (*)(uint64_t, uint64_t))v11[1];
    v48((uint64_t)v26, v10);
    v69 = v48;
    v48((uint64_t)v22, v10);

    v49 = v11;
    v50 = (uint64_t)v73;
    sub_1B25CCCA0();
    v51 = sub_1B25CCCDC();
    __swift_storeEnumTagSinglePayload(v50, 0, 1, v51);
    v52 = (uint64_t)v18;
    v53 = v18;
    v54 = (uint64_t)v71;
    OUTLINED_FUNCTION_6_8(v52, (uint64_t)v71);
    v55 = v72;
    OUTLINED_FUNCTION_6_8((uint64_t)v72, v75);
    v56 = *((unsigned __int8 *)v49 + 80);
    v57 = (v56 + 32) & ~v56;
    v58 = v57 + v12;
    v59 = (v56 + v57 + v12 + 1) & ~v56;
    v60 = swift_allocObject();
    v61 = v60 + v57;
    *(_QWORD *)(v60 + 16) = 0;
    *(_QWORD *)(v60 + 24) = 0;
    v62 = v70;
    v70(v61, v53, v10);
    *(_BYTE *)(v60 + v58) = v74;
    v62(v60 + v59, v55, v10);
    sub_1B24C52C0(v50, (uint64_t)&unk_1EEFD94C8, v60);
    swift_release();
    v69(v54, v10);
  }
}

uint64_t sub_1B250AA08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;

  *(_BYTE *)(v6 + 112) = a5;
  *(_QWORD *)(v6 + 56) = a4;
  *(_QWORD *)(v6 + 64) = a6;
  return swift_task_switch();
}

uint64_t sub_1B250AA24()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  BOOL v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, unint64_t, unint64_t, uint64_t);

  v1 = *(unsigned __int8 *)(v0 + 112);
  *(_QWORD *)(v0 + 72) = objc_msgSend(objc_allocWithZone((Class)sub_1B25CC814()), sel_init);
  v2 = sub_1B25CC5EC();
  *(_QWORD *)(v0 + 80) = v2;
  v3 = v1 == 1;
  if (v1 == 1)
    v4 = 0xD000000000000014;
  else
    v4 = 0xD00000000000001DLL;
  if (v3)
    v5 = 0x80000001B25D16E0;
  else
    v5 = 0x80000001B25D16C0;
  v6 = sub_1B25CC5EC();
  *(_QWORD *)(v0 + 88) = v6;
  v9 = (uint64_t (*)(uint64_t, unint64_t, unint64_t, uint64_t))((int)*MEMORY[0x1E0CF1358]
                                                                                    + MEMORY[0x1E0CF1358]);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v7;
  *v7 = v0;
  v7[1] = sub_1B250AB24;
  return v9(v2, v4, v5, v6);
}

uint64_t sub_1B250AB24()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v3 = *(void **)(v2 + 80);

    OUTLINED_FUNCTION_4_4();
  }
  return swift_task_switch();
}

uint64_t sub_1B250ABB4()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B250ABDC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v1 = *(void **)(v0 + 80);

  OUTLINED_FUNCTION_4_4();
  if (qword_1EEFD6A20 != -1)
    swift_once();
  v2 = *(void **)(v0 + 104);
  v3 = OUTLINED_FUNCTION_147();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EEFE40B0);
  v4 = v2;
  v5 = v2;
  v6 = sub_1B25CC8B0();
  v7 = sub_1B25CCFDC();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)OUTLINED_FUNCTION_246();
    v12 = OUTLINED_FUNCTION_246();
    *(_DWORD *)v8 = 136315138;
    swift_getErrorValue();
    v9 = sub_1B25CD654();
    *(_QWORD *)(v0 + 48) = sub_1B2504AB0(v9, v10, &v12);
    sub_1B25CD12C();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_148_0();
    OUTLINED_FUNCTION_148_0();
    _os_log_impl(&dword_1B2494000, v6, v7, "Error emitting codepath trigger: %s", v8, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_174();
  }

  OUTLINED_FUNCTION_148_0();
  OUTLINED_FUNCTION_148_0();
  OUTLINED_FUNCTION_148_0();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for ExperimentationTriggerLogger()
{
  return objc_opt_self();
}

uint64_t sub_1B250ADF4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6998);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B250AE34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v1 = OUTLINED_FUNCTION_72_2();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v3 + v4 + 1) & ~v3;
  swift_unknownObjectRelease();
  v6 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v6(v0 + v4, v1);
  v6(v0 + v5, v1);
  return swift_deallocObject();
}

uint64_t sub_1B250AEC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(OUTLINED_FUNCTION_72_2() - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = v6 + *(_QWORD *)(v4 + 64);
  v8 = *(_QWORD *)(v1 + 16);
  v9 = *(_QWORD *)(v1 + 24);
  v10 = v1 + v6;
  v11 = v1 + ((v5 + v7 + 1) & ~v5);
  v12 = *(_BYTE *)(v1 + v7);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_1B250AF74;
  return sub_1B250AA08(a1, v8, v9, v10, v12, v11);
}

uint64_t sub_1B250AF74()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t OUTLINED_FUNCTION_4_4()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_5_5()
{
  return sub_1B25CD12C();
}

uint64_t OUTLINED_FUNCTION_6_8(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_10_6(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1B2504AB0(a1, a2, (uint64_t *)(v2 - 88));
}

uint64_t sub_1B250AFEC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1B250B004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;

  v5 = v2;
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](a1, v5);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v9, v12);
  v15 = (char *)&v22 - v14;
  MEMORY[0x1E0C80A78](v13, v16);
  (*(void (**)(char *))(v18 + 16))((char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = sub_1B2551EC4(a1, (uint64_t)v15, a2);
  if (v3)
  {
    v20 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v20(v11, v15, v7);
    if (sub_1B25CD5A0())
    {
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    }
    else
    {
      swift_allocError();
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v20)(v21, v11, v7);
    }
  }
  return result;
}

uint64_t sub_1B250B164()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1B250B1A4()
{
  MEMORY[0x1B5E25300]();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ManagedCriticalState.LockedBuffer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ManagedCriticalState.LockedBuffer);
}

uint64_t sub_1B250B1D0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for ManagedCriticalState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ManagedCriticalState);
}

uint64_t sub_1B250B1E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  type metadata accessor for ManagedCriticalState.LockedBuffer(0, a2, a3, a4);
  v6 = sub_1B25CD348();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  return v6;
}

uint64_t sub_1B250B258@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  v2 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(*a1 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + *MEMORY[0x1E0DEC528]) - 8) + 16))(a2);
}

void sub_1B250B2AC(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  sub_1B250B314(a3 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)a3 + 16), (os_unfair_lock_t)(a3 + ((*(unsigned int *)(*(_QWORD *)a3 + 48) + 3) & 0x1FFFFFFFCLL)), a1, a2, a4, a5, &v5);
}

void sub_1B250B314(uint64_t a1, os_unfair_lock_t lock, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v7;

  os_unfair_lock_lock(lock);
  a3(a1);
  os_unfair_lock_unlock(lock);
  if (v7)
    *a7 = v7;
}

uint64_t sub_1B250B394@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B250B258(a1, a2);
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1B5E26140](a1, v6, a5);
}

void sub_1B250B3D8()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v44;
  char v45;
  uint64_t *v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  BOOL v53;
  uint64_t v54;
  uint64_t v55;

  OUTLINED_FUNCTION_59_0();
  v2 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6750);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v4, v5);
  OUTLINED_FUNCTION_41_1();
  v8 = v7 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6AC8);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v9, v10);
  OUTLINED_FUNCTION_8_8(v11, v54);
  v14 = MEMORY[0x1E0C80A78](v12, v13);
  v16 = (char *)&v54 - v15;
  v18 = MEMORY[0x1E0C80A78](v14, v17);
  v20 = (char *)&v54 - v19;
  MEMORY[0x1E0C80A78](v18, v21);
  v23 = (char *)&v54 - v22;
  v24 = OUTLINED_FUNCTION_6_9();
  OUTLINED_FUNCTION_30_0();
  v27 = MEMORY[0x1E0C80A78](v25, v26);
  v29 = (char *)&v54 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27, v30);
  v32 = (char *)&v54 - v31;
  v33 = v0[5];
  if (!v33
    || (v34 = v2[5]) != 0
    && (v0[4] == v2[4] ? (v35 = v33 == v34) : (v35 = 0), v35 || (OUTLINED_FUNCTION_303_0() & 1) != 0))
  {
    v36 = v0[7];
    if (!v36
      || (v37 = v2[7]) != 0
      && (v0[6] == v2[6] ? (v38 = v36 == v37) : (v38 = 0), v38 || (OUTLINED_FUNCTION_303_0() & 1) != 0))
    {
      v54 = v8;
      v39 = type metadata accessor for ClientInfo(0);
      OUTLINED_FUNCTION_27_5((uint64_t)v0 + *(int *)(v39 + 32));
      OUTLINED_FUNCTION_118_0((uint64_t)v23, 1, v24);
      if (v35)
      {
        v40 = (uint64_t)v23;
      }
      else
      {
        sub_1B250C19C((uint64_t)v23, (uint64_t)v32);
        sub_1B250D1B4((uint64_t)v32, (uint64_t)v20);
        __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v24);
        sub_1B250BC70((uint64_t)v2 + *(int *)(v39 + 32), (uint64_t)v16);
        v40 = v54;
        v41 = v54 + *(int *)(v3 + 48);
        sub_1B250BC70((uint64_t)v20, v54);
        OUTLINED_FUNCTION_27_5((uint64_t)v16);
        OUTLINED_FUNCTION_118_0(v40, 1, v24);
        if (!v42)
        {
          v44 = v55;
          sub_1B250BC70(v40, v55);
          OUTLINED_FUNCTION_118_0(v41, 1, v24);
          if (!v45)
          {
            sub_1B250C19C(v41, (uint64_t)v29);
            v48 = sub_1B25CC5F8();
            if ((v48 & 1) != 0 && (sub_1B25CC5F8() & 1) != 0)
            {
              v49 = *(int *)(v24 + 24);
              v50 = *(_QWORD *)(v44 + v49);
              v51 = *(_QWORD *)(v44 + v49 + 8);
              v52 = &v29[v49];
              v53 = v50 == *(_QWORD *)v52 && v51 == *((_QWORD *)v52 + 1);
              if (v53 || (OUTLINED_FUNCTION_303_0() & 1) != 0)
              {
                sub_1B250C160((uint64_t)v29);
                OUTLINED_FUNCTION_12_6((uint64_t)v16);
                OUTLINED_FUNCTION_12_6((uint64_t)v20);
                OUTLINED_FUNCTION_16_6();
                OUTLINED_FUNCTION_26_4();
                goto LABEL_22;
              }
            }
            sub_1B250C160((uint64_t)v29);
            OUTLINED_FUNCTION_12_6((uint64_t)v16);
            OUTLINED_FUNCTION_12_6((uint64_t)v20);
            OUTLINED_FUNCTION_16_6();
            OUTLINED_FUNCTION_26_4();
            v47 = v40;
            v46 = &qword_1EEFD6AC8;
LABEL_41:
            sub_1B24C0034(v47, v46);
            goto LABEL_42;
          }
          OUTLINED_FUNCTION_12_6((uint64_t)v16);
          OUTLINED_FUNCTION_12_6((uint64_t)v20);
          OUTLINED_FUNCTION_16_6();
          OUTLINED_FUNCTION_26_4();
LABEL_31:
          v46 = &qword_1EEFD6750;
          v47 = v40;
          goto LABEL_41;
        }
        sub_1B24C0034((uint64_t)v16, &qword_1EEFD6AC8);
        v40 = v54;
        sub_1B24C0034((uint64_t)v20, &qword_1EEFD6AC8);
        OUTLINED_FUNCTION_16_6();
        OUTLINED_FUNCTION_118_0(v41, 1, v24);
        if (!v35)
          goto LABEL_31;
      }
LABEL_22:
      sub_1B24C0034(v40, &qword_1EEFD6AC8);
      if (*v0 != *v2 || v0[1] != v2[1])
        OUTLINED_FUNCTION_303_0();
    }
  }
LABEL_42:
  OUTLINED_FUNCTION_7_1();
}

id sub_1B250B778()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  OUTLINED_FUNCTION_59_0();
  v57 = v2;
  v58 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6AC8);
  OUTLINED_FUNCTION_30_0();
  v6 = MEMORY[0x1E0C80A78](v4, v5);
  v49 = (uint64_t)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6, v8);
  OUTLINED_FUNCTION_24_6();
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v49 - v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6998);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v13, v14);
  OUTLINED_FUNCTION_8_8(v15, v49);
  MEMORY[0x1E0C80A78](v16, v17);
  v19 = (char *)&v49 - v18;
  v20 = *v0;
  v21 = v0[1];
  v22 = v0[3];
  v54 = v0[2];
  v55 = v20;
  v23 = v0[4];
  v24 = v0[7];
  v51 = v0[6];
  v52 = v23;
  OUTLINED_FUNCTION_22_4();
  v26 = (uint64_t)v0 + v25;
  sub_1B250BC70((uint64_t)v0 + v25, (uint64_t)v12);
  v27 = OUTLINED_FUNCTION_6_9();
  OUTLINED_FUNCTION_118_0((uint64_t)v12, 1, v27);
  v53 = v21;
  v50 = v24;
  if (v28)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_23_6();
    sub_1B24C0034((uint64_t)v12, &qword_1EEFD6AC8);
    v32 = OUTLINED_FUNCTION_72_2();
    v30 = (uint64_t)v19;
    v31 = 1;
  }
  else
  {
    v29 = OUTLINED_FUNCTION_72_2();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v19, v12, v29);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_23_6();
    sub_1B250C160((uint64_t)v12);
    v30 = (uint64_t)v19;
    v31 = 0;
    v32 = v29;
  }
  __swift_storeEnumTagSinglePayload(v30, v31, 1, v32);
  v33 = v22;
  sub_1B250BC70(v26, v1);
  OUTLINED_FUNCTION_118_0(v1, 1, v27);
  v34 = v49;
  if (v28)
  {
    sub_1B24C0034(v1, &qword_1EEFD6AC8);
    v40 = OUTLINED_FUNCTION_72_2();
    v38 = v56;
    v39 = 1;
  }
  else
  {
    v35 = v1 + *(int *)(v27 + 20);
    v36 = OUTLINED_FUNCTION_72_2();
    v37 = v56;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v56, v35, v36);
    OUTLINED_FUNCTION_16_6();
    v38 = v37;
    v39 = 0;
    v40 = v36;
  }
  __swift_storeEnumTagSinglePayload(v38, v39, 1, v40);
  v41 = v21;
  sub_1B250BC70(v26, v34);
  OUTLINED_FUNCTION_118_0(v34, 1, v27);
  v42 = v53;
  v43 = v50;
  if (v28)
  {
    sub_1B24C0034(v34, &qword_1EEFD6AC8);
    v46 = 0;
    v45 = 0;
  }
  else
  {
    v44 = (uint64_t *)(v34 + *(int *)(v27 + 24));
    v46 = *v44;
    v45 = v44[1];
    OUTLINED_FUNCTION_47_0();
    sub_1B250C160(v34);
  }
  v47 = objc_allocWithZone((Class)_SFAnalyzerClientInfo);
  return sub_1B250CFE0(v55, v42, v54, v33, v52, v41, v51, v43, (uint64_t)v19, v56, v46, v45);
}

void ClientInfo.init(identifier:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_22_4();
  v7 = a3 + v6;
  v8 = type metadata accessor for ClientInfo.LoggingInfo(0);
  __swift_storeEnumTagSinglePayload(v7, 1, 1, v8);
  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = 0xE000000000000000;
  *(_OWORD *)(a3 + 32) = xmmword_1B25DCAE0;
  *(_OWORD *)(a3 + 48) = xmmword_1B25DCAE0;
  OUTLINED_FUNCTION_262();
}

uint64_t ClientInfo.init(identifier:source:applicationName:inputOrigin:loggingInfo:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10)
{
  uint64_t v11;

  *a9 = a1;
  a9[1] = a2;
  a9[4] = a5;
  a9[5] = a6;
  a9[2] = a3;
  a9[3] = a4;
  a9[6] = a7;
  a9[7] = a8;
  OUTLINED_FUNCTION_22_4();
  return sub_1B250BB30(a10, (uint64_t)a9 + v11);
}

uint64_t type metadata accessor for ClientInfo(uint64_t a1)
{
  return sub_1B24B1B88(a1, (uint64_t *)&unk_1EEFD6758);
}

uint64_t type metadata accessor for ClientInfo.LoggingInfo(uint64_t a1)
{
  return sub_1B24B1B88(a1, (uint64_t *)&unk_1EEFD6740);
}

uint64_t sub_1B250BB30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6AC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void ClientInfo.init(identifier:applicationName:source:inputOrigin:)()
{
  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_4_5();
  OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_7_1();
}

void ClientInfo.init(identifier:applicationName:source:inputOrigin:dictationUIInteractionId:)()
{
  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_4_5();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_7_1();
}

void ClientInfo.identifier.getter()
{
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_0();
}

void ClientInfo.source.getter()
{
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_0();
}

void ClientInfo.applicationName.getter()
{
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_0();
}

void ClientInfo.inputOrigin.getter()
{
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_0();
}

uint64_t ClientInfo.loggingInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  OUTLINED_FUNCTION_22_4();
  return sub_1B250BC70(v1 + v3, a1);
}

uint64_t sub_1B250BC70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6AC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ClientInfo.LoggingInfo.asrID.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_72_2();
  v0 = OUTLINED_FUNCTION_38_0();
  return OUTLINED_FUNCTION_21_0(v0, v1, v2, v3);
}

uint64_t ClientInfo.LoggingInfo.requestID.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_6_9();
  OUTLINED_FUNCTION_72_2();
  v0 = OUTLINED_FUNCTION_38_0();
  return OUTLINED_FUNCTION_21_0(v0, v1, v2, v3);
}

void ClientInfo.LoggingInfo.dictationUIInteractionID.getter()
{
  OUTLINED_FUNCTION_6_9();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_0();
}

uint64_t ClientInfo.LoggingInfo.init(asrID:requestID:dictationUIInteractionID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  _QWORD *v14;

  v10 = OUTLINED_FUNCTION_72_2();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(a5, a1, v10);
  v12 = OUTLINED_FUNCTION_6_9();
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v11)(a5 + *(int *)(v12 + 20), a2, v10);
  v14 = (_QWORD *)(a5 + *(int *)(v12 + 24));
  *v14 = a3;
  v14[1] = a4;
  return result;
}

void static ClientInfo.LoggingInfo.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  BOOL v9;

  if ((sub_1B25CC5F8() & 1) != 0
    && (v4 = OUTLINED_FUNCTION_6_9(), (sub_1B25CC5F8() & 1) != 0)
    && ((v5 = *(int *)(v4 + 24),
         v6 = *(_QWORD *)(a1 + v5),
         v7 = *(_QWORD *)(a1 + v5 + 8),
         v8 = (_QWORD *)(a2 + v5),
         v6 == *v8)
      ? (v9 = v7 == v8[1])
      : (v9 = 0),
        !v9))
  {
    sub_1B25CD5D0();
  }
  else
  {
    OUTLINED_FUNCTION_262();
  }
}

void static ClientInfo.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  BOOL v49;
  BOOL v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v66;
  uint64_t *v67;

  OUTLINED_FUNCTION_59_0();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  v26 = v25;
  v27 = OUTLINED_FUNCTION_6_9();
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v28, v29);
  OUTLINED_FUNCTION_41_1();
  v32 = v31 - v30;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6750);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v34, v35);
  OUTLINED_FUNCTION_41_1();
  v38 = v37 - v36;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6AC8);
  OUTLINED_FUNCTION_30_0();
  v41 = MEMORY[0x1E0C80A78](v39, v40);
  v43 = (char *)&a9 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v41, v44);
  OUTLINED_FUNCTION_24_6();
  MEMORY[0x1E0C80A78](v45, v46);
  v48 = (char *)&a9 - v47;
  v49 = *v26 == *v24 && v26[1] == v24[1];
  if (v49 || (OUTLINED_FUNCTION_303_0() & 1) != 0)
  {
    v50 = v26[2] == v24[2] && v26[3] == v24[3];
    if (v50 || (OUTLINED_FUNCTION_303_0() & 1) != 0)
    {
      v51 = v26[5];
      v52 = v24[5];
      if (v51)
      {
        if (!v52)
          goto LABEL_46;
        v53 = v26[4] == v24[4] && v51 == v52;
        if (!v53 && (OUTLINED_FUNCTION_303_0() & 1) == 0)
          goto LABEL_46;
      }
      else if (v52)
      {
        goto LABEL_46;
      }
      v54 = v26[7];
      v55 = v24[7];
      if (v54)
      {
        if (!v55)
          goto LABEL_46;
        v56 = v26[6] == v24[6] && v54 == v55;
        if (!v56 && (OUTLINED_FUNCTION_303_0() & 1) == 0)
          goto LABEL_46;
      }
      else if (v55)
      {
        goto LABEL_46;
      }
      v57 = type metadata accessor for ClientInfo(0);
      sub_1B250BC70((uint64_t)v26 + *(int *)(v57 + 32), (uint64_t)v48);
      sub_1B250BC70((uint64_t)v24 + *(int *)(v57 + 32), v20);
      v58 = v38 + *(int *)(v33 + 48);
      OUTLINED_FUNCTION_27_5((uint64_t)v48);
      sub_1B250BC70(v20, v58);
      OUTLINED_FUNCTION_118_0(v38, 1, v27);
      if (v49)
      {
        sub_1B24C0034(v20, &qword_1EEFD6AC8);
        sub_1B24C0034((uint64_t)v48, &qword_1EEFD6AC8);
        OUTLINED_FUNCTION_118_0(v58, 1, v27);
      }
      else
      {
        sub_1B250BC70(v38, (uint64_t)v43);
        OUTLINED_FUNCTION_118_0(v58, 1, v27);
        if (!v59)
        {
          sub_1B250C19C(v58, v32);
          v60 = sub_1B25CC5F8();
          if ((v60 & 1) != 0 && (sub_1B25CC5F8() & 1) != 0)
          {
            v61 = *(int *)(v27 + 24);
            v62 = *(_QWORD *)&v43[v61];
            v63 = *(_QWORD *)&v43[v61 + 8];
            v64 = (_QWORD *)(v32 + v61);
            if (v62 != *v64 || v63 != v64[1])
              OUTLINED_FUNCTION_303_0();
          }
          sub_1B250C160(v32);
        }
        sub_1B24C0034(v20, &qword_1EEFD6AC8);
        sub_1B24C0034((uint64_t)v48, &qword_1EEFD6AC8);
        sub_1B250C160((uint64_t)v43);
      }
      v66 = OUTLINED_FUNCTION_38_0();
      sub_1B24C0034(v66, v67);
    }
  }
LABEL_46:
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_1B250C160(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ClientInfo.LoggingInfo(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B250C19C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClientInfo.LoggingInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for ClientInfo(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    v8 = a2[7];
    v9 = *(int *)(a3 + 32);
    v10 = (char *)a2 + v9;
    v11 = (char *)a1 + v9;
    a1[6] = a2[6];
    a1[7] = v8;
    v12 = type metadata accessor for ClientInfo.LoggingInfo(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v12))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6AC8);
      memcpy(v11, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v15 = sub_1B25CC61C();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      v16(v11, v10, v15);
      v16(&v11[*(int *)(v12 + 20)], &v10[*(int *)(v12 + 20)], v15);
      v17 = *(int *)(v12 + 24);
      v18 = &v11[v17];
      v19 = &v10[v17];
      v20 = *((_QWORD *)v19 + 1);
      *(_QWORD *)v18 = *(_QWORD *)v19;
      *((_QWORD *)v18 + 1) = v20;
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v12);
    }
  }
  return v3;
}

uint64_t destroy for ClientInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = type metadata accessor for ClientInfo.LoggingInfo(0);
  result = __swift_getEnumTagSinglePayload(v4, 1, v5);
  if (!(_DWORD)result)
  {
    v7 = sub_1B25CC61C();
    v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
    v8(v4, v7);
    v8(v4 + *(int *)(v5 + 20), v7);
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for ClientInfo(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  v7 = a2[7];
  v8 = *(int *)(a3 + 32);
  v9 = (char *)a2 + v8;
  v10 = (char *)a1 + v8;
  a1[6] = a2[6];
  a1[7] = v7;
  v11 = type metadata accessor for ClientInfo.LoggingInfo(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v11))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6AC8);
    memcpy(v10, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = sub_1B25CC61C();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    v14(v10, v9, v13);
    v14(&v10[*(int *)(v11 + 20)], &v9[*(int *)(v11 + 20)], v13);
    v15 = *(int *)(v11 + 24);
    v16 = &v10[v15];
    v17 = &v9[v15];
    v18 = *((_QWORD *)v17 + 1);
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *((_QWORD *)v16 + 1) = v18;
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v11);
  }
  return a1;
}

_QWORD *assignWithCopy for ClientInfo(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for ClientInfo.LoggingInfo(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    if (!v11)
    {
      v19 = sub_1B25CC61C();
      v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 24);
      v20(v7, v8, v19);
      v20(&v7[*(int *)(v9 + 20)], &v8[*(int *)(v9 + 20)], v19);
      v21 = *(int *)(v9 + 24);
      v22 = &v7[v21];
      v23 = &v8[v21];
      *(_QWORD *)v22 = *(_QWORD *)v23;
      *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1B250C160((uint64_t)v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6AC8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  v12 = sub_1B25CC61C();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v13(v7, v8, v12);
  v13(&v7[*(int *)(v9 + 20)], &v8[*(int *)(v9 + 20)], v12);
  v14 = *(int *)(v9 + 24);
  v15 = &v7[v14];
  v16 = &v8[v14];
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
  swift_bridgeObjectRetain();
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for ClientInfo(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for ClientInfo.LoggingInfo(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6AC8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = sub_1B25CC61C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
    v12(v7, v8, v11);
    v12(&v7[*(int *)(v9 + 20)], &v8[*(int *)(v9 + 20)], v11);
    *(_OWORD *)&v7[*(int *)(v9 + 24)] = *(_OWORD *)&v8[*(int *)(v9 + 24)];
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  return a1;
}

_QWORD *assignWithTake for ClientInfo(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  int EnumTagSinglePayload;
  int v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 32);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for ClientInfo.LoggingInfo(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v13);
  v15 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (!EnumTagSinglePayload)
  {
    if (!v15)
    {
      v20 = sub_1B25CC61C();
      v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 40);
      v21(v11, v12, v20);
      v21(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v20);
      v22 = *(int *)(v13 + 24);
      v23 = &v11[v22];
      v24 = &v12[v22];
      v26 = *(_QWORD *)v24;
      v25 = *((_QWORD *)v24 + 1);
      *(_QWORD *)v23 = v26;
      *((_QWORD *)v23 + 1) = v25;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1B250C160((uint64_t)v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6AC8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    return a1;
  }
  v16 = sub_1B25CC61C();
  v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
  v17(v11, v12, v16);
  v17(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v16);
  *(_OWORD *)&v11[*(int *)(v13 + 24)] = *(_OWORD *)&v12[*(int *)(v13 + 24)];
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1B250C9B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_37_0(*(_QWORD *)(a1 + 8));
    OUTLINED_FUNCTION_262();
  }
  else
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6AC8);
    OUTLINED_FUNCTION_11_0(a1 + *(int *)(a3 + 32), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ClientInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1B250CA1C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
    OUTLINED_FUNCTION_262();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6AC8);
    OUTLINED_FUNCTION_12_0(a1 + *(int *)(a4 + 32), a2, a2, v7);
  }
}

void sub_1B250CA7C()
{
  unint64_t v0;

  sub_1B250CAFC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1B250CAFC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEFD6AD0)
  {
    type metadata accessor for ClientInfo.LoggingInfo(255);
    v0 = sub_1B25CD108();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEFD6AD0);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ClientInfo.LoggingInfo(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1B25CC61C();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ClientInfo.LoggingInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v4 = sub_1B25CC61C();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ClientInfo.LoggingInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v6 = sub_1B25CC61C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ClientInfo.LoggingInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  v6 = sub_1B25CC61C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ClientInfo.LoggingInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1B25CC61C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for ClientInfo.LoggingInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1B25CC61C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientInfo.LoggingInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1B250CEA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = OUTLINED_FUNCTION_72_2();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    OUTLINED_FUNCTION_11_0(a1, a2, v6);
  }
  else
  {
    OUTLINED_FUNCTION_37_0(*(_QWORD *)(a1 + *(int *)(a3 + 24) + 8));
    OUTLINED_FUNCTION_262();
  }
}

uint64_t storeEnumTagSinglePayload for ClientInfo.LoggingInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1B250CF08(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = OUTLINED_FUNCTION_72_2();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    OUTLINED_FUNCTION_12_0(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
    OUTLINED_FUNCTION_262();
  }
}

uint64_t sub_1B250CF6C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B25CC61C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

id sub_1B250CFE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  void *v12;
  void *v13;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;

  v13 = v12;
  v16 = (void *)sub_1B25CCA0C();
  swift_bridgeObjectRelease();
  v17 = (void *)sub_1B25CCA0C();
  swift_bridgeObjectRelease();
  if (a6)
  {
    v18 = (void *)sub_1B25CCA0C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = 0;
  }
  if (a8)
  {
    v19 = (void *)sub_1B25CCA0C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = 0;
  }
  v20 = sub_1B25CC61C();
  v21 = 0;
  if (__swift_getEnumTagSinglePayload(a9, 1, v20) != 1)
  {
    v21 = (void *)sub_1B25CC5EC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(a9, v20);
  }
  if (__swift_getEnumTagSinglePayload(a10, 1, v20) != 1)
  {
    v22 = (void *)sub_1B25CC5EC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(a10, v20);
    if (a12)
      goto LABEL_11;
LABEL_13:
    v23 = 0;
    goto LABEL_14;
  }
  v22 = 0;
  if (!a12)
    goto LABEL_13;
LABEL_11:
  v23 = (void *)sub_1B25CCA0C();
  swift_bridgeObjectRelease();
LABEL_14:
  v24 = objc_msgSend(v13, sel_initWithID_source_applicationName_inputOrigin_asrID_requestID_dictationUIInteractionID_, v16, v17, v18, v19, v21, v22, v23);

  return v24;
}

uint64_t sub_1B250D1B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClientInfo.LoggingInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_1_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v9 = (uint64_t)v8 + *(int *)(type metadata accessor for ClientInfo(0) + 32);
  v10 = type metadata accessor for ClientInfo.LoggingInfo(0);
  result = __swift_storeEnumTagSinglePayload(v9, 1, 1, v10);
  *v8 = v7;
  v8[1] = v6;
  v8[4] = v5;
  v8[5] = v4;
  v8[2] = v3;
  v8[3] = v2;
  v8[6] = v1;
  v8[7] = v0;
  return result;
}

uint64_t OUTLINED_FUNCTION_6_9()
{
  return type metadata accessor for ClientInfo.LoggingInfo(0);
}

void OUTLINED_FUNCTION_8_8(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 88) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_12_6(uint64_t a1)
{
  uint64_t *v1;

  return sub_1B24C0034(a1, v1);
}

uint64_t OUTLINED_FUNCTION_16_6()
{
  uint64_t v0;

  return sub_1B250C160(v0);
}

uint64_t OUTLINED_FUNCTION_22_4()
{
  return type metadata accessor for ClientInfo(0);
}

uint64_t OUTLINED_FUNCTION_23_6()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_26_4()
{
  uint64_t v0;

  return sub_1B250C160(v0);
}

uint64_t OUTLINED_FUNCTION_27_5(uint64_t a1)
{
  uint64_t v1;

  return sub_1B250BC70(a1, v1);
}

id sub_1B250D2E8(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;

  v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v3 = (void *)sub_1B25CC5EC();
  v4 = objc_msgSend(v2, sel_initWithNSUUID_, v3);

  v5 = sub_1B25CC61C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return v4;
}

uint64_t sub_1B250D364(uint64_t a1, void *a2)
{
  if (a2)
    return sub_1B250D3A0(*(_QWORD *)(a1 + 32), (uint64_t)a2);
  else
    return j__swift_continuation_throwingResume();
}

uint64_t sub_1B250D3A0(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36D060);
  swift_allocError();
  *v3 = a2;
  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_1B250D3F4()
{
  uint64_t v0;

  v0 = sub_1B25CC8C8();
  __swift_allocate_value_buffer(v0, qword_1EEFD95E0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EEFD95E0);
  return sub_1B25CC8BC();
}

void SpeechDonation.init(donorBundleID:recordingDate:audioFile:locale:transcription:evaluation:speechAttributes:taskHint:audioSource:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unsigned __int8 *a22,void **a23)
{
  uint64_t v23;
  uint64_t v24;
  void **v25;
  void **v26;
  uint64_t *v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void **v37;
  unsigned __int8 *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  void *v56;
  int v57;
  void *v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  _QWORD *v65;
  void *v66;
  id v67;
  void *v68;
  id v69;
  id v70;
  void *v71;
  unsigned __int8 v72;
  id v73;
  void *v74;
  uint64_t inited;
  id v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  NSObject *v83;
  os_log_type_t v84;
  uint8_t *v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  _BYTE *v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  void *v106;
  id v107[9];

  OUTLINED_FUNCTION_59_0();
  a19 = v23;
  a20 = v24;
  v26 = v25;
  v96 = v27;
  v95 = v28;
  v99 = v29;
  v31 = v30;
  v104 = v32;
  v34 = v33;
  v94 = v35;
  v100 = v36;
  v37 = a23;
  v97 = a21;
  v38 = a22;
  v107[7] = *(id *)MEMORY[0x1E0C80C00];
  v98 = OUTLINED_FUNCTION_23_0();
  v101 = *(_QWORD *)(v98 - 8);
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v39, v40);
  OUTLINED_FUNCTION_41_1();
  v43 = v42 - v41;
  v44 = OUTLINED_FUNCTION_24_0();
  v102 = *(_QWORD *)(v44 - 8);
  v103 = v44;
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v45, v46);
  OUTLINED_FUNCTION_41_1();
  v49 = v48 - v47;
  v50 = sub_1B25CC538();
  MEMORY[0x1E0C80A78](v50, v51);
  OUTLINED_FUNCTION_41_1();
  v54 = v53 - v52;
  v56 = *v26;
  v55 = v26[1];
  v57 = *v38;
  v58 = *v37;
  (*(void (**)(uint64_t, uint64_t))(v59 + 16))(v53 - v52, v31);
  v60 = objc_allocWithZone(MEMORY[0x1E0C89A98]);
  v67 = sub_1B251149C(v54, 3, 0);
  HIDWORD(v91) = v57;
  v68 = v56;
  v92 = v34;
  v69 = objc_msgSend(v67, sel_processingFormat);
  v93 = v69;
  v70 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C89AC0]), sel_initWithPCMFormat_frameCapacity_, v69, 960000);
  if (!v70)
  {
    v81 = v67;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_23_7();
    sub_1B25115B4((uint64_t)v68, (unint64_t)v55);
    OUTLINED_FUNCTION_23_7();

    if (qword_1EEFD7FF8 != -1)
      swift_once();
    v82 = OUTLINED_FUNCTION_147();
    v83 = __swift_project_value_buffer(v82, (uint64_t)qword_1EEFD95E0);
    sub_1B25CC8B0();
    v84 = OUTLINED_FUNCTION_70_2();
    v78 = v100;
    if (OUTLINED_FUNCTION_186_0(v84))
    {
      v85 = (uint8_t *)OUTLINED_FUNCTION_246();
      *(_WORD *)v85 = 0;
      _os_log_impl(&dword_1B2494000, v83, (os_log_type_t)v69, "Unable to create buffer for audio file", v85, 2u);
      OUTLINED_FUNCTION_174();
    }
    OUTLINED_FUNCTION_32_6((uint64_t)&a14);

    goto LABEL_10;
  }
  v71 = v70;
  v107[0] = 0;
  v72 = objc_msgSend(v67, sel_readIntoBuffer_error_, v70, v107);
  v73 = v107[0];
  v74 = v67;
  if ((v72 & 1) == 0)
  {
    v86 = v107[0];
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_23_7();
    sub_1B25115B4((uint64_t)v68, (unint64_t)v55);
    OUTLINED_FUNCTION_23_7();

    sub_1B25CC4D8();
    swift_willThrow();

    v78 = v100;
    if (qword_1EEFD7FF8 != -1)
      swift_once();
    v61 = OUTLINED_FUNCTION_147();
    __swift_project_value_buffer(v61, (uint64_t)qword_1EEFD95E0);
    OUTLINED_FUNCTION_91_4();
    OUTLINED_FUNCTION_91_4();
    v62 = sub_1B25CC8B0();
    v63 = sub_1B25CCFDC();
    if (os_log_type_enabled(v62, v63))
    {
      v64 = (uint8_t *)OUTLINED_FUNCTION_246();
      v65 = (_QWORD *)OUTLINED_FUNCTION_246();
      *(_DWORD *)v64 = 138412290;
      OUTLINED_FUNCTION_91_4();
      v66 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v107[0] = v66;
      sub_1B25CD12C();
      *v65 = v66;
      OUTLINED_FUNCTION_42_6();
      OUTLINED_FUNCTION_42_6();
      _os_log_impl(&dword_1B2494000, v62, v63, "Unable to read audio file: %@", v64, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7488);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_174();
    }

    OUTLINED_FUNCTION_42_6();
    OUTLINED_FUNCTION_42_6();
    OUTLINED_FUNCTION_42_6();
LABEL_10:
    (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v99, v98);
    OUTLINED_FUNCTION_65_5();
    OUTLINED_FUNCTION_64_5();
    v79 = 1;
    goto LABEL_11;
  }
  v90 = v49;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v102 + 16))(v49, v104, v103);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7620);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B25DBD80;
  *(_QWORD *)(inited + 32) = v71;
  v107[0] = (id)inited;
  sub_1B25CCBBC();
  v89 = v107[0];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v101 + 16))(v43, v99, v98);
  v107[0] = v68;
  v107[1] = v55;
  v105 = v57;
  v106 = v58;
  v76 = v73;
  v77 = v71;
  v78 = v100;
  SpeechDonation.init(donorBundleID:recordingDate:audioBuffers:locale:transcription:evaluation:speechAttributes:taskHint:audioSource:)(v94, v92, v90, (uint64_t)v89, v43, (uint64_t)v95, (uint64_t)v96, (uint64_t)v107, v97, (uint64_t)&v105, (uint64_t)&v106, v87, v88, (uint64_t)v89, (uint64_t)v67, v90, v91, (uint64_t)v55, v92,
    (uint64_t)v93,
    v94,
    v95,
    v96);
  OUTLINED_FUNCTION_32_6((uint64_t)&a14);

  OUTLINED_FUNCTION_32_6((uint64_t)&a9);
  OUTLINED_FUNCTION_71_1(*(uint64_t (**)(uint64_t, uint64_t))(v101 + 8));
  OUTLINED_FUNCTION_65_5();
  OUTLINED_FUNCTION_64_5();
  v79 = 0;
LABEL_11:
  v80 = OUTLINED_FUNCTION_9_4();
  __swift_storeEnumTagSinglePayload(v78, v79, 1, v80);
  OUTLINED_FUNCTION_7_1();
}

void SpeechDonation.init(donorBundleID:recordingDate:audioBuffers:locale:transcription:evaluation:speechAttributes:taskHint:audioSource:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,_BYTE *a22,uint64_t *a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char **v37;
  char **v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  _BYTE *v56;
  id v57;
  unsigned int v58;
  _BYTE *v59;
  char v60;
  id v61;
  id v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84[2];
  unint64_t v85;

  OUTLINED_FUNCTION_59_0();
  a19 = v23;
  a20 = v24;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v36 = v35;
  v38 = v37;
  v78 = v39;
  v72 = v40;
  v49 = a22;
  v41 = a23;
  v73 = OUTLINED_FUNCTION_23_0();
  v71 = *(_QWORD *)(v73 - 8);
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v42, v43);
  OUTLINED_FUNCTION_767();
  v75 = v44;
  v45 = OUTLINED_FUNCTION_24_0();
  v76 = *(_QWORD *)(v45 - 8);
  v77 = v45;
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v46, v47);
  OUTLINED_FUNCTION_767();
  v74 = v48;
  v80 = *v26;
  v81 = v26[1];
  LOBYTE(v49) = *v49;
  v50 = *v41;
  if (v34 >> 62)
    goto LABEL_28;
  v51 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (1)
  {
    v79 = v50;
    if (!v51)
      break;
    sub_1B24B2E98(0, (v34 & 0xC000000000000001) == 0, v34);
    v70 = (char)v49;
    if ((v34 & 0xC000000000000001) != 0)
      v52 = (id)MEMORY[0x1B5E252C4](0, v34);
    else
      v52 = *(id *)(v34 + 32);
    v53 = v52;
    OUTLINED_FUNCTION_601();
    v54 = objc_msgSend(v53, sel_format);

    if (!v54)
      goto LABEL_31;
    v67 = (uint64_t)v38;
    v68 = (uint64_t)v30;
    v69 = v28;
    v65 = v32;
    v66 = v36;
    v55 = v54;
    if ((sub_1B250E658(v34, v55) & 1) == 0)
      goto LABEL_32;
    v63 = a21;
    v64 = v55;
    sub_1B250E284(v55);
    v50 = 960000;
    v85 = MEMORY[0x1E0DEE9D8];
    v28 = 4;
    v38 = &selRef_unsignedIntegerValue;
    while (1)
    {
      v36 = v28 - 4;
      v56 = (v34 & 0xC000000000000001) != 0
          ? (_BYTE *)MEMORY[0x1B5E252C4](v28 - 4, v34)
          : *(id *)(v34 + 8 * v28);
      v49 = v56;
      v32 = v28 - 3;
      if (__OFADD__(v36, 1))
        break;
      v57 = objc_msgSend(v56, sel_format);
      v30 = objc_msgSend(v57, sel_channelCount);

      if ((_DWORD)v30
        && objc_msgSend(v49, sel_frameLength, v63, v64)
        && objc_msgSend(v49, sel_int16ChannelData))
      {
        v58 = objc_msgSend(v49, sel_frameLength);
        v30 = (id)(v50 - v58);
        if (v50 < v58)
        {
          OUTLINED_FUNCTION_601();
          sub_1B250E790(v49, v50);
          v62 = v61;
          MEMORY[0x1B5E24B38]();
          OUTLINED_FUNCTION_72_5();
          if (v60)
            OUTLINED_FUNCTION_29_6();
          sub_1B25CCC04();
          sub_1B25CCBBC();

          goto LABEL_23;
        }
        v59 = v49;
        MEMORY[0x1B5E24B38]();
        OUTLINED_FUNCTION_72_5();
        if (v60)
          OUTLINED_FUNCTION_29_6();
        sub_1B25CCC04();
        sub_1B25CCBBC();

        v50 = (uint64_t)v30;
      }
      else
      {

      }
      ++v28;
      if (v32 == v51)
      {
        OUTLINED_FUNCTION_601();
LABEL_23:
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v76 + 16))(v74, v66, v77);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 16))(v75, v65, v73);
        v84[0] = v80;
        v84[1] = v81;
        v83 = v70;
        v82 = v79;
        sub_1B250E474(v78, v67, v74, v85, v75, v68, v69, v84, v72, v63, &v83, &v82);
        OUTLINED_FUNCTION_32_6((uint64_t)&a16);
        (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v65, v73);
        (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v66, v77);
        OUTLINED_FUNCTION_7_1();
        return;
      }
    }
    __break(1u);
LABEL_28:
    swift_bridgeObjectRetain();
    v51 = sub_1B25CD474();
  }
  OUTLINED_FUNCTION_601();
LABEL_31:
  OUTLINED_FUNCTION_38_4();
  sub_1B25115B4(v80, v81);
  __break(1u);
LABEL_32:
  OUTLINED_FUNCTION_38_4();
  sub_1B25115B4(v80, v81);
  __break(1u);
}

void SpeechDonation.init(donorBundleID:recordingDate:audioFormat:audioData:locale:transcription:evaluation:speechAttributes:taskHint:audioSource:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_59_0();
  v1 = v0;
  v3 = v2;
  OUTLINED_FUNCTION_23_0();
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v4, v5);
  OUTLINED_FUNCTION_767();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v6, v7);
  OUTLINED_FUNCTION_767();
  sub_1B250E284(v3);
  __asm { BR              X10 }
}

void sub_1B250DF58()
{
  int v0;
  void *v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  char *v34;
  uint64_t *v35;

  v9 = sub_1B25CC568();
  v11 = v10;
  v12 = sub_1B25CC598();
  if (v12 <= -2 || (*(_DWORD *)(v8 - 236) = v0, *(_QWORD *)(v8 - 232) = v3, v12 >= 0x200000000))
  {
LABEL_9:
    sub_1B25CD450();
    __break(1u);
    JUMPOUT(0x1B250E274);
  }
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C89AC0]), sel_initWithPCMFormat_frameCapacity_, v1, v12 / 2);
  if (!v13)
  {

    sub_1B25115B4(*(_QWORD *)(v8 - 144), v4);
    __break(1u);
    goto LABEL_9;
  }
  v14 = v13;
  *(_QWORD *)(v8 - 256) = v6;
  *(_QWORD *)(v8 - 248) = v5;
  v15 = (uint64_t *)objc_msgSend(v13, sel_int16ChannelData);
  v16 = objc_msgSend(v1, sel_channelCount);
  *(_QWORD *)(v8 - 264) = v1;
  *(_QWORD *)(v8 - 272) = v4;
  *(_QWORD *)(v8 - 280) = v2;
  v17 = v7;
  v18 = *(_QWORD *)(v8 - 136);
  if (v16)
    v19 = *v15;
  else
    v19 = 0;
  v20 = OUTLINED_FUNCTION_73_5();
  objc_msgSend(v14, sel_setFrameLength_, OUTLINED_FUNCTION_73_5());
  v21 = v9;
  v22 = v11;
  sub_1B250E314(v19, v20, 0, 0, 1, v9, v11);
  v23 = *(_QWORD *)(v8 - 224);
  v24 = *(_QWORD *)(v8 - 200);
  OUTLINED_FUNCTION_71_6(v23, v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 128) + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7620);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1B25DBD80;
  *(_QWORD *)(v25 + 32) = v14;
  *(_QWORD *)(v8 - 104) = v25;
  sub_1B25CCBBC();
  v26 = *(_QWORD *)(v8 - 104);
  v27 = *(_QWORD *)(v8 - 160);
  v28 = *(_QWORD *)(v8 - 216);
  v29 = v17;
  v30 = v17;
  v31 = *(_QWORD *)(v8 - 232);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v28, v30, v31);
  v32 = *(_QWORD *)(v8 - 272);
  *(_QWORD *)(v8 - 104) = *(_QWORD *)(v8 - 144);
  *(_QWORD *)(v8 - 96) = v32;
  *(_BYTE *)(v8 - 105) = *(_DWORD *)(v8 - 236);
  *(_QWORD *)(v8 - 120) = *(_QWORD *)(v8 - 280);
  v33 = v14;
  OUTLINED_FUNCTION_48_5();
  sub_1B250E474(*(_QWORD *)(v8 - 176), *(_QWORD *)(v8 - 168), v23, v26, v28, *(_QWORD *)(v8 - 152), *(_QWORD *)(v8 - 192), (uint64_t *)(v8 - 104), *(_QWORD **)(v8 - 184), *(_QWORD *)(v8 - 208), v34, v35);
  sub_1B24AB6DC(v21, v22);
  sub_1B24AB6DC(*(_QWORD *)(v8 - 256), *(_QWORD *)(v8 - 248));

  OUTLINED_FUNCTION_32_6(v8 - 8);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v29, v31);
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v8 - 128) + 8))(*(_QWORD *)(v8 - 136), v24);
  OUTLINED_FUNCTION_7_1();
}

id sub_1B250E284(void *a1)
{
  id result;
  double v3;
  double v4;

  result = objc_msgSend(a1, sel_channelCount);
  if ((_DWORD)result != 1)
  {
    __break(1u);
    goto LABEL_7;
  }
  result = objc_msgSend(a1, sel_commonFormat);
  if (result != (id)3)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  result = objc_msgSend(a1, sel_sampleRate);
  if (v3 != 8000.0)
  {
    result = objc_msgSend(a1, sel_sampleRate);
    if (v4 != 16000.0)
      goto LABEL_8;
  }
  return result;
}

void sub_1B250E314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  __asm { BR              X11 }
}

uint64_t sub_1B250E344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v9 = BYTE6(a7);
  if (!BYTE6(a7))
    return 0;
  if ((a5 & 1) != 0)
    goto LABEL_11;
  if (v8 != a4)
  {
    if (a2 + 0x4000000000000000 < 0)
    {
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    v9 = a4 - v8;
    if (__OFSUB__(a4, v8))
    {
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    v7 = 2 * a2;
    if (v9 >= 2 * a2)
      v9 = 2 * a2;
    v10 = v8 + v9;
    if (__OFADD__(v8, v9))
      goto LABEL_32;
    if (v10 >= v8)
      goto LABEL_21;
    __break(1u);
LABEL_11:
    if (v7)
    {
      if (v7 == 1)
        v8 = (int)a6;
      else
        v8 = *(_QWORD *)(a6 + 16);
    }
    else
    {
      v8 = 0;
    }
    if (a2 + 0x4000000000000000 < 0)
    {
      __break(1u);
    }
    else
    {
      if (v9 >= 2 * a2)
        v9 = 2 * a2;
      v10 = v8 + v9;
      if (!__OFADD__(v8, v9))
      {
        if (v10 >= v8)
        {
LABEL_21:
          if (v8 == v10)
            return 0;
          if (!a1)
          {
LABEL_33:
            __break(1u);
            JUMPOUT(0x1B250E464);
          }
          sub_1B25CC574();
          v11 = v10 - v8;
          if (!__OFSUB__(v10, v8))
            return v11;
          goto LABEL_29;
        }
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
    }
    __break(1u);
    goto LABEL_28;
  }
  return 0;
}

uint64_t sub_1B250E474@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, char *a11, uint64_t *a12)
{
  char v15;
  uint64_t v16;
  int *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  char *v25;
  uint64_t v26;
  uint64_t result;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v33;
  unint64_t v34;

  v33 = *a8;
  v34 = a8[1];
  v15 = *a11;
  v16 = *a12;
  *a9 = a1;
  a9[1] = a2;
  v17 = (int *)type metadata accessor for SpeechDonation();
  v18 = (char *)a9 + v17[5];
  v19 = sub_1B25CC5C8();
  v20 = *(_QWORD *)(v19 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v18, a3, v19);
  *(_QWORD *)((char *)a9 + v17[6]) = a10;
  *(_QWORD *)((char *)a9 + v17[7]) = v16;
  if (!(a4 >> 62))
  {
    v21 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v21)
      goto LABEL_3;
LABEL_7:
    swift_bridgeObjectRelease();
    sub_1B25115B4(v33, v34);
    __break(1u);
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  if (!sub_1B25CD474())
    goto LABEL_7;
LABEL_3:
  sub_1B24B2E98(0, (a4 & 0xC000000000000001) == 0, a4);
  if ((a4 & 0xC000000000000001) != 0)
  {
LABEL_8:
    v22 = (id)MEMORY[0x1B5E252C4](0, a4);
    goto LABEL_5;
  }
  v22 = *(id *)(a4 + 32);
LABEL_5:
  v23 = v22;
  swift_bridgeObjectRelease();
  v24 = objc_msgSend(v23, sel_format);

  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(a3, v19);
  *(_QWORD *)((char *)a9 + v17[8]) = v24;
  *(_QWORD *)((char *)a9 + v17[13]) = a4;
  v25 = (char *)a9 + v17[9];
  v26 = sub_1B25CC6F4();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v25, a5, v26);
  v28 = (_QWORD *)((char *)a9 + v17[10]);
  *v28 = a6;
  v28[1] = a7;
  *((_BYTE *)a9 + v17[11]) = v15;
  v29 = (_QWORD *)((char *)a9 + v17[12]);
  *v29 = v33;
  v29[1] = v34;
  return result;
}

uint64_t sub_1B250E658(unint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  char v9;

  if (a1 >> 62)
    goto LABEL_12;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; v3 = sub_1B25CD474())
  {
    sub_1B24B3050(0, &qword_1ED36D030);
    v4 = 4;
    while (1)
    {
      v5 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1B5E252C4](v4 - 4, a1) : *(id *)(a1 + 8 * v4);
      v6 = v5;
      v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      v8 = objc_msgSend(v5, sel_format);
      v9 = sub_1B25CD0D8();

      if ((v9 & 1) != 0)
      {
        ++v4;
        if (v7 != v3)
          continue;
      }
      goto LABEL_14;
    }
    __break(1u);
LABEL_12:
    swift_bridgeObjectRetain();
  }
  v9 = 1;
LABEL_14:

  swift_bridgeObjectRelease();
  return v9 & 1;
}

void sub_1B250E790(void *a1, uint64_t a2)
{
  uint64_t *v4;
  id v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  id v10;
  id v11;
  void **v12;
  id v13;
  unsigned int v14;
  void *v15;

  v4 = (uint64_t *)objc_msgSend(a1, sel_int16ChannelData);
  v5 = objc_msgSend(a1, sel_format);
  v6 = objc_msgSend(v5, sel_channelCount);

  if (v6)
    v7 = *v4;
  else
    v7 = 0;
  v8 = objc_msgSend(a1, sel_frameLength);
  v9 = objc_msgSend(a1, sel_frameLength);
  v10 = objc_msgSend(a1, sel_format);
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C89AC0]), sel_initWithPCMFormat_frameCapacity_, v10, a2);

  if (v11)
  {
    objc_msgSend(v11, sel_setFrameLength_, objc_msgSend(v11, sel_frameCapacity));
    v12 = (void **)objc_msgSend(v11, sel_int16ChannelData);
    v13 = objc_msgSend(v11, sel_format);
    v14 = objc_msgSend(v13, sel_channelCount);

    if (v14)
      v15 = *v12;
    else
      v15 = 0;
    if (v9 >= a2)
      a2 = a2;
    else
      a2 = v9;
    sub_1B250E930(0, a2, v7, v8, v15, objc_msgSend(v11, sel_frameLength));
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1B250E930(uint64_t result, uint64_t a2, uint64_t a3, int a4, void *__dst, uint64_t a6)
{
  uint64_t v7;
  const void *v8;
  unint64_t v9;

  if (__OFADD__(result, a2 - result))
  {
    __break(1u);
    goto LABEL_14;
  }
  v7 = a2 - result;
  if (a2 < result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (!a3)
    return 0;
  if (v7 <= a6)
  {
    if (__dst)
    {
      v8 = (const void *)(a3 + 2 * result);
      v9 = a3 + 2 * a2;
      if (v8 != __dst || v9 <= (unint64_t)__dst)
        memmove(__dst, v8, 2 * v7);
    }
    return v7;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t SpeechDonation.donate()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2[62] = a1;
  v2[63] = v1;
  v3 = sub_1B25CC454();
  v2[64] = v3;
  v2[65] = *(_QWORD *)(v3 - 8);
  v2[66] = OUTLINED_FUNCTION_7_0();
  v4 = sub_1B25CC43C();
  v2[67] = v4;
  v2[68] = *(_QWORD *)(v4 - 8);
  v2[69] = OUTLINED_FUNCTION_7_0();
  v5 = sub_1B25CC460();
  v2[70] = v5;
  v2[71] = *(_QWORD *)(v5 - 8);
  v2[72] = OUTLINED_FUNCTION_7_0();
  v6 = sub_1B25CC4E4();
  v2[73] = v6;
  v2[74] = *(_QWORD *)(v6 - 8);
  v2[75] = OUTLINED_FUNCTION_7_0();
  v7 = sub_1B25CC538();
  v2[76] = v7;
  v2[77] = *(_QWORD *)(v7 - 8);
  v2[78] = OUTLINED_FUNCTION_92();
  v2[79] = OUTLINED_FUNCTION_92();
  v2[80] = OUTLINED_FUNCTION_92();
  v2[81] = OUTLINED_FUNCTION_92();
  v8 = sub_1B25CC6DC();
  v2[82] = v8;
  v2[83] = *(_QWORD *)(v8 - 8);
  v2[84] = OUTLINED_FUNCTION_7_0();
  v9 = sub_1B25CC718();
  v2[85] = v9;
  v2[86] = *(_QWORD *)(v9 - 8);
  v2[87] = OUTLINED_FUNCTION_7_0();
  v10 = OUTLINED_FUNCTION_24_0();
  v2[88] = v10;
  v2[89] = *(_QWORD *)(v10 - 8);
  v2[90] = OUTLINED_FUNCTION_7_0();
  v11 = sub_1B25CC61C();
  v2[91] = v11;
  v2[92] = *(_QWORD *)(v11 - 8);
  v2[93] = OUTLINED_FUNCTION_92();
  v2[94] = OUTLINED_FUNCTION_92();
  v2[95] = OUTLINED_FUNCTION_92();
  return OUTLINED_FUNCTION_8();
}

void sub_1B250EB38()
{
  void *v0;
  _QWORD *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t);
  double v20;
  double v21;
  uint64_t v22;
  void (**v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  uint64_t v32;
  int deviceClassNumber;
  uint64_t v34;
  double v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  void (*v50)(uint64_t, uint64_t);
  void (*v51)(uint64_t, uint64_t);
  void *v52;
  unsigned int v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  unint64_t v59;
  uint64_t inited;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  _BOOL4 v82;
  void *v83;
  void *v84;
  void *v85;
  void *v86;
  void *v87;
  uint8_t *v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void **v100;
  id v101;
  void *v102;
  uint64_t v103;
  unsigned int v104;
  void *v105;
  id v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t *v109;
  void *v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  void *v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char v127;
  char v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  id v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void (*v140)(uint64_t);
  uint64_t v141;
  uint64_t v142;
  id v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  void *v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  id v161;
  void *v162;
  id v163;
  id v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  void *v168;
  uint64_t v169;
  uint64_t v170;
  void (*v171)(uint64_t, uint64_t);
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  id v185;
  void *v186;
  void *v187;
  void *v188;
  void (*v189)(uint64_t, _QWORD, uint64_t);
  uint64_t v190;
  uint64_t v191;
  id v192;
  void *v193;
  uint64_t v194;
  void (**v195)(uint64_t, uint64_t);
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  void *v199;
  uint64_t v200;
  uint64_t v201;
  void *v202;
  uint64_t v203;
  int *v204;
  void *v205;
  _QWORD *v206;
  uint64_t v207;
  unint64_t v208;
  uint64_t v209;

  v209 = *MEMORY[0x1E0C80C00];
  v2 = OUTLINED_FUNCTION_24_7(objc_allocWithZone(MEMORY[0x1E0D99618]));
  v1[96] = v2;
  v206 = v1;
  if (!v2)
    goto LABEL_20;
  v0 = v2;
  v3 = OUTLINED_FUNCTION_24_7(objc_allocWithZone(MEMORY[0x1E0D99620]));
  v1[97] = v3;
  if (!v3)
  {
LABEL_19:

LABEL_20:
    if (qword_1EEFD7FF8 != -1)
      swift_once();
    v36 = OUTLINED_FUNCTION_147();
    v37 = __swift_project_value_buffer(v36, (uint64_t)qword_1EEFD95E0);
    sub_1B25CC8B0();
    v38 = OUTLINED_FUNCTION_70_2();
    if (OUTLINED_FUNCTION_9_1(v38))
    {
      v39 = (uint8_t *)OUTLINED_FUNCTION_246();
      *(_WORD *)v39 = 0;
      _os_log_impl(&dword_1B2494000, v37, (os_log_type_t)v0, "Failed to create speech donation data structures", v39, 2u);
      OUTLINED_FUNCTION_174();
    }
    v40 = v1[91];
    v41 = v1[62];

    v42 = v41;
    v43 = v40;
    goto LABEL_25;
  }
  v4 = v3;
  v5 = OUTLINED_FUNCTION_24_7(objc_allocWithZone(MEMORY[0x1E0D99628]));
  v1[98] = v5;
  if (!v5)
  {
LABEL_18:

    v0 = v4;
    goto LABEL_19;
  }
  v6 = v5;
  v7 = OUTLINED_FUNCTION_24_7(objc_allocWithZone(MEMORY[0x1E0D99610]));
  v1[99] = v7;
  if (!v7)
  {
LABEL_17:

    v0 = v4;
    v4 = v6;
    goto LABEL_18;
  }
  v8 = v7;
  v9 = OUTLINED_FUNCTION_24_7(objc_allocWithZone(MEMORY[0x1E0D995F0]));
  v1[100] = v9;
  if (!v9)
  {
    v10 = v8;
LABEL_16:

    v0 = v4;
    v4 = v6;
    v6 = v10;
    goto LABEL_17;
  }
  v10 = v9;
  v11 = OUTLINED_FUNCTION_24_7(objc_allocWithZone(MEMORY[0x1E0D99608]));
  v1[101] = v11;
  if (!v11)
  {

    v0 = v4;
    v4 = v6;
    v6 = v8;
    goto LABEL_16;
  }
  v186 = v8;
  v187 = v10;
  v188 = v11;
  v193 = v6;
  v12 = v1[95];
  v13 = v206[94];
  v14 = v206[92];
  v15 = v206[87];
  v200 = v206[86];
  v203 = v206[85];
  v185 = objc_msgSend((id)objc_opt_self(), sel_sharedLoggerWithPersistenceConfiguration_, 1);
  v206[102] = v185;
  v16 = sub_1B25CC610();
  OUTLINED_FUNCTION_73_4(v16, &qword_1EEFD73A0);
  v18 = v17;
  v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  v206[103] = v19;
  OUTLINED_FUNCTION_71_6(v13, v12, v19);
  v184 = v18;
  v192 = sub_1B250D2E8(v13);
  v206[104] = v192;
  sub_1B25CC70C();
  v204 = (int *)OUTLINED_FUNCTION_9_4();
  sub_1B25CC700();
  (*(void (**)(uint64_t, uint64_t))(v200 + 8))(v15, v203);
  sub_1B25CC5B0();
  v21 = floor(v20 * 1000.0);
  if ((~*(_QWORD *)&v21 & 0x7FF0000000000000) == 0)
  {
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  if (v21 <= -1.0)
  {
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  if (v21 >= 1.84467441e19)
  {
LABEL_83:
    __break(1u);
LABEL_84:
    swift_once();
LABEL_32:
    v79 = OUTLINED_FUNCTION_147();
    v80 = __swift_project_value_buffer(v79, (uint64_t)qword_1EEFD95E0);
    OUTLINED_FUNCTION_432();
    OUTLINED_FUNCTION_432();
    sub_1B25CC8B0();
    v81 = OUTLINED_FUNCTION_70_2();
    v82 = OUTLINED_FUNCTION_9_1(v81);
    v83 = *(void **)(v12 + 832);
    v205 = *(void **)(v12 + 808);
    v84 = *(void **)(v12 + 800);
    v85 = *(void **)(v12 + 792);
    v86 = *(void **)(v12 + 784);
    v87 = *(void **)(v12 + 776);
    v202 = *(void **)(v12 + 768);
    if (v82)
    {
      v88 = (uint8_t *)OUTLINED_FUNCTION_246();
      v89 = (_QWORD *)OUTLINED_FUNCTION_246();
      *(_DWORD *)v88 = 138412290;
      OUTLINED_FUNCTION_432();
      v90 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v12 + 448) = v90;
      sub_1B25CD12C();
      *v89 = v90;
      OUTLINED_FUNCTION_499();
      OUTLINED_FUNCTION_499();
      _os_log_impl(&dword_1B2494000, v80, (os_log_type_t)v0, "Unable to report speech donation: %@", v88, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7488);
      OUTLINED_FUNCTION_18_6();
      OUTLINED_FUNCTION_174();
    }

    OUTLINED_FUNCTION_499();
    OUTLINED_FUNCTION_499();
    v91 = *(_QWORD *)(v12 + 760);
    v92 = *(_QWORD *)(v12 + 736);
    v93 = *(_QWORD *)(v12 + 728);
    v94 = *(_QWORD *)(v12 + 720);
    v95 = *(_QWORD *)(v12 + 712);
    v96 = *(_QWORD *)(v12 + 496);
    OUTLINED_FUNCTION_499();
    OUTLINED_FUNCTION_249_0(v94, *(uint64_t (**)(uint64_t, uint64_t))(v95 + 8));
    (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v91, v93);
    v42 = v96;
    v43 = v93;
    goto LABEL_25;
  }
  v22 = v206[84];
  v23 = (void (**)(uint64_t, uint64_t))v206[83];
  v24 = v206[82];
  sub_1B25CC6E8();
  sub_1B259B5CC();
  v26 = v25;
  v201 = v27;
  v23[1](v22, v24);
  v28 = (id)MobileGestalt_get_current_device();
  if (!v28)
  {
    __break(1u);
    goto LABEL_89;
  }
  v29 = v28;
  v23 = (void (**)(uint64_t, uint64_t))(id)MobileGestalt_copy_buildVersion_obj();

  v30 = (id)MobileGestalt_get_current_device();
  if (!v30)
  {
LABEL_89:

    __break(1u);
    goto LABEL_90;
  }
  v31 = v30;
  v32 = v206[63];
  deviceClassNumber = MobileGestalt_get_deviceClassNumber();

  v34 = v204[8];
  objc_msgSend(*(id *)(v32 + v34), sel_sampleRate);
  if (v35 == 8000.0)
  {
    v190 = v34;
    v191 = v32;
    HIDWORD(v183) = deviceClassNumber;
    v194 = 0x80000001B25D42C0;
    v195 = v23;
    v181 = 0xD000000000000016;
    v182 = v26;
  }
  else
  {
    if (v35 != 16000.0)
    {
      v134 = v206[91];
      v135 = v206[90];
      v136 = v206[89];
      v137 = v206[88];
      v138 = v206[62];

      OUTLINED_FUNCTION_47_6();
      (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v135, v137);
      v139 = OUTLINED_FUNCTION_676();
      v140(v139);
      v42 = v138;
      v43 = v134;
LABEL_25:
      __swift_storeEnumTagSinglePayload(v42, 1, 1, v43);
      swift_task_dealloc();
      OUTLINED_FUNCTION_36();
      OUTLINED_FUNCTION_48();
      OUTLINED_FUNCTION_95();
      OUTLINED_FUNCTION_72();
      OUTLINED_FUNCTION_114();
      OUTLINED_FUNCTION_148();
      OUTLINED_FUNCTION_211();
      swift_task_dealloc();
      OUTLINED_FUNCTION_84_0();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      ((void (*)(void))v206[1])();
      return;
    }
    v190 = v34;
    v191 = v32;
    HIDWORD(v183) = deviceClassNumber;
    v181 = 0xD000000000000017;
    v182 = v26;
    v194 = 0x80000001B25D4280;
    v195 = v23;
  }
  v44 = v206[80];
  v196 = v206[77];
  v198 = v206[76];
  v45 = v206[75];
  v46 = v206[74];
  v47 = v206[73];
  v48 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v206[105] = v48;
  v49 = objc_msgSend(v48, sel_temporaryDirectory);
  sub_1B25CC508();

  v12 = (unint64_t)v206;
  v206[50] = 0xD000000000000018;
  v206[51] = 0x80000001B25D42A0;
  v189 = *(void (**)(uint64_t, _QWORD, uint64_t))(v46 + 104);
  v189(v45, *MEMORY[0x1E0CAFD60], v47);
  sub_1B24BFEF8();
  sub_1B25CC52C();
  v50 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
  v50(v45, v47);
  swift_bridgeObjectRelease();
  v51 = *(void (**)(uint64_t, uint64_t))(v196 + 8);
  v206[106] = v51;
  v51(v44, v198);
  v52 = (void *)sub_1B25CC4F0();
  v206[57] = 0;
  v53 = objc_msgSend(v48, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v52, 1, 0, v206 + 57);

  v54 = (void *)v206[57];
  if (!v53)
  {
    v69 = v206[81];
    v0 = (void *)v206[76];
    v70 = v54;
    v71 = OUTLINED_FUNCTION_69_6();
    OUTLINED_FUNCTION_68_5(v71, v72, v73, v74, v75, v76, v77, v78, v166, v169, v172, v174, v175, v177, v179, v181, v182, v183, v184,
      (uint64_t)v185,
      (uint64_t)v186,
      (uint64_t)v187,
      (uint64_t)v188,
      (uint64_t)v189,
      v190,
      v191,
      (uint64_t)v192,
      (uint64_t)v193,
      v194,
      v195);
    OUTLINED_FUNCTION_47_6();
    sub_1B25CC4D8();

    swift_willThrow();
    v51(v69, (uint64_t)v0);
LABEL_31:
    if (qword_1EEFD7FF8 == -1)
      goto LABEL_32;
    goto LABEL_84;
  }
  v167 = (uint64_t)v48;
  v170 = (uint64_t)v51;
  v176 = v206[81];
  v173 = v206[79];
  v180 = v206[78];
  v178 = v206[77];
  v197 = v206[76];
  v55 = v206[75];
  v56 = v206[73];
  v207 = 0x6E6F6974616E6F64;
  v208 = 0xE90000000000002DLL;
  sub_1B24FFD30(&qword_1EEFD9600, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
  v206[107] = v57;
  v58 = v54;
  sub_1B25CD570();
  sub_1B25CCAE4();
  swift_bridgeObjectRelease();
  sub_1B25CCAE4();
  v59 = v208;
  v206[52] = v207;
  v206[53] = v59;
  v189(v55, *MEMORY[0x1E0CAFD68], v56);
  sub_1B25CC52C();
  v50(v55, v56);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v178 + 16))(v180, v173, v197);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD9608);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B25DBD60;
  *(_QWORD *)(inited + 32) = sub_1B25CCA18();
  *(_QWORD *)(inited + 40) = v61;
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEE0F8];
  *(_DWORD *)(inited + 48) = 1634492771;
  *(_QWORD *)(inited + 80) = sub_1B25CCA18();
  *(_QWORD *)(inited + 88) = v62;
  objc_msgSend(*(id *)(v191 + v190), sel_sampleRate);
  *(_QWORD *)(inited + 120) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(inited + 96) = v63;
  *(_QWORD *)(inited + 128) = sub_1B25CCA18();
  *(_QWORD *)(inited + 136) = v64;
  *(_QWORD *)(inited + 168) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(inited + 144) = 1;
  sub_1B25CC904();
  v65 = objc_allocWithZone(MEMORY[0x1E0C89A98]);
  v66 = OUTLINED_FUNCTION_676();
  v68 = sub_1B2511610(v66, v67, 3, 0);
  v206[108] = v68;
  v199 = v68;
  v97 = *(_QWORD *)(v206[63] + v204[13]);
  if (v97 >> 62)
  {
    OUTLINED_FUNCTION_33_5();
    v98 = sub_1B25CD474();
    if (v98)
    {
LABEL_37:
      v99 = 0;
      v100 = (void **)(v206 + 59);
      v12 = v97 & 0xC000000000000001;
      do
      {
        v101 = v12 ? (id)MEMORY[0x1B5E252C4](v99, v97) : *(id *)(v97 + 8 * v99 + 32);
        v102 = v101;
        v103 = v99 + 1;
        if (__OFADD__(v99, 1))
          goto LABEL_80;
        *v100 = 0;
        v104 = objc_msgSend(v199, sel_writeFromBuffer_error_, v101, v100);
        v105 = *v100;
        if (!v104)
        {
          v12 = (unint64_t)v206;
          v0 = (void *)v206[81];
          v141 = v206[79];
          v142 = v206[76];
          v143 = v105;
          OUTLINED_FUNCTION_173();
          v144 = OUTLINED_FUNCTION_69_6();
          OUTLINED_FUNCTION_68_5(v144, v145, v146, v147, v148, v149, v150, v151, v167, v170, v173, (uint64_t)(v206 + 52), v176, v178, v180, v181, v182, v183, v184,
            (uint64_t)v185,
            (uint64_t)v186,
            (uint64_t)v187,
            (uint64_t)v188,
            (uint64_t)v189,
            v190,
            v191,
            (uint64_t)v192,
            (uint64_t)v193,
            v194,
            v195);
          OUTLINED_FUNCTION_47_6();
          sub_1B25CC4D8();

          swift_willThrow();
          OUTLINED_FUNCTION_38_4();
          sub_1B2510A30(v168, v141);

          v171(v141, v142);
          v171((uint64_t)v0, v142);
          goto LABEL_31;
        }
        v106 = v105;

        ++v99;
      }
      while (v103 != v98);
    }
  }
  else
  {
    v98 = *(_QWORD *)((v97 & 0xFFFFFFFFFFFFF8) + 0x10);
    OUTLINED_FUNCTION_47_0();
    if (v98)
      goto LABEL_37;
  }
  v107 = v206;
  v108 = v206[94];
  v109 = (uint64_t *)v206[63];
  OUTLINED_FUNCTION_173();
  objc_msgSend(v199, sel_close, v167);
  v110 = v193;
  objc_msgSend(v0, sel_setSpeechSampleDonation_, v193);
  objc_msgSend(v0, sel_setEventMetaData_, v4);
  sub_1B25CC610();
  v111 = sub_1B250D2E8(v108);
  OUTLINED_FUNCTION_70_6((uint64_t)v111, sel_setSdId_);

  objc_msgSend(v4, sel_setDeviceType_, sub_1B2510D4C(SHIDWORD(v183)));
  objc_msgSend(v4, sel_setSystemBuild_, v195);

  objc_msgSend(v193, sel_setDonationID_, v192);
  v112 = *v109;
  v113 = v109[1];
  OUTLINED_FUNCTION_133();
  sub_1B251176C(v112, v113, v193);
  OUTLINED_FUNCTION_69();
  objc_msgSend(v193, sel_setCaptureDate_, (unint64_t)v21);
  v114 = (uint64_t *)((char *)v109 + v204[10]);
  v115 = *v114;
  v116 = v114[1];
  OUTLINED_FUNCTION_133();
  sub_1B25117B0(v115, v116, v193);
  OUTLINED_FUNCTION_69();
  v117 = v201;
  if (v201)
  {
    v118 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v119 = (void *)OUTLINED_FUNCTION_75_5();
    OUTLINED_FUNCTION_365();
    v120 = objc_msgSend(v118, sel_convertLanguageCodeToSchemaLocale_, v119);

    objc_msgSend(v193, sel_setLocale_, v120);
  }
  v121 = *(_QWORD *)(v206[63] + v204[6]);
  v122 = *(_QWORD *)(v121 + 16);
  v123 = MEMORY[0x1E0DEE9D8];
  if (v122)
  {
    v207 = MEMORY[0x1E0DEE9D8];
    OUTLINED_FUNCTION_133();
    sub_1B25CD384();
    v124 = sub_1B2507C08(v121);
    v126 = v125;
    v128 = v127 & 1;
    v12 = v121 + 56;
    while ((v124 & 0x8000000000000000) == 0 && v124 < 1 << *(_BYTE *)(v121 + 32))
    {
      if (((*(_QWORD *)(v12 + (((unint64_t)v124 >> 3) & 0xFFFFFFFFFFFFF8)) >> v124) & 1) == 0)
        goto LABEL_78;
      if (*(_DWORD *)(v121 + 36) != (_DWORD)v126)
        goto LABEL_79;
      objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInt_, 1);
      sub_1B25CD36C();
      sub_1B25CD390();
      sub_1B25CD39C();
      sub_1B25CD378();
      v129 = sub_1B2507888(v124, v126, v128 & 1, v121);
      v124 = v129;
      v126 = v130;
      v128 = v131 & 1;
      if (!--v122)
      {
        sub_1B2500EF0(v129, v130, v131 & 1);
        v123 = v207;
        OUTLINED_FUNCTION_69();
        v107 = v206;
        v110 = v193;
        v117 = v201;
        goto LABEL_54;
      }
    }
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
LABEL_54:
  if (v123 >> 62)
  {
    OUTLINED_FUNCTION_33_5();
    v132 = sub_1B25CD474();
    OUTLINED_FUNCTION_173();
  }
  else
  {
    v132 = *(_QWORD *)((v123 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v132)
    sub_1B2511888(v123, v110);
  else
    v133 = (id)swift_bridgeObjectRelease();
  v152 = v107[63];
  if (*(_QWORD *)(v152 + v204[7]))
  {
    v133 = OUTLINED_FUNCTION_92_2((uint64_t)v133, sel_setAudioCaptureDevice_);
    v152 = v107[63];
  }
  if (*(_BYTE *)(v152 + v204[11]) != 16)
  {
    LOBYTE(v207) = *(_BYTE *)(v152 + v204[11]);
    v133 = objc_msgSend(v110, sel_setAsrTask_, sub_1B2510D70((char *)&v207));
    v152 = v107[63];
  }
  v153 = *(_QWORD *)(v152 + v204[12] + 8);
  if (v153 != 2)
  {
    if (v153)
    {
      v154 = OUTLINED_FUNCTION_676();
      sub_1B2511970(v154, v155);
      objc_msgSend(v110, sel_setEvaluation_, 2);
      if (v153 != 1)
      {
        OUTLINED_FUNCTION_676();
        v156 = (void *)sub_1B25CCA0C();
        goto LABEL_71;
      }
    }
    else
    {
      OUTLINED_FUNCTION_92_2((uint64_t)v133, sel_setEvaluation_);
    }
    v156 = 0;
LABEL_71:
    v157 = OUTLINED_FUNCTION_676();
    sub_1B25115B4(v157, v158);
    objc_msgSend(v110, sel_setExpected_, v156);

  }
  objc_msgSend(v186, sel_setContent_, v187);
  objc_msgSend(v186, sel_setSpeechAudioRecord_, v188);
  v159 = sub_1B25CC550();
  v107[109] = v159;
  v107[110] = v160;
  sub_1B25117F4(v159, v160, v187);
  objc_msgSend(v188, sel_setInteractionId_, v192);
  v161 = objc_msgSend(v188, sel_setAudioCreatedTimestampMs_, (unint64_t)v21);
  if (v117)
  {
    v162 = (void *)OUTLINED_FUNCTION_75_5();
    v161 = (id)OUTLINED_FUNCTION_365();
  }
  else
  {
    v162 = 0;
  }
  OUTLINED_FUNCTION_70_6((uint64_t)v161, sel_setLanguage_);

  sub_1B2511838(v181, v194, v188);
  v163 = objc_msgSend(v0, sel_wrapAsAnyEvent);
  v107[111] = v163;
  if (v163)
  {
    v164 = v163;
    v165 = sub_1B25CCA0C();
    v107[112] = v165;
    v107[10] = v107;
    v107[11] = sub_1B250FE4C;
    v107[44] = OUTLINED_FUNCTION_89_2();
    v107[40] = MEMORY[0x1E0C809B0];
    v107[41] = 0x40000000;
    v107[42] = sub_1B250D364;
    v107[43] = &block_descriptor_3;
    objc_msgSend(v185, sel_reportSiriInstrumentationEvent_forBundleID_completion_, v164, v165, v107 + 40);
    swift_continuation_await();
    return;
  }
LABEL_90:
  __break(1u);
}

uint64_t sub_1B250FE4C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_31_5();
  *(_QWORD *)(v0 + 904) = *(_QWORD *)(v0 + 112);
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B250FED4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;

  v1 = *(void **)(v0 + 888);
  v2 = *(void **)(v0 + 792);

  v3 = objc_msgSend(v2, sel_wrapAsAnyEvent);
  *(_QWORD *)(v0 + 912) = v3;
  if (!v3)
    __break(1u);
  v4 = v3;
  v5 = *(void **)(v0 + 816);
  v6 = sub_1B25CCA0C();
  *(_QWORD *)(v0 + 920) = v6;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_1B250FFF0;
  *(_QWORD *)(v0 + 392) = OUTLINED_FUNCTION_89_2();
  *(_QWORD *)(v0 + 360) = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v0 + 368) = 0x40000000;
  *(_QWORD *)(v0 + 376) = sub_1B250D364;
  *(_QWORD *)(v0 + 384) = &block_descriptor_1;
  objc_msgSend(v5, sel_reportDataUploadEvent_application_completion_, v4, v6, v0 + 360);
  return swift_continuation_await();
}

uint64_t sub_1B250FFF0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_31_5();
  *(_QWORD *)(v0 + 928) = *(_QWORD *)(v0 + 48);
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B2510078()
{
  uint64_t v0;
  void *v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  void *v82;
  void *v83;
  void *v84;
  NSObject *log;
  os_log_t loga;
  uint64_t v87;
  os_log_type_t type[8];
  void (*v89)(uint64_t, uint64_t);
  void (*v90)(uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92[2];

  v92[1] = *MEMORY[0x1E0C80C00];
  v1 = *(void **)(v0 + 912);

  if (qword_1EEFD7FF8 != -1)
    swift_once();
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 824);
  v3 = *(_QWORD *)(v0 + 760);
  v4 = *(_QWORD *)(v0 + 744);
  v5 = *(_QWORD *)(v0 + 728);
  v6 = OUTLINED_FUNCTION_147();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EEFD95E0);
  v2(v4, v3, v5);
  OUTLINED_FUNCTION_82_4();
  OUTLINED_FUNCTION_82_4();
  v7 = sub_1B25CC8B0();
  v8 = sub_1B25CCFF4();
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(void **)(v0 + 864);
  if (v9)
  {
    v91 = *(_QWORD *)(v0 + 736);
    v77 = *(_QWORD *)(v0 + 560);
    v80 = *(_QWORD *)(v0 + 568);
    v11 = *(_QWORD *)(v0 + 552);
    v58 = *(_QWORD *)(v0 + 544);
    v62 = *(_QWORD *)(v0 + 536);
    v66 = *(_QWORD *)(v0 + 576);
    v12 = *(_QWORD *)(v0 + 528);
    v70 = *(_QWORD *)(v0 + 520);
    v73 = *(_QWORD *)(v0 + 512);
    log = v7;
    v13 = OUTLINED_FUNCTION_246();
    v92[0] = OUTLINED_FUNCTION_246();
    *(_DWORD *)v13 = 136446466;
    v14 = sub_1B25CD570();
    *(_QWORD *)(v0 + 464) = sub_1B2504AB0(v14, v15, v92);
    sub_1B25CD12C();
    OUTLINED_FUNCTION_365();
    OUTLINED_FUNCTION_63_4(*(uint64_t (**)(uint64_t, uint64_t))(v91 + 8));
    *(_WORD *)(v13 + 12) = 2080;
    *(_QWORD *)(v0 + 480) = sub_1B25CC598();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v58 + 104))(v11, *MEMORY[0x1E0CAF698], v62);
    sub_1B25CC448();
    sub_1B25CC2E0();
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v12, v73);
    OUTLINED_FUNCTION_71_1(*(uint64_t (**)(uint64_t, uint64_t))(v58 + 8));
    sub_1B25118F8();
    sub_1B24FFD30(&qword_1EEFD9618, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF6C0], MEMORY[0x1E0CAF6B8]);
    sub_1B2511934();
    sub_1B25CD174();
    (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v66, v77);
    *(_QWORD *)(v0 + 488) = sub_1B2504AB0(*(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 440), v92);
    sub_1B25CD12C();
    OUTLINED_FUNCTION_173();
    OUTLINED_FUNCTION_5_6();
    OUTLINED_FUNCTION_5_6();
    _os_log_impl(&dword_1B2494000, log, v8, "Reported speech donation with donationID %{public}s (audio size %s)", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_174();
  }
  v16 = *(_QWORD *)(v0 + 736);
  OUTLINED_FUNCTION_5_6();
  OUTLINED_FUNCTION_63_4(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
  OUTLINED_FUNCTION_5_6();
  OUTLINED_FUNCTION_5_6();

  v89 = *(void (**)(uint64_t, uint64_t))(v0 + 848);
  v17 = *(void **)(v0 + 840);
  v18 = *(void **)(v0 + 816);
  v74 = *(void **)(v0 + 808);
  v78 = *(void **)(v0 + 800);
  v83 = *(void **)(v0 + 832);
  v84 = *(void **)(v0 + 784);
  v81 = *(void **)(v0 + 792);
  v82 = *(void **)(v0 + 776);
  v19 = *(void **)(v0 + 768);
  v20 = *(_QWORD *)(v0 + 760);
  v21 = *(_QWORD *)(v0 + 728);
  loga = *(os_log_t *)(v0 + 712);
  v87 = *(_QWORD *)(v0 + 704);
  *(_QWORD *)type = *(_QWORD *)(v0 + 720);
  v22 = *(_QWORD *)(v0 + 648);
  v23 = *(_QWORD *)(v0 + 632);
  v24 = *(_QWORD *)(v0 + 608);
  v25 = *(_QWORD *)(v0 + 496);
  OUTLINED_FUNCTION_307(v25, v20, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 824));
  __swift_storeEnumTagSinglePayload(v25, 0, 1, v21);
  sub_1B2510A30(v17, v23);

  OUTLINED_FUNCTION_93_2(v26, v27, v28, v29, v30, v31, v32, v33, v51, v54, v57, v61, v65, v69, v74);
  OUTLINED_FUNCTION_43_4(v34, v35, v36, v37, v38, v39, v40, v41, v52, v55, v59, v63, v67, v71, v75, v78);
  OUTLINED_FUNCTION_19_5(v42, v43, v44, v45, v46, v47, v48, v49, v53, v56, v60, v64, v68, v72, v76, v79, v81);

  v89(v23, v24);
  v89(v22, v24);
  ((void (*)(os_log_type_t *, uint64_t))loga[1].isa)(*(os_log_type_t **)type, v87);
  v90(v20, v21);
  swift_task_dealloc();
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_114();
  OUTLINED_FUNCTION_148();
  OUTLINED_FUNCTION_211();
  OUTLINED_FUNCTION_170();
  OUTLINED_FUNCTION_84_0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B25105A8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  os_log_type_t v25;
  void *v26;
  int v27;
  _QWORD *v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  void *v75;

  OUTLINED_FUNCTION_7_6();
  OUTLINED_FUNCTION_293_1();

  OUTLINED_FUNCTION_43_4(v7, v8, v9, v10, v11, v12, v13, v14, v50, v53, v56, v59, v62, v65, v68, v71);
  OUTLINED_FUNCTION_19_5(v15, v16, v17, v18, v19, v20, v21, v22, v51, v54, v57, v60, v63, v66, v69, v72, v74);
  OUTLINED_FUNCTION_55_3();

  OUTLINED_FUNCTION_67_4((uint64_t)v3);
  OUTLINED_FUNCTION_67_4((uint64_t)v2);
  if (qword_1EEFD7FF8 != -1)
    swift_once();
  v23 = OUTLINED_FUNCTION_147();
  v24 = (void *)__swift_project_value_buffer(v23, (uint64_t)qword_1EEFD95E0);
  OUTLINED_FUNCTION_262_0();
  OUTLINED_FUNCTION_262_0();
  sub_1B25CC8B0();
  v25 = OUTLINED_FUNCTION_70_2();
  OUTLINED_FUNCTION_186_0(v25);
  OUTLINED_FUNCTION_17_7();
  if (v27)
  {
    OUTLINED_FUNCTION_15_4();
    v28 = (_QWORD *)OUTLINED_FUNCTION_246();
    OUTLINED_FUNCTION_26_5((int)v28, v29, v30, v31, v32, v33, v34, v35, 5.7779e-34, v52, v55, v58, v61);
    v36 = _swift_stdlib_bridgeErrorToNSError();
    OUTLINED_FUNCTION_14_4(v36);
    *v28 = v6;
    OUTLINED_FUNCTION_69_4();
    OUTLINED_FUNCTION_69_4();
    OUTLINED_FUNCTION_41_5(&dword_1B2494000, v37, v38, "Unable to report speech donation: %@");
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7488);
    OUTLINED_FUNCTION_18_6();
    OUTLINED_FUNCTION_174();
  }

  OUTLINED_FUNCTION_19_5(v39, v40, v41, v42, v43, v44, v45, v46, v52, v55, v58, v61, v64, v67, v70, v73, v75);
  OUTLINED_FUNCTION_69_4();
  OUTLINED_FUNCTION_69_4();
  v47 = *(_QWORD *)(v0 + 760);
  v48 = *(_QWORD *)(v0 + 736);
  OUTLINED_FUNCTION_69_4();
  OUTLINED_FUNCTION_57_2();
  OUTLINED_FUNCTION_249_0(v47, *(uint64_t (**)(uint64_t, uint64_t))(v48 + 8));
  OUTLINED_FUNCTION_2_5();
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_114();
  OUTLINED_FUNCTION_148();
  OUTLINED_FUNCTION_211();
  OUTLINED_FUNCTION_170();
  OUTLINED_FUNCTION_84_0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_11_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B25107EC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  os_log_type_t v25;
  void *v26;
  int v27;
  _QWORD *v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  void *v75;

  OUTLINED_FUNCTION_7_6();
  OUTLINED_FUNCTION_293_1();

  OUTLINED_FUNCTION_43_4(v7, v8, v9, v10, v11, v12, v13, v14, v50, v53, v56, v59, v62, v65, v68, v71);
  OUTLINED_FUNCTION_19_5(v15, v16, v17, v18, v19, v20, v21, v22, v51, v54, v57, v60, v63, v66, v69, v72, v74);
  OUTLINED_FUNCTION_55_3();

  OUTLINED_FUNCTION_67_4((uint64_t)v3);
  OUTLINED_FUNCTION_67_4((uint64_t)v2);
  if (qword_1EEFD7FF8 != -1)
    swift_once();
  v23 = OUTLINED_FUNCTION_147();
  v24 = (void *)__swift_project_value_buffer(v23, (uint64_t)qword_1EEFD95E0);
  OUTLINED_FUNCTION_262_0();
  OUTLINED_FUNCTION_262_0();
  sub_1B25CC8B0();
  v25 = OUTLINED_FUNCTION_70_2();
  OUTLINED_FUNCTION_186_0(v25);
  OUTLINED_FUNCTION_17_7();
  if (v27)
  {
    OUTLINED_FUNCTION_15_4();
    v28 = (_QWORD *)OUTLINED_FUNCTION_246();
    OUTLINED_FUNCTION_26_5((int)v28, v29, v30, v31, v32, v33, v34, v35, 5.7779e-34, v52, v55, v58, v61);
    v36 = _swift_stdlib_bridgeErrorToNSError();
    OUTLINED_FUNCTION_14_4(v36);
    *v28 = v6;
    OUTLINED_FUNCTION_69_4();
    OUTLINED_FUNCTION_69_4();
    OUTLINED_FUNCTION_41_5(&dword_1B2494000, v37, v38, "Unable to report speech donation: %@");
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7488);
    OUTLINED_FUNCTION_18_6();
    OUTLINED_FUNCTION_174();
  }

  OUTLINED_FUNCTION_19_5(v39, v40, v41, v42, v43, v44, v45, v46, v52, v55, v58, v61, v64, v67, v70, v73, v75);
  OUTLINED_FUNCTION_69_4();
  OUTLINED_FUNCTION_69_4();
  v47 = *(_QWORD *)(v0 + 760);
  v48 = *(_QWORD *)(v0 + 736);
  OUTLINED_FUNCTION_69_4();
  OUTLINED_FUNCTION_57_2();
  OUTLINED_FUNCTION_249_0(v47, *(uint64_t (**)(uint64_t, uint64_t))(v48 + 8));
  OUTLINED_FUNCTION_2_5();
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_114();
  OUTLINED_FUNCTION_148();
  OUTLINED_FUNCTION_211();
  OUTLINED_FUNCTION_170();
  OUTLINED_FUNCTION_84_0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_11_3(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1B2510A30(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  unsigned int v10;
  id v11;
  id v12;
  void *v13;
  unsigned int v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29[2];

  v29[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = sub_1B25CC538();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (void *)sub_1B25CC4F0();
  v29[0] = 0;
  v10 = objc_msgSend(a1, sel_removeItemAtURL_error_, v9, v29);

  v11 = v29[0];
  if (v10
    && (v12 = v29[0],
        v13 = (void *)sub_1B25CC4F0(),
        v29[0] = 0,
        v14 = objc_msgSend(a1, sel_removeItemAtURL_error_, v13, v29),
        v13,
        v11 = v29[0],
        v14))
  {
    v15 = v29[0];
  }
  else
  {
    v27 = v11;
    v16 = v11;
    v17 = sub_1B25CC4D8();

    swift_willThrow();
    if (qword_1EEFD7FF8 != -1)
      swift_once();
    v18 = sub_1B25CC8C8();
    __swift_project_value_buffer(v18, (uint64_t)qword_1EEFD95E0);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
    v19 = sub_1B25CC8B0();
    v20 = sub_1B25CCFDC();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = (void *)swift_slowAlloc();
      v29[0] = v22;
      *(_DWORD *)v21 = 136315138;
      v27 = (id)v17;
      sub_1B24FFD30(&qword_1EEFD9648, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      v23 = sub_1B25CD570();
      v28 = sub_1B2504AB0(v23, v24, (uint64_t *)v29);
      sub_1B25CD12C();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      _os_log_impl(&dword_1B2494000, v19, v20, "Unable to remove %s after donation", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B5E262B4](v22, -1, -1);
      MEMORY[0x1B5E262B4](v21, -1, -1);
      v25 = v27;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      v25 = (void *)v17;
    }

  }
}

uint64_t sub_1B2510D4C(int a1)
{
  if ((a1 - 1) > 0xA)
    return 0;
  else
    return dword_1B25DCE9C[a1 - 1];
}

uint64_t sub_1B2510D70(char *a1)
{
  return dword_1B25DCEC8[*a1];
}

void SpeechDonation.donorBundleID.getter()
{
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_0();
}

uint64_t SpeechDonation.recordingDate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_9_4();
  OUTLINED_FUNCTION_24_0();
  v0 = OUTLINED_FUNCTION_22_0();
  return OUTLINED_FUNCTION_21_0(v0, v1, v2, v3);
}

uint64_t SpeechDonation.speechAttributes.getter()
{
  OUTLINED_FUNCTION_9_4();
  return swift_bridgeObjectRetain();
}

id SpeechDonation.audioSource.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)(v1 + *(int *)(OUTLINED_FUNCTION_9_4() + 28));
  *a1 = v3;
  return v3;
}

id SpeechDonation.audioFormat.getter()
{
  uint64_t v0;

  return *(id *)(v0 + *(int *)(OUTLINED_FUNCTION_9_4() + 32));
}

uint64_t SpeechDonation.locale.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_9_4();
  OUTLINED_FUNCTION_23_0();
  v0 = OUTLINED_FUNCTION_22_0();
  return OUTLINED_FUNCTION_21_0(v0, v1, v2, v3);
}

void SpeechDonation.transcription.getter()
{
  OUTLINED_FUNCTION_9_4();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_0();
}

void SpeechDonation.taskHint.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_9_4() + 44));
  OUTLINED_FUNCTION_0();
}

uint64_t SpeechDonation.evaluation.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(OUTLINED_FUNCTION_9_4() + 48));
  v4 = *v3;
  v5 = v3[1];
  *a1 = *v3;
  a1[1] = v5;
  return sub_1B2511984(v4, v5);
}

void sub_1B2510EF0()
{
  OUTLINED_FUNCTION_58_3();
  OUTLINED_FUNCTION_0();
}

void sub_1B2510F0C()
{
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_58_3();
  sub_1B25CD6CC();
  OUTLINED_FUNCTION_1();
}

uint64_t OUTLINED_FUNCTION_94_3()
{
  return 1;
}

uint64_t sub_1B2510F48()
{
  sub_1B25CD6A8();
  sub_1B25CD6B4();
  return sub_1B25CD6CC();
}

void SpeechDonation.SpeechAttribute.hash(into:)()
{
  OUTLINED_FUNCTION_58_3();
  OUTLINED_FUNCTION_0();
}

void SpeechDonation.SpeechAttribute.hashValue.getter()
{
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_58_3();
  sub_1B25CD6CC();
  OUTLINED_FUNCTION_1();
}

void sub_1B2510FD0()
{
  SpeechDonation.SpeechAttribute.hashValue.getter();
}

void sub_1B2510FE4()
{
  SpeechDonation.SpeechAttribute.hash(into:)();
}

id static SpeechDonation.AudioSource.captureDevice(_:)@<X0>(id a1@<X0>, id *a2@<X8>)
{
  *a2 = a1;
  return a1;
}

void sub_1B2511000(void *a1, void *a2)
{
  id v4;
  id v5;

  OUTLINED_FUNCTION_73_4((uint64_t)a1, &qword_1ED36D030);
  v4 = a1;
  v5 = a2;
  sub_1B25CD0D8();

  OUTLINED_FUNCTION_262();
}

void sub_1B2511068(void **a1, void **a2)
{
  sub_1B2511000(*a1, *a2);
}

void static SpeechDonation.AudioSource.== infix(_:_:)(void **a1, void **a2)
{
  void *v2;
  void *v3;
  id v4;
  id v5;

  v2 = *a1;
  v3 = *a2;
  OUTLINED_FUNCTION_73_4((uint64_t)a1, &qword_1ED36D030);
  v4 = v2;
  v5 = v3;
  sub_1B25CD0D8();

  OUTLINED_FUNCTION_262();
}

void static SpeechDonation.TranscriptionEvaluation.accurate.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

double static SpeechDonation.TranscriptionEvaluation.inaccurate.getter@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  *a1 = xmmword_1B25DCBE0;
  return result;
}

uint64_t static SpeechDonation.TranscriptionEvaluation.expected(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2511100(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (!a2)
  {
    if (!a4)
      return OUTLINED_FUNCTION_94_3();
    return 0;
  }
  if (a2 == 1)
  {
    if (a4 == 1)
      return OUTLINED_FUNCTION_94_3();
    return 0;
  }
  if (a4 < 2)
    return 0;
  if (a1 != a3 || a2 != a4)
    return sub_1B25CD5D0();
  return OUTLINED_FUNCTION_94_3();
}

uint64_t sub_1B2511148(uint64_t *a1, uint64_t a2)
{
  return sub_1B2511100(*a1, a1[1], *(_QWORD *)a2, *(_QWORD *)(a2 + 8));
}

BOOL static SpeechDonation.TranscriptionEvaluation.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  BOOL v5;

  v3 = a1[1];
  v4 = a2[1];
  if (v3)
  {
    if (v3 == 1)
    {
      if (v4 != 1)
        return 0;
    }
    else
    {
      if (v4 < 2)
        return 0;
      v5 = *a1 == *a2 && v3 == v4;
      if (!v5 && (sub_1B25CD5D0() & 1) == 0)
        return 0;
    }
    return 1;
  }
  return !v4;
}

void SpeechDonation.init(donorBundleID:recordingDate:audioFormat:audioData:locale:transcription:evaluation:speechAttributes:taskHint:audioSource:donorReferenceID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t *a22,uint64_t a23,uint64_t a24,char a25)
{
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[3];

  OUTLINED_FUNCTION_59_0();
  v39 = v26;
  v40 = v27;
  v38 = OUTLINED_FUNCTION_23_0();
  v28 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38, v29);
  OUTLINED_FUNCTION_42_3();
  v30 = OUTLINED_FUNCTION_24_0();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30, v32);
  OUTLINED_FUNCTION_41_1();
  v35 = v34 - v33;
  swift_bridgeObjectRelease();
  v36 = *a22;
  v37 = a22[1];
  if ((a25 & 1) == 0)
    sub_1B255CC14(a24, (char *)v41);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v35, v40, v30);
  OUTLINED_FUNCTION_307(v25, v39, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 16));
  v41[0] = v36;
  v41[1] = v37;
  SpeechDonation.init(donorBundleID:recordingDate:audioFormat:audioData:locale:transcription:evaluation:speechAttributes:taskHint:audioSource:)();
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v39, v38);
  OUTLINED_FUNCTION_249_0(v40, *(uint64_t (**)(uint64_t, uint64_t))(v31 + 8));
  OUTLINED_FUNCTION_7_1();
}

void SpeechDonation.init(donorBundleID:recordingDate:audioBuffers:locale:transcription:evaluation:speechAttributes:taskHint:audioSource:donorReferenceID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t *a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t *v60;

  OUTLINED_FUNCTION_59_0();
  v26 = v25;
  v54 = v27;
  v55 = v28;
  v56 = v30;
  v57 = v29;
  v52 = v31;
  v53 = v32;
  v50 = v34;
  v51 = v33;
  v35 = OUTLINED_FUNCTION_23_0();
  v36 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35, v37);
  OUTLINED_FUNCTION_41_1();
  v40 = v39 - v38;
  v41 = OUTLINED_FUNCTION_24_0();
  v42 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41, v43);
  OUTLINED_FUNCTION_42_3();
  swift_bridgeObjectRelease();
  v44 = *(_BYTE **)v26;
  v48 = *(uint64_t **)(v26 + 8);
  v49 = *a24;
  if ((a23 & 1) != 0)
  {
    v45 = 16;
  }
  else
  {
    sub_1B255CC14(a22, (char *)&v59);
    v45 = (char)v59;
  }
  v46 = v57;
  OUTLINED_FUNCTION_71_6(v24, v57, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v42 + 16));
  v47 = v56;
  OUTLINED_FUNCTION_307(v40, v56, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 16));
  v59 = v44;
  v60 = v48;
  HIBYTE(v58) = v45;
  OUTLINED_FUNCTION_48_5();
  SpeechDonation.init(donorBundleID:recordingDate:audioBuffers:locale:transcription:evaluation:speechAttributes:taskHint:audioSource:)(v51, v52, v24, v53, v40, v54, v55, (uint64_t)&v59, a21, v49, a21, v50, v51, v52, v53, v54, v55, v56, v57,
    v49,
    v58,
    v59,
    v60);
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v47, v35);
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v46, v41);
  OUTLINED_FUNCTION_7_1();
}

id sub_1B251149C(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  void *v4;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  id v13;
  id v14;
  uint64_t v15;
  id v17[2];

  v4 = v3;
  v17[1] = *(id *)MEMORY[0x1E0C80C00];
  v8 = (void *)sub_1B25CC4F0();
  v17[0] = 0;
  v9 = objc_msgSend(v4, sel_initForReading_commonFormat_interleaved_error_, v8, a2, a3 & 1, v17);

  v10 = v17[0];
  if (v9)
  {
    v11 = sub_1B25CC538();
    v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
    v13 = v10;
    v12(a1, v11);
  }
  else
  {
    v14 = v17[0];
    sub_1B25CC4D8();

    swift_willThrow();
    v15 = sub_1B25CC538();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(a1, v15);
  }
  return v9;
}

uint64_t sub_1B25115B4(uint64_t a1, unint64_t a2)
{
  if (a2 != 2)
    return sub_1B25115C4(a1, a2);
  return a1;
}

uint64_t sub_1B25115C4(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 2)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t type metadata accessor for SpeechDonation()
{
  uint64_t result;

  result = qword_1EEFD9630;
  if (!qword_1EEFD9630)
    return swift_getSingletonMetadata();
  return result;
}

id sub_1B2511610(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  void *v4;
  void *v5;
  void *v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  id v15;
  id v16;
  uint64_t v17;
  id v19[2];

  v5 = v4;
  v19[1] = *(id *)MEMORY[0x1E0C80C00];
  v9 = (void *)sub_1B25CC4F0();
  v10 = (void *)sub_1B25CC8EC();
  swift_bridgeObjectRelease();
  v19[0] = 0;
  v11 = objc_msgSend(v5, sel_initForWriting_settings_commonFormat_interleaved_error_, v9, v10, a3, a4 & 1, v19);

  v12 = v19[0];
  if (v11)
  {
    v13 = sub_1B25CC538();
    v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
    v15 = v12;
    v14(a1, v13);
  }
  else
  {
    v16 = v19[0];
    sub_1B25CC4D8();

    swift_willThrow();
    v17 = sub_1B25CC538();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a1, v17);
  }
  return v11;
}

void sub_1B251176C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)sub_1B25CCA0C();
  objc_msgSend(a3, sel_setDonorBundleID_, v4);

}

void sub_1B25117B0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)sub_1B25CCA0C();
  objc_msgSend(a3, sel_setTranscription_, v4);

}

void sub_1B25117F4(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)sub_1B25CC580();
  objc_msgSend(a3, sel_setDataPayload_, v4);

}

void sub_1B2511838(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)sub_1B25CCA0C();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setCodec_, v4);

}

void sub_1B2511888(uint64_t a1, void *a2)
{
  id v3;

  sub_1B24B3050(0, (unint64_t *)&qword_1EEFD7478);
  v3 = (id)sub_1B25CCB98();
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setAttributes_, v3);

}

unint64_t sub_1B25118F8()
{
  unint64_t result;

  result = qword_1EEFD9610;
  if (!qword_1EEFD9610)
  {
    result = MEMORY[0x1B5E261DC](MEMORY[0x1E0DEB460], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1EEFD9610);
  }
  return result;
}

unint64_t sub_1B2511934()
{
  unint64_t result;

  result = qword_1EEFD9620;
  if (!qword_1EEFD9620)
  {
    result = MEMORY[0x1B5E261DC](MEMORY[0x1E0DEDCA0], MEMORY[0x1E0DEDC60]);
    atomic_store(result, (unint64_t *)&qword_1EEFD9620);
  }
  return result;
}

uint64_t sub_1B2511970(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 2)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1B2511984(uint64_t a1, unint64_t a2)
{
  if (a2 != 2)
    return sub_1B2511970(a1, a2);
  return a1;
}

unint64_t sub_1B2511998()
{
  unint64_t result;

  result = qword_1EEFD9628;
  if (!qword_1EEFD9628)
  {
    result = MEMORY[0x1B5E261DC](&protocol conformance descriptor for SpeechDonation.SpeechAttribute, &type metadata for SpeechDonation.SpeechAttribute);
    atomic_store(result, (unint64_t *)&qword_1EEFD9628);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for SpeechDonation(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  _OWORD *v31;
  unint64_t v32;
  uint64_t v33;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v33 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1B25CC5C8();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[7];
    *(_QWORD *)((char *)v4 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
    v14 = *(void **)((char *)a2 + v13);
    *(_QWORD *)((char *)v4 + v13) = v14;
    v15 = a3[8];
    v16 = a3[9];
    v17 = *(void **)((char *)a2 + v15);
    *(_QWORD *)((char *)v4 + v15) = v17;
    v18 = (char *)v4 + v16;
    v19 = (char *)a2 + v16;
    v20 = sub_1B25CC6F4();
    v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
    swift_bridgeObjectRetain();
    v22 = v14;
    v23 = v17;
    v21(v18, v19, v20);
    v24 = a3[10];
    v25 = a3[11];
    v26 = (_QWORD *)((char *)v4 + v24);
    v27 = (_QWORD *)((char *)a2 + v24);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    *((_BYTE *)v4 + v25) = *((_BYTE *)a2 + v25);
    v29 = a3[12];
    v30 = (char *)v4 + v29;
    v31 = (_OWORD *)((char *)a2 + v29);
    v32 = *(_QWORD *)((char *)a2 + v29 + 8);
    swift_bridgeObjectRetain();
    if (v32 <= 2)
    {
      *(_OWORD *)v30 = *v31;
    }
    else
    {
      *(_QWORD *)v30 = *(_QWORD *)v31;
      *((_QWORD *)v30 + 1) = v32;
      swift_bridgeObjectRetain();
    }
    *(_QWORD *)((char *)v4 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for SpeechDonation(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_1B25CC5C8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();

  v6 = a1 + a2[9];
  v7 = sub_1B25CC6F4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[12] + 8) >= 3uLL)
    swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SpeechDonation(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  _OWORD *v30;
  unint64_t v31;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1B25CC5C8();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v13 = *(void **)((char *)a2 + v12);
  *(_QWORD *)((char *)a1 + v12) = v13;
  v14 = a3[8];
  v15 = a3[9];
  v16 = *(void **)((char *)a2 + v14);
  *(_QWORD *)((char *)a1 + v14) = v16;
  v17 = (char *)a1 + v15;
  v18 = (char *)a2 + v15;
  v19 = sub_1B25CC6F4();
  v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  swift_bridgeObjectRetain();
  v21 = v13;
  v22 = v16;
  v20(v17, v18, v19);
  v23 = a3[10];
  v24 = a3[11];
  v25 = (_QWORD *)((char *)a1 + v23);
  v26 = (_QWORD *)((char *)a2 + v23);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  *((_BYTE *)a1 + v24) = *((_BYTE *)a2 + v24);
  v28 = a3[12];
  v29 = (char *)a1 + v28;
  v30 = (_OWORD *)((char *)a2 + v28);
  v31 = *(_QWORD *)((char *)a2 + v28 + 8);
  swift_bridgeObjectRetain();
  if (v31 <= 2)
  {
    *(_OWORD *)v29 = *v30;
  }
  else
  {
    *(_QWORD *)v29 = *(_QWORD *)v30;
    *((_QWORD *)v29 + 1) = v31;
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SpeechDonation(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1B25CC5C8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[7];
  v11 = *(void **)((char *)a1 + v10);
  v12 = *(void **)((char *)a2 + v10);
  *(_QWORD *)((char *)a1 + v10) = v12;
  v13 = v12;

  v14 = a3[8];
  v15 = *(void **)((char *)a2 + v14);
  v16 = *(void **)((char *)a1 + v14);
  *(_QWORD *)((char *)a1 + v14) = v15;
  v17 = v15;

  v18 = a3[9];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_1B25CC6F4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  v22 = a3[10];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  v25 = a3[12];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  v28 = *(_QWORD *)((char *)a1 + v25 + 8);
  v29 = *(_QWORD *)((char *)a2 + v25 + 8);
  if (v28 == 2)
  {
    if (v29 > 2)
      goto LABEL_8;
    goto LABEL_11;
  }
  if (v29 == 2)
  {
    sub_1B2511F88((uint64_t)v26);
    goto LABEL_11;
  }
  if (v28 >= 2)
  {
    if (v29 >= 2)
    {
      *v26 = *v27;
      v26[1] = v27[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    sub_1B2511F54((uint64_t)v26);
    goto LABEL_11;
  }
  if (v29 < 2)
  {
LABEL_11:
    *(_OWORD *)v26 = *(_OWORD *)v27;
    goto LABEL_12;
  }
LABEL_8:
  *v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
LABEL_12:
  *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B2511F54(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEA968] - 8) + 8))();
  return a1;
}

uint64_t sub_1B2511F88(uint64_t a1)
{
  destroy for SpeechDonation.TranscriptionEvaluation(a1);
  return a1;
}

_OWORD *initializeWithTake for SpeechDonation(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1B25CC5C8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v10) = *(_QWORD *)((char *)a2 + v10);
  v11 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_1B25CC6F4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  *((_BYTE *)a1 + v15) = *((_BYTE *)a2 + v15);
  v16 = a3[13];
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  *(_QWORD *)((char *)a1 + v16) = *(_QWORD *)((char *)a2 + v16);
  return a1;
}

_QWORD *assignWithTake for SpeechDonation(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1B25CC5C8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  v11 = a3[7];
  v12 = *(void **)((char *)a1 + v11);
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);

  v13 = a3[8];
  v14 = *(void **)((char *)a1 + v13);
  *(_QWORD *)((char *)a1 + v13) = *(_QWORD *)((char *)a2 + v13);

  v15 = a3[9];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_1B25CC6F4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[10];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v23 = *v21;
  v22 = v21[1];
  *v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  v24 = a3[12];
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  v25 = (_QWORD *)((char *)a1 + v24);
  v26 = (_QWORD *)((char *)a2 + v24);
  v27 = *(_QWORD *)((char *)a1 + v24 + 8);
  if (v27 != 2)
  {
    v28 = v26[1];
    if (v28 == 2)
    {
      sub_1B2511F88((uint64_t)a1 + v24);
    }
    else if (v27 >= 2)
    {
      if (v28 >= 2)
      {
        *v25 = *v26;
        v25[1] = v28;
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
      sub_1B2511F54((uint64_t)a1 + v24);
    }
  }
  *(_OWORD *)v25 = *(_OWORD *)v26;
LABEL_8:
  *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SpeechDonation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1B2512210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_262();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_24_0();
    if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    {
      v7 = v6;
      v8 = *(int *)(a3 + 20);
    }
    else
    {
      v7 = OUTLINED_FUNCTION_23_0();
      v8 = *(int *)(a3 + 36);
    }
    __swift_getEnumTagSinglePayload(a1 + v8, a2, v7);
  }
}

uint64_t storeEnumTagSinglePayload for SpeechDonation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B25122A4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_24_0();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 20);
    }
    else
    {
      v9 = OUTLINED_FUNCTION_23_0();
      v10 = *(int *)(a4 + 36);
    }
    return __swift_storeEnumTagSinglePayload(v5 + v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1B2512330()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1B25CC5C8();
  if (v1 <= 0x3F)
  {
    result = sub_1B25CC6F4();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void type metadata accessor for SpeechDonation.SpeechAttribute()
{
  OUTLINED_FUNCTION_239_0();
}

void type metadata accessor for SpeechDonation.AudioSource()
{
  OUTLINED_FUNCTION_239_0();
}

unint64_t destroy for SpeechDonation.TranscriptionEvaluation(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 2)
    return swift_bridgeObjectRelease();
  return result;
}

void _s6Speech14SpeechDonationV23TranscriptionEvaluationVwCP_0(_OWORD *a1, _QWORD *a2)
{
  unint64_t v3;

  v3 = a2[1];
  if (v3 >= 2)
    OUTLINED_FUNCTION_85_3(v3, a2);
  else
    *a1 = *(_OWORD *)a2;
  OUTLINED_FUNCTION_0();
}

_QWORD *assignWithCopy for SpeechDonation.TranscriptionEvaluation(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] >= 2uLL)
  {
    if (v4 >= 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1B2511F54((uint64_t)a1);
    goto LABEL_6;
  }
  if (v4 < 2)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithTake for SpeechDonation.TranscriptionEvaluation(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  if (a1[1] >= 2uLL)
  {
    v4 = a2[1];
    if (v4 >= 2)
    {
      *a1 = *a2;
      a1[1] = v4;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1B2511F54((uint64_t)a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for SpeechDonation.TranscriptionEvaluation(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 > 0x7FFFFFFD && *(_BYTE *)(a1 + 16))
    {
      v2 = *(_DWORD *)a1 + 2147483645;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 2;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SpeechDonation.TranscriptionEvaluation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = a2 - 2147483646;
    *(_QWORD *)(result + 8) = 0;
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

void type metadata accessor for SpeechDonation.TranscriptionEvaluation()
{
  OUTLINED_FUNCTION_239_0();
}

unint64_t sub_1B251260C(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

void sub_1B2512624(_OWORD *a1, _QWORD *a2)
{
  unint64_t v3;

  v3 = a2[1];
  if (v3 < 0xFFFFFFFF)
    *a1 = *(_OWORD *)a2;
  else
    OUTLINED_FUNCTION_85_3(v3, a2);
  OUTLINED_FUNCTION_0();
}

_QWORD *sub_1B2512660(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B2512700(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B2512760(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t sub_1B25127B4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

uint64_t sub_1B2512810(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1B2512828(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

void type metadata accessor for SpeechDonation.TranscriptionEvaluation.EvaluationCase()
{
  OUTLINED_FUNCTION_239_0();
}

void **sub_1B2512854(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void **sub_1B2512880(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a2;
  v4 = *a1;
  *a1 = *a2;
  v5 = v3;

  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

void **sub_1B25128C0(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t sub_1B25128F0(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 8))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1B2512930(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 8) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for SpeechDonation.AudioSource.SourceCase()
{
  OUTLINED_FUNCTION_239_0();
}

uint64_t getEnumTagSinglePayload for PhoneticTranscriber.TranscriptionFormat(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t sub_1B25129CC(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B2512A0C + 4 * byte_1B25DCBF0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B2512A2C + 4 * byte_1B25DCBF5[v4]))();
}

_BYTE *sub_1B2512A0C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B2512A2C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B2512A34(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B2512A3C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B2512A44(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B2512A4C(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for SpeechDonation.SpeechAttribute.AttributeCase()
{
  OUTLINED_FUNCTION_239_0();
}

unint64_t sub_1B2512A68()
{
  unint64_t result;

  result = qword_1EEFD9640;
  if (!qword_1EEFD9640)
  {
    result = MEMORY[0x1B5E261DC](&unk_1B25DCE20, &unk_1E647B488);
    atomic_store(result, (unint64_t *)&qword_1EEFD9640);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_5()
{
  uint64_t v0;
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v1, 1, 1, v0);
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_5_6()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1B24AB6DC(v1, v0);
}

uint64_t OUTLINED_FUNCTION_7_6()
{
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_9_4()
{
  return type metadata accessor for SpeechDonation();
}

uint64_t OUTLINED_FUNCTION_14_4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 448) = a1;
  return sub_1B25CD12C();
}

uint64_t OUTLINED_FUNCTION_15_4()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_18_6()
{
  return swift_arrayDestroy();
}

void OUTLINED_FUNCTION_19_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17)
{

}

uint64_t OUTLINED_FUNCTION_23_7()
{
  return swift_bridgeObjectRelease();
}

id OUTLINED_FUNCTION_24_7(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, (SEL)(v1 + 3528));
}

id OUTLINED_FUNCTION_26_5(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, float a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  void *v13;
  float *v14;

  *v14 = a9;
  return v13;
}

uint64_t OUTLINED_FUNCTION_29_6()
{
  return sub_1B25CCBD4();
}

void OUTLINED_FUNCTION_31_5()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)(v1 - 8);
  *v2 = *v0;
  *v2 = *v0;
}

void OUTLINED_FUNCTION_32_6(uint64_t a1@<X8>)
{

}

uint64_t OUTLINED_FUNCTION_33_5()
{
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_38_4()
{
  uint64_t v0;

}

void OUTLINED_FUNCTION_41_5(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 0xCu);
}

void OUTLINED_FUNCTION_42_6()
{
  void *v0;

}

void OUTLINED_FUNCTION_43_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{

}

uint64_t OUTLINED_FUNCTION_47_6()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_55_3()
{
  void *v0;
  uint64_t v1;

  sub_1B2510A30(v0, v1);
}

uint64_t OUTLINED_FUNCTION_57_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_58_3()
{
  return sub_1B25CD6B4();
}

uint64_t OUTLINED_FUNCTION_63_4@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 96) = a1;
  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_64_5()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 200) + 8))(*(_QWORD *)(v0 - 184), *(_QWORD *)(v0 - 192));
}

uint64_t OUTLINED_FUNCTION_65_5()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 256) + 8))(*(_QWORD *)(v0 - 224), *(_QWORD *)(v0 - 248));
}

uint64_t OUTLINED_FUNCTION_67_4(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

void OUTLINED_FUNCTION_68_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30)
{

}

uint64_t OUTLINED_FUNCTION_69_6()
{
  return swift_bridgeObjectRelease();
}

id OUTLINED_FUNCTION_70_6(uint64_t a1, const char *a2)
{
  uint64_t v2;
  void *v3;

  return objc_msgSend(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_71_6@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

id OUTLINED_FUNCTION_73_5()
{
  uint64_t v0;
  void *v1;

  return objc_msgSend(v1, (SEL)(v0 + 1566));
}

uint64_t OUTLINED_FUNCTION_75_5()
{
  return sub_1B25CCA0C();
}

uint64_t OUTLINED_FUNCTION_82_4()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1B249B498(v0, v1);
}

uint64_t OUTLINED_FUNCTION_85_3(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;

  *v2 = *a2;
  v2[1] = a1;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_89_2()
{
  return swift_continuation_init();
}

id OUTLINED_FUNCTION_91_4()
{
  void *v0;

  return v0;
}

id OUTLINED_FUNCTION_92_2(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2, 1);
}

void OUTLINED_FUNCTION_93_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{

}

uint64_t sub_1B2512D74(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t (*v51)(uint64_t, uint64_t, uint64_t);
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  _QWORD *v61;
  id v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  char *v73;
  void *v74;
  char *v75;
  uint64_t v76;
  id v77;
  uint64_t v79;
  id v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96[6];

  v90 = a8;
  v94 = a2;
  v92 = a9;
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD8938);
  v93 = *(_QWORD *)(v88 - 8);
  MEMORY[0x1E0C80A78](v88, v15);
  v86 = v16;
  v87 = (uint64_t)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD71C0);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v17, v18);
  OUTLINED_FUNCTION_41_1();
  v91 = v20 - v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6E90);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v21, v22);
  OUTLINED_FUNCTION_41_1();
  v25 = v24 - v23;
  v26 = OUTLINED_FUNCTION_37_4();
  v89 = *(_QWORD *)(v26 - 8);
  v28 = MEMORY[0x1E0C80A78](v26, v27);
  v85 = (char *)&v79 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x1E0C80A78](v28, v30);
  v33 = (char *)&v79 - v32;
  v84 = v34;
  MEMORY[0x1E0C80A78](v31, v35);
  v95 = (uint64_t)&v79 - v36;
  swift_defaultActor_initialize();
  *(_QWORD *)(v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_pendingNewModules) = 0;
  v37 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_internalModules) = MEMORY[0x1E0DEE9D8];
  v38 = v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_internalVolatileRange;
  *(_OWORD *)(v38 + 16) = 0u;
  *(_OWORD *)(v38 + 32) = 0u;
  *(_OWORD *)v38 = 0u;
  *(_BYTE *)(v38 + 48) = 1;
  v39 = (_QWORD *)(v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_didChangeVolatileRange);
  *v39 = 0;
  v39[1] = 0;
  *(_QWORD *)(v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_volatileRangeBarriers) = v37;
  *(_QWORD *)(v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_inputTask) = 0;
  v40 = v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_latestInputBufferRange;
  *(_OWORD *)(v40 + 16) = 0u;
  *(_OWORD *)(v40 + 32) = 0u;
  *(_OWORD *)v40 = 0u;
  *(_BYTE *)(v40 + 48) = 1;
  v41 = v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_latestInputSampleTime;
  *(_QWORD *)v41 = 0;
  *(_QWORD *)(v41 + 8) = 0;
  *(_QWORD *)(v41 + 16) = 0;
  *(_BYTE *)(v41 + 24) = 1;
  v42 = v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_internalInputSequence;
  *(_QWORD *)(v42 + 32) = 0;
  *(_OWORD *)v42 = 0u;
  *(_OWORD *)(v42 + 16) = 0u;
  *(_QWORD *)(v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_sendableInputAudioFormat) = 0;
  *(_BYTE *)(v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_isInputFinished) = 0;
  v43 = (_QWORD *)(v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_didFinishInputOnce);
  *v43 = 0;
  v43[1] = 0;
  *(_QWORD *)(v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_inputBarriers) = v37;
  *(_BYTE *)(v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_isFinished) = 0;
  *(_BYTE *)(v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_hasContextChanges) = 0;
  v44 = a5;
  sub_1B2517F18(a5, v25);
  v45 = type metadata accessor for AnalysisOptions(0);
  if (__swift_getEnumTagSinglePayload(v25, 1, v45) == 1)
  {
    v46 = a3;
    sub_1B2517E58(v25);
    sub_1B25CCD60();
  }
  else
  {
    v47 = a7;
    v48 = a4;
    v49 = v89;
    OUTLINED_FUNCTION_519((uint64_t)v33, v25, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v89 + 16));
    v50 = a3;
    sub_1B2518488(v25, type metadata accessor for AnalysisOptions);
    v51 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v49 + 32);
    a4 = v48;
    a7 = v47;
    OUTLINED_FUNCTION_519(v95, (uint64_t)v33, v51);
  }
  OUTLINED_FUNCTION_124_2(OBJC_IVAR____TtC6Speech14SpeechAnalyzer_clientInfo);
  OUTLINED_FUNCTION_124_2(OBJC_IVAR____TtC6Speech14SpeechAnalyzer_currentClientInfo);
  v82 = v44;
  sub_1B2517F18(v44, v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_analysisOptions);
  *(_QWORD *)(v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_pendingNewModules) = a4;
  swift_bridgeObjectRelease();
  v52 = (_QWORD *)(v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_didChangeVolatileRange);
  v53 = *(_QWORD *)(v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_didChangeVolatileRange);
  v54 = v90;
  v55 = v92;
  *v52 = v90;
  v52[1] = v55;
  sub_1B24AB754(v54);
  sub_1B24C4564(v53);
  v56 = v88;
  v96[3] = v88;
  v96[4] = sub_1B25186C8(&qword_1EEFD96A8, &qword_1EEFD8938, MEMORY[0x1E0DF0848]);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v96);
  v83 = a1;
  OUTLINED_FUNCTION_143_2((uint64_t)boxed_opaque_existential_1);
  v58 = v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_internalInputSequence;
  OUTLINED_FUNCTION_142_1();
  sub_1B25183D0((uint64_t)v96, v58);
  swift_endAccess();
  v59 = *(void **)(v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_sendableInputAudioFormat);
  *(_QWORD *)(v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_sendableInputAudioFormat) = a3;
  v81 = a3;

  *(_QWORD *)(v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_internalContext) = a7;
  v60 = v91;
  OUTLINED_FUNCTION_97_3(v91, 1);
  v61 = (_QWORD *)swift_allocObject();
  v61[2] = 0;
  v61[3] = 0;
  v61[4] = a7;
  v61[5] = v9;
  v61[6] = &off_1E647D460;
  v62 = a7;
  swift_retain_n();
  v80 = v62;
  sub_1B24C52C0(v60, (uint64_t)&unk_1EEFD8A08, (uint64_t)v61);
  OUTLINED_FUNCTION_38_2();
  swift_release();
  v63 = v89;
  v64 = *(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 16);
  v65 = v95;
  v64(v60, v95, v26);
  OUTLINED_FUNCTION_97_3(v60, 0);
  v66 = v87;
  OUTLINED_FUNCTION_143_2(v87);
  v67 = v26;
  v79 = v26;
  v68 = v85;
  v64((uint64_t)v85, v65, v67);
  v69 = v93;
  v70 = (*(unsigned __int8 *)(v93 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80);
  v71 = (v86 + v70 + 7) & 0xFFFFFFFFFFFFFFF8;
  v72 = (*(unsigned __int8 *)(v63 + 80) + v71 + 8) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
  v73 = (char *)swift_allocObject();
  *((_QWORD *)v73 + 2) = 0;
  *((_QWORD *)v73 + 3) = 0;
  *((_QWORD *)v73 + 4) = v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v69 + 32))(&v73[v70], v66, v56);
  v74 = v81;
  *(_QWORD *)&v73[v71] = v81;
  v75 = &v73[v72];
  v76 = v79;
  (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v75, v68, v79);
  v77 = v74;
  swift_retain();
  sub_1B24C52C0(v91, (uint64_t)&unk_1EEFD96B8, (uint64_t)v73);
  swift_release();
  sub_1B24C4564(v90);

  sub_1B2517E58(v82);
  OUTLINED_FUNCTION_62_1(v94, *(uint64_t (**)(uint64_t, uint64_t))(v69 + 8));
  sub_1B2518488(v83, type metadata accessor for ClientInfo);
  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v95, v76);
  return v9;
}

uint64_t sub_1B2513380(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  void (*v49)(char *, char *, uint64_t);
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v56;
  void (*v57)(uint64_t *, uint64_t, uint64_t);
  uint64_t v58;
  void *v59;
  uint64_t v60;
  _QWORD *v61;
  id v62;
  uint64_t v63;
  void (*v64)(uint64_t, char *, uint64_t);
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  _QWORD *v73;
  char *v74;
  uint64_t v75;
  void *v76;
  char *v77;
  uint64_t v78;
  id v79;
  uint64_t v81;
  id v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98[6];

  v92 = a8;
  v96 = a2;
  v94 = a9;
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD9660);
  v95 = *(_QWORD *)(v90 - 8);
  MEMORY[0x1E0C80A78](v90, v15);
  v88 = v16;
  v89 = (char *)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD71C0);
  MEMORY[0x1E0C80A78](v17, v18);
  v93 = (uint64_t)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6E90);
  MEMORY[0x1E0C80A78](v20, v21);
  v23 = (char *)&v81 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1B25CCCDC();
  v91 = *(_QWORD *)(v24 - 8);
  v26 = MEMORY[0x1E0C80A78](v24, v25);
  v87 = (char *)&v81 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x1E0C80A78](v26, v28);
  v31 = (char *)&v81 - v30;
  v86 = v32;
  MEMORY[0x1E0C80A78](v29, v33);
  v97 = (char *)&v81 - v34;
  swift_defaultActor_initialize();
  *(_QWORD *)(v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_pendingNewModules) = 0;
  v35 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_internalModules) = MEMORY[0x1E0DEE9D8];
  v36 = v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_internalVolatileRange;
  *(_OWORD *)(v36 + 16) = 0u;
  *(_OWORD *)(v36 + 32) = 0u;
  *(_OWORD *)v36 = 0u;
  *(_BYTE *)(v36 + 48) = 1;
  v37 = (_QWORD *)(v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_didChangeVolatileRange);
  *v37 = 0;
  v37[1] = 0;
  *(_QWORD *)(v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_volatileRangeBarriers) = v35;
  *(_QWORD *)(v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_inputTask) = 0;
  v38 = v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_latestInputBufferRange;
  *(_OWORD *)(v38 + 16) = 0u;
  *(_OWORD *)(v38 + 32) = 0u;
  *(_OWORD *)v38 = 0u;
  *(_BYTE *)(v38 + 48) = 1;
  v39 = v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_latestInputSampleTime;
  *(_QWORD *)v39 = 0;
  *(_QWORD *)(v39 + 8) = 0;
  *(_QWORD *)(v39 + 16) = 0;
  *(_BYTE *)(v39 + 24) = 1;
  v40 = v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_internalInputSequence;
  *(_QWORD *)(v40 + 32) = 0;
  *(_OWORD *)v40 = 0u;
  *(_OWORD *)(v40 + 16) = 0u;
  *(_QWORD *)(v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_sendableInputAudioFormat) = 0;
  *(_BYTE *)(v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_isInputFinished) = 0;
  v41 = (_QWORD *)(v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_didFinishInputOnce);
  *v41 = 0;
  v41[1] = 0;
  *(_QWORD *)(v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_inputBarriers) = v35;
  *(_BYTE *)(v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_isFinished) = 0;
  *(_BYTE *)(v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_hasContextChanges) = 0;
  v42 = a5;
  sub_1B2517F18(a5, (uint64_t)v23);
  v43 = type metadata accessor for AnalysisOptions(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v43) == 1)
  {
    v44 = a3;
    sub_1B2517E58((uint64_t)v23);
    sub_1B25CCD60();
  }
  else
  {
    v45 = a7;
    v46 = a4;
    v47 = v91;
    (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v31, v23, v24);
    v48 = a3;
    sub_1B2518488((uint64_t)v23, type metadata accessor for AnalysisOptions);
    v49 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
    a4 = v46;
    a7 = v45;
    v49(v97, v31, v24);
  }
  sub_1B2517ED4(a1, v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_clientInfo);
  sub_1B2517ED4(a1, v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_currentClientInfo);
  v84 = v42;
  sub_1B2517F18(v42, v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_analysisOptions);
  *(_QWORD *)(v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_pendingNewModules) = a4;
  swift_bridgeObjectRelease();
  v50 = (_QWORD *)(v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_didChangeVolatileRange);
  v51 = *(_QWORD *)(v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_didChangeVolatileRange);
  v52 = v92;
  v53 = v94;
  *v50 = v92;
  v50[1] = v53;
  sub_1B24AB754(v52);
  sub_1B24C4564(v51);
  v54 = v90;
  v98[3] = v90;
  v98[4] = sub_1B25186C8(&qword_1EEFD96E0, &qword_1EEFD9660, MEMORY[0x1E0DF0C70]);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v98);
  v85 = a1;
  v56 = v96;
  v57 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v95 + 16);
  v57(boxed_opaque_existential_1, v96, v54);
  v58 = v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_internalInputSequence;
  swift_beginAccess();
  sub_1B25183D0((uint64_t)v98, v58);
  swift_endAccess();
  v59 = *(void **)(v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_sendableInputAudioFormat);
  *(_QWORD *)(v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_sendableInputAudioFormat) = a3;
  v83 = a3;

  *(_QWORD *)(v9 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_internalContext) = a7;
  v60 = v93;
  __swift_storeEnumTagSinglePayload(v93, 1, 1, v24);
  v61 = (_QWORD *)swift_allocObject();
  v61[2] = 0;
  v61[3] = 0;
  v61[4] = a7;
  v61[5] = v9;
  v61[6] = &off_1E647D460;
  v62 = a7;
  swift_retain_n();
  v82 = v62;
  sub_1B24C52C0(v60, (uint64_t)&unk_1EEFD9708, (uint64_t)v61);
  swift_release();
  swift_release();
  v63 = v91;
  v64 = *(void (**)(uint64_t, char *, uint64_t))(v91 + 16);
  v65 = v97;
  v64(v60, v97, v24);
  __swift_storeEnumTagSinglePayload(v60, 0, 1, v24);
  v66 = v89;
  v57((uint64_t *)v89, v56, v54);
  v67 = v24;
  v81 = v24;
  v68 = v87;
  v64((uint64_t)v87, v65, v67);
  v69 = v95;
  v70 = (*(unsigned __int8 *)(v95 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80);
  v71 = (v88 + v70 + 7) & 0xFFFFFFFFFFFFFFF8;
  v72 = (*(unsigned __int8 *)(v63 + 80) + v71 + 8) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
  v73 = (_QWORD *)swift_allocObject();
  v73[2] = 0;
  v73[3] = 0;
  v73[4] = v9;
  v74 = (char *)v73 + v70;
  v75 = v54;
  (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v74, v66, v54);
  v76 = v83;
  *(_QWORD *)((char *)v73 + v71) = v83;
  v77 = (char *)v73 + v72;
  v78 = v81;
  (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v77, v68, v81);
  v79 = v76;
  swift_retain();
  sub_1B24C52C0(v93, (uint64_t)&unk_1EEFD9718, (uint64_t)v73);
  swift_release();
  sub_1B24C4564(v92);

  sub_1B2517E58(v84);
  (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v96, v75);
  sub_1B2518488(v85, type metadata accessor for ClientInfo);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v97, v78);
  return v9;
}

uint64_t sub_1B25139F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  return swift_task_switch();
}

uint64_t sub_1B2513A14()
{
  uint64_t v0;

  sub_1B2513AB8(*(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), &qword_1EEFD8938, (uint64_t)&unk_1E6482918, (uint64_t)&unk_1EEFD96C8);
  return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B2513A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  return swift_task_switch();
}

uint64_t sub_1B2513A74()
{
  uint64_t v0;

  sub_1B2513AB8(*(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), &qword_1EEFD9660, (uint64_t)&unk_1E6482940, (uint64_t)&unk_1EEFD96F0);
  return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B2513AB8(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;

  v37 = a2;
  v38 = a6;
  v36 = a5;
  v34 = a1;
  v39 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v33 = *(_QWORD *)(v39 - 8);
  v35 = *(_QWORD *)(v33 + 64);
  MEMORY[0x1E0C80A78](v39, v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = v8;
  v9 = OUTLINED_FUNCTION_37_4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9, v12);
  v30 = (uint64_t)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD71C0);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v13, v14);
  OUTLINED_FUNCTION_41_1();
  v17 = v16 - v15;
  OUTLINED_FUNCTION_123_1(v16 - v15);
  OUTLINED_FUNCTION_97_3(v17, 0);
  OUTLINED_FUNCTION_135_2();
  v18 = swift_allocObject();
  swift_weakInit();
  OUTLINED_FUNCTION_123_1((uint64_t)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v8, v34, v39);
  v20 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v21 = (v11 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = v19;
  v23 = (*(unsigned __int8 *)(v19 + 80) + v21 + 8) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v24 = (v35 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = 0;
  *(_QWORD *)(v25 + 24) = 0;
  OUTLINED_FUNCTION_519(v25 + v20, v30, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 32));
  *(_QWORD *)(v25 + v21) = v18;
  (*(void (**)(unint64_t, char *, uint64_t))(v22 + 32))(v25 + v23, v31, v39);
  v26 = v37;
  *(_QWORD *)(v25 + v24) = v37;
  v27 = v26;
  sub_1B24C52C0(v17, v38, v25);
  *(_QWORD *)(v32 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_inputTask) = v28;
  return swift_release();
}

uint64_t sub_1B2513CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  v4 = sub_1B25CC8C8();
  v3[13] = v4;
  v3[14] = *(_QWORD *)(v4 - 8);
  v3[15] = swift_task_alloc();
  v5 = sub_1B25CCCDC();
  v3[16] = v5;
  v3[17] = *(_QWORD *)(v5 - 8);
  v3[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1B2513D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  OUTLINED_FUNCTION_249();
  sub_1B24C7414();
  if ((v13 & 1) == 0)
    goto LABEL_16;
  v14 = (void *)v12[11];
  v15 = v12[12];
  v16 = OBJC_IVAR____TtC6Speech14SpeechAnalyzer_sendableInputAudioFormat;
  v17 = *(void **)(v15 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_sendableInputAudioFormat);
  if (v14)
  {
    if (v17)
    {
      OUTLINED_FUNCTION_60(v13, &qword_1EEFD73A8);
      v18 = v14;
      v19 = v17;
      HIDWORD(a9) = sub_1B25CD0D8();

      goto LABEL_10;
    }
    v21 = v14;
  }
  else
  {
    if (!v17 || (0, (v20 = *(void **)(v15 + v16)) == 0))
    {
      if (qword_1ED36CF48 != -1)
        swift_once();
      v44 = v12[14];
      v45 = v12[15];
      v46 = v12[13];
      v47 = __swift_project_value_buffer(v46, (uint64_t)qword_1ED36D980);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16))(v45, v47, v46);
      OUTLINED_FUNCTION_85_2();
      sub_1B24B3A70(v48, v49, v50, v51, v52);
    }
    v21 = v20;
  }
  v18 = v21;
  HIDWORD(a9) = 0;
LABEL_10:
  v12[19] = (uint64_t)v18;
  v22 = v12[12];
  if (*(_QWORD *)(v22 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_inputTask))
  {
    swift_retain();
    sub_1B25CCD3C();
    swift_release();
    v22 = v12[12];
  }
  v23 = (_QWORD *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD9660);
  v12[5] = (uint64_t)v23;
  v12[6] = sub_1B25186C8(&qword_1EEFD96E0, &qword_1EEFD9660, MEMORY[0x1E0DF0C70]);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v12 + 2);
  OUTLINED_FUNCTION_20_5((uint64_t)boxed_opaque_existential_1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(v23 - 1) + 16));
  v25 = v22 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_internalInputSequence;
  OUTLINED_FUNCTION_142_1();
  sub_1B25183D0((uint64_t)(v12 + 2), v25);
  swift_endAccess();
  v26 = *(void **)(v15 + v16);
  *(_QWORD *)(v15 + v16) = v18;
  v27 = v18;

  *(_BYTE *)(v22 + OBJC_IVAR____TtC6Speech14SpeechAnalyzer_isInputFinished) = 0;
  if (qword_1ED36CF48 != -1)
    swift_once();
  v28 = __swift_project_value_buffer(v12[13], (uint64_t)qword_1ED36D980);
  objc_msgSend(v27, sel_sampleRate);
  sub_1B24B36F0(v29 != 0.0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SpeechFramework/SpeechAnalyzer/SpeechAnalyzer.swift", 89, 2, 246, v28);
  if ((a9 & 0x100000000) != 0)
  {
    v30 = OUTLINED_FUNCTION_87_3();
    OUTLINED_FUNCTION_112_3(v30, v31, v32, &qword_1EEFD9660, (uint64_t)&unk_1E6482940, (uint64_t)&unk_1EEFD96F0);

    OUTLINED_FUNCTION_62_1(v28, (uint64_t (*)(uint64_t, uint64_t))qword_1EEFD9668);
LABEL_16:
    OUTLINED_FUNCTION_137_1();
    OUTLINED_FUNCTION_36();
    OUTLINED_FUNCTION_85_2();
    return v33(v33, v34, v35, v36, v37, v38, v39, v40, a9, a10, a11, a12);
  }
  v42 = (_QWORD *)swift_task_alloc();
  v12[20] = (uint64_t)v42;
  *v42 = v12;
  v42[1] = sub_1B251407C;
  OUTLINED_FUNCTION_85_2();
  return sub_1B24C76DC(v43);
}

uint64_t sub_1B251407C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_177(v2);
  *(_QWORD *)(v0 + 168) = v1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1B25140CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_62_4();
  v14 = OUTLINED_FUNCTION_87_3();
  OUTLINED_FUNCTION_112_3(v14, v15, v16, &qword_1EEFD9660, (uint64_t)&unk_1E6482940, (uint64_t)&unk_1EEFD96F0);

  OUTLINED_FUNCTION_62_1(v11, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
  OUTLINED_FUNCTION_137_1();
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_116_0();
  return v17(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10);
}

uint64_t sub_1B251413C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 88);

  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_48();
  return OUTLINED_FUNCTION_56(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B2514180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7[38] = a6;
  v7[39] = a7;
  v7[36] = a4;
  v7[37] = a5;
  v8 = sub_1B25CCC70();
  v7[40] = v8;
  v7[41] = *(_QWORD *)(v8 - 8);
  v7[42] = swift_task_alloc();
  v7[43] = swift_task_alloc();
  sub_1B25CC6F4();
  v7[44] = swift_task_alloc();
  sub_1B25CCA00();
  v7[45] = swift_task_alloc();
  sub_1B25CC9E8();
  v7[46] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD9660);
  v7[47] = v9;
  v7[48] = *(_QWORD *)(v9 - 8);
  v7[49] = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD96F8);
  v7[50] = v10;
  v7[51] = *(_QWORD *)(v10 - 8);
  v7[52] = swift_task_alloc();
  v11 = sub_1B25CCCDC();
  v7[53] = v11;
  v7[54] = *(_QWORD *)(v11 - 8);
  v7[55] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1B25142D4()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  uint64_t v5;
  uint64_t v6;
  _DWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  OUTLINED_FUNCTION_249();
  if (qword_1ED36CF48 != -1)
    swift_once();
  v1 = sub_1B25CC8C8();
  v0[56] = __swift_project_value_buffer(v1, (uint64_t)qword_1ED36D980);
  OUTLINED_FUNCTION_91_5();
  v2 = (void *)sub_1B25CC8B0();
  v3 = sub_1B25CCFC4();
  v4 = OUTLINED_FUNCTION_25_0(v3);
  v6 = v0[54];
  v5 = v0[55];
  if (v4)
  {
    v7 = (_DWORD *)OUTLINED_FUNCTION_246();
    OUTLINED_FUNCTION_84_3(v7);
    OUTLINED_FUNCTION_62_1(v5, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    OUTLINED_FUNCTION_80_5();
    OUTLINED_FUNCTION_99_3(&dword_1B2494000, v8, v9, "SpeechAnalyzer: Input task starting at priority %hhu");
    OUTLINED_FUNCTION_174();
  }
  OUTLINED_FUNCTION_62_1(v0[55], *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));

  OUTLINED_FUNCTION_519(v0[49], v0[38], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0[48] + 16));
  sub_1B25186C8(&qword_1EEFD96E0, &qword_1EEFD9660, MEMORY[0x1E0DF0C70]);
  sub_1B25CCDB4();
  OUTLINED_FUNCTION_15_3();
  sub_1B25186C8(&qword_1EEFD9700, &qword_1EEFD96F8, MEMORY[0x1E0DF0C48]);
  v10 = (_QWORD *)swift_task_alloc();
  v0[57] = (uint64_t)v10;
  *v10 = v0;
  v10[1] = sub_1B2514484;
  OUTLINED_FUNCTION_139_1();
  return OUTLINED_FUNCTION_51_4();
}

uint64_t sub_1B2514484()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_105();
  *v2 = *v1;
  *(_QWORD *)(v3 + 464) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B25144D4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char v7;
  id v8;
  double v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t Strong;
  _QWORD *v14;
  void *v16;
  void *v17;
  os_log_type_t v18;
  _WORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  NSObject *v29;
  uint64_t v30;
  os_log_type_t v31;
  _WORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  os_log_type_t v36;
  uint8_t *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  __int128 v42;

  v2 = *(void **)(v0 + 88);
  *(_QWORD *)(v0 + 472) = v2;
  if (v2)
  {
    v42 = *(_OWORD *)(v0 + 96);
    v1 = *(_QWORD *)(v0 + 112);
    v3 = *(_QWORD *)(v0 + 120);
    v5 = *(_QWORD *)(v0 + 128);
    v4 = *(_QWORD *)(v0 + 136);
    v6 = *(void **)(v0 + 144);
    v7 = *(_BYTE *)(v0 + 152);
    v8 = objc_msgSend(*(id *)(v0 + 312), sel_sampleRate);
    if (v9 != 0.0)
    {
      v10 = OUTLINED_FUNCTION_60((uint64_t)v8, &qword_1ED36D030);
      v11 = OUTLINED_FUNCTION_86_1(v10, sel_format);
      v12 = OUTLINED_FUNCTION_56_4();

      OUTLINED_FUNCTION_94_4();
      if ((v12 & 1) == 0)
      {
        OUTLINED_FUNCTION_117_1();
        v23 = OUTLINED_FUNCTION_92_3();
        v24 = OUTLINED_FUNCTION_86_1(v23, sel_format);
        OUTLINED_FUNCTION_60((uint64_t)v24, &qword_1EEFD73A8);
        OUTLINED_FUNCTION_106_1();

        OUTLINED_FUNCTION_93_3();
        OUTLINED_FUNCTION_106_1();
        OUTLINED_FUNCTION_144_1();
        OUTLINED_FUNCTION_141_2();
        if (qword_1EEFD8028 != -1)
          swift_once();
        v1 = *(_QWORD *)(v0 + 400);
        v17 = *(void **)(v0 + 352);
        v25 = (id)qword_1EEFDB360;
        sub_1B25CC6AC();
        v26 = OUTLINED_FUNCTION_579();
        OUTLINED_FUNCTION_709(3, v27, v26, v27);
        OUTLINED_FUNCTION_800();

        OUTLINED_FUNCTION_120_1();
LABEL_15:
        *(_QWORD *)(v0 + 512) = v17;
        *(_QWORD *)(v0 + 280) = v17;
        OUTLINED_FUNCTION_432();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36D060);
        OUTLINED_FUNCTION_108_3();
        v28 = OUTLINED_FUNCTION_312();
        v29 = *(NSObject **)(v0 + 448);
        if (v28)
        {
          v30 = *(_QWORD *)(v0 + 344);
          OUTLINED_FUNCTION_499();
          OUTLINED_FUNCTION_9_5();
          sub_1B25CC8B0();
          v31 = OUTLINED_FUNCTION_375();
          if (OUTLINED_FUNCTION_111_1(v31))
          {
            v32 = (_WORD *)OUTLINED_FUNCTION_246();
            OUTLINED_FUNCTION_649(v32);
            OUTLINED_FUNCTION_28_7(&dword_1B2494000, v29, (os_log_type_t)v17, "SpeechAnalyzer: Input task cancelled");
            OUTLINED_FUNCTION_174();
          }

          OUTLINED_FUNCTION_15_3();
          v33 = OUTLINED_FUNCTION_147_0();
          if (OUTLINED_FUNCTION_115_1(v33))
          {
            OUTLINED_FUNCTION_58_4();
            v34 = OUTLINED_FUNCTION_175_0();
            OUTLINED_FUNCTION_41_6(v34, v35);
            return OUTLINED_FUNCTION_46_4();
          }
          OUTLINED_FUNCTION_62_1(v0 + 184, *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
          v41 = *(void **)(v0 + 280);
        }
        else
        {
          OUTLINED_FUNCTION_134_2();
          OUTLINED_FUNCTION_432();
          OUTLINED_FUNCTION_432();
          sub_1B25CC8B0();
          v36 = OUTLINED_FUNCTION_70_2();
          if (OUTLINED_FUNCTION_113_1(v36))
          {
            v37 = (uint8_t *)OUTLINED_FUNCTION_246();
            v38 = (_QWORD *)OUTLINED_FUNCTION_246();
            *(_DWORD *)v37 = 138412290;
            OUTLINED_FUNCTION_432();
            v39 = _swift_stdlib_bridgeErrorToNSError();
            OUTLINED_FUNCTION_40_2(v39);
            *v38 = v39;
            OUTLINED_FUNCTION_499();
            OUTLINED_FUNCTION_499();
            OUTLINED_FUNCTION_91_1(&dword_1B2494000, v29, (os_log_type_t)v1, "SpeechAnalyzer: Input task ending with error: %@", v37);
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7488);
            OUTLINED_FUNCTION_13_1();
            OUTLINED_FUNCTION_174();
          }
          OUTLINED_FUNCTION_499();
          OUTLINED_FUNCTION_499();
          OUTLINED_FUNCTION_109_2();
          OUTLINED_FUNCTION_15_3();
          v40 = OUTLINED_FUNCTION_147_0();
          *(_QWORD *)(v0 + 536) = v40;
          if (v40)
          {
            OUTLINED_FUNCTION_432();
            return OUTLINED_FUNCTION_46_4();
          }
          v41 = v17;
        }

        goto LABEL_28;
      }
    }
    Strong = swift_weakLoadStrong();
    *(_QWORD *)(v0 + 480) = Strong;
    if (Strong)
    {
      *(_QWORD *)(v0 + 16) = v2;
      *(_OWORD *)(v0 + 24) = v42;
      *(_QWORD *)(v0 + 40) = v1;
      *(_BYTE *)(v0 + 48) = v3 & 1;
      *(_QWORD *)(v0 + 56) = v5;
      *(_BYTE *)(v0 + 64) = v4 & 1;
      *(_QWORD *)(v0 + 72) = v6;
      *(_BYTE *)(v0 + 80) = v7 & 1;
      v14 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 488) = v14;
      *v14 = v0;
      v14[1] = sub_1B2514C44;
      return OUTLINED_FUNCTION_47_7((void *)(v0 + 16));
    }

  }
  v16 = *(void **)(v0 + 464);
  OUTLINED_FUNCTION_30(*(_QWORD *)(v0 + 408));
  sub_1B25CCD6C();
  v17 = v16;
  if (v16)
    goto LABEL_15;
  OUTLINED_FUNCTION_127_0();
  v18 = OUTLINED_FUNCTION_375();
  if (OUTLINED_FUNCTION_186_0(v18))
  {
    v19 = (_WORD *)OUTLINED_FUNCTION_246();
    OUTLINED_FUNCTION_71_2(v19);
    OUTLINED_FUNCTION_33_6(&dword_1B2494000, v20, v21, "SpeechAnalyzer: Input exhausted or ended");
    OUTLINED_FUNCTION_174();
  }
  OUTLINED_FUNCTION_89_3();
  OUTLINED_FUNCTION_15_3();
  v22 = OUTLINED_FUNCTION_147_0();
  *(_QWORD *)(v0 + 504) = v22;
  if (v22)
    return OUTLINED_FUNCTION_46_4();
LABEL_28:
  OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_114();
  OUTLINED_FUNCTION_148();
  OUTLINED_FUNCTION_211();
  OUTLINED_FUNCTION_170();
  return OUTLINED_FUNCTION_34_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B2514994()
{
  uint64_t v0;
  os_log_type_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  _WORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  void *v18;
  _QWORD *v19;

  OUTLINED_FUNCTION_49();
  *(_QWORD *)(v0 + 264) = *(_QWORD *)(v0 + 272);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36D060);
  v2 = sub_1B25CD5A0();
  if (v2)
  {
    v3 = v2;
    OUTLINED_FUNCTION_670();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_172();
    *v4 = *(_QWORD *)(v0 + 264);
  }
  OUTLINED_FUNCTION_30(*(_QWORD *)(v0 + 408));
  *(_QWORD *)(v0 + 512) = v3;
  *(_QWORD *)(v0 + 280) = v3;
  OUTLINED_FUNCTION_262_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36D060);
  OUTLINED_FUNCTION_108_3();
  v5 = OUTLINED_FUNCTION_312();
  v6 = *(NSObject **)(v0 + 448);
  if ((v5 & 1) != 0)
  {
    v7 = *(_QWORD *)(v0 + 344);
    OUTLINED_FUNCTION_69_4();
    OUTLINED_FUNCTION_9_5();
    sub_1B25CC8B0();
    v8 = OUTLINED_FUNCTION_375();
    if (OUTLINED_FUNCTION_9_1(v8))
    {
      v9 = (_WORD *)OUTLINED_FUNCTION_246();
      OUTLINED_FUNCTION_649(v9);
      OUTLINED_FUNCTION_28_7(&dword_1B2494000, v6, (os_log_type_t)v3, "SpeechAnalyzer: Input task cancelled");
      OUTLINED_FUNCTION_174();
    }
    OUTLINED_FUNCTION_109_2();
    OUTLINED_FUNCTION_15_3();
    v10 = OUTLINED_FUNCTION_147_0();
    if (OUTLINED_FUNCTION_115_1(v10))
    {
      OUTLINED_FUNCTION_58_4();
      v11 = OUTLINED_FUNCTION_175_0();
      OUTLINED_FUNCTION_41_6(v11, v12);
LABEL_13:
      OUTLINED_FUNCTION_117_0();
      return OUTLINED_FUNCTION_29_2();
    }
    OUTLINED_FUNCTION_62_1(v3, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
    v18 = *(void **)(v0 + 280);
  }
  else
  {
    OUTLINED_FUNCTION_134_2();
    OUTLINED_FUNCTION_262_0();
    OUTLINED_FUNCTION_262_0();
    sub_1B25CC8B0();
    v13 = OUTLINED_FUNCTION_70_2();
    if (OUTLINED_FUNCTION_63_1(v13))
    {
      v14 = (uint8_t *)OUTLINED_FUNCTION_246();
      v19 = (_QWORD *)OUTLINED_FUNCTION_246();
      *(_DWORD *)v14 = 138412290;
      OUTLINED_FUNCTION_262_0();
      v15 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 256) = v15;
      OUTLINED_FUNCTION_350();
      *v19 = v15;
      OUTLINED_FUNCTION_69_4();
      OUTLINED_FUNCTION_69_4();
      OUTLINED_FUNCTION_91_1(&dword_1B2494000, v6, v1, "SpeechAnalyzer: Input task ending with error: %@", v14);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7488);
      OUTLINED_FUNCTION_13_1();
      OUTLINED_FUNCTION_174();
    }
    OUTLINED_FUNCTION_69_4();
    OUTLINED_FUNCTION_69_4();
    OUTLINED_FUNCTION_89_3();
    OUTLINED_FUNCTION_15_3();
    v16 = OUTLINED_FUNCTION_147_0();
    *(_QWORD *)(v0 + 536) = v16;
    if (v16)
    {
      OUTLINED_FUNCTION_262_0();
      goto LABEL_13;
    }
    v18 = (void *)v3;
  }

  OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_114();
  OUTLINED_FUNCTION_148();
  OUTLINED_FUNCTION_211();
  OUTLINED_FUNCTION_170();
  return OUTLINED_FUNCTION_13(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B2514C44(char a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  OUTLINED_FUNCTION_141_0();
  OUTLINED_FUNCTION_177(v4);
  *(_QWORD *)(v2 + 496) = v1;
  swift_task_dealloc();
  swift_release();
  if (!v1)
    *(_BYTE *)(v2 + 82) = a1 & 1;
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_31();
}

uint64_t sub_1B2514CB0()
{
  uint64_t v0;
  os_log_type_t v1;
  int v2;
  _QWORD *v3;
  void *v5;
  id *v6;
  int v7;
  NSObject *v8;
  os_log_type_t v9;
  _WORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  _WORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  os_log_type_t v21;
  uint8_t *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;

  OUTLINED_FUNCTION_49();
  v2 = *(unsigned __int8 *)(v0 + 82);

  if (v2 == 1)
  {
    sub_1B25186C8(&qword_1EEFD9700, &qword_1EEFD96F8, MEMORY[0x1E0DF0C48]);
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 456) = v3;
    *v3 = v0;
    v3[1] = sub_1B2514484;
    OUTLINED_FUNCTION_139_1();
    return OUTLINED_FUNCTION_54_4();
  }
  v5 = *(void **)(v0 + 496);
  OUTLINED_FUNCTION_30(*(_QWORD *)(v0 + 408));
  sub_1B25CCD6C();
  if (v5)
  {
    v6 = (id *)(v0 + 280);
    *(_QWORD *)(v0 + 512) = v5;
    *(_QWORD *)(v0 + 280) = v5;
    OUTLINED_FUNCTION_165_0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36D060);
    v7 = OUTLINED_FUNCTION_312();
    v8 = *(NSObject **)(v0 + 448);
    if (v7)
    {
      OUTLINED_FUNCTION_148_0();
      OUTLINED_FUNCTION_9_5();
      sub_1B25CC8B0();
      v9 = OUTLINED_FUNCTION_375();
      if (OUTLINED_FUNCTION_186_0(v9))
      {
        v10 = (_WORD *)OUTLINED_FUNCTION_246();
        OUTLINED_FUNCTION_649(v10);
        OUTLINED_FUNCTION_28_7(&dword_1B2494000, v8, (os_log_type_t)v5, "SpeechAnalyzer: Input task cancelled");
        OUTLINED_FUNCTION_174();
      }
      OUTLINED_FUNCTION_89_3();
      OUTLINED_FUNCTION_15_3();
      v11 = OUTLINED_FUNCTION_147_0();
      *(_QWORD *)(v0 + 520) = v11;
      v13 = *(_QWORD *)(v0 + 328);
      v12 = *(_QWORD *)(v0 + 336);
      v14 = *(_QWORD *)(v0 + 320);
      if (v11)
      {
        OUTLINED_FUNCTION_58_4();
        *(_QWORD *)(v0 + 528) = OUTLINED_FUNCTION_172();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v15, v12, v14);
        return OUTLINED_FUNCTION_29_2();
      }
      OUTLINED_FUNCTION_249_0(*(_QWORD *)(v0 + 336), *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
      v26 = *v6;
    }
    else
    {

      OUTLINED_FUNCTION_165_0();
      OUTLINED_FUNCTION_165_0();
      sub_1B25CC8B0();
      v21 = OUTLINED_FUNCTION_70_2();
      if (OUTLINED_FUNCTION_113_1(v21))
      {
        v22 = (uint8_t *)OUTLINED_FUNCTION_246();
        v23 = (_QWORD *)OUTLINED_FUNCTION_246();
        *(_DWORD *)v22 = 138412290;
        OUTLINED_FUNCTION_165_0();
        v24 = OUTLINED_FUNCTION_835();
        OUTLINED_FUNCTION_40_2(v24);
        *v23 = v24;
        OUTLINED_FUNCTION_148_0();
        OUTLINED_FUNCTION_148_0();
        OUTLINED_FUNCTION_91_1(&dword_1B2494000, v8, v1, "SpeechAnalyzer: Input task ending with error: %@", v22);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7488);
        OUTLINED_FUNCTION_13_1();
        OUTLINED_FUNCTION_174();
      }
      OUTLINED_FUNCTION_148_0();
      OUTLINED_FUNCTION_148_0();
      OUTLINED_FUNCTION_109_2();
      OUTLINED_FUNCTION_15_3();
      v25 = OUTLINED_FUNCTION_147_0();
      *(_QWORD *)(v0 + 536) = v25;
      if (v25)
      {
        OUTLINED_FUNCTION_165_0();
        return OUTLINED_FUNCTION_29_2();
      }
      v26 = v5;
    }

  }
  else
  {
    OUTLINED_FUNCTION_127_0();
    v16 = OUTLINED_FUNCTION_375();
    if (OUTLINED_FUNCTION_186_0(v16))
    {
      v17 = (_WORD *)OUTLINED_FUNCTION_246();
      OUTLINED_FUNCTION_71_2(v17);
      OUTLINED_FUNCTION_33_6(&dword_1B2494000, v18, v19, "SpeechAnalyzer: Input exhausted or ended");
      OUTLINED_FUNCTION_174();
    }
    OUTLINED_FUNCTION_89_3();
    OUTLINED_FUNCTION_15_3();
    v20 = OUTLINED_FUNCTION_147_0();
    *(_QWORD *)(v0 + 504) = v20;
    if (v20)
      return OUTLINED_FUNCTION_29_2();
  }
  OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_114();
  OUTLINED_FUNCTION_148();
  OUTLINED_FUNCTION_211();
  OUTLINED_FUNCTION_170();
  return OUTLINED_FUNCTION_13(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B2515010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  _QWORD *v12;
  os_log_type_t v13;
  void *v14;
  uint64_t v15;
  char v16;
  NSObject *v17;
  uint64_t v18;
  os_log_type_t v19;
  _WORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  os_log_type_t v24;
  uint8_t *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  void *v30;
  uint64_t (*v31)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  OUTLINED_FUNCTION_249();
  v14 = (void *)v12[59];
  OUTLINED_FUNCTION_30(v12[51]);

  v15 = v12[62];
  v12[64] = v15;
  v12[35] = v15;
  OUTLINED_FUNCTION_262_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36D060);
  OUTLINED_FUNCTION_108_3();
  v16 = OUTLINED_FUNCTION_312();
  v17 = v12[56];
  if ((v16 & 1) != 0)
  {
    v18 = v12[43];
    OUTLINED_FUNCTION_69_4();
    OUTLINED_FUNCTION_9_5();
    sub_1B25CC8B0();
    v19 = OUTLINED_FUNCTION_375();
    if (OUTLINED_FUNCTION_9_1(v19))
    {
      v20 = (_WORD *)OUTLINED_FUNCTION_246();
      OUTLINED_FUNCTION_649(v20);
      OUTLINED_FUNCTION_28_7(&dword_1B2494000, v17, (os_log_type_t)v15, "SpeechAnalyzer: Input task cancelled");
      OUTLINED_FUNCTION_174();
    }
    OUTLINED_FUNCTION_109_2();
    OUTLINED_FUNCTION_15_3();
    v21 = OUTLINED_FUNCTION_147_0();
    if (OUTLINED_FUNCTION_115_1(v21))
    {
      OUTLINED_FUNCTION_58_4();
      v22 = OUTLINED_FUNCTION_175_0();
      OUTLINED_FUNCTION_41_6(v22, v23);
LABEL_10:
      OUTLINED_FUNCTION_117_0();
      OUTLINED_FUNCTION_85_2();
      return swift_task_switch();
    }
    OUTLINED_FUNCTION_62_1(v15, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
    v30 = (void *)v12[35];
  }
  else
  {
    OUTLINED_FUNCTION_134_2();
    OUTLINED_FUNCTION_262_0();
    OUTLINED_FUNCTION_262_0();
    sub_1B25CC8B0();
    v24 = OUTLINED_FUNCTION_70_2();
    if (OUTLINED_FUNCTION_113_1(v24))
    {
      v25 = (uint8_t *)OUTLINED_FUNCTION_246();
      v26 = (_QWORD *)OUTLINED_FUNCTION_246();
      *(_DWORD *)v25 = 138412290;
      OUTLINED_FUNCTION_262_0();
      v27 = _swift_stdlib_bridgeErrorToNSError();
      OUTLINED_FUNCTION_40_2(v27);
      *v26 = v27;
      OUTLINED_FUNCTION_69_4();
      OUTLINED_FUNCTION_69_4();
      OUTLINED_FUNCTION_91_1(&dword_1B2494000, v17, v13, "SpeechAnalyzer: Input task ending with error: %@", v25);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7488);
      OUTLINED_FUNCTION_13_1();
      OUTLINED_FUNCTION_174();
    }
    OUTLINED_FUNCTION_69_4();
    OUTLINED_FUNCTION_69_4();
    OUTLINED_FUNCTION_89_3();
    OUTLINED_FUNCTION_15_3();
    v28 = OUTLINED_FUNCTION_147_0();
    v12[67] = v28;
    if (v28)
    {
      OUTLINED_FUNCTION_262_0();
      goto LABEL_10;
    }
    v30 = (void *)v15;
  }

  OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_114();
  OUTLINED_FUNCTION_148();
  OUTLINED_FUNCTION_211();
  OUTLINED_FUNCTION_170();
  OUTLINED_FUNCTION_85_2();
  return v31(v31, v32, v33, v34, v35, v36, v37, v38, a9, a10, a11, a12);
}

uint64_t sub_1B2515274()
{
  OUTLINED_FUNCTION_114_3(OBJC_IVAR____TtC6Speech14SpeechAnalyzer_isInputFinished);
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B25152B0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_157_1();
  OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_114();
  OUTLINED_FUNCTION_148();
  OUTLINED_FUNCTION_211();
  OUTLINED_FUNCTION_170();
  return OUTLINED_FUNCTION_4_6(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B25152F8()
{
  OUTLINED_FUNCTION_660(OBJC_IVAR____TtC6Speech14SpeechAnalyzer_isInputFinished);
  OUTLINED_FUNCTION_69_4();
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1B251533C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_157_1();
  OUTLINED_FUNCTION_30(*(_QWORD *)(v0 + 328));

  OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_114();
  OUTLINED_FUNCTION_148();
  OUTLINED_FUNCTION_211();
  OUTLINED_FUNCTION_170();
  return OUTLINED_FUNCTION_4_6(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B2515398()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 512);
  OUTLINED_FUNCTION_660(OBJC_IVAR____TtC6Speech14SpeechAnalyzer_isInputFinished);
  OUTLINED_FUNCTION_69_4();
  OUTLINED_FUNCTION_262_0();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 544) = v2;
  *v2 = v0;
  v2[1] = sub_1B25153FC;
  return OUTLINED_FUNCTION_82_5(1, v1);
}

uint64_t sub_1B25153FC()
{
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_670();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B2515438()
{
  uint64_t v0;

  OUTLINED_FUNCTION_157_1();

  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_114();
  OUTLINED_FUNCTION_148();
  OUTLINED_FUNCTION_211();
  OUTLINED_FUNCTION_170();
  return OUTLINED_FUNCTION_4_6(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B2515490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7[36] = a6;
  v7[37] = a7;
  v7[34] = a4;
  v7[35] = a5;
  v8 = sub_1B25CCC70();
  v7[38] = v8;
  v7[39] = *(_QWORD *)(v8 - 8);
  v7[40] = swift_task_alloc();
  v7[41] = swift_task_alloc();
  sub_1B25CC6F4();
  v7[42] = swift_task_alloc();
  sub_1B25CCA00();
  v7[43] = swift_task_alloc();
  sub_1B25CC9E8();
  v7[44] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD8938);
  v7[45] = v9;
  v7[46] = *(_QWORD *)(v9 - 8);
  v7[47] = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD96D0);
  v7[48] = v10;
  v7[49] = *(_QWORD *)(v10 - 8);
  v7[50] = swift_task_alloc();
  v11 = sub_1B25CCCDC();
  v7[51] = v11;
  v7[52] = *(_QWORD *)(v11 - 8);
  v7[53] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1B25155E4()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  uint64_t v5;
  uint64_t v6;
  _DWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  OUTLINED_FUNCTION_249();
  if (qword_1ED36CF48 != -1)
    swift_once();
  v1 = sub_1B25CC8C8();
  v0[54] = __swift_project_value_buffer(v1, (uint64_t)qword_1ED36D980);
  OUTLINED_FUNCTION_91_5();
  v2 = (void *)sub_1B25CC8B0();
  v3 = sub_1B25CCFC4();
  v4 = OUTLINED_FUNCTION_25_0(v3);
  v6 = v0[52];
  v5 = v0[53];
  if (v4)
  {
    v7 = (_DWORD *)OUTLINED_FUNCTION_246();
    OUTLINED_FUNCTION_84_3(v7);
    OUTLINED_FUNCTION_62_1(v5, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    OUTLINED_FUNCTION_80_5();
    OUTLINED_FUNCTION_99_3(&dword_1B2494000, v8, v9, "SpeechAnalyzer: Input task starting at priority %hhu");
    OUTLINED_FUNCTION_174();
  }
  OUTLINED_FUNCTION_62_1(v0[53], *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[46] + 16))(v0[47], v0[36], v0[45]);
  sub_1B25186C8(&qword_1EEFD96A8, &qword_1EEFD8938, MEMORY[0x1E0DF0848]);
  sub_1B25CCDB4();
  OUTLINED_FUNCTION_15_3();
  sub_1B25186C8(&qword_1EEFD96D8, &qword_1EEFD96D0, MEMORY[0x1E0DF0830]);
  v10 = (_QWORD *)swift_task_alloc();
  v0[55] = v10;
  *v10 = v0;
  v10[1] = sub_1B2515798;
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_51_4();
}

uint64_t sub_1B2515798()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_105();
  *v2 = *v1;
  *(_QWORD *)(v3 + 448) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B25157E8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char v7;
  id v8;
  double v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t Strong;
  _QWORD *v14;
  void *v16;
  void *v17;
  os_log_type_t v18;
  _WORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id *v28;
  int v29;
  NSObject *v30;
  uint64_t v31;
  os_log_type_t v32;
  _WORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  os_log_type_t v37;
  _DWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  _QWORD *v44;
  __int128 v45;

  v1 = *(void **)(v0 + 16);
  *(_QWORD *)(v0 + 456) = v1;
  if (v1)
  {
    v45 = *(_OWORD *)(v0 + 24);
    v2 = *(_QWORD *)(v0 + 40);
    v3 = *(_QWORD *)(v0 + 48);
    v5 = *(_QWORD *)(v0 + 56);
    v4 = *(_QWORD *)(v0 + 64);
    v6 = *(void **)(v0 + 72);
    v7 = *(_BYTE *)(v0 + 80);
    v8 = objc_msgSend(*(id *)(v0 + 296), sel_sampleRate);
    if (v9 != 0.0)
    {
      v10 = OUTLINED_FUNCTION_60((uint64_t)v8, &qword_1ED36D030);
      v11 = OUTLINED_FUNCTION_86_1(v10, sel_format);
      v12 = OUTLINED_FUNCTION_56_4();

      OUTLINED_FUNCTION_94_4();
      if ((v12 & 1) == 0)
      {
        OUTLINED_FUNCTION_117_1();
        v23 = OUTLINED_FUNCTION_92_3();
        v24 = OUTLINED_FUNCTION_86_1(v23, sel_format);
        OUTLINED_FUNCTION_60((uint64_t)v24, &qword_1EEFD73A8);
        OUTLINED_FUNCTION_106_1();

        OUTLINED_FUNCTION_93_3();
        OUTLINED_FUNCTION_106_1();
        OUTLINED_FUNCTION_144_1();
        OUTLINED_FUNCTION_141_2();
        if (qword_1EEFD8028 != -1)
          swift_once();
        v17 = *(void **)(v0 + 336);
        v25 = (id)qword_1EEFDB360;
        sub_1B25CC6AC();
        v26 = OUTLINED_FUNCTION_579();
        OUTLINED_FUNCTION_709(3, v27, v26, v27);
        OUTLINED_FUNCTION_800();

        OUTLINED_FUNCTION_120_1();
LABEL_15:
        v28 = (id *)(v0 + 264);
        *(_QWORD *)(v0 + 496) = v17;
        *(_QWORD *)(v0 + 264) = v17;
        OUTLINED_FUNCTION_432();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36D060);
        v29 = OUTLINED_FUNCTION_312();
        v30 = *(NSObject **)(v0 + 432);
        if (v29)
        {
          v31 = *(_QWORD *)(v0 + 328);
          OUTLINED_FUNCTION_499();
          OUTLINED_FUNCTION_9_5();
          sub_1B25CC8B0();
          v32 = OUTLINED_FUNCTION_375();
          if (OUTLINED_FUNCTION_111_1(v32))
          {
            v33 = (_WORD *)OUTLINED_FUNCTION_246();
            OUTLINED_FUNCTION_649(v33);
            OUTLINED_FUNCTION_28_7(&dword_1B2494000, v30, (os_log_type_t)v17, "SpeechAnalyzer: Input task cancelled");
            OUTLINED_FUNCTION_174();
          }

          OUTLINED_FUNCTION_15_3();
          v34 = OUTLINED_FUNCTION_147_0();
          if (OUTLINED_FUNCTION_121_1(v34))
          {
            OUTLINED_FUNCTION_58_4();
            v35 = OUTLINED_FUNCTION_175_0();
            OUTLINED_FUNCTION_42_7(v35, v36);
            return OUTLINED_FUNCTION_46_4();
          }
          OUTLINED_FUNCTION_62_1(v0 + 232, *(uint64_t (**)(uint64_t, uint64_t))(v31 + 8));
          v43 = *v28;
        }
        else
        {

          OUTLINED_FUNCTION_432();
          OUTLINED_FUNCTION_432();
          sub_1B25CC8B0();
          v37 = OUTLINED_FUNCTION_70_2();
          if (OUTLINED_FUNCTION_63_1(v37))
          {
            v38 = (_DWORD *)OUTLINED_FUNCTION_246();
            v44 = (_QWORD *)OUTLINED_FUNCTION_246();
            *v38 = 138412290;
            OUTLINED_FUNCTION_432();
            v39 = _swift_stdlib_bridgeErrorToNSError();
            *(_QWORD *)(v0 + 256) = v39;
            OUTLINED_FUNCTION_350();
            *v44 = v39;
            OUTLINED_FUNCTION_499();
            OUTLINED_FUNCTION_499();
            OUTLINED_FUNCTION_32_7(&dword_1B2494000, v40, v41, "SpeechAnalyzer: Input task ending with error: %@");
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7488);
            OUTLINED_FUNCTION_13_1();
            OUTLINED_FUNCTION_174();
          }
          OUTLINED_FUNCTION_499();
          OUTLINED_FUNCTION_499();
          OUTLINED_FUNCTION_480();
          OUTLINED_FUNCTION_15_3();
          v42 = OUTLINED_FUNCTION_147_0();
          *(_QWORD *)(v0 + 520) = v42;
          if (v42)
          {
            OUTLINED_FUNCTION_432();
            return OUTLINED_FUNCTION_46_4();
          }
          v43 = v17;
        }

        goto LABEL_28;
      }
    }
    Strong = swift_weakLoadStrong();
    *(_QWORD *)(v0 + 464) = Strong;
    if (Strong)
    {
      *(_QWORD *)(v0 + 88) = v1;
      *(_OWORD *)(v0 + 96) = v45;
      *(_QWORD *)(v0 + 112) = v2;
      *(_BYTE *)(v0 + 120) = v3 & 1;
      *(_QWORD *)(v0 + 128) = v5;
      *(_BYTE *)(v0 + 136) = v4 & 1;
      *(_QWORD *)(v0 + 144) = v6;
      *(_BYTE *)(v0 + 152) = v7 & 1;
      v14 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 472) = v14;
      *v14 = v0;
      v14[1] = sub_1B2515F68;
      return OUTLINED_FUNCTION_47_7((void *)(v0 + 88));
    }

  }
  v16 = *(void **)(v0 + 448);
  OUTLINED_FUNCTION_30(*(_QWORD *)(v0 + 392));
  sub_1B25CCD6C();
  v17 = v16;
  if (v16)
    goto LABEL_15;
  OUTLINED_FUNCTION_145_2();
  v18 = OUTLINED_FUNCTION_375();
  if (OUTLINED_FUNCTION_186_0(v18))
  {
    v19 = (_WORD *)OUTLINED_FUNCTION_246();
    OUTLINED_FUNCTION_71_2(v19);
    OUTLINED_FUNCTION_33_6(&dword_1B2494000, v20, v21, "SpeechAnalyzer: Input exhausted or ended");
    OUTLINED_FUNCTION_174();
  }
  OUTLINED_FUNCTION_592();
  OUTLINED_FUNCTION_15_3();
  v22 = OUTLINED_FUNCTION_147_0();
  *(_QWORD *)(v0 + 488) = v22;
  if (v22)
    return OUTLINED_FUNCTION_46_4();
LABEL_28:
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_114();
  OUTLINED_FUNCTION_148();
  OUTLINED_FUNCTION_211();
  OUTLINED_FUNCTION_170();
  return OUTLINED_FUNCTION_34_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B2515CBC()
{
  uint64_t v0;
  id *v1;
  uint64_t v2;
  void *v3;
  char v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  _WORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  _DWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v22;
  _QWORD *v23;

  OUTLINED_FUNCTION_49();
  v1 = (id *)(v0 + 264);
  v2 = sub_1B25CD5A0();
  if (!v2)
    v2 = OUTLINED_FUNCTION_172();
  v3 = (void *)v2;
  OUTLINED_FUNCTION_30(*(_QWORD *)(v0 + 392));
  *(_QWORD *)(v0 + 496) = v3;
  *(_QWORD *)(v0 + 264) = v3;
  OUTLINED_FUNCTION_165_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36D060);
  v4 = OUTLINED_FUNCTION_312();
  v5 = *(NSObject **)(v0 + 432);
  if ((v4 & 1) != 0)
  {
    v6 = *(_QWORD *)(v0 + 320);
    v7 = *(_QWORD *)(v0 + 312);
    OUTLINED_FUNCTION_148_0();
    OUTLINED_FUNCTION_20_5(v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32));
    sub_1B25CC8B0();
    v8 = OUTLINED_FUNCTION_375();
    if (OUTLINED_FUNCTION_186_0(v8))
    {
      v9 = (_WORD *)OUTLINED_FUNCTION_246();
      OUTLINED_FUNCTION_649(v9);
      OUTLINED_FUNCTION_28_7(&dword_1B2494000, v5, (os_log_type_t)v3, "SpeechAnalyzer: Input task cancelled");
      OUTLINED_FUNCTION_174();
    }
    OUTLINED_FUNCTION_480();
    OUTLINED_FUNCTION_15_3();
    v10 = OUTLINED_FUNCTION_147_0();
    *(_QWORD *)(v0 + 504) = v10;
    v11 = *(_QWORD *)(v0 + 312);
    v12 = *(_QWORD *)(v0 + 320);
    v13 = *(_QWORD *)(v0 + 304);
    if (v10)
    {
      OUTLINED_FUNCTION_58_4();
      *(_QWORD *)(v0 + 512) = OUTLINED_FUNCTION_175_0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v14, v12, v13);
LABEL_12:
      OUTLINED_FUNCTION_117_0();
      return OUTLINED_FUNCTION_29_2();
    }
    OUTLINED_FUNCTION_62_1(*(_QWORD *)(v0 + 320), *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
    v22 = *v1;
  }
  else
  {

    OUTLINED_FUNCTION_165_0();
    OUTLINED_FUNCTION_165_0();
    sub_1B25CC8B0();
    v15 = OUTLINED_FUNCTION_70_2();
    if (OUTLINED_FUNCTION_63_1(v15))
    {
      v16 = (_DWORD *)OUTLINED_FUNCTION_246();
      v23 = (_QWORD *)OUTLINED_FUNCTION_246();
      *v16 = 138412290;
      OUTLINED_FUNCTION_165_0();
      v17 = OUTLINED_FUNCTION_835();
      *(_QWORD *)(v0 + 256) = v17;
      OUTLINED_FUNCTION_350();
      *v23 = v17;
      OUTLINED_FUNCTION_148_0();
      OUTLINED_FUNCTION_148_0();
      OUTLINED_FUNCTION_32_7(&dword_1B2494000, v18, v19, "SpeechAnalyzer: Input task ending with error: %@");
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7488);
      OUTLINED_FUNCTION_13_1();
      OUTLINED_FUNCTION_174();
    }
    OUTLINED_FUNCTION_148_0();
    OUTLINED_FUNCTION_148_0();
    OUTLINED_FUNCTION_480();
    OUTLINED_FUNCTION_15_3();
    v20 = OUTLINED_FUNCTION_147_0();
    *(_QWORD *)(v0 + 520) = v20;
    if (v20)
    {
      OUTLINED_FUNCTION_165_0();
      goto LABEL_12;
    }
    v22 = v3;
  }

  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_114();
  OUTLINED_FUNCTION_148();
  OUTLINED_FUNCTION_211();
  OUTLINED_FUNCTION_170();
  return OUTLINED_FUNCTION_13(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B2515F68(char a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  OUTLINED_FUNCTION_141_0();
  OUTLINED_FUNCTION_177(v4);
  *(_QWORD *)(v2 + 480) = v1;
  swift_task_dealloc();
  swift_release();
  if (!v1)
    *(_BYTE *)(v2 + 82) = a1 & 1;
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_31();
}

uint64_t sub_1B2515FD4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  _QWORD *v3;
  uint64_t v5;
  int v6;
  NSObject *v7;
  uint64_t v8;
  os_log_type_t v9;
  _WORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  _WORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  _DWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  _QWORD *v26;

  OUTLINED_FUNCTION_49();
  v2 = *(unsigned __int8 *)(v0 + 82);

  if (v2 == 1)
  {
    sub_1B25186C8(&qword_1EEFD96D8, &qword_1EEFD96D0, MEMORY[0x1E0DF0830]);
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 440) = v3;
    *v3 = v0;
    v3[1] = sub_1B2515798;
    OUTLINED_FUNCTION_17();
    return OUTLINED_FUNCTION_54_4();
  }
  v5 = *(_QWORD *)(v0 + 480);
  OUTLINED_FUNCTION_30(*(_QWORD *)(v0 + 392));
  sub_1B25CCD6C();
  if (v5)
  {
    *(_QWORD *)(v0 + 496) = v5;
    *(_QWORD *)(v0 + 264) = v5;
    OUTLINED_FUNCTION_165_0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36D060);
    v6 = OUTLINED_FUNCTION_312();
    v7 = *(NSObject **)(v0 + 432);
    if (v6)
    {
      v8 = *(_QWORD *)(v0 + 328);
      OUTLINED_FUNCTION_148_0();
      OUTLINED_FUNCTION_9_5();
      sub_1B25CC8B0();
      v9 = OUTLINED_FUNCTION_375();
      if (OUTLINED_FUNCTION_186_0(v9))
      {
        v10 = (_WORD *)OUTLINED_FUNCTION_246();
        OUTLINED_FUNCTION_649(v10);
        OUTLINED_FUNCTION_28_7(&dword_1B2494000, v7, (os_log_type_t)v5, "SpeechAnalyzer: Input task cancelled");
        OUTLINED_FUNCTION_174();
      }
      OUTLINED_FUNCTION_592();
      OUTLINED_FUNCTION_15_3();
      v11 = OUTLINED_FUNCTION_147_0();
      if (OUTLINED_FUNCTION_121_1(v11))
      {
        OUTLINED_FUNCTION_58_4();
        v12 = OUTLINED_FUNCTION_175_0();
        OUTLINED_FUNCTION_42_7(v12, v13);
        return OUTLINED_FUNCTION_29_2();
      }
      OUTLINED_FUNCTION_62_1(v5, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
      v25 = *(void **)(v0 + 264);
    }
    else
    {
      OUTLINED_FUNCTION_715();
      OUTLINED_FUNCTION_165_0();
      OUTLINED_FUNCTION_165_0();
      sub_1B25CC8B0();
      v19 = OUTLINED_FUNCTION_70_2();
      if (OUTLINED_FUNCTION_63_1(v19))
      {
        v20 = (_DWORD *)OUTLINED_FUNCTION_246();
        v26 = (_QWORD *)OUTLINED_FUNCTION_246();
        *v20 = 138412290;
        OUTLINED_FUNCTION_165_0();
        v21 = OUTLINED_FUNCTION_835();
        OUTLINED_FUNCTION_616(v21);
        OUTLINED_FUNCTION_350();
        *v26 = v1;
        OUTLINED_FUNCTION_148_0();
        OUTLINED_FUNCTION_148_0();
        OUTLINED_FUNCTION_32_7(&dword_1B2494000, v22, v23, "SpeechAnalyzer: Input task ending with error: %@");
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7488);
        OUTLINED_FUNCTION_13_1();
        OUTLINED_FUNCTION_174();
      }
      OUTLINED_FUNCTION_148_0();
      OUTLINED_FUNCTION_148_0();
      OUTLINED_FUNCTION_480();
      OUTLINED_FUNCTION_15_3();
      v24 = OUTLINED_FUNCTION_147_0();
      *(_QWORD *)(v0 + 520) = v24;
      if (v24)
      {
        OUTLINED_FUNCTION_165_0();
        return OUTLINED_FUNCTION_29_2();
      }
      v25 = (void *)v5;
    }

  }
  else
  {
    OUTLINED_FUNCTION_145_2();
    v14 = OUTLINED_FUNCTION_375();
    if (OUTLINED_FUNCTION_186_0(v14))
    {
      v15 = (_WORD *)OUTLINED_FUNCTION_246();
      OUTLINED_FUNCTION_71_2(v15);
      OUTLINED_FUNCTION_33_6(&dword_1B2494000, v16, v17, "SpeechAnalyzer: Input exhausted or ended");
      OUTLINED_FUNCTION_174();
    }
    OUTLINED_FUNCTION_592();
    OUTLINED_FUNCTION_15_3();
    v18 = OUTLINED_FUNCTION_147_0();
    *(_QWORD *)(v0 + 488) = v18;
    if (v18)
      return OUTLINED_FUNCTION_29_2();
  }
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_114();
  OUTLINED_FUNCTION_148();
  OUTLINED_FUNCTION_211();
  OUTLINED_FUNCTION_170();
  return OUTLINED_FUNCTION_13(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B2516300()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  char v4;
  NSObject *v5;
  uint64_t v6;
  os_log_type_t v7;
  _WORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v19;
  _QWORD *v20;

  OUTLINED_FUNCTION_49();
  v2 = *(void **)(v0 + 456);
  OUTLINED_FUNCTION_30(*(_QWORD *)(v0 + 392));

  v3 = *(_QWORD *)(v0 + 480);
  *(_QWORD *)(v0 + 496) = v3;
  *(_QWORD *)(v0 + 264) = v3;
  OUTLINED_FUNCTION_165_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36D060);
  v4 = OUTLINED_FUNCTION_312();
  v5 = *(NSObject **)(v0 + 432);
  if ((v4 & 1) != 0)
  {
    v6 = *(_QWORD *)(v0 + 328);
    OUTLINED_FUNCTION_148_0();
    OUTLINED_FUNCTION_9_5();
    sub_1B25CC8B0();
    v7 = OUTLINED_FUNCTION_375();
    if (OUTLINED_FUNCTION_186_0(v7))
    {
      v8 = (_WORD *)OUTLINED_FUNCTION_246();
      OUTLINED_FUNCTION_649(v8);
      OUTLINED_FUNCTION_28_7(&dword_1B2494000, v5, (os_log_type_t)v3, "SpeechAnalyzer: Input task cancelled");
      OUTLINED_FUNCTION_174();
    }
    OUTLINED_FUNCTION_592();
    OUTLINED_FUNCTION_15_3();
    v9 = OUTLINED_FUNCTION_147_0();
    if (OUTLINED_FUNCTION_121_1(v9))
    {
      OUTLINED_FUNCTION_58_4();
      v10 = OUTLINED_FUNCTION_175_0();
      OUTLINED_FUNCTION_42_7(v10, v11);
LABEL_10:
      OUTLINED_FUNCTION_117_0();
      return OUTLINED_FUNCTION_29_2();
    }
    OUTLINED_FUNCTION_62_1(v3, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    v19 = *(void **)(v0 + 264);
  }
  else
  {
    OUTLINED_FUNCTION_715();
    OUTLINED_FUNCTION_165_0();
    OUTLINED_FUNCTION_165_0();
    sub_1B25CC8B0();
    v12 = OUTLINED_FUNCTION_70_2();
    if (OUTLINED_FUNCTION_63_1(v12))
    {
      v13 = (_DWORD *)OUTLINED_FUNCTION_246();
      v20 = (_QWORD *)OUTLINED_FUNCTION_246();
      *v13 = 138412290;
      OUTLINED_FUNCTION_165_0();
      v14 = OUTLINED_FUNCTION_835();
      OUTLINED_FUNCTION_616(v14);
      OUTLINED_FUNCTION_350();
      *v20 = v1;
      OUTLINED_FUNCTION_148_0();
      OUTLINED_FUNCTION_148_0();
      OUTLINED_FUNCTION_32_7(&dword_1B2494000, v15, v16, "SpeechAnalyzer: Input task ending with error: %@");
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7488);
      OUTLINED_FUNCTION_13_1();
      OUTLINED_FUNCTION_174();
    }
    OUTLINED_FUNCTION_148_0();
    OUTLINED_FUNCTION_148_0();
    OUTLINED_FUNCTION_480();
    OUTLINED_FUNCTION_15_3();
    v17 = OUTLINED_FUNCTION_147_0();
    *(_QWORD *)(v0 + 520) = v17;
    if (v17)
    {
      OUTLINED_FUNCTION_165_0();
      goto LABEL_10;
    }
    v19 = (void *)v3;
  }

  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_114();
  OUTLINED_FUNCTION_148();
  OUTLINED_FUNCTION_211();
  OUTLINED_FUNCTION_170();
  return OUTLINED_FUNCTION_13(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B2516544()
{
  OUTLINED_FUNCTION_114_3(OBJC_IVAR____TtC6Speech14SpeechAnalyzer_isInputFinished);
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B2516580()
{
  uint64_t v0;

  OUTLINED_FUNCTION_157_1();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_114();
  OUTLINED_FUNCTION_148();
  OUTLINED_FUNCTION_211();
  OUTLINED_FUNCTION_170();
  return OUTLINED_FUNCTION_4_6(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B25165C8()
{
  OUTLINED_FUNCTION_660(OBJC_IVAR____TtC6Speech14SpeechAnalyzer_isInputFinished);
  OUTLINED_FUNCTION_69_4();
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1B2516608()
{
  uint64_t v0;

  OUTLINED_FUNCTION_157_1();
  OUTLINED_FUNCTION_30(*(_QWORD *)(v0 + 312));

  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_114();
  OUTLINED_FUNCTION_148();
  OUTLINED_FUNCTION_211();
  OUTLINED_FUNCTION_170();
  return OUTLINED_FUNCTION_4_6(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B2516664()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 496);
  OUTLINED_FUNCTION_660(OBJC_IVAR____TtC6Speech14SpeechAnalyzer_isInputFinished);
  OUTLINED_FUNCTION_69_4();
  OUTLINED_FUNCTION_262_0();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 528) = v2;
  *v2 = v0;
  v2[1] = sub_1B25166C8;
  return OUTLINED_FUNCTION_82_5(1, v1);
}

uint64_t sub_1B25166C8()
{
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_670();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B2516704()
{
  uint64_t v0;

  OUTLINED_FUNCTION_157_1();

  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_114();
  OUTLINED_FUNCTION_148();
  OUTLINED_FUNCTION_211();
  OUTLINED_FUNCTION_170();
  return OUTLINED_FUNCTION_4_6(*(uint64_t (**)(void))(v0 + 8));
}

void AudioBufferSequence.init(url:processingFormat:)(uint64_t a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  char v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;

  sub_1B25CC6F4();
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v7, v8);
  OUTLINED_FUNCTION_41_1();
  sub_1B25CCA00();
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v9, v10);
  OUTLINED_FUNCTION_41_1();
  v11 = sub_1B25CC538();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v13);
  OUTLINED_FUNCTION_41_1();
  v16 = v15 - v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v15 - v14, a1, v11);
  v17 = objc_allocWithZone(MEMORY[0x1E0C89A98]);
  v18 = sub_1B2517CF8(v16);
  if (v3)
  {

    OUTLINED_FUNCTION_75_6();
    return;
  }
  if (!a2)
  {
    v24 = v18;
    v25 = v18;
    v23 = 0;
    goto LABEL_9;
  }
  v34 = v18;
  v19 = v18;
  v20 = a2;
  v21 = OUTLINED_FUNCTION_125_1();
  sub_1B24ADA58(0, &qword_1EEFD73A8);
  v22 = sub_1B25CD0D8();

  if ((v22 & 1) != 0)
  {

    a2 = 0;
    v23 = 0;
    v24 = v34;
LABEL_9:
    OUTLINED_FUNCTION_75_6();
    v30 = v24;
    sub_1B2517E00(a2, v23);

    *a3 = v30;
    a3[1] = a2;
    a3[2] = v23;

    sub_1B2517E2C(a2, v23);
    return;
  }
  v26 = OUTLINED_FUNCTION_125_1();
  v27 = v20;
  v28 = sub_1B2516A30(v26, v27);
  if (v28)
  {
    a2 = v28;
    v23 = v29;

    v24 = v34;
    goto LABEL_9;
  }

  sub_1B25CC9AC();
  if (qword_1EEFD8028 != -1)
    swift_once();
  v31 = (id)qword_1EEFDB360;
  sub_1B25CC6AC();
  OUTLINED_FUNCTION_17();
  v32 = sub_1B25CCA60();
  related decl 'e' for SFSpeechErrorCode.init(_:description:)(2, v32, v33);
  swift_willThrow();

  OUTLINED_FUNCTION_75_6();
}

id sub_1B2516A30(void *a1, void *a2)
{
  id v4;
  id v5;
  id result;

  v4 = OUTLINED_FUNCTION_136_1(objc_allocWithZone(MEMORY[0x1E0C89AC0]), sel_initWithPCMFormat_frameCapacity_);
  if (v4)
  {
    v5 = v4;
    OUTLINED_FUNCTION_60((uint64_t)v4, qword_1EEFD9720);
    result = sub_1B251711C(a1, a2);
    if (result)
      return result;
    a2 = v5;
  }
  else
  {

  }
  return 0;
}

uint64_t AudioBufferSequence.next()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1B25CC6F4();
  *(_QWORD *)(v1 + 24) = OUTLINED_FUNCTION_7_0();
  sub_1B25CCA00();
  v2 = OUTLINED_FUNCTION_7_0();
  v3 = *v0;
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v3;
  *(_OWORD *)(v1 + 48) = *(_OWORD *)(v0 + 1);
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B2516B48()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  unsigned int v13;
  void *v14;
  id v15;
  unsigned int v16;
  id v18;

  v1 = *(_QWORD *)(v0 + 48);
  if (!v1 || (v2 = objc_msgSend(*(id *)(v0 + 48), sel_outputFormat)) == 0)
    v2 = objc_msgSend(*(id *)(v0 + 40), sel_processingFormat);
  v3 = OUTLINED_FUNCTION_136_1(objc_allocWithZone(MEMORY[0x1E0C89AC0]), sel_initWithPCMFormat_frameCapacity_);
  if (!v3)
  {
    sub_1B25CC9AC();
    if (qword_1EEFD8028 != -1)
      swift_once();
    v9 = (id)qword_1EEFDB360;
    sub_1B25CC6AC();
    v10 = OUTLINED_FUNCTION_579();
    OUTLINED_FUNCTION_709(2, v11, v10, v11);
    OUTLINED_FUNCTION_800();
    goto LABEL_16;
  }
  v4 = v3;
  if (!v1)
  {
    v12 = *(void **)(v0 + 40);
    *(_QWORD *)(v0 + 16) = 0;
    v13 = objc_msgSend(v12, sel_readIntoBuffer_error_, v4, v0 + 16);
    v14 = *(void **)(v0 + 16);
    if (v13)
    {
      v15 = v14;
      goto LABEL_12;
    }
    v18 = v14;
    sub_1B25CC4D8();

    swift_willThrow();
    v2 = v4;
LABEL_16:

    swift_task_dealloc();
    OUTLINED_FUNCTION_36();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = *(void **)(v0 + 56);
  v6 = *(void **)(v0 + 40);
  v7 = *(id *)(v0 + 48);
  v8 = v5;
  sub_1B2516DC8(v6, (uint64_t)v4, v7, v8);

LABEL_12:
  v16 = objc_msgSend(v4, sel_frameLength);

  if (!v16)
  {

    v4 = 0;
  }
  swift_task_dealloc();
  OUTLINED_FUNCTION_36();
  return (*(uint64_t (**)(void *))(v0 + 8))(v4);
}

uint64_t sub_1B2516DC8(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8;
  id *v9;
  _QWORD *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id aBlock[7];

  aBlock[6] = *(id *)MEMORY[0x1E0C80C00];
  OUTLINED_FUNCTION_135_2();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = 0;
  v9 = (id *)(v8 + 16);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a1;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = v8;
  aBlock[4] = sub_1B25188BC;
  aBlock[5] = v10;
  aBlock[0] = (id)MEMORY[0x1E0C809B0];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_1B25172D4;
  aBlock[3] = &block_descriptor_4;
  v11 = _Block_copy(aBlock);
  v12 = a1;
  swift_retain();
  v13 = a3;
  v14 = a4;
  swift_release();
  aBlock[0] = 0;
  objc_msgSend(v13, sel_convertToBuffer_error_withInputFromBlock_, a2, aBlock, v11);
  _Block_release(v11);
  if (aBlock[0])
    goto LABEL_4;
  swift_beginAccess();
  if (*v9)
  {
    v15 = *v9;
LABEL_4:
    swift_willThrow();
    return swift_release();
  }
  return swift_release();
}

id AudioBufferSequence.makeAsyncIterator()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v2 = *(void **)v1;
  v3 = *(void **)(v1 + 8);
  v4 = *(void **)(v1 + 16);
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  v5 = v2;
  return sub_1B2517E00(v3, v4);
}

void sub_1B2516F9C(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;

  AudioBufferSequence.makeAsyncIterator()(a1);
  v2 = *(void **)v1;
  v3 = *(void **)(v1 + 8);
  v4 = *(void **)(v1 + 16);

  sub_1B2517E2C(v3, v4);
}

uint64_t sub_1B2516FCC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1B2517014;
  return AudioBufferSequence.next()();
}

uint64_t sub_1B2517014(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  OUTLINED_FUNCTION_141_0();
  OUTLINED_FUNCTION_19_3(v5);
  if (!v1)
    **(_QWORD **)(v2 + 16) = a1;
  return OUTLINED_FUNCTION_56(*(uint64_t (**)(void))(v3 + 8));
}

uint64_t sub_1B2517054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v4[2] = a1;
  v4[3] = a4;
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EEFDA8A8 + dword_1EEFDA8A8);
  v7 = (_QWORD *)swift_task_alloc();
  v4[4] = v7;
  *v7 = v4;
  v7[1] = sub_1B25170C8;
  return v9(a2, a3);
}

uint64_t sub_1B25170C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  OUTLINED_FUNCTION_141_0();
  OUTLINED_FUNCTION_19_3(v5);
  if (v1)
    **(_QWORD **)(v2 + 24) = v1;
  else
    **(_QWORD **)(v2 + 16) = a1;
  return OUTLINED_FUNCTION_56(*(uint64_t (**)(void))(v3 + 8));
}

id sub_1B251711C(void *a1, void *a2)
{
  id v4;

  v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initFromFormat_toFormat_, a1, a2);

  return v4;
}

void *sub_1B2517174(unsigned int a1, _QWORD *a2, id a3, uint64_t a4, void *a5, uint64_t a6)
{
  id v11;
  unsigned int v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  id v20[4];

  v20[3] = *(id *)MEMORY[0x1E0C80C00];
  v11 = objc_msgSend(a3, sel_framePosition);
  if ((uint64_t)v11 >= (uint64_t)objc_msgSend(a3, sel_length))
  {
    a5 = 0;
    *a2 = 2;
  }
  else
  {
    v12 = objc_msgSend(a5, sel_frameCapacity);
    if (v12 >= a1)
      v13 = a1;
    else
      v13 = v12;
    v20[0] = 0;
    if (objc_msgSend(a3, sel_readIntoBuffer_frameCount_error_, a5, v13, v20))
    {
      v14 = v20[0];
      *a2 = 2 * (objc_msgSend(a5, sel_frameLength) == 0);
      v15 = a5;
    }
    else
    {
      v16 = v20[0];
      v17 = sub_1B25CC4D8();

      swift_willThrow();
      swift_beginAccess();
      v18 = *(void **)(a6 + 16);
      *(_QWORD *)(a6 + 16) = v17;

      return 0;
    }
  }
  return a5;
}

id sub_1B25172D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t, uint64_t);
  void *v6;

  v5 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v6 = (void *)v5(a2, a3);
  swift_release();
  return v6;
}

uint64_t SpeechAnalyzer.__allocating_init(client:inputAudioFile:modules:options:restrictedLogging:analysisContext:didChangeVolatileRange:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(void);
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  _QWORD *v21;

  *(_QWORD *)(v9 + 88) = a8;
  *(_QWORD *)(v9 + 96) = v8;
  *(_QWORD *)(v9 + 72) = a6;
  *(_QWORD *)(v9 + 80) = a7;
  *(_BYTE *)(v9 + 248) = a5;
  *(_QWORD *)(v9 + 56) = a3;
  *(_QWORD *)(v9 + 64) = a4;
  *(_QWORD *)(v9 + 40) = a1;
  *(_QWORD *)(v9 + 48) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6E90);
  *(_QWORD *)(v9 + 104) = OUTLINED_FUNCTION_7_0();
  type metadata accessor for ClientInfo(0);
  *(_QWORD *)(v9 + 112) = OUTLINED_FUNCTION_7_0();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD9660);
  *(_QWORD *)(v9 + 120) = v11;
  *(_QWORD *)(v9 + 128) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v9 + 136) = OUTLINED_FUNCTION_92();
  *(_QWORD *)(v9 + 144) = OUTLINED_FUNCTION_92();
  sub_1B25CC6F4();
  *(_QWORD *)(v9 + 152) = OUTLINED_FUNCTION_7_0();
  sub_1B25CCA00();
  *(_QWORD *)(v9 + 160) = OUTLINED_FUNCTION_7_0();
  v12 = sub_1B25CC538();
  *(_QWORD *)(v9 + 168) = v12;
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v9 + 176) = v13;
  *(_QWORD *)(v9 + 184) = OUTLINED_FUNCTION_92();
  v14 = OUTLINED_FUNCTION_92();
  *(_QWORD *)(v9 + 192) = v14;
  v15 = *(void (**)(void))(v13 + 16);
  *(_QWORD *)(v9 + 200) = v15;
  v15();
  v16 = objc_allocWithZone(MEMORY[0x1E0C89A98]);
  v17 = sub_1B2517CF8(v14);
  *(_QWORD *)(v9 + 208) = 0;
  v18 = v17;
  v19 = objc_msgSend(v17, sel_processingFormat);
  *(_QWORD *)(v9 + 216) = v19;

  v20 = v19;
  v21 = (_QWORD *)OUTLINED_FUNCTION_92();
  *(_QWORD *)(v9 + 224) = v21;
  *v21 = v9;
  v21[1] = sub_1B2517588;
  return static SpeechAnalyzer.bestAvailableAudioFormat(compatibleWith:clientInfo:considering:)(a3, a1, (uint64_t)v19);
}

uint64_t sub_1B2517588(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int v45;
  uint64_t v46;
  __int128 v47;

  OUTLINED_FUNCTION_176();
  v4 = *(void **)(v1 + 216);
  OUTLINED_FUNCTION_177(v5);
  *(_QWORD *)(v1 + 232) = a1;
  swift_task_dealloc();

  if (!a1)
  {
    swift_bridgeObjectRelease();
    sub_1B25CC9AC();
    if (qword_1EEFD8028 != -1)
      swift_once();
    v41 = *(_QWORD *)(v1 + 176);
    v44 = *(_QWORD *)(v1 + 168);
    v16 = *(_QWORD *)(v1 + 80);
    v18 = *(_QWORD *)(v1 + 64);
    v17 = *(void **)(v1 + 72);
    v19 = *(_QWORD *)(v1 + 48);
    v36 = *(void **)(v1 + 216);
    v38 = *(_QWORD *)(v1 + 40);
    v20 = (id)qword_1EEFDB360;
    sub_1B25CC6AC();
    v21 = OUTLINED_FUNCTION_579();
    OUTLINED_FUNCTION_709(5, v22, v21, v22);
    swift_willThrow();
    sub_1B24C4564(v16);

    sub_1B2517E58(v18);
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v19, v44);
    goto LABEL_7;
  }
  v6 = *(_QWORD *)(v1 + 208);
  v7 = *(_QWORD *)(v1 + 184);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v1 + 200))(v7, *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 168));
  v8 = a1;
  AudioBufferSequence.init(url:processingFormat:)(v7, a1, &v46);
  if (v6)
  {
    v9 = *(void **)(v1 + 216);
    v43 = v2;
    v10 = *(_QWORD *)(v1 + 176);
    v11 = *(_QWORD *)(v1 + 80);
    v13 = *(_QWORD *)(v1 + 64);
    v12 = *(void **)(v1 + 72);
    v14 = *(_QWORD *)(v1 + 48);
    v38 = *(_QWORD *)(v1 + 40);
    v40 = *(_QWORD *)(v1 + 168);
    swift_bridgeObjectRelease();
    sub_1B24C4564(v11);

    sub_1B2517E58(v13);
    v15 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v2 = v43;
    v15(v14, v40);
LABEL_7:
    sub_1B2518488(v38, type metadata accessor for ClientInfo);
    swift_task_dealloc();
    OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_114();
    OUTLINED_FUNCTION_148();
    OUTLINED_FUNCTION_211();
    OUTLINED_FUNCTION_170();
    OUTLINED_FUNCTION_48();
    return (*(uint64_t (**)(void))(v2 + 8))();
  }
  *(_QWORD *)(v1 + 16) = v46;
  v24 = v1 + 16;
  v26 = *(_QWORD *)(v24 + 120);
  v25 = *(_QWORD *)(v24 + 128);
  v27 = *(_QWORD *)(v24 + 112);
  v28 = *(_QWORD *)(v24 + 96);
  v33 = *(_QWORD *)(v24 + 104);
  v34 = *(_QWORD *)(v24 + 88);
  v37 = *(_QWORD *)(v24 + 64);
  v39 = *(_QWORD *)(v24 + 72);
  v29 = *(_QWORD *)(v24 + 48);
  v35 = *(void **)(v24 + 56);
  v45 = *(unsigned __int8 *)(v24 + 232);
  v42 = *(_QWORD *)(v24 + 40);
  v30 = *(_QWORD *)(v24 + 24);
  *(_OWORD *)(v24 + 8) = v47;
  sub_1B2517E98();
  OUTLINED_FUNCTION_130_0();
  sub_1B2517ED4(v30, v28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v26, v25, v33);
  sub_1B2517F18(v29, v34);
  swift_allocObject();
  v31 = v8;
  v32 = v35;
  sub_1B24AB754(v37);
  *(_QWORD *)(v24 + 224) = sub_1B2513380(v28, v26, v31, v42, v34, v45, v32, v37, v39);
  swift_retain();
  OUTLINED_FUNCTION_117_0();
  return swift_task_switch();
}

uint64_t sub_1B25178F4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(void **)(v0 + 232);
  v2 = *(void **)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 144);
  v10 = *(_QWORD *)(v0 + 168);
  v11 = *(_QWORD *)(v0 + 128);
  v12 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 64);
  v5 = *(void **)(v0 + 72);
  v8 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 48);
  sub_1B24C4564(*(_QWORD *)(v0 + 80));

  swift_release();
  sub_1B2517E58(v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v10);
  sub_1B2518488(v8, type metadata accessor for ClientInfo);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v4, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_72();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 240));
}

uint64_t sub_1B2517A28(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

uint64_t SpeechAnalyzer.setInputAudioFile(_:withAudioFormat:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v4 = sub_1B25CC538();
  v3[8] = v4;
  v3[9] = *(_QWORD *)(v4 - 8);
  v3[10] = OUTLINED_FUNCTION_7_0();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD9660);
  v3[11] = v5;
  v3[12] = *(_QWORD *)(v5 - 8);
  v3[13] = OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_117_0();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B2517AB0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  __int128 v8;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(void **)(v0 + 48);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 16))(v1, *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 64));
  v3 = v2;
  AudioBufferSequence.init(url:processingFormat:)(v1, v2, &v7);
  *(_QWORD *)(v0 + 16) = v7;
  *(_OWORD *)(v0 + 24) = v8;
  sub_1B2517E98();
  OUTLINED_FUNCTION_130_0();
  v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EEFD9688 + dword_1EEFD9688);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v4;
  *v4 = v0;
  v4[1] = sub_1B2517BBC;
  return v6(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 48));
}

uint64_t sub_1B2517BBC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_177(v2);
  *(_QWORD *)(v0 + 120) = v1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1B2517C0C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_48();
  return OUTLINED_FUNCTION_15_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B2517C4C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_30(*(_QWORD *)(v0 + 96));
  swift_task_dealloc();
  OUTLINED_FUNCTION_48();
  return OUTLINED_FUNCTION_15_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B2517C8C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_1B2517CA8()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t (*v5)(void);

  v2 = v0[2];
  v1 = (void *)v0[3];
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = 0;
  *(_QWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 24) = 0;
  *(_BYTE *)(v2 + 32) = 1;
  *(_QWORD *)(v2 + 40) = 0;
  *(_BYTE *)(v2 + 48) = 1;
  *(_QWORD *)(v2 + 56) = 0;
  *(_BYTE *)(v2 + 64) = 1;
  v5 = (uint64_t (*)(void))v0[1];
  v3 = v1;
  return OUTLINED_FUNCTION_21(v5);
}

id sub_1B2517CF8(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  id v9;
  id v10;
  uint64_t v11;
  id v13[2];

  v2 = v1;
  v13[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = (void *)sub_1B25CC4F0();
  v13[0] = 0;
  v5 = objc_msgSend(v2, sel_initForReading_error_, v4, v13);

  v6 = v13[0];
  if (v5)
  {
    v7 = sub_1B25CC538();
    v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
    v9 = v6;
    v8(a1, v7);
  }
  else
  {
    v10 = v13[0];
    sub_1B25CC4D8();

    swift_willThrow();
    v11 = sub_1B25CC538();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(a1, v11);
  }
  return v5;
}

id sub_1B2517E00(id result, void *a2)
{
  id v2;

  if (result)
  {
    v2 = result;
    return a2;
  }
  return result;
}

void sub_1B2517E2C(void *a1, void *a2)
{
  if (a1)
  {

  }
}

uint64_t sub_1B2517E58(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6E90);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1B2517E98()
{
  unint64_t result;

  result = qword_1EEFD9670;
  if (!qword_1EEFD9670)
  {
    result = MEMORY[0x1B5E261DC](&protocol conformance descriptor for AudioBufferSequence, &type metadata for AudioBufferSequence);
    atomic_store(result, (unint64_t *)&qword_1EEFD9670);
  }
  return result;
}

uint64_t sub_1B2517ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClientInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B2517F18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6E90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B2517F64()
{
  unint64_t result;

  result = qword_1EEFD9690[0];
  if (!qword_1EEFD9690[0])
  {
    result = MEMORY[0x1B5E261DC](&protocol conformance descriptor for AudioBufferSequence, &type metadata for AudioBufferSequence);
    atomic_store(result, qword_1EEFD9690);
  }
  return result;
}

uint64_t sub_1B2517FA0()
{
  return MEMORY[0x1E0DEDB38];
}

void destroy for AudioBufferSequence(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 8);
  if (v2)
  {

  }
}

_QWORD *_s6Speech19AudioBufferSequenceVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v4;
  _OWORD *v5;
  void *v6;
  _OWORD *v7;
  id v8;
  void *v9;
  id v10;
  id v11;

  v4 = *(void **)a2;
  *a1 = *(_QWORD *)a2;
  v5 = a1 + 1;
  v7 = (_OWORD *)(a2 + 8);
  v6 = *(void **)(a2 + 8);
  v8 = v4;
  if (v6)
  {
    v9 = *(void **)(a2 + 16);
    a1[1] = v6;
    a1[2] = v9;
    v10 = v6;
    v11 = v9;
  }
  else
  {
    *v5 = *v7;
  }
  return a1;
}

uint64_t assignWithCopy for AudioBufferSequence(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  if (!v7)
  {
    if (v8)
    {
      *(_QWORD *)(a1 + 8) = v8;
      v13 = *(void **)(a2 + 16);
      *(_QWORD *)(a1 + 16) = v13;
      v14 = v8;
      v15 = v13;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    return a1;
  }
  if (!v8)
  {
    sub_1B251810C((id *)(a1 + 8));
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  return a1;
}

id *sub_1B251810C(id *a1)
{
  destroy for AudioConverter(a1);
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for AudioBufferSequence(uint64_t a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = *(void **)(a1 + 8);
  v6 = a2[1];
  if (!v5)
    goto LABEL_5;
  if (!v6)
  {
    sub_1B251810C((id *)(a1 + 8));
LABEL_5:
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    return a1;
  }
  *(_QWORD *)(a1 + 8) = v6;

  v7 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = a2[2];

  return a1;
}

uint64_t getEnumTagSinglePayload for AudioAnalytics(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioAnalytics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioBufferSequence()
{
  return &type metadata for AudioBufferSequence;
}

_QWORD *initializeBufferWithCopyOfBuffer for AudioConverter(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

void destroy for AudioConverter(id *a1)
{

}

uint64_t assignWithCopy for AudioConverter(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  return a1;
}

uint64_t assignWithTake for AudioConverter(uint64_t a1, _OWORD *a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for AudioAnalytics.AcousticFeature(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioAnalytics.AcousticFeature(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioConverter()
{
  return &type metadata for AudioConverter;
}

uint64_t sub_1B25183D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD8A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B251841C()
{
  return objectdestroy_8Tm(&qword_1EEFD8938);
}

uint64_t sub_1B2518428()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_62_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD8938);
  OUTLINED_FUNCTION_52_5();
  OUTLINED_FUNCTION_57_3();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_42_4(v0);
  OUTLINED_FUNCTION_150_0(v1);
  OUTLINED_FUNCTION_116_0();
  return sub_1B25139F8(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1B2518488(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1B25184C4()
{
  swift_weakDestroy();
  OUTLINED_FUNCTION_135_2();
  return swift_deallocObject();
}

uint64_t sub_1B25184E4()
{
  return objectdestroy_15Tm(&qword_1EEFD8938);
}

uint64_t sub_1B25184F0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_62_4();
  OUTLINED_FUNCTION_37_4();
  OUTLINED_FUNCTION_76_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD8938);
  OUTLINED_FUNCTION_34_4();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_42_4(v0);
  OUTLINED_FUNCTION_68_6(v1);
  OUTLINED_FUNCTION_116_0();
  return sub_1B2515490(v2, v3, v4, v5, v6, v7, v8);
}

unint64_t sub_1B2518554()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEFD7100;
  if (!qword_1EEFD7100)
  {
    v1 = sub_1B25CCC70();
    result = MEMORY[0x1B5E261DC](MEMORY[0x1E0DF05E8], v1);
    atomic_store(result, (unint64_t *)&qword_1EEFD7100);
  }
  return result;
}

uint64_t sub_1B2518594()
{
  return objectdestroy_15Tm(&qword_1EEFD9660);
}

uint64_t objectdestroy_15Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v5 = *(_QWORD *)(OUTLINED_FUNCTION_37_4() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  OUTLINED_FUNCTION_128_0();
  __swift_instantiateConcreteTypeFromMangledName(a1);
  OUTLINED_FUNCTION_90_3();
  v8 = (v7 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  OUTLINED_FUNCTION_140_0();
  OUTLINED_FUNCTION_249_0(v1 + v6, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  swift_release();
  OUTLINED_FUNCTION_156(v1 + v3, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));

  return swift_deallocObject();
}

uint64_t sub_1B2518664()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_62_4();
  OUTLINED_FUNCTION_37_4();
  OUTLINED_FUNCTION_76_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD9660);
  OUTLINED_FUNCTION_34_4();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_42_4(v0);
  OUTLINED_FUNCTION_68_6(v1);
  OUTLINED_FUNCTION_116_0();
  return sub_1B2514180(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1B25186C8(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1B5E261DC](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B251870C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_300();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_42_4(v0);
  v2 = OUTLINED_FUNCTION_78_2(v1);
  return OUTLINED_FUNCTION_151_0(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1B2518750()
{
  return objectdestroy_8Tm(&qword_1EEFD9660);
}

uint64_t objectdestroy_8Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a1) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  OUTLINED_FUNCTION_128_0();
  OUTLINED_FUNCTION_37_4();
  OUTLINED_FUNCTION_90_3();
  OUTLINED_FUNCTION_140_0();
  swift_release();
  OUTLINED_FUNCTION_156(v1 + v6, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));

  OUTLINED_FUNCTION_249_0(v1 + v4, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  return swift_deallocObject();
}

uint64_t sub_1B2518800()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_62_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD9660);
  OUTLINED_FUNCTION_52_5();
  OUTLINED_FUNCTION_57_3();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_42_4(v0);
  OUTLINED_FUNCTION_150_0(v1);
  OUTLINED_FUNCTION_116_0();
  return sub_1B2513A58(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1B2518860()
{
  uint64_t v0;

  OUTLINED_FUNCTION_135_2();
  return swift_deallocObject();
}

uint64_t sub_1B2518880()
{
  id *v0;

  swift_release();
  return swift_deallocObject();
}

void *sub_1B25188BC(unsigned int a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_1B2517174(a1, a2, *(id *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

void OUTLINED_FUNCTION_1_3()
{
  sub_1B24DB984();
}

void OUTLINED_FUNCTION_3_8()
{
  sub_1B24DB984();
}

uint64_t OUTLINED_FUNCTION_4_6(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_9_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v0, v2);
}

uint64_t OUTLINED_FUNCTION_20_5@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v2, v3);
}

void OUTLINED_FUNCTION_28_7(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 2u);
}

void OUTLINED_FUNCTION_32_7(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

void OUTLINED_FUNCTION_33_6(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t OUTLINED_FUNCTION_40_2(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 256) = a1;
  return sub_1B25CD12C();
}

uint64_t OUTLINED_FUNCTION_41_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v3 + 528) = a1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, v2, v4);
}

uint64_t OUTLINED_FUNCTION_42_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v3 + 512) = a1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, v2, v4);
}

uint64_t OUTLINED_FUNCTION_46_4()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_47_7(void *a1)
{
  return sub_1B24DBA4C(a1);
}

uint64_t OUTLINED_FUNCTION_51_4()
{
  return sub_1B25CCC88();
}

uint64_t OUTLINED_FUNCTION_52_5()
{
  return sub_1B25CCCDC();
}

uint64_t OUTLINED_FUNCTION_54_4()
{
  return sub_1B25CCC88();
}

uint64_t OUTLINED_FUNCTION_56_4()
{
  return sub_1B25CD0D8();
}

unint64_t OUTLINED_FUNCTION_58_4()
{
  return sub_1B2518554();
}

uint64_t OUTLINED_FUNCTION_68_6(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_75_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_78_2(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_80_5()
{
  uint64_t v0;
  char v1;

  *(_BYTE *)(v0 + 81) = v1;
  return sub_1B25CD12C();
}

uint64_t OUTLINED_FUNCTION_82_5(char a1, uint64_t a2)
{
  return sub_1B24C9668(a1, a2);
}

uint64_t OUTLINED_FUNCTION_84_3(_DWORD *a1)
{
  *a1 = 16777472;
  return sub_1B25CCCD0();
}

uint64_t OUTLINED_FUNCTION_87_3()
{
  return sub_1B25CCD60();
}

void OUTLINED_FUNCTION_89_3()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_91_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v2, v0);
}

uint64_t OUTLINED_FUNCTION_92_3()
{
  return sub_1B25CC9D0();
}

uint64_t OUTLINED_FUNCTION_93_3()
{
  return sub_1B25CC9D0();
}

uint64_t OUTLINED_FUNCTION_97_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

void OUTLINED_FUNCTION_99_3(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 5u);
}

uint64_t OUTLINED_FUNCTION_106_1()
{
  return sub_1B25CC9C4();
}

uint64_t OUTLINED_FUNCTION_108_3()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_109_2()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_112_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;

  return sub_1B2513AB8(v8, v6, v7, a4, a5, a6);
}

uint64_t OUTLINED_FUNCTION_114_3@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 + a1) = 1;
  return sub_1B24D9920(0);
}

uint64_t OUTLINED_FUNCTION_115_1(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 520) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_117_1()
{
  return sub_1B25CC9DC();
}

uint64_t OUTLINED_FUNCTION_120_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_121_1(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 504) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_123_1(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, v1, v3);
}

uint64_t OUTLINED_FUNCTION_124_2@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return sub_1B2517ED4(v2, v1 + a1);
}

id OUTLINED_FUNCTION_125_1()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, (SEL)(v1 + 3249));
}

uint64_t OUTLINED_FUNCTION_127_0()
{
  return sub_1B25CC8B0();
}

uint64_t OUTLINED_FUNCTION_130_0()
{
  return sub_1B25CD3F0();
}

void OUTLINED_FUNCTION_134_2()
{
  id *v0;

}

id OUTLINED_FUNCTION_136_1(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2, 4096);
}

uint64_t OUTLINED_FUNCTION_137_1()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_141_2()
{
  return sub_1B25CC9F4();
}

uint64_t OUTLINED_FUNCTION_142_1()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_143_2(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, v3, v1);
}

uint64_t OUTLINED_FUNCTION_144_1()
{
  return sub_1B25CC9D0();
}

uint64_t OUTLINED_FUNCTION_145_2()
{
  return sub_1B25CC8B0();
}

uint64_t sub_1B2518DC4()
{
  return swift_initClassMetadata2();
}

void sub_1B2518E08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = sub_1B25CD108();
  v2 = MEMORY[0x1E0C80A78](v0, v1);
  v4 = MEMORY[0x1E0C80A78](v2, v3);
  MEMORY[0x1E0C80A78](v4, v5);
  type metadata accessor for ZipStorage();
}

void sub_1B2518EE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, v2, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v4, v2 + *(int *)(v3 + 52), v0);
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v0);
  sub_1B25799B0(v6, v4, v1);
}

void sub_1B2518F5C()
{
  type metadata accessor for AsyncZip2Sequence.Iterator.InternalClass();
}

uint64_t sub_1B2518F8C()
{
  uint64_t v0;

  return sub_1B2518FA8(v0);
}

uint64_t sub_1B2518FA8(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

void sub_1B2518FD8()
{
  sub_1B2579A04();
}

uint64_t sub_1B2518FF0()
{
  uint64_t v0;

  swift_release();
  return v0;
}

void sub_1B2519008()
{
  sub_1B2518FD8();
}

uint64_t sub_1B2519014()
{
  return swift_deallocClassInstance();
}

void type metadata accessor for AsyncZip2Sequence.Iterator.InternalClass()
{
  JUMPOUT(0x1B5E26140);
}

uint64_t sub_1B2519034()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1B251903C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1B25190C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = v8;
  v10 = *(_QWORD *)(v6 + 64) + v8;
  v11 = *(_DWORD *)(v6 + 80) | v8;
  v12 = v11;
  v13 = v11 & 0x100000;
  if (v12 > 7 || v13 != 0 || (v10 & (unint64_t)~v9) + *(_QWORD *)(v7 + 64) > 0x18)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v10) & v17, ((unint64_t)a2 + v10) & v17, v5);
  }
  return v4;
}

uint64_t sub_1B2519198(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

uint64_t sub_1B25191F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1B251925C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1B25192C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1B2519334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1B25193A0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v6 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  v15 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_23;
  v16 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v8 >= v10)
        {
          v10 = v8;
        }
        else
        {
          a1 = (v14 + a1) & ~v13;
          v5 = v6;
        }
        return __swift_getEnumTagSinglePayload(a1, v10, v5);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_23;
LABEL_14:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if (!(_DWORD)v16)
    return v11 + v20 + 1;
  if (v16 <= 3)
    v21 = v16;
  else
    v21 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1B251947C + 4 * byte_1B25DCFD0[v21 - 1]))();
}

void sub_1B25194F0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0u;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

void type metadata accessor for AsyncZip2Sequence()
{
  JUMPOUT(0x1B5E26140);
}

void type metadata accessor for AsyncZip2Sequence.Iterator()
{
  JUMPOUT(0x1B5E26140);
}

uint64_t sub_1B25196FC()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1B251978C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = OUTLINED_FUNCTION_3_9();
  v2[5] = OUTLINED_FUNCTION_3_9();
  v2[6] = sub_1B25CD108();
  v2[7] = swift_getTupleTypeMetadata3();
  v3 = sub_1B25CD108();
  v2[8] = v3;
  v2[9] = *(_QWORD *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = OUTLINED_FUNCTION_92();
  v2[12] = OUTLINED_FUNCTION_92();
  v2[13] = OUTLINED_FUNCTION_92();
  return swift_task_switch();
}

uint64_t sub_1B2519890()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v1;
  *v1 = v0;
  v1[1] = sub_1B25198E4;
  return sub_1B2579B64(*(_QWORD *)(v0 + 80));
}

uint64_t sub_1B25198E4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_105();
  *v2 = *v1;
  *(_QWORD *)(v3 + 120) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B2519940()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(void);
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 56);
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) == 1)
  {
    v3 = *(_QWORD *)(v0 + 16);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(v1, *(_QWORD *)(v0 + 64));
    v4 = OUTLINED_FUNCTION_5_7();
    __swift_storeEnumTagSinglePayload(v3, 1, 1, v4);
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 96);
    v5 = *(_QWORD *)(v0 + 104);
    v35 = *(_QWORD *)(v0 + 88);
    v7 = *(_QWORD *)(v0 + 40);
    v8 = *(_QWORD *)(v0 + 32);
    v9 = *(_QWORD *)(v0 + 16);
    v10 = *(int *)(v2 + 48);
    v11 = v5 + v10;
    v12 = *(int *)(v2 + 64);
    v22 = v5 + v12;
    v13 = v1 + v10;
    v30 = v1 + v12;
    v31 = *(_QWORD *)(v0 + 48);
    v34 = *(_QWORD *)(v8 - 8);
    v25 = *(void (**)(void))(v34 + 32);
    ((void (*)(uint64_t, uint64_t, uint64_t))v25)(v5, v1, v8);
    v14 = v7;
    v32 = *(_QWORD *)(v7 - 8);
    v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32);
    v15 = v11;
    v28(v11, v13, v14);
    v33 = *(_QWORD *)(v31 - 8);
    v27 = *(void (**)(uint64_t, uint64_t))(v33 + 32);
    v27(v22, v30);
    v23 = v14;
    v29 = OUTLINED_FUNCTION_5_7();
    v24 = v9 + *(int *)(v29 + 48);
    v16 = v6 + *(int *)(v2 + 48);
    v26 = v6 + *(int *)(v2 + 64);
    (*(void (**)(void))(v34 + 16))();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v16, v15, v14);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v26, v22, v31);
    v17 = v9;
    ((void (*)(uint64_t, uint64_t, uint64_t))v25)(v9, v6, v8);
    v18 = v35 + *(int *)(v2 + 48);
    v19 = v35 + *(int *)(v2 + 64);
    v25();
    v28(v18, v15, v23);
    ((void (*)(uint64_t, uint64_t, uint64_t))v27)(v19, v22, v31);
    v28(v24, v18, v23);
    __swift_storeEnumTagSinglePayload(v17, 0, 1, v29);
    v20 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
    v20(v19, v31);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v8);
    v20(v26, v31);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v16, v23);
  }
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_36();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B2519BFC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_36();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B2519C48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1B2519C60()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_1B2519CB4;
  return sub_1B251978C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1B2519CB4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_81();
  return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B2519CE0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1B249C4EC;
  return sub_1B2519C48(a1);
}

uint64_t sub_1B2519D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t AssociatedTypeWitness;
  _QWORD *v6;

  v4[2] = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[3] = AssociatedTypeWitness;
  v4[4] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4[5] = swift_task_alloc();
  v6 = (_QWORD *)swift_task_alloc();
  v4[6] = v6;
  *v6 = v4;
  v6[1] = sub_1B2519E08;
  return sub_1B25CCC94();
}

uint64_t sub_1B2519E08()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;

  v2 = (_QWORD *)*v1;
  v3 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v2[4] + 32))(v2[2], v2[5], v2[3]);
    OUTLINED_FUNCTION_36();
  }
  else
  {
    swift_task_dealloc();
  }
  return ((uint64_t (*)(void))v3[1])();
}

void sub_1B2519E7C()
{
  JUMPOUT(0x1B5E261DCLL);
}

void sub_1B2519E8C()
{
  sub_1B2518E08();
}

uint64_t sub_1B2519EA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;

  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v2, v1);
  *v3 = a1;
  return result;
}

uint64_t OUTLINED_FUNCTION_3_9()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_4_7()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_5_7()
{
  return swift_getTupleTypeMetadata2();
}

void sub_1B2519EFC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  char v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  _BYTE v11[24];
  uint64_t v12;

  if (a1 == 0xD00000000000002DLL && (OUTLINED_FUNCTION_18_7(), v7) || (OUTLINED_FUNCTION_10_7() & 1) != 0)
  {
    objc_msgSend(a3, sel_hello);
    return;
  }
  if (a1 == 0xD00000000000003CLL && (OUTLINED_FUNCTION_18_7(), v7) || (OUTLINED_FUNCTION_10_7() & 1) != 0)
  {
    if (!*(_QWORD *)(a4 + 16))
    {
      __break(1u);
      return;
    }
    sub_1B251AC38(a4 + 32, (uint64_t)v11);
    if (v12)
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        v8 = (void *)sub_1B25CC580();
        sub_1B24AB6DC(v9, v10);
LABEL_15:
        objc_msgSend(a3, sel_addAudioSampleData_, v8);

        return;
      }
    }
    else
    {
      sub_1B24B8848((uint64_t)v11);
    }
    v8 = 0;
    goto LABEL_15;
  }
  if (a1 == 0xD000000000000030 && (OUTLINED_FUNCTION_18_7(), v7) || (OUTLINED_FUNCTION_10_7() & 1) != 0)
    objc_msgSend(a3, sel_endAudio);
}

uint64_t sub_1B251A088()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[3] = v0;
  v2 = OUTLINED_FUNCTION_61();
  v1[4] = v2;
  v1[5] = *(_QWORD *)(v2 - 8);
  v1[6] = OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B251A0CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  if ((swift_distributed_actor_is_remote() & 1) == 0)
    return OUTLINED_FUNCTION_15();
  v2 = OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_35(v2);
  if (v0)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_77();
    return OUTLINED_FUNCTION_23(*(uint64_t (**)(void))(v1 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_74();
    v4 = (_QWORD *)OUTLINED_FUNCTION_25();
    *(_QWORD *)(v1 + 64) = v4;
    v5 = OUTLINED_FUNCTION_19(v4, (uint64_t)sub_1B251A18C);
    return OUTLINED_FUNCTION_16(v5, v6, v7, v8);
  }
}

uint64_t sub_1B251A18C()
{
  OUTLINED_FUNCTION_62();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1B251A1D0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1B24EBFF4;
  return sub_1B251A088();
}

uint64_t sub_1B251A218(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v4 = OUTLINED_FUNCTION_61();
  v3[8] = v4;
  v3[9] = *(_QWORD *)(v4 - 8);
  v3[10] = OUTLINED_FUNCTION_7_0();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD69D8);
  v3[11] = v5;
  v3[12] = *(_QWORD *)(v5 - 8);
  v3[13] = OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B251A280()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(void);

  if ((swift_distributed_actor_is_remote() & 1) == 0)
    return OUTLINED_FUNCTION_15();
  v1 = v0[13];
  v2 = v0[6];
  v3 = v0[5];
  v4 = sub_1B2550F38();
  v0[2] = v3;
  v0[3] = v2;
  v0[4] = v4;
  sub_1B249B498(v3, v2);
  sub_1B25CC7F0();
  v5 = sub_1B24986B0(v1);
  nullsub_1(v5, v6);
  OUTLINED_FUNCTION_74();
  v9 = (uint64_t (*)(void))((char *)&dword_1EEFD8530 + dword_1EEFD8530);
  v7 = (_QWORD *)swift_task_alloc();
  v0[14] = v7;
  *v7 = v0;
  v7[1] = sub_1B251A3F8;
  return OUTLINED_FUNCTION_16(v0[7], v0[10], (uint64_t)(v0 + 4), v9);
}

uint64_t sub_1B251A3F8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1B251A458()
{
  uint64_t v0;

  OUTLINED_FUNCTION_30(*(_QWORD *)(v0 + 72));
  OUTLINED_FUNCTION_127();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_56(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B251A4A8(uint64_t a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v3 = *a2;
  v2[2] = *a2;
  v2[3] = *(_QWORD *)(v3 - 8);
  v4 = (uint64_t *)swift_task_alloc();
  v2[4] = v4;
  result = swift_conformsToProtocol();
  if (result)
  {
    sub_1B2550EE0();
    v6 = *v4;
    v7 = v4[1];
    v8 = (_QWORD *)swift_task_alloc();
    v2[5] = v8;
    *v8 = v2;
    v8[1] = sub_1B251A594;
    return sub_1B251A218(v6, v7);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B251A594()
{
  uint64_t (**v0)(void);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *((_QWORD *)*v0 + 4);
  v2 = *((_QWORD *)*v0 + 2);
  v3 = *((_QWORD *)*v0 + 3);
  OUTLINED_FUNCTION_81();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  return v0[1]();
}

uint64_t sub_1B251A5F4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[3] = v0;
  v2 = OUTLINED_FUNCTION_61();
  v1[4] = v2;
  v1[5] = *(_QWORD *)(v2 - 8);
  v1[6] = OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B251A638()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  if ((swift_distributed_actor_is_remote() & 1) == 0)
    return OUTLINED_FUNCTION_15();
  v2 = OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_35(v2);
  if (v0)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_77();
    return OUTLINED_FUNCTION_23(*(uint64_t (**)(void))(v1 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_74();
    v4 = (_QWORD *)OUTLINED_FUNCTION_25();
    *(_QWORD *)(v1 + 64) = v4;
    v5 = OUTLINED_FUNCTION_19(v4, (uint64_t)sub_1B251A6F8);
    return OUTLINED_FUNCTION_16(v5, v6, v7, v8);
  }
}

uint64_t sub_1B251A6F8()
{
  OUTLINED_FUNCTION_62();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1B251A73C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1B24DE4C4;
  return sub_1B251A5F4();
}

uint64_t sub_1B251A784(void *a1, void *a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;

  v9 = sub_1B24A1B9C(a1, a2, a3, a4);
  v10 = v9;
  if (!v4 && !v9)
  {
    type metadata accessor for EARLanguageDetectorAudioBuffer();
    v10 = swift_distributedActor_remote_initialize();
    *(_QWORD *)(v10 + 112) = a1;
    *(_QWORD *)(v10 + 120) = a2;
    *(_BYTE *)(v10 + 128) = a3;
    *(_QWORD *)(v10 + 136) = a4;
    sub_1B24A1AF4(a1, a2, a3);
    swift_retain();
  }
  return v10;
}

uint64_t type metadata accessor for EARLanguageDetectorAudioBuffer()
{
  return objc_opt_self();
}

uint64_t sub_1B251A828()
{
  uint64_t v0;

  sub_1B25CD6A8();
  type metadata accessor for EARLanguageDetectorAudioBuffer();
  sub_1B24B87C4(&qword_1EEFD9900, v0, (uint64_t (*)(uint64_t))type metadata accessor for EARLanguageDetectorAudioBuffer, (uint64_t)&unk_1B25DD298);
  sub_1B25CC91C();
  return sub_1B25CD6CC();
}

uint64_t sub_1B251A898()
{
  uint64_t v0;
  uint64_t v1;

  if ((sub_1B25CC7C0() & 1) == 0)
  {
    type metadata accessor for EARLanguageDetectorAudioBuffer();
    sub_1B24B87C4(&qword_1EEFD8538, v1, (uint64_t (*)(uint64_t))type metadata accessor for EARLanguageDetectorAudioBuffer, (uint64_t)&unk_1B25DD320);
    return sub_1B25CC76C();
  }
  return v0;
}

uint64_t sub_1B251A904(uint64_t a1, uint64_t *a2)
{
  return sub_1B251A784(*(void **)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16), *a2);
}

uint64_t sub_1B251A92C()
{
  return sub_1B251A828();
}

uint64_t sub_1B251A94C()
{
  uint64_t v0;

  type metadata accessor for EARLanguageDetectorAudioBuffer();
  sub_1B24B87C4(&qword_1EEFD8538, v0, (uint64_t (*)(uint64_t))type metadata accessor for EARLanguageDetectorAudioBuffer, (uint64_t)&unk_1B25DD320);
  return sub_1B25CC79C();
}

uint64_t sub_1B251A9A8()
{
  sub_1B25CD6A8();
  type metadata accessor for EARLanguageDetectorAudioBuffer();
  sub_1B25CC91C();
  return sub_1B25CD6CC();
}

uint64_t sub_1B251A9FC()
{
  uint64_t v0;

  type metadata accessor for EARLanguageDetectorAudioBuffer();
  sub_1B24B87C4(&qword_1EEFD8538, v0, (uint64_t (*)(uint64_t))type metadata accessor for EARLanguageDetectorAudioBuffer, (uint64_t)&unk_1B25DD320);
  return sub_1B25CC790();
}

uint64_t sub_1B251AA58()
{
  uint64_t v0;

  type metadata accessor for EARLanguageDetectorAudioBuffer();
  sub_1B24B87C4(&qword_1EEFD8538, v0, (uint64_t (*)(uint64_t))type metadata accessor for EARLanguageDetectorAudioBuffer, (uint64_t)&unk_1B25DD320);
  sub_1B24A1DB8();
  return sub_1B25CC7A8();
}

uint64_t sub_1B251AAD0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  type metadata accessor for EARLanguageDetectorAudioBuffer();
  sub_1B24B87C4(&qword_1EEFD8538, v3, (uint64_t (*)(uint64_t))type metadata accessor for EARLanguageDetectorAudioBuffer, (uint64_t)&unk_1B25DD320);
  sub_1B24A1DF4();
  result = sub_1B25CC7B4();
  if (!v1)
    *a1 = result;
  return result;
}

uint64_t sub_1B251AB50(uint64_t a1, uint64_t a2)
{
  return sub_1B24B87C4(&qword_1EEFD98F8, a2, (uint64_t (*)(uint64_t))type metadata accessor for EARLanguageDetectorAudioBuffer, (uint64_t)&unk_1B25DD270);
}

uint64_t sub_1B251AB7C(uint64_t a1, uint64_t a2)
{
  return sub_1B24B87C4(&qword_1EEFD9900, a2, (uint64_t (*)(uint64_t))type metadata accessor for EARLanguageDetectorAudioBuffer, (uint64_t)&unk_1B25DD298);
}

uint64_t sub_1B251ABA8(uint64_t a1, uint64_t a2)
{
  return sub_1B24B87C4(&qword_1EEFD9908, a2, (uint64_t (*)(uint64_t))type metadata accessor for EARLanguageDetectorAudioBuffer, (uint64_t)&unk_1B25DD2D8);
}

void sub_1B251ABD4()
{
  void *v0;
  void *v1;
  id v2;

  v0 = (void *)objc_opt_self();
  v1 = &unk_1EEFF30E0;
  v2 = objc_msgSend(v0, sel_interfaceWithProtocol_, v1);

  qword_1EEFE4220 = (uint64_t)v2;
}

uint64_t sub_1B251AC38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36D068);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_10_7()
{
  return sub_1B25CD5D0();
}

uint64_t sub_1B251ACA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    sub_1B2505214();
    result = v8;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v6 = *v4;
      v4 += 2;
      v5 = v6;
      v9 = result;
      v7 = *(_QWORD *)(result + 16);
      if (v7 >= *(_QWORD *)(result + 24) >> 1)
      {
        sub_1B2505214();
        result = v9;
      }
      *(_QWORD *)(result + 16) = v7 + 1;
      *(_QWORD *)(result + 8 * v7 + 32) = v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1B251AD5C(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1B25056E4();
    v5 = v11;
    v6 = (uint64_t *)(a1 + 32);
    do
    {
      v7 = *v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v8 = sub_1B251CB78(v7, a2);
      v9 = *(_QWORD *)(v11 + 16);
      if (v9 >= *(_QWORD *)(v11 + 24) >> 1)
        sub_1B25056E4();
      *(_QWORD *)(v11 + 16) = v9 + 1;
      *(_QWORD *)(v11 + 8 * v9 + 32) = v8;
      ++v6;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v5;
}

void sub_1B251AE70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  OUTLINED_FUNCTION_326_0();
  OUTLINED_FUNCTION_233_2();
  OUTLINED_FUNCTION_418_0();
  MEMORY[0x1E0C80A78](v2, v3);
  OUTLINED_FUNCTION_227_0();
  if (v0)
  {
    OUTLINED_FUNCTION_190_2(MEMORY[0x1E0DEE9D8]);
    v4 = (uint64_t *)(v1 + 32);
    do
    {
      v5 = *v4;
      OUTLINED_FUNCTION_224_0();
      OUTLINED_FUNCTION_312_1();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_409_0();
      if (v7)
        OUTLINED_FUNCTION_306_0(v6 > 1, v5);
      OUTLINED_FUNCTION_88_2();
      ++v4;
      --v0;
    }
    while (v0);
  }
  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_49_4();
}

uint64_t sub_1B251AF34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  double v39;
  uint64_t v40;
  double v41;
  double v42;
  double v43;
  double v44;
  char v45;
  uint64_t v46;
  double v47;
  double v48;
  char *v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  double v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  void (*v78)(char *, char *, uint64_t);
  char *v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v86;
  _QWORD v87[2];
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  char *v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  _BYTE v125[160];
  _QWORD v126[20];
  double v127[20];
  uint64_t v128;
  _QWORD v129[20];
  uint64_t v130;
  uint64_t v131;

  v5 = sub_1B25CC3F4();
  MEMORY[0x1E0C80A78](v5, v6);
  v107 = (char *)v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1B25CC3B8();
  v9 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x1E0C80A78](v8, v10);
  v117 = (char *)v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11, v13);
  v16 = (char *)v87 - v15;
  v18 = MEMORY[0x1E0C80A78](v14, v17);
  v94 = (char *)v87 - v19;
  v21 = MEMORY[0x1E0C80A78](v18, v20);
  MEMORY[0x1E0C80A78](v21, v22);
  v25 = (char *)v87 - v24;
  v26 = *(_QWORD *)(a1 + 16);
  if (!v26)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  v99 = v23;
  v87[1] = v2;
  v131 = MEMORY[0x1E0DEE9D8];
  v89 = v26;
  sub_1B250567C();
  v27 = v89;
  v28 = 0;
  v29 = v131;
  v30 = a1 + 32;
  v31 = *(_QWORD *)(MEMORY[0x1E0CA2E18] + 16);
  v32 = *(_QWORD *)(MEMORY[0x1E0CA2E18] + 8);
  v111 = *MEMORY[0x1E0CA2E18];
  v112 = v31;
  v110 = v32;
  v102 = &v128;
  v101 = a2 + 56;
  v108 = a2;
  v104 = v16;
  v105 = v9;
  v93 = v25;
  v106 = v8;
  v88 = a1 + 32;
  while (1)
  {
    v33 = *(_QWORD *)(v30 + 8 * v28);
    v34 = *(_QWORD *)(v33 + 16);
    if (v34)
      break;
    v35 = MEMORY[0x1E0DEE9D8];
LABEL_63:
    v131 = v29;
    v83 = *(_QWORD *)(v29 + 16);
    if (v83 >= *(_QWORD *)(v29 + 24) >> 1)
    {
      v97 = v35;
      v84 = v28;
      sub_1B250567C();
      v35 = v97;
      v30 = v88;
      v27 = v89;
      v28 = v84;
      v29 = v131;
    }
    ++v28;
    *(_QWORD *)(v29 + 16) = v83 + 1;
    *(_QWORD *)(v29 + 8 * v83 + 32) = v35;
    if (v28 == v27)
      goto LABEL_70;
  }
  v91 = v28;
  v92 = v29;
  v130 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B2505640(0, v34, 0);
  v35 = v130;
  v90 = v33;
  v95 = v34;
  v96 = v33 + 32;
  v36 = 0;
  while (1)
  {
    v100 = v36;
    v37 = *(_QWORD *)(v96 + 8 * v36);
    v38 = *(_QWORD *)(v37 + 16);
    if (v38)
      break;
    sub_1B25CC340();
LABEL_58:
    v130 = v35;
    v81 = *(_QWORD *)(v35 + 16);
    v80 = *(_QWORD *)(v35 + 24);
    if (v81 >= v80 >> 1)
    {
      sub_1B2505640(v80 > 1, v81 + 1, 1);
      v35 = v130;
    }
    v82 = v100 + 1;
    *(_QWORD *)(v35 + 16) = v81 + 1;
    v36 = v82;
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v35+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v81, v25, v8);
    if (v36 == v95)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v30 = v88;
      v27 = v89;
      v28 = v91;
      v29 = v92;
      goto LABEL_63;
    }
  }
  v103 = v37 + 32;
  memcpy(v129, (const void *)(v37 + 32), sizeof(v129));
  v39 = *(double *)v129;
  v40 = v37;
  v41 = *(double *)&v129[1];
  v97 = v35;
  v98 = v40;
  if ((v129[12] & 0x100) != 0)
  {
    *(_QWORD *)&v127[0] = 32;
    v127[1] = -1.7573882e159;
    swift_bridgeObjectRetain();
    sub_1B253181C((uint64_t)v129);
    swift_bridgeObjectRetain();
    sub_1B25CCAE4();
    swift_bridgeObjectRelease();
    v39 = v127[0];
    v41 = v127[1];
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1B253181C((uint64_t)v129);
    swift_bridgeObjectRetain();
  }
  v109 = v38;
  if (LOBYTE(v129[12]) == 1)
  {
    v127[0] = v39;
    v127[1] = v41;
    swift_bridgeObjectRetain();
    sub_1B25CCAE4();
    swift_bridgeObjectRelease();
  }
  v42 = *(double *)&v129[4];
  v115 = v129[7];
  v116 = v129[5];
  v43 = *(double *)&v129[2];
  v44 = *(double *)&v129[3];
  sub_1B25CC3E8();
  sub_1B25CC3C4();
  if ((sub_1B25CD060() & 1) == 0 || (sub_1B25CD060() & 1) == 0)
  {
    sub_1B251CE50(1, v108);
    if ((v45 & 1) != 0)
    {
      v46 = sub_1B25CD054();
      v127[0] = v43;
      v127[1] = v44;
      v127[2] = v42;
      *(_QWORD *)&v127[3] = v46;
      v127[4] = v47;
      v127[5] = v48;
      LOBYTE(v127[6]) = 0;
      sub_1B2531ABC();
      sub_1B25CC3D0();
    }
  }
  sub_1B251CE50(0, v108);
  v9 = v105;
  v8 = v106;
  v49 = v104;
  v50 = v109;
  if ((v51 & 1) != 0 && *(double *)&v129[11] != 0.0)
  {
    v127[0] = *(double *)&v129[11] / 1000.0;
    LOBYTE(v127[1]) = 0;
    sub_1B2531A80();
    v52 = v99;
    sub_1B25CC3D0();
    sub_1B2531864((uint64_t)v129);
  }
  else
  {
    sub_1B2531864((uint64_t)v129);
    v52 = v99;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v49, v52, v8);
  swift_bridgeObjectRetain();
  if (v50 == 1)
  {
LABEL_57:
    v78 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v79 = v94;
    v78(v94, v49, v8);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v52, v8);
    v25 = v93;
    v78(v93, v79, v8);
    swift_bridgeObjectRelease();
    v35 = v97;
    goto LABEL_58;
  }
  swift_bridgeObjectRetain();
  v53 = 0;
  v54 = 1;
  while (1)
  {
    memcpy(v125, (const void *)(v103 + 160 * v53), sizeof(v125));
    if (v54 >= v50)
      break;
    memcpy(v126, (const void *)(v103 + 160 * v54), sizeof(v126));
    memcpy(v127, v125, sizeof(v127));
    memcpy(v102, v126, 0xA0uLL);
    sub_1B253181C((uint64_t)v125);
    sub_1B253181C((uint64_t)v126);
    sub_1B253181C((uint64_t)v125);
    sub_1B253181C((uint64_t)v126);
    sub_1B253196C((uint64_t)v127);
    if (v54 + 1 == v50)
      v55 = v50;
    else
      v55 = v54;
    sub_1B25319E0((uint64_t)v127);
    sub_1B2531864((uint64_t)v126);
    v56 = v126[0];
    v57 = v126[1];
    if (BYTE1(v126[12]) == 1 && (v125[96] & 1) == 0)
    {
      v118 = 32;
      v119 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      sub_1B25CCAE4();
      swift_bridgeObjectRelease();
      v56 = v118;
      v57 = v119;
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    v115 = v54 + 1;
    v116 = v55;
    if (LOBYTE(v126[12]) == 1)
    {
      v118 = v56;
      v119 = v57;
      swift_bridgeObjectRetain();
      sub_1B25CCAE4();
      swift_bridgeObjectRelease();
    }
    v58 = v126[4];
    v113 = v126[7];
    v114 = v126[5];
    v60 = *(double *)&v126[2];
    v59 = v126[3];
    sub_1B25CC3E8();
    sub_1B25CC3C4();
    v61 = sub_1B25CD060();
    v62 = v108;
    v63 = v101;
    if ((v61 & 1) == 0 || (sub_1B25CD060() & 1) == 0)
    {
      if (!*(_QWORD *)(v62 + 16))
        goto LABEL_51;
      sub_1B25CD6A8();
      sub_1B25CD6B4();
      v64 = sub_1B25CD6CC();
      v65 = -1 << *(_BYTE *)(v62 + 32);
      v66 = v64 & ~v65;
      if (((*(_QWORD *)(v63 + ((v66 >> 3) & 0xFFFFFFFFFFFFF8)) >> v66) & 1) != 0)
      {
        v67 = *(_QWORD *)(v62 + 48);
        if ((*(_BYTE *)(v67 + v66) & 1) != 0)
        {
LABEL_41:
          v69 = sub_1B25CD054();
          *(double *)&v118 = v60;
          v119 = v59;
          v120 = v58;
          v121 = v69;
          v122 = v70;
          v123 = v71;
          v124 = 0;
          sub_1B2531ABC();
          sub_1B25CC3D0();
        }
        else
        {
          v68 = ~v65;
          while (1)
          {
            v66 = (v66 + 1) & v68;
            if (((*(_QWORD *)(v63 + ((v66 >> 3) & 0xFFFFFFFFFFFFF8)) >> v66) & 1) == 0)
              break;
            if ((*(_BYTE *)(v67 + v66) & 1) != 0)
              goto LABEL_41;
          }
        }
      }
    }
    if (*(_QWORD *)(v62 + 16))
    {
      sub_1B25CD6A8();
      sub_1B25CD6B4();
      v72 = sub_1B25CD6CC();
      v73 = -1 << *(_BYTE *)(v62 + 32);
      v74 = v72 & ~v73;
      if (((*(_QWORD *)(v63 + ((v74 >> 3) & 0xFFFFFFFFFFFFF8)) >> v74) & 1) != 0)
      {
        v75 = *(_QWORD *)(v62 + 48);
        v9 = v105;
        v8 = v106;
        v49 = v104;
        v53 = v116;
        if (*(_BYTE *)(v75 + v74) == 1)
        {
          v76 = ~v73;
          while (1)
          {
            v74 = (v74 + 1) & v76;
            if (((*(_QWORD *)(v63 + ((v74 >> 3) & 0xFFFFFFFFFFFFF8)) >> v74) & 1) == 0)
              break;
            if (*(_BYTE *)(v75 + v74) != 1)
              goto LABEL_48;
          }
          sub_1B2531864((uint64_t)v125);
          v50 = v109;
        }
        else
        {
LABEL_48:
          v50 = v109;
          if (*(double *)&v126[11] != 0.0)
          {
            *(double *)&v118 = *(double *)&v126[11] / 1000.0;
            LOBYTE(v119) = 0;
            sub_1B2531A80();
            sub_1B25CC3D0();
          }
          sub_1B2531864((uint64_t)v125);
        }
        goto LABEL_52;
      }
    }
LABEL_51:
    sub_1B2531864((uint64_t)v125);
    v9 = v105;
    v8 = v106;
    v49 = v104;
    v50 = v109;
    v53 = v116;
LABEL_52:
    sub_1B2531930(&qword_1EEFD6960, (void (*)(uint64_t))MEMORY[0x1E0CAF240]);
    v77 = v117;
    sub_1B25CC3A0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v77, v8);
    sub_1B253196C((uint64_t)v127);
    if (v53 == v50)
    {
      swift_bridgeObjectRelease();
      v52 = v99;
      goto LABEL_57;
    }
    v54 = v115;
    if (v53 >= v50)
      goto LABEL_69;
  }
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  v86 = v29;
  swift_bridgeObjectRelease();
  return v86;
}

void sub_1B251B948()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_326_0();
  v2 = v0;
  v4 = v3;
  v26 = sub_1B25CC3B8();
  v5 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26, v6);
  OUTLINED_FUNCTION_226_1();
  MEMORY[0x1E0C80A78](v7, v8);
  OUTLINED_FUNCTION_752();
  v25 = v9;
  v10 = *(_QWORD *)(v4 + 16);
  if (v10)
  {
    v27 = MEMORY[0x1E0DEE9D8];
    sub_1B250567C();
    v24 = v1;
    type metadata accessor for TranscriptionSegment(0);
    OUTLINED_FUNCTION_182_2();
    v12 = v4 + v11;
    v23 = *(_QWORD *)(v13 + 72);
    do
    {
      static TranscriptionToken.allTokensString(from:ipa:attributes:)();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v1, v25, v26);
      sub_1B252C128();
      v15 = v14;
      v16 = *(_QWORD *)(v14 + 16);
      if (v16 >= *(_QWORD *)(v14 + 24) >> 1)
      {
        OUTLINED_FUNCTION_305_1();
        sub_1B252C128();
        v15 = v22;
      }
      *(_QWORD *)(v15 + 16) = v16 + 1;
      OUTLINED_FUNCTION_188_2();
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v17 + *(_QWORD *)(v5 + 72) * v16, v1, v26);
      OUTLINED_FUNCTION_95_1();
      OUTLINED_FUNCTION_47_0();
      v18 = v2;
      sub_1B251AE70();
      swift_bridgeObjectRelease();
      sub_1B257FE54();
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v25, v26);
      v19 = v15;
      v20 = v27;
      if ((OUTLINED_FUNCTION_545() & 1) == 0)
      {
        OUTLINED_FUNCTION_131_2();
        sub_1B250567C();
        v20 = v27;
      }
      v21 = *(_QWORD *)(v20 + 16);
      if (v21 >= *(_QWORD *)(v20 + 24) >> 1)
      {
        sub_1B250567C();
        v20 = v27;
      }
      *(_QWORD *)(v20 + 16) = v21 + 1;
      *(_QWORD *)(v20 + 8 * v21 + 32) = v19;
      v12 += v23;
      --v10;
      v2 = v18;
      v1 = v24;
    }
    while (v10);
  }
  OUTLINED_FUNCTION_267();
  OUTLINED_FUNCTION_49_4();
}

void sub_1B251BBBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(void);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;

  OUTLINED_FUNCTION_326_0();
  v53 = v5;
  v6 = v0;
  v8 = v7;
  v10 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6968);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v11, v12);
  OUTLINED_FUNCTION_229();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7520);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v13, v14);
  OUTLINED_FUNCTION_767();
  v52 = v15;
  OUTLINED_FUNCTION_219_0();
  sub_1B25CC3B8();
  OUTLINED_FUNCTION_421_0();
  MEMORY[0x1E0C80A78](v16, v17);
  OUTLINED_FUNCTION_98_3();
  MEMORY[0x1E0C80A78](v18, v19);
  v21 = (char *)&v45 - v20;
  v22 = *(_QWORD *)(v10 + 16);
  if (v22)
  {
    v58 = MEMORY[0x1E0DEE9D8];
    v50 = *(_QWORD *)(v10 + 16);
    sub_1B2505640(0, v22, 0);
    sub_1B25CC760();
    OUTLINED_FUNCTION_308_0();
    v47 = v10 + v23;
    v24 = 0;
    v48 = v26;
    v49 = v25;
    v46 = *(_QWORD *)(v26 + 72);
    v51 = v8;
    v57 = v21;
    do
    {
      v54 = v24;
      v27 = v47 + v46 * v24;
      sub_1B25CC3AC();
      v28 = v52;
      v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v52, v27, v49);
      MEMORY[0x1E0C80A78](v29, v30);
      *(&v45 - 2) = v8;
      v31 = sub_1B2521EF4(v28, v53, (uint64_t)(&v45 - 4));
      v55 = v6;
      sub_1B2534D88(v28, &qword_1EEFD7520);
      v56 = v31;
      v32 = *(_QWORD *)(v31 + 16);
      if (v32)
      {
        OUTLINED_FUNCTION_308_0();
        v34 = v56 + v33;
        v35 = *(_QWORD *)(v1 + 72);
        v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16);
        while (1)
        {
          v36(v2, v34, v3);
          OUTLINED_FUNCTION_544(v2, 0);
          if (__swift_getEnumTagSinglePayload(v2, 1, v3) == 1)
            break;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v4, v2, v3);
          sub_1B2531930(&qword_1EEFD6960, (void (*)(uint64_t))MEMORY[0x1E0CAF240]);
          sub_1B25CC3A0();
          (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v4, v3);
          v34 += v35;
          if (!--v32)
            goto LABEL_7;
        }
      }
      else
      {
LABEL_7:
        OUTLINED_FUNCTION_544(v2, 1);
      }
      swift_bridgeObjectRelease();
      v37 = v58;
      if ((OUTLINED_FUNCTION_545() & 1) == 0)
      {
        v38 = OUTLINED_FUNCTION_131_2();
        sub_1B2505640(v38, v39, v40);
        v37 = v58;
      }
      v6 = v55;
      v8 = v51;
      v42 = *(_QWORD *)(v37 + 16);
      v41 = *(_QWORD *)(v37 + 24);
      if (v42 >= v41 >> 1)
      {
        OUTLINED_FUNCTION_306_0(v41 > 1, v42 + 1);
        v37 = v58;
      }
      v43 = v54 + 1;
      *(_QWORD *)(v37 + 16) = v42 + 1;
      v24 = v43;
      OUTLINED_FUNCTION_188_2();
      (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(v44 + *(_QWORD *)(v1 + 72) * v42, v57, v3);
      v58 = v37;
    }
    while (v24 != v50);
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_49_4();
}

void sub_1B251BECC(uint64_t a1)
{
  int v2;
  char v3;
  uint64_t v4;
  int v5;
  char v6;

  sub_1B2507C08(a1);
  if ((v3 & 1) != 0)
    goto LABEL_7;
  if (*(_DWORD *)(a1 + 36) != v2)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_365_0();
  if (!v6)
    sub_1B2507970(v4, v5, 0, a1);
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1B251BF20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B251C090(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0E38], a2);
}

uint64_t sub_1B251BF2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B251C090(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8], a2);
}

uint64_t sub_1B251BF38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B251C0F8(a1, &qword_1EEFD6A88, a2);
}

void sub_1B251BF44(uint64_t a1)
{
  int v2;
  char v3;
  uint64_t v4;
  int v5;
  char v6;

  sub_1B2534960(a1);
  if ((v3 & 1) != 0)
    goto LABEL_7;
  if (*(_DWORD *)(a1 + 36) != v2)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_365_0();
  if (!v6)
    sub_1B25349E0(v4, v5, 0, a1);
  OUTLINED_FUNCTION_0();
}

void sub_1B251BF94(uint64_t a1)
{
  uint64_t v2;
  int v3;
  char v4;
  uint64_t v5;

  v2 = sub_1B25A1B84(a1);
  if ((v4 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return;
  }
  if (v2 == 1 << *(_BYTE *)(a1 + 32))
    OUTLINED_FUNCTION_17();
  else
    sub_1B2534A34(&v5, v2, v3, 0, a1);
}

uint64_t sub_1B251C018@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = type metadata accessor for TranscriptionSegment(0);
  v6 = v5;
  if (v4)
  {
    v7 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
    sub_1B24EAB98(a1 + ((v7 + 32) & ~v7), a2, type metadata accessor for TranscriptionSegment);
    v8 = 0;
  }
  else
  {
    v8 = 1;
  }
  return __swift_storeEnumTagSinglePayload(a2, v8, 1, v6);
}

uint64_t sub_1B251C090@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a1 + 16);
  OUTLINED_FUNCTION_420_0(a1, a2);
  if (v5)
  {
    OUTLINED_FUNCTION_182_2();
    OUTLINED_FUNCTION_257_2(a3, a1 + v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
  }
  OUTLINED_FUNCTION_305_1();
  return OUTLINED_FUNCTION_12_0(v8, v9, v10, v11);
}

uint64_t sub_1B251C0EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B251C0F8(a1, &qword_1EEFD9A88, a2);
}

uint64_t sub_1B251C0F8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a1 + 16);
  OUTLINED_FUNCTION_186(a1, a2);
  if (v5)
  {
    OUTLINED_FUNCTION_308_0();
    OUTLINED_FUNCTION_206_2(a1 + v6, a3);
  }
  OUTLINED_FUNCTION_305_1();
  return __swift_storeEnumTagSinglePayload(v7, v8, v9, v10);
}

uint64_t sub_1B251C168@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD9AA8);
  MEMORY[0x1E0C80A78](v3, v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD69C8);
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1B25CC760();
  v12 = *(_QWORD *)(v11 - 8);
  result = MEMORY[0x1E0C80A78](v11, v13);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = v1[1];
  v18 = *(_QWORD *)(*v1 + 16);
  if (v17 == v18)
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, v11);
LABEL_5:
    sub_1B2534D88((uint64_t)v10, &qword_1EEFD69C8);
    v19 = (uint64_t)a1;
    v20 = 1;
    return __swift_storeEnumTagSinglePayload(v19, v20, 1, v3);
  }
  if (v17 >= v18)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v10, *v1+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v17, v11);
    v1[1] = v17 + 1;
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v11);
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11) == 1)
      goto LABEL_5;
    v21 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v21(v16, v10, v11);
    v22 = &v6[*(int *)(v3 + 48)];
    v23 = v1[2];
    result = ((uint64_t (*)(char *, char *, uint64_t))v21)(v22, v16, v11);
    if (!__OFADD__(v23, 1))
    {
      v1[2] = v23 + 1;
      v24 = (char *)a1 + *(int *)(v3 + 48);
      *a1 = v23;
      v21(v24, v22, v11);
      v19 = (uint64_t)a1;
      v20 = 0;
      return __swift_storeEnumTagSinglePayload(v19, v20, 1, v3);
    }
  }
  __break(1u);
  return result;
}

void sub_1B251C368(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  double v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v20 = MEMORY[0x1E0DEE9D8];
  v2 = a1 + 56;
  OUTLINED_FUNCTION_55_4();
  v5 = v4 & v3;
  v7 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  v8 = 0;
  while (v5)
  {
    v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v10 = v9 | (v8 << 6);
LABEL_20:
    v17 = (double)*(uint64_t *)(*(_QWORD *)(a1 + 48) + 8 * v10);
    v18 = xmmword_1B25DC3C0;
    v19 = xmmword_1B25DC3D0;
    if (objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C89AA8]), sel_initWithStreamDescription_, &v17))
    {
      MEMORY[0x1B5E24B38]();
      v16 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= v16 >> 1)
      {
        OUTLINED_FUNCTION_64_6(v16);
        sub_1B25CCBD4();
      }
      sub_1B25CCC04();
      sub_1B25CCBBC();
    }
  }
  v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v11 >= v7)
    goto LABEL_24;
  ++v8;
  if (*(_QWORD *)(v2 + 8 * v11))
    goto LABEL_19;
  v8 = v11 + 1;
  if (v11 + 1 >= v7)
    goto LABEL_24;
  if (*(_QWORD *)(v2 + 8 * v8))
    goto LABEL_19;
  v8 = v11 + 2;
  if (v11 + 2 >= v7)
    goto LABEL_24;
  if (*(_QWORD *)(v2 + 8 * v8))
    goto LABEL_19;
  v8 = v11 + 3;
  if (v11 + 3 >= v7)
    goto LABEL_24;
  if (*(_QWORD *)(v2 + 8 * v8))
  {
LABEL_19:
    OUTLINED_FUNCTION_124_3();
    v5 = v14 & v13;
    v10 = v15 + (v8 << 6);
    goto LABEL_20;
  }
  v12 = v11 + 4;
  if (v12 < v7)
  {
    if (!*(_QWORD *)(v2 + 8 * v12))
    {
      while (1)
      {
        v8 = v12 + 1;
        if (__OFADD__(v12, 1))
          break;
        if (v8 >= v7)
          goto LABEL_24;
        ++v12;
        if (*(_QWORD *)(v2 + 8 * v8))
          goto LABEL_19;
      }
LABEL_26:
      __break(1u);
    }
    v8 = v12;
    goto LABEL_19;
  }
LABEL_24:
  swift_release();
  OUTLINED_FUNCTION_144_2();
}

uint64_t sub_1B251C56C(uint64_t a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);

  v28 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6FE0);
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptionSegment(0);
  v26 = *(_QWORD *)(v8 - 8);
  v27 = v8;
  v10 = MEMORY[0x1E0C80A78](v8, v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10, v13);
  v15 = (char *)&v24 - v14;
  v16 = *(_QWORD *)(a1 + 16);
  if (!v16)
    return MEMORY[0x1E0DEE9D8];
  v24 = v2;
  swift_bridgeObjectRetain();
  v17 = 0;
  v18 = MEMORY[0x1E0DEE9D8];
  v25 = a1;
  do
  {
    v19 = *(_QWORD *)(a1 + 8 * v17 + 32);
    swift_bridgeObjectRetain();
    v28(v17, v19);
    swift_bridgeObjectRelease();
    if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v27) == 1)
    {
      sub_1B2534D88((uint64_t)v7, &qword_1EEFD6FE0);
    }
    else
    {
      sub_1B24EABC4((uint64_t)v7, (uint64_t)v15, type metadata accessor for TranscriptionSegment);
      sub_1B24EABC4((uint64_t)v15, (uint64_t)v12, type metadata accessor for TranscriptionSegment);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B252C128();
        v18 = v21;
      }
      v20 = *(_QWORD *)(v18 + 16);
      if (v20 >= *(_QWORD *)(v18 + 24) >> 1)
      {
        sub_1B252C128();
        v18 = v22;
      }
      *(_QWORD *)(v18 + 16) = v20 + 1;
      sub_1B24EABC4((uint64_t)v12, v18+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(_QWORD *)(v26 + 72) * v20, type metadata accessor for TranscriptionSegment);
      a1 = v25;
    }
    ++v17;
  }
  while (v16 != v17);
  swift_bridgeObjectRelease();
  return v18;
}

void sub_1B251C7DC(uint64_t a1)
{
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
    v2 = *(id *)(a1 + 8 * v1 + 24);
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1B251C810@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v5 = v3 - 1;
    v6 = type metadata accessor for TranscriptionSegment(0);
    sub_1B24EAB98(a1+ ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72) * v5, a2, type metadata accessor for TranscriptionSegment);
    v7 = a2;
    v8 = 0;
    v9 = v6;
  }
  else
  {
    v9 = type metadata accessor for TranscriptionSegment(0);
    v7 = a2;
    v8 = 1;
  }
  return __swift_storeEnumTagSinglePayload(v7, v8, 1, v9);
}

void sub_1B251C8A8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  if ((a4 & 1) == 0)
    goto LABEL_2;
  OUTLINED_FUNCTION_419_0();
  OUTLINED_FUNCTION_209_0();
  v8 = swift_dynamicCastClass();
  if (!v8)
  {
    OUTLINED_FUNCTION_84_1();
    v8 = MEMORY[0x1E0DEE9D8];
  }
  v9 = *(_QWORD *)(v8 + 16);
  swift_release();
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v9 != (a4 >> 1) - a3)
  {
LABEL_11:
    swift_unknownObjectRelease();
LABEL_2:
    sub_1B252E0EC(a1, a2, a3, a4);
    goto LABEL_9;
  }
  if (!swift_dynamicCastClass())
    OUTLINED_FUNCTION_84_1();
LABEL_9:
  OUTLINED_FUNCTION_84_1();
  OUTLINED_FUNCTION_233();
}

void sub_1B251C968()
{
  sub_1B251CA30();
}

void sub_1B251C97C()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_123_2();
  OUTLINED_FUNCTION_198_1();
  if ((v0 & 1) == 0)
    goto LABEL_2;
  OUTLINED_FUNCTION_419_0();
  OUTLINED_FUNCTION_209_0();
  v2 = OUTLINED_FUNCTION_314_1();
  if (!v2)
  {
    OUTLINED_FUNCTION_84_1();
    v2 = MEMORY[0x1E0DEE9D8];
  }
  v3 = *(_QWORD *)(v2 + 16);
  swift_release();
  if (__OFSUB__(v0 >> 1, v1))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v3 != (v0 >> 1) - v1)
  {
LABEL_11:
    swift_unknownObjectRelease();
LABEL_2:
    OUTLINED_FUNCTION_210_2();
    sub_1B252E2BC();
    goto LABEL_9;
  }
  if (!OUTLINED_FUNCTION_314_1())
    OUTLINED_FUNCTION_84_1();
LABEL_9:
  OUTLINED_FUNCTION_84_1();
  OUTLINED_FUNCTION_462();
}

void sub_1B251CA1C()
{
  sub_1B251CA30();
}

void sub_1B251CA30()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_123_2();
  OUTLINED_FUNCTION_198_1();
  if ((v0 & 1) == 0)
    goto LABEL_2;
  OUTLINED_FUNCTION_419_0();
  OUTLINED_FUNCTION_209_0();
  v6 = OUTLINED_FUNCTION_314_1();
  if (!v6)
  {
    OUTLINED_FUNCTION_84_1();
    v6 = MEMORY[0x1E0DEE9D8];
  }
  v7 = *(_QWORD *)(v6 + 16);
  swift_release();
  if (__OFSUB__(v0 >> 1, v1))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v7 != (v0 >> 1) - v1)
  {
LABEL_11:
    swift_unknownObjectRelease();
LABEL_2:
    v2 = OUTLINED_FUNCTION_210_2();
    sub_1B252E22C(v2, v3, v4, v5);
    goto LABEL_9;
  }
  if (!OUTLINED_FUNCTION_314_1())
    OUTLINED_FUNCTION_84_1();
LABEL_9:
  OUTLINED_FUNCTION_84_1();
  OUTLINED_FUNCTION_462();
}

void sub_1B251CAD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD71C0);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v5, v6);
  OUTLINED_FUNCTION_42_3();
  v7 = swift_retain();
  sub_1B259EF18(v7);
  v8 = sub_1B25CCCDC();
  OUTLINED_FUNCTION_291_0(v2, v9, v10, v8);
  v11 = (_QWORD *)OUTLINED_FUNCTION_8_4();
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = a1;
  v11[5] = v3;
  OUTLINED_FUNCTION_99_1();
  sub_1B24C52C0(v2, (uint64_t)&unk_1EEFD9B00, (uint64_t)v11);
  swift_release();
  OUTLINED_FUNCTION_262();
}

uint64_t sub_1B251CB78(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  int64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD __dst[21];
  uint64_t v24;

  v2 = result;
  v21 = *(_QWORD *)(result + 16);
  if (v21)
  {
    v3 = 0;
    v19 = a2 + 7;
    v20 = result + 32;
    v4 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      if (v3 >= *(_QWORD *)(v2 + 16))
      {
LABEL_32:
        __break(1u);
        return result;
      }
      result = (uint64_t)memcpy(__dst, (const void *)(v20 + 160 * v3++), 0xA0uLL);
      if ((__dst[17] & 1) == 0 && BYTE1(__dst[17]) != 1)
        break;
      v5 = a2[2];
      if (v5)
      {
        v6 = __dst[0];
        v7 = __dst[1];
        if (a2[4] == __dst[0] && a2[5] == __dst[1])
          break;
        result = OUTLINED_FUNCTION_313_0();
        if ((result & 1) != 0)
          break;
        if (v5 != 1)
        {
          v9 = v19;
          v10 = 1;
          while (1)
          {
            v11 = v10 + 1;
            if (__OFADD__(v10, 1))
              break;
            if (*(v9 - 1) == v6 && *v9 == v7)
              goto LABEL_22;
            result = OUTLINED_FUNCTION_313_0();
            if ((result & 1) != 0)
              goto LABEL_22;
            v9 += 2;
            ++v10;
            if (v11 == v5)
              goto LABEL_27;
          }
          __break(1u);
          goto LABEL_32;
        }
      }
LABEL_27:
      if (v3 == v21)
        goto LABEL_30;
    }
LABEL_22:
    sub_1B253181C((uint64_t)__dst);
    v13 = OUTLINED_FUNCTION_545();
    v24 = v4;
    if ((v13 & 1) == 0)
    {
      v14 = OUTLINED_FUNCTION_131_2();
      sub_1B25055E8(v14, v15, v16);
      v4 = v24;
    }
    v18 = *(_QWORD *)(v4 + 16);
    v17 = *(_QWORD *)(v4 + 24);
    if (v18 >= v17 >> 1)
    {
      sub_1B25055E8(v17 > 1, v18 + 1, 1);
      v4 = v24;
    }
    *(_QWORD *)(v4 + 16) = v18 + 1;
    result = (uint64_t)memcpy((void *)(v4 + 160 * v18 + 32), __dst, 0xA0uLL);
    goto LABEL_27;
  }
  v4 = MEMORY[0x1E0DEE9D8];
LABEL_30:
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_267();
  return v4;
}

uint64_t sub_1B251CD30()
{
  return swift_retain();
}

BOOL sub_1B251CD44()
{
  uint64_t v1;
  uint64_t v2;

  sub_1B25CC760();
  sub_1B2531930(&qword_1EEFD99C8, (void (*)(uint64_t))MEMORY[0x1E0CB1658]);
  sub_1B25CCE8C();
  sub_1B25CCED4();
  return v2 == v1;
}

void sub_1B251CDC8(unsigned __int8 a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;

  if (*(_QWORD *)(a2 + 16))
  {
    v3 = a1;
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_840();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_133_1();
    if ((v5 & 1) != 0 && *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v4) != v3)
    {
      OUTLINED_FUNCTION_96_3();
      if ((v8 & 1) != 0)
      {
        do
        {
          if (*(unsigned __int8 *)(v6 + v7) == v3)
            break;
          OUTLINED_FUNCTION_96_3();
        }
        while ((v9 & 1) != 0);
      }
    }
  }
  OUTLINED_FUNCTION_286_2();
}

void sub_1B251CE50(char a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;

  if (*(_QWORD *)(a2 + 16))
  {
    v3 = a1 & 1;
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_840();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_133_1();
    if ((v5 & 1) != 0 && (((v3 == 0) ^ *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v4)) & 1) == 0)
    {
      OUTLINED_FUNCTION_96_3();
      if ((v10 & 1) != 0)
      {
        do
        {
          if ((((v3 == 0) ^ *(_BYTE *)(v7 + v9)) & 1) != 0)
            break;
          v9 = (v9 + 1) & v8;
        }
        while (((*(_QWORD *)(v6 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
      }
    }
  }
  OUTLINED_FUNCTION_286_2();
}

uint64_t sub_1B251CF08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1B25CD6A8();
    sub_1B25CCAB4();
    v6 = sub_1B25CD6CC();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1B25CD5D0() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1B25CD5D0() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

void Transcriber.__allocating_init(locale:taskHint:modelOptions:transcriptionOptions:reportingOptions:attributeOptions:)()
{
  OUTLINED_FUNCTION_123_2();
  swift_allocObject();
  Transcriber.init(locale:taskHint:modelOptions:transcriptionOptions:reportingOptions:attributeOptions:)();
  OUTLINED_FUNCTION_462();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  OUTLINED_FUNCTION_59_0();
  v5 = v4;
  v7 = v6;
  v9 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6B20);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v10, v11);
  OUTLINED_FUNCTION_316_1();
  OUTLINED_FUNCTION_23_0();
  OUTLINED_FUNCTION_421_0();
  MEMORY[0x1E0C80A78](v12, v13);
  OUTLINED_FUNCTION_623();
  OUTLINED_FUNCTION_311(v0, v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  sub_1B255CC14(v7, &v14);
  sub_1B24EBCB8(v5, v3, &qword_1EEFD6B20);
  swift_allocObject();
  Transcriber.init(locale:taskHint:modelOptions:transcriptionOptions:reportingOptions:attributeOptions:)();
  sub_1B2534D88(v5, &qword_1EEFD6B20);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v9, v2);
  OUTLINED_FUNCTION_7_1();
}

void Transcriber.init(locale:taskHint:modelOptions:transcriptionOptions:reportingOptions:attributeOptions:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  int v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  _BYTE v154[272];

  OUTLINED_FUNCTION_59_0();
  v131 = v2;
  v132 = v1;
  v151 = v3;
  v152 = v4;
  v150 = v5;
  v7 = v6;
  v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7778);
  v141 = *(_QWORD *)(v144 - 8);
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v8, v9);
  OUTLINED_FUNCTION_767();
  v142 = v10;
  v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7FB8);
  v143 = *(_QWORD *)(v145 - 8);
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v11, v12);
  OUTLINED_FUNCTION_767();
  v140 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7FA8);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v14, v15);
  OUTLINED_FUNCTION_29_7();
  v146 = v16;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v17, v18);
  OUTLINED_FUNCTION_752();
  v147 = v19;
  v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7240);
  v134 = *(_QWORD *)(v137 - 8);
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v20, v21);
  OUTLINED_FUNCTION_767();
  v135 = v22;
  v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD72C8);
  v136 = *(_QWORD *)(v138 - 8);
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v23, v24);
  OUTLINED_FUNCTION_228_1(v25, v120);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7260);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v26, v27);
  OUTLINED_FUNCTION_29_7();
  v139 = v28;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v29, v30);
  OUTLINED_FUNCTION_752();
  v149 = v31;
  v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7248);
  v125 = *(_QWORD *)(v128 - 8);
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v32, v33);
  OUTLINED_FUNCTION_767();
  v126 = v34;
  v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD72E0);
  v127 = *(_QWORD *)(v129 - 8);
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v35, v36);
  OUTLINED_FUNCTION_229_1(v37, v120);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7278);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v38, v39);
  OUTLINED_FUNCTION_29_7();
  v130 = v40;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v41, v42);
  OUTLINED_FUNCTION_752();
  v148 = v43;
  v44 = OUTLINED_FUNCTION_147();
  MEMORY[0x1E0C80A78](v44, v45);
  OUTLINED_FUNCTION_29_7();
  v123 = v46;
  OUTLINED_FUNCTION_42_8();
  v49 = MEMORY[0x1E0C80A78](v47, v48);
  v51 = (char *)&v120 - v50;
  v53 = MEMORY[0x1E0C80A78](v49, v52);
  v55 = (char *)&v120 - v54;
  MEMORY[0x1E0C80A78](v53, v56);
  v58 = (char *)&v120 - v57;
  v121 = *v7;
  v59 = OBJC_IVAR____TtC6Speech11Transcriber_assetsTaskName;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD74C8);
  v60 = OUTLINED_FUNCTION_8_4();
  *(_QWORD *)(v60 + 16) = 0;
  *(_QWORD *)(v60 + 24) = 0;
  *(_DWORD *)(v60 + 32) = 0;
  *(_QWORD *)(v0 + v59) = v60;
  v61 = OBJC_IVAR____TtC6Speech11Transcriber__worker;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EEFD6D68);
  v62 = OUTLINED_FUNCTION_8_4();
  *(_BYTE *)(v62 + 24) = 0;
  *(_QWORD *)(v62 + 16) = 0;
  v153 = v0;
  *(_QWORD *)(v0 + v61) = v62;
  if (qword_1ED36CF48 != -1)
    swift_once();
  __swift_project_value_buffer(v44, (uint64_t)qword_1ED36D980);
  OUTLINED_FUNCTION_142_2((uint64_t)v58);
  sub_1B251CDC8(1u, v152);
  if ((v63 & 1) != 0)
    sub_1B251CDC8(0, v152);
  OUTLINED_FUNCTION_272_1();
  sub_1B24B3708(v64, v65, v66, v67, 38, (uint64_t)v58);
  OUTLINED_FUNCTION_104((uint64_t)v58);
  OUTLINED_FUNCTION_142_2((uint64_t)v55);
  v68 = v152;
  OUTLINED_FUNCTION_130_1(4u);
  if ((v69 & 1) != 0)
    OUTLINED_FUNCTION_130_1(0);
  OUTLINED_FUNCTION_272_1();
  sub_1B24B3720(v70, v71, v72, v73, 39, (uint64_t)v55);
  OUTLINED_FUNCTION_104((uint64_t)v55);
  OUTLINED_FUNCTION_142_2((uint64_t)v51);
  OUTLINED_FUNCTION_130_1(2u);
  if ((v74 & 1) != 0)
    OUTLINED_FUNCTION_130_1(0);
  v75 = v123;
  OUTLINED_FUNCTION_272_1();
  sub_1B24B3738(v76, v77, v78, v79, 40, (uint64_t)v51);
  OUTLINED_FUNCTION_104((uint64_t)v51);
  OUTLINED_FUNCTION_142_2(v75);
  OUTLINED_FUNCTION_130_1(3u);
  if ((v80 & 1) != 0)
    OUTLINED_FUNCTION_130_1(0);
  v81 = v148;
  OUTLINED_FUNCTION_272_1();
  sub_1B24B3750(v82, v83, v84, v85, 41, v75);
  OUTLINED_FUNCTION_104(v75);
  v86 = v153;
  v87 = v153 + OBJC_IVAR____TtC6Speech11Transcriber_locale;
  v88 = OUTLINED_FUNCTION_23_0();
  v122 = *(_QWORD *)(v88 - 8);
  v123 = v88;
  (*(void (**)(uint64_t, uint64_t))(v122 + 16))(v87, v151);
  v89 = v121;
  if (v121 == 16)
    v89 = 0;
  *(_BYTE *)(v86 + OBJC_IVAR____TtC6Speech11Transcriber_taskHint) = v89;
  sub_1B24EBCB8(v150, v86 + OBJC_IVAR____TtC6Speech11Transcriber_modelOptions, &qword_1EEFD6B20);
  *(_QWORD *)(v86 + OBJC_IVAR____TtC6Speech11Transcriber_transcriptionOptions) = v68;
  v90 = v131;
  v91 = v132;
  *(_QWORD *)(v86 + OBJC_IVAR____TtC6Speech11Transcriber_reportingOptions) = v132;
  *(_QWORD *)(v86 + OBJC_IVAR____TtC6Speech11Transcriber_attributeOptions) = v90;
  sub_1B251CDC8(3u, v91);
  v93 = v92;
  sub_1B251CDC8(4u, v91);
  LODWORD(v152) = v94;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7270);
  v95 = OUTLINED_FUNCTION_268_1(v81);
  MEMORY[0x1E0C80A78](v95, v96);
  *(&v120 - 2) = v81;
  type metadata accessor for Transcriber.Result(0);
  v97 = *(void (**)(uint64_t))(v125 + 104);
  LODWORD(v131) = *MEMORY[0x1E0DF0A50];
  v97(v126);
  v98 = v124;
  sub_1B25CCDE4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v127 + 32))(v86 + OBJC_IVAR____TtC6Speech11Transcriber__results, v98, v129);
  LODWORD(v132) = v93;
  v100 = v130;
  if ((v93 & 1) != 0)
    OUTLINED_FUNCTION_268_1(v130);
  else
    OUTLINED_FUNCTION_212_2(v81, v99, &qword_1EEFD7278);
  v101 = v147;
  v102 = v153;
  sub_1B24EBCE4(v100, v153 + OBJC_IVAR____TtC6Speech11Transcriber_resultsBuilder, &qword_1EEFD7278);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7258);
  v103 = v149;
  v104 = OUTLINED_FUNCTION_196();
  MEMORY[0x1E0C80A78](v104, v105);
  *(&v120 - 2) = v103;
  v106 = v131;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v134 + 104))(v135, v131, v137);
  v107 = v133;
  sub_1B25CCDE4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v136 + 32))(v102 + OBJC_IVAR____TtC6Speech11Transcriber__multisegmentResults, v107, v138);
  if ((v132 & 1) != 0)
  {
    v109 = v103;
    v110 = v139;
    OUTLINED_FUNCTION_212_2(v109, v108, &qword_1EEFD7260);
  }
  else
  {
    v110 = v139;
    OUTLINED_FUNCTION_196();
  }
  v111 = v153;
  sub_1B24EBCE4(v110, v153 + OBJC_IVAR____TtC6Speech11Transcriber_multisegmentResultsBuilder, &qword_1EEFD7260);
  v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7FA0);
  v113 = __swift_storeEnumTagSinglePayload(v101, 1, 1, v112);
  MEMORY[0x1E0C80A78](v113, v114);
  *(&v120 - 2) = v101;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7760);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v141 + 104))(v142, v106, v144);
  v115 = v140;
  sub_1B25CCDE4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v143 + 32))(v111 + OBJC_IVAR____TtC6Speech11Transcriber__muxMultisegmentResults, v115, v145);
  v116 = v146;
  if ((v152 & 1) != 0)
    sub_1B24EBCB8(v101, v146, &qword_1EEFD7FA8);
  else
    __swift_storeEnumTagSinglePayload(v146, 1, 1, v112);
  v117 = v153;
  sub_1B24EBCE4(v116, v153 + OBJC_IVAR____TtC6Speech11Transcriber_muxMultisegmentResultsBuilder, &qword_1EEFD7FA8);
  sub_1B251DA58(v154);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7728);
  v118 = OUTLINED_FUNCTION_8_4();
  *(_DWORD *)(v118 + 276) = 0;
  sub_1B24EBCE4((uint64_t)v154, v118 + 16, &qword_1EEFD7708);
  sub_1B2534D88(v150, &qword_1EEFD6B20);
  (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v151, v123);
  *(_QWORD *)(v117 + OBJC_IVAR____TtC6Speech11Transcriber_lastRecognizedFinalMultisegmentResult) = v118;
  OUTLINED_FUNCTION_171_0(v101);
  OUTLINED_FUNCTION_374_0(v119, &qword_1EEFD7260);
  sub_1B2534D88(v148, &qword_1EEFD7278);
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_1B251D968(uint64_t a1)
{
  uint64_t v1;

  return sub_1B251D9A4(a1, *(_QWORD *)(v1 + 16), &qword_1EEFD7278, &qword_1EEFD7270);
}

uint64_t type metadata accessor for Transcriber.Result(uint64_t a1)
{
  return sub_1B24B1B88(a1, (uint64_t *)&unk_1EEFD6B60);
}

uint64_t sub_1B251D9A4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v7;

  sub_1B2534D88(a2, a3);
  v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
  return OUTLINED_FUNCTION_12_0(a2, 0, 1, v7);
}

uint64_t sub_1B251DA08(uint64_t a1)
{
  uint64_t v1;

  return sub_1B251D9A4(a1, *(_QWORD *)(v1 + 16), &qword_1EEFD7260, &qword_1EEFD7258);
}

uint64_t sub_1B251DA30(uint64_t a1)
{
  uint64_t v1;

  return sub_1B251D9A4(a1, *(_QWORD *)(v1 + 16), &qword_1EEFD7FA8, &qword_1EEFD7FA0);
}

void sub_1B251DA58(void *a1)
{
  bzero(a1, 0x101uLL);
}

uint64_t Transcriber.locale.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_23_0();
  v0 = OUTLINED_FUNCTION_38_0();
  return OUTLINED_FUNCTION_21_0(v0, v1, v2, v3);
}

void Transcriber.taskHint.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC6Speech11Transcriber_taskHint);
}

void Transcriber.modelOptions.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1B24EBCB8(v1 + OBJC_IVAR____TtC6Speech11Transcriber_modelOptions, a1, &qword_1EEFD6B20);
}

uint64_t Transcriber.transcriptionOptions.getter()
{
  return OUTLINED_FUNCTION_107_1();
}

uint64_t Transcriber.reportingOptions.getter()
{
  return OUTLINED_FUNCTION_107_1();
}

uint64_t Transcriber.attributeOptions.getter()
{
  return OUTLINED_FUNCTION_107_1();
}

uint64_t static Transcriber.allLocales.getter()
{
  uint64_t v0;
  _QWORD *v1;

  type metadata accessor for AssetsInventory();
  swift_initStaticObject();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1B251DB5C;
  return sub_1B257242C();
}

uint64_t sub_1B251DB5C()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  OUTLINED_FUNCTION_4_2();
  v0 = OUTLINED_FUNCTION_581();
  return v1(v0);
}

uint64_t static Transcriber.availableLocales.getter()
{
  uint64_t v0;
  _QWORD *v1;

  type metadata accessor for AssetsInventory();
  swift_initStaticObject();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1B2534E78;
  return sub_1B2572684();
}

uint64_t Transcriber.compatibleAudioFormats.getter()
{
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B251DC40()
{
  uint64_t v0;
  uint64_t v2;

  *(_QWORD *)(v0 + 16) = 0x40BF400000000000;
  v2 = MEMORY[0x1E0DEE9D8];
  *(_OWORD *)(v0 + 24) = xmmword_1B25DC3C0;
  *(_OWORD *)(v0 + 40) = xmmword_1B25DC3D0;
  if (OUTLINED_FUNCTION_69_5(objc_allocWithZone(MEMORY[0x1E0C89AA8])))
  {
    MEMORY[0x1B5E24B38]();
    if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      OUTLINED_FUNCTION_35_6();
    OUTLINED_FUNCTION_215_2();
    sub_1B25CCC04();
    sub_1B25CCBBC();
  }
  *(_QWORD *)(v0 + 16) = 0x40CF400000000000;
  *(_OWORD *)(v0 + 24) = xmmword_1B25DC3C0;
  *(_OWORD *)(v0 + 40) = xmmword_1B25DC3D0;
  if (OUTLINED_FUNCTION_69_5(objc_allocWithZone(MEMORY[0x1E0C89AA8])))
  {
    MEMORY[0x1B5E24B38]();
    if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      OUTLINED_FUNCTION_35_6();
    sub_1B25CCC04();
    sub_1B25CCBBC();
  }
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t Transcriber.availableCompatibleAudioFormats.getter()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = v0;
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B251DDC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, _QWORD *a20,uint64_t a21,uint64_t a22)
{
  _QWORD *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t (*v30)(void);
  uint64_t v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t *v41;

  OUTLINED_FUNCTION_49();
  a21 = v24;
  a22 = v25;
  a20 = v22;
  v26 = v22[9];
  v27 = sub_1B251CD30();
  if (v27)
  {
    v22[10] = *(_QWORD *)(v27 + 112);
    OUTLINED_FUNCTION_99_1();
    OUTLINED_FUNCTION_38_2();
    v28 = (_QWORD *)OUTLINED_FUNCTION_39();
    v22[11] = v28;
    v29 = OUTLINED_FUNCTION_341_0(v28, (uint64_t)sub_1B251E0B8);
  }
  else
  {
    if (qword_1ED36CF48 != -1)
      swift_once();
    v31 = OUTLINED_FUNCTION_147();
    OUTLINED_FUNCTION_6_3(v31, (uint64_t)qword_1ED36D980);
    v32 = OUTLINED_FUNCTION_375();
    if (OUTLINED_FUNCTION_63_1(v32))
    {
      v33 = (uint8_t *)OUTLINED_FUNCTION_246();
      a10 = OUTLINED_FUNCTION_246();
      *(_DWORD *)v33 = 136315138;
      v22[8] = OUTLINED_FUNCTION_103_3(31, 0x80000001B25D3E80, &a10);
      sub_1B25CD12C();
      OUTLINED_FUNCTION_91_1(&dword_1B2494000, v26, v23, "Transcriber.%s: No available model info; using hard-coded values",
        v33);
      OUTLINED_FUNCTION_13_1();
      OUTLINED_FUNCTION_174();
    }

    sub_1B2506494();
    v35 = v34;
    if (qword_1ED36CF48 != -1)
      swift_once();
    v36 = __swift_project_value_buffer(v31, (uint64_t)qword_1ED36D980);
    OUTLINED_FUNCTION_444();
    sub_1B25CC8B0();
    v37 = OUTLINED_FUNCTION_375();
    if (OUTLINED_FUNCTION_113_1(v37))
    {
      v38 = OUTLINED_FUNCTION_246();
      a10 = OUTLINED_FUNCTION_246();
      *(_DWORD *)v38 = 136315394;
      v22[6] = OUTLINED_FUNCTION_103_3(31, 0x80000001B25D3E80, &a10);
      sub_1B25CD12C();
      *(_WORD *)(v38 + 12) = 2080;
      OUTLINED_FUNCTION_95_1();
      sub_1B25CCE44();
      OUTLINED_FUNCTION_267();
      v39 = OUTLINED_FUNCTION_367_0();
      v22[7] = sub_1B2504AB0(v39, v40, v41);
      OUTLINED_FUNCTION_322_0();
      OUTLINED_FUNCTION_10_0();
      OUTLINED_FUNCTION_36_2();
      OUTLINED_FUNCTION_362(&dword_1B2494000, v36, (os_log_type_t)v31, "Transcriber.%s found %s", (uint8_t *)v38);
      OUTLINED_FUNCTION_193_1();
      OUTLINED_FUNCTION_174();
    }
    OUTLINED_FUNCTION_36_2();

    sub_1B251C368(v35);
    OUTLINED_FUNCTION_267();
    v29 = OUTLINED_FUNCTION_581();
  }
  return OUTLINED_FUNCTION_20_6(v29, v30);
}

uint64_t sub_1B251E0B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_136_0();
  OUTLINED_FUNCTION_135_0();
  *(_QWORD *)(v2 + 96) = v1;
  *(_QWORD *)(v2 + 104) = v0;
  OUTLINED_FUNCTION_237();
  OUTLINED_FUNCTION_50_4();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_0_0();
}

void sub_1B251E0F8()
{
  NSObject *v0;
  _QWORD *v1;
  unint64_t v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  void (*v40)(_QWORD *, _QWORD);
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t);
  id v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;

  v3 = (void *)v1[12];
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v4, sel_samplingRates);
    sub_1B24B3050(0, (unint64_t *)&qword_1EEFD7478);
    sub_1B25003F8();
    OUTLINED_FUNCTION_267_2();
    OUTLINED_FUNCTION_260_2();
    v6 = sub_1B250290C((uint64_t)&unk_1ED36C000);
    if (!v6)
    {
      OUTLINED_FUNCTION_69();
      v16 = MEMORY[0x1E0DEE9D8];
LABEL_25:
      sub_1B24AFC50(v16);
      v15 = v41;

      goto LABEL_26;
    }
    v7 = v6;
    v51 = MEMORY[0x1E0DEE9D8];
    v0 = &v51;
    OUTLINED_FUNCTION_414_0();
    if (((unint64_t)&unk_1ED36C000 & 0xC000000000000001) != 0)
    {
      v8 = OUTLINED_FUNCTION_309_1();
      v10 = 1;
    }
    else
    {
      v8 = sub_1B2507C08((uint64_t)&unk_1ED36C000);
      v10 = v17 & 1;
    }
    v52 = v8;
    v53 = v9;
    v54 = v10;
    if ((v7 & 0x8000000000000000) == 0)
    {
      v49 = v4;
      v50 = v1;
      v18 = v1 + 2;
      while (1)
      {
        v19 = v52;
        v20 = v53;
        v21 = v54;
        v22 = OUTLINED_FUNCTION_68_4();
        sub_1B25079E8(v22, v23, v24, v25);
        v27 = v26;
        v28 = objc_msgSend(v26, sel_integerValue);

        v29 = v51;
        if ((OUTLINED_FUNCTION_545() & 1) == 0)
        {
          OUTLINED_FUNCTION_304_1();
          v29 = v51;
        }
        v2 = *(_QWORD *)(v29 + 16);
        v30 = *(_QWORD *)(v29 + 24);
        if (v2 >= v30 >> 1)
        {
          OUTLINED_FUNCTION_64_6(v30);
          OUTLINED_FUNCTION_304_1();
          v29 = v51;
        }
        *(_QWORD *)(v29 + 16) = v2 + 1;
        *(_QWORD *)(v29 + 8 * v2 + 32) = v28;
        if (((unint64_t)&unk_1ED36C000 & 0xC000000000000001) != 0)
        {
          if ((v21 & 1) == 0)
          {
            __break(1u);
            return;
          }
          if (sub_1B25CD1EC())
            swift_isUniquelyReferenced_nonNull_native();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7FC8);
          v40 = (void (*)(_QWORD *, _QWORD))sub_1B25CCE5C();
          sub_1B25CD24C();
          v40(v18, 0);
        }
        else
        {
          v31 = OUTLINED_FUNCTION_68_4();
          v35 = sub_1B2507888(v31, v32, v33, v34);
          v37 = v36;
          v39 = v38;
          sub_1B2500EF0(v19, v20, v21);
          v52 = v35;
          v53 = v37;
          v54 = v39 & 1;
        }
        if (!--v7)
        {
          sub_1B2500EF0(v52, v53, v54);
          OUTLINED_FUNCTION_69();
          v16 = v51;
          v4 = v49;
          v1 = v50;
          goto LABEL_25;
        }
      }
    }
    __break(1u);
    goto LABEL_32;
  }
  if (qword_1ED36CF48 != -1)
LABEL_32:
    swift_once();
  v11 = OUTLINED_FUNCTION_147();
  OUTLINED_FUNCTION_6_3(v11, (uint64_t)qword_1ED36D980);
  v12 = OUTLINED_FUNCTION_375();
  if (OUTLINED_FUNCTION_49_3(v12))
  {
    v13 = (uint8_t *)OUTLINED_FUNCTION_246();
    v52 = OUTLINED_FUNCTION_246();
    *(_DWORD *)v13 = 136315138;
    v1[8] = OUTLINED_FUNCTION_103_3(31, 0x80000001B25D3E80, &v52);
    OUTLINED_FUNCTION_361_0();
    OUTLINED_FUNCTION_91_1(&dword_1B2494000, v0, (os_log_type_t)v2, "Transcriber.%s: No available model info; using hard-coded values",
      v13);
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_174();
  }

  sub_1B2506494();
  v15 = v14;
  v4 = 0;
LABEL_26:
  if (qword_1ED36CF48 != -1)
    swift_once();
  v42 = OUTLINED_FUNCTION_147();
  v43 = __swift_project_value_buffer(v42, (uint64_t)qword_1ED36D980);
  OUTLINED_FUNCTION_444();
  sub_1B25CC8B0();
  v44 = OUTLINED_FUNCTION_375();
  if (OUTLINED_FUNCTION_49_3(v44))
  {
    v45 = OUTLINED_FUNCTION_246();
    v52 = OUTLINED_FUNCTION_246();
    *(_DWORD *)v45 = 136315394;
    v1[6] = OUTLINED_FUNCTION_103_3(31, 0x80000001B25D3E80, &v52);
    OUTLINED_FUNCTION_322_0();
    *(_WORD *)(v45 + 12) = 2080;
    OUTLINED_FUNCTION_168();
    sub_1B25CCE44();
    OUTLINED_FUNCTION_401_0();
    OUTLINED_FUNCTION_107();
    v1[7] = OUTLINED_FUNCTION_275_2(v45 + 4, v46, &v52);
    sub_1B25CD12C();
    OUTLINED_FUNCTION_345();
    OUTLINED_FUNCTION_36_2();
    OUTLINED_FUNCTION_362(&dword_1B2494000, v43, (os_log_type_t)v2, "Transcriber.%s found %s", (uint8_t *)v45);
    OUTLINED_FUNCTION_193_1();
    OUTLINED_FUNCTION_174();
  }
  OUTLINED_FUNCTION_36_2();

  sub_1B251C368(v15);
  OUTLINED_FUNCTION_107();
  v47 = OUTLINED_FUNCTION_581();
  v48(v47);
}

uint64_t Transcriber.availableCompatibleAudioFormats(clientID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6B20);
  v3[13] = OUTLINED_FUNCTION_24_8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF08);
  v3[14] = OUTLINED_FUNCTION_24_8();
  v4 = OUTLINED_FUNCTION_23_0();
  v3[15] = v4;
  v3[16] = *(_QWORD *)(v4 - 8);
  v3[17] = swift_task_alloc();
  v3[18] = type metadata accessor for Assets(0);
  v3[19] = OUTLINED_FUNCTION_24_8();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B251E6A4()
{
  os_log_type_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int EnumTagSinglePayload;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;

  OUTLINED_FUNCTION_49();
  v36 = v2;
  v37 = v3;
  v35 = v1;
  v4 = v1[12];
  v5 = sub_1B251CD30();
  if (v5)
  {
    v1[20] = *(_QWORD *)(v5 + 112);
    OUTLINED_FUNCTION_99_1();
    OUTLINED_FUNCTION_38_2();
    v6 = (_QWORD *)OUTLINED_FUNCTION_39();
    v1[21] = v6;
    v7 = OUTLINED_FUNCTION_341_0(v6, (uint64_t)sub_1B251E9A0);
    return OUTLINED_FUNCTION_20_6(v7, v8);
  }
  else
  {
    if (qword_1ED36CF48 != -1)
      swift_once();
    v10 = OUTLINED_FUNCTION_147();
    v11 = __swift_project_value_buffer(v10, (uint64_t)qword_1ED36D980);
    OUTLINED_FUNCTION_384_0(v11);
    v12 = OUTLINED_FUNCTION_375();
    if (OUTLINED_FUNCTION_186_0(v12))
    {
      v13 = (uint8_t *)OUTLINED_FUNCTION_246();
      v34 = OUTLINED_FUNCTION_246();
      *(_DWORD *)v13 = 136315138;
      v1[9] = OUTLINED_FUNCTION_103_3(42, 0x80000001B25D4490, &v34);
      OUTLINED_FUNCTION_19_1();
        v13);
      OUTLINED_FUNCTION_13_1();
      OUTLINED_FUNCTION_174();
    }

    v14 = (_QWORD *)TaskHint.preferredModelTaskNames.getter();
    if (v14[2])
    {
      v16 = v1[16];
      v15 = v1[17];
      v17 = v1[15];
      v19 = v1[12];
      v18 = v1[13];
      v20 = v14[4];
      v21 = v14[5];
      OUTLINED_FUNCTION_47_0();
      OUTLINED_FUNCTION_69();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v15, v19 + OBJC_IVAR____TtC6Speech11Transcriber_locale, v17);
      OUTLINED_FUNCTION_411_0(v19 + OBJC_IVAR____TtC6Speech11Transcriber_modelOptions, v22, &qword_1EEFD6B20);
      v23 = type metadata accessor for Transcriber.ModelOptions(0);
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v18, 1, v23);
      v26 = v1[14];
      if (EnumTagSinglePayload == 1)
      {
        sub_1B2534D88(v1[13], &qword_1EEFD6B20);
        v27 = OUTLINED_FUNCTION_70_3();
        OUTLINED_FUNCTION_291_0(v26, v28, v29, v27);
      }
      else
      {
        OUTLINED_FUNCTION_212_2(v1[13] + *(int *)(v23 + 24), v25, &qword_1ED36CF08);
        OUTLINED_FUNCTION_389_0(v30, type metadata accessor for Transcriber.ModelOptions);
      }
      if (v20 != sub_1B25CCA18() || v21 != v31)
      {
        OUTLINED_FUNCTION_38_0();
        OUTLINED_FUNCTION_303_0();
      }
      OUTLINED_FUNCTION_173();
      OUTLINED_FUNCTION_69();
      OUTLINED_FUNCTION_224_0();
      Assets.init(locale:taskHint:clientID:modelOverridePath:isSpelling:)();
      v33 = (_QWORD *)swift_task_alloc();
      v1[25] = v33;
      OUTLINED_FUNCTION_18_0(v33, (uint64_t)sub_1B251F0B8);
      return sub_1B24B08FC();
    }
    else
    {
      result = OUTLINED_FUNCTION_69();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1B251E9A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_136_0();
  OUTLINED_FUNCTION_135_0();
  *(_QWORD *)(v2 + 176) = v1;
  *(_QWORD *)(v2 + 184) = v0;
  OUTLINED_FUNCTION_237();
  OUTLINED_FUNCTION_50_4();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1B251E9E0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  os_log_type_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  char v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t EnumTagSinglePayload;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v38;
  uint64_t result;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  void *v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  void (*v62)(uint64_t, _QWORD);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;

  v5 = *(void **)(v2 + 176);
  if (v5)
  {
    v73 = v5;
    v6 = objc_msgSend(v73, sel_samplingRates);
    sub_1B24B3050(0, (unint64_t *)&qword_1EEFD7478);
    sub_1B25003F8();
    OUTLINED_FUNCTION_267_2();
    OUTLINED_FUNCTION_260_2();
    v7 = sub_1B250290C(v1);
    if (!v7)
    {
      OUTLINED_FUNCTION_69();
      v34 = MEMORY[0x1E0DEE9D8];
LABEL_34:
      sub_1B24AFC50(v34);
      v64 = v63;

      if (qword_1ED36CF48 != -1)
        swift_once();
      v65 = OUTLINED_FUNCTION_147();
      v66 = __swift_project_value_buffer(v65, (uint64_t)qword_1ED36D980);
      OUTLINED_FUNCTION_444();
      sub_1B25CC8B0();
      v67 = OUTLINED_FUNCTION_375();
      if (OUTLINED_FUNCTION_63_1(v67))
      {
        v68 = OUTLINED_FUNCTION_246();
        v75 = OUTLINED_FUNCTION_246();
        *(_DWORD *)v68 = 136315394;
        *(_QWORD *)(v2 + 48) = OUTLINED_FUNCTION_103_3(42, 0x80000001B25D4490, &v75);
        OUTLINED_FUNCTION_322_0();
        *(_WORD *)(v68 + 12) = 2080;
        OUTLINED_FUNCTION_95_1();
        sub_1B25CCE44();
        OUTLINED_FUNCTION_401_0();
        OUTLINED_FUNCTION_267();
        *(_QWORD *)(v2 + 56) = OUTLINED_FUNCTION_275_2(v68 + 4, v69, &v75);
        sub_1B25CD12C();
        OUTLINED_FUNCTION_345();
        OUTLINED_FUNCTION_36_2();
        OUTLINED_FUNCTION_362(&dword_1B2494000, v66, (os_log_type_t)v3, "Transcriber.%s found %s", (uint8_t *)v68);
        OUTLINED_FUNCTION_193_1();
        OUTLINED_FUNCTION_174();
      }
      OUTLINED_FUNCTION_36_2();

      sub_1B251C368(v64);
      v71 = v70;

      OUTLINED_FUNCTION_267();
      OUTLINED_FUNCTION_36();
      OUTLINED_FUNCTION_148();
      OUTLINED_FUNCTION_48();
      OUTLINED_FUNCTION_114();
      return (*(uint64_t (**)(uint64_t))(v2 + 8))(v71);
    }
    v8 = v7;
    v74 = MEMORY[0x1E0DEE9D8];
    v0 = &v74;
    OUTLINED_FUNCTION_414_0();
    if ((v1 & 0xC000000000000001) != 0)
    {
      v9 = OUTLINED_FUNCTION_309_1();
      v11 = 1;
    }
    else
    {
      v9 = sub_1B2507C08(v1);
      v11 = v40 & 1;
    }
    v75 = v9;
    v76 = v10;
    v77 = v11;
    if ((v8 & 0x8000000000000000) == 0)
    {
      v72 = v2;
      v41 = v2 + 16;
      while (1)
      {
        v43 = v75;
        v42 = v76;
        v44 = v77;
        v45 = OUTLINED_FUNCTION_366_0();
        sub_1B25079E8(v45, v46, v47, v48);
        v50 = v49;
        v51 = objc_msgSend(v49, sel_integerValue);

        v52 = v74;
        if ((OUTLINED_FUNCTION_545() & 1) == 0)
        {
          OUTLINED_FUNCTION_304_1();
          v52 = v74;
        }
        v3 = *(_QWORD *)(v52 + 16);
        if (v3 >= *(_QWORD *)(v52 + 24) >> 1)
        {
          OUTLINED_FUNCTION_304_1();
          v52 = v74;
        }
        *(_QWORD *)(v52 + 16) = v3 + 1;
        *(_QWORD *)(v52 + 8 * v3 + 32) = v51;
        if ((v1 & 0xC000000000000001) != 0)
        {
          if ((v44 & 1) == 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          if (sub_1B25CD1EC())
            swift_isUniquelyReferenced_nonNull_native();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7FC8);
          v62 = (void (*)(uint64_t, _QWORD))sub_1B25CCE5C();
          sub_1B25CD24C();
          v62(v41, 0);
        }
        else
        {
          v53 = OUTLINED_FUNCTION_366_0();
          v57 = sub_1B2507888(v53, v54, v55, v56);
          v59 = v58;
          v61 = v60;
          sub_1B2500EF0(v43, v42, v44);
          v75 = v57;
          v76 = v59;
          v77 = v61 & 1;
        }
        if (!--v8)
        {
          sub_1B2500EF0(v75, v76, v77);
          OUTLINED_FUNCTION_69();
          v34 = v74;
          v2 = v72;
          goto LABEL_34;
        }
      }
    }
    __break(1u);
  }
  else if (qword_1ED36CF48 == -1)
  {
    goto LABEL_6;
  }
  swift_once();
LABEL_6:
  v12 = OUTLINED_FUNCTION_147();
  v13 = __swift_project_value_buffer(v12, (uint64_t)qword_1ED36D980);
  OUTLINED_FUNCTION_384_0(v13);
  v14 = OUTLINED_FUNCTION_375();
  if (OUTLINED_FUNCTION_49_3(v14))
  {
    v15 = (uint8_t *)OUTLINED_FUNCTION_246();
    v75 = OUTLINED_FUNCTION_246();
    *(_DWORD *)v15 = 136315138;
    *(_QWORD *)(v2 + 72) = OUTLINED_FUNCTION_103_3(42, 0x80000001B25D4490, &v75);
    OUTLINED_FUNCTION_361_0();
      v15);
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_174();
  }

  v16 = *(_BYTE *)(*(_QWORD *)(v2 + 96) + OBJC_IVAR____TtC6Speech11Transcriber_taskHint);
  LOBYTE(v75) = v16;
  v17 = (_QWORD *)TaskHint.preferredModelTaskNames.getter();
  if (v17[2])
  {
    v19 = *(_QWORD *)(v2 + 128);
    v18 = *(_QWORD *)(v2 + 136);
    v20 = *(_QWORD *)(v2 + 120);
    v22 = *(_QWORD *)(v2 + 96);
    v21 = *(_QWORD *)(v2 + 104);
    v23 = v17[4];
    v24 = v17[5];
    OUTLINED_FUNCTION_47_0();
    OUTLINED_FUNCTION_345();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v18, v22 + OBJC_IVAR____TtC6Speech11Transcriber_locale, v20);
    LOBYTE(v75) = v16;
    OUTLINED_FUNCTION_307_1(v22 + OBJC_IVAR____TtC6Speech11Transcriber_modelOptions, v25, &qword_1EEFD6B20);
    v26 = OUTLINED_FUNCTION_140_2();
    v27 = v21;
    v28 = v2;
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v27, 1, v26);
    v30 = *(_QWORD *)(v2 + 112);
    if ((_DWORD)EnumTagSinglePayload == 1)
    {
      OUTLINED_FUNCTION_236_2(EnumTagSinglePayload, &qword_1EEFD6B20);
      v31 = OUTLINED_FUNCTION_70_3();
      OUTLINED_FUNCTION_291_0(v30, v32, v33, v31);
    }
    else
    {
      sub_1B24EBCB8(*(_QWORD *)(v28 + 104) + *(int *)(v26 + 24), v30, &qword_1ED36CF08);
      OUTLINED_FUNCTION_237_1(v35, type metadata accessor for Transcriber.ModelOptions);
    }
    if (v23 != sub_1B25CCA18() || v24 != v36)
    {
      OUTLINED_FUNCTION_38_0();
      OUTLINED_FUNCTION_303_0();
    }
    OUTLINED_FUNCTION_173();
    OUTLINED_FUNCTION_101_1();
    OUTLINED_FUNCTION_776();
    Assets.init(locale:taskHint:clientID:modelOverridePath:isSpelling:)();
    v38 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v28 + 200) = v38;
    *v38 = v28;
    v38[1] = sub_1B251F0B8;
    return sub_1B24B08FC();
  }
  else
  {
LABEL_42:
    result = OUTLINED_FUNCTION_345();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B251F0B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 208) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 216) = a1;
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_31();
}

uint64_t sub_1B251F11C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;

  OUTLINED_FUNCTION_49();
  a21 = v24;
  a22 = v25;
  a20 = v22;
  sub_1B24AFC50(*(_QWORD *)(v22 + 216));
  v27 = v26;
  sub_1B25317B8(*(_QWORD *)(v22 + 152), type metadata accessor for Assets);
  if (qword_1ED36CF48 != -1)
    swift_once();
  v28 = OUTLINED_FUNCTION_147();
  v29 = __swift_project_value_buffer(v28, (uint64_t)qword_1ED36D980);
  OUTLINED_FUNCTION_444();
  sub_1B25CC8B0();
  v30 = OUTLINED_FUNCTION_375();
  if (OUTLINED_FUNCTION_113_1(v30))
  {
    v31 = OUTLINED_FUNCTION_246();
    a10 = OUTLINED_FUNCTION_246();
    *(_DWORD *)v31 = 136315394;
    *(_QWORD *)(v22 + 48) = OUTLINED_FUNCTION_103_3(42, 0x80000001B25D4490, &a10);
    sub_1B25CD12C();
    *(_WORD *)(v31 + 12) = 2080;
    OUTLINED_FUNCTION_79_0();
    v32 = sub_1B25CCE44();
    v34 = v33;
    OUTLINED_FUNCTION_10_0();
    *(_QWORD *)(v22 + 56) = sub_1B2504AB0(v32, v34, &a10);
    OUTLINED_FUNCTION_322_0();
    OUTLINED_FUNCTION_365();
    OUTLINED_FUNCTION_36_2();
    OUTLINED_FUNCTION_362(&dword_1B2494000, v29, v23, "Transcriber.%s found %s", (uint8_t *)v31);
    OUTLINED_FUNCTION_193_1();
    OUTLINED_FUNCTION_174();
  }
  OUTLINED_FUNCTION_36_2();

  sub_1B251C368(v27);
  v36 = v35;
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_114();
  OUTLINED_FUNCTION_148();
  return OUTLINED_FUNCTION_20_6(v36, *(uint64_t (**)(void))(v22 + 8));
}

uint64_t sub_1B251F308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  void *v32;
  uint8_t *v33;
  _QWORD *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  OUTLINED_FUNCTION_49();
  a21 = v25;
  a22 = v26;
  a20 = v23;
  v27 = *(void **)(v23 + 208);
  v28 = v27;
  v29 = v27;
  v30 = sub_1B25CC8B0();
  v31 = sub_1B25CCFDC();
  if (OUTLINED_FUNCTION_186_0(v31))
  {
    v32 = *(void **)(v23 + 208);
    v33 = (uint8_t *)OUTLINED_FUNCTION_246();
    v34 = (_QWORD *)OUTLINED_FUNCTION_246();
    *(_DWORD *)v33 = 138412290;
    v35 = v32;
    v36 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v23 + 64) = v36;
    OUTLINED_FUNCTION_19_1();
    *v34 = v36;

    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7488);
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_174();
  }
  OUTLINED_FUNCTION_69_4();
  OUTLINED_FUNCTION_69_4();

  OUTLINED_FUNCTION_69_4();
  sub_1B25317B8(*(_QWORD *)(v23 + 152), type metadata accessor for Assets);
  if (qword_1ED36CF48 != -1)
    swift_once();
  v37 = OUTLINED_FUNCTION_147();
  v38 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED36D980);
  OUTLINED_FUNCTION_444();
  sub_1B25CC8B0();
  v39 = OUTLINED_FUNCTION_375();
  if (OUTLINED_FUNCTION_186_0(v39))
  {
    v40 = OUTLINED_FUNCTION_246();
    a10 = OUTLINED_FUNCTION_246();
    *(_DWORD *)v40 = 136315394;
    *(_QWORD *)(v23 + 48) = OUTLINED_FUNCTION_103_3(42, 0x80000001B25D4490, &a10);
    sub_1B25CD12C();
    *(_WORD *)(v40 + 12) = 2080;
    OUTLINED_FUNCTION_224_0();
    sub_1B25CCE44();
    OUTLINED_FUNCTION_401_0();
    OUTLINED_FUNCTION_365();
    *(_QWORD *)(v23 + 56) = OUTLINED_FUNCTION_275_2(v24, v41, &a10);
    sub_1B25CD12C();
    OUTLINED_FUNCTION_345();
    OUTLINED_FUNCTION_36_2();
    OUTLINED_FUNCTION_362(&dword_1B2494000, v38, v22, "Transcriber.%s found %s", (uint8_t *)v40);
    OUTLINED_FUNCTION_193_1();
    OUTLINED_FUNCTION_174();
  }
  OUTLINED_FUNCTION_36_2();

  sub_1B251C368(MEMORY[0x1E0DEE9E8]);
  v43 = v42;
  OUTLINED_FUNCTION_44_1();
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_114();
  return OUTLINED_FUNCTION_20_6(v43, *(uint64_t (**)(void))(v23 + 8));
}

uint64_t Transcriber.requestResultAtEndpoints(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B251F600()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = sub_1B251CD30();
  *(_QWORD *)(v0 + 32) = v1;
  if (!v1)
    return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v0 + 8));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v2;
  *v2 = v0;
  v2[1] = sub_1B251F66C;
  return sub_1B24F7B04(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1B251F66C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_17();
    return OUTLINED_FUNCTION_0_0();
  }
  else
  {
    swift_release();
    return OUTLINED_FUNCTION_15_0(*(uint64_t (**)(void))(v2 + 8));
  }
}

uint64_t sub_1B251F6CC()
{
  uint64_t v0;

  swift_release();
  return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t Transcriber.cancelPendingResultsAndPause()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B251F708()
{
  uint64_t v0;
  _QWORD *v1;

  if (!OUTLINED_FUNCTION_248_1())
    return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v0 + 8));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  OUTLINED_FUNCTION_18_0(v1, (uint64_t)sub_1B251F75C);
  return sub_1B24F6BA0();
}

uint64_t sub_1B251F75C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_6_4();
  if (v0)
  {
    OUTLINED_FUNCTION_17();
    return OUTLINED_FUNCTION_0_0();
  }
  else
  {
    swift_release();
    return OUTLINED_FUNCTION_15_0(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_1B251F7A0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_247_2();
  return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t Transcriber.resume()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B251F7D8()
{
  uint64_t v0;
  _QWORD *v1;

  if (!OUTLINED_FUNCTION_248_1())
    return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v0 + 8));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  OUTLINED_FUNCTION_18_0(v1, (uint64_t)sub_1B251F82C);
  return sub_1B24F6C18();
}

uint64_t sub_1B251F82C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_6_4();
  if (v0)
  {
    OUTLINED_FUNCTION_17();
    return OUTLINED_FUNCTION_0_0();
  }
  else
  {
    swift_release();
    return OUTLINED_FUNCTION_15_0(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t Transcriber.setLeftContextText(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B251F884()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  if (!OUTLINED_FUNCTION_246_2())
    return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v0 + 8));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v1;
  v2 = OUTLINED_FUNCTION_168_2(v1, (uint64_t)sub_1B251F8D8);
  return sub_1B24F6DF4(v2, v3);
}

uint64_t sub_1B251F8D8()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_56_5();
  if (v0)
  {
    OUTLINED_FUNCTION_17();
    return OUTLINED_FUNCTION_0_0();
  }
  else
  {
    OUTLINED_FUNCTION_340_0();
    return OUTLINED_FUNCTION_15_0(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t Transcriber.setRightContext(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B251F92C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  if (!OUTLINED_FUNCTION_246_2())
    return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v0 + 8));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v1;
  v2 = OUTLINED_FUNCTION_168_2(v1, (uint64_t)sub_1B251F980);
  return sub_1B24F6EC4(v2, v3);
}

uint64_t sub_1B251F980()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_56_5();
  if (v0)
  {
    OUTLINED_FUNCTION_17();
    return OUTLINED_FUNCTION_0_0();
  }
  else
  {
    OUTLINED_FUNCTION_340_0();
    return OUTLINED_FUNCTION_15_0(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_1B251F9C0()
{
  uint64_t v0;

  swift_release();
  return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t Transcriber.setSelectedText(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B251FA00()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  if (!OUTLINED_FUNCTION_246_2())
    return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v0 + 8));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v1;
  v2 = OUTLINED_FUNCTION_168_2(v1, (uint64_t)sub_1B251F8D8);
  return sub_1B24F6FE8(v2, v3);
}

uint64_t Transcriber.results.getter()
{
  return sub_1B251FCC8((uint64_t)&OBJC_IVAR____TtC6Speech11Transcriber__results, &qword_1EEFD72E0);
}

void Transcriber.Result.transcription.getter(uint64_t a1@<X8>)
{
  sub_1B2523C28(type metadata accessor for Transcriber.Result, a1);
}

CMTimeValue Transcriber.Result.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  CMTimeEpoch v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  CMTimeRange v23;
  CMTimeValue value;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_123_2();
  v26 = v2;
  v27 = v3;
  v4 = v0;
  v5 = type metadata accessor for TranscriptionSegment(0);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v6, v7);
  OUTLINED_FUNCTION_434();
  v10 = v8 - v9;
  MEMORY[0x1E0C80A78](v11, v12);
  v14 = (char *)&v23 - v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6FE0);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v15, v16);
  OUTLINED_FUNCTION_228();
  v23.start.value = 0;
  *(_QWORD *)&v23.start.timescale = 0xE000000000000000;
  sub_1B25CD2DC();
  value = v23.start.value;
  v25 = *(_QWORD *)&v23.start.timescale;
  sub_1B25CCAE4();
  v17 = *(_QWORD *)(v0 + 40);
  v23.start.value = *(_QWORD *)v0;
  *(_QWORD *)&v23.start.timescale = *(_QWORD *)(v0 + 8);
  *(_OWORD *)&v23.start.epoch = *(_OWORD *)(v0 + 16);
  *(_QWORD *)&v23.duration.timescale = *(_QWORD *)(v0 + 32);
  v23.duration.epoch = v17;
  v18 = (void *)CMTimeRangeCopyDescription(0, &v23);
  if (!v18)
    v18 = (void *)OUTLINED_FUNCTION_143_3();
  v23.start.value = (CMTimeValue)v18;
  type metadata accessor for CFString(0);
  sub_1B25CD3E4();

  sub_1B25CCAE4();
  v19 = type metadata accessor for Transcriber.Result(0);
  OUTLINED_FUNCTION_411_0(v4 + *(int *)(v19 + 24), v20, &qword_1EEFD6FE0);
  OUTLINED_FUNCTION_118_0(v1, 1, v5);
  if (!v21)
  {
    sub_1B24EABC4(v1, (uint64_t)v14, type metadata accessor for TranscriptionSegment);
    sub_1B24EAB98((uint64_t)v14, v10, type metadata accessor for TranscriptionSegment);
    OUTLINED_FUNCTION_215_2();
    sub_1B25CCA6C();
    OUTLINED_FUNCTION_280_2((uint64_t)v14);
  }
  sub_1B25CCAE4();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_331_0();
  return value;
}

uint64_t Transcriber.multisegmentResults.getter()
{
  return sub_1B251FCC8((uint64_t)&OBJC_IVAR____TtC6Speech11Transcriber__multisegmentResults, &qword_1EEFD72C8);
}

uint64_t Transcriber.muxMultisegmentResults.getter()
{
  return sub_1B251FCC8((uint64_t)&OBJC_IVAR____TtC6Speech11Transcriber__muxMultisegmentResults, &qword_1EEFD7FB8);
}

uint64_t sub_1B251FCC8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_186(a1, a2);
  v2 = OUTLINED_FUNCTION_38_0();
  return OUTLINED_FUNCTION_21_0(v2, v3, v4, v5);
}

uint64_t Transcriber.MultisegmentResult.transcriptions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Transcriber.MultisegmentResult.transcriptionTokens.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Transcriber.MultisegmentResult.segments.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Transcriber.MultisegmentResult.nBestChoices.getter()
{
  return swift_bridgeObjectRetain();
}

void Transcriber.MultisegmentResult.earResultType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 104);
}

double Transcriber.MultisegmentResult.recognitionAudioRange.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(v1 + 148);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 108);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(v1 + 116);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 124);
  result = *(double *)(v1 + 140);
  *(double *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 40) = v2;
  return result;
}

uint64_t Transcriber.MultisegmentResult.audioAnalytics.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[20];
  v3 = v1[21];
  v4 = v1[22];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  return sub_1B25317F0(v2);
}

uint64_t Transcriber.MultisegmentResult.eosLikelihood.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 184);
}

uint64_t Transcriber.MultisegmentResult.latticeMitigatorResult.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(v1 + 224);
  v3 = *(_BYTE *)(v1 + 232);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 200);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 208);
  *(_QWORD *)(a1 + 24) = v2;
  *(_BYTE *)(a1 + 32) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t Transcriber.MultisegmentResult.numOneBestTokensExcludingTriggerPhrase.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 240);
}

uint64_t Transcriber.MultisegmentResult.resultCandidateId.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 248);
}

uint64_t Transcriber.MultisegmentResult.init(range:resultsFinalToTime:transcriptions:transcriptionTokens:segments:nBestChoices:earResultType:recognitionAudioRange:audioAnalytics:eosLikelihood:latticeMitigatorResult:numOneBestTokensExcludingTriggerPhrase:resultCandidateId:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char *a10, uint64_t *a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  char v23;
  uint64_t v24;
  char v25;

  *(_QWORD *)(a9 + 8) = a1[1];
  *(_OWORD *)(a9 + 16) = *((_OWORD *)a1 + 1);
  *(_QWORD *)(a9 + 32) = a1[4];
  *(_QWORD *)(a9 + 116) = a11[1];
  *(_OWORD *)(a9 + 124) = *((_OWORD *)a11 + 1);
  *(_QWORD *)(a9 + 140) = a11[4];
  *(_OWORD *)(a9 + 160) = *(_OWORD *)a12;
  v18 = *(_OWORD *)(a15 + 16);
  *(_OWORD *)(a9 + 200) = *(_OWORD *)a15;
  v19 = *a11;
  v20 = a11[5];
  v21 = *a1;
  result = a1[5];
  v23 = *a10;
  v24 = *(_QWORD *)(a12 + 16);
  v25 = *(_BYTE *)(a15 + 32);
  *(_QWORD *)a9 = v21;
  *(_QWORD *)(a9 + 40) = result;
  *(_QWORD *)(a9 + 48) = a2;
  *(_QWORD *)(a9 + 56) = a3;
  *(_QWORD *)(a9 + 64) = a4;
  *(_QWORD *)(a9 + 72) = a5;
  *(_QWORD *)(a9 + 80) = a6;
  *(_QWORD *)(a9 + 88) = a7;
  *(_QWORD *)(a9 + 96) = a8;
  *(_BYTE *)(a9 + 104) = v23;
  *(_QWORD *)(a9 + 108) = v19;
  *(_QWORD *)(a9 + 148) = v20;
  *(_QWORD *)(a9 + 176) = v24;
  *(_QWORD *)(a9 + 184) = a13;
  *(_BYTE *)(a9 + 192) = a14 & 1;
  *(_OWORD *)(a9 + 216) = v18;
  *(_BYTE *)(a9 + 232) = v25;
  *(_QWORD *)(a9 + 240) = a16;
  *(_QWORD *)(a9 + 248) = a17;
  *(_BYTE *)(a9 + 256) = a18 & 1;
  return result;
}

void Transcriber.MultisegmentResult.description.getter()
{
  CMTimeValue *v0;
  CMTimeValue v1;
  CMTimeEpoch v2;
  CMTimeValue v3;
  CMTimeEpoch v4;
  CMTimeValue v5;
  void *v6;
  void *v7;
  CMTimeEpoch v8;
  CMTimeValue v9;
  CMTimeRange range;
  uint64_t v11;
  unint64_t v12;

  v1 = *v0;
  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[5];
  v5 = v0[7];
  v8 = v0[8];
  v9 = v0[6];
  *(_QWORD *)&range.start.timescale = 0xE000000000000000;
  sub_1B25CD2DC();
  v11 = 0;
  v12 = 0xE000000000000000;
  OUTLINED_FUNCTION_186_2();
  sub_1B25CD3E4();
  sub_1B25CCAE4();
  range.start.value = v1;
  *(_QWORD *)&range.start.timescale = v0[1];
  range.start.epoch = v2;
  range.duration.value = v3;
  *(_QWORD *)&range.duration.timescale = v0[4];
  range.duration.epoch = v4;
  v6 = (void *)CMTimeRangeCopyDescription(0, &range);
  if (!v6)
    v6 = (void *)OUTLINED_FUNCTION_143_3();
  range.start.value = (CMTimeValue)v6;
  type metadata accessor for CFString(0);
  OUTLINED_FUNCTION_293_2();

  OUTLINED_FUNCTION_186_2();
  range.start.value = v9;
  *(_QWORD *)&range.start.timescale = v5;
  range.start.epoch = v8;
  v7 = (void *)CMTimeCopyDescription(0, &range.start);
  if (!v7)
    v7 = (void *)OUTLINED_FUNCTION_143_3();
  range.start.value = (CMTimeValue)v7;
  OUTLINED_FUNCTION_293_2();

  sub_1B25CCAE4();
  OUTLINED_FUNCTION_192_1();
  OUTLINED_FUNCTION_776();
  OUTLINED_FUNCTION_395_0();
}

void sub_1B25200CC()
{
  OUTLINED_FUNCTION_186_2();
  OUTLINED_FUNCTION_44_1();
  OUTLINED_FUNCTION_365();
  sub_1B25CCAE4();
  sub_1B25CC760();
  OUTLINED_FUNCTION_168();
  OUTLINED_FUNCTION_395_0();
}

void sub_1B2520114()
{
  OUTLINED_FUNCTION_186_2();
  OUTLINED_FUNCTION_107();
  OUTLINED_FUNCTION_44_1();
  OUTLINED_FUNCTION_120_2();
  OUTLINED_FUNCTION_99_4();
  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_395_0();
}

uint64_t sub_1B2520144()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_186_2();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_107();
  OUTLINED_FUNCTION_74_4();
  OUTLINED_FUNCTION_79_0();
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7138);
  MEMORY[0x1B5E24B5C](v3, v1);
  sub_1B25CCAE4();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_267();
  OUTLINED_FUNCTION_120_2();
  if (v4)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_79_0();
    sub_1B25CCA6C();
  }
  OUTLINED_FUNCTION_369_0();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_74_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7320);
  OUTLINED_FUNCTION_399_0();
  OUTLINED_FUNCTION_202_1();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_74_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7330);
  sub_1B25CCA6C();
  OUTLINED_FUNCTION_256_2();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_120_2();
  OUTLINED_FUNCTION_153_1();
  OUTLINED_FUNCTION_256_2();
  OUTLINED_FUNCTION_69();
  sub_1B25CCAE4();
  OUTLINED_FUNCTION_153_1();
  OUTLINED_FUNCTION_256_2();
  OUTLINED_FUNCTION_69();
  sub_1B25CCAE4();
  OUTLINED_FUNCTION_153_1();
  OUTLINED_FUNCTION_202_1();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_74_4();
  sub_1B25CD570();
  OUTLINED_FUNCTION_186_2();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_74_4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEFD7348);
  OUTLINED_FUNCTION_399_0();
  OUTLINED_FUNCTION_202_1();
  OUTLINED_FUNCTION_10_0();
  sub_1B25CCAE4();
  return *(_QWORD *)(v0 - 120);
}

uint64_t static Transcriber.MultisegmentResult.split(result:)()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  const void *v4;
  const void *v5;
  CMTimeValue *v6;
  CMTimeValue *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  CMTimeEpoch v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  CMTimeValue v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  CMTimeEpoch v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  CMTimeEpoch v69;
  BOOL v70;
  uint64_t v71;
  void (*v72)(uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t result;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  uint64_t v86;
  CMTimeEpoch v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t i;
  CMTimeValue v92;
  CMTimeValue v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  CMTimeValue value;
  unint64_t v107;
  uint64_t v108;
  CMTimeEpoch v109;
  CMTimeValue v110;
  unint64_t v111;
  unint64_t v112;
  _BOOL8 v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  unint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  CMTimeValue v138;
  uint64_t j;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v141;
  unint64_t v142;
  CMTimeValue v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  CMTimeEpoch v147;
  char *v148;
  char *v149;
  CMTimeValue v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char v156;
  unint64_t v157;
  unint64_t v158;
  _BOOL8 v159;
  unint64_t v160;
  CMTimeValue v161;
  uint64_t v162;
  unint64_t v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  CMTimeEpoch v167;
  uint64_t v168;
  unint64_t v169;
  unint64_t v170;
  unint64_t v171;
  CMTimeEpoch v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  unint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  unint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  CMTimeEpoch v186;
  CMTimeEpoch v187;
  CMTimeValue v188;
  CMTimeValue v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  CMTimeValue v197;
  uint64_t v198;
  CMTimeEpoch epoch;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  int v210;
  int v211;
  uint64_t v212;
  uint64_t v213;
  unsigned __int8 v214;
  uint64_t v215;
  uint64_t v216;
  CMTimeValue v217;
  CMTimeValue v218;
  CMTimeValue v219;
  int v220;
  CMTimeValue v221;
  CMTimeValue v222;
  int v223;
  CMTimeValue v224;
  uint64_t v225;
  CMTimeValue *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  CMTimeValue v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  unint64_t v236;
  uint64_t v237;
  CMTimeValue *v238;
  uint64_t v239;
  CMTimeValue v240;
  int v241;
  int v242;
  CMTimeValue v243;
  CMTimeValue v244;
  int v245;
  CMTimeValue v246;
  int v247;
  CMTimeEpoch v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  CMTimeValue v253;
  CMTimeEpoch v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  CMTimeEpoch v259;
  uint64_t v260;
  uint64_t v261;
  CMTimeValue v262;
  char *v263;
  uint64_t v264;
  uint64_t v265;
  CMTimeEpoch v266;
  CMTimeEpoch v267;
  unint64_t v268;
  CMTimeValue v269;
  uint64_t v270;
  uint64_t v271;
  CMTimeValue v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  char *v276;
  CMTimeEpoch v277;
  char v278;
  _BYTE v279[7];
  _BYTE v280[7];
  char v281;
  __int16 v282;
  char v283;
  char v284;
  _BYTE v285[7];
  char v286;
  __int16 v287;
  char v288;
  uint64_t v289;
  CMTime v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  int v295;
  int v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  unsigned __int8 v302;
  __int16 v303;
  char v304;
  CMTimeValue v305;
  int v306;
  int v307;
  CMTimeValue v308;
  CMTimeValue v309;
  int v310;
  int v311;
  CMTimeValue v312;
  __int128 v313;
  __int128 v314;
  char v315;
  _BYTE v316[7];
  CMTimeEpoch v317;
  uint64_t v318;
  void (*v319)(_QWORD, _QWORD, _QWORD);
  uint64_t v320;
  char v321;
  _BYTE v322[7];
  uint64_t v323;
  uint64_t v324;
  char v325;
  _QWORD v326[20];
  CMTime v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  CMTime v331;
  uint64_t v332;
  CMTimeValue v333;
  uint64_t v334;
  _BYTE v335[48];
  uint64_t v336;
  int v337;
  int v338;
  uint64_t v339;
  uint64_t v340;
  CMTimeValue v341;
  CMTimeEpoch v342;
  unsigned __int8 v343;
  CMTimeValue v344;
  int v345;
  int v346;
  CMTimeValue v347;
  CMTimeValue v348;
  int v349;
  int v350;
  CMTimeValue v351;
  CMTimeValue v352;
  char v353;
  CMTimeEpoch v354;
  uint64_t v355;
  char *v356;
  uint64_t v357;
  unsigned __int8 v358;
  uint64_t v359;
  uint64_t v360;

  OUTLINED_FUNCTION_273_1();
  v359 = v2;
  v360 = v3;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v270 = OUTLINED_FUNCTION_99_4();
  v262 = *(_QWORD *)(v270 - 8);
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v10, v11);
  OUTLINED_FUNCTION_767();
  v259 = v12;
  OUTLINED_FUNCTION_219_0();
  v13 = sub_1B25CC760();
  v277 = *(_QWORD *)(v13 - 8);
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v14, v15);
  OUTLINED_FUNCTION_29_7();
  v273 = v16;
  OUTLINED_FUNCTION_42_8();
  v19 = MEMORY[0x1E0C80A78](v17, v18);
  v21 = (char *)&v235 - v20;
  MEMORY[0x1E0C80A78](v19, v22);
  OUTLINED_FUNCTION_752();
  v276 = v23;
  v24 = OUTLINED_FUNCTION_192_1();
  v271 = *(_QWORD *)(v24 - 8);
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v25, v26);
  OUTLINED_FUNCTION_29_7();
  v269 = v27;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v28, v29);
  OUTLINED_FUNCTION_89_4();
  v275 = v30;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v31, v32);
  OUTLINED_FUNCTION_89_4();
  v274 = v33;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v34, v35);
  OUTLINED_FUNCTION_89_4();
  v254 = v36;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v37, v38);
  OUTLINED_FUNCTION_89_4();
  v261 = v39;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v40, v41);
  OUTLINED_FUNCTION_89_4();
  v258 = v42;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v43, v44);
  OUTLINED_FUNCTION_752();
  v266 = v45;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD69C8);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v46, v47);
  OUTLINED_FUNCTION_52_6();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6FE0);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v48, v49);
  OUTLINED_FUNCTION_98_3();
  MEMORY[0x1E0C80A78](v50, v51);
  OUTLINED_FUNCTION_89_4();
  v255 = v52;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v53, v54);
  OUTLINED_FUNCTION_89_4();
  v257 = v55;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v56, v57);
  OUTLINED_FUNCTION_89_4();
  v256 = v58;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v59, v60);
  OUTLINED_FUNCTION_89_4();
  v260 = v61;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v62, v63);
  v65 = (char *)&v235 - v64;
  OUTLINED_FUNCTION_152_0(v335, v5);
  if (!*(_QWORD *)(v340 + 16) || !*(_QWORD *)(v341 + 16))
    goto LABEL_11;
  v253 = v341;
  sub_1B251C018(v341, (uint64_t)v65);
  OUTLINED_FUNCTION_118_0((uint64_t)v65, 1, v24);
  if (v66)
  {
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
    goto LABEL_138;
  }
  v67 = *(_QWORD *)&v65[*(int *)(v24 + 24)];
  OUTLINED_FUNCTION_47_0();
  sub_1B25317B8((uint64_t)v65, type metadata accessor for TranscriptionSegment);
  v68 = *(_QWORD *)(v67 + 16);
  OUTLINED_FUNCTION_173();
  if (!v68)
    goto LABEL_11;
  v69 = v342;
  if (!*(_QWORD *)(v342 + 16))
    goto LABEL_11;
  sub_1B251C090(v342, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB1658], v0);
  OUTLINED_FUNCTION_118_0(v0, 1, v13);
  if (v66)
    goto LABEL_136;
  v70 = sub_1B251CD44();
  v71 = OUTLINED_FUNCTION_215_2();
  v267 = (CMTimeEpoch)v72;
  v72(v71);
  if (v70)
  {
LABEL_11:
    sub_1B251DA58(&v290);
    sub_1B24EBCE4((uint64_t)&v290, v9, &qword_1EEFD7708);
    OUTLINED_FUNCTION_152_0(v7, v335);
    return sub_1B25318AC((uint64_t)v335);
  }
  v246 = v344;
  v73 = v253;
  v245 = v346;
  v243 = v348;
  v244 = v347;
  v241 = v350;
  v242 = v349;
  v240 = v351;
  v247 = v345;
  v74 = sub_1B25CD0A8();
  v264 = v75;
  v265 = v74;
  v263 = (char *)v76;
  v79 = sub_1B2521A40(1, v73);
  v251 = v80;
  if (v78 >> 1 == v77)
  {
    swift_bridgeObjectRetain();
    goto LABEL_10;
  }
  v249 = v78 >> 1;
  v250 = v77;
  swift_bridgeObjectRetain();
  v83 = v249;
  v82 = v250;
  v84 = v249;
  v237 = v9;
  v238 = v7;
  v268 = v24;
  v236 = v1;
  v248 = v69;
  v239 = v79;
LABEL_13:
  v85 = __OFSUB__(v84, 1);
  v86 = v84 - 1;
  if (v85)
  {
LABEL_125:
    __break(1u);
    goto LABEL_126;
  }
  if (v86 >= v82 && v86 < v83)
  {
    v272 = *(_QWORD *)(v271 + 72);
    v252 = v86;
    v88 = v266;
    sub_1B24EAB98(v251 + v272 * v86, v266, type metadata accessor for TranscriptionSegment);
    v1 = *(_QWORD *)(v88 + *(int *)(v24 + 24));
    v89 = *(_QWORD *)(v1 + 16);
    if (!v89)
      goto LABEL_25;
    OUTLINED_FUNCTION_140_1();
    OUTLINED_FUNCTION_53_3(v326, (const void *)(v1 + 32));
    v90 = v89 - 1;
    for (i = 192; ; i += 160)
    {
      v92 = v326[5];
      v24 = v326[10];
      v69 = v326[7];
      v93 = v326[8];
      v94 = v326[6];
      v95 = v326[9];
      sub_1B253181C((uint64_t)v326);
      v290.value = v92;
      *(_QWORD *)&v290.timescale = v94;
      v290.epoch = v69;
      v331.value = v93;
      *(_QWORD *)&v331.timescale = v95;
      v331.epoch = v24;
      CMTimeSubtract(&v327, &v290, &v331);
      LOBYTE(v92) = sub_1B25CD06C();
      sub_1B2531864((uint64_t)v326);
      if ((v92 & 1) != 0)
        break;
      if (!v90)
      {
        OUTLINED_FUNCTION_601();
        v9 = v237;
        v7 = v238;
        v24 = v268;
        v79 = v239;
LABEL_25:
        sub_1B25317B8(v266, type metadata accessor for TranscriptionSegment);
        v83 = v249;
        v82 = v250;
        v84 = v252;
        if (v252 == v250)
        {
LABEL_10:
          swift_unknownObjectRelease();
          goto LABEL_11;
        }
        goto LABEL_13;
      }
      OUTLINED_FUNCTION_53_3(v326, (const void *)(v1 + i));
      --v90;
    }
    OUTLINED_FUNCTION_601();
    OUTLINED_FUNCTION_280_2(v266);
    swift_unknownObjectRelease();
    sub_1B25062EC();
    v251 = v96;
    v97 = v252;
    v69 = v253;
    sub_1B2521AD0(v252, v253);
    sub_1B251C97C();
    v263 = (char *)v98;
    v85 = __OFADD__(v97, 1);
    v99 = v97 + 1;
    v79 = v248;
    if (v85)
      goto LABEL_127;
    v266 = v99;
    sub_1B2521B50(v99, v69);
    sub_1B251C97C();
    v252 = v100;
    v101 = *(_QWORD *)(v79 + 16);
    if (!v101)
      goto LABEL_37;
    v331.value = MEMORY[0x1E0DEE9D8];
    OUTLINED_FUNCTION_95_1();
    OUTLINED_FUNCTION_207_1();
    OUTLINED_FUNCTION_308_0();
    v264 = v102;
    v79 += v102;
    v69 = *(_QWORD *)(v103 + 72);
    v265 = *(_QWORD *)(v103 + 16);
    v104 = v101;
    while (1)
    {
      ((void (*)(char *, uint64_t, uint64_t))v265)(v21, v79, v13);
      sub_1B2531930(&qword_1EEFD99C8, (void (*)(uint64_t))MEMORY[0x1E0CB1658]);
      v1 = v105;
      sub_1B25CCE8C();
      if (v266 < v327.value)
        break;
      v290.value = v327.value;
      *(_QWORD *)&v290.timescale = v266;
      sub_1B25CCF4C();
      OUTLINED_FUNCTION_300_0();
      value = v331.value;
      if ((OUTLINED_FUNCTION_545() & 1) == 0)
      {
        OUTLINED_FUNCTION_181_0();
        value = v331.value;
      }
      v24 = *(_QWORD *)(value + 16);
      v107 = *(_QWORD *)(value + 24);
      if (v24 >= v107 >> 1)
      {
        sub_1B2505544(v107 > 1, v24 + 1, 1);
        value = v331.value;
      }
      *(_QWORD *)(value + 16) = v24 + 1;
      OUTLINED_FUNCTION_286_0(value + v264 + v24 * v69, (uint64_t)v276, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v277 + 32));
      v331.value = value;
      v79 += v69;
      if (!--v104)
      {
        v79 = v248;
        OUTLINED_FUNCTION_267();
LABEL_37:
        OUTLINED_FUNCTION_358();
        v264 = v108;
        OUTLINED_FUNCTION_173();
        v24 = MEMORY[0x1E0DEE9D8];
        if (v101)
        {
          v331.value = MEMORY[0x1E0DEE9D8];
          OUTLINED_FUNCTION_95_1();
          OUTLINED_FUNCTION_207_1();
          v1 = (*(unsigned __int8 *)(v277 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v277 + 80);
          v79 += v1;
          v24 = *(_QWORD *)(v277 + 72);
          v276 = *(char **)(v277 + 16);
          do
          {
            ((void (*)(char *, uint64_t, uint64_t))v276)(v21, v79, v13);
            sub_1B2531930(&qword_1EEFD99C8, (void (*)(uint64_t))MEMORY[0x1E0CB1658]);
            v69 = v109;
            sub_1B25CCED4();
            if (v327.value < v266)
              goto LABEL_124;
            v290.value = v266;
            *(_QWORD *)&v290.timescale = v327.value;
            sub_1B25CCF4C();
            OUTLINED_FUNCTION_300_0();
            v110 = v331.value;
            if ((OUTLINED_FUNCTION_545() & 1) == 0)
            {
              OUTLINED_FUNCTION_181_0();
              v110 = v331.value;
            }
            v112 = *(_QWORD *)(v110 + 16);
            v111 = *(_QWORD *)(v110 + 24);
            if (v112 >= v111 >> 1)
            {
              v113 = OUTLINED_FUNCTION_244_2(v111);
              sub_1B2505544(v113, v114, v115);
              v110 = v331.value;
            }
            *(_QWORD *)(v110 + 16) = v112 + 1;
            OUTLINED_FUNCTION_286_0(v110 + v1 + v112 * v24, v273, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v277 + 32));
            v331.value = v110;
            v79 += v24;
            --v101;
          }
          while (v101);
          swift_bridgeObjectRelease();
          v24 = MEMORY[0x1E0DEE9D8];
        }
        OUTLINED_FUNCTION_358();
        v253 = v116;
        OUTLINED_FUNCTION_173();
        v117 = v260;
        v21 = v263;
        sub_1B251C810((uint64_t)v263, v260);
        v1 = v268;
        v118 = OUTLINED_FUNCTION_118_0(v117, 1, v268);
        if (v66)
        {
          OUTLINED_FUNCTION_296_1(v118, &qword_1EEFD6FE0);
          v260 = 0;
          goto LABEL_54;
        }
        v119 = v258;
        sub_1B24EABC4(v117, v258, type metadata accessor for TranscriptionSegment);
        v120 = *(_QWORD *)(v119 + *(int *)(v1 + 24));
        v121 = *(_QWORD *)(v119 + *(int *)(v1 + 28));
        OUTLINED_FUNCTION_47_0();
        OUTLINED_FUNCTION_61_6();
        v122 = sub_1B251CB78(v120, qword_1E647B8D8);
        v79 = sub_1B251AD5C(v121, qword_1E647B8D8);
        OUTLINED_FUNCTION_101_1();
        v69 = v259;
        static TranscriptionToken.allTokensString(from:ipa:attributes:)();
        OUTLINED_FUNCTION_61_6();
        sub_1B251AE70();
        v21 = v123;
        v260 = 0;
        v124 = v261;
        (*(void (**)(uint64_t, CMTimeEpoch, uint64_t))(v262 + 16))(v261, v69, v270);
        *(_QWORD *)(v124 + *(int *)(v1 + 20)) = v21;
        v125 = (uint64_t)v263;
        *(_QWORD *)(v124 + *(int *)(v1 + 24)) = v122;
        *(_QWORD *)(v124 + *(int *)(v1 + 28)) = v79;
        if (!*(_QWORD *)(v125 + 16))
          goto LABEL_131;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          goto LABEL_132;
        goto LABEL_51;
      }
    }
    __break(1u);
LABEL_124:
    __break(1u);
    goto LABEL_125;
  }
LABEL_126:
  __break(1u);
LABEL_127:
  __break(1u);
LABEL_128:
  __break(1u);
LABEL_129:
  __break(1u);
  do
  {
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    sub_1B25307C8();
    v125 = v233;
LABEL_51:
    v127 = *(_QWORD *)(v125 + 16);
    if (!v127)
    {
      __break(1u);
LABEL_134:
      OUTLINED_FUNCTION_64_6(v126);
      sub_1B252C128();
      v128 = v234;
      goto LABEL_53;
    }
    v21 = (char *)((*(unsigned __int8 *)(v271 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v271 + 80));
    v79 = (v127 - 1) * v272;
    sub_1B25317B8((uint64_t)&v21[v125 + v79], type metadata accessor for TranscriptionSegment);
    *(_QWORD *)(v125 + 16) = v127 - 1;
    v69 = v254;
    sub_1B24EAB98(v261, v254, type metadata accessor for TranscriptionSegment);
    v128 = v125;
    v126 = *(_QWORD *)(v125 + 24);
    if (v127 > v126 >> 1)
      goto LABEL_134;
LABEL_53:
    *(_QWORD *)(v128 + 16) = v127;
    v129 = &v21[v128];
    v21 = (char *)v128;
    sub_1B24EABC4(v69, (uint64_t)&v129[v79], type metadata accessor for TranscriptionSegment);
    OUTLINED_FUNCTION_280_2(v261);
    (*(void (**)(CMTimeEpoch, uint64_t))(v262 + 8))(v259, v270);
    OUTLINED_FUNCTION_280_2(v258);
LABEL_54:
    v130 = *(_QWORD *)(v252 + 16);
    v263 = v21;
    if (v130)
    {
      v331.value = v24;
      v131 = v252;
      v273 = v130;
      sub_1B25056E4();
      v132 = 0;
      OUTLINED_FUNCTION_308_0();
      v267 = v131 + v133;
      do
      {
        v134 = v274;
        sub_1B24EAB98(v267 + v132 * v272, v274, type metadata accessor for TranscriptionSegment);
        v135 = *(_QWORD *)(v134 + *(int *)(v1 + 24));
        v136 = *(_QWORD *)(v135 + 16);
        if (v136)
        {
          OUTLINED_FUNCTION_61_6();
          v137 = v136 - 1;
          v138 = v24;
          for (j = 32; ; j += 160)
          {
            OUTLINED_FUNCTION_53_3(&v290, (const void *)(v135 + j));
            if (BYTE4(v309) != 1 && (v309 & 0x10000000000) == 0)
            {
              sub_1B253181C((uint64_t)&v290);
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v327.value = v138;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                OUTLINED_FUNCTION_187_2(0, *(_QWORD *)(v138 + 16) + 1);
                v138 = v327.value;
              }
              v142 = *(_QWORD *)(v138 + 16);
              v141 = *(_QWORD *)(v138 + 24);
              if (v142 >= v141 >> 1)
              {
                OUTLINED_FUNCTION_187_2(v141 > 1, v142 + 1);
                v138 = v327.value;
              }
              *(_QWORD *)(v138 + 16) = v142 + 1;
              OUTLINED_FUNCTION_53_3((void *)(v138 + 160 * v142 + 32), &v290);
            }
            if (!v137)
              break;
            --v137;
          }
          OUTLINED_FUNCTION_101_1();
          v1 = v268;
          v24 = MEMORY[0x1E0DEE9D8];
        }
        else
        {
          v138 = v24;
        }
        sub_1B25317B8(v274, type metadata accessor for TranscriptionSegment);
        v143 = v331.value;
        if ((OUTLINED_FUNCTION_545() & 1) == 0)
        {
          OUTLINED_FUNCTION_303_1();
          v143 = v331.value;
        }
        v144 = *(_QWORD *)(v143 + 16);
        if (v144 >= *(_QWORD *)(v143 + 24) >> 1)
        {
          OUTLINED_FUNCTION_303_1();
          v143 = v331.value;
        }
        ++v132;
        *(_QWORD *)(v143 + 16) = v144 + 1;
        *(_QWORD *)(v143 + 8 * v144 + 32) = v138;
      }
      while (v132 != v273);
      v265 = v143;
      v331.value = v24;
      sub_1B25056B0();
      v145 = 0;
      do
      {
        v274 = v145;
        v146 = v275;
        sub_1B24EAB98(v267 + v145 * v272, v275, type metadata accessor for TranscriptionSegment);
        v147 = *(_QWORD *)(v146 + *(int *)(v1 + 28));
        v148 = *(char **)(v147 + 16);
        if (v148)
        {
          v327.value = v24;
          OUTLINED_FUNCTION_133();
          sub_1B25056E4();
          v149 = 0;
          v150 = v327.value;
          v266 = v147;
          v276 = v148;
          v277 = v147 + 32;
          do
          {
            v151 = *(_QWORD *)(v277 + 8 * (_QWORD)v149);
            v152 = *(_QWORD *)(v151 + 16);
            if (v152)
            {
              OUTLINED_FUNCTION_444();
              v153 = v152 - 1;
              v154 = 32;
              v155 = MEMORY[0x1E0DEE9D8];
              while (1)
              {
                OUTLINED_FUNCTION_53_3(&v290, (const void *)(v151 + v154));
                if (BYTE4(v309) != 1 && (v309 & 0x10000000000) == 0)
                {
                  sub_1B253181C((uint64_t)&v290);
                  v156 = swift_isUniquelyReferenced_nonNull_native();
                  v289 = v155;
                  if ((v156 & 1) == 0)
                  {
                    OUTLINED_FUNCTION_187_2(0, *(_QWORD *)(v155 + 16) + 1);
                    v155 = v289;
                  }
                  v158 = *(_QWORD *)(v155 + 16);
                  v157 = *(_QWORD *)(v155 + 24);
                  if (v158 >= v157 >> 1)
                  {
                    v159 = OUTLINED_FUNCTION_64_6(v157);
                    OUTLINED_FUNCTION_187_2(v159, v158 + 1);
                    v155 = v289;
                  }
                  *(_QWORD *)(v155 + 16) = v158 + 1;
                  OUTLINED_FUNCTION_53_3((void *)(v155 + 160 * v158 + 32), &v290);
                }
                if (!v153)
                  break;
                --v153;
                v154 += 160;
              }
              OUTLINED_FUNCTION_36_2();
              v148 = v276;
            }
            else
            {
              v155 = MEMORY[0x1E0DEE9D8];
            }
            v327.value = v150;
            v160 = *(_QWORD *)(v150 + 16);
            if (v160 >= *(_QWORD *)(v150 + 24) >> 1)
            {
              OUTLINED_FUNCTION_303_1();
              v150 = v327.value;
            }
            ++v149;
            *(_QWORD *)(v150 + 16) = v160 + 1;
            *(_QWORD *)(v150 + 8 * v160 + 32) = v155;
          }
          while (v149 != v148);
          swift_bridgeObjectRelease();
          v1 = v268;
          v24 = MEMORY[0x1E0DEE9D8];
        }
        else
        {
          v150 = v24;
        }
        sub_1B25317B8(v275, type metadata accessor for TranscriptionSegment);
        v161 = v331.value;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B25056B0();
          v161 = v331.value;
        }
        v162 = v274;
        v164 = *(_QWORD *)(v161 + 16);
        v163 = *(_QWORD *)(v161 + 24);
        if (v164 >= v163 >> 1)
        {
          OUTLINED_FUNCTION_244_2(v163);
          sub_1B25056B0();
          v162 = v274;
          v161 = v331.value;
        }
        v145 = v162 + 1;
        *(_QWORD *)(v161 + 16) = v164 + 1;
        *(_QWORD *)(v161 + 8 * v164 + 32) = v150;
      }
      while (v145 != v273);
      swift_bridgeObjectRelease();
      v21 = v263;
      v79 = v265;
    }
    else
    {
      swift_bridgeObjectRelease();
      v161 = MEMORY[0x1E0DEE9D8];
      v79 = MEMORY[0x1E0DEE9D8];
    }
    v165 = v251;
    OUTLINED_FUNCTION_47_0();
    v166 = v260;
    sub_1B251AE70();
    v69 = v167;
    OUTLINED_FUNCTION_47_0();
    v168 = sub_1B251AF34(v161, v165);
    v24 = v168;
    v169 = *(_QWORD *)(v69 + 16);
    if (!v169)
    {
      OUTLINED_FUNCTION_365();
      OUTLINED_FUNCTION_267();
      v173 = MEMORY[0x1E0DEE9D8];
      goto LABEL_114;
    }
    v265 = v79;
    if (v169 > *(_QWORD *)(v168 + 16))
      goto LABEL_128;
    if (v169 > *(_QWORD *)(v265 + 16))
      goto LABEL_129;
    v274 = v166;
  }
  while (v169 > *(_QWORD *)(v161 + 16));
  v170 = (*(unsigned __int8 *)(v262 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v262 + 80);
  v273 = v69;
  v171 = v69 + v170;
  v172 = *(_QWORD *)(v262 + 72);
  v276 = *(char **)(v262 + 16);
  v277 = v172;
  v275 = -(uint64_t)v169;
  v173 = MEMORY[0x1E0DEE9D8];
  v174 = 4;
  v175 = v269;
  do
  {
    v176 = v24;
    v177 = *(_QWORD *)(v24 + 8 * v174);
    v178 = *(_QWORD *)(v265 + 8 * v174);
    v179 = *(_QWORD *)(v161 + 8 * v174);
    ((void (*)(uint64_t, unint64_t, uint64_t))v276)(v175, v171, v270);
    v180 = v268;
    *(_QWORD *)(v175 + *(int *)(v268 + 20)) = v177;
    *(_QWORD *)(v175 + *(int *)(v180 + 24)) = v178;
    *(_QWORD *)(v175 + *(int *)(v180 + 28)) = v179;
    OUTLINED_FUNCTION_178();
    OUTLINED_FUNCTION_95_1();
    OUTLINED_FUNCTION_133();
    if ((OUTLINED_FUNCTION_545() & 1) == 0)
    {
      OUTLINED_FUNCTION_305_1();
      sub_1B252C128();
      v173 = v184;
    }
    v182 = *(_QWORD *)(v173 + 16);
    v181 = *(_QWORD *)(v173 + 24);
    v175 = v269;
    if (v182 >= v181 >> 1)
    {
      OUTLINED_FUNCTION_64_6(v181);
      OUTLINED_FUNCTION_305_1();
      sub_1B252C128();
      v173 = v185;
    }
    *(_QWORD *)(v173 + 16) = v182 + 1;
    OUTLINED_FUNCTION_188_2();
    sub_1B24EABC4(v175, v183 + v182 * v272, type metadata accessor for TranscriptionSegment);
    ++v174;
    v171 += v277;
    v24 = v176;
  }
  while (v275 + v174 != 4);
  OUTLINED_FUNCTION_365();
  swift_bridgeObjectRelease();
  v1 = v268;
  v21 = v263;
LABEL_114:
  OUTLINED_FUNCTION_345();
  OUTLINED_FUNCTION_107();
  OUTLINED_FUNCTION_168();
  OUTLINED_FUNCTION_61_6();
  sub_1B251B948();
  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_95_1();
  sub_1B251BBBC();
  v187 = v186;
  OUTLINED_FUNCTION_267();
  OUTLINED_FUNCTION_168();
  OUTLINED_FUNCTION_47_0();
  sub_1B251B948();
  OUTLINED_FUNCTION_107();
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_95_1();
  sub_1B251BBBC();
  v189 = v188;
  OUTLINED_FUNCTION_267();
  v190 = v256;
  sub_1B251C018((uint64_t)v21, v256);
  OUTLINED_FUNCTION_118_0(v190, 1, v1);
  if (v66)
    goto LABEL_137;
  v272 = v189;
  v191 = *(_QWORD *)(v190 + *(int *)(v1 + 24));
  v192 = OUTLINED_FUNCTION_224_0();
  OUTLINED_FUNCTION_237_1(v192, type metadata accessor for TranscriptionSegment);
  v193 = v257;
  if (!*(_QWORD *)(v191 + 16))
  {
LABEL_138:
    OUTLINED_FUNCTION_365();
    __break(1u);
    goto LABEL_139;
  }
  OUTLINED_FUNCTION_365();
  sub_1B251C810((uint64_t)v21, v193);
  OUTLINED_FUNCTION_118_0(v193, 1, v1);
  if (v66)
  {
LABEL_139:
    __break(1u);
    goto LABEL_140;
  }
  v277 = v187;
  v194 = *(_QWORD *)(v193 + *(int *)(v1 + 24));
  v195 = OUTLINED_FUNCTION_224_0();
  OUTLINED_FUNCTION_237_1(v195, type metadata accessor for TranscriptionSegment);
  if (!*(_QWORD *)(v194 + 16))
  {
LABEL_140:
    OUTLINED_FUNCTION_365();
    __break(1u);
    goto LABEL_141;
  }
  v196 = v1;
  OUTLINED_FUNCTION_365();
  sub_1B25CCF88();
  v197 = v327.value;
  v198 = *(_QWORD *)&v327.timescale;
  epoch = v327.epoch;
  v200 = v328;
  v201 = v329;
  v202 = v330;
  v203 = v255;
  sub_1B251C018(v173, v255);
  OUTLINED_FUNCTION_118_0(v203, 1, v196);
  if (v66)
  {
LABEL_141:
    __break(1u);
    goto LABEL_142;
  }
  v270 = v202;
  v271 = v200;
  v204 = *(_QWORD *)(v203 + *(int *)(v196 + 24));
  v205 = OUTLINED_FUNCTION_224_0();
  OUTLINED_FUNCTION_301_0(v205, type metadata accessor for TranscriptionSegment);
  v206 = v236;
  if (!*(_QWORD *)(v204 + 16))
  {
LABEL_142:
    OUTLINED_FUNCTION_365();
    __break(1u);
    goto LABEL_143;
  }
  OUTLINED_FUNCTION_365();
  sub_1B251C810(v173, v206);
  OUTLINED_FUNCTION_118_0(v206, 1, v196);
  if (v66)
  {
LABEL_143:
    __break(1u);
    goto LABEL_144;
  }
  v267 = epoch;
  v269 = v197;
  v207 = *(_QWORD *)(v206 + *(int *)(v196 + 24));
  v208 = OUTLINED_FUNCTION_224_0();
  OUTLINED_FUNCTION_301_0(v208, type metadata accessor for TranscriptionSegment);
  if (*(_QWORD *)(v207 + 16))
  {
    OUTLINED_FUNCTION_365();
    sub_1B25CCF88();
    v262 = v331.value;
    v265 = v332;
    v266 = v331.epoch;
    v268 = v334;
    v209 = v336;
    v260 = v336;
    v210 = v337;
    LODWORD(v259) = v337;
    v211 = v338;
    LODWORD(v258) = v338;
    v212 = v339;
    v257 = v339;
    OUTLINED_FUNCTION_358();
    v255 = v213;
    OUTLINED_FUNCTION_69();
    v214 = v343;
    LODWORD(v256) = v343;
    v273 = v355;
    v276 = v356;
    v277 = v354;
    v275 = v357;
    LODWORD(v274) = v358;
    v281 = 1;
    v278 = 1;
    swift_bridgeObjectRetain();
    v215 = (uint64_t)v263;
    OUTLINED_FUNCTION_61_6();
    sub_1B2530C3C();
    v261 = v216;
    v217 = *(_QWORD *)&v331.timescale;
    v218 = v333;
    OUTLINED_FUNCTION_101_1();
    OUTLINED_FUNCTION_44_1();
    v272 = v352;
    v286 = v353;
    v284 = 1;
    v290.value = v269;
    *(_QWORD *)&v290.timescale = v198;
    v290.epoch = v267;
    v291 = v271;
    v292 = v201;
    v293 = v270;
    v294 = v209;
    v295 = v210;
    v296 = v211;
    v297 = v212;
    v298 = v255;
    v299 = MEMORY[0x1E0DEE9D8];
    v300 = v215;
    v301 = v264;
    v302 = v214;
    v303 = v282;
    v304 = v283;
    v219 = v246;
    v305 = v246;
    v220 = v247;
    v306 = v247;
    LODWORD(v209) = v245;
    v307 = v245;
    v222 = v243;
    v221 = v244;
    v308 = v244;
    v309 = v243;
    LODWORD(v212) = v241;
    v223 = v242;
    v310 = v242;
    v311 = v241;
    v224 = v240;
    v312 = v240;
    v313 = 0u;
    v314 = 0u;
    v315 = v281;
    *(_DWORD *)&v316[3] = *(_DWORD *)&v280[3];
    *(_DWORD *)v316 = *(_DWORD *)v280;
    v317 = v277;
    v318 = v273;
    v319 = (void (*)(_QWORD, _QWORD, _QWORD))v276;
    v320 = v275;
    v321 = v274;
    *(_DWORD *)&v322[3] = *(_DWORD *)&v279[3];
    *(_DWORD *)v322 = *(_DWORD *)v279;
    v323 = 0;
    v324 = 0;
    v325 = v278;
    nullsub_1(&v290, v225);
    sub_1B24EBCE4((uint64_t)&v290, v237, &qword_1EEFD7708);
    v226 = v238;
    *v238 = v262;
    v226[1] = v217;
    v227 = v265;
    v226[2] = v266;
    v226[3] = v227;
    v226[4] = v218;
    v228 = v260;
    v226[5] = v268;
    v226[6] = v228;
    LODWORD(v228) = v258;
    *((_DWORD *)v226 + 14) = v259;
    *((_DWORD *)v226 + 15) = v228;
    v229 = v261;
    v226[8] = v257;
    v226[9] = v229;
    v226[10] = MEMORY[0x1E0DEE9D8];
    v226[11] = v173;
    v226[12] = v253;
    *((_BYTE *)v226 + 104) = v256;
    *(_WORD *)((char *)v226 + 105) = v287;
    *((_BYTE *)v226 + 107) = v288;
    *(CMTimeValue *)((char *)v226 + 108) = v219;
    *((_DWORD *)v226 + 29) = v220;
    *((_DWORD *)v226 + 30) = v209;
    *(CMTimeValue *)((char *)v226 + 124) = v221;
    *(CMTimeValue *)((char *)v226 + 132) = v222;
    *((_DWORD *)v226 + 35) = v223;
    *((_DWORD *)v226 + 36) = v212;
    *(CMTimeValue *)((char *)v226 + 148) = v224;
    v226[20] = 0;
    v226[21] = 0;
    v231 = v272;
    v230 = v273;
    v226[22] = 0;
    v226[23] = v231;
    *((_BYTE *)v226 + 192) = v286;
    *(_DWORD *)((char *)v226 + 193) = v289;
    *((_DWORD *)v226 + 49) = *(_DWORD *)((char *)&v289 + 3);
    v226[25] = v277;
    v226[26] = v230;
    v232 = v275;
    v226[27] = (CMTimeValue)v276;
    v226[28] = v232;
    *((_BYTE *)v226 + 232) = v274;
    *((_DWORD *)v226 + 59) = *(_DWORD *)&v285[3];
    *(_DWORD *)((char *)v226 + 233) = *(_DWORD *)v285;
    v226[30] = 0;
    v226[31] = 0;
    *((_BYTE *)v226 + 256) = v284;
    return swift_bridgeObjectRetain();
  }
LABEL_144:
  result = OUTLINED_FUNCTION_365();
  __break(1u);
  return result;
}

uint64_t sub_1B2521A40(uint64_t result, uint64_t a2)
{
  unint64_t v3;
  char v4;
  unint64_t v5;

  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v3 = *(_QWORD *)(a2 + 16);
  result = sub_1B24E9E10(0, (v3 - result) & ~((uint64_t)(v3 - result) >> 63), v3, a2);
  if ((v4 & 1) != 0)
    v5 = v3;
  else
    v5 = result;
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_9;
  if (v3 >= v5)
  {
    type metadata accessor for TranscriptionSegment(0);
    return a2;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1B2521AD0(uint64_t result, uint64_t a2)
{
  unint64_t v2;

  v2 = result + 1;
  if (__OFADD__(result, 1))
  {
    __break(1u);
    goto LABEL_6;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (*(_QWORD *)(a2 + 16) >= v2)
  {
    type metadata accessor for TranscriptionSegment(0);
    return swift_bridgeObjectRetain();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1B2521B50(uint64_t result, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16) < result)
  {
    __break(1u);
  }
  else if ((result & 0x8000000000000000) == 0)
  {
    type metadata accessor for TranscriptionSegment(0);
    return swift_bridgeObjectRetain();
  }
  __break(1u);
  return result;
}

void static TranscriptionToken.allTokensString(from:ipa:attributes:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t i;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[2];
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[160];
  _BYTE v39[160];
  _BYTE v40[160];
  _BYTE v41[160];
  _BYTE v42[160];
  uint64_t v43;
  _BYTE v44[160];
  _BYTE v45[160];
  _BYTE v46[168];

  OUTLINED_FUNCTION_59_0();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = OUTLINED_FUNCTION_99_4();
  MEMORY[0x1E0C80A78](v10, v11);
  OUTLINED_FUNCTION_98_3();
  MEMORY[0x1E0C80A78](v12, v13);
  OUTLINED_FUNCTION_416_0();
  v16 = MEMORY[0x1E0C80A78](v14, v15);
  MEMORY[0x1E0C80A78](v16, v17);
  v21 = (char *)v32 - v20;
  v36 = v7[2];
  if (v36)
  {
    v34 = v19;
    v35 = v9;
    v37 = v3;
    v22 = v18;
    OUTLINED_FUNCTION_53_3(v45, v7 + 4);
    OUTLINED_FUNCTION_53_3(v42, v7 + 4);
    sub_1B2531964(v46);
    sub_1B24EBCE4((uint64_t)v46, (uint64_t)v44, &qword_1EEFD99D0);
    sub_1B253181C((uint64_t)v45);
    v23 = v5;
    v24 = v5 & 1;
    v25 = v22;
    static TranscriptionToken.tokenString(from:ipa:after:attributes:)((uint64_t)v42, v24, (uint64_t)v44);
    sub_1B2531864((uint64_t)v45);
    v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 16);
    v33 = v21;
    OUTLINED_FUNCTION_310_0(v0, (uint64_t)v21, v26);
    OUTLINED_FUNCTION_224_0();
    v27 = v36;
    if (v36 != 1)
    {
      OUTLINED_FUNCTION_224_0();
      v32[1] = v7;
      v28 = (char *)(v7 + 24);
      for (i = v27 - 2; ; --i)
      {
        OUTLINED_FUNCTION_53_3(v41, v28 - 160);
        OUTLINED_FUNCTION_53_3(v44, v28);
        OUTLINED_FUNCTION_53_3(v42, v28 - 160);
        OUTLINED_FUNCTION_53_3(&v43, v28);
        sub_1B253181C((uint64_t)v41);
        sub_1B253181C((uint64_t)v44);
        sub_1B253181C((uint64_t)v41);
        sub_1B253181C((uint64_t)v44);
        sub_1B253196C((uint64_t)v42);
        OUTLINED_FUNCTION_53_3(v39, v44);
        sub_1B25319E0((uint64_t)v42);
        sub_1B2531864((uint64_t)v44);
        OUTLINED_FUNCTION_53_3(v40, v41);
        nullsub_1(v40, v30);
        sub_1B24EBCE4((uint64_t)v40, (uint64_t)v38, &qword_1EEFD99D0);
        static TranscriptionToken.tokenString(from:ipa:after:attributes:)((uint64_t)v39, v23 & 1, (uint64_t)v38);
        sub_1B2531864((uint64_t)v41);
        sub_1B2531930(&qword_1EEFD6960, (void (*)(uint64_t))MEMORY[0x1E0CAF240]);
        sub_1B25CC3A0();
        v25 = v22;
        OUTLINED_FUNCTION_199_1(v1, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
        sub_1B253196C((uint64_t)v42);
        if (!i)
          break;
        v28 += 160;
      }
      OUTLINED_FUNCTION_365();
    }
    v31 = v34;
    OUTLINED_FUNCTION_311_1(v34, v0);
    OUTLINED_FUNCTION_365();
    OUTLINED_FUNCTION_199_1((uint64_t)v33, *(uint64_t (**)(uint64_t, uint64_t))(v25 + 8));
    OUTLINED_FUNCTION_311_1(v35, v31);
    OUTLINED_FUNCTION_7_1();
  }
  else
  {
    OUTLINED_FUNCTION_118_2();
  }
}

void TranscriptionSegment.init(with:alternatives:tokens:alternativeTokens:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  int *v11;

  v10 = OUTLINED_FUNCTION_99_4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a5, a1, v10);
  v11 = (int *)type metadata accessor for TranscriptionSegment(0);
  *(_QWORD *)(a5 + v11[5]) = a2;
  *(_QWORD *)(a5 + v11[6]) = a3;
  *(_QWORD *)(a5 + v11[7]) = a4;
  OUTLINED_FUNCTION_233();
}

uint64_t sub_1B2521EF4(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(uint64_t);
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  void (*v26)(uint64_t *, _QWORD);
  char *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(void);
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40[4];
  uint64_t v41;

  v36 = a2;
  v37 = a3;
  v39 = a1;
  v3 = sub_1B25CC3B8();
  v34 = *(_QWORD *)(v3 - 8);
  v35 = v3;
  MEMORY[0x1E0C80A78](v3, v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1B25CC760();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7520);
  MEMORY[0x1E0C80A78](v12, v13);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7518);
  MEMORY[0x1E0C80A78](v16, v17);
  v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = MEMORY[0x1E0DEE9D8];
  sub_1B2505640(0, 0, 0);
  sub_1B24EBCB8(v39, (uint64_t)v15, &qword_1EEFD7520);
  v39 = v8;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v15, v7);
  v20 = (void (*)(uint64_t))MEMORY[0x1E0CB1658];
  sub_1B2531930(&qword_1EEFD9AB0, (void (*)(uint64_t))MEMORY[0x1E0CB1658]);
  v38 = v11;
  sub_1B25CCB38();
  v21 = *(int *)(v16 + 36);
  *(_QWORD *)&v19[v21] = 0;
  v22 = &v19[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD9AB8) + 36)];
  sub_1B2531930(&qword_1EEFD99C8, v20);
  v23 = *(_QWORD *)v22;
  sub_1B25CCED4();
  if (v23 == v40[0])
  {
LABEL_2:
    sub_1B2534D88((uint64_t)v19, &qword_1EEFD7518);
    return v41;
  }
  else
  {
    v33 = v6;
    v25 = v39;
    while (1)
    {
      v26 = (void (*)(uint64_t *, _QWORD))sub_1B25CCF58();
      v26(v40, 0);
      v27 = v38;
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v38, v19, v7);
      sub_1B25CCEE0();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v7);
      result = *(_QWORD *)&v19[v21];
      if (__OFADD__(result, 1))
        break;
      *(_QWORD *)&v19[v21] = result + 1;
      v36();
      v28 = v41;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B2505640(0, *(_QWORD *)(v28 + 16) + 1, 1);
        v28 = v41;
      }
      v30 = *(_QWORD *)(v28 + 16);
      v29 = *(_QWORD *)(v28 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_1B2505640(v29 > 1, v30 + 1, 1);
        v28 = v41;
      }
      *(_QWORD *)(v28 + 16) = v30 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v34 + 32))(v28+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(_QWORD *)(v34 + 72) * v30, v33, v35);
      v41 = v28;
      v31 = *(_QWORD *)v22;
      sub_1B25CCED4();
      if (v31 == v40[0])
        goto LABEL_2;
    }
    __break(1u);
  }
  return result;
}

unint64_t sub_1B2522264@<X0>(unint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (*(_QWORD *)(a3 + 16) <= result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v6 = *(_QWORD *)(a3 + 8 * result + 32);
  if (*(_QWORD *)(v6 + 16) > a2)
  {
    OUTLINED_FUNCTION_99_4();
    OUTLINED_FUNCTION_182_2();
    return (*(uint64_t (**)(uint64_t, unint64_t))(v8 + 16))(a4, v6 + v7 + *(_QWORD *)(v8 + 72) * a2);
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t static Transcriber.MultisegmentResult.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  __int128 *v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  double v6;
  __int128 *v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  double v14;
  char v15;
  uint64_t result;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  uint64_t v46;
  double v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[4];
  char v53;
  _QWORD v54[4];
  char v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;

  OUTLINED_FUNCTION_273_1();
  v68 = v0;
  v69 = v1;
  v3 = v2[1];
  v62 = *v2;
  v63 = v3;
  v64 = v2[2];
  v50 = *((_QWORD *)v2 + 11);
  v51 = *((_QWORD *)v2 + 10);
  v49 = *((unsigned __int8 *)v2 + 104);
  v4 = *(__int128 *)((char *)v2 + 124);
  v56 = *(__int128 *)((char *)v2 + 108);
  v57 = v4;
  v58 = *(__int128 *)((char *)v2 + 140);
  v5 = *((_QWORD *)v2 + 31);
  v2 = (__int128 *)((char *)v2 + 248);
  v25 = v5;
  v42 = *((_QWORD *)v2 - 11);
  v46 = *((_QWORD *)v2 - 10);
  v47 = *((double *)v2 - 9);
  v6 = *((double *)v2 - 8);
  v41 = *((_BYTE *)v2 - 56);
  v39 = *((_QWORD *)v2 - 5);
  v36 = *((_QWORD *)v2 - 4);
  v37 = *((_QWORD *)v2 - 6);
  v35 = *((_QWORD *)v2 - 3);
  v34 = *((_BYTE *)v2 - 16);
  v33 = *((_QWORD *)v2 - 1);
  v27 = *((_BYTE *)v2 + 8);
  v8 = v7[1];
  v65 = *v7;
  v66 = v8;
  v67 = v7[2];
  v9 = *((_QWORD *)v7 + 31);
  v7 = (__int128 *)((char *)v7 + 248);
  v24 = v9;
  v11 = *((_QWORD *)v7 - 21);
  v10 = *((_QWORD *)v7 - 20);
  v48 = *((unsigned __int8 *)v7 - 144);
  v12 = *(__int128 *)((char *)v7 - 108);
  v13 = *(__int128 *)((char *)v7 - 140);
  v60 = *(__int128 *)((char *)v7 - 124);
  v61 = v12;
  v59 = v13;
  v14 = *((double *)v7 - 8);
  v43 = *((_QWORD *)v7 - 11);
  v44 = *((_QWORD *)v7 - 10);
  v45 = *((double *)v7 - 9);
  v40 = *((unsigned __int8 *)v7 - 56);
  v38 = *((_QWORD *)v7 - 5);
  v29 = *((_QWORD *)v7 - 6);
  v30 = *((_QWORD *)v7 - 4);
  v28 = *((_BYTE *)v7 - 16);
  v31 = *((_QWORD *)v7 - 3);
  v32 = *((_QWORD *)v7 - 1);
  v26 = *((_BYTE *)v7 + 8);
  if ((sub_1B25CCF70() & 1) == 0)
    return 0;
  if ((sub_1B25CD060() & 1) == 0)
    return 0;
  sub_1B2523890();
  if ((v15 & 1) == 0 || (sub_1B2522AB4(v51, v11) & 1) == 0 || (sub_1B25230BC(v50, v10) & 1) == 0)
    return 0;
  sub_1B2523890();
  result = OUTLINED_FUNCTION_104_2();
  if ((v17 & 1) != 0 && v49 == v48)
  {
    if ((sub_1B25CCF70() & 1) == 0)
      return 0;
    if (v42)
    {
      v18 = v43;
      if (v43)
      {
        OUTLINED_FUNCTION_298_1();
        OUTLINED_FUNCTION_298_1();
        OUTLINED_FUNCTION_283_2();
        if ((sub_1B252ACDC(v42, v43) & 1) != 0)
        {
          v19 = sub_1B252AE8C(v46, v44);
          OUTLINED_FUNCTION_284_2();
          if ((v19 & 1) != 0)
          {
            OUTLINED_FUNCTION_69();
            OUTLINED_FUNCTION_101_1();
            OUTLINED_FUNCTION_299_0();
            if (v47 != v45)
              return 0;
LABEL_16:
            if ((v41 & 1) != 0)
            {
              if (!v40)
                return 0;
            }
            else
            {
              v21 = v40;
              if (v6 != v14)
                v21 = 1;
              if ((v21 & 1) != 0)
                return 0;
            }
            if (v39)
            {
              v54[0] = v37;
              v54[1] = v39;
              v54[2] = v36;
              v54[3] = v35;
              v55 = v34;
              if (v38)
              {
                v52[0] = v29;
                v52[1] = v38;
                v52[2] = v30;
                v52[3] = v31;
                v53 = v28 & 1;
                static TranscriptionLatticeMitigatorResult.== infix(_:_:)((uint64_t)v54, (uint64_t)v52);
                result = OUTLINED_FUNCTION_104_2();
                if ((v22 & 1) == 0 || v33 != v32)
                  return result;
LABEL_39:
                if ((v27 & 1) == 0)
                {
                  v23 = v26;
                  if (v25 != v24)
                    v23 = 1;
                  return (v23 & 1) == 0;
                }
                return (v26 & 1) != 0;
              }
              swift_bridgeObjectRetain();
            }
            else if (!v38)
            {
              if (v33 != v32)
                return 0;
              goto LABEL_39;
            }
            swift_bridgeObjectRelease();
            return 0;
          }
        }
        else
        {
          OUTLINED_FUNCTION_284_2();
        }
        OUTLINED_FUNCTION_69();
        OUTLINED_FUNCTION_101_1();
        v20 = v42;
LABEL_23:
        sub_1B2531A54(v20);
        return 0;
      }
      OUTLINED_FUNCTION_61_6();
      OUTLINED_FUNCTION_133();
    }
    else
    {
      v18 = v43;
      if (!v43)
        goto LABEL_16;
    }
    OUTLINED_FUNCTION_283_2();
    OUTLINED_FUNCTION_299_0();
    v20 = v18;
    goto LABEL_23;
  }
  return result;
}

uint64_t sub_1B25226E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  BOOL v10;
  unint64_t v11;
  BOOL v12;
  uint64_t result;
  _QWORD *v15;
  _QWORD *v16;
  unint64_t v17;

  OUTLINED_FUNCTION_123_2();
  v2 = *(_QWORD *)(v0 + 16);
  if (v2 == *(_QWORD *)(v1 + 16))
  {
    if (!v2 || v0 == v1)
      return 1;
    v3 = 0;
    v4 = v0 + 32;
    v5 = v1 + 32;
    while (1)
    {
      v6 = (_QWORD *)(v4 + 24 * v3);
      v7 = (_QWORD *)v6[2];
      v8 = (_QWORD *)(v5 + 24 * v3);
      v9 = (_QWORD *)v8[2];
      v10 = *v6 == *v8 && v6[1] == v8[1];
      if (!v10 && (OUTLINED_FUNCTION_303_0() & 1) == 0)
        break;
      v11 = v7[2];
      if (v11 != v9[2])
        break;
      if (v11)
        v12 = v7 == v9;
      else
        v12 = 1;
      if (!v12)
      {
        result = v7[4];
        if (result != v9[4] || v7[5] != v9[5])
        {
          result = OUTLINED_FUNCTION_303_0();
          if ((result & 1) == 0)
            return 0;
        }
        if (v11 != 1)
        {
          v15 = v9 + 7;
          v16 = v7 + 7;
          v17 = 1;
          while (v17 < v11)
          {
            result = *(v16 - 1);
            if (result != *(v15 - 1) || *v16 != *v15)
            {
              result = OUTLINED_FUNCTION_303_0();
              if ((result & 1) == 0)
                return 0;
            }
            ++v17;
            v15 += 2;
            v16 += 2;
            if (v11 == v17)
              goto LABEL_29;
          }
          __break(1u);
          return result;
        }
      }
LABEL_29:
      if (++v3 == v2)
        return 1;
    }
  }
  return 0;
}

void sub_1B2522808(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    OUTLINED_FUNCTION_47_0();
    v5 = sub_1B25CD474();
    OUTLINED_FUNCTION_173();
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    OUTLINED_FUNCTION_79_0();
    v6 = sub_1B25CD474();
    OUTLINED_FUNCTION_10_0();
  }
  else
  {
    v6 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v5 == v6 && v5)
  {
    v7 = a1 & 0xFFFFFFFFFFFFFF8;
    if (a1 < 0)
      v7 = a1;
    if (!v4)
      v7 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
    v8 = a2 & 0xFFFFFFFFFFFFFF8;
    if (a2 < 0)
      v8 = a2;
    if (!((unint64_t)a2 >> 62))
      v8 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
    if (v7 != v8)
    {
      if (v5 < 0)
      {
        __break(1u);
      }
      else
      {
        sub_1B24B1AF4(0, (a1 & 0xC000000000000001) == 0, a1);
        if ((a1 & 0xC000000000000001) == 0)
        {
          OUTLINED_FUNCTION_289();
LABEL_19:
          sub_1B24B1AF4(0, (a2 & 0xC000000000000001) == 0, a2);
          if ((a2 & 0xC000000000000001) != 0)
            OUTLINED_FUNCTION_62_2();
          OUTLINED_FUNCTION_38_2();
          goto LABEL_21;
        }
      }
      MEMORY[0x1B5E252C4](0, a1);
      goto LABEL_19;
    }
  }
LABEL_21:
  OUTLINED_FUNCTION_233();
}

void sub_1B2522944()
{
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_84_1();
  JUMPOUT(0x1B25228C8);
}

void sub_1B2522954(_QWORD *a1, _QWORD *a2)
{
  unint64_t v2;
  BOOL v5;
  char v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  BOOL v10;

  v2 = a1[2];
  if (v2 == a2[2]
    && v2
    && a1 != a2
    && (a1[4] == a2[4] ? (v5 = a1[5] == a2[5]) : (v5 = 0),
        (v5 || (OUTLINED_FUNCTION_303_0(), OUTLINED_FUNCTION_104_2(), (v6 & 1) != 0)) && v2 != 1))
  {
    v7 = a2 + 7;
    v8 = a1 + 7;
    v9 = 1;
    while (v9 < v2)
    {
      v10 = *(v8 - 1) == *(v7 - 1) && *v8 == *v7;
      if (v10 || (OUTLINED_FUNCTION_303_0() & 1) != 0)
      {
        ++v9;
        v7 += 2;
        v8 += 2;
        if (v2 != v9)
          continue;
      }
      goto LABEL_18;
    }
    __break(1u);
  }
  else
  {
LABEL_18:
    OUTLINED_FUNCTION_262();
  }
}

uint64_t sub_1B2522A0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _BYTE v9[160];
  _BYTE __dst[160];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v7 = 1;
    }
    else
    {
      v3 = (char *)(a1 + 32);
      v4 = (char *)(a2 + 32);
      v5 = v2 - 1;
      do
      {
        v6 = v5;
        memcpy(__dst, v3, sizeof(__dst));
        memcpy(v9, v4, sizeof(v9));
        v7 = static TranscriptionToken.== infix(_:_:)((uint64_t)__dst, (uint64_t)v9);
        if ((v7 & 1) == 0)
          break;
        v5 = v6 - 1;
        v4 += 160;
        v3 += 160;
      }
      while (v6);
    }
  }
  else
  {
    v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_1B2522AB4(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t result;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  BOOL v23;
  BOOL v24;
  BOOL v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  int v45;
  int v46;
  int v47;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = a1 + 32;
  v4 = a2 + 32;
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1B2522A0C(v5, v6);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
    return 0;
  if (v2 == 1)
    return 1;
  v9 = 1;
  while (1)
  {
LABEL_8:
    if (v9 >= v2)
    {
      __break(1u);
      return result;
    }
    v10 = *(_QWORD *)(v3 + 8 * v9);
    v11 = *(_QWORD *)(v4 + 8 * v9);
    v12 = *(_QWORD *)(v10 + 16);
    v13 = *(_QWORD *)(v11 + 16);
    result = v12 == v13;
    if (v12 != v13)
      return result;
    ++v9;
    if (v12 && v10 != v11)
      break;
    if (v9 == v2)
      return result;
  }
  v26 = v9;
  v27 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = 0;
  v28 = v10;
  v29 = v11;
  do
  {
    v16 = *(double *)(v10 + v15 + 120);
    v47 = *(unsigned __int8 *)(v10 + v15 + 128);
    v45 = *(unsigned __int8 *)(v10 + v15 + 129);
    v43 = *(_QWORD *)(v10 + v15 + 136);
    v42 = *(_QWORD *)(v10 + v15 + 144);
    v39 = *(_QWORD *)(v10 + v15 + 152);
    v38 = *(_QWORD *)(v10 + v15 + 160);
    v35 = *(unsigned __int8 *)(v10 + v15 + 168);
    v33 = *(unsigned __int8 *)(v10 + v15 + 169);
    v31 = *(unsigned __int8 *)(v10 + v15 + 170);
    v18 = *(double *)(v10 + v15 + 176);
    v17 = *(double *)(v10 + v15 + 184);
    v19 = v11 + v15;
    v20 = *(double *)(v11 + v15 + 120);
    v22 = *(double *)(v11 + v15 + 176);
    v21 = *(double *)(v11 + v15 + 184);
    v23 = *(_QWORD *)(v10 + v15 + 32) == *(_QWORD *)(v11 + v15 + 32)
       && *(_QWORD *)(v10 + v15 + 40) == *(_QWORD *)(v11 + v15 + 40);
    v46 = *(unsigned __int8 *)(v19 + 128);
    v44 = *(unsigned __int8 *)(v19 + 129);
    v40 = *(_QWORD *)(v19 + 136);
    v41 = *(_QWORD *)(v19 + 144);
    v36 = *(_QWORD *)(v19 + 152);
    v37 = *(_QWORD *)(v19 + 160);
    v34 = *(unsigned __int8 *)(v19 + 168);
    v32 = *(unsigned __int8 *)(v19 + 169);
    v30 = *(unsigned __int8 *)(v19 + 170);
    if (!v23 && (sub_1B25CD5D0() & 1) == 0
      || (sub_1B25CD060() & 1) == 0
      || (sub_1B25CD060() & 1) == 0
      || (v10 = v28, v11 = v29, (sub_1B25CD060() & 1) == 0)
      || v16 != v20
      || v47 != v46
      || v45 != v44
      || (v43 == v40 ? (v24 = v42 == v41) : (v24 = 0),
          !v24 && (sub_1B25CD5D0() & 1) == 0
       || (v39 == v36 ? (v25 = v38 == v37) : (v25 = 0),
           !v25 && (sub_1B25CD5D0() & 1) == 0 || v35 != v34 || v33 != v32 || v31 != v30 || v18 != v22 || v17 != v21)))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    v15 += 160;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = 1;
  v9 = v26;
  v3 = v27;
  if (v26 != v2)
    goto LABEL_8;
  return result;
}

void sub_1B2522ED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 *v34;
  uint64_t v35;
  unint64_t v36;
  BOOL v37;

  OUTLINED_FUNCTION_59_0();
  a19 = v20;
  a20 = v21;
  v23 = v22;
  v25 = v24;
  v26 = type metadata accessor for CommandRecognizer.Argument(0);
  v28 = MEMORY[0x1E0C80A78](v26, v27);
  v30 = (unsigned __int8 *)&a9 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28, v31);
  v34 = (unsigned __int8 *)&a9 - v33;
  v35 = *(_QWORD *)(v25 + 16);
  if (v35 == *(_QWORD *)(v23 + 16) && v35 && v25 != v23)
  {
    v36 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
    sub_1B24EAB98(v25 + v36, (uint64_t)&a9 - v33, type metadata accessor for CommandRecognizer.Argument);
    sub_1B24EAB98(v23 + v36, (uint64_t)v30, type metadata accessor for CommandRecognizer.Argument);
    if (*v34 == *v30)
    {
      v37 = *((_QWORD *)v34 + 1) == *((_QWORD *)v30 + 1) && *((_QWORD *)v34 + 2) == *((_QWORD *)v30 + 2);
      if (v37 || (OUTLINED_FUNCTION_303_0() & 1) != 0)
        OUTLINED_FUNCTION_357_0();
    }
    sub_1B25317B8((uint64_t)v30, type metadata accessor for CommandRecognizer.Argument);
    sub_1B25317B8((uint64_t)v34, type metadata accessor for CommandRecognizer.Argument);
  }
  OUTLINED_FUNCTION_7_1();
}

BOOL sub_1B2523050(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double *v3;
  double *v4;
  uint64_t v5;
  _BOOL8 result;
  double v7;
  double v8;
  double v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(double *)(a1 + 32) != *(double *)(a2 + 32))
    return 0;
  v3 = (double *)(a1 + 40);
  v4 = (double *)(a2 + 40);
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v7 = *v3++;
    v8 = v7;
    v9 = *v4++;
    --v5;
  }
  while (v8 == v9);
  return result;
}

uint64_t sub_1B25230BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t (*v34)(char *, unint64_t, uint64_t);
  char *v35;
  uint64_t result;
  char *v37;
  char v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  double v49;
  double v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  double v54;
  double v55;
  double v56;
  BOOL v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  BOOL v64;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int *v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  int v95;
  int v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;

  v4 = sub_1B25CC3B8();
  v115 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4, v5);
  v8 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6, v9);
  v11 = (char *)&v67 - v10;
  v12 = type metadata accessor for TranscriptionSegment(0);
  v14 = MEMORY[0x1E0C80A78](v12, v13);
  v16 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14, v17);
  v20 = (char *)&v67 - v19;
  v21 = *(_QWORD *)(a1 + 16);
  if (v21 != *(_QWORD *)(a2 + 16))
  {
LABEL_57:
    v45 = 0;
    return v45 & 1;
  }
  v116 = v4;
  if (!v21 || a1 == a2)
  {
    v45 = 1;
    return v45 & 1;
  }
  v112 = v8;
  v113 = v11;
  v22 = 0;
  v23 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = *(_QWORD *)(v18 + 72);
  v27 = v116;
  v81 = (int *)v12;
  v107 = (char *)&v67 - v19;
  v108 = v16;
  v71 = v21;
  v70 = v24;
  v69 = v25;
  v68 = v26;
  while (1)
  {
    v72 = v22;
    v28 = v26 * v22;
    sub_1B24EAB98(v24 + v26 * v22, (uint64_t)v20, type metadata accessor for TranscriptionSegment);
    sub_1B24EAB98(v25 + v28, (uint64_t)v16, type metadata accessor for TranscriptionSegment);
    if ((sub_1B25CC34C() & 1) == 0)
      goto LABEL_56;
    v29 = v81[5];
    v30 = *(_QWORD *)&v108[v29];
    v114 = *(_QWORD *)&v107[v29];
    v31 = *(_QWORD *)(v114 + 16);
    if (v31 != *(_QWORD *)(v30 + 16))
      goto LABEL_56;
    if (v31 && v114 != v30)
      break;
LABEL_13:
    v40 = v81[6];
    v41 = *(_QWORD *)&v107[v40];
    v42 = *(_QWORD *)&v108[v40];
    v93 = v41;
    v43 = *(_QWORD *)(v41 + 16);
    v92 = v42;
    if (v43 != *(_QWORD *)(v42 + 16))
      goto LABEL_56;
    if (v43)
      v44 = v93 == v92;
    else
      v44 = 1;
    if (!v44)
    {
      v46 = 0;
      while (1)
      {
        v47 = *(_QWORD *)(v93 + v46 + 32);
        v48 = *(_QWORD *)(v93 + v46 + 40);
        v106 = *(_QWORD *)(v93 + v46 + 72);
        v104 = *(unsigned int *)(v93 + v46 + 80);
        v103 = *(unsigned int *)(v93 + v46 + 84);
        v105 = *(_QWORD *)(v93 + v46 + 88);
        v101 = *(_QWORD *)(v93 + v46 + 96);
        v99 = *(unsigned int *)(v93 + v46 + 104);
        v98 = *(unsigned int *)(v93 + v46 + 108);
        v100 = *(_QWORD *)(v93 + v46 + 112);
        v49 = *(double *)(v93 + v46 + 120);
        v97 = *(unsigned __int8 *)(v93 + v46 + 128);
        v95 = *(unsigned __int8 *)(v93 + v46 + 129);
        v114 = *(_QWORD *)(v93 + v46 + 136);
        v111 = *(_QWORD *)(v93 + v46 + 144);
        v91 = *(_QWORD *)(v93 + v46 + 152);
        v90 = *(_QWORD *)(v93 + v46 + 160);
        v87 = *(unsigned __int8 *)(v93 + v46 + 168);
        v85 = *(unsigned __int8 *)(v93 + v46 + 169);
        v83 = *(unsigned __int8 *)(v93 + v46 + 170);
        v51 = *(double *)(v93 + v46 + 176);
        v50 = *(double *)(v93 + v46 + 184);
        v52 = v92 + v46;
        v53 = *(_QWORD *)(v92 + v46 + 72);
        v54 = *(double *)(v92 + v46 + 120);
        v56 = *(double *)(v92 + v46 + 176);
        v55 = *(double *)(v92 + v46 + 184);
        v57 = v47 == *(_QWORD *)(v92 + v46 + 32) && v48 == *(_QWORD *)(v92 + v46 + 40);
        v58 = *(unsigned int *)(v52 + 80);
        v102 = *(unsigned int *)(v52 + 84);
        v60 = *(_QWORD *)(v52 + 88);
        v59 = *(_QWORD *)(v52 + 96);
        v61 = *(unsigned int *)(v52 + 104);
        v62 = *(unsigned int *)(v52 + 108);
        v96 = *(unsigned __int8 *)(v52 + 128);
        v94 = *(unsigned __int8 *)(v52 + 129);
        v109 = *(_QWORD *)(v52 + 136);
        v110 = *(_QWORD *)(v52 + 144);
        v88 = *(_QWORD *)(v52 + 152);
        v89 = *(_QWORD *)(v52 + 160);
        v86 = *(unsigned __int8 *)(v52 + 168);
        v84 = *(unsigned __int8 *)(v52 + 169);
        v82 = *(unsigned __int8 *)(v52 + 170);
        if (!v57)
        {
          v79 = v61;
          v80 = v59;
          v78 = v62;
          v77 = v46;
          v76 = v43;
          v74 = v53;
          v75 = v60;
          v73 = v58;
          v63 = sub_1B25CD5D0();
          v43 = v76;
          v46 = v77;
          if ((v63 & 1) == 0)
            break;
        }
        if ((sub_1B25CD060() & 1) == 0
          || (sub_1B25CD060() & 1) == 0
          || (sub_1B25CD060() & 1) == 0
          || v49 != v54
          || ((v97 ^ v96) & 1) != 0
          || ((v95 ^ v94) & 1) != 0)
        {
          break;
        }
        v64 = v114 == v109 && v111 == v110;
        if (!v64 && (sub_1B25CD5D0() & 1) == 0)
          break;
        if (v91 == v88 && v90 == v89)
        {
          if ((v87 ^ v86) == 1)
            break;
        }
        else if ((sub_1B25CD5D0() & 1) == 0 || v87 != v86)
        {
          break;
        }
        if (v85 != v84 || v83 != v82)
          break;
        if (v51 != v56 || v50 != v55)
          break;
        v46 += 160;
        if (!--v43)
          goto LABEL_19;
      }
LABEL_56:
      sub_1B25317B8((uint64_t)v108, type metadata accessor for TranscriptionSegment);
      sub_1B25317B8((uint64_t)v107, type metadata accessor for TranscriptionSegment);
      goto LABEL_57;
    }
LABEL_19:
    v20 = v107;
    v16 = v108;
    v45 = sub_1B2522AB4(*(_QWORD *)&v107[v81[7]], *(_QWORD *)&v108[v81[7]]);
    sub_1B25317B8((uint64_t)v16, type metadata accessor for TranscriptionSegment);
    sub_1B25317B8((uint64_t)v20, type metadata accessor for TranscriptionSegment);
    if ((v45 & 1) != 0)
    {
      v22 = v72 + 1;
      v24 = v70;
      v25 = v69;
      v26 = v68;
      if (v72 + 1 != v71)
        continue;
    }
    return v45 & 1;
  }
  v32 = 0;
  v33 = (*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80);
  v111 = *(_QWORD *)(v115 + 72);
  v34 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v115 + 16);
  while (1)
  {
    v35 = v113;
    result = v34(v113, v114 + v33, v27);
    if (v32 >= *(_QWORD *)(v30 + 16))
      break;
    v37 = v112;
    v34(v112, v30 + v33, v27);
    sub_1B2531930(&qword_1EEFD8D18, (void (*)(uint64_t))MEMORY[0x1E0CAF240]);
    v38 = sub_1B25CC994();
    v39 = *(void (**)(char *, uint64_t))(v115 + 8);
    v39(v37, v116);
    v27 = v116;
    v39(v35, v116);
    if ((v38 & 1) == 0)
      goto LABEL_56;
    ++v32;
    v33 += v111;
    if (v31 == v32)
      goto LABEL_13;
  }
  __break(1u);
  return result;
}

void sub_1B2523874()
{
  sub_1B2523890();
}

void sub_1B2523890()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  void (*v4)(uint64_t);
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, unint64_t, uint64_t);
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char v27;
  void (*v28)(uint64_t, uint64_t);
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, unint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t);

  OUTLINED_FUNCTION_59_0();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = ((uint64_t (*)(_QWORD))v4)(0);
  MEMORY[0x1E0C80A78](v10, v11);
  OUTLINED_FUNCTION_434();
  MEMORY[0x1E0C80A78](v12, v13);
  v17 = (char *)&v31 - v16;
  v18 = *(_QWORD *)(v9 + 16);
  if (v18 == *(_QWORD *)(v7 + 16) && v18 && v9 != v7)
  {
    v34 = v15;
    v35 = v14;
    v36 = v5;
    v19 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    v31 = *(_QWORD *)(v14 + 72);
    v32 = v9;
    v33 = *(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 16);
    v20 = v18 - 1;
    v21 = v15;
    do
    {
      v22 = v33;
      v33((uint64_t)v17, v9 + v19, v10);
      v23 = v7;
      v22(v21, v7 + v19, v10);
      v24 = v3;
      v25 = v3;
      v26 = v1;
      sub_1B2531930(v25, v36);
      v27 = OUTLINED_FUNCTION_224_2();
      v28 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
      v28(v21, v10);
      v28((uint64_t)v17, v10);
      v30 = v20-- != 0;
      if ((v27 & 1) == 0)
        break;
      v19 += v31;
      v1 = v26;
      v3 = v24;
      v7 = v23;
      v9 = v32;
    }
    while (v30);
  }
  OUTLINED_FUNCTION_7_1();
}

void sub_1B2523A08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16) && v2 && a1 != a2)
  {
    v3 = (uint64_t *)(a2 + 48);
    v4 = (uint64_t *)(a1 + 48);
    do
    {
      v5 = *v4;
      v6 = *v3;
      if (*(v4 - 2) == *(v3 - 2) && *(v4 - 1) == *(v3 - 1))
      {
        if (v5 != v6)
          break;
      }
      else
      {
        OUTLINED_FUNCTION_303_0();
        OUTLINED_FUNCTION_104_2();
        if ((v8 & 1) == 0 || v5 != v6)
          break;
      }
      v3 += 3;
      v4 += 3;
      --v2;
    }
    while (v2);
  }
  OUTLINED_FUNCTION_233();
}

uint64_t Transcriber.isSpeechProfileUsed.getter()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B2523AC0()
{
  uint64_t v0;
  _QWORD *v1;

  if (!OUTLINED_FUNCTION_248_1())
    return OUTLINED_FUNCTION_89(0, *(uint64_t (**)(void))(v0 + 8));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  OUTLINED_FUNCTION_18_0(v1, (uint64_t)sub_1B2523B14);
  return sub_1B24F63E8();
}

uint64_t sub_1B2523B14(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 40) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_BYTE *)(v4 + 48) = a1 & 1;
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_31();
}

uint64_t sub_1B2523B7C()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_247_2();
  OUTLINED_FUNCTION_338_0();
  return OUTLINED_FUNCTION_89(v0, v1);
}

uint64_t sub_1B2523BA4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_247_2();
  return OUTLINED_FUNCTION_89(0, *(uint64_t (**)(void))(v0 + 8));
}

void Transcriber.ModelOptions.supplementalModelURL.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1B24EBCB8(v1, a1, &qword_1ED36CF08);
}

uint64_t Transcriber.ModelOptions.farField.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Transcriber.ModelOptions(0) + 20));
}

void Transcriber.ModelOptions.modelOverrideURL.getter(uint64_t a1@<X8>)
{
  sub_1B2523C28(type metadata accessor for Transcriber.ModelOptions, a1);
}

void sub_1B2523C28(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = a1(0);
  OUTLINED_FUNCTION_348_0(v2 + *(int *)(v4 + 24), a2);
  OUTLINED_FUNCTION_262();
}

void Transcriber.ModelOptions.taskForMemoryLock.getter()
{
  OUTLINED_FUNCTION_140_2();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_0();
}

uint64_t Transcriber.ModelOptions.speechProfiles.getter()
{
  OUTLINED_FUNCTION_140_2();
  return swift_bridgeObjectRetain();
}

uint64_t Transcriber.ModelOptions.atypicalSpeech.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_140_2() + 36));
}

uint64_t Transcriber.ModelOptions.enableParallelLoading.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_140_2() + 40));
}

uint64_t Transcriber.ModelOptions.userIdMask.getter()
{
  OUTLINED_FUNCTION_140_2();
  return swift_bridgeObjectRetain();
}

void Transcriber.ModelOptions.init(supplementalModelURL:farField:modelOverrideURL:speechProfiles:taskForMemoryLock:atypicalSpeech:enableParallelLoading:)()
{
  uint64_t v0;
  int *v1;
  char v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  OUTLINED_FUNCTION_59_0();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  OUTLINED_FUNCTION_381_0();
  OUTLINED_FUNCTION_345_0(v10, v11);
  v12 = type metadata accessor for Transcriber.ModelOptions(0);
  OUTLINED_FUNCTION_127_1(v12);
  OUTLINED_FUNCTION_376_0();
  *v13 = v9;
  v13[1] = v7;
  *(_BYTE *)(v0 + v1[9]) = v5;
  *(_BYTE *)(v0 + v1[10]) = v3;
  *(_QWORD *)(v0 + v1[11]) = 0;
  OUTLINED_FUNCTION_7_1();
}

void Transcriber.ModelOptions.init(supplementalModelURL:farField:modelOverrideURL:speechProfiles:userIdMask:taskForMemoryLock:atypicalSpeech:enableParallelLoading:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, char a9)
{
  uint64_t v9;
  int *v10;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  OUTLINED_FUNCTION_381_0();
  OUTLINED_FUNCTION_345_0(v14, v15);
  v16 = type metadata accessor for Transcriber.ModelOptions(0);
  OUTLINED_FUNCTION_127_1(v16);
  OUTLINED_FUNCTION_376_0();
  *v17 = a6;
  v17[1] = a7;
  *(_BYTE *)(v9 + v10[9]) = a8;
  *(_BYTE *)(v9 + v10[10]) = a9;
  *(_QWORD *)(v9 + v10[11]) = a5;
}

void static Transcriber.ModelOptions.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  char v42;
  uint64_t v43;
  void (*v44)(uint64_t);
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t);
  uint64_t v48;
  int *v49;
  int *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  BOOL v64;
  char v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE v70[4];
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  OUTLINED_FUNCTION_59_0();
  v1 = v0;
  v3 = v2;
  v4 = OUTLINED_FUNCTION_70_3();
  v76 = *(_QWORD *)(v4 - 8);
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = &v70[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6980);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v10, v11);
  OUTLINED_FUNCTION_29_7();
  v75 = v12;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v13, v14);
  v16 = &v70[-v15];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF08);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v17, v18);
  OUTLINED_FUNCTION_29_7();
  v72 = v19;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v20, v21);
  OUTLINED_FUNCTION_89_4();
  v73 = v22;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v23, v24);
  OUTLINED_FUNCTION_89_4();
  v74 = v25;
  OUTLINED_FUNCTION_42_8();
  v28 = MEMORY[0x1E0C80A78](v26, v27);
  v30 = MEMORY[0x1E0C80A78](v28, v29);
  v32 = &v70[-v31];
  MEMORY[0x1E0C80A78](v30, v33);
  v35 = &v70[-v34];
  v77 = v3;
  v36 = OUTLINED_FUNCTION_215_2();
  OUTLINED_FUNCTION_225_2(v36, v37);
  v78 = v1;
  OUTLINED_FUNCTION_225_2(v1, (uint64_t)v32);
  v38 = (uint64_t)&v16[*(int *)(v9 + 48)];
  OUTLINED_FUNCTION_225_2((uint64_t)v35, (uint64_t)v16);
  OUTLINED_FUNCTION_225_2((uint64_t)v32, v38);
  OUTLINED_FUNCTION_118_0((uint64_t)v16, 1, v4);
  if (v42)
  {
    OUTLINED_FUNCTION_174_0((uint64_t)v32);
    OUTLINED_FUNCTION_174_0((uint64_t)v35);
    OUTLINED_FUNCTION_118_0(v38, 1, v4);
    if (v42)
    {
      sub_1B2534D88((uint64_t)v16, &qword_1ED36CF08);
      goto LABEL_12;
    }
LABEL_9:
    v45 = (uint64_t)v16;
LABEL_10:
    sub_1B2534D88(v45, &qword_1EEFD6980);
    goto LABEL_13;
  }
  v39 = OUTLINED_FUNCTION_367_0();
  sub_1B24EBCB8(v39, v40, v41);
  OUTLINED_FUNCTION_118_0(v38, 1, v4);
  if (v42)
  {
    sub_1B2534D88((uint64_t)v32, &qword_1ED36CF08);
    sub_1B2534D88((uint64_t)v35, &qword_1ED36CF08);
    v43 = OUTLINED_FUNCTION_38_0();
    v44(v43);
    goto LABEL_9;
  }
  v46 = v76;
  OUTLINED_FUNCTION_257_2((uint64_t)v8, v38, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v76 + 32));
  sub_1B2531930(&qword_1EEFD99E0, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  v71 = OUTLINED_FUNCTION_224_2();
  v47 = *(void (**)(uint64_t))(v46 + 8);
  OUTLINED_FUNCTION_279_2((uint64_t)v8);
  OUTLINED_FUNCTION_412_0((uint64_t)v32);
  OUTLINED_FUNCTION_412_0((uint64_t)v35);
  v48 = OUTLINED_FUNCTION_38_0();
  v47(v48);
  OUTLINED_FUNCTION_412_0((uint64_t)v16);
  if ((v71 & 1) == 0)
    goto LABEL_13;
LABEL_12:
  type metadata accessor for Transcriber.ModelOptions(0);
  OUTLINED_FUNCTION_178_1();
  if (!v42)
    goto LABEL_13;
  v50 = v49;
  v51 = v74;
  OUTLINED_FUNCTION_206_2(v77 + v49[6], v74);
  v52 = v73;
  OUTLINED_FUNCTION_206_2(v78 + v50[6], v73);
  v53 = v75;
  v54 = v75 + *(int *)(v9 + 48);
  OUTLINED_FUNCTION_206_2(v51, v75);
  OUTLINED_FUNCTION_206_2(v52, v54);
  OUTLINED_FUNCTION_118_0(v53, 1, v4);
  if (v42)
  {
    OUTLINED_FUNCTION_171_0(v52);
    OUTLINED_FUNCTION_171_0(v51);
    v55 = OUTLINED_FUNCTION_118_0(v54, 1, v4);
    if (v42)
    {
      OUTLINED_FUNCTION_374_0(v55, &qword_1ED36CF08);
      goto LABEL_24;
    }
    goto LABEL_22;
  }
  v56 = v72;
  sub_1B24EBCB8(v53, v72, &qword_1ED36CF08);
  OUTLINED_FUNCTION_118_0(v54, 1, v4);
  if (v57)
  {
    OUTLINED_FUNCTION_174_0(v52);
    OUTLINED_FUNCTION_174_0(v51);
    (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v56, v4);
LABEL_22:
    v45 = v53;
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_257_2((uint64_t)v8, v54, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v76 + 32));
  sub_1B2531930(&qword_1EEFD99E0, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  v58 = OUTLINED_FUNCTION_224_2();
  OUTLINED_FUNCTION_279_2((uint64_t)v8);
  OUTLINED_FUNCTION_171_0(v52);
  OUTLINED_FUNCTION_171_0(v51);
  OUTLINED_FUNCTION_279_2(v56);
  OUTLINED_FUNCTION_171_0(v53);
  if ((v58 & 1) == 0)
    goto LABEL_13;
LABEL_24:
  v59 = v50[7];
  v60 = (_QWORD *)(v77 + v59);
  v61 = *(_QWORD *)(v77 + v59 + 8);
  v62 = (_QWORD *)(v78 + v59);
  v63 = v62[1];
  if (!v61)
  {
    if (v63)
      goto LABEL_13;
    goto LABEL_33;
  }
  if (v63)
  {
    v64 = *v60 == *v62 && v61 == v63;
    if (v64 || (OUTLINED_FUNCTION_303_0(), OUTLINED_FUNCTION_104_2(), (v65 & 1) != 0))
    {
LABEL_33:
      sub_1B2523890();
      if ((v66 & 1) != 0)
      {
        OUTLINED_FUNCTION_178_1();
        if (v42)
        {
          OUTLINED_FUNCTION_178_1();
          if (v42)
          {
            v67 = v50[11];
            v68 = *(_QWORD *)(v78 + v67);
            if (*(_QWORD *)(v77 + v67))
            {
              if (v68)
              {
                OUTLINED_FUNCTION_79_0();
                v69 = OUTLINED_FUNCTION_47_0();
                sub_1B252B0D8(v69, v68);
                OUTLINED_FUNCTION_173();
                OUTLINED_FUNCTION_10_0();
              }
            }
          }
        }
      }
    }
  }
LABEL_13:
  OUTLINED_FUNCTION_7_1();
}

uint64_t Transcriber.ModelOptions.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  char v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v25[64];
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_123_2();
  v26 = v4;
  v27 = v5;
  v6 = v0;
  v8 = v7;
  v9 = OUTLINED_FUNCTION_70_3();
  OUTLINED_FUNCTION_175_2();
  MEMORY[0x1E0C80A78](v10, v11);
  OUTLINED_FUNCTION_52_6();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF08);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v12, v13);
  OUTLINED_FUNCTION_226_1();
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = &v25[-v16];
  sub_1B24EBCB8(v6, (uint64_t)&v25[-v16], &qword_1ED36CF08);
  OUTLINED_FUNCTION_118_0((uint64_t)v17, 1, v9);
  if (v18)
  {
    OUTLINED_FUNCTION_92_4();
  }
  else
  {
    OUTLINED_FUNCTION_310_0(v1, (uint64_t)v17, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
    OUTLINED_FUNCTION_92_4();
    sub_1B2531930(&qword_1EEFD6970, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    OUTLINED_FUNCTION_213_1();
    OUTLINED_FUNCTION_199_1(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  }
  v19 = (int *)type metadata accessor for Transcriber.ModelOptions(0);
  OUTLINED_FUNCTION_92_4();
  OUTLINED_FUNCTION_411_0(v6 + v19[6], v20, &qword_1ED36CF08);
  OUTLINED_FUNCTION_118_0(v2, 1, v9);
  if (v18)
  {
    OUTLINED_FUNCTION_92_4();
  }
  else
  {
    OUTLINED_FUNCTION_310_0(v1, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
    OUTLINED_FUNCTION_92_4();
    sub_1B2531930(&qword_1EEFD6970, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    OUTLINED_FUNCTION_213_1();
    OUTLINED_FUNCTION_199_1(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  }
  if (*(_QWORD *)(v6 + v19[7] + 8))
  {
    OUTLINED_FUNCTION_92_4();
    OUTLINED_FUNCTION_61_6();
    OUTLINED_FUNCTION_387_0();
    OUTLINED_FUNCTION_101_1();
  }
  else
  {
    OUTLINED_FUNCTION_92_4();
  }
  OUTLINED_FUNCTION_47_0();
  v21 = OUTLINED_FUNCTION_38_0();
  sub_1B25312BC(v21, v22);
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_92_4();
  sub_1B25CD6C0();
  v23 = *(_QWORD *)(v6 + v19[11]);
  if (!v23)
    return OUTLINED_FUNCTION_92_4();
  OUTLINED_FUNCTION_92_4();
  OUTLINED_FUNCTION_133();
  sub_1B25315E0(v8, v23);
  return OUTLINED_FUNCTION_69();
}

void Transcriber.ModelOptions.hashValue.getter()
{
  OUTLINED_FUNCTION_4();
  Transcriber.ModelOptions.hash(into:)();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1B25245A0()
{
  sub_1B25CD6A8();
  Transcriber.ModelOptions.hash(into:)();
  return sub_1B25CD6CC();
}

BOOL static Transcriber.ReportingOption.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Transcriber.ReportingOption.hash(into:)()
{
  return OUTLINED_FUNCTION_263_1();
}

void _s6Speech11TranscriberC19TranscriptionOptionO9hashValueSivg_0()
{
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_840();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1();
}

void sub_1B2524648()
{
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_840();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1();
}

uint64_t Transcriber.recognitionStatistics.getter()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B2524680()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = sub_1B251CD30();
  *(_QWORD *)(v0 + 24) = v1;
  if (v1)
  {
    *(_QWORD *)(v0 + 32) = OBJC_IVAR____TtC6Speech22SpeechRecognizerWorker_recognitionStatistics;
    return OUTLINED_FUNCTION_8();
  }
  else
  {
    OUTLINED_FUNCTION_338_0();
    return OUTLINED_FUNCTION_89(v3, v4);
  }
}

uint64_t sub_1B25246D8()
{
  OUTLINED_FUNCTION_262_1();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B2524704()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_247_2();
  OUTLINED_FUNCTION_338_0();
  return OUTLINED_FUNCTION_89(v0, v1);
}

uint64_t Transcriber.recognitionUtterenceStatistics.getter()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B252473C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = sub_1B251CD30();
  *(_QWORD *)(v0 + 24) = v1;
  if (v1)
  {
    *(_QWORD *)(v0 + 32) = OBJC_IVAR____TtC6Speech22SpeechRecognizerWorker_recognitionUtterenceStatistics;
    return OUTLINED_FUNCTION_8();
  }
  else
  {
    OUTLINED_FUNCTION_338_0();
    return OUTLINED_FUNCTION_89(v3, v4);
  }
}

uint64_t sub_1B2524794()
{
  OUTLINED_FUNCTION_262_1();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t Transcriber.modelVersion.getter()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  OUTLINED_FUNCTION_18_0(v1, (uint64_t)sub_1B25247F8);
  return OUTLINED_FUNCTION_165_2();
}

uint64_t sub_1B25247F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_101_3(a1);
  if (v1)
    return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v2 + 8));
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B2524834(uint64_t a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  if (*(_QWORD *)(v1 + 24))
  {
    v2 = OUTLINED_FUNCTION_39_0(a1, sel_version);
    OUTLINED_FUNCTION_260_2();
    sub_1B25CCA18();
    OUTLINED_FUNCTION_394_0();
  }
  v3 = OUTLINED_FUNCTION_359();
  return OUTLINED_FUNCTION_8_0(v3, v4, v5);
}

uint64_t sub_1B252488C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B252489C()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);

  v0 = sub_1B251CD30();
  if (v0)
  {
    v1 = *(id *)(v0 + OBJC_IVAR____TtC6Speech22SpeechRecognizerWorker_modelInfo);
    OUTLINED_FUNCTION_50_4();
  }
  v2 = OUTLINED_FUNCTION_581();
  return v3(v2);
}

uint64_t Transcriber.acousticModelVersion.getter()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  OUTLINED_FUNCTION_18_0(v1, (uint64_t)sub_1B2524934);
  return OUTLINED_FUNCTION_165_2();
}

uint64_t sub_1B2524934(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_101_3(a1);
  if (v1)
    return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v2 + 8));
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B2524970(uint64_t a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  if (*(_QWORD *)(v1 + 24))
  {
    v2 = OUTLINED_FUNCTION_39_0(a1, sel_acousticModelVersion);
    OUTLINED_FUNCTION_260_2();
    sub_1B25CCA18();
    OUTLINED_FUNCTION_394_0();
  }
  v3 = OUTLINED_FUNCTION_359();
  return OUTLINED_FUNCTION_8_0(v3, v4, v5);
}

uint64_t sub_1B25249C8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[5] = a1;
  v2[6] = v1;
  sub_1B25CCA00();
  v2[7] = OUTLINED_FUNCTION_24_8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6B20);
  v2[8] = OUTLINED_FUNCTION_24_8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF08);
  v2[9] = OUTLINED_FUNCTION_24_8();
  v3 = OUTLINED_FUNCTION_23_0();
  v2[10] = v3;
  v2[11] = *(_QWORD *)(v3 - 8);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v2[14] = type metadata accessor for Assets(0);
  v2[15] = OUTLINED_FUNCTION_24_8();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

_QWORD *sub_1B2524A74()
{
  _QWORD *v0;
  _QWORD *result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v20;

  result = (_QWORD *)TaskHint.preferredModelTaskNames.getter();
  v0[16] = result;
  if (result[2])
  {
    v2 = v0[13];
    v3 = v0[10];
    v4 = v0[11];
    v5 = v0[8];
    v6 = v0[6];
    v7 = result[4];
    v0[17] = v7;
    v8 = result[5];
    v0[18] = v8;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v6 + OBJC_IVAR____TtC6Speech11Transcriber_locale, v3);
    OUTLINED_FUNCTION_307_1(v6 + OBJC_IVAR____TtC6Speech11Transcriber_modelOptions, v9, &qword_1EEFD6B20);
    v10 = OUTLINED_FUNCTION_140_2();
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v5, 1, v10);
    v14 = v0[8];
    v13 = v0[9];
    if (EnumTagSinglePayload == 1)
    {
      OUTLINED_FUNCTION_133();
      OUTLINED_FUNCTION_79_0();
      sub_1B2534D88(v14, &qword_1EEFD6B20);
      v15 = OUTLINED_FUNCTION_70_3();
      OUTLINED_FUNCTION_291_0(v13, v16, v17, v15);
    }
    else
    {
      OUTLINED_FUNCTION_307_1(v14 + *(int *)(v10 + 24), v12, &qword_1ED36CF08);
      OUTLINED_FUNCTION_133();
      OUTLINED_FUNCTION_79_0();
      sub_1B25317B8(v14, type metadata accessor for Transcriber.ModelOptions);
    }
    if (v7 != sub_1B25CCA18() || v8 != v18)
    {
      OUTLINED_FUNCTION_215_2();
      OUTLINED_FUNCTION_303_0();
    }
    OUTLINED_FUNCTION_69();
    Assets.init(locale:taskHint:clientID:modelOverridePath:isSpelling:)();
    v20 = (_QWORD *)swift_task_alloc();
    v0[19] = v20;
    OUTLINED_FUNCTION_18_0(v20, (uint64_t)sub_1B2524C4C);
    return (_QWORD *)sub_1B24B0750();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B2524C4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_136_0();
  OUTLINED_FUNCTION_135_0();
  *(_QWORD *)(v2 + 160) = v1;
  *(_QWORD *)(v2 + 168) = v0;
  OUTLINED_FUNCTION_237();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

void sub_1B2524C98()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  BOOL v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  unint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(void);
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39[2];

  v1 = *(_QWORD *)(v0[16] + 16);
  if (v1)
  {
    v2 = 0;
    v3 = (_QWORD *)v0[20];
    v4 = v3[2];
    do
    {
      if (v4)
      {
        v5 = v0[16] + 16 * v2;
        v7 = *(_QWORD *)(v5 + 32);
        v6 = *(_QWORD *)(v5 + 40);
        v8 = v3[4] == v7 && v3[5] == v6;
        if (v8 || (OUTLINED_FUNCTION_303_0() & 1) != 0)
        {
LABEL_20:
          v14 = v0[17];
          v13 = v0[18];
          OUTLINED_FUNCTION_79_0();
          OUTLINED_FUNCTION_173();
          OUTLINED_FUNCTION_69();
          v15 = v7 == v14 && v6 == v13;
          if (v15 || (OUTLINED_FUNCTION_303_0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            v28 = qword_1ED36CF48;
            OUTLINED_FUNCTION_79_0();
            if (v28 != -1)
              swift_once();
            v29 = OUTLINED_FUNCTION_147();
            __swift_project_value_buffer(v29, (uint64_t)qword_1ED36D980);
            OUTLINED_FUNCTION_444();
            OUTLINED_FUNCTION_47_0();
            v30 = sub_1B25CC8B0();
            v31 = sub_1B25CCFF4();
            if (OUTLINED_FUNCTION_49_3(v31))
            {
              v32 = v0[17];
              v33 = OUTLINED_FUNCTION_246();
              v39[0] = OUTLINED_FUNCTION_246();
              *(_DWORD *)v33 = 136315394;
              OUTLINED_FUNCTION_178();
              v0[3] = OUTLINED_FUNCTION_275_2(v32, v34, v39);
              sub_1B25CD12C();
              OUTLINED_FUNCTION_39_1();
              *(_WORD *)(v33 + 12) = 2080;
              OUTLINED_FUNCTION_79_0();
              v0[4] = sub_1B2504AB0(v7, v6, v39);
              sub_1B25CD12C();
              OUTLINED_FUNCTION_39_1();
              OUTLINED_FUNCTION_362(&dword_1B2494000, v30, (os_log_type_t)v4, "Transcriber: Assets do not support requested task name \"%s\"; using \"%s\"",
                (uint8_t *)v33);
              OUTLINED_FUNCTION_193_1();
              OUTLINED_FUNCTION_174();
            }
            OUTLINED_FUNCTION_36_2();
            OUTLINED_FUNCTION_39_1();

          }
          v35 = v0[21];
          v36 = *(_QWORD *)(v0[6] + OBJC_IVAR____TtC6Speech11Transcriber_assetsTaskName);
          v37 = swift_task_alloc();
          *(_QWORD *)(v37 + 16) = v7;
          *(_QWORD *)(v37 + 24) = v6;
          OUTLINED_FUNCTION_372_0();
          sub_1B25252B0((_QWORD *)(v36 + 16), *(_QWORD *)(v37 + 16), *(_QWORD *)(v37 + 24));
          OUTLINED_FUNCTION_373_0();
          if (!v35)
          {
            v38 = OUTLINED_FUNCTION_36();
            OUTLINED_FUNCTION_237_1(v38, type metadata accessor for Assets);
            OUTLINED_FUNCTION_10_0();
            OUTLINED_FUNCTION_95();
            OUTLINED_FUNCTION_72();
            OUTLINED_FUNCTION_114();
            OUTLINED_FUNCTION_148();
            OUTLINED_FUNCTION_211();
            swift_task_dealloc();
            v27 = (void (*)(void))v0[1];
            goto LABEL_40;
          }
          return;
        }
        if (v4 != 1)
        {
          v9 = v3 + 7;
          v10 = 1;
          while (1)
          {
            v11 = v10 + 1;
            if (__OFADD__(v10, 1))
              break;
            v12 = *(v9 - 1) == v7 && *v9 == v6;
            if (v12 || (OUTLINED_FUNCTION_303_0() & 1) != 0)
              goto LABEL_20;
            ++v10;
            v9 += 2;
            if (v11 == v4)
              goto LABEL_18;
          }
          __break(1u);
          goto LABEL_43;
        }
      }
LABEL_18:
      ++v2;
    }
    while (v2 != v1);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1ED36CF48 != -1)
LABEL_43:
    swift_once();
  v16 = OUTLINED_FUNCTION_147();
  __swift_project_value_buffer(v16, (uint64_t)qword_1ED36D980);
  OUTLINED_FUNCTION_47_0();
  v17 = sub_1B25CC8B0();
  v18 = sub_1B25CCFDC();
  v19 = os_log_type_enabled(v17, v18);
  v20 = v0[18];
  if (v19)
  {
    v21 = v0[17];
    v22 = (uint8_t *)OUTLINED_FUNCTION_246();
    v39[0] = OUTLINED_FUNCTION_246();
    *(_DWORD *)v22 = 136315138;
    OUTLINED_FUNCTION_168();
    v0[2] = sub_1B2504AB0(v21, v20, v39);
    sub_1B25CD12C();
    OUTLINED_FUNCTION_39_1();
    OUTLINED_FUNCTION_91_1(&dword_1B2494000, v17, v18, "Transcriber: Assets do not support requested task name \"%s\"; no fallback available",
      v22);
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_174();
  }
  OUTLINED_FUNCTION_36_2();

  sub_1B25CC9AC();
  if (qword_1EEFD8028 != -1)
    swift_once();
  v23 = v0[7];
  v24 = (id)qword_1EEFDB360;
  sub_1B25CC6AC();
  OUTLINED_FUNCTION_17();
  v25 = sub_1B25CCA60();
  related decl 'e' for SFSpeechErrorCode.init(_:description:)(4, v25, v26);
  swift_willThrow();
  OUTLINED_FUNCTION_333_0();
  sub_1B25317B8(v23, type metadata accessor for Assets);
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_114();
  OUTLINED_FUNCTION_148();
  OUTLINED_FUNCTION_211();
  v27 = (void (*)(void))v0[1];
LABEL_40:
  v27();
}

uint64_t sub_1B2525230()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_333_0();
  sub_1B25317B8(v0, type metadata accessor for Assets);
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_114();
  OUTLINED_FUNCTION_148();
  OUTLINED_FUNCTION_211();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1B25252B0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B25252F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch();
}

uint64_t sub_1B2525310()
{
  uint64_t v0;
  uint64_t result;

  if (*(_QWORD *)(v0 + 16))
    return swift_task_switch();
  __break(1u);
  return result;
}

uint64_t sub_1B252532C()
{
  uint64_t v0;

  sub_1B259DDDC();
  return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1B2525354()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int v60;
  char v61;
  uint64_t v62;
  char v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char v68;
  char v69;
  uint64_t v70;
  unint64_t v71;

  OUTLINED_FUNCTION_59_0();
  v1 = v0;
  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6B20);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v4, v5);
  OUTLINED_FUNCTION_767();
  v59 = v6;
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6Speech11Transcriber_transcriptionOptions);
  v8 = (int *)OUTLINED_FUNCTION_32_4();
  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_168();
  OUTLINED_FUNCTION_47_0();
  sub_1B25062E0();
  OUTLINED_FUNCTION_133();
  OUTLINED_FUNCTION_282_1();
  v65 = v9;
  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_281_2();
  v11 = v10;
  OUTLINED_FUNCTION_44_1();
  sub_1B25062E0();
  OUTLINED_FUNCTION_133();
  OUTLINED_FUNCTION_282_1();
  v62 = v12;
  OUTLINED_FUNCTION_281_2();
  OUTLINED_FUNCTION_44_1();
  v63 = 1;
  sub_1B251CDC8(1u, v7);
  v14 = v13;
  sub_1B25063BC();
  sub_1B252FD2C();
  v66 = v15;
  sub_1B252FD2C();
  OUTLINED_FUNCTION_69();
  v16 = (_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC6Speech11Transcriber_assetsTaskName) + 16);
  OUTLINED_FUNCTION_372_0();
  OUTLINED_FUNCTION_234_0(v16, &v70);
  OUTLINED_FUNCTION_373_0();
  v17 = v70;
  v18 = v71;
  v64 = MEMORY[0x1B5E24628](v1 + OBJC_IVAR____TtC6Speech11Transcriber_locale, v3);
  v19 = *(_QWORD *)(v3 + v8[5]);
  v69 = sub_1B251CF08(v17, v18, v19);
  v20 = *(_BYTE *)(v3 + v8[6]);
  v60 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC6Speech11Transcriber_taskHint);
  v61 = sub_1B2572A08(v11, v65);
  if ((v14 & 1) != 0)
    v63 = sub_1B25802B8(v62);
  v68 = sub_1B25802B8(v66);
  v57 = v1 + OBJC_IVAR____TtC6Speech11Transcriber_modelOptions;
  v58 = v3 + v8[10];
  sub_1B255EE94(v58, v1 + OBJC_IVAR____TtC6Speech11Transcriber_modelOptions);
  v67 = v21;
  if ((v64 & 1) != 0)
  {
    v22 = MEMORY[0x1E0DEE9D8];
    v23 = v20;
  }
  else
  {
    OUTLINED_FUNCTION_204_1();
    sub_1B25CD2DC();
    OUTLINED_FUNCTION_112_2();
    v70 = 0x6420656C61636F6CLL;
    v71 = 0xEF20646572697365;
    OUTLINED_FUNCTION_23_0();
    sub_1B2531930(&qword_1EEFD9178, (void (*)(uint64_t))MEMORY[0x1E0CB0E38]);
    OUTLINED_FUNCTION_290_1();
    sub_1B25CCAE4();
    OUTLINED_FUNCTION_107();
    OUTLINED_FUNCTION_8_5();
    OUTLINED_FUNCTION_290_1();
    sub_1B25CCAE4();
    OUTLINED_FUNCTION_10_0();
    v17 = v70;
    v24 = v71;
    sub_1B252BA30();
    v22 = v25;
    v27 = *(_QWORD *)(v25 + 16);
    v26 = *(_QWORD *)(v25 + 24);
    v23 = v20;
    if (v27 >= v26 >> 1)
    {
      OUTLINED_FUNCTION_64_6(v26);
      OUTLINED_FUNCTION_25_7();
      v22 = v46;
    }
    *(_QWORD *)(v22 + 16) = v27 + 1;
    v28 = v22 + 16 * v27;
    *(_QWORD *)(v28 + 32) = v17;
    *(_QWORD *)(v28 + 40) = v24;
  }
  if ((v69 & 1) != 0)
  {
    OUTLINED_FUNCTION_601();
    v29 = v61;
  }
  else
  {
    OUTLINED_FUNCTION_204_1();
    sub_1B25CD2DC();
    OUTLINED_FUNCTION_112_2();
    v70 = 0xD000000000000012;
    v71 = 0x80000001B25D4830;
    sub_1B25CCAE4();
    OUTLINED_FUNCTION_601();
    OUTLINED_FUNCTION_8_5();
    OUTLINED_FUNCTION_133();
    sub_1B25CCE44();
    OUTLINED_FUNCTION_202_1();
    OUTLINED_FUNCTION_69();
    OUTLINED_FUNCTION_10_0();
    if ((OUTLINED_FUNCTION_87_4() & 1) == 0)
    {
      OUTLINED_FUNCTION_217_0();
      OUTLINED_FUNCTION_25_7();
      v22 = v47;
    }
    v29 = v61;
    v31 = *(_QWORD *)(v22 + 16);
    v30 = *(_QWORD *)(v22 + 24);
    if (v31 >= v30 >> 1)
    {
      OUTLINED_FUNCTION_64_6(v30);
      OUTLINED_FUNCTION_25_7();
      v22 = v48;
    }
    *(_QWORD *)(v22 + 16) = v31 + 1;
    v32 = v22 + 16 * v31;
    *(_QWORD *)(v32 + 32) = v17;
    *(_QWORD *)(v32 + 40) = v19;
  }
  if (v60 <= 0xF && ((1 << v60) & 0xCEE3) != 0)
  {
    if ((v23 & 1) == 0)
      goto LABEL_23;
  }
  else if ((v23 & 1) != 0)
  {
    goto LABEL_23;
  }
  OUTLINED_FUNCTION_204_1();
  sub_1B25CD2DC();
  OUTLINED_FUNCTION_112_2();
  v70 = 0xD000000000000019;
  v71 = 0x80000001B25D4850;
  OUTLINED_FUNCTION_369_0();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_8_5();
  OUTLINED_FUNCTION_369_0();
  OUTLINED_FUNCTION_10_0();
  if ((OUTLINED_FUNCTION_87_4() & 1) == 0)
  {
    OUTLINED_FUNCTION_217_0();
    OUTLINED_FUNCTION_25_7();
    v22 = v49;
  }
  OUTLINED_FUNCTION_183_2();
  if (v34)
  {
    OUTLINED_FUNCTION_64_6(v33);
    OUTLINED_FUNCTION_25_7();
    v22 = v50;
  }
  OUTLINED_FUNCTION_135_3();
LABEL_23:
  if ((v29 & 1) == 0)
  {
    OUTLINED_FUNCTION_204_1();
    sub_1B25CD2DC();
    OUTLINED_FUNCTION_112_2();
    v70 = 0xD00000000000001BLL;
    v71 = 0x80000001B25D4870;
    sub_1B2501ADC();
    OUTLINED_FUNCTION_84_4();
    sub_1B25CCAE4();
    OUTLINED_FUNCTION_144();
    OUTLINED_FUNCTION_267();
    OUTLINED_FUNCTION_8_5();
    OUTLINED_FUNCTION_84_4();
    OUTLINED_FUNCTION_202_1();
    OUTLINED_FUNCTION_144();
    OUTLINED_FUNCTION_10_0();
    if ((OUTLINED_FUNCTION_87_4() & 1) == 0)
    {
      OUTLINED_FUNCTION_217_0();
      OUTLINED_FUNCTION_25_7();
      v22 = v53;
    }
    OUTLINED_FUNCTION_183_2();
    if (v34)
    {
      OUTLINED_FUNCTION_64_6(v36);
      OUTLINED_FUNCTION_25_7();
      v22 = v54;
    }
    OUTLINED_FUNCTION_135_3();
    if ((v63 & 1) == 0)
      goto LABEL_25;
LABEL_35:
    swift_release();
    swift_release();
    goto LABEL_36;
  }
  swift_release();
  swift_release();
  if ((v63 & 1) != 0)
    goto LABEL_35;
LABEL_25:
  OUTLINED_FUNCTION_204_1();
  sub_1B25CD2DC();
  OUTLINED_FUNCTION_74_4();
  sub_1B2501ADC();
  OUTLINED_FUNCTION_84_4();
  sub_1B25CCAE4();
  swift_release();
  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_8_5();
  OUTLINED_FUNCTION_84_4();
  OUTLINED_FUNCTION_202_1();
  OUTLINED_FUNCTION_144();
  OUTLINED_FUNCTION_10_0();
  if ((OUTLINED_FUNCTION_87_4() & 1) == 0)
  {
    OUTLINED_FUNCTION_217_0();
    OUTLINED_FUNCTION_25_7();
    v22 = v51;
  }
  v35 = *(_QWORD *)(v22 + 24);
  if (*(_QWORD *)(v22 + 16) >= v35 >> 1)
  {
    OUTLINED_FUNCTION_64_6(v35);
    OUTLINED_FUNCTION_25_7();
    v22 = v52;
  }
  OUTLINED_FUNCTION_135_3();
LABEL_36:
  if ((v68 & 1) != 0)
  {
    swift_release();
    swift_release();
  }
  else
  {
    OUTLINED_FUNCTION_204_1();
    sub_1B25CD2DC();
    OUTLINED_FUNCTION_74_4();
    sub_1B24B2E9C();
    OUTLINED_FUNCTION_84_4();
    sub_1B25CCAE4();
    swift_release();
    OUTLINED_FUNCTION_101_1();
    OUTLINED_FUNCTION_8_5();
    OUTLINED_FUNCTION_84_4();
    OUTLINED_FUNCTION_202_1();
    OUTLINED_FUNCTION_144();
    OUTLINED_FUNCTION_10_0();
    if ((OUTLINED_FUNCTION_87_4() & 1) == 0)
    {
      OUTLINED_FUNCTION_217_0();
      OUTLINED_FUNCTION_25_7();
      v22 = v55;
    }
    OUTLINED_FUNCTION_183_2();
    if (v34)
    {
      OUTLINED_FUNCTION_64_6(v37);
      OUTLINED_FUNCTION_25_7();
      v22 = v56;
    }
    OUTLINED_FUNCTION_135_3();
  }
  if ((v67 & 1) != 0)
  {
    if (!*(_QWORD *)(v22 + 16))
    {
      OUTLINED_FUNCTION_345();
      goto LABEL_56;
    }
  }
  else
  {
    OUTLINED_FUNCTION_204_1();
    sub_1B25CD2DC();
    OUTLINED_FUNCTION_112_2();
    v70 = 0xD000000000000016;
    v71 = 0x80000001B25D3E00;
    OUTLINED_FUNCTION_348_0(v57, v59);
    sub_1B25CCA78();
    OUTLINED_FUNCTION_256_2();
    OUTLINED_FUNCTION_69();
    OUTLINED_FUNCTION_8_5();
    OUTLINED_FUNCTION_348_0(v58, v59);
    sub_1B25CCA78();
    OUTLINED_FUNCTION_202_1();
    OUTLINED_FUNCTION_10_0();
    if ((OUTLINED_FUNCTION_87_4() & 1) == 0)
    {
      OUTLINED_FUNCTION_217_0();
      OUTLINED_FUNCTION_25_7();
    }
    OUTLINED_FUNCTION_183_2();
    if (v34)
    {
      OUTLINED_FUNCTION_64_6(v38);
      OUTLINED_FUNCTION_25_7();
    }
    OUTLINED_FUNCTION_135_3();
  }
  if (qword_1ED36CF48 != -1)
    swift_once();
  v39 = OUTLINED_FUNCTION_147();
  __swift_project_value_buffer(v39, (uint64_t)qword_1ED36D980);
  OUTLINED_FUNCTION_444();
  v40 = sub_1B25CC8B0();
  v41 = sub_1B25CCFD0();
  if (os_log_type_enabled(v40, v41))
  {
    v42 = (uint8_t *)OUTLINED_FUNCTION_246();
    v70 = OUTLINED_FUNCTION_246();
    *(_DWORD *)v42 = 136315138;
    OUTLINED_FUNCTION_178();
    OUTLINED_FUNCTION_404_0();
    sub_1B24EBFA4(&qword_1EEFD7158, &qword_1ED36CFD0);
    v43 = sub_1B25CC940();
    v45 = v44;
    OUTLINED_FUNCTION_345();
    sub_1B2504AB0(v43, v45, &v70);
    OUTLINED_FUNCTION_361_0();
    OUTLINED_FUNCTION_39_1();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_91_1(&dword_1B2494000, v40, v41, "Transcriber.isWorkerUsable: Worker not usable because %s", v42);
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_174();
  }
  OUTLINED_FUNCTION_39_1();

LABEL_56:
  OUTLINED_FUNCTION_7_1();
}

void sub_1B2525E78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char v15;
  unsigned int v16;
  uint64_t v18;
  os_log_type_t v19;
  _WORD *v20;
  uint64_t v21;
  uint64_t v22;
  const char *v23;
  uint64_t v24;
  os_log_type_t v25;
  _WORD *v26;
  uint64_t v27;
  os_log_type_t v28;
  _WORD *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  char v42;
  uint64_t v43;
  os_log_type_t v44;
  _WORD *v45;
  uint64_t v46;
  uint64_t v47;
  const char *v48;
  uint64_t v49;
  os_log_type_t v50;
  _WORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  char v57;
  _QWORD *v58;
  uint64_t v59;
  os_log_type_t v60;
  _WORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  os_log_type_t v65;
  _WORD *v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  int *v70;
  _QWORD v71[2];

  OUTLINED_FUNCTION_59_0();
  v2 = v0;
  v4 = v3;
  v6 = v5;
  v7 = (int *)OUTLINED_FUNCTION_32_4();
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v8, v9);
  OUTLINED_FUNCTION_52_6();
  sub_1B24EAB98(v4, v1, v10);
  v11 = *(_QWORD *)(v2 + OBJC_IVAR____TtC6Speech11Transcriber_transcriptionOptions);
  v12 = v7[13];
  v13 = *(_QWORD *)(v1 + v12);
  v14 = (void *)(v2 + OBJC_IVAR____TtC6Speech11Transcriber_locale);
  OUTLINED_FUNCTION_168();
  OUTLINED_FUNCTION_224_0();
  OUTLINED_FUNCTION_776();
  OUTLINED_FUNCTION_140_1();
  if ((MEMORY[0x1B5E24628](v14, v1) & 1) == 0)
  {
    OUTLINED_FUNCTION_601();
    OUTLINED_FUNCTION_44_1();
    OUTLINED_FUNCTION_365();
    OUTLINED_FUNCTION_107();
    if (qword_1ED36CF48 != -1)
      swift_once();
    v24 = OUTLINED_FUNCTION_147();
    OUTLINED_FUNCTION_6_3(v24, (uint64_t)qword_1ED36D980);
    v25 = OUTLINED_FUNCTION_34_1();
    if (OUTLINED_FUNCTION_186_0(v25))
    {
      v26 = (_WORD *)OUTLINED_FUNCTION_246();
      OUTLINED_FUNCTION_172_2(v26);
      v23 = "Transcriber.makeWorkerUsable: Locale different, cannot make usable";
      goto LABEL_20;
    }
LABEL_21:

    OUTLINED_FUNCTION_389_0(v30, (uint64_t (*)(_QWORD))type metadata accessor for SpeechRecognizerSupportedFeatures);
    v31 = 1;
LABEL_22:
    __swift_storeEnumTagSinglePayload(v6, v31, 1, (uint64_t)v7);
    OUTLINED_FUNCTION_7_1();
    return;
  }
  sub_1B255EE94(v2 + OBJC_IVAR____TtC6Speech11Transcriber_modelOptions, v1 + v7[10]);
  if ((v15 & 1) == 0)
  {
    OUTLINED_FUNCTION_601();
    OUTLINED_FUNCTION_44_1();
    OUTLINED_FUNCTION_365();
    OUTLINED_FUNCTION_107();
    if (qword_1ED36CF48 != -1)
      swift_once();
    v27 = OUTLINED_FUNCTION_147();
    OUTLINED_FUNCTION_6_3(v27, (uint64_t)qword_1ED36D980);
    v28 = OUTLINED_FUNCTION_34_1();
    if (OUTLINED_FUNCTION_186_0(v28))
    {
      v29 = (_WORD *)OUTLINED_FUNCTION_246();
      OUTLINED_FUNCTION_172_2(v29);
      v23 = "Transcriber.makeWorkerUsable: Model options different, cannot make usable";
LABEL_20:
      OUTLINED_FUNCTION_116_2(&dword_1B2494000, v21, v22, v23);
      OUTLINED_FUNCTION_174();
    }
    goto LABEL_21;
  }
  v16 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC6Speech11Transcriber_taskHint);
  if (v16 > 0xF || ((1 << v16) & 0xCEE3) == 0)
  {
    if (*(_BYTE *)(v1 + v7[6]) != 1)
    {
LABEL_8:
      OUTLINED_FUNCTION_601();
      OUTLINED_FUNCTION_44_1();
      OUTLINED_FUNCTION_365();
      OUTLINED_FUNCTION_107();
      if (qword_1ED36CF48 != -1)
        swift_once();
      v18 = OUTLINED_FUNCTION_147();
      OUTLINED_FUNCTION_6_3(v18, (uint64_t)qword_1ED36D980);
      v19 = OUTLINED_FUNCTION_34_1();
      if (OUTLINED_FUNCTION_186_0(v19))
      {
        v20 = (_WORD *)OUTLINED_FUNCTION_246();
        OUTLINED_FUNCTION_172_2(v20);
        v23 = "Transcriber.makeWorkerUsable: Single-utterance hints different, cannot make usable";
        goto LABEL_20;
      }
      goto LABEL_21;
    }
  }
  else if ((*(_BYTE *)(v1 + v7[6]) & 1) != 0)
  {
    goto LABEL_8;
  }
  v69 = v6;
  v70 = v7;
  LOBYTE(v71[0]) = *(_BYTE *)(v2 + OBJC_IVAR____TtC6Speech11Transcriber_taskHint);
  if (*(_QWORD *)(TaskHint.preferredModelTaskNames.getter() + 16))
  {
    OUTLINED_FUNCTION_79_0();
    OUTLINED_FUNCTION_173();
    OUTLINED_FUNCTION_367_0();
    v32 = (void *)sub_1B25CCA0C();
    OUTLINED_FUNCTION_10_0();
    v33 = (void *)SFEntitledAssetTypeForTaskName(v32);

    v68 = (uint64_t *)(v1 + v7[5]);
    sub_1B251BECC(*v68);
    if (v34)
    {
      v35 = (void *)sub_1B25CCA0C();
      OUTLINED_FUNCTION_345();
      v36 = SFEntitledAssetTypeForTaskName(v35);

      if (v33 == (void *)v36)
      {
        sub_1B251CDC8(1u, v11);
        v6 = v69;
        if ((v37 & 1) != 0)
        {
          OUTLINED_FUNCTION_400_0();
          if ((v38 & 1) != 0)
          {
            sub_1B25062E0();
            OUTLINED_FUNCTION_168();
            OUTLINED_FUNCTION_258_2();
            v40 = v39;
            OUTLINED_FUNCTION_258_2();
            v33 = v41;
            OUTLINED_FUNCTION_10_0();
            v42 = sub_1B25802B8(v40);
            v6 = v69;
            swift_release();
            OUTLINED_FUNCTION_38_2();
            if ((v42 & 1) == 0)
            {
              OUTLINED_FUNCTION_601();
              OUTLINED_FUNCTION_44_1();
              OUTLINED_FUNCTION_107();
              if (qword_1ED36CF48 != -1)
                swift_once();
              v43 = OUTLINED_FUNCTION_147();
              OUTLINED_FUNCTION_6_3(v43, (uint64_t)qword_1ED36D980);
              v44 = OUTLINED_FUNCTION_34_1();
              if (OUTLINED_FUNCTION_186_0(v44))
              {
                v45 = (_WORD *)OUTLINED_FUNCTION_246();
                OUTLINED_FUNCTION_172_2(v45);
                v48 = "Transcriber.makeWorkerUsable: Must-match transcription options different, cannot make usable";
                goto LABEL_51;
              }
              goto LABEL_52;
            }
          }
          else
          {
            OUTLINED_FUNCTION_365();
          }
          v71[0] = v13;
          OUTLINED_FUNCTION_224_0();
          sub_1B2526530(v11, (void (*)(char *, _QWORD))sub_1B24E2458);
          sub_1B252E438();
          v53 = v52;
          OUTLINED_FUNCTION_365();
          *(_QWORD *)(v1 + v12) = v53;
        }
        else
        {
          OUTLINED_FUNCTION_365();
          OUTLINED_FUNCTION_107();
        }
        sub_1B25063BC();
        OUTLINED_FUNCTION_258_2();
        v55 = v54;
        OUTLINED_FUNCTION_258_2();
        v33 = v56;
        OUTLINED_FUNCTION_10_0();
        v57 = sub_1B25802B8(v55);
        swift_release();
        OUTLINED_FUNCTION_38_2();
        if ((v57 & 1) != 0)
        {
          v58 = (_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC6Speech11Transcriber_assetsTaskName) + 16);
          OUTLINED_FUNCTION_372_0();
          OUTLINED_FUNCTION_234_0(v58, v71);
          OUTLINED_FUNCTION_373_0();
          sub_1B24E2338(v71, v71[0], v71[1]);
          swift_bridgeObjectRelease();
          if (qword_1ED36CF48 != -1)
            swift_once();
          v59 = OUTLINED_FUNCTION_147();
          OUTLINED_FUNCTION_6_3(v59, (uint64_t)qword_1ED36D980);
          v60 = OUTLINED_FUNCTION_34_1();
          if (OUTLINED_FUNCTION_186_0(v60))
          {
            v61 = (_WORD *)OUTLINED_FUNCTION_246();
            OUTLINED_FUNCTION_172_2(v61);
            OUTLINED_FUNCTION_116_2(&dword_1B2494000, v62, v63, "Transcriber.makeWorkerUsable: Made usable");
            OUTLINED_FUNCTION_174();
          }

          sub_1B24EABC4(v1, v6, (uint64_t (*)(_QWORD))type metadata accessor for SpeechRecognizerSupportedFeatures);
          v31 = 0;
          goto LABEL_53;
        }
        if (qword_1ED36CF48 != -1)
          swift_once();
        v64 = OUTLINED_FUNCTION_147();
        OUTLINED_FUNCTION_6_3(v64, (uint64_t)qword_1ED36D980);
        v65 = OUTLINED_FUNCTION_34_1();
        if (OUTLINED_FUNCTION_186_0(v65))
        {
          v66 = (_WORD *)OUTLINED_FUNCTION_246();
          OUTLINED_FUNCTION_172_2(v66);
          v48 = "Transcriber.makeWorkerUsable: Must-match reporting options different, cannot make usable";
LABEL_51:
          OUTLINED_FUNCTION_116_2(&dword_1B2494000, v46, v47, v48);
          OUTLINED_FUNCTION_174();
        }
      }
      else
      {
        OUTLINED_FUNCTION_601();
        OUTLINED_FUNCTION_44_1();
        OUTLINED_FUNCTION_365();
        OUTLINED_FUNCTION_107();
        v6 = v69;
        if (qword_1ED36CF48 != -1)
          swift_once();
        v49 = OUTLINED_FUNCTION_147();
        OUTLINED_FUNCTION_6_3(v49, (uint64_t)qword_1ED36D980);
        v50 = OUTLINED_FUNCTION_34_1();
        if (OUTLINED_FUNCTION_186_0(v50))
        {
          v51 = (_WORD *)OUTLINED_FUNCTION_246();
          OUTLINED_FUNCTION_172_2(v51);
          v48 = "Transcriber.makeWorkerUsable: Asset types for hints different, cannot make usable";
          goto LABEL_51;
        }
      }
LABEL_52:

      OUTLINED_FUNCTION_389_0(v67, (uint64_t (*)(_QWORD))type metadata accessor for SpeechRecognizerSupportedFeatures);
      v31 = 1;
LABEL_53:
      v7 = v70;
      goto LABEL_22;
    }
  }
  else
  {
    OUTLINED_FUNCTION_107();
    OUTLINED_FUNCTION_173();
    __break(1u);
  }
  OUTLINED_FUNCTION_107();
  __break(1u);
}

void sub_1B2526524(uint64_t a1)
{
  sub_1B2526530(a1, (void (*)(char *, _QWORD))sub_1B24E2474);
}

void sub_1B2526530(uint64_t a1, void (*a2)(char *, _QWORD))
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t i;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v4 = 0;
  v5 = a1 + 56;
  OUTLINED_FUNCTION_55_4();
  v8 = v7 & v6;
  v10 = (unint64_t)(v9 + 63) >> 6;
  if ((v7 & v6) == 0)
    goto LABEL_3;
LABEL_2:
  OUTLINED_FUNCTION_177_2();
  for (i = v11 | (v4 << 6); ; i = v17 + (v4 << 6))
  {
    a2(&v18, *(unsigned __int8 *)(*(_QWORD *)(a1 + 48) + i));
    if (v8)
      goto LABEL_2;
LABEL_3:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v13 >= v10)
      goto LABEL_21;
    ++v4;
    if (!*(_QWORD *)(v5 + 8 * v13))
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v10)
        goto LABEL_21;
      if (!*(_QWORD *)(v5 + 8 * v4))
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v10)
          goto LABEL_21;
        if (!*(_QWORD *)(v5 + 8 * v4))
        {
          v4 = v13 + 3;
          if (v13 + 3 >= v10)
            goto LABEL_21;
          if (!*(_QWORD *)(v5 + 8 * v4))
            break;
        }
      }
    }
LABEL_18:
    OUTLINED_FUNCTION_124_3();
    v8 = v16 & v15;
  }
  v14 = v13 + 4;
  if (v14 >= v10)
  {
LABEL_21:
    swift_release();
    return;
  }
  if (*(_QWORD *)(v5 + 8 * v14))
  {
    v4 = v14;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v10)
      goto LABEL_21;
    ++v14;
    if (*(_QWORD *)(v5 + 8 * v4))
      goto LABEL_18;
  }
LABEL_23:
  __break(1u);
}

void sub_1B2526660(uint64_t a1)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t i;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v2 = 0;
  v3 = a1 + 56;
  OUTLINED_FUNCTION_55_4();
  v6 = v5 & v4;
  v8 = (unint64_t)(v7 + 63) >> 6;
  if ((v5 & v4) == 0)
    goto LABEL_3;
LABEL_2:
  OUTLINED_FUNCTION_370_0();
  for (i = v9 | (v2 << 6); ; i = v15 + (v2 << 6))
  {
    sub_1B24E2970(&v16, *(_BYTE *)(*(_QWORD *)(a1 + 48) + i));
    if (v6)
      goto LABEL_2;
LABEL_3:
    v11 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v11 >= v8)
      goto LABEL_21;
    ++v2;
    if (!*(_QWORD *)(v3 + 8 * v11))
    {
      v2 = v11 + 1;
      if (v11 + 1 >= v8)
        goto LABEL_21;
      if (!*(_QWORD *)(v3 + 8 * v2))
      {
        v2 = v11 + 2;
        if (v11 + 2 >= v8)
          goto LABEL_21;
        if (!*(_QWORD *)(v3 + 8 * v2))
        {
          v2 = v11 + 3;
          if (v11 + 3 >= v8)
            goto LABEL_21;
          if (!*(_QWORD *)(v3 + 8 * v2))
            break;
        }
      }
    }
LABEL_18:
    OUTLINED_FUNCTION_124_3();
    v6 = v14 & v13;
  }
  v12 = v11 + 4;
  if (v12 >= v8)
  {
LABEL_21:
    swift_release();
    return;
  }
  if (*(_QWORD *)(v3 + 8 * v12))
  {
    v2 = v12;
    goto LABEL_18;
  }
  while (1)
  {
    v2 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v2 >= v8)
      goto LABEL_21;
    ++v12;
    if (*(_QWORD *)(v3 + 8 * v2))
      goto LABEL_18;
  }
LABEL_23:
  __break(1u);
}

void sub_1B2526784()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  os_unfair_lock_s *v12;
  os_unfair_lock_s *v13;
  __int128 v14;
  uint64_t inited;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  __int16 v23;

  OUTLINED_FUNCTION_59_0();
  v3 = v0;
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6B20);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v6, v7);
  OUTLINED_FUNCTION_42_3();
  v8 = OUTLINED_FUNCTION_23_0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  OUTLINED_FUNCTION_229();
  v11 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC6Speech11Transcriber_assetsTaskName);
  v12 = v11 + 4;
  v13 = v11 + 8;
  os_unfair_lock_lock(v11 + 8);
  OUTLINED_FUNCTION_234_0(v12, &v21);
  os_unfair_lock_unlock(v13);
  v14 = v21;
  OUTLINED_FUNCTION_311(v2, v3 + OBJC_IVAR____TtC6Speech11Transcriber_locale, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED36D150);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B25DB5B0;
  *(_OWORD *)(inited + 32) = v14;
  sub_1B2506144();
  v17 = v16;
  LODWORD(v13) = (*(unsigned __int8 *)(v3 + OBJC_IVAR____TtC6Speech11Transcriber_taskHint) > 0xFu) | (0x311Cu >> *(_BYTE *)(v3 + OBJC_IVAR____TtC6Speech11Transcriber_taskHint));
  sub_1B24EBCB8(v3 + OBJC_IVAR____TtC6Speech11Transcriber_modelOptions, v1, &qword_1EEFD6B20);
  v21 = 0uLL;
  v22 = 0;
  v23 = 256;
  v18 = *(_QWORD *)(v3 + OBJC_IVAR____TtC6Speech11Transcriber_transcriptionOptions);
  v19 = *(_QWORD *)(v3 + OBJC_IVAR____TtC6Speech11Transcriber_reportingOptions);
  v20 = *(_QWORD *)(v3 + OBJC_IVAR____TtC6Speech11Transcriber_attributeOptions);
  OUTLINED_FUNCTION_776();
  OUTLINED_FUNCTION_224_0();
  OUTLINED_FUNCTION_95_1();
  sub_1B255F76C(v2, v17, v13 & 1, SBYTE8(v14), 0, 0, v1, &v21, v5, v18, v19, v20);
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_1B252692C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;

  result = a1[1];
  if (result)
  {
    *a2 = *a1;
    a2[1] = result;
    return swift_bridgeObjectRetain();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1B2526958(void *a1)
{
  if (object_getClass(a1) == (Class)_TtC6Speech22SpeechRecognizerWorker && a1 != 0)
  {
    swift_unknownObjectRetain();
    sub_1B2525354();
    OUTLINED_FUNCTION_84_1();
  }
  OUTLINED_FUNCTION_262();
}

void sub_1B25269C0()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC6Speech11Transcriber__worker) + 24) = 1;
}

void Transcriber.recognizerObjectIdentifier.getter()
{
  if (sub_1B251CD30())
    swift_release();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1B2526A08@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, int a10, unsigned __int8 *a11, uint64_t *a12, uint64_t *a13)
{
  uint64_t v13;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  char v76;
  int v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  char **v81;
  char **v82;
  char **v83;
  uint64_t v84;
  char **v85;
  _QWORD *v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  char **v99;
  uint64_t v100;
  NSObject *v101;
  os_log_type_t v102;
  uint8_t *v103;
  _QWORD *v104;
  id v105;
  id v106;
  uint64_t v107;
  _QWORD *v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  id v114;
  uint64_t v115;
  id v116;
  void *v117;
  _QWORD *v118;
  id v119;
  uint64_t v120;
  uint64_t v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  uint64_t v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned __int8 v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  id v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  uint64_t v141;
  char v142;
  char v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  uint64_t v148;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  _QWORD *v160;
  uint64_t v161;
  int v162;
  uint64_t v163;
  _QWORD *v164;
  int v165;
  char *v166;
  uint64_t v167;
  _QWORD *v168;
  _QWORD *v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  _QWORD *v178;
  uint64_t v179;
  void (*v180)(char *, char *, uint64_t);
  char v181;
  _QWORD __src[20];
  unint64_t v183;

  v173 = a8;
  v172 = a7;
  v171 = a6;
  v164 = a5;
  v161 = a4;
  v163 = a3;
  v159 = *a12;
  v16 = a12[1];
  v158 = a12[2];
  v157 = a12[3];
  v17 = a12[4];
  v156 = a12[5];
  v155 = *a1;
  v18 = a1[1];
  v154 = a1[2];
  v153 = a1[3];
  v19 = a1[4];
  v152 = a1[5];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7520);
  MEMORY[0x1E0C80A78](v20, v21);
  v151 = (char *)&v150 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = sub_1B25CC760();
  v167 = *(_QWORD *)(v170 - 8);
  v24 = MEMORY[0x1E0C80A78](v170, v23);
  v150 = (char *)&v150 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24, v26);
  v166 = (char *)&v150 - v27;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7340);
  v30 = MEMORY[0x1E0C80A78](v28, v29);
  v169 = (char **)((char *)&v150 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v30, v32);
  v168 = (char **)((char *)&v150 - v33);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6968);
  MEMORY[0x1E0C80A78](v34, v35);
  v37 = (char *)&v150 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_1B25CC3B8();
  v39 = *(_QWORD *)(v38 - 8);
  v41 = MEMORY[0x1E0C80A78](v38, v40);
  v43 = (char *)&v150 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v41, v44);
  v46 = (char *)&v150 - v45;
  v47 = *a11;
  v48 = *(_QWORD *)(v13 + OBJC_IVAR____TtC6Speech11Transcriber_attributeOptions);
  swift_bridgeObjectRetain();
  v165 = v47;
  if (v47)
    v176 = v48;
  else
    v176 = sub_1B252EA78((uint64_t)&unk_1E647B9D0, v48);
  sub_1B251CDC8(1u, *(_QWORD *)(v13 + OBJC_IVAR____TtC6Speech11Transcriber_reportingOptions));
  v49 = a2;
  v160 = a9;
  v162 = v50;
  if ((v50 & 1) != 0)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_1B25803F4(1);
    swift_bridgeObjectRetain();
    sub_1B251CA30();
    v49 = v51;
  }
  v180 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
  if (v180)
  {
    v174 = v49 + 32;
    swift_bridgeObjectRetain();
    v52 = 0;
    v179 = MEMORY[0x1E0DEE9D8];
    v175 = v49;
    do
    {
      v53 = *(_QWORD *)(v49 + 8 * v52 + 32);
      if (v53 >> 62)
      {
        swift_bridgeObjectRetain();
        v54 = sub_1B25CD474();
      }
      else
      {
        v54 = *(_QWORD *)((v53 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
      }
      if (v54)
      {
        sub_1B2527AD8();
        v55 = 0;
      }
      else
      {
        v55 = 1;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v37, v55, 1, v38);
      swift_bridgeObjectRelease();
      if (__swift_getEnumTagSinglePayload((uint64_t)v37, 1, v38) == 1)
      {
        sub_1B2534D88((uint64_t)v37, &qword_1EEFD6968);
      }
      else
      {
        v56 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
        v56(v46, v37, v38);
        v56(v43, v46, v38);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B252C128();
          v179 = v59;
        }
        v57 = *(_QWORD *)(v179 + 16);
        if (v57 >= *(_QWORD *)(v179 + 24) >> 1)
        {
          sub_1B252C128();
          v179 = v60;
        }
        v58 = v179;
        *(_QWORD *)(v179 + 16) = v57 + 1;
        v56((char *)(v58+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(_QWORD *)(v39 + 72) * v57), v43, v38);
      }
      v49 = v175;
      ++v52;
    }
    while (v180 != (void (*)(char *, char *, uint64_t))v52);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v61 = 0;
    v62 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v63 = *(_QWORD *)(v174 + 8 * v61);
      if (v63 >> 62)
      {
        swift_bridgeObjectRetain_n();
        v70 = sub_1B25CD474();
        swift_bridgeObjectRelease();
        if (v70)
        {
          swift_bridgeObjectRetain();
          v64 = sub_1B25CD474();
          swift_bridgeObjectRelease();
          if (v64)
          {
LABEL_26:
            v183 = MEMORY[0x1E0DEE9D8];
            sub_1B25055E8(0, v64 & ~(v64 >> 63), 0);
            if (v64 < 0)
            {
              __break(1u);
              goto LABEL_83;
            }
            v177 = v61;
            v178 = v62;
            v65 = 0;
            v52 = v183;
            if ((v63 & 0xC000000000000001) != 0)
            {
LABEL_28:
              v66 = (id)MEMORY[0x1B5E252C4](v65, v63);
              goto LABEL_30;
            }
            while (1)
            {
              v66 = *(id *)(v63 + 8 * v65 + 32);
LABEL_30:
              sub_1B2527DB0(v66, (uint64_t)__src);
              v183 = v52;
              v68 = *(_QWORD *)(v52 + 16);
              v67 = *(_QWORD *)(v52 + 24);
              if (v68 >= v67 >> 1)
              {
                sub_1B25055E8(v67 > 1, v68 + 1, 1);
                v52 = v183;
              }
              *(_QWORD *)(v52 + 16) = v68 + 1;
              memcpy((void *)(v52 + 160 * v68 + 32), __src, 0xA0uLL);
              if (v64 - 1 == v65)
                break;
              ++v65;
              if ((v63 & 0xC000000000000001) != 0)
                goto LABEL_28;
            }
            swift_bridgeObjectRelease();
            v62 = v178;
            v61 = v177;
          }
          else
          {
            swift_bridgeObjectRelease();
            v52 = MEMORY[0x1E0DEE9D8];
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B252BE90();
            v62 = v71;
          }
          v69 = v62[2];
          if (v69 >= v62[3] >> 1)
          {
            sub_1B252BE90();
            v62 = v72;
          }
          v62[2] = v69 + 1;
          v62[v69 + 4] = v52;
          goto LABEL_45;
        }
      }
      else
      {
        v64 = *(_QWORD *)((v63 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v64)
          goto LABEL_26;
      }
      swift_bridgeObjectRelease();
LABEL_45:
      if ((void (*)(char *, char *, uint64_t))++v61 == v180)
      {
        v73 = swift_bridgeObjectRelease_n();
        goto LABEL_48;
      }
    }
  }
  v73 = swift_bridgeObjectRelease();
  v62 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v179 = MEMORY[0x1E0DEE9D8];
LABEL_48:
  v178 = v62;
  v75 = v162;
  v183 = MEMORY[0x1E0DEE9D8];
  MEMORY[0x1E0C80A78](v73, v74);
  *(&v150 - 6) = (char *)&v183;
  *((_BYTE *)&v150 - 40) = v76 & 1;
  *(char **)((char *)&v150 - 36) = v171;
  *((_DWORD *)&v150 - 7) = v78;
  *((_DWORD *)&v150 - 6) = v77;
  *(char **)((char *)&v150 - 20) = (char *)v173;
  *((_DWORD *)&v150 - 3) = a10;
  *(&v150 - 1) = (char *)v176;
  v79 = swift_bridgeObjectRetain();
  v80 = sub_1B251C56C(v79, (void (*)(uint64_t, uint64_t))sub_1B2534B00);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v177 = v80;
  if ((v75 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1B2530C3C();
    v82 = v81;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B2580400(1);
    swift_bridgeObjectRetain();
    sub_1B251C97C();
    v82 = v83;
  }
  v62 = v164;
  v84 = v170;
  if (*(_QWORD *)(v183 + 16))
  {
    __src[2] = 0;
    __src[0] = v82;
    __src[1] = 0;
    v85 = v82;
    swift_bridgeObjectRetain();
    v86 = v169;
    sub_1B251C168(v169);
    v62 = v168;
    sub_1B24EBCE4((uint64_t)v86, (uint64_t)v168, &qword_1EEFD7340);
    v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD9AA8);
    if (__swift_getEnumTagSinglePayload((uint64_t)v62, 1, v87) != 1)
    {
      v89 = v167;
      v180 = *(void (**)(char *, char *, uint64_t))(v167 + 32);
      v90 = (uint64_t)v151;
      v91 = v150;
      v92 = v166;
      v52 = (unint64_t)v85;
      while (1)
      {
        v93 = *v62;
        v180(v92, (char *)v62 + *(int *)(v87 + 48), v84);
        v94 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v89 + 16))(v90, v92, v84);
        MEMORY[0x1E0C80A78](v94, v95);
        *(&v150 - 2) = (char *)&v183;
        v96 = sub_1B25287BC(v90, sub_1B2534B3C, (uint64_t)(&v150 - 4));
        v97 = sub_1B251ACA0(v96);
        swift_bridgeObjectRelease();
        MEMORY[0x1B5E24700](v97);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B253075C();
          v52 = (unint64_t)v99;
        }
        v84 = v170;
        v89 = v167;
        v92 = v166;
        if ((v93 & 0x8000000000000000) != 0)
          break;
        if (v93 >= *(_QWORD *)(v52 + 16))
          goto LABEL_84;
        (*(void (**)(unint64_t, char *, uint64_t))(v167 + 40))(v52+ ((*(unsigned __int8 *)(v167 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80))+ *(_QWORD *)(v167 + 72) * v93, v91, v170);
        (*(void (**)(char *, uint64_t))(v89 + 8))(v92, v84);
        v98 = v169;
        sub_1B251C168(v169);
        v62 = v168;
        sub_1B24EBCE4((uint64_t)v98, (uint64_t)v168, &qword_1EEFD7340);
        v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD9AA8);
        if (__swift_getEnumTagSinglePayload((uint64_t)v62, 1, v87) == 1)
          goto LABEL_54;
      }
LABEL_83:
      __break(1u);
LABEL_84:
      __break(1u);
      goto LABEL_85;
    }
    v52 = (unint64_t)v85;
LABEL_54:
    v180 = (void (*)(char *, char *, uint64_t))v52;
    swift_bridgeObjectRelease();
    v62 = v164;
  }
  else
  {
    v180 = (void (*)(char *, char *, uint64_t))v82;
  }
  v52 = (unint64_t)&selRef_alternativeConfidences;
  if ((v165 - 3) > 1)
    goto LABEL_71;
  if (!v62 || (v88 = objc_msgSend(v62, sel_audioAnalytics)) == 0)
  {
    if (qword_1ED36CF48 == -1)
      goto LABEL_68;
    goto LABEL_86;
  }

  while (1)
  {
    v104 = v62;
    v105 = objc_msgSend(v104, *(SEL *)(v52 + 240));
    v106 = objc_msgSend(v105, sel_speechRecognitionFeatures);
    sub_1B24B3050(0, (unint64_t *)&qword_1EEFD7478);
    v107 = sub_1B25CC8F8();

    v108 = sub_1B2530A60(v107);
    swift_bridgeObjectRelease();
    v109 = objc_msgSend(v105, sel_acousticFeatures);
    sub_1B24B3050(0, &qword_1EEFD73C0);
    v110 = sub_1B25CC8F8();

    sub_1B2530830(v110);
    v112 = v111;
    swift_bridgeObjectRelease();
    objc_msgSend(v105, "snr");
    v175 = v113;

    v114 = objc_msgSend(v104, sel_endOfSentenceLikelihood);
    objc_msgSend(v114, sel_doubleValue);
    v174 = v115;

    v116 = objc_msgSend(v104, sel_latticeMitigatorResult);
    v176 = v112;
    if (v116)
    {
      v117 = v116;
      v118 = v108;
      v119 = objc_msgSend(v116, sel_version);
      v173 = sub_1B25CCA18();
      v121 = v120;

      objc_msgSend(v117, sel_score);
      v123 = v122;
      objc_msgSend(v117, sel_threshold);
      v125 = v124;
      objc_msgSend(v117, sel_calibrationScale);
      v126 = v18;
      v128 = v127;
      objc_msgSend(v117, sel_calibrationOffset);
      v130 = v129;
      v131 = objc_msgSend(v117, sel_processed);

      v52 = v123 | ((unint64_t)v125 << 32);
      v132 = v128;
      v18 = v126;
      v133 = v132 | ((unint64_t)v130 << 32);
    }
    else
    {
      v118 = v108;
      v173 = 0;
      v121 = 0;
      v52 = 0;
      v133 = 0;
      v131 = 0;
    }
    v62 = v178;
    v135 = objc_msgSend(v104, sel_numOneBestTokensExcludingTriggerPhrase);
    v141 = sub_1B24BFBAC();
    v143 = v142;

    v134 = (v143 & 1) != 0 ? 0 : v141;
    if ((v134 & 0x8000000000000000) == 0)
      break;
LABEL_85:
    __break(1u);
LABEL_86:
    swift_once();
LABEL_68:
    v100 = sub_1B25CC8C8();
    __swift_project_value_buffer(v100, (uint64_t)qword_1ED36D980);
    v101 = sub_1B25CC8B0();
    v102 = sub_1B25CCFDC();
    if (os_log_type_enabled(v101, v102))
    {
      v103 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v103 = 0;
      _os_log_impl(&dword_1B2494000, v101, v102, "Unexpected nil audio analytics!", v103, 2u);
      MEMORY[0x1B5E262B4](v103, -1, -1);
    }

LABEL_71:
    if (!v62)
    {
      v134 = 0;
      v135 = 0;
      v136 = 0;
      v121 = 0;
      v52 = 0;
      v133 = 0;
      v131 = 0;
      v118 = 0;
      v137 = 0;
      v138 = 0;
      v139 = 0;
      v140 = 1;
      v62 = v178;
      goto LABEL_81;
    }
  }
  v140 = 0;
  v137 = v176;
  v139 = v175;
  v138 = v174;
  v136 = v173;
LABEL_81:
  v144 = *a13;
  v145 = a13[2];
  LOBYTE(__src[0]) = v140;
  v181 = v140;
  v146 = v160;
  *v160 = v155;
  v146[1] = v18;
  v146[2] = v154;
  v146[3] = v153;
  v146[4] = v19;
  v146[5] = v152;
  v146[6] = v144;
  v146[7] = a13[1];
  v147 = v179;
  v146[8] = v145;
  v146[9] = v147;
  v148 = v177;
  v146[10] = v62;
  v146[11] = v148;
  v146[12] = v180;
  *((_BYTE *)v146 + 104) = v165;
  *(_QWORD *)((char *)v146 + 108) = v159;
  *(_QWORD *)((char *)v146 + 116) = v16;
  *(_QWORD *)((char *)v146 + 124) = v158;
  *(_QWORD *)((char *)v146 + 132) = v157;
  *(_QWORD *)((char *)v146 + 140) = v17;
  *(_QWORD *)((char *)v146 + 148) = v156;
  v146[20] = v118;
  v146[21] = v137;
  v146[22] = v139;
  v146[23] = v138;
  *((_BYTE *)v146 + 192) = __src[0];
  v146[25] = v136;
  v146[26] = v121;
  v146[27] = v52;
  v146[28] = v133;
  *((_BYTE *)v146 + 232) = v131;
  v146[30] = v135;
  v146[31] = v134;
  *((_BYTE *)v146 + 256) = v181;
  return swift_bridgeObjectRelease();
}

void sub_1B2527AD8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t (*v28)(uint64_t, uint64_t, uint64_t);
  unint64_t v29;
  unint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  void (*v34)(unint64_t, uint64_t, uint64_t);
  uint64_t v35;
  unint64_t v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;

  OUTLINED_FUNCTION_59_0();
  v47 = v2;
  v46 = v3;
  v44 = v4;
  v45 = v5;
  v43 = v6;
  v42 = v7;
  v9 = v8;
  v11 = v10;
  v12 = OUTLINED_FUNCTION_99_4();
  v48 = *(_QWORD *)(v12 - 8);
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v13, v14);
  OUTLINED_FUNCTION_434();
  v17 = v15 - v16;
  MEMORY[0x1E0C80A78](v18, v19);
  OUTLINED_FUNCTION_416_0();
  MEMORY[0x1E0C80A78](v20, v21);
  OUTLINED_FUNCTION_417();
  MEMORY[0x1E0C80A78](v22, v23);
  v25 = (uint64_t)&v35 - v24;
  if (v9 >> 62)
    goto LABEL_25;
  v26 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v26)
  {
    while (1)
    {
      sub_1B24B2E98(0, (v9 & 0xC000000000000001) == 0, v9);
      v41 = v9 & 0xC000000000000001;
      if ((v9 & 0xC000000000000001) != 0)
      {
        OUTLINED_FUNCTION_61_6();
        OUTLINED_FUNCTION_332_0();
      }
      v27 = *(id *)(v9 + 32);
      OUTLINED_FUNCTION_208_2();

      v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v48 + 16);
      v38 = v25;
      OUTLINED_FUNCTION_286_0(v0, v25, v28);
      if (v26 == 1)
        break;
      v36 = v1;
      v37 = v11;
      v39 = v9 + 32;
      v40 = v9 & 0xFFFFFFFFFFFFFF8;
      OUTLINED_FUNCTION_444();
      v29 = 0;
      v25 = 5;
      while (1)
      {
        v1 = v25 - 4;
        if (v41)
          OUTLINED_FUNCTION_332_0();
        if ((v29 & 0x8000000000000000) != 0)
          break;
        v30 = *(_QWORD *)(v40 + 16);
        if (v29 >= v30)
          goto LABEL_23;
        if (v1 >= v30)
          goto LABEL_24;
        v31 = *(void **)(v9 + 8 * v25);
        v11 = *(id *)(v39 + 8 * v29);
        v32 = v31;
        if (v29 == v26)
        {
          __break(1u);
LABEL_21:
          __break(1u);
          break;
        }
        if (__OFADD__(v1, 1))
          goto LABEL_21;
        if (v25 - 3 == v26)
          v29 = v26;
        else
          v29 = v25 - 4;
        OUTLINED_FUNCTION_208_2();
        sub_1B2531930(&qword_1EEFD6960, (void (*)(uint64_t))MEMORY[0x1E0CAF240]);
        sub_1B25CC3A0();
        OUTLINED_FUNCTION_249_0(v17, *(uint64_t (**)(uint64_t, uint64_t))(v48 + 8));

        ++v25;
        if (v29 == v26)
        {
          OUTLINED_FUNCTION_101_1();
          v1 = v36;
          v11 = v37;
          goto LABEL_19;
        }
      }
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      OUTLINED_FUNCTION_61_6();
      v26 = sub_1B25CD474();
      OUTLINED_FUNCTION_101_1();
      if (!v26)
        goto LABEL_26;
    }
    OUTLINED_FUNCTION_61_6();
LABEL_19:
    v33 = v48;
    v34 = *(void (**)(unint64_t, uint64_t, uint64_t))(v48 + 32);
    v34(v1, v0, v12);
    OUTLINED_FUNCTION_101_1();
    OUTLINED_FUNCTION_249_0(v38, *(uint64_t (**)(uint64_t, uint64_t))(v33 + 8));
    v34((unint64_t)v11, v1, v12);
    OUTLINED_FUNCTION_7_1();
  }
  else
  {
LABEL_26:
    OUTLINED_FUNCTION_118_2();
  }
}

void sub_1B2527DA4()
{
  OUTLINED_FUNCTION_101_1();
  JUMPOUT(0x1B2527BB0);
}

void sub_1B2527DB0(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  Float64 v17;
  CMTime *v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  Float64 v27;
  CMTime *v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  Float64 v37;
  CMTime *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  id v51;
  id v52;
  char v53;
  id v54;
  char v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  CMTime *v91;
  CMTime *v92;
  CMTime *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;

  v5 = objc_msgSend(a1, sel_tokenName);
  v6 = sub_1B25CCA18();
  v83 = v7;
  v87 = v6;

  v9 = OUTLINED_FUNCTION_39_0(v8, sel_start);
  v18 = OUTLINED_FUNCTION_202_2(v9, v10, v11, v12, v13, v14, v15, v16, v17, v61, v65, v68, v71, v74, v77, v80, v83, v87, v91);
  v19 = OUTLINED_FUNCTION_39_0((uint64_t)v18, "end");
  v28 = OUTLINED_FUNCTION_202_2(v19, v20, v21, v22, v23, v24, v25, v26, v27, v62, v66, v69, v72, v75, (uint64_t)v92, v96, v84, v88, v92);
  v29 = OUTLINED_FUNCTION_39_0((uint64_t)v28, sel_silenceStart);
  v38 = OUTLINED_FUNCTION_202_2(v29, v30, v31, v32, v33, v34, v35, v36, v37, v63, v67, v70, (uint64_t)v93, v96, v78, v81, v85, v89, v93);
  v39 = OUTLINED_FUNCTION_39_0((uint64_t)v38, sel_confidence);
  v41 = v40;
  v42 = OUTLINED_FUNCTION_39_0((uint64_t)v39, sel_hasSpaceAfter);
  v64 = (char)v42;
  v43 = OUTLINED_FUNCTION_39_0((uint64_t)v42, sel_hasSpaceBefore);
  LOBYTE(v5) = (_BYTE)v43;
  v44 = OUTLINED_FUNCTION_39_0((uint64_t)v43, sel_phoneSequence);
  v45 = sub_1B25CCA18();
  v47 = v46;

  v49 = OUTLINED_FUNCTION_39_0(v48, sel_ipaPhoneSequence);
  sub_1B25CCA18();
  OUTLINED_FUNCTION_401_0();

  v51 = OUTLINED_FUNCTION_39_0(v50, sel_appendedAutoPunctuation);
  LOBYTE(v49) = (_BYTE)v51;
  v52 = OUTLINED_FUNCTION_39_0((uint64_t)v51, sel_prependedAutoPunctuation);
  v53 = (char)v52;
  v54 = OUTLINED_FUNCTION_39_0((uint64_t)v52, sel_isModifiedByAutoPunctuation);
  v55 = (char)v54;
  v56 = OUTLINED_FUNCTION_39_0((uint64_t)v54, sel_graphCost);
  v58 = v57;
  OUTLINED_FUNCTION_39_0((uint64_t)v56, sel_acousticCost);
  v60 = v59;

  *(_QWORD *)a2 = v90;
  *(_QWORD *)(a2 + 8) = v86;
  *(_QWORD *)(a2 + 16) = v79;
  *(_QWORD *)(a2 + 24) = v95;
  *(_QWORD *)(a2 + 32) = v82;
  *(_QWORD *)(a2 + 40) = v73;
  *(_QWORD *)(a2 + 48) = v95;
  *(_QWORD *)(a2 + 56) = v76;
  *(_QWORD *)(a2 + 64) = v94;
  *(_QWORD *)(a2 + 72) = v95;
  *(_QWORD *)(a2 + 80) = v96;
  *(_QWORD *)(a2 + 88) = v41;
  *(_BYTE *)(a2 + 96) = v64;
  *(_BYTE *)(a2 + 97) = (_BYTE)v5;
  *(_QWORD *)(a2 + 104) = v45;
  *(_QWORD *)(a2 + 112) = v47;
  *(_QWORD *)(a2 + 120) = v44;
  *(_QWORD *)(a2 + 128) = v2;
  *(_BYTE *)(a2 + 136) = (_BYTE)v49;
  *(_BYTE *)(a2 + 137) = v53;
  *(_BYTE *)(a2 + 138) = v55;
  *(_QWORD *)(a2 + 144) = v58;
  *(_QWORD *)(a2 + 152) = v60;
}

uint64_t sub_1B2527FD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (*(_QWORD *)(a2 + 16))
  {
    if ((a4 & 1) != 0)
    {
      sub_1B25803F4(1);
      swift_bridgeObjectRetain();
      sub_1B251CA30();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    sub_1B2528120();
    v10 = 0;
  }
  else
  {
    sub_1B2568CE0();
    v8 = *(_QWORD *)(*a3 + 16);
    sub_1B2568DE4(v8);
    v9 = *a3;
    *(_QWORD *)(v9 + 16) = v8 + 1;
    *(_QWORD *)(v9 + 8 * v8 + 32) = a1;
    *a3 = v9;
    v10 = 1;
  }
  v11 = type metadata accessor for TranscriptionSegment(0);
  return __swift_storeEnumTagSinglePayload(a5, v10, 1, v11);
}

void sub_1B2528120()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BOOL8 v31;
  char v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  _BOOL8 v55;
  unint64_t v56;
  unint64_t v58;
  int *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[20];
  uint64_t v69;

  OUTLINED_FUNCTION_59_0();
  v66 = v2;
  v65 = v3;
  v64 = v4;
  v63 = v5;
  v7 = v6;
  v60 = v8;
  v9 = OUTLINED_FUNCTION_99_4();
  OUTLINED_FUNCTION_175_2();
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (unint64_t)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6968);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v14, v15);
  OUTLINED_FUNCTION_56_0();
  if (qword_1ED36CF48 != -1)
    goto LABEL_60;
  while (1)
  {
    v16 = OUTLINED_FUNCTION_147();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ED36D980);
    v17 = *(_QWORD *)(v7 + 16);
    OUTLINED_FUNCTION_272_1();
    sub_1B24B38AC(v18, v19, v20, v21, 1220, v22);
    v23 = *(_QWORD *)(v7 + 16);
    v62 = v7;
    if (v23)
    {
      v59 = (int *)v1;
      v61 = v17;
      v68[0] = MEMORY[0x1E0DEE9D8];
      sub_1B2505640(0, v23, 0);
      v24 = v68[0];
      v25 = v7 + 32;
      do
      {
        v26 = v9;
        OUTLINED_FUNCTION_61_6();
        sub_1B2527AD8();
        OUTLINED_FUNCTION_101_1();
        v68[0] = v24;
        v28 = *(_QWORD *)(v24 + 16);
        v27 = *(_QWORD *)(v24 + 24);
        if (v28 >= v27 >> 1)
        {
          v31 = OUTLINED_FUNCTION_64_6(v27);
          sub_1B2505640(v31, v28 + 1, 1);
          v24 = v68[0];
        }
        *(_QWORD *)(v24 + 16) = v28 + 1;
        OUTLINED_FUNCTION_188_2();
        v30 = v29 + *(_QWORD *)(v0 + 72) * v28;
        v9 = v26;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 32))(v30, v13, v26);
        v25 += 8;
        --v23;
      }
      while (v23);
      OUTLINED_FUNCTION_329_0();
      v7 = v62;
      v17 = v61;
      v1 = (uint64_t)v59;
    }
    else
    {
      OUTLINED_FUNCTION_329_0();
      v24 = MEMORY[0x1E0DEE9D8];
    }
    sub_1B251C090(v24, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAF240], v1);
    OUTLINED_FUNCTION_118_0(v1, 1, v9);
    if (v32)
      goto LABEL_67;
    v33 = v60;
    OUTLINED_FUNCTION_71_6(v60, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 32));
    sub_1B24D8E4C(1, v24);
    sub_1B251C97C();
    v35 = v34;
    v59 = (int *)OUTLINED_FUNCTION_192_1();
    *(_QWORD *)(v33 + v59[5]) = v35;
    if (!v17)
    {
      __break(1u);
LABEL_62:
      __break(1u);
      goto LABEL_63;
    }
    if (!*(_QWORD *)(v7 + 16))
      goto LABEL_62;
    v35 = *(_QWORD *)(v7 + 32);
    if (!(v35 >> 62))
    {
      v36 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
      v37 = OUTLINED_FUNCTION_79_0();
      goto LABEL_14;
    }
LABEL_63:
    OUTLINED_FUNCTION_79_0();
    v37 = OUTLINED_FUNCTION_46_0();
    v36 = v37;
LABEL_14:
    v9 = MEMORY[0x1E0DEE9D8];
    if (v36)
    {
      v69 = MEMORY[0x1E0DEE9D8];
      OUTLINED_FUNCTION_415_0(v37, v36 & ~(v36 >> 63));
      if (v36 < 0)
        goto LABEL_65;
      v38 = 0;
      v39 = v69;
      if ((v35 & 0xC000000000000001) != 0)
LABEL_17:
        OUTLINED_FUNCTION_62_2();
      while (1)
      {
        OUTLINED_FUNCTION_422(*(id *)(v35 + 8 * v38 + 32));
        v69 = v39;
        v1 = *(_QWORD *)(v39 + 16);
        v40 = *(_QWORD *)(v39 + 24);
        if (v1 >= v40 >> 1)
        {
          OUTLINED_FUNCTION_187_2(v40 > 1, v1 + 1);
          v39 = v69;
        }
        *(_QWORD *)(v39 + 16) = v1 + 1;
        OUTLINED_FUNCTION_53_3((void *)(v39 + 160 * v1 + 32), v68);
        if (v36 - 1 == v38)
          break;
        ++v38;
        if ((v35 & 0xC000000000000001) != 0)
          goto LABEL_17;
      }
      OUTLINED_FUNCTION_10_0();
      v7 = v62;
    }
    else
    {
      OUTLINED_FUNCTION_10_0();
      v39 = MEMORY[0x1E0DEE9D8];
    }
    *(_QWORD *)(v60 + v59[6]) = v39;
    v41 = sub_1B24D8EBC(1, v7);
    v62 = v43;
    v63 = v44 >> 1;
    v0 = (v44 >> 1) - v42;
    if (__OFSUB__(v44 >> 1, v42))
    {
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
      return;
    }
    v13 = v41;
    if (!v0)
      break;
    v7 = v42;
    v69 = v9;
    OUTLINED_FUNCTION_160_2();
    sub_1B25056E4();
    if (v0 < 0)
      goto LABEL_66;
    v58 = v13;
    v45 = 0;
    v46 = v69;
    v61 = v0;
    while (1)
    {
      v47 = v45 + 1;
      if (__OFADD__(v45, 1))
        break;
      if (v7 >= v63 || v45 >= v0)
        goto LABEL_57;
      v13 = *(_QWORD *)(v62 + 8 * v7);
      if (v13 >> 62)
      {
        OUTLINED_FUNCTION_79_0();
        v49 = sub_1B25CD474();
        v1 = v49;
      }
      else
      {
        v1 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
        v49 = OUTLINED_FUNCTION_79_0();
      }
      v66 = v47;
      if (v1)
      {
        v65 = v46;
        v67 = v9;
        OUTLINED_FUNCTION_415_0(v49, v1 & ~(v1 >> 63));
        if (v1 < 0)
          goto LABEL_59;
        v64 = v7;
        v50 = 0;
        v51 = v67;
        v52 = v1 - 1;
        v46 = v65;
        if ((v13 & 0xC000000000000001) != 0)
LABEL_40:
          OUTLINED_FUNCTION_62_2();
        while (1)
        {
          OUTLINED_FUNCTION_422(*(id *)(v13 + 8 * v50 + 32));
          v67 = v51;
          v54 = *(_QWORD *)(v51 + 16);
          v53 = *(_QWORD *)(v51 + 24);
          v1 = v54 + 1;
          if (v54 >= v53 >> 1)
          {
            v55 = OUTLINED_FUNCTION_64_6(v53);
            OUTLINED_FUNCTION_187_2(v55, v54 + 1);
            v46 = v65;
            v51 = v67;
          }
          *(_QWORD *)(v51 + 16) = v1;
          OUTLINED_FUNCTION_53_3((void *)(v51 + 160 * v54 + 32), v68);
          if (v52 == v50)
            break;
          ++v50;
          if ((v13 & 0xC000000000000001) != 0)
            goto LABEL_40;
        }
        OUTLINED_FUNCTION_10_0();
        v9 = MEMORY[0x1E0DEE9D8];
        v7 = v64;
        v0 = v61;
      }
      else
      {
        OUTLINED_FUNCTION_10_0();
        v51 = v9;
      }
      v69 = v46;
      v56 = *(_QWORD *)(v46 + 16);
      v13 = v56 + 1;
      if (v56 >= *(_QWORD *)(v46 + 24) >> 1)
      {
        OUTLINED_FUNCTION_303_1();
        v46 = v69;
      }
      *(_QWORD *)(v46 + 16) = v13;
      *(_QWORD *)(v46 + 8 * v56 + 32) = v51;
      if (__OFADD__(v7++, 1))
        goto LABEL_58;
      v45 = v66;
      if (v66 == v0)
      {
        swift_unknownObjectRelease();
        goto LABEL_55;
      }
    }
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    swift_once();
  }
  OUTLINED_FUNCTION_84_1();
  v46 = MEMORY[0x1E0DEE9D8];
LABEL_55:
  *(_QWORD *)(v60 + v59[7]) = v46;
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_1B2528758(uint64_t result, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  _BOOL8 v5;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;

  v3 = *a3;
  v4 = *(_QWORD *)(*a3 + 16);
  if (!v4)
    return 1;
  if (*(_QWORD *)(v3 + 32) == result)
    return 0;
  if (v4 == 1)
    return 1;
  for (i = 5; ; ++i)
  {
    v7 = i - 3;
    if (__OFADD__(i - 4, 1))
      break;
    v8 = *(_QWORD *)(v3 + 8 * i);
    v9 = v8 == result;
    v5 = v8 != result;
    v9 = v9 || v7 == v4;
    if (v9)
      return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B25287BC(uint64_t a1, uint64_t (*a2)(_QWORD, _QWORD), uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  void (*v19)(uint64_t *, _QWORD);
  uint64_t *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(_QWORD, _QWORD);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35[4];
  uint64_t v36;

  v6 = sub_1B25CC760();
  v7 = (void (*)(uint64_t))MEMORY[0x1E0CB1658];
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7518);
  MEMORY[0x1E0C80A78](v12, v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = MEMORY[0x1E0DEE9D8];
  v34 = v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v11, a1, v6);
  sub_1B2531930(&qword_1EEFD9AB0, v7);
  v33 = v11;
  sub_1B25CCB38();
  v32 = *(int *)(v12 + 36);
  *(_QWORD *)&v15[v32] = 0;
  v16 = &v15[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD9AB8) + 36)];
  sub_1B2531930(&qword_1EEFD99C8, v7);
  v17 = *(_QWORD *)v16;
  sub_1B25CCED4();
  if (v17 == v35[0])
  {
LABEL_2:
    sub_1B2534D88((uint64_t)v15, &qword_1EEFD7518);
    return v36;
  }
  else
  {
    v30 = a2;
    v31 = a3;
    while (1)
    {
      v19 = (void (*)(uint64_t *, _QWORD))sub_1B25CCF58();
      v21 = *v20;
      v19(v35, 0);
      v22 = v33;
      v23 = v34;
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v33, v15, v6);
      sub_1B25CCEE0();
      result = (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v22, v6);
      v24 = *(_QWORD *)&v15[v32];
      if (__OFADD__(v24, 1))
        break;
      *(_QWORD *)&v15[v32] = v24 + 1;
      if ((a2(v24, v21) & 1) != 0)
      {
        v25 = v36;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B25055B4();
          v25 = v36;
        }
        v26 = *(_QWORD *)(v25 + 16);
        if (v26 >= *(_QWORD *)(v25 + 24) >> 1)
        {
          sub_1B25055B4();
          v25 = v36;
        }
        *(_QWORD *)(v25 + 16) = v26 + 1;
        v27 = v25 + 16 * v26;
        *(_QWORD *)(v27 + 32) = v24;
        *(_QWORD *)(v27 + 40) = v21;
        a2 = v30;
      }
      v28 = *(_QWORD *)v16;
      sub_1B25CCED4();
      if (v28 == v35[0])
        goto LABEL_2;
    }
    __break(1u);
  }
  return result;
}

void sub_1B2528A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t *a21)
{
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  uint64_t *v25;
  char *v26;
  char *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int64_t v52;
  uint64_t v53;
  int64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  void *v60;
  _QWORD *v61;
  id v62;
  id v63;
  uint64_t v64;
  id v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  _QWORD *v89;
  uint64_t v90;
  os_log_type_t v91;
  uint8_t *v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  NSObject *v96;
  uint64_t v97;
  int64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  uint64_t *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  int v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD v118[34];

  OUTLINED_FUNCTION_59_0();
  v109 = v25;
  v27 = v26;
  v108 = v28;
  v106 = v29;
  v107 = v30;
  v104 = v31;
  v105 = v32;
  v34 = v33;
  v95 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7F98) - 8);
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v35, v36);
  OUTLINED_FUNCTION_230_2(v37, v93);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7FA8);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v38, v39);
  OUTLINED_FUNCTION_315_0();
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7FA0);
  OUTLINED_FUNCTION_175_2();
  MEMORY[0x1E0C80A78](v41, v42);
  OUTLINED_FUNCTION_52_6();
  v103 = *v27;
  v116 = v21;
  OUTLINED_FUNCTION_225_2(v21 + OBJC_IVAR____TtC6Speech11Transcriber_muxMultisegmentResultsBuilder, v22);
  v43 = OUTLINED_FUNCTION_118_0(v22, 1, v40);
  if (v44)
  {
    OUTLINED_FUNCTION_236_2(v43, &qword_1EEFD7FA8);
    goto LABEL_29;
  }
  v96 = v23;
  (*(void (**)(NSObject *, uint64_t, uint64_t))(v24 + 32))(v23, v22, v40);
  v97 = v34 + 64;
  OUTLINED_FUNCTION_55_4();
  v47 = v46 & v45;
  v102 = OBJC_IVAR____TtC6Speech11Transcriber_transcriptionOptions;
  v98 = (unint64_t)(v48 + 63) >> 6;
  OUTLINED_FUNCTION_140_1();
  v49 = 0;
  v50 = MEMORY[0x1E0DEE9E0];
  v100 = v24;
  v101 = v40;
  v99 = v34;
  while (1)
  {
    v115 = v50;
    if (v47)
    {
      v111 = (v47 - 1) & v47;
      v112 = v49;
      v51 = __clz(__rbit64(v47)) | (v49 << 6);
      goto LABEL_19;
    }
    v52 = v49 + 1;
    if (__OFADD__(v49, 1))
    {
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    if (v52 >= v98)
      goto LABEL_24;
    if (!*(_QWORD *)(v97 + 8 * v52))
    {
      if (v49 + 2 >= v98)
        goto LABEL_24;
      if (!*(_QWORD *)(v97 + 8 * (v49 + 2)))
      {
        if (v49 + 3 >= v98)
          goto LABEL_24;
        if (!*(_QWORD *)(v97 + 8 * (v49 + 3)))
          break;
      }
    }
LABEL_18:
    OUTLINED_FUNCTION_124_3();
    v111 = v56 & v55;
    v112 = v57;
    v51 = v58 + (v57 << 6);
LABEL_19:
    v59 = (uint64_t *)(*(_QWORD *)(v34 + 48) + 16 * v51);
    v110 = *v59;
    v60 = *(void **)(*(_QWORD *)(v34 + 56) + 8 * v51);
    v113 = v59[1];
    swift_bridgeObjectRetain();
    v61 = v60;
    v62 = objc_msgSend(v61, sel_recognition);
    v63 = objc_msgSend(v62, sel_nBest);

    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6870);
    v114 = sub_1B25CCBA4();

    v65 = OUTLINED_FUNCTION_39_0(v64, sel_recognition);
    v66 = objc_msgSend(v65, sel_tokenSausage);

    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7168);
    v67 = sub_1B25CCBA4();

    v69 = OUTLINED_FUNCTION_39_0(v68, sel_recognition);
    v70 = objc_msgSend(v69, sel_interpretationIndices);

    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CFE0);
    sub_1B25CCBA4();
    OUTLINED_FUNCTION_291_2();
    sub_1B2571AA8((uint64_t)&selRef_alternativeConfidences);
    v72 = v71;
    v73 = OUTLINED_FUNCTION_601();
    v74 = objc_msgSend(OUTLINED_FUNCTION_39_0(v73, sel_preITNRecognition), sel_nBest);
    OUTLINED_FUNCTION_291_2();
    v75 = sub_1B25CCBA4();

    v77 = objc_msgSend(OUTLINED_FUNCTION_39_0(v76, sel_preITNRecognition), sel_tokenSausage);
    OUTLINED_FUNCTION_291_2();
    v78 = sub_1B25CCBA4();

    v80 = objc_msgSend(OUTLINED_FUNCTION_39_0(v79, sel_preITNRecognition), sel_interpretationIndices);
    OUTLINED_FUNCTION_291_2();
    v81 = sub_1B25CCBA4();

    sub_1B2571AA8(v81);
    v83 = v82;
    OUTLINED_FUNCTION_365();
    v84 = *(_QWORD *)(v116 + v102);
    OUTLINED_FUNCTION_400_0();
    if ((v85 & 1) != 0)
    {
      OUTLINED_FUNCTION_345();
      OUTLINED_FUNCTION_107();
      OUTLINED_FUNCTION_44_1();
      v24 = v100;
      v40 = v101;
      v34 = v99;
      v86 = v113;
      v87 = v114;
    }
    else
    {
      OUTLINED_FUNCTION_69();
      OUTLINED_FUNCTION_101_1();
      swift_bridgeObjectRelease();
      sub_1B251CDC8(0, v84);
      if ((v88 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_release();
        OUTLINED_FUNCTION_345();
        OUTLINED_FUNCTION_107();
        OUTLINED_FUNCTION_44_1();

        swift_bridgeObjectRelease();
        (*(void (**)(NSObject *, uint64_t))(v100 + 8))(v96, v101);
        goto LABEL_29;
      }
      v72 = v83;
      v67 = v78;
      v87 = v75;
      v24 = v100;
      v40 = v101;
      v34 = v99;
      v86 = v113;
    }
    LOBYTE(v117) = v103;
    v89 = v61;
    sub_1B2526A08(v104, v87, v67, v72, v61, v105, v106, v107, v118, v108, (unsigned __int8 *)&v117, v109, a21);
    OUTLINED_FUNCTION_345();
    OUTLINED_FUNCTION_101_1();
    OUTLINED_FUNCTION_69();

    OUTLINED_FUNCTION_545();
    v117 = v115;
    sub_1B254D020((uint64_t)v118, v110, v86);
    v50 = v117;

    OUTLINED_FUNCTION_267();
    swift_bridgeObjectRelease();
    v47 = v111;
    v49 = v112;
  }
  v53 = v49 + 4;
  if (v49 + 4 < v98)
  {
    if (!*(_QWORD *)(v97 + 8 * v53))
    {
      while (1)
      {
        v54 = v53 + 1;
        if (__OFADD__(v53, 1))
          goto LABEL_31;
        if (v54 >= v98)
          goto LABEL_24;
        ++v53;
        if (*(_QWORD *)(v97 + 8 * v54))
          goto LABEL_18;
      }
    }
    goto LABEL_18;
  }
LABEL_24:
  swift_release();
  v117 = v50;
  LOBYTE(v50) = v94;
  sub_1B25CCDC0();
  OUTLINED_FUNCTION_45_1(v95);
  if (qword_1ED36CF48 == -1)
    goto LABEL_25;
LABEL_32:
  swift_once();
LABEL_25:
  v90 = OUTLINED_FUNCTION_147();
  OUTLINED_FUNCTION_6_3(v90, (uint64_t)qword_1ED36D980);
  v91 = OUTLINED_FUNCTION_34_1();
  if (OUTLINED_FUNCTION_186_0(v91))
  {
    v92 = (uint8_t *)OUTLINED_FUNCTION_246();
    *(_WORD *)v92 = 0;
    _os_log_impl(&dword_1B2494000, v96, (os_log_type_t)v50, "Transcriber: Yielded MUX result", v92, 2u);
    OUTLINED_FUNCTION_174();
  }

  (*(void (**)(NSObject *, uint64_t))(v24 + 8))(v96, v40);
LABEL_29:
  OUTLINED_FUNCTION_7_1();
}

void sub_1B25290C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,_QWORD *a22,char *a23,uint64_t a24,uint64_t a25,int a26,unsigned __int8 *a27,uint64_t *a28,uint64_t *a29)
{
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  os_unfair_lock_s *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int v73;
  char v74;
  uint64_t v75;
  char v76;
  char v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  os_log_type_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  os_log_type_t v98;
  uint64_t v99;
  uint64_t v100;
  os_unfair_lock_s *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD v121[33];
  uint64_t v122;
  __int128 v123;
  uint64_t v124;
  _QWORD v125[35];

  OUTLINED_FUNCTION_59_0();
  v119 = v33;
  v120 = v34;
  v118 = v35;
  v110 = v37;
  v111 = v36;
  v112 = v38;
  v115 = v39;
  v103 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7F98) - 8);
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v40, v41);
  OUTLINED_FUNCTION_229_1(v42, v99);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7FA8);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v43, v44);
  OUTLINED_FUNCTION_767();
  v106 = v45;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7FA0);
  v108 = *(_QWORD *)(v46 - 8);
  v109 = v46;
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v47, v48);
  OUTLINED_FUNCTION_228_1(v49, v100);
  v104 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7228) - 8);
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v50, v51);
  OUTLINED_FUNCTION_767();
  v102 = OUTLINED_FUNCTION_32_4();
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v52, v53);
  OUTLINED_FUNCTION_767();
  v101 = v54;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7260);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v55, v56);
  OUTLINED_FUNCTION_767();
  v114 = v57;
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7258);
  v116 = *(_QWORD *)(v58 - 8);
  v117 = v58;
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v59, v60);
  OUTLINED_FUNCTION_767();
  v113 = v61;
  v62 = OUTLINED_FUNCTION_219_0();
  v63 = type metadata accessor for Transcriber.Result(v62);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v64, v65);
  OUTLINED_FUNCTION_52_6();
  v105 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7230) - 8);
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v66, v67);
  OUTLINED_FUNCTION_42_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7278);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v68, v69);
  OUTLINED_FUNCTION_229();
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7270);
  v71 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70, v72);
  OUTLINED_FUNCTION_316_1();
  v73 = *a27;
  sub_1B251CDC8(0, *(_QWORD *)(v29 + OBJC_IVAR____TtC6Speech11Transcriber_reportingOptions));
  if (v73 > 2 || (v74 & 1) != 0)
  {
    OUTLINED_FUNCTION_130_1(1u);
    if ((v76 & 1) != 0 || (OUTLINED_FUNCTION_130_1(0), v119 = v111, v120 = v110, v118 = v112, (v77 & 1) != 0))
    {
      OUTLINED_FUNCTION_307_1(v29 + OBJC_IVAR____TtC6Speech11Transcriber_resultsBuilder, v75, &qword_1EEFD7278);
      v78 = OUTLINED_FUNCTION_118_0(v31, 1, v70);
      if (v79)
      {
        OUTLINED_FUNCTION_374_0(v78, &qword_1EEFD7278);
        v84 = v115;
      }
      else
      {
        OUTLINED_FUNCTION_311(v32, v31, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v71 + 32));
        v123 = *(_OWORD *)a29;
        v124 = a29[2];
        v80 = v30 + *(int *)(v63 + 24);
        v81 = OUTLINED_FUNCTION_192_1();
        OUTLINED_FUNCTION_291_0(v80, v82, v83, v81);
        v84 = v115;
        v85 = *((_OWORD *)v115 + 1);
        *(_OWORD *)v30 = *(_OWORD *)v115;
        *(_OWORD *)(v30 + 16) = v85;
        v86 = v123;
        *(_OWORD *)(v30 + 32) = *((_OWORD *)v115 + 2);
        *(_OWORD *)(v30 + 48) = v86;
        *(_QWORD *)(v30 + 64) = v124;
        sub_1B25CCDC0();
        OUTLINED_FUNCTION_211_2(v105);
        (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v32, v70);
      }
      LOBYTE(v121[0]) = v73;
      sub_1B2526A08(v84, v118, v119, v120, a22, a23, a24, a25, v125, a26, (unsigned __int8 *)v121, a28, a29);
      OUTLINED_FUNCTION_212_2(v29 + OBJC_IVAR____TtC6Speech11Transcriber_multisegmentResultsBuilder, v87, &qword_1EEFD7260);
      v88 = OUTLINED_FUNCTION_118_0(v114, 1, v117);
      if (v79)
      {
        OUTLINED_FUNCTION_236_2(v88, &qword_1EEFD7260);
        sub_1B24EBCB8(v29 + OBJC_IVAR____TtC6Speech11Transcriber_muxMultisegmentResultsBuilder, v106, &qword_1EEFD7FA8);
        OUTLINED_FUNCTION_118_0(v106, 1, v109);
        if (v79)
        {
          v89 = OUTLINED_FUNCTION_109_3();
          OUTLINED_FUNCTION_296_1(v89, &qword_1EEFD7FA8);
        }
        else
        {
          OUTLINED_FUNCTION_71_6(v107, v106, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v108 + 32));
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD9AC0);
          v95 = OUTLINED_FUNCTION_8_4();
          *(_OWORD *)(v95 + 16) = xmmword_1B25DB5B0;
          *(_QWORD *)(v95 + 32) = 48;
          *(_QWORD *)(v95 + 40) = 0xE100000000000000;
          OUTLINED_FUNCTION_147_1((void *)(v95 + 48));
          OUTLINED_FUNCTION_261_1();
          v121[0] = sub_1B25CC904();
          sub_1B25CCDC0();
          OUTLINED_FUNCTION_211_2(v103);
          if (qword_1ED36CF48 != -1)
            swift_once();
          v96 = OUTLINED_FUNCTION_147();
          __swift_project_value_buffer(v96, (uint64_t)qword_1ED36D980);
          OUTLINED_FUNCTION_261_1();
          v97 = (void *)sub_1B25CC8B0();
          v98 = sub_1B25CCFD0();
          if (OUTLINED_FUNCTION_245_2(v98))
          {
            OUTLINED_FUNCTION_246();
            v122 = OUTLINED_FUNCTION_246();
            OUTLINED_FUNCTION_126_1(4.8149e-34);
            Transcriber.MultisegmentResult.description.getter();
          }

          OUTLINED_FUNCTION_109_3();
          OUTLINED_FUNCTION_109_3();
          (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v107, v109);
        }
      }
      else
      {
        OUTLINED_FUNCTION_71_6(v113, v114, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v116 + 32));
        if (v73 - 3 <= 1
          && (sub_1B2526784(),
              v90 = *((unsigned __int8 *)&v101->_os_unfair_lock_opaque + *(int *)(v102 + 28)),
              OUTLINED_FUNCTION_301_0(v91, (uint64_t (*)(_QWORD))type metadata accessor for SpeechRecognizerSupportedFeatures), v90 == 1))
        {
          OUTLINED_FUNCTION_323_0(*(os_unfair_lock_s **)(v29
                                                       + OBJC_IVAR____TtC6Speech11Transcriber_lastRecognizedFinalMultisegmentResult));
          sub_1B2529860(v29, v125);
          os_unfair_lock_unlock(v101);
        }
        else
        {
          OUTLINED_FUNCTION_147_1(v121);
          OUTLINED_FUNCTION_261_1();
          sub_1B25CCDC0();
          OUTLINED_FUNCTION_45_1(v104);
        }
        if (qword_1ED36CF48 != -1)
          swift_once();
        v92 = OUTLINED_FUNCTION_147();
        __swift_project_value_buffer(v92, (uint64_t)qword_1ED36D980);
        OUTLINED_FUNCTION_261_1();
        v93 = (void *)sub_1B25CC8B0();
        v94 = sub_1B25CCFD0();
        if (OUTLINED_FUNCTION_245_2(v94))
        {
          OUTLINED_FUNCTION_246();
          v122 = OUTLINED_FUNCTION_246();
          OUTLINED_FUNCTION_126_1(4.8149e-34);
          Transcriber.MultisegmentResult.description.getter();
        }

        OUTLINED_FUNCTION_109_3();
        OUTLINED_FUNCTION_109_3();
        (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v113, v117);
      }
    }
  }
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_1B2529860(uint64_t a1, const void *a2)
{
  uint64_t v4;
  _BYTE __dst[257];
  _BYTE v7[264];
  _BYTE v8[264];

  memcpy(__dst, a2, sizeof(__dst));
  sub_1B24EBCE4(a1, (uint64_t)v7, &qword_1EEFD7708);
  sub_1B2534C70((uint64_t)v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B2534BC4);
  memcpy(v8, __dst, 0x101uLL);
  nullsub_1(v8, v4);
  sub_1B24EBCE4((uint64_t)v8, a1, &qword_1EEFD7708);
  return sub_1B25318AC((uint64_t)a2);
}

void sub_1B2529908()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  os_unfair_lock_s *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  _BYTE v52[264];
  _BYTE v53[272];
  _BYTE v54[272];

  OUTLINED_FUNCTION_59_0();
  v4 = v0;
  v46 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7FA8);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v6, v7);
  OUTLINED_FUNCTION_767();
  v49 = v8;
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7FA0);
  v45 = *(_QWORD *)(v50 - 8);
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v9, v10);
  OUTLINED_FUNCTION_767();
  v44 = v11;
  v41 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7228) - 8);
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v12, v13);
  OUTLINED_FUNCTION_230_2(v14, v40);
  v43 = OUTLINED_FUNCTION_32_4();
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v15, v16);
  OUTLINED_FUNCTION_767();
  v42 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7260);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v18, v19);
  OUTLINED_FUNCTION_315_0();
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7258);
  v48 = *(_QWORD *)(v20 - 8);
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v21, v22);
  OUTLINED_FUNCTION_767();
  v47 = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7278);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v24, v25);
  OUTLINED_FUNCTION_623();
  v26 = (os_unfair_lock_s *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7270);
  OUTLINED_FUNCTION_175_2();
  MEMORY[0x1E0C80A78](v27, v28);
  OUTLINED_FUNCTION_228();
  sub_1B24EBCB8(v0 + OBJC_IVAR____TtC6Speech11Transcriber_resultsBuilder, v0, &qword_1EEFD7278);
  v29 = OUTLINED_FUNCTION_118_0(v0, 1, (uint64_t)v26);
  if (v30)
  {
    OUTLINED_FUNCTION_296_1(v29, &qword_1EEFD7278);
    v31 = v46;
  }
  else
  {
    OUTLINED_FUNCTION_310_0(v2, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
    v31 = v46;
    OUTLINED_FUNCTION_360_0();
    v0 = v2;
    sub_1B25CCDCC();
    OUTLINED_FUNCTION_199_1(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  }
  OUTLINED_FUNCTION_212_2(v4 + OBJC_IVAR____TtC6Speech11Transcriber_multisegmentResultsBuilder, v32, &qword_1EEFD7260);
  v33 = OUTLINED_FUNCTION_118_0(v1, 1, v20);
  if (v30)
  {
    OUTLINED_FUNCTION_236_2(v33, &qword_1EEFD7260);
    v34 = v50;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 32))(v47, v1, v20);
    OUTLINED_FUNCTION_323_0(*(os_unfair_lock_s **)(v4
                                                 + OBJC_IVAR____TtC6Speech11Transcriber_lastRecognizedFinalMultisegmentResult));
    sub_1B2529CDC(v0, (uint64_t)v54);
    os_unfair_lock_unlock(v26);
    sub_1B24EBCE4((uint64_t)v54, (uint64_t)v52, &qword_1EEFD7708);
    sub_1B24EBCE4((uint64_t)v52, (uint64_t)v53, &qword_1EEFD7708);
    v35 = sub_1B2534C58((uint64_t)v53);
    v34 = v50;
    if (v35 != 1)
    {
      sub_1B2526784();
      v36 = *(unsigned __int8 *)(v42 + *(int *)(v43 + 28));
      OUTLINED_FUNCTION_301_0(v37, (uint64_t (*)(_QWORD))type metadata accessor for SpeechRecognizerSupportedFeatures);
      if (v36 == 1)
      {
        OUTLINED_FUNCTION_152_0(&v51, v53);
        sub_1B25CCDC0();
        OUTLINED_FUNCTION_211_2(v41);
      }
      else
      {
        sub_1B2534C70((uint64_t)v52, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B2534BC4);
      }
    }
    v51 = v31;
    v38 = v31;
    sub_1B25CCDCC();
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v20);
  }
  sub_1B24EBCB8(v4 + OBJC_IVAR____TtC6Speech11Transcriber_muxMultisegmentResultsBuilder, v49, &qword_1EEFD7FA8);
  v39 = OUTLINED_FUNCTION_118_0(v49, 1, v34);
  if (v30)
  {
    OUTLINED_FUNCTION_296_1(v39, &qword_1EEFD7FA8);
  }
  else
  {
    OUTLINED_FUNCTION_286_0(v44, v49, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v45 + 32));
    OUTLINED_FUNCTION_360_0();
    sub_1B25CCDCC();
    OUTLINED_FUNCTION_249_0(v44, *(uint64_t (**)(uint64_t, uint64_t))(v45 + 8));
  }
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_1B2529CDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE v4[264];

  sub_1B24EBCE4(a1, (uint64_t)v4, &qword_1EEFD7708);
  sub_1B24EBCE4((uint64_t)v4, a2, &qword_1EEFD7708);
  return sub_1B2534C70((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B2534CF4);
}

void Transcriber.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OUTLINED_FUNCTION_23_0();
  OUTLINED_FUNCTION_278_0(v1);
  sub_1B2534D88(v0 + OBJC_IVAR____TtC6Speech11Transcriber_modelOptions, &qword_1EEFD6B20);
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_6_5();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD72E0);
  OUTLINED_FUNCTION_278_0(v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD72C8);
  OUTLINED_FUNCTION_278_0(v3);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7FB8);
  OUTLINED_FUNCTION_278_0(v4);
  OUTLINED_FUNCTION_193_0();
  OUTLINED_FUNCTION_193_0();
  OUTLINED_FUNCTION_193_0();
  sub_1B2534D88(v0 + OBJC_IVAR____TtC6Speech11Transcriber_resultsBuilder, &qword_1EEFD7278);
  sub_1B2534D88(v0 + OBJC_IVAR____TtC6Speech11Transcriber_multisegmentResultsBuilder, &qword_1EEFD7260);
  sub_1B2534D88(v0 + OBJC_IVAR____TtC6Speech11Transcriber_muxMultisegmentResultsBuilder, &qword_1EEFD7FA8);
  OUTLINED_FUNCTION_0();
}

uint64_t Transcriber.__deallocating_deinit()
{
  Transcriber.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1B2529E90(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1B2508AAC;
  return sub_1B25249C8(a1);
}

__n128 sub_1B2529EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,_QWORD *a22,char *a23,uint64_t a24,uint64_t a25,int a26,unsigned __int8 *a27,uint64_t *a28,uint64_t *a29)
{
  __n128 result;

  sub_1B25290C4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29);
  return result;
}

void sub_1B2529F14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t *a21)
{
  sub_1B2528A7C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21);
}

uint64_t sub_1B2529F24()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1B2534E78;
  return Transcriber.compatibleAudioFormats.getter();
}

uint64_t sub_1B2529F68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1B2534E78;
  return Transcriber.availableCompatibleAudioFormats(clientID:)(a1, a2);
}

uint64_t sub_1B2529FC4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1B2534E78;
  return Transcriber.availableCompatibleAudioFormats.getter();
}

uint64_t sub_1B252A008()
{
  return sub_1B251CD30();
}

uint64_t sub_1B252A028(void *a1)
{
  char v1;

  sub_1B2526958(a1);
  return v1 & 1;
}

void sub_1B252A04C()
{
  sub_1B25269C0();
}

uint64_t TranscriptionSegment.text.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_99_4();
  v0 = OUTLINED_FUNCTION_38_0();
  return OUTLINED_FUNCTION_21_0(v0, v1, v2, v3);
}

uint64_t TranscriptionSegment.alternatives.getter()
{
  type metadata accessor for TranscriptionSegment(0);
  return swift_bridgeObjectRetain();
}

uint64_t TranscriptionSegment.tokens.getter()
{
  OUTLINED_FUNCTION_192_1();
  return swift_bridgeObjectRetain();
}

uint64_t TranscriptionSegment.alternativeTokens.getter()
{
  OUTLINED_FUNCTION_192_1();
  return swift_bridgeObjectRetain();
}

void static TranscriptionSegment.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;

  if ((sub_1B25CC34C() & 1) != 0
    && (v4 = type metadata accessor for TranscriptionSegment(0), sub_1B2523890(), (v5 & 1) != 0)
    && (sub_1B2522A0C(*(_QWORD *)(a1 + *(int *)(v4 + 24)), *(_QWORD *)(a2 + *(int *)(v4 + 24))) & 1) != 0)
  {
    sub_1B2522AB4(*(_QWORD *)(a1 + *(int *)(v4 + 28)), *(_QWORD *)(a2 + *(int *)(v4 + 28)));
  }
  else
  {
    OUTLINED_FUNCTION_262();
  }
}

void TranscriptionToken.tokenName.getter()
{
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_0();
}

uint64_t TranscriptionToken.start.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t TranscriptionToken.end.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t TranscriptionToken.silenceStart.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

double TranscriptionToken.confidence.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 88);
}

uint64_t TranscriptionToken.hasSpaceAfter.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 96);
}

uint64_t TranscriptionToken.hasSpaceBefore.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 97);
}

void TranscriptionToken.phoneSequence.getter()
{
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_0();
}

void TranscriptionToken.ipaPhoneSequence.getter()
{
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_0();
}

uint64_t TranscriptionToken.appendedAutoPunctuation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 136);
}

uint64_t TranscriptionToken.prependedAutoPunctuation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 137);
}

uint64_t TranscriptionToken.isModifiedByAutoPunctuation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 138);
}

double TranscriptionToken.graphCost.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 144);
}

double TranscriptionToken.acousticCost.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 152);
}

void __swiftcall TranscriptionToken.init(with:start:end:silenceStart:confidence:hasSpaceAfter:hasSpaceBefore:phoneSequence:ipaPhoneSequence:appendedAutoPunctuation:prependedAutoPunctuation:isModifiedByAutoPunctuation:graphCost:acousticCost:)(Speech::TranscriptionToken *__return_ptr retstr, Swift::String with, CMTime start, CMTime end, CMTime silenceStart, Swift::Double confidence, Swift::Bool hasSpaceAfter, Swift::Bool hasSpaceBefore, Swift::String phoneSequence, Swift::String ipaPhoneSequence, Swift::Bool appendedAutoPunctuation, Swift::Bool prependedAutoPunctuation, Swift::Bool isModifiedByAutoPunctuation, Swift::Double graphCost, Swift::Double acousticCost)
{
  retstr->tokenName = with;
  retstr->start = start;
  retstr->end = end;
  retstr->silenceStart = silenceStart;
  retstr->confidence = confidence;
  retstr->hasSpaceAfter = hasSpaceAfter;
  retstr->hasSpaceBefore = hasSpaceBefore;
  retstr->phoneSequence = phoneSequence;
  retstr->ipaPhoneSequence = ipaPhoneSequence;
  retstr->appendedAutoPunctuation = appendedAutoPunctuation;
  retstr->prependedAutoPunctuation = prependedAutoPunctuation;
  retstr->isModifiedByAutoPunctuation = isModifiedByAutoPunctuation;
  retstr->graphCost = graphCost;
  retstr->acousticCost = acousticCost;
}

void static TranscriptionToken.tokenString(from:ipa:after:attributes:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  double v7;
  int v8;
  char v9;
  char v10;
  char v11;
  _BYTE v12[160];
  _BYTE v13[168];

  sub_1B25CC3F4();
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v5, v6);
  OUTLINED_FUNCTION_56_0();
  v7 = *(double *)(a1 + 88);
  v8 = *(unsigned __int8 *)(a1 + 96);
  v9 = *(_BYTE *)(a1 + 97);
  OUTLINED_FUNCTION_270_2(a3, (uint64_t)v13);
  OUTLINED_FUNCTION_178();
  OUTLINED_FUNCTION_270_2((uint64_t)v13, (uint64_t)v12);
  if (sub_1B2512810((uint64_t)v12) == 1)
  {
    if ((v9 & 1) == 0)
      goto LABEL_7;
LABEL_6:
    sub_1B25CCAE4();
    OUTLINED_FUNCTION_345();
    goto LABEL_7;
  }
  if ((v9 & 1) != 0 && (v12[96] & 1) == 0)
    goto LABEL_6;
LABEL_7:
  if (v8)
  {
    OUTLINED_FUNCTION_178();
    OUTLINED_FUNCTION_331_0();
    OUTLINED_FUNCTION_345();
  }
  sub_1B25CC3E8();
  OUTLINED_FUNCTION_383_0();
  if ((OUTLINED_FUNCTION_269_0() & 1) == 0 || (OUTLINED_FUNCTION_269_0() & 1) == 0)
  {
    OUTLINED_FUNCTION_241_1(1);
    if ((v10 & 1) != 0)
    {
      sub_1B25CD054();
      sub_1B2531ABC();
      OUTLINED_FUNCTION_242_2();
    }
  }
  OUTLINED_FUNCTION_241_1(0);
  if ((v11 & 1) != 0 && v7 != 0.0)
  {
    sub_1B2531A80();
    OUTLINED_FUNCTION_242_2();
  }
}

uint64_t static TranscriptionToken.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  BOOL v8;
  uint64_t result;
  char v10;
  char v11;
  BOOL v12;
  char v13;
  char v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  int v32;
  int v33;

  v2 = *(double *)(a1 + 88);
  v33 = *(unsigned __int8 *)(a1 + 96);
  v31 = *(unsigned __int8 *)(a1 + 97);
  v28 = *(_QWORD *)(a1 + 112);
  v29 = *(_QWORD *)(a1 + 104);
  v24 = *(_QWORD *)(a1 + 128);
  v25 = *(_QWORD *)(a1 + 120);
  v21 = *(unsigned __int8 *)(a1 + 136);
  v19 = *(unsigned __int8 *)(a1 + 137);
  v17 = *(unsigned __int8 *)(a1 + 138);
  v4 = *(double *)(a1 + 144);
  v3 = *(double *)(a1 + 152);
  v5 = *(double *)(a2 + 88);
  v7 = *(double *)(a2 + 144);
  v6 = *(double *)(a2 + 152);
  v8 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  v32 = *(unsigned __int8 *)(a2 + 96);
  v30 = *(unsigned __int8 *)(a2 + 97);
  v26 = *(_QWORD *)(a2 + 104);
  v27 = *(_QWORD *)(a2 + 112);
  v22 = *(_QWORD *)(a2 + 120);
  v23 = *(_QWORD *)(a2 + 128);
  v20 = *(unsigned __int8 *)(a2 + 136);
  v18 = *(unsigned __int8 *)(a2 + 137);
  v16 = *(unsigned __int8 *)(a2 + 138);
  if (v8 || (OUTLINED_FUNCTION_303_0(), result = OUTLINED_FUNCTION_104_2(), (v10 & 1) != 0))
  {
    OUTLINED_FUNCTION_367_0();
    if ((sub_1B25CD060() & 1) == 0 || (sub_1B25CD060() & 1) == 0)
      return 0;
    sub_1B25CD060();
    result = OUTLINED_FUNCTION_104_2();
    if ((v11 & 1) != 0 && v2 == v5 && ((v33 ^ v32) & 1) == 0 && ((v31 ^ v30) & 1) == 0)
    {
      v12 = v29 == v26 && v28 == v27;
      if (v12 || (OUTLINED_FUNCTION_303_0(), result = OUTLINED_FUNCTION_104_2(), (v13 & 1) != 0))
      {
        if (v25 != v22 || v24 != v23)
        {
          OUTLINED_FUNCTION_303_0();
          result = OUTLINED_FUNCTION_104_2();
          if ((v15 & 1) == 0 || v21 != v20 || v19 != v18 || v17 != v16)
            return result;
LABEL_31:
          if (v4 == v7)
            return v3 == v6;
          return result;
        }
        result = 0;
        if (v21 == v20 && ((v19 ^ v18) & 1) == 0 && ((v17 ^ v16) & 1) == 0)
          goto LABEL_31;
      }
    }
  }
  return result;
}

BOOL static TranscriptionResultAttributeOption.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t TranscriptionResultAttributeOption.hash(into:)()
{
  return OUTLINED_FUNCTION_263_1();
}

void TranscriptionResultAttributeOption.hashValue.getter()
{
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_840();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1();
}

uint64_t static ConfidenceAttribute.name.getter()
{
  return 0x6E656469666E6F63;
}

uint64_t sub_1B252A820()
{
  return 0x6E656469666E6F63;
}

uint64_t static TimeRangeAttribute.name.getter()
{
  return 0x676E6152656D6974;
}

uint64_t sub_1B252A864()
{
  return 0x676E6152656D6974;
}

void sub_1B252A890()
{
  sub_1B2534AC4();
  JUMPOUT(0x1B5E242C8);
}

void sub_1B252A8C8()
{
  sub_1B2534AC4();
  JUMPOUT(0x1B5E242D4);
}

uint64_t AttributeDynamicLookup.subscript.getter()
{
  return sub_1B25CC4C0();
}

void TranscriptionLatticeMitigatorResult.version.getter()
{
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_0();
}

float TranscriptionLatticeMitigatorResult.score.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 16);
}

float TranscriptionLatticeMitigatorResult.threshold.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 20);
}

float TranscriptionLatticeMitigatorResult.calibrationScale.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 24);
}

float TranscriptionLatticeMitigatorResult.calibrationOffset.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 28);
}

uint64_t TranscriptionLatticeMitigatorResult.isProcessed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

void __swiftcall TranscriptionLatticeMitigatorResult.init(with:score:threshold:calibrationScale:calibrationOffset:processed:)(Speech::TranscriptionLatticeMitigatorResult *__return_ptr retstr, Swift::String with, Swift::Float score, Swift::Float threshold, Swift::Float calibrationScale, Swift::Float calibrationOffset, Swift::Bool processed)
{
  retstr->version = with;
  retstr->score = score;
  retstr->threshold = threshold;
  retstr->calibrationScale = calibrationScale;
  retstr->calibrationOffset = calibrationOffset;
  retstr->isProcessed = processed;
}

uint64_t static TranscriptionLatticeMitigatorResult.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  float v2;
  float v3;
  float v4;
  float v5;
  int v6;
  float v7;
  float v8;
  float v9;
  float v10;
  int v11;
  uint64_t result;
  char v14;
  BOOL v15;
  BOOL v16;

  v3 = *(float *)(a1 + 16);
  v2 = *(float *)(a1 + 20);
  v5 = *(float *)(a1 + 24);
  v4 = *(float *)(a1 + 28);
  v6 = *(unsigned __int8 *)(a1 + 32);
  v8 = *(float *)(a2 + 16);
  v7 = *(float *)(a2 + 20);
  v10 = *(float *)(a2 + 24);
  v9 = *(float *)(a2 + 28);
  v11 = *(unsigned __int8 *)(a2 + 32);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
  {
    if (v3 != v8 || v2 != v7 || v5 != v10 || v4 != v9)
      return 0;
    return v6 ^ v11 ^ 1u;
  }
  OUTLINED_FUNCTION_303_0();
  result = OUTLINED_FUNCTION_104_2();
  if ((v14 & 1) != 0)
  {
    v15 = v3 == v8 && v2 == v7;
    v16 = v15 && v5 == v10;
    if (v16 && v4 == v9)
      return v6 ^ v11 ^ 1u;
  }
  return result;
}

double AudioAnalytics.AcousticFeature.frameDuration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

uint64_t static AudioAnalytics.AcousticFeature.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;

  v2 = *(double *)(a1 + 8);
  v3 = *(double *)(a2 + 8);
  return sub_1B2523050(*(_QWORD *)a1, *(_QWORD *)a2) & (v2 == v3);
}

uint64_t AudioAnalytics.acousticFeatures.getter()
{
  return swift_bridgeObjectRetain();
}

double AudioAnalytics.snr.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void sub_1B252AAA0(id *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  v4 = *a1;
  v5 = objc_msgSend(*a1, sel_acousticFeatureValuePerFrame);
  sub_1B24B3050(0, (unint64_t *)&qword_1EEFD7478);
  v6 = sub_1B25CCBA4();

  if (!(v6 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v7)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    v9 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    objc_msgSend(v4, sel_frameDuration);
    *a2 = v9;
    a2[1] = v15;
    return;
  }
  swift_bridgeObjectRetain();
  v7 = sub_1B25CD474();
  swift_bridgeObjectRelease();
  if (!v7)
    goto LABEL_13;
LABEL_3:
  v19 = MEMORY[0x1E0DEE9D8];
  sub_1B250535C();
  if ((v7 & 0x8000000000000000) == 0)
  {
    v16 = v4;
    v17 = a2;
    v18 = v2;
    v8 = 0;
    v9 = v19;
    do
    {
      if ((v6 & 0xC000000000000001) != 0)
        v10 = (id)MEMORY[0x1B5E252C4](v8, v6);
      else
        v10 = *(id *)(v6 + 8 * v8 + 32);
      v11 = v10;
      objc_msgSend(v10, sel_doubleValue, v16, v17, v18);
      v13 = v12;

      v14 = *(_QWORD *)(v19 + 16);
      if (v14 >= *(_QWORD *)(v19 + 24) >> 1)
        sub_1B250535C();
      ++v8;
      *(_QWORD *)(v19 + 16) = v14 + 1;
      *(_QWORD *)(v19 + 8 * v14 + 32) = v13;
    }
    while (v7 != v8);
    swift_bridgeObjectRelease();
    a2 = v17;
    v4 = v16;
    goto LABEL_14;
  }
  __break(1u);
}

uint64_t static AudioAnalytics.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(double *)(a1 + 16);
  v3 = *(double *)(a2 + 16);
  if ((sub_1B252ACDC(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0)
    return 0;
  v4 = OUTLINED_FUNCTION_38_0();
  return sub_1B252AE8C(v4, v5) & (v2 == v3);
}

uint64_t sub_1B252ACDC(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char v20;
  char v21;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_24;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return 1;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return 1;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
        {
          v4 = v12 + 3;
          if (v12 + 3 >= v9)
            return 1;
          v13 = *(_QWORD *)(v5 + 8 * v4);
          if (!v13)
            break;
        }
      }
    }
LABEL_23:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_24:
    v15 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v11);
    v16 = *v15;
    v17 = v15[1];
    v18 = *(double *)(*(_QWORD *)(v3 + 56) + 8 * v11);
    swift_bridgeObjectRetain();
    v19 = sub_1B24E113C(v16, v17);
    v21 = v20;
    result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0 || *(double *)(*(_QWORD *)(a2 + 56) + 8 * v19) != v18)
      return 0;
  }
  v14 = v12 + 4;
  if (v14 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_23;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1B252AE8C(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char v22;
  char v23;
  double *v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  double v33;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v11 = v10 | (v4 << 6);
LABEL_24:
    v15 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v11);
    v16 = *v15;
    v17 = v15[1];
    v18 = *(_QWORD *)(v3 + 56) + 16 * v11;
    v19 = *(_QWORD *)v18;
    v20 = *(double *)(v18 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = sub_1B24E113C(v16, v17);
    v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0
      || (v24 = (double *)(*(_QWORD *)(a2 + 56) + 16 * v21),
          v25 = *(_QWORD *)v24,
          v26 = *(_QWORD *)(*(_QWORD *)v24 + 16),
          v26 != *(_QWORD *)(v19 + 16)))
    {
LABEL_38:
      swift_bridgeObjectRelease();
      return 0;
    }
    v27 = v24[1];
    if (v26)
      v28 = v25 == v19;
    else
      v28 = 1;
    if (!v28)
    {
      if (*(double *)(v25 + 32) != *(double *)(v19 + 32))
        goto LABEL_38;
      if (v26 != 1)
      {
        if (*(double *)(v25 + 40) != *(double *)(v19 + 40))
          goto LABEL_38;
        v29 = 0;
        v30 = v25 + 48;
        v31 = v26 - 2;
        while (v31 != v29)
        {
          v32 = *(double *)(v30 + 8 * v29);
          v33 = *(double *)(v19 + 8 * v29++ + 48);
          if (v32 != v33)
            goto LABEL_38;
        }
      }
    }
    result = swift_bridgeObjectRelease();
    if (v27 != v20)
      return 0;
  }
  v12 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_42;
  }
  if (v12 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v12);
  ++v4;
  if (v13)
    goto LABEL_23;
  v4 = v12 + 1;
  if (v12 + 1 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v4);
  if (v13)
    goto LABEL_23;
  v4 = v12 + 2;
  if (v12 + 2 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v4);
  if (v13)
    goto LABEL_23;
  v4 = v12 + 3;
  if (v12 + 3 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v4);
  if (v13)
  {
LABEL_23:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
    goto LABEL_24;
  }
  v14 = v12 + 4;
  if (v14 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_23;
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1B252B0D8(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  _QWORD *v23;
  char v25;
  int64_t v26;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v26 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v10 = v9 | (v4 << 6);
      goto LABEL_24;
    }
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v11 >= v26)
      return 1;
    v12 = *(_QWORD *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      v4 = v11 + 1;
      if (v11 + 1 >= v26)
        return 1;
      v12 = *(_QWORD *)(v5 + 8 * v4);
      if (!v12)
      {
        v4 = v11 + 2;
        if (v11 + 2 >= v26)
          return 1;
        v12 = *(_QWORD *)(v5 + 8 * v4);
        if (!v12)
        {
          v4 = v11 + 3;
          if (v11 + 3 >= v26)
            return 1;
          v12 = *(_QWORD *)(v5 + 8 * v4);
          if (!v12)
            break;
        }
      }
    }
LABEL_23:
    v8 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_24:
    v14 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v10);
    v15 = *v14;
    v16 = v14[1];
    v17 = (uint64_t *)(*(_QWORD *)(v3 + 56) + 16 * v10);
    v19 = *v17;
    v18 = v17[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = sub_1B24E113C(v15, v16);
    v22 = v21;
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    v23 = (_QWORD *)(*(_QWORD *)(a2 + 56) + 16 * v20);
    if (*v23 == v19 && v23[1] == v18)
    {
      result = swift_bridgeObjectRelease();
    }
    else
    {
      v25 = sub_1B25CD5D0();
      result = swift_bridgeObjectRelease();
      if ((v25 & 1) == 0)
        return 0;
    }
  }
  v13 = v11 + 4;
  if (v13 >= v26)
    return 1;
  v12 = *(_QWORD *)(v5 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v26)
      return 1;
    v12 = *(_QWORD *)(v5 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_23;
  }
LABEL_36:
  __break(1u);
  return result;
}

void sub_1B252B2F0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char v24;
  char v25;
  _QWORD *v26;
  unint64_t v27;
  BOOL v28;
  BOOL v29;
  BOOL v30;
  uint64_t v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;

  if (a1 == a2 || a1[2] != a2[2])
    return;
  v5 = 0;
  v6 = a1 + 8;
  OUTLINED_FUNCTION_106_2();
  if (!v2)
    goto LABEL_5;
LABEL_4:
  OUTLINED_FUNCTION_288_2();
  while (1)
  {
    v19 = (uint64_t *)(a1[6] + 16 * v7);
    v20 = *v19;
    v21 = v19[1];
    v22 = *(_QWORD **)(a1[7] + 8 * v7);
    OUTLINED_FUNCTION_95_1();
    OUTLINED_FUNCTION_133();
    v23 = sub_1B24E113C(v20, v21);
    v25 = v24;
    OUTLINED_FUNCTION_267();
    if ((v25 & 1) == 0 || (v26 = *(_QWORD **)(a2[7] + 8 * v23), v27 = v26[2], v27 != v22[2]))
    {
LABEL_54:
      OUTLINED_FUNCTION_69();
      return;
    }
    if (v27)
      v28 = v26 == v22;
    else
      v28 = 1;
    if (!v28)
    {
      v29 = v26[4] == v22[4] && v26[5] == v22[5];
      if (!v29 && (OUTLINED_FUNCTION_303_0() & 1) == 0)
        goto LABEL_54;
      if (v27 != 1)
      {
        v30 = v26[6] == v22[6] && v26[7] == v22[7];
        if (!v30 && (OUTLINED_FUNCTION_303_0() & 1) == 0)
          goto LABEL_54;
        if (v27 != 2)
        {
          v31 = 0;
          v32 = 2;
          while (v32 < v27)
          {
            v33 = v26[v31 + 8] == v22[v31 + 8] && v26[v31 + 9] == v22[v31 + 9];
            if (!v33 && (OUTLINED_FUNCTION_303_0() & 1) == 0)
              goto LABEL_54;
            ++v32;
            v31 += 2;
            if (v27 == v32)
              goto LABEL_51;
          }
          __break(1u);
LABEL_57:
          __break(1u);
          goto LABEL_58;
        }
      }
    }
LABEL_51:
    OUTLINED_FUNCTION_69();
    if (v2)
      goto LABEL_4;
LABEL_5:
    v8 = v5 + 1;
    if (__OFADD__(v5, 1))
      goto LABEL_57;
    if (v8 >= v34)
      return;
    ++v5;
    if (!v6[v8])
    {
      v5 = v8 + 1;
      OUTLINED_FUNCTION_379_0();
      if (v10 == v11)
        return;
      if (!v6[v5])
      {
        v5 = v9 + 2;
        OUTLINED_FUNCTION_379_0();
        if (v10 == v11)
          return;
        if (!v6[v5])
        {
          v5 = v12 + 3;
          OUTLINED_FUNCTION_379_0();
          if (v10 == v11)
            return;
          if (!v6[v5])
            break;
        }
      }
    }
LABEL_24:
    OUTLINED_FUNCTION_124_3();
    v2 = v17 & v16;
    v7 = v18 + (v5 << 6);
  }
  v14 = v13 + 4;
  if (v14 >= v34)
    return;
  if (v6[v14])
  {
    v5 = v14;
    goto LABEL_24;
  }
  while (1)
  {
    v5 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    OUTLINED_FUNCTION_379_0();
    if (v10 == v11)
      return;
    v14 = v15 + 1;
    if (v6[v5])
      goto LABEL_24;
  }
LABEL_58:
  __break(1u);
}

void sub_1B252B524()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char **v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  double v15;
  double v16;
  uint64_t v17;
  Float64 v18;
  uint64_t v19;
  Float64 v20;
  uint64_t v21;
  id v22;
  double v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_59_0();
  v24 = v0;
  v25 = v1;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  sub_1B25CC3F4();
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v8, v9);
  OUTLINED_FUNCTION_56_0();
  v10 = &selRef_ipaPhoneSequence;
  if ((v5 & 1) == 0)
    v10 = &selRef_tokenName;
  v11 = objc_msgSend(v7, *v10, v24, v25);
  sub_1B25CCA18();

  if (v3)
    LOBYTE(v3) = OUTLINED_FUNCTION_39_0(v12, sel_hasSpaceAfter);
  if (objc_msgSend(v7, sel_hasSpaceBefore) && (v3 & 1) == 0)
  {
    sub_1B25CCAE4();
    OUTLINED_FUNCTION_345();
  }
  if (objc_msgSend(v7, sel_hasSpaceAfter))
  {
    OUTLINED_FUNCTION_178();
    OUTLINED_FUNCTION_331_0();
    OUTLINED_FUNCTION_345();
  }
  sub_1B25CC3E8();
  v13 = OUTLINED_FUNCTION_383_0();
  v14 = OUTLINED_FUNCTION_115_0(v13, sel_start);
  if (v15 != 0.0 || (OUTLINED_FUNCTION_115_0((uint64_t)v14, "end"), v16 != 0.0))
  {
    OUTLINED_FUNCTION_241_1(1);
    if ((v17 & 1) != 0)
    {
      OUTLINED_FUNCTION_115_0(v17, sel_start);
      OUTLINED_FUNCTION_382_0(v18);
      v19 = OUTLINED_FUNCTION_368();
      OUTLINED_FUNCTION_115_0(v19, sel_silenceStart);
      OUTLINED_FUNCTION_382_0(v20);
      OUTLINED_FUNCTION_368();
      sub_1B25CCF88();
      sub_1B2531ABC();
      OUTLINED_FUNCTION_274_2();
    }
  }
  OUTLINED_FUNCTION_241_1(0);
  if ((v21 & 1) != 0)
  {
    v22 = OUTLINED_FUNCTION_115_0(v21, sel_confidence);
    if (v23 != 0.0)
    {
      OUTLINED_FUNCTION_115_0((uint64_t)v22, sel_confidence);
      sub_1B2531A80();
      OUTLINED_FUNCTION_274_2();
    }
  }
  OUTLINED_FUNCTION_7_1();
}

void Transcriber.ModelOptions.init(supplementalModelURL:farField:modelOverrideURL:speechProfiles:taskForMemoryLock:atypicalSpeech:)()
{
  char v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  _QWORD *v16;

  OUTLINED_FUNCTION_59_0();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  OUTLINED_FUNCTION_270_2(v14, v12);
  v15 = (int *)OUTLINED_FUNCTION_140_2();
  *(_BYTE *)(v13 + v15[5]) = v11;
  OUTLINED_FUNCTION_270_2(v9, v13 + v15[6]);
  *(_QWORD *)(v13 + v15[8]) = v7;
  v16 = (_QWORD *)(v13 + v15[7]);
  *v16 = v5;
  v16[1] = v3;
  *(_BYTE *)(v13 + v15[9]) = v1;
  *(_BYTE *)(v13 + v15[10]) = 0;
  *(_QWORD *)(v13 + v15[11]) = 0;
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_1B252B8F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B252B90C(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB1658], a2);
}

uint64_t sub_1B252B900@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B252B90C(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAF240], a2);
}

uint64_t sub_1B252B90C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;

  v5 = OUTLINED_FUNCTION_420_0(a1, a2);
  return OUTLINED_FUNCTION_21_0(a3, a1, v5, *(uint64_t (**)(void))(*(_QWORD *)(v5 - 8) + 16));
}

void sub_1B252B940(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v8;
  char v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_9_2();
    if (v8 != v9)
    {
      OUTLINED_FUNCTION_32_5();
      if (v8)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_8_6();
    }
  }
  OUTLINED_FUNCTION_271_2();
  if (v5)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36D050);
    v10 = OUTLINED_FUNCTION_8_4();
    v11 = _swift_stdlib_malloc_size((const void *)v10);
    *(_QWORD *)(v10 + 16) = v4;
    *(_QWORD *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 64);
  }
  else
  {
    v10 = MEMORY[0x1E0DEE9D8];
  }
  if ((a1 & 1) != 0)
  {
    sub_1B2568E80((char *)(a4 + 32), v4, (char *)(v10 + 32));
    *(_QWORD *)(a4 + 16) = 0;
    OUTLINED_FUNCTION_10_0();
  }
  else
  {
    v12 = OUTLINED_FUNCTION_320_0();
    sub_1B252C568(v12, v13, v14, v15);
  }
  OUTLINED_FUNCTION_262();
}

void sub_1B252B9F8()
{
  sub_1B252BAEC();
}

void sub_1B252BA14()
{
  sub_1B252BA30();
}

void sub_1B252BA30()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  const void *v11;
  size_t v12;

  OUTLINED_FUNCTION_26_6();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_9_2();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_32_5();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_8_6();
    }
  }
  OUTLINED_FUNCTION_31_4();
  if (v2)
  {
    OUTLINED_FUNCTION_37_5(v6, v7, v8, v9, v10);
    v11 = (const void *)OUTLINED_FUNCTION_8_4();
    v12 = _swift_stdlib_malloc_size(v11);
    OUTLINED_FUNCTION_128_1((uint64_t)(v12 - 32) / 16);
  }
  else
  {
    v11 = (const void *)MEMORY[0x1E0DEE9D8];
  }
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_71_7();
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_10_0();
  }
  else
  {
    OUTLINED_FUNCTION_100_2(v6, v7, (uint64_t)v11 + 32);
  }
  OUTLINED_FUNCTION_233();
}

void sub_1B252BAD0()
{
  sub_1B252BAEC();
}

void sub_1B252BAEC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  const void *v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;

  OUTLINED_FUNCTION_26_6();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_9_2();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_32_5();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_8_6();
    }
  }
  OUTLINED_FUNCTION_31_4();
  if (v2)
  {
    OUTLINED_FUNCTION_37_5(v6, v7, v8, v9, v10);
    v11 = (const void *)OUTLINED_FUNCTION_8_4();
    v12 = _swift_stdlib_malloc_size(v11);
    OUTLINED_FUNCTION_128_1((uint64_t)(v12 - 32) / 16);
  }
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_71_7();
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_10_0();
  }
  else
  {
    v13 = OUTLINED_FUNCTION_79_3();
    sub_1B252D0AC(v13, v14, v15, v16, v17);
  }
  OUTLINED_FUNCTION_233();
}

void sub_1B252BB90()
{
  sub_1B252BC00();
}

void sub_1B252BBAC()
{
  sub_1B252C388();
}

void sub_1B252BBC8()
{
  sub_1B252BAEC();
}

void sub_1B252BBE4()
{
  sub_1B252BC00();
}

void sub_1B252BC00()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  size_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  _QWORD *v11;

  OUTLINED_FUNCTION_123_2();
  OUTLINED_FUNCTION_26_6();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_9_2();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_32_5();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_8_6();
    }
  }
  OUTLINED_FUNCTION_31_4();
  if (v2)
  {
    OUTLINED_FUNCTION_37_5(v6, v7, v8, v9, v10);
    v11 = (_QWORD *)OUTLINED_FUNCTION_8_4();
    v6 = OUTLINED_FUNCTION_70_7(v11);
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9D8];
  }
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_71_7();
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_10_0();
  }
  else
  {
    OUTLINED_FUNCTION_100_2(v6, v7, v2 + 32);
  }
  OUTLINED_FUNCTION_462();
}

void sub_1B252BC90()
{
  sub_1B252BCE4();
}

void sub_1B252BCAC()
{
  sub_1B252BE90();
}

void sub_1B252BCC8()
{
  sub_1B252BCE4();
}

void sub_1B252BCE4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  size_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  _QWORD *v11;

  OUTLINED_FUNCTION_123_2();
  OUTLINED_FUNCTION_26_6();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_9_2();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_32_5();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_8_6();
    }
  }
  OUTLINED_FUNCTION_31_4();
  if (v2)
  {
    OUTLINED_FUNCTION_37_5(v6, v7, v8, v9, v10);
    v11 = (_QWORD *)OUTLINED_FUNCTION_8_4();
    v6 = OUTLINED_FUNCTION_70_7(v11);
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9D8];
  }
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_71_7();
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_10_0();
  }
  else
  {
    OUTLINED_FUNCTION_100_2(v6, v7, v2 + 32);
  }
  OUTLINED_FUNCTION_462();
}

void sub_1B252BD74()
{
  sub_1B252C2BC();
}

void sub_1B252BD90()
{
  sub_1B252BDAC();
}

void sub_1B252BDAC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  size_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  _QWORD *v11;

  OUTLINED_FUNCTION_123_2();
  OUTLINED_FUNCTION_26_6();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_9_2();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_32_5();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_8_6();
    }
  }
  OUTLINED_FUNCTION_31_4();
  if (v2)
  {
    OUTLINED_FUNCTION_37_5(v6, v7, v8, v9, v10);
    v11 = (_QWORD *)OUTLINED_FUNCTION_8_4();
    v6 = OUTLINED_FUNCTION_70_7(v11);
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9D8];
  }
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_71_7();
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_10_0();
  }
  else
  {
    OUTLINED_FUNCTION_100_2(v6, v7, v2 + 32);
  }
  OUTLINED_FUNCTION_462();
}

void sub_1B252BE3C()
{
  sub_1B252BDAC();
}

void sub_1B252BE58()
{
  sub_1B252BAEC();
}

void sub_1B252BE74()
{
  sub_1B252BE90();
}

void sub_1B252BE90()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;

  OUTLINED_FUNCTION_26_6();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_9_2();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_32_5();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_8_6();
    }
  }
  OUTLINED_FUNCTION_31_4();
  if (v3)
  {
    OUTLINED_FUNCTION_37_5(v7, v8, v9, v10, v11);
    v12 = (_QWORD *)OUTLINED_FUNCTION_8_4();
    OUTLINED_FUNCTION_59_5(v12);
    v12[2] = v2;
    v12[3] = v13;
  }
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_71_7();
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_10_0();
  }
  else
  {
    v14 = OUTLINED_FUNCTION_79_3();
    sub_1B252CF40(v14, v15, v16, v17, v18);
  }
  OUTLINED_FUNCTION_233();
}

void sub_1B252BF28(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;

  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_9_2();
    if (v8 != v9)
    {
      OUTLINED_FUNCTION_32_5();
      if (v8)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_8_6();
    }
  }
  OUTLINED_FUNCTION_271_2();
  if (v5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36A528);
    v10 = OUTLINED_FUNCTION_8_4();
    OUTLINED_FUNCTION_59_5((const void *)v10);
    *(_QWORD *)(v10 + 16) = v4;
    *(_QWORD *)(v10 + 24) = v11;
  }
  else
  {
    v10 = MEMORY[0x1E0DEE9D8];
  }
  if ((a1 & 1) != 0)
  {
    sub_1B2568F98((char *)(a4 + 32), v4, (char *)(v10 + 32));
    *(_QWORD *)(a4 + 16) = 0;
    OUTLINED_FUNCTION_10_0();
  }
  else
  {
    v12 = OUTLINED_FUNCTION_320_0();
    sub_1B252CCB4(v12, v13, v14, v15);
  }
  OUTLINED_FUNCTION_262();
}

void sub_1B252BFD0()
{
  sub_1B252BA30();
}

void sub_1B252BFEC()
{
  sub_1B252C128();
}

void sub_1B252C008()
{
  sub_1B252BE90();
}

void sub_1B252C024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1B252C038(a1, a2, a3, a4, &qword_1EEFD7600, (void (*)(uint64_t, uint64_t, char *))sub_1B2568ED4);
}

void sub_1B252C038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t, uint64_t, char *))
{
  char v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;

  v8 = a1;
  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_9_2();
    if (v10 != v11)
    {
      OUTLINED_FUNCTION_32_5();
      if (v10)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_8_6();
    }
  }
  else
  {
    v9 = a2;
  }
  v12 = *(_QWORD *)(a4 + 16);
  if (v9 <= v12)
    v13 = *(_QWORD *)(a4 + 16);
  else
    v13 = v9;
  if (v13)
  {
    OUTLINED_FUNCTION_37_5(a1, a2, a3, a4, a5);
    v14 = (char *)OUTLINED_FUNCTION_8_4();
    OUTLINED_FUNCTION_59_5(v14);
    *((_QWORD *)v14 + 2) = v12;
    *((_QWORD *)v14 + 3) = v15;
  }
  else
  {
    v14 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v16 = v14 + 32;
  if ((v8 & 1) != 0)
  {
    a6(a4 + 32, v12, v16);
    *(_QWORD *)(a4 + 16) = 0;
    OUTLINED_FUNCTION_10_0();
  }
  else
  {
    sub_1B252CFF8(0, v12, v16, a4);
  }
  OUTLINED_FUNCTION_233();
}

void sub_1B252C0F0()
{
  sub_1B252BAEC();
}

void sub_1B252C10C()
{
  sub_1B252C128();
}

void sub_1B252C128()
{
  uint64_t v0;
  void (*v1)(_QWORD);
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  const void *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void (*v21)(_QWORD);

  OUTLINED_FUNCTION_273_1();
  OUTLINED_FUNCTION_26_6();
  if ((v6 & 1) != 0)
  {
    OUTLINED_FUNCTION_9_2();
    if (v10 != v11)
    {
      OUTLINED_FUNCTION_32_5();
      if (v10)
      {
        __break(1u);
        goto LABEL_22;
      }
      OUTLINED_FUNCTION_8_6();
    }
  }
  else
  {
    v9 = v5;
  }
  if (v9 <= *(_QWORD *)(v0 + 16))
    v12 = *(_QWORD *)(v0 + 16);
  else
    v12 = v9;
  if (!v12)
    goto LABEL_17;
  OUTLINED_FUNCTION_37_5(v4, v5, v6, v7, v8);
  v1(0);
  v13 = (const void *)OUTLINED_FUNCTION_117_2();
  _swift_stdlib_malloc_size(v13);
  if (!v3 || ((OUTLINED_FUNCTION_264_2(), v15) ? (v15 = v3 == -1) : (v15 = 0), v15))
  {
LABEL_22:
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_380_0();
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_128_1(v14 / v3);
LABEL_17:
  v1(0);
  OUTLINED_FUNCTION_287_2();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_362_0(v16);
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_10_0();
  }
  else
  {
    v17 = OUTLINED_FUNCTION_79_3();
    sub_1B252CE94(v17, v18, v19, v20, v21);
  }
  OUTLINED_FUNCTION_155_2();
}

void sub_1B252C254()
{
  sub_1B252BAEC();
}

void sub_1B252C270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1B252C038(a1, a2, a3, a4, &qword_1EEFD9A68, (void (*)(uint64_t, uint64_t, char *))sub_1B2568ED4);
}

void sub_1B252C284()
{
  sub_1B252BAEC();
}

void sub_1B252C2A0()
{
  sub_1B252C2BC();
}

void sub_1B252C2BC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_123_2();
  OUTLINED_FUNCTION_26_6();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_9_2();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_32_5();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_8_6();
    }
  }
  OUTLINED_FUNCTION_31_4();
  if (v2)
  {
    OUTLINED_FUNCTION_37_5(v6, v7, v8, v9, v10);
    v11 = (_QWORD *)OUTLINED_FUNCTION_8_4();
    OUTLINED_FUNCTION_70_7(v11);
  }
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_71_7();
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_10_0();
  }
  else
  {
    v12 = OUTLINED_FUNCTION_79_3();
    sub_1B252D164(v12, v13, v14, v15);
  }
  OUTLINED_FUNCTION_462();
}

void sub_1B252C350()
{
  sub_1B252BDAC();
}

void sub_1B252C36C()
{
  sub_1B252C388();
}

void sub_1B252C388()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  const void *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *v20;

  OUTLINED_FUNCTION_273_1();
  OUTLINED_FUNCTION_26_6();
  if ((v5 & 1) != 0)
  {
    OUTLINED_FUNCTION_9_2();
    if (v9 != v10)
    {
      OUTLINED_FUNCTION_32_5();
      if (v9)
      {
        __break(1u);
        goto LABEL_22;
      }
      OUTLINED_FUNCTION_8_6();
    }
  }
  else
  {
    v8 = v4;
  }
  if (v8 <= *(_QWORD *)(v0 + 16))
    v11 = *(_QWORD *)(v0 + 16);
  else
    v11 = v8;
  if (!v11)
    goto LABEL_17;
  OUTLINED_FUNCTION_37_5(v3, v4, v5, v6, v7);
  OUTLINED_FUNCTION_404_0();
  v12 = (const void *)OUTLINED_FUNCTION_117_2();
  _swift_stdlib_malloc_size(v12);
  if (!v2 || ((OUTLINED_FUNCTION_264_2(), v14) ? (v14 = v2 == -1) : (v14 = 0), v14))
  {
LABEL_22:
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_380_0();
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_128_1(v13 / v2);
LABEL_17:
  OUTLINED_FUNCTION_404_0();
  OUTLINED_FUNCTION_287_2();
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_362_0(v15);
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_10_0();
  }
  else
  {
    v16 = OUTLINED_FUNCTION_79_3();
    sub_1B252D31C(v16, v17, v18, v19, v20);
  }
  OUTLINED_FUNCTION_155_2();
}

void sub_1B252C4AC(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v8;
  char v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_9_2();
    if (v8 != v9)
    {
      OUTLINED_FUNCTION_32_5();
      if (v8)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_8_6();
    }
  }
  OUTLINED_FUNCTION_271_2();
  if (v5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD9A70);
    v10 = OUTLINED_FUNCTION_8_4();
    v11 = _swift_stdlib_malloc_size((const void *)v10);
    *(_QWORD *)(v10 + 16) = v4;
    *(_QWORD *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    v10 = MEMORY[0x1E0DEE9D8];
  }
  if ((a1 & 1) != 0)
  {
    sub_1B2569360((char *)(a4 + 32), v4, (char *)(v10 + 32));
    *(_QWORD *)(a4 + 16) = 0;
    OUTLINED_FUNCTION_10_0();
  }
  else
  {
    v12 = OUTLINED_FUNCTION_320_0();
    sub_1B252D3C4(v12, v13, v14, v15);
  }
  OUTLINED_FUNCTION_233();
}

uint64_t sub_1B252C568(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + (a1 << 6) + 32;
    v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36D070);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1B25CD4A4();
  __break(1u);
  return result;
}

uint64_t sub_1B252C67C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1B25CD4A4();
  __break(1u);
  return result;
}

uint64_t sub_1B252C770(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6E38);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1B25CD4A4();
  __break(1u);
  return result;
}

uint64_t sub_1B252C88C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7470);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1B25CD4A4();
  __break(1u);
  return result;
}

char *sub_1B252C9A8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 48 * a1 + 32);
    v6 = 3 * v4;
    v7 = &__dst[16 * v6];
    if (v5 >= v7 || &v5[16 * v6] <= __dst)
    {
      memcpy(__dst, v5, 16 * v6);
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  result = (char *)sub_1B25CD4A4();
  __break(1u);
  return result;
}

uint64_t sub_1B252CAA0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7468);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1B25CD4A4();
  __break(1u);
  return result;
}

char *sub_1B252CBBC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 24 * a1 + 32);
    v6 = 3 * v4;
    v7 = &__dst[8 * v6];
    if (v5 >= v7 || &v5[8 * v6] <= __dst)
    {
      memcpy(__dst, v5, 8 * v6);
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  result = (char *)sub_1B25CD4A4();
  __break(1u);
  return result;
}

char *sub_1B252CCB4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = &__dst[8 * v4];
    if (v5 >= v6 || &v5[8 * v4] <= __dst)
    {
      memcpy(__dst, v5, 8 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_1B25CD4A4();
  __break(1u);
  return result;
}

char *sub_1B252CDA4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = &__dst[16 * v4];
    if (v5 >= v6 || &v5[16 * v4] <= __dst)
    {
      memcpy(__dst, v5, 16 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_1B25CD4A4();
  __break(1u);
  return result;
}

void sub_1B252CE94(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(_QWORD))
{
  unint64_t v6;
  char v7;
  BOOL v8;

  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_10_8();
    goto LABEL_11;
  }
  a5(0);
  OUTLINED_FUNCTION_95_3();
  if (v7)
    v8 = 0;
  else
    v8 = v6 > a3;
  if (!v8)
  {
    OUTLINED_FUNCTION_235_2();
    OUTLINED_FUNCTION_10_0();
    OUTLINED_FUNCTION_223();
    return;
  }
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_9_6();
LABEL_11:
  OUTLINED_FUNCTION_7_7();
  __break(1u);
}

void sub_1B252CF40(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_10_8();
    goto LABEL_11;
  }
  v6 = a4 + 8 * a1 + 32;
  if (v6 >= a3 + 8 * v5 || v6 + 8 * v5 <= a3)
  {
    OUTLINED_FUNCTION_37_5(a1, a2, a3, a4, a5);
    OUTLINED_FUNCTION_195_1();
    OUTLINED_FUNCTION_10_0();
    OUTLINED_FUNCTION_223_1();
    return;
  }
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_9_6();
LABEL_11:
  OUTLINED_FUNCTION_7_7();
  __break(1u);
}

void sub_1B252CFF8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_10_8();
    goto LABEL_11;
  }
  v5 = (char *)(a4 + 8 * a1 + 32);
  if (v5 >= &__dst[8 * v4] || &v5[8 * v4] <= __dst)
  {
    memcpy(__dst, v5, 8 * v4);
    OUTLINED_FUNCTION_10_0();
    OUTLINED_FUNCTION_771();
    return;
  }
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_9_6();
LABEL_11:
  OUTLINED_FUNCTION_7_7();
  __break(1u);
}

void sub_1B252D0AC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_10_8();
    goto LABEL_11;
  }
  v6 = a4 + 16 * a1 + 32;
  if (v6 >= a3 + 16 * v5 || v6 + 16 * v5 <= a3)
  {
    OUTLINED_FUNCTION_37_5(a1, a2, a3, a4, a5);
    OUTLINED_FUNCTION_195_1();
    OUTLINED_FUNCTION_10_0();
    OUTLINED_FUNCTION_223_1();
    return;
  }
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_9_6();
LABEL_11:
  OUTLINED_FUNCTION_7_7();
  __break(1u);
}

void sub_1B252D164(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_10_8();
    goto LABEL_11;
  }
  v5 = a4 + 24 * a1 + 32;
  if (v5 >= a3 + 24 * v4 || v5 + 24 * v4 <= a3)
  {
    swift_arrayInitWithCopy();
    OUTLINED_FUNCTION_10_0();
    OUTLINED_FUNCTION_771();
    return;
  }
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_9_6();
LABEL_11:
  OUTLINED_FUNCTION_7_7();
  __break(1u);
}

uint64_t sub_1B252D220(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1B25CD4A4();
  __break(1u);
  return result;
}

void sub_1B252D31C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  unint64_t v6;
  char v7;
  BOOL v8;

  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_10_8();
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_37_5(a1, a2, a3, a4, a5);
  OUTLINED_FUNCTION_95_3();
  if (v7)
    v8 = 0;
  else
    v8 = v6 > a3;
  if (!v8)
  {
    OUTLINED_FUNCTION_235_2();
    OUTLINED_FUNCTION_10_0();
    OUTLINED_FUNCTION_223();
    return;
  }
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_9_6();
LABEL_11:
  OUTLINED_FUNCTION_7_7();
  __break(1u);
}

uint64_t sub_1B252D3C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 56 * a1 + 32;
    v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD9A78);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1B25CD4A4();
  __break(1u);
  return result;
}

void *sub_1B252D4E4(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  BOOL v6;
  void *v7;
  const void *v8;
  size_t v9;
  void *result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_10_8();
  }
  else
  {
    OUTLINED_FUNCTION_254_2();
    if (!v5 & v4)
      v6 = v3 > v2;
    else
      v6 = 0;
    if (!v6)
    {
      v7 = (void *)OUTLINED_FUNCTION_205_2();
      return OUTLINED_FUNCTION_23_8(v7, v8, v9);
    }
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_9_6();
  }
  result = (void *)OUTLINED_FUNCTION_7_7();
  __break(1u);
  return result;
}

uint64_t sub_1B252D564(uint64_t a1, uint64_t a2)
{
  return sub_1B252D57C(a1, a2);
}

uint64_t sub_1B252D570(uint64_t a1, uint64_t a2)
{
  return sub_1B252D57C(a1, a2);
}

uint64_t sub_1B252D57C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_10_8();
  }
  else
  {
    OUTLINED_FUNCTION_129_1();
    v6 = *(_QWORD *)(*(_QWORD *)(v5(0) - 8) + 72) * v2;
    v7 = v3 + v6;
    v8 = v4 + v6;
    if (v7 <= v4 || v8 <= v3)
    {
      OUTLINED_FUNCTION_35_7();
      return OUTLINED_FUNCTION_14_5();
    }
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_9_6();
  }
  result = OUTLINED_FUNCTION_7_7();
  __break(1u);
  return result;
}

uint64_t sub_1B252D620()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  OUTLINED_FUNCTION_250_2();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_10_8();
  }
  else
  {
    if (v2 + 32 * v1 <= v0 || v0 + 32 * v1 <= v2)
      return OUTLINED_FUNCTION_67_5();
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_9_6();
  }
  result = OUTLINED_FUNCTION_7_7();
  __break(1u);
  return result;
}

uint64_t sub_1B252D6B8(uint64_t a1, uint64_t a2)
{
  return sub_1B252DF04(a1, a2);
}

uint64_t sub_1B252D6C4()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  OUTLINED_FUNCTION_250_2();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_10_8();
  }
  else
  {
    if (v2 + 16 * v1 <= v0 || v0 + 16 * v1 <= v2)
      return OUTLINED_FUNCTION_67_5();
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_9_6();
  }
  result = OUTLINED_FUNCTION_7_7();
  __break(1u);
  return result;
}

uint64_t sub_1B252D758(uint64_t a1, uint64_t a2)
{
  return sub_1B252DDB0(a1, a2);
}

uint64_t sub_1B252D764()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  OUTLINED_FUNCTION_250_2();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_10_8();
  }
  else
  {
    if (v2 + 72 * v1 <= v0 || v0 + 72 * v1 <= v2)
      return OUTLINED_FUNCTION_67_5();
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_9_6();
  }
  result = OUTLINED_FUNCTION_7_7();
  __break(1u);
  return result;
}

uint64_t sub_1B252D7FC(uint64_t a1, uint64_t a2)
{
  return sub_1B252D57C(a1, a2);
}

uint64_t sub_1B252D808(uint64_t a1, uint64_t a2)
{
  return sub_1B252DDB0(a1, a2);
}

void *sub_1B252D814(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  void *v6;
  const void *v7;
  size_t v8;
  void *result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_10_8();
  }
  else
  {
    v3 = a1 + 24 * a2;
    if (a3 + 24 * a2 > a1)
    {
      v4 = v3 >= a3;
      v5 = v3 == a3;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      v6 = (void *)OUTLINED_FUNCTION_205_2();
      return OUTLINED_FUNCTION_23_8(v6, v7, v8);
    }
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_9_6();
  }
  result = (void *)OUTLINED_FUNCTION_7_7();
  __break(1u);
  return result;
}

void *sub_1B252D8A8()
{
  char *v0;
  size_t v1;
  char *v2;
  uint64_t v3;
  void *result;

  OUTLINED_FUNCTION_250_2();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_10_8();
  }
  else
  {
    if (&v2[v1] <= v0 || &v0[v1] <= v2)
      return OUTLINED_FUNCTION_23_8(v2, v0, v1);
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_9_6();
  }
  result = (void *)OUTLINED_FUNCTION_7_7();
  __break(1u);
  return result;
}

uint64_t sub_1B252D934(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_10_8();
  }
  else
  {
    OUTLINED_FUNCTION_180_0();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6E38);
      OUTLINED_FUNCTION_35_7();
      return OUTLINED_FUNCTION_14_5();
    }
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_9_6();
  }
  result = OUTLINED_FUNCTION_7_7();
  __break(1u);
  return result;
}

uint64_t sub_1B252D9C4(uint64_t a1, uint64_t a2)
{
  return sub_1B252DDB0(a1, a2);
}

uint64_t sub_1B252D9D0(uint64_t a1, uint64_t a2)
{
  return sub_1B252D9E8(a1, a2);
}

uint64_t sub_1B252D9DC(uint64_t a1, uint64_t a2)
{
  return sub_1B252D9E8(a1, a2);
}

uint64_t sub_1B252D9E8(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  void (*v3)(_QWORD);
  unint64_t v4;
  char v5;
  char v6;
  BOOL v7;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_10_8();
  }
  else
  {
    OUTLINED_FUNCTION_214_2();
    if (!v6 & v5)
      v7 = v4 > v2;
    else
      v7 = 0;
    if (!v7)
    {
      v3(0);
      OUTLINED_FUNCTION_35_7();
      return OUTLINED_FUNCTION_14_5();
    }
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_9_6();
  }
  result = OUTLINED_FUNCTION_7_7();
  __break(1u);
  return result;
}

uint64_t sub_1B252DA74(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_10_8();
  }
  else
  {
    OUTLINED_FUNCTION_180_0();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7470);
      OUTLINED_FUNCTION_35_7();
      return OUTLINED_FUNCTION_14_5();
    }
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_9_6();
  }
  result = OUTLINED_FUNCTION_7_7();
  __break(1u);
  return result;
}

void *sub_1B252DB04(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  void *v6;
  const void *v7;
  size_t v8;
  void *result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_10_8();
  }
  else
  {
    v3 = a1 + 48 * a2;
    if (a3 + 48 * a2 > a1)
    {
      v4 = v3 >= a3;
      v5 = v3 == a3;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      v6 = (void *)OUTLINED_FUNCTION_205_2();
      return OUTLINED_FUNCTION_23_8(v6, v7, v8);
    }
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_9_6();
  }
  result = (void *)OUTLINED_FUNCTION_7_7();
  __break(1u);
  return result;
}

uint64_t sub_1B252DB98(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_10_8();
  }
  else
  {
    OUTLINED_FUNCTION_129_1();
    if (v4 + 48 * v3 <= v2 || v2 + 48 * v3 <= v4)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7468);
      OUTLINED_FUNCTION_35_7();
      return OUTLINED_FUNCTION_14_5();
    }
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_9_6();
  }
  result = OUTLINED_FUNCTION_7_7();
  __break(1u);
  return result;
}

uint64_t sub_1B252DC38(uint64_t a1, uint64_t a2)
{
  return sub_1B252DDB0(a1, a2);
}

uint64_t sub_1B252DC44(uint64_t a1, uint64_t a2)
{
  return sub_1B252D57C(a1, a2);
}

void *sub_1B252DC50(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  BOOL v6;
  void *v7;
  const void *v8;
  size_t v9;
  void *result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_10_8();
  }
  else
  {
    OUTLINED_FUNCTION_255_2();
    if (!v5 & v4)
      v6 = v3 > v2;
    else
      v6 = 0;
    if (!v6)
    {
      v7 = (void *)OUTLINED_FUNCTION_205_2();
      return OUTLINED_FUNCTION_23_8(v7, v8, v9);
    }
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_9_6();
  }
  result = (void *)OUTLINED_FUNCTION_7_7();
  __break(1u);
  return result;
}

uint64_t sub_1B252DCD0(uint64_t a1, uint64_t a2)
{
  return sub_1B252DF04(a1, a2);
}

uint64_t sub_1B252DCDC(uint64_t a1, uint64_t a2)
{
  return sub_1B252D57C(a1, a2);
}

uint64_t sub_1B252DCE8()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  OUTLINED_FUNCTION_250_2();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_10_8();
  }
  else
  {
    if (v2 + 160 * v1 <= v0 || v0 + 160 * v1 <= v2)
      return OUTLINED_FUNCTION_67_5();
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_9_6();
  }
  result = OUTLINED_FUNCTION_7_7();
  __break(1u);
  return result;
}

uint64_t sub_1B252DD80(uint64_t a1, uint64_t a2)
{
  return sub_1B252D57C(a1, a2);
}

uint64_t sub_1B252DD8C(uint64_t a1, uint64_t a2)
{
  return sub_1B252D57C(a1, a2);
}

uint64_t sub_1B252DD98(uint64_t a1, uint64_t a2)
{
  return sub_1B252DF04(a1, a2);
}

uint64_t sub_1B252DDA4(uint64_t a1, uint64_t a2)
{
  return sub_1B252DF04(a1, a2);
}

uint64_t sub_1B252DDB0(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  BOOL v7;
  BOOL v8;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_10_8();
  }
  else
  {
    OUTLINED_FUNCTION_129_1();
    v6 = v2 + 16 * v3;
    if (v4 + 16 * v3 > v2)
    {
      v7 = v6 >= v4;
      v8 = v6 == v4;
    }
    else
    {
      v7 = 0;
      v8 = 0;
    }
    if (v8 || !v7)
    {
      OUTLINED_FUNCTION_334_0(v2, v3, v4, v5);
      OUTLINED_FUNCTION_35_7();
      return OUTLINED_FUNCTION_14_5();
    }
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_9_6();
  }
  result = OUTLINED_FUNCTION_7_7();
  __break(1u);
  return result;
}

uint64_t sub_1B252DE44(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_10_8();
  }
  else
  {
    OUTLINED_FUNCTION_129_1();
    if (v4 + 32 * v3 <= v2 || v2 + 32 * v3 <= v4)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36D068);
      OUTLINED_FUNCTION_35_7();
      return OUTLINED_FUNCTION_14_5();
    }
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_9_6();
  }
  result = OUTLINED_FUNCTION_7_7();
  __break(1u);
  return result;
}

uint64_t sub_1B252DEE0(uint64_t a1, uint64_t a2)
{
  return sub_1B252DF04(a1, a2);
}

uint64_t sub_1B252DEEC(uint64_t a1, uint64_t a2)
{
  return sub_1B252D57C(a1, a2);
}

uint64_t sub_1B252DEF8(uint64_t a1, uint64_t a2)
{
  return sub_1B252DF04(a1, a2);
}

uint64_t sub_1B252DF04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  BOOL v7;
  BOOL v8;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_10_8();
  }
  else
  {
    OUTLINED_FUNCTION_214_2();
    if (!v8 && v7)
    {
      v7 = v6 >= v4;
      v8 = v6 == v4;
    }
    else
    {
      v7 = 0;
      v8 = 0;
    }
    if (v8 || !v7)
    {
      OUTLINED_FUNCTION_334_0(v2, v3, v4, v5);
      OUTLINED_FUNCTION_35_7();
      return OUTLINED_FUNCTION_14_5();
    }
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_9_6();
  }
  result = OUTLINED_FUNCTION_7_7();
  __break(1u);
  return result;
}

void sub_1B252DF8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  BOOL v5;

  OUTLINED_FUNCTION_668();
  v1 = *(_QWORD *)(v0 + 16);
  if (!v1)
    goto LABEL_9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7748);
  v2 = *(_QWORD *)(*(_QWORD *)(OUTLINED_FUNCTION_32_4() - 8) + 72);
  v3 = (_QWORD *)swift_allocObject();
  _swift_stdlib_malloc_size(v3);
  if (v2)
  {
    OUTLINED_FUNCTION_264_2();
    v5 = v5 && v2 == -1;
    if (!v5)
    {
      v3[2] = v1;
      v3[3] = 2 * (v4 / v2);
      sub_1B2583114();
      OUTLINED_FUNCTION_47_0();
      OUTLINED_FUNCTION_94_5();
      if (!v5)
        __break(1u);
LABEL_9:
      OUTLINED_FUNCTION_192_0();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1B252E05C()
{
  uint64_t v0;
  const void *v1;
  size_t v2;
  char v3;

  OUTLINED_FUNCTION_668();
  if (*(_QWORD *)(v0 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7620);
    v1 = (const void *)OUTLINED_FUNCTION_8_4();
    v2 = _swift_stdlib_malloc_size(v1);
    OUTLINED_FUNCTION_243_2((2 * ((uint64_t)(v2 - 32) / 8)) | 1);
    sub_1B2583394();
    OUTLINED_FUNCTION_133();
    OUTLINED_FUNCTION_94_5();
    if (!v3)
      __break(1u);
  }
  OUTLINED_FUNCTION_192_0();
}

void sub_1B252E0EC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  _QWORD *v8;
  size_t v9;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return;
  }
  if (v5)
  {
    if (v5 > 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD75B0);
      v8 = (_QWORD *)swift_allocObject();
      v9 = _swift_stdlib_malloc_size(v8);
      v8[2] = v5;
      v8[3] = 2 * ((uint64_t)(v9 - 32) / 16);
    }
    if (v4 != a3)
    {
      sub_1B252DDB0(a2 + 16 * a3, v5);
      return;
    }
    goto LABEL_9;
  }
}

void sub_1B252E1B0()
{
  uint64_t v0;
  const void *v1;
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_668();
  if (*(_QWORD *)(v0 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD9B10);
    v1 = (const void *)OUTLINED_FUNCTION_8_4();
    OUTLINED_FUNCTION_59_5(v1);
    OUTLINED_FUNCTION_243_2(v2);
    sub_1B258350C();
    OUTLINED_FUNCTION_133();
    OUTLINED_FUNCTION_94_5();
    if (!v3)
      __break(1u);
  }
  OUTLINED_FUNCTION_192_0();
}

void sub_1B252E22C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  char v13;
  char v14;
  char v15;
  _QWORD *v16;
  uint64_t v17;

  v6 = a4 >> 1;
  v7 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
  }
  else
  {
    if (!v7)
      goto LABEL_8;
    OUTLINED_FUNCTION_393_0();
    if (!(v14 ^ v15 | v13))
    {
      OUTLINED_FUNCTION_37_5(v8, v9, v10, v11, v12);
      v16 = (_QWORD *)OUTLINED_FUNCTION_8_4();
      OUTLINED_FUNCTION_59_5(v16);
      v16[2] = v7;
      v16[3] = v17;
    }
    if (v6 != v4)
    {
      sub_1B252DF04(v5 + 8 * v4, v7);
LABEL_8:
      OUTLINED_FUNCTION_233();
      return;
    }
  }
  __break(1u);
}

void sub_1B252E2BC()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  char v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  OUTLINED_FUNCTION_123_2();
  v4 = v3 >> 1;
  v6 = (v3 >> 1) - v5;
  if (__OFSUB__(v3 >> 1, v5))
  {
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (!v6)
    goto LABEL_13;
  OUTLINED_FUNCTION_393_0();
  if (v12 ^ v13 | v17)
    goto LABEL_11;
  OUTLINED_FUNCTION_37_5(v7, v8, v9, v10, v11);
  v14 = *(_QWORD *)(*(_QWORD *)(v0(0) - 8) + 72);
  v15 = (_QWORD *)swift_allocObject();
  _swift_stdlib_malloc_size(v15);
  if (!v14)
    goto LABEL_15;
  OUTLINED_FUNCTION_264_2();
  v17 = v17 && v14 == -1;
  if (v17)
    goto LABEL_16;
  v15[2] = v6;
  v15[3] = 2 * (v16 / v14);
LABEL_11:
  if (v4 != v1)
  {
    v0(0);
    OUTLINED_FUNCTION_182_2();
    sub_1B252D57C(v2 + *(_QWORD *)(v18 + 72) * v1, v6);
LABEL_13:
    OUTLINED_FUNCTION_462();
    return;
  }
LABEL_17:
  __break(1u);
}

void sub_1B252E3A8()
{
  OUTLINED_FUNCTION_204_2();
}

void sub_1B252E3F0()
{
  OUTLINED_FUNCTION_204_2();
}

void sub_1B252E438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _QWORD v17[14];

  OUTLINED_FUNCTION_59_0();
  v2 = v1;
  v17[13] = *MEMORY[0x1E0C80C00];
  if (*(_QWORD *)(v1 + 16))
  {
    v17[11] = v0;
    v3 = *(_QWORD *)(v0 + 16);
    if (v3)
    {
      v4 = 0;
      v5 = v1 + 56;
      v6 = v0 + 32;
      do
      {
        v7 = *(unsigned __int8 *)(v6 + v4++);
        sub_1B25CD6A8();
        sub_1B25CD6B4();
        v8 = sub_1B25CD6CC();
        v9 = -1 << *(_BYTE *)(v2 + 32);
        v10 = v8 & ~v9;
        if (((*(_QWORD *)(v5 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
        {
          v11 = *(_QWORD *)(v2 + 48);
          if (*(unsigned __int8 *)(v11 + v10) == v7)
          {
LABEL_12:
            v17[12] = v4;
            v12 = (unint64_t)(63 - v9) >> 6;
            v13 = OUTLINED_FUNCTION_95_1();
            if (v12 < 0x81 || (v13 = OUTLINED_FUNCTION_330_0(), (_DWORD)v13))
            {
              MEMORY[0x1E0C80A78](v13, v14);
              OUTLINED_FUNCTION_363_0((char *)v17 - v15);
              OUTLINED_FUNCTION_122_2();
              OUTLINED_FUNCTION_50_4();
              if (v2 == -56)
              {
                swift_bridgeObjectRelease();
                break;
              }
              OUTLINED_FUNCTION_386_0();
              OUTLINED_FUNCTION_406_0();
              __break(1u);
            }
            else
            {
              v16 = (void *)OUTLINED_FUNCTION_246();
              OUTLINED_FUNCTION_363_0(v16);
              OUTLINED_FUNCTION_122_2();
              OUTLINED_FUNCTION_50_4();
              if (v2 == -56)
              {
                swift_bridgeObjectRelease();
                OUTLINED_FUNCTION_174();
              }
            }
            OUTLINED_FUNCTION_148_0();
            OUTLINED_FUNCTION_174();
          }
          while (1)
          {
            v10 = (v10 + 1) & ~v9;
            if (((*(_QWORD *)(v5 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
              break;
            if (*(unsigned __int8 *)(v11 + v10) == v7)
              goto LABEL_12;
          }
        }
      }
      while (v4 != v3);
    }
  }
  else
  {
    OUTLINED_FUNCTION_50_4();
  }
  OUTLINED_FUNCTION_7_1();
}

void sub_1B252E634()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  int64_t v23;
  int64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  void *v29;
  const void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  int64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  int64_t v41;
  unint64_t v42;

  OUTLINED_FUNCTION_59_0();
  v2 = v1;
  if (*(_QWORD *)(v1 + 16))
  {
    v3 = v0;
    if ((v0 & 0xC000000000000001) != 0)
    {
      OUTLINED_FUNCTION_95_1();
      sub_1B25CD1E0();
      type metadata accessor for SpeechRecognizerWorker();
      sub_1B2531930(&qword_1EEFD6AA0, (void (*)(uint64_t))type metadata accessor for SpeechRecognizerWorker);
      sub_1B25CCE74();
      v3 = v38;
      v4 = v39;
      v6 = v40;
      v5 = v41;
      v7 = v42;
    }
    else
    {
      v8 = -1 << *(_BYTE *)(v0 + 32);
      v4 = v0 + 56;
      v6 = ~v8;
      v9 = -v8;
      if (v9 < 64)
        v10 = ~(-1 << v9);
      else
        v10 = -1;
      v7 = v10 & *(_QWORD *)(v0 + 56);
      OUTLINED_FUNCTION_95_1();
      v5 = 0;
    }
    v33 = v3;
    v34 = v4;
    v35 = v6;
    v36 = v5;
    v37 = v7;
    v11 = v2 + 56;
    v12 = MEMORY[0x1E0DEE9B0] + 8;
    if (v3 < 0)
      goto LABEL_15;
LABEL_10:
    if (v7)
    {
      v4 = (v7 - 1) & v7;
      v13 = __clz(__rbit64(v7)) | (v5 << 6);
LABEL_12:
      v3 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v13);
      OUTLINED_FUNCTION_52_4();
      goto LABEL_13;
    }
    v18 = v5 + 1;
    if (__OFADD__(v5, 1))
      __break(1u);
    v19 = (unint64_t)(v6 + 64) >> 6;
    if (v18 >= v19)
    {
      OUTLINED_FUNCTION_377_0();
      goto LABEL_13;
    }
    v20 = *(_QWORD *)(v34 + 8 * v18);
    if (v20)
    {
LABEL_28:
      v4 = (v20 - 1) & v20;
      v13 = __clz(__rbit64(v20)) + (v18 << 6);
      v5 = v18;
      goto LABEL_12;
    }
    v21 = v5 + 2;
    if (v5 + 2 >= v19)
    {
LABEL_44:
      OUTLINED_FUNCTION_377_0();
      v5 = v23;
      goto LABEL_13;
    }
    v20 = *(_QWORD *)(v34 + 8 * v21);
    if (v20)
    {
LABEL_32:
      v18 = v21;
      goto LABEL_28;
    }
    if (v5 + 3 < v19)
    {
      v20 = *(_QWORD *)(v34 + 8 * (v5 + 3));
      if (v20)
      {
        v18 = v5 + 3;
        goto LABEL_28;
      }
      v21 = v5 + 4;
      if (v5 + 4 >= v19)
      {
        OUTLINED_FUNCTION_377_0();
        v5 = v25;
LABEL_13:
        v36 = v5;
        v37 = v4;
        if (!v3)
        {
LABEL_54:
          sub_1B24EADD4();
          goto LABEL_53;
        }
        while (1)
        {
          sub_1B25CD6A8();
          sub_1B25CD6B4();
          v14 = sub_1B25CD6CC();
          v15 = -1 << *(_BYTE *)(v2 + 32);
          v4 = v14 & ~v15;
          if (((*(_QWORD *)(v11 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          {
            v16 = *(_QWORD *)(v2 + 48);
            if (*(_QWORD *)(v16 + 8 * v4) == v3)
            {
LABEL_47:
              swift_release();
              OUTLINED_FUNCTION_292_2();
              if (v28 < 0xE || (v26 = OUTLINED_FUNCTION_330_0(), (_DWORD)v26))
              {
                MEMORY[0x1E0C80A78](v26, v27);
                v29 = (void *)OUTLINED_FUNCTION_215_2();
                memcpy(v29, v30, 8 * v12);
                OUTLINED_FUNCTION_157_2();
                OUTLINED_FUNCTION_50_4();
                if (v2 == -56)
                {
                  OUTLINED_FUNCTION_289_2();
                  goto LABEL_53;
                }
                OUTLINED_FUNCTION_386_0();
                OUTLINED_FUNCTION_406_0();
                __break(1u);
              }
              else
              {
                v31 = (void *)OUTLINED_FUNCTION_246();
                memcpy(v31, (const void *)(v2 + 56), 8 * v12);
                OUTLINED_FUNCTION_157_2();
                OUTLINED_FUNCTION_50_4();
                if (v2 == -56)
                {
                  OUTLINED_FUNCTION_289_2();
                  OUTLINED_FUNCTION_174();
                }
              }
              OUTLINED_FUNCTION_148_0();
              OUTLINED_FUNCTION_174();
            }
            v17 = ~v15;
            while (1)
            {
              v4 = (v4 + 1) & v17;
              if (((*(_QWORD *)(v11 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) == 0)
                break;
              if (*(_QWORD *)(v16 + 8 * v4) == v3)
                goto LABEL_47;
            }
          }
          swift_release();
          v3 = v33;
          v6 = v35;
          v5 = v36;
          v7 = v37;
          if ((v33 & 0x8000000000000000) == 0)
            goto LABEL_10;
LABEL_15:
          if (sub_1B25CD234())
          {
            type metadata accessor for SpeechRecognizerWorker();
            swift_unknownObjectRetain();
            swift_dynamicCast();
            v3 = v32;
            swift_unknownObjectRelease();
            if (v32)
              continue;
          }
          goto LABEL_54;
        }
      }
      v20 = *(_QWORD *)(v34 + 8 * v21);
      if (v20)
        goto LABEL_32;
      v18 = v5 + 5;
      if (v5 + 5 < v19)
      {
        v20 = *(_QWORD *)(v34 + 8 * v18);
        if (!v20)
        {
          v22 = v5 + 6;
          do
          {
            if (v22 >= v19)
              goto LABEL_44;
            v20 = *(_QWORD *)(v34 + 8 * v22++);
          }
          while (!v20);
          v18 = v22 - 1;
        }
        goto LABEL_28;
      }
    }
    OUTLINED_FUNCTION_377_0();
    v5 = v24;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_50_4();
LABEL_53:
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_1B252EA78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  size_t v13;
  uint64_t isStackAllocationSafe;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  void *v19;
  _BYTE v21[16];
  _QWORD v22[3];

  v2 = a2;
  v22[2] = *MEMORY[0x1E0C80C00];
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  v22[0] = a1;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v5 = 0;
    v6 = a2 + 56;
    do
    {
      v7 = *(unsigned __int8 *)(a1 + 32 + v5++);
      sub_1B25CD6A8();
      sub_1B25CD6B4();
      v8 = sub_1B25CD6CC();
      v9 = -1 << *(_BYTE *)(v2 + 32);
      v10 = v8 & ~v9;
      if (((*(_QWORD *)(v6 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
      {
        v11 = *(_QWORD *)(v2 + 48);
        if (v7 == *(unsigned __int8 *)(v11 + v10))
        {
LABEL_12:
          v22[1] = v5;
          v12 = (unint64_t)(63 - v9) >> 6;
          v13 = 8 * v12;
          isStackAllocationSafe = swift_bridgeObjectRetain();
          if (v12 < 0x81
            || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
          {
            MEMORY[0x1E0C80A78](isStackAllocationSafe, v15);
            v17 = &v21[-v16];
            memcpy(&v21[-v16], (const void *)(v2 + 56), v13);
            v18 = sub_1B252F1D4((uint64_t)v17, v12, v2, v10, v22);
            swift_release();
            swift_bridgeObjectRelease();
          }
          else
          {
            v19 = (void *)swift_slowAlloc();
            memcpy(v19, (const void *)(v2 + 56), v13);
            v18 = sub_1B252F1D4((uint64_t)v19, v12, v2, v10, v22);
            swift_release();
            swift_bridgeObjectRelease();
            MEMORY[0x1B5E262B4](v19, -1, -1);
          }
          return v18;
        }
        while (1)
        {
          v10 = (v10 + 1) & ~v9;
          if (((*(_QWORD *)(v6 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
            break;
          if (v7 == *(unsigned __int8 *)(v11 + v10))
            goto LABEL_12;
        }
      }
    }
    while (v5 != v4);
  }
  return v2;
}

uint64_t sub_1B252ED00(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5, uint64_t *a6)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t i;
  unint64_t v22;
  uint64_t v23;

  v7 = (_QWORD *)result;
  v8 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v9 = v8 - 1;
  v11 = *a5;
  v10 = a5[1];
  v12 = *(_QWORD *)(*a5 + 16);
  if (v10 == v12)
  {
LABEL_16:
    OUTLINED_FUNCTION_52_4();
    return sub_1B252F378(v7, a2, v9, a3, a6);
  }
  else
  {
    v14 = a3 + 56;
    while ((v10 & 0x8000000000000000) == 0)
    {
      if (v10 >= v12)
        goto LABEL_20;
      v15 = *(unsigned __int8 *)(v11 + v10 + 32);
      a5[1] = v10 + 1;
      sub_1B25CD6A8();
      sub_1B25CD6B4();
      result = sub_1B25CD6CC();
      v16 = -1 << *(_BYTE *)(a3 + 32);
      v17 = result & ~v16;
      v18 = v17 >> 6;
      v19 = 1 << v17;
      if (((1 << v17) & *(_QWORD *)(v14 + 8 * (v17 >> 6))) != 0)
      {
        v20 = *(_QWORD *)(a3 + 48);
        if (*(unsigned __int8 *)(v20 + v17) == v15)
        {
LABEL_12:
          v23 = v7[v18];
          v7[v18] = v23 & ~v19;
          if ((v19 & v23) != 0)
          {
            if (__OFSUB__(v9--, 1))
              goto LABEL_21;
            if (!v9)
              return MEMORY[0x1E0DEE9E8];
          }
        }
        else
        {
          for (i = v17 + 1; ; i = v22 + 1)
          {
            v22 = i & ~v16;
            if (((*(_QWORD *)(v14 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
              break;
            if (*(unsigned __int8 *)(v20 + v22) == v15)
            {
              v18 = v22 >> 6;
              v19 = 1 << v22;
              goto LABEL_12;
            }
          }
        }
      }
      v11 = *a5;
      v10 = a5[1];
      v12 = *(_QWORD *)(*a5 + 16);
      if (v10 == v12)
        goto LABEL_16;
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
  }
  return result;
}

uint64_t sub_1B252EEA4(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  unint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t i;
  unint64_t v24;
  int64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  int64_t v30;
  int64_t v31;
  uint64_t v33;
  uint64_t v34;

  v7 = (unint64_t *)result;
  v8 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v9 = v8 - 1;
  v10 = a3 + 56;
  while (2)
  {
    v33 = v9;
    do
    {
      while (1)
      {
        if ((*a5 & 0x8000000000000000) == 0)
        {
          v12 = a5[3];
          v11 = a5[4];
          if (v11)
          {
            v13 = (v11 - 1) & v11;
            v14 = __clz(__rbit64(v11)) | (v12 << 6);
LABEL_6:
            v15 = *(_QWORD *)(*(_QWORD *)(*a5 + 48) + 8 * v14);
            swift_retain();
            goto LABEL_7;
          }
          v25 = v12 + 1;
          if (__OFADD__(v12, 1))
          {
            __break(1u);
            goto LABEL_49;
          }
          v26 = (unint64_t)(a5[2] + 64) >> 6;
          if (v25 >= v26)
          {
            v15 = 0;
            v13 = 0;
            goto LABEL_7;
          }
          v27 = a5[1];
          v28 = *(_QWORD *)(v27 + 8 * v25);
          if (v28)
          {
LABEL_21:
            v13 = (v28 - 1) & v28;
            v14 = __clz(__rbit64(v28)) + (v25 << 6);
            v12 = v25;
            goto LABEL_6;
          }
          v30 = v12 + 2;
          if (v12 + 2 >= v26)
            goto LABEL_41;
          v28 = *(_QWORD *)(v27 + 8 * v30);
          if (v28)
          {
LABEL_29:
            v25 = v30;
            goto LABEL_21;
          }
          if (v12 + 3 < v26)
          {
            v28 = *(_QWORD *)(v27 + 8 * (v12 + 3));
            if (v28)
            {
              v25 = v12 + 3;
              goto LABEL_21;
            }
            v30 = v12 + 4;
            if (v12 + 4 >= v26)
            {
              v15 = 0;
              v13 = 0;
              v12 += 3;
LABEL_7:
              a5[3] = v12;
              a5[4] = v13;
              if (!v15)
                goto LABEL_47;
              goto LABEL_11;
            }
            v28 = *(_QWORD *)(v27 + 8 * v30);
            if (v28)
              goto LABEL_29;
            v25 = v12 + 5;
            if (v12 + 5 < v26)
            {
              v28 = *(_QWORD *)(v27 + 8 * v25);
              if (v28)
                goto LABEL_21;
              v25 = v26 - 1;
              v31 = v12 + 6;
              while (v31 < v26)
              {
                v28 = *(_QWORD *)(v27 + 8 * v31++);
                if (v28)
                {
                  v25 = v31 - 1;
                  goto LABEL_21;
                }
              }
LABEL_41:
              v15 = 0;
              v13 = 0;
              v12 = v25;
              goto LABEL_7;
            }
          }
          v15 = 0;
          v13 = 0;
          v12 = v30;
          goto LABEL_7;
        }
        if (!sub_1B25CD234()
          || (type metadata accessor for SpeechRecognizerWorker(),
              swift_unknownObjectRetain(),
              swift_dynamicCast(),
              v15 = v34,
              swift_unknownObjectRelease(),
              !v34))
        {
LABEL_47:
          swift_retain();
          return sub_1B252F5B0(v7, a2, v33, a3);
        }
LABEL_11:
        sub_1B25CD6A8();
        sub_1B25CD6B4();
        v16 = sub_1B25CD6CC();
        v17 = -1 << *(_BYTE *)(a3 + 32);
        v18 = v16 & ~v17;
        v19 = v18 >> 6;
        v20 = 1 << v18;
        if (((1 << v18) & *(_QWORD *)(v10 + 8 * (v18 >> 6))) == 0)
          goto LABEL_17;
        v21 = *(_QWORD *)(a3 + 48);
        if (*(_QWORD *)(v21 + 8 * v18) == v15)
          break;
        v22 = ~v17;
        for (i = v18 + 1; ; i = v24 + 1)
        {
          v24 = i & v22;
          if (((*(_QWORD *)(v10 + (((i & v22) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v22)) & 1) == 0)
            break;
          if (*(_QWORD *)(v21 + 8 * v24) == v15)
          {
            result = swift_release();
            v19 = v24 >> 6;
            v20 = 1 << v24;
            goto LABEL_24;
          }
        }
LABEL_17:
        result = swift_release();
      }
      result = swift_release();
LABEL_24:
      v29 = v7[v19];
      v7[v19] = v29 & ~v20;
    }
    while ((v20 & v29) == 0);
    v9 = v33 - 1;
    if (__OFSUB__(v33, 1))
    {
LABEL_49:
      __break(1u);
      return result;
    }
    if (v33 != 1)
      continue;
    return MEMORY[0x1E0DEE9E8];
  }
}

uint64_t sub_1B252F1D4(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t i;
  unint64_t v21;
  unint64_t v22;

  v6 = (unint64_t *)result;
  v7 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v8 = v7 - 1;
  v10 = *a5;
  v9 = a5[1];
  v11 = *(_QWORD *)(*a5 + 16);
  if (v9 == v11)
  {
LABEL_16:
    swift_retain();
    return sub_1B252FA80(v6, a2, v8, a3);
  }
  else
  {
    v13 = a3 + 56;
    while ((v9 & 0x8000000000000000) == 0)
    {
      if (v9 >= v11)
        goto LABEL_20;
      v14 = *(unsigned __int8 *)(v10 + v9 + 32);
      a5[1] = v9 + 1;
      sub_1B25CD6A8();
      sub_1B25CD6B4();
      result = sub_1B25CD6CC();
      v15 = -1 << *(_BYTE *)(a3 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      v18 = 1 << v16;
      if (((1 << v16) & *(_QWORD *)(v13 + 8 * (v16 >> 6))) != 0)
      {
        v19 = *(_QWORD *)(a3 + 48);
        if (v14 == *(unsigned __int8 *)(v19 + v16))
        {
LABEL_12:
          v22 = v6[v17];
          v6[v17] = v22 & ~v18;
          if ((v18 & v22) != 0)
          {
            if (__OFSUB__(v8--, 1))
              goto LABEL_21;
            if (!v8)
              return MEMORY[0x1E0DEE9E8];
          }
        }
        else
        {
          for (i = v16 + 1; ; i = v21 + 1)
          {
            v21 = i & ~v15;
            if (((*(_QWORD *)(v13 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
              break;
            if (v14 == *(unsigned __int8 *)(v19 + v21))
            {
              v17 = v21 >> 6;
              v18 = 1 << v21;
              goto LABEL_12;
            }
          }
        }
      }
      v10 = *a5;
      v9 = a5[1];
      v11 = *(_QWORD *)(*a5 + 16);
      if (v9 == v11)
        goto LABEL_16;
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
  }
  return result;
}

uint64_t sub_1B252F378(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD *v31;

  v5 = a4;
  if (!a3)
  {
    v10 = MEMORY[0x1E0DEE9E8];
LABEL_35:
    OUTLINED_FUNCTION_50_4();
    return v10;
  }
  v6 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v5;
  OUTLINED_FUNCTION_37_5((uint64_t)a1, a2, a3, a4, a5);
  result = sub_1B25CD2B8();
  v10 = result;
  v31 = a1;
  if (a2 < 1)
    v11 = 0;
  else
    v11 = *a1;
  v12 = 0;
  v13 = result + 56;
  while (1)
  {
    if (v11)
    {
      OUTLINED_FUNCTION_370_0();
      v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
      goto LABEL_39;
    if (v16 >= a2)
      goto LABEL_35;
    ++v12;
    if (!v31[v16])
    {
      v12 = v16 + 1;
      if (v16 + 1 >= a2)
        goto LABEL_35;
      if (!v31[v12])
      {
        v12 = v16 + 2;
        if (v16 + 2 >= a2)
          goto LABEL_35;
        if (!v31[v12])
          break;
      }
    }
LABEL_23:
    OUTLINED_FUNCTION_179_2();
    v11 = v19 & v18;
    v15 = v20 + (v12 << 6);
LABEL_24:
    v21 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v15);
    OUTLINED_FUNCTION_6();
    sub_1B25CD6B4();
    result = OUTLINED_FUNCTION_2();
    v22 = -1 << *(_BYTE *)(v10 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) == 0)
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v22) >> 6;
      while (++v24 != v27 || (v26 & 1) == 0)
      {
        v28 = v24 == v27;
        if (v24 == v27)
          v24 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v13 + 8 * v24);
        if (v29 != -1)
        {
          v25 = __clz(__rbit64(~v29)) + (v24 << 6);
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v25 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
LABEL_33:
    *(_QWORD *)(v13 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    *(_BYTE *)(*(_QWORD *)(v10 + 48) + v25) = v21;
    ++*(_QWORD *)(v10 + 16);
    if (__OFSUB__(v6--, 1))
      goto LABEL_38;
    if (!v6)
      goto LABEL_35;
  }
  v17 = v16 + 3;
  if (v17 >= a2)
    goto LABEL_35;
  if (v31[v17])
  {
    v12 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v12 >= a2)
      goto LABEL_35;
    ++v17;
    if (v31[v12])
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1B252F5B0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  unint64_t *v28;

  v4 = a4;
  if (!a3)
  {
    v9 = MEMORY[0x1E0DEE9E8];
LABEL_35:
    swift_release();
    return v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD8E08);
  result = sub_1B25CD2B8();
  v9 = result;
  v28 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= a2)
      goto LABEL_35;
    v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_35;
      v16 = v28[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_35;
        v16 = v28[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    sub_1B25CD6A8();
    sub_1B25CD6B4();
    result = sub_1B25CD6CC();
    v19 = -1 << *(_BYTE *)(v9 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) == 0)
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      while (++v21 != v24 || (v23 & 1) == 0)
      {
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v12 + 8 * v21);
        if (v26 != -1)
        {
          v22 = __clz(__rbit64(~v26)) + (v21 << 6);
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_33:
    *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v22) = v18;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      goto LABEL_38;
    result = swift_retain();
    if (!v5)
      goto LABEL_35;
  }
  v17 = v15 + 3;
  if (v17 >= a2)
    goto LABEL_35;
  v16 = v28[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_35;
    v16 = v28[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1B252F818(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  unint64_t *v29;

  v4 = a4;
  if (!a3)
  {
    v9 = MEMORY[0x1E0DEE9E8];
LABEL_35:
    swift_release();
    return v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD8F38);
  result = sub_1B25CD2B8();
  v9 = result;
  v29 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= a2)
      goto LABEL_35;
    v16 = v29[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_35;
      v16 = v29[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_35;
        v16 = v29[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(void **)(*(_QWORD *)(v4 + 48) + 8 * v14);
    sub_1B25CD6A8();
    v19 = v18;
    sub_1B25CD0E4();
    result = sub_1B25CD6CC();
    v20 = -1 << *(_BYTE *)(v9 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v12 + 8 * (v21 >> 6))) == 0)
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v12 + 8 * v22);
        if (v27 != -1)
        {
          v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_33:
    *(_QWORD *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v23) = v19;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      goto LABEL_38;
    if (!v5)
      goto LABEL_35;
  }
  v17 = v15 + 3;
  if (v17 >= a2)
    goto LABEL_35;
  v16 = v29[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_35;
    v16 = v29[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1B252FA80(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  unint64_t *v28;

  v4 = a4;
  if (!a3)
  {
    v9 = MEMORY[0x1E0DEE9E8];
LABEL_35:
    swift_release();
    return v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD74B0);
  result = sub_1B25CD2B8();
  v9 = result;
  v28 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= a2)
      goto LABEL_35;
    v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_35;
      v16 = v28[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_35;
        v16 = v28[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(_BYTE *)(*(_QWORD *)(v4 + 48) + v14);
    sub_1B25CD6A8();
    sub_1B25CD6B4();
    result = sub_1B25CD6CC();
    v19 = -1 << *(_BYTE *)(v9 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) == 0)
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      while (++v21 != v24 || (v23 & 1) == 0)
      {
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v12 + 8 * v21);
        if (v26 != -1)
        {
          v22 = __clz(__rbit64(~v26)) + (v21 << 6);
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_33:
    *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_BYTE *)(*(_QWORD *)(v9 + 48) + v22) = v18;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      goto LABEL_38;
    if (!v5)
      goto LABEL_35;
  }
  v17 = v15 + 3;
  if (v17 >= a2)
    goto LABEL_35;
  v16 = v28[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_35;
    v16 = v28[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

void sub_1B252FCE0()
{
  sub_1B252FD2C();
}

void sub_1B252FD2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;

  OUTLINED_FUNCTION_129_1();
  OUTLINED_FUNCTION_292_2();
  if (v3 > 0xD)
  {
    v1 = OUTLINED_FUNCTION_330_0();
    if ((v1 & 1) == 0)
      goto LABEL_5;
  }
  MEMORY[0x1E0C80A78](v1, v2);
  OUTLINED_FUNCTION_319_0();
  OUTLINED_FUNCTION_154_2();
  OUTLINED_FUNCTION_50_4();
  if (v0)
  {
    OUTLINED_FUNCTION_386_0();
    OUTLINED_FUNCTION_406_0();
    __break(1u);
LABEL_5:
    OUTLINED_FUNCTION_246();
    OUTLINED_FUNCTION_319_0();
    OUTLINED_FUNCTION_154_2();
    OUTLINED_FUNCTION_50_4();
    if (!v0)
      OUTLINED_FUNCTION_174();
    OUTLINED_FUNCTION_148_0();
    OUTLINED_FUNCTION_174();
  }
  OUTLINED_FUNCTION_233();
}

void sub_1B252FE2C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t i;
  unint64_t v31;
  id v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  int64_t v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  char v55;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v5 = a4;
  v6 = a3;
  if (*(_QWORD *)(a4 + 16) >= *(_QWORD *)(a3 + 16))
  {
    v60 = a3 + 56;
    v61 = 0;
    OUTLINED_FUNCTION_203_1();
    v37 = v36 & v35;
    v63 = (unint64_t)(v38 + 63) >> 6;
    while (1)
    {
      while (1)
      {
        if (v37)
        {
          v39 = __clz(__rbit64(v37));
          v37 &= v37 - 1;
          v67 = v34;
          v40 = v39 | (v34 << 6);
        }
        else
        {
          v41 = v34 + 1;
          if (__OFADD__(v34, 1))
          {
LABEL_53:
            __break(1u);
            goto LABEL_54;
          }
          if (v41 >= v63)
            goto LABEL_51;
          if (!*(_QWORD *)(v60 + 8 * v41))
          {
            if (v34 + 2 >= v63)
              goto LABEL_51;
            if (!*(_QWORD *)(v60 + 8 * (v34 + 2)))
            {
              v42 = v34 + 3;
              if (v34 + 3 >= v63)
                goto LABEL_51;
              if (!*(_QWORD *)(v60 + 8 * v42))
              {
                while (1)
                {
                  v43 = v42 + 1;
                  if (__OFADD__(v42, 1))
                    goto LABEL_55;
                  if (v43 >= v63)
                    break;
                  ++v42;
                  if (*(_QWORD *)(v60 + 8 * v43))
                    goto LABEL_41;
                }
LABEL_51:
                swift_retain();
                sub_1B252F818(a1, a2, v61, v6);
                return;
              }
            }
          }
LABEL_41:
          OUTLINED_FUNCTION_179_2();
          v37 = v45 & v44;
          v67 = v46;
          v40 = v47 + (v46 << 6);
        }
        v65 = v40;
        v48 = *(void **)(*(_QWORD *)(v6 + 48) + 8 * v40);
        sub_1B25CD6A8();
        v49 = v48;
        OUTLINED_FUNCTION_265_2();
        v50 = sub_1B25CD6CC();
        v51 = -1 << *(_BYTE *)(v5 + 32);
        v52 = v50 & ~v51;
        OUTLINED_FUNCTION_344_0();
        if ((v53 & 1) != 0)
          break;
LABEL_50:

        v34 = v67;
      }
      sub_1B24B3050(0, &qword_1EEFD73A8);
      OUTLINED_FUNCTION_347_0(*(_QWORD *)(v5 + 48));
      OUTLINED_FUNCTION_161_0();
      OUTLINED_FUNCTION_278_2();
      if ((v4 & 1) == 0)
      {
        v54 = ~v51;
        do
        {
          v52 = (v52 + 1) & v54;
          OUTLINED_FUNCTION_344_0();
          v5 = a4;
          if ((v55 & 1) == 0)
            goto LABEL_50;
          OUTLINED_FUNCTION_347_0(*(_QWORD *)(a4 + 48));
          OUTLINED_FUNCTION_161_0();
          OUTLINED_FUNCTION_278_2();
        }
        while ((v4 & 1) == 0);
      }

      v34 = v67;
      *(unint64_t *)((char *)a1 + ((v65 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v65;
      v33 = __OFADD__(v61++, 1);
      v5 = a4;
      if (v33)
        goto LABEL_57;
    }
  }
  v58 = a4 + 56;
  OUTLINED_FUNCTION_203_1();
  v10 = v9 & v8;
  v59 = (unint64_t)(v11 + 63) >> 6;
  v61 = 0;
  v66 = v6 + 56;
  while (1)
  {
    if (v10)
    {
      v62 = (v10 - 1) & v10;
      v64 = v7;
      v12 = __clz(__rbit64(v10)) | (v7 << 6);
      v13 = a4;
      goto LABEL_16;
    }
    v14 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_53;
    }
    if (v14 >= v59)
      goto LABEL_51;
    if (!*(_QWORD *)(v58 + 8 * v14))
    {
      if (v7 + 2 >= v59)
        goto LABEL_51;
      if (!*(_QWORD *)(v58 + 8 * (v7 + 2)))
      {
        v15 = v7 + 3;
        if (v7 + 3 >= v59)
          goto LABEL_51;
        if (!*(_QWORD *)(v58 + 8 * v15))
          break;
      }
    }
LABEL_15:
    OUTLINED_FUNCTION_179_2();
    v62 = v18 & v17;
    v64 = v19;
    v12 = v20 + (v19 << 6);
LABEL_16:
    v21 = *(void **)(*(_QWORD *)(v13 + 48) + 8 * v12);
    sub_1B25CD6A8();
    v22 = v21;
    OUTLINED_FUNCTION_265_2();
    v23 = sub_1B25CD6CC();
    v24 = v6;
    v25 = -1 << *(_BYTE *)(v6 + 32);
    v26 = v23 & ~v25;
    v27 = v26 >> 6;
    v28 = 1 << v26;
    if (((1 << v26) & *(_QWORD *)(v66 + 8 * (v26 >> 6))) == 0)
      goto LABEL_22;
    sub_1B24B3050(0, &qword_1EEFD73A8);
    OUTLINED_FUNCTION_347_0(*(_QWORD *)(v24 + 48));
    OUTLINED_FUNCTION_161_0();
    OUTLINED_FUNCTION_278_2();
    if ((v4 & 1) != 0)
    {

      v6 = v24;
LABEL_24:
      v10 = v62;
      v7 = v64;
      a1[v27] |= v28;
      v33 = __OFADD__(v61++, 1);
      if (v33)
        goto LABEL_56;
    }
    else
    {
      v29 = ~v25;
      for (i = v26 + 1; ; i = v31 + 1)
      {
        v31 = i & v29;
        if (((*(_QWORD *)(v66 + (((i & v29) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v29)) & 1) == 0)
          break;
        v6 = v24;
        v32 = *(id *)(*(_QWORD *)(v24 + 48) + 8 * v31);
        OUTLINED_FUNCTION_161_0();
        OUTLINED_FUNCTION_278_2();
        if ((v4 & 1) != 0)
        {

          v27 = v31 >> 6;
          v28 = 1 << v31;
          goto LABEL_24;
        }
      }
LABEL_22:

      v6 = v24;
      v10 = v62;
      v7 = v64;
    }
  }
  while (1)
  {
    v16 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v16 >= v59)
      goto LABEL_51;
    ++v15;
    if (*(_QWORD *)(v58 + 8 * v16))
      goto LABEL_15;
  }
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
}

void sub_1B2530288(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t i;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v44;
  uint64_t v45;

  v8 = 0;
  if (*(_QWORD *)(a4 + 16) < *(_QWORD *)(a3 + 16))
  {
    v9 = 0;
    v10 = a4 + 56;
    OUTLINED_FUNCTION_105_1();
    v11 = a3 + 56;
    while (1)
    {
LABEL_3:
      if (v5)
      {
        OUTLINED_FUNCTION_177_2();
        v13 = v12 | (v9 << 6);
      }
      else
      {
        if (__OFADD__(v9, 1))
        {
          __break(1u);
LABEL_60:
          __break(1u);
          goto LABEL_61;
        }
        OUTLINED_FUNCTION_337_0();
        if (v15 == v16)
          goto LABEL_58;
        v9 = v14;
        if (!*(_QWORD *)(v10 + 8 * v14))
        {
          v9 = v14 + 1;
          if (v14 + 1 >= v45)
            goto LABEL_58;
          if (!*(_QWORD *)(v10 + 8 * v9))
          {
            v9 = v14 + 2;
            if (v14 + 2 >= v45)
              goto LABEL_58;
            if (!*(_QWORD *)(v10 + 8 * v9))
            {
              OUTLINED_FUNCTION_337_0();
              if (v15 == v16)
              {
LABEL_58:
                OUTLINED_FUNCTION_52_4();
                sub_1B252F378(a1, a2, v8, a3, a5);
                OUTLINED_FUNCTION_144_2();
                return;
              }
              if (!*(_QWORD *)(v10 + 8 * v17))
              {
                while (1)
                {
                  v9 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    break;
                  if (v9 >= v45)
                    goto LABEL_58;
                  ++v17;
                  if (*(_QWORD *)(v10 + 8 * v9))
                    goto LABEL_20;
                }
LABEL_61:
                __break(1u);
                goto LABEL_62;
              }
              v9 = v17;
            }
          }
        }
LABEL_20:
        OUTLINED_FUNCTION_378_0();
        v13 = v18 + (v9 << 6);
      }
      v19 = *(unsigned __int8 *)(*(_QWORD *)(a4 + 48) + v13);
      sub_1B25CD6A8();
      OUTLINED_FUNCTION_375_0();
      v20 = sub_1B25CD6CC();
      v21 = -1 << *(_BYTE *)(a3 + 32);
      v22 = v20 & ~v21;
      v23 = v22 >> 6;
      v24 = 1 << v22;
      if (((1 << v22) & *(_QWORD *)(v11 + 8 * (v22 >> 6))) != 0)
      {
        v25 = *(_QWORD *)(a3 + 48);
        if (*(unsigned __int8 *)(v25 + v22) != v19)
        {
          for (i = v22 + 1; ; i = v27 + 1)
          {
            v27 = i & ~v21;
            if (((*(_QWORD *)(v11 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) == 0)
              goto LABEL_3;
            if (*(unsigned __int8 *)(v25 + v27) == v19)
              break;
          }
          v23 = v27 >> 6;
          v24 = 1 << v27;
        }
        a1[v23] |= v24;
        v16 = __OFADD__(v8++, 1);
        if (v16)
          break;
      }
    }
    __break(1u);
  }
  v28 = 0;
  v44 = a3 + 56;
  OUTLINED_FUNCTION_105_1();
  v29 = a4 + 56;
  while (v5)
  {
    OUTLINED_FUNCTION_177_2();
    v31 = v30 | (v28 << 6);
LABEL_50:
    v35 = *(unsigned __int8 *)(*(_QWORD *)(a3 + 48) + v31);
    sub_1B25CD6A8();
    OUTLINED_FUNCTION_375_0();
    v36 = sub_1B25CD6CC();
    v37 = -1 << *(_BYTE *)(a4 + 32);
    v38 = v36 & ~v37;
    if (((*(_QWORD *)(v29 + ((v38 >> 3) & 0xFFFFFFFFFFFFF8)) >> v38) & 1) != 0)
    {
      v39 = *(_QWORD *)(a4 + 48);
      if (*(unsigned __int8 *)(v39 + v38) == v35)
      {
LABEL_55:
        *(_QWORD *)((char *)a1 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
        v16 = __OFADD__(v8++, 1);
        if (v16)
        {
          __break(1u);
          goto LABEL_58;
        }
      }
      else
      {
        v40 = ~v37;
        while (1)
        {
          v38 = (v38 + 1) & v40;
          if (((*(_QWORD *)(v29 + ((v38 >> 3) & 0xFFFFFFFFFFFFF8)) >> v38) & 1) == 0)
            break;
          if (*(unsigned __int8 *)(v39 + v38) == v35)
            goto LABEL_55;
        }
      }
    }
  }
  if (__OFADD__(v28, 1))
    goto LABEL_60;
  OUTLINED_FUNCTION_337_0();
  if (v15 == v16)
    goto LABEL_58;
  v28 = v32;
  if (*(_QWORD *)(v44 + 8 * v32))
    goto LABEL_49;
  v28 = v32 + 1;
  if (v32 + 1 >= v45)
    goto LABEL_58;
  if (*(_QWORD *)(v44 + 8 * v28))
    goto LABEL_49;
  v28 = v32 + 2;
  if (v32 + 2 >= v45)
    goto LABEL_58;
  if (*(_QWORD *)(v44 + 8 * v28))
  {
LABEL_49:
    OUTLINED_FUNCTION_378_0();
    v31 = v34 + (v28 << 6);
    goto LABEL_50;
  }
  OUTLINED_FUNCTION_337_0();
  if (v15 == v16)
    goto LABEL_58;
  if (*(_QWORD *)(v44 + 8 * v33))
  {
    v28 = v33;
    goto LABEL_49;
  }
  while (1)
  {
    v28 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v28 >= v45)
      goto LABEL_58;
    ++v33;
    if (*(_QWORD *)(v44 + 8 * v28))
      goto LABEL_49;
  }
LABEL_62:
  __break(1u);
}

void sub_1B25305F4()
{
  OUTLINED_FUNCTION_121_2();
  OUTLINED_FUNCTION_160_2();
  sub_1B252C388();
}

void sub_1B2530628()
{
  OUTLINED_FUNCTION_121_2();
  OUTLINED_FUNCTION_160_2();
  sub_1B252BC00();
}

void sub_1B253065C()
{
  OUTLINED_FUNCTION_121_2();
  OUTLINED_FUNCTION_413_0();
}

void sub_1B253068C()
{
  OUTLINED_FUNCTION_121_2();
  OUTLINED_FUNCTION_160_2();
  sub_1B252BCE4();
}

void sub_1B25306C0()
{
  OUTLINED_FUNCTION_121_2();
  OUTLINED_FUNCTION_160_2();
  sub_1B252C2BC();
}

void sub_1B25306F4()
{
  OUTLINED_FUNCTION_121_2();
  OUTLINED_FUNCTION_160_2();
  sub_1B252BE90();
}

void sub_1B2530728()
{
  OUTLINED_FUNCTION_121_2();
  OUTLINED_FUNCTION_160_2();
  sub_1B252BDAC();
}

void sub_1B253075C()
{
  sub_1B252C128();
}

void sub_1B2530798()
{
  OUTLINED_FUNCTION_121_2();
  OUTLINED_FUNCTION_413_0();
}

void sub_1B25307C8()
{
  sub_1B252C128();
}

void sub_1B2530804()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  void (*v5)(uint64_t, uint64_t, char *);

  OUTLINED_FUNCTION_121_2();
  v0 = OUTLINED_FUNCTION_160_2();
  sub_1B252C038(v0, v1, v2, v3, v4, v5);
}

void sub_1B2530830(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t i;
  BOOL v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  _QWORD v32[2];
  id v33;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7538);
  v4 = sub_1B25CD480();
  v5 = (_QWORD *)v4;
  v6 = 0;
  v31 = a1;
  v9 = *(_QWORD *)(a1 + 64);
  v8 = a1 + 64;
  v7 = v9;
  v10 = 1 << *(_BYTE *)(v8 - 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v7;
  v29 = v8;
  v30 = (unint64_t)(v10 + 63) >> 6;
  v13 = v4 + 64;
  if ((v11 & v7) == 0)
    goto LABEL_5;
LABEL_4:
  v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (i = v14 | (v6 << 6); ; i = __clz(__rbit64(v17)) + (v6 << 6))
  {
    v19 = (uint64_t *)(*(_QWORD *)(v31 + 48) + 16 * i);
    v20 = *v19;
    v21 = v19[1];
    v33 = *(id *)(*(_QWORD *)(v31 + 56) + 8 * i);
    v22 = v33;
    swift_bridgeObjectRetain();
    v23 = v22;
    sub_1B252AAA0(&v33, v32);

    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return;
    }
    *(_QWORD *)(v13 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v24 = (_QWORD *)(v5[6] + 16 * i);
    *v24 = v20;
    v24[1] = v21;
    v25 = (_QWORD *)(v5[7] + 16 * i);
    v26 = v32[1];
    *v25 = v32[0];
    v25[1] = v26;
    v27 = v5[2];
    v16 = __OFADD__(v27, 1);
    v28 = v27 + 1;
    if (v16)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v5[2] = v28;
    if (v12)
      goto LABEL_4;
LABEL_5:
    v16 = __OFADD__(v6++, 1);
    if (v16)
      goto LABEL_27;
    if (v6 >= v30)
      return;
    v17 = *(_QWORD *)(v29 + 8 * v6);
    if (!v17)
      break;
LABEL_15:
    v12 = (v17 - 1) & v17;
  }
  v18 = v6 + 1;
  if (v6 + 1 >= v30)
    return;
  v17 = *(_QWORD *)(v29 + 8 * v18);
  if (v17)
    goto LABEL_14;
  v18 = v6 + 2;
  if (v6 + 2 >= v30)
    return;
  v17 = *(_QWORD *)(v29 + 8 * v18);
  if (v17)
    goto LABEL_14;
  v18 = v6 + 3;
  if (v6 + 3 >= v30)
    return;
  v17 = *(_QWORD *)(v29 + 8 * v18);
  if (v17)
  {
LABEL_14:
    v6 = v18;
    goto LABEL_15;
  }
  while (1)
  {
    v6 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v6 >= v30)
      return;
    v17 = *(_QWORD *)(v29 + 8 * v6);
    ++v18;
    if (v17)
      goto LABEL_15;
  }
LABEL_28:
  __break(1u);
}

_QWORD *sub_1B2530A60(uint64_t a1)
{
  _QWORD *result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD67E8);
  result = (_QWORD *)sub_1B25CD480();
  v3 = result;
  v4 = 0;
  v5 = *(_QWORD *)(a1 + 64);
  v25 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = (char *)(result + 8);
  if ((v7 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v11 | (v4 << 6); ; i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v18 = *v16;
    v17 = v16[1];
    v19 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    result = objc_msgSend(v19, sel_doubleValue);
    *(_QWORD *)&v10[(i >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << i;
    v20 = (_QWORD *)(v3[6] + 16 * i);
    *v20 = v18;
    v20[1] = v17;
    *(_QWORD *)(v3[7] + 8 * i) = v21;
    v22 = v3[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v24;
    if (v8)
      goto LABEL_4;
LABEL_5:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_24;
    if (v13 >= v9)
      return v3;
    v14 = *(_QWORD *)(v25 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v9)
        return v3;
      v14 = *(_QWORD *)(v25 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v9)
          return v3;
        v14 = *(_QWORD *)(v25 + 8 * v4);
        if (!v14)
          break;
      }
    }
LABEL_18:
    v8 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v9)
    return v3;
  v14 = *(_QWORD *)(v25 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v9)
      return v3;
    v14 = *(_QWORD *)(v25 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1B2530C3C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t (*v5)(uint64_t);
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  char v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  unint64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  char *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  _QWORD *v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t);
  uint64_t (*v78)(uint64_t, uint64_t);

  OUTLINED_FUNCTION_59_0();
  v2 = v1;
  v77 = (void (*)(uint64_t))v3;
  v78 = v4;
  v6 = v5;
  v8 = v7;
  OUTLINED_FUNCTION_334_0(v7, v3, v9, v10);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v11, v12);
  OUTLINED_FUNCTION_434();
  v15 = v13 - v14;
  MEMORY[0x1E0C80A78](v16, v17);
  OUTLINED_FUNCTION_752();
  v70 = v18;
  v19 = OUTLINED_FUNCTION_219_0();
  v71 = v6(v19);
  v20 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71, v21);
  OUTLINED_FUNCTION_29_7();
  v76 = v22;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v23, v24);
  OUTLINED_FUNCTION_89_4();
  v75 = v25;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v26, v27);
  OUTLINED_FUNCTION_417();
  MEMORY[0x1E0C80A78](v28, v29);
  OUTLINED_FUNCTION_752();
  v67 = v30;
  v31 = *(unsigned __int8 *)(v20 + 80);
  v32 = *(_QWORD *)(v8 + 16);
  OUTLINED_FUNCTION_224_0();
  OUTLINED_FUNCTION_289();
  v33 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v32)
  {
    v63 = v2;
    v34 = 0;
    v69 = 0;
    v35 = (v31 + 32) & ~v31;
    v64 = v35;
    v73 = v20;
    v74 = v8 + v35;
    v65 = v32 - 1;
    v66 = MEMORY[0x1E0DEE9D8] + v35;
    v68 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v72 = v32;
    while (1)
    {
      v36 = v71;
      while (1)
      {
        if (v34 >= v32)
        {
          __break(1u);
          goto LABEL_47;
        }
        v37 = *(_QWORD *)(v20 + 72);
        OUTLINED_FUNCTION_257_2(v15, v74 + v37 * v34, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 16));
        OUTLINED_FUNCTION_407_0(v15, 0);
        OUTLINED_FUNCTION_118_0(v15, 1, v36);
        if (v50)
        {
          v59 = v68;
          goto LABEL_40;
        }
        v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32);
        v38(v0, v15, v36);
        v39 = v36;
        v77(v0);
        v40 = v78(v75, v76);
        v41 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
        v41(v75, v39);
        if ((v40 & 1) != 0)
          break;
        ++v34;
        v41(v0, v39);
        v32 = v72;
        v20 = v73;
        v36 = v39;
        if (v72 == v34)
        {
          v33 = v68;
          goto LABEL_39;
        }
      }
      v42 = v70;
      OUTLINED_FUNCTION_311_1(v70, v0);
      __swift_storeEnumTagSinglePayload(v70, 0, 1, v39);
      OUTLINED_FUNCTION_118_0(v70, 1, v39);
      if (v50)
      {
        v59 = v68;
        goto LABEL_41;
      }
      OUTLINED_FUNCTION_311_1(v67, v70);
      v43 = v69;
      if (!v69)
        break;
      v33 = v68;
      v44 = v37;
      v45 = (char *)v66;
LABEL_33:
      v57 = __OFSUB__(v43, 1);
      v58 = v43 - 1;
      if (v57)
        goto LABEL_48;
      v69 = v58;
      v38((uint64_t)v45, v67, v71);
      v66 = (uint64_t)&v45[v44];
      v68 = v33;
      v50 = v65 == v34++;
      v32 = v72;
      v20 = v73;
      if (v50)
        goto LABEL_39;
    }
    v46 = v68[3];
    if ((uint64_t)((v46 >> 1) + 0x4000000000000000) < 0)
      goto LABEL_49;
    v47 = v46 & 0xFFFFFFFFFFFFFFFELL;
    if (v47 <= 1)
      v48 = 1;
    else
      v48 = v47;
    __swift_instantiateConcreteTypeFromMangledName(v63);
    v44 = v37;
    v33 = (_QWORD *)swift_allocObject();
    _swift_stdlib_malloc_size(v33);
    if (!v37)
      goto LABEL_50;
    OUTLINED_FUNCTION_264_2();
    v50 = v50 && v37 == -1;
    if (v50)
      goto LABEL_51;
    v51 = v49 / v37;
    v33[2] = v48;
    v33[3] = 2 * (v49 / v44);
    v52 = (char *)v33 + v64;
    v53 = v68[3];
    v54 = (v53 >> 1) * v44;
    if (!v68[2])
    {
LABEL_32:
      v45 = &v52[v54];
      v56 = (v51 & 0x7FFFFFFFFFFFFFFFLL) - (v53 >> 1);
      OUTLINED_FUNCTION_50_4();
      v43 = v56;
      goto LABEL_33;
    }
    if (v33 < v68 || v52 >= (char *)v68 + v64 + v54)
    {
      OUTLINED_FUNCTION_396_0();
      swift_arrayInitWithTakeFrontToBack();
    }
    else
    {
      if (v33 == v68)
      {
LABEL_31:
        v68[2] = 0;
        goto LABEL_32;
      }
      OUTLINED_FUNCTION_396_0();
      swift_arrayInitWithTakeBackToFront();
    }
    v54 = v64;
    v53 = 0;
    goto LABEL_31;
  }
  v69 = 0;
LABEL_39:
  __swift_storeEnumTagSinglePayload(v15, 1, 1, v71);
  v59 = v33;
LABEL_40:
  OUTLINED_FUNCTION_174_0(v15);
  v42 = v70;
  OUTLINED_FUNCTION_407_0(v70, 1);
LABEL_41:
  swift_release();
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_112_2();
  OUTLINED_FUNCTION_174_0(v42);
  v60 = v59[3];
  if (v60 < 2)
    goto LABEL_44;
  v61 = v60 >> 1;
  v57 = __OFSUB__(v61, v69);
  v62 = v61 - v69;
  if (!v57)
  {
    v59[2] = v62;
LABEL_44:
    OUTLINED_FUNCTION_7_1();
    return;
  }
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
}

void sub_1B2531088(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;

  v4 = a2 >> 62;
  if (a2 >> 62)
  {
    OUTLINED_FUNCTION_79_0();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_10_0();
  }
  sub_1B25CD6B4();
  if (v4)
  {
    OUTLINED_FUNCTION_79_0();
    v5 = OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_10_0();
    if (!v5)
    {
LABEL_12:
      OUTLINED_FUNCTION_233();
      return;
    }
  }
  else
  {
    v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v5)
      goto LABEL_12;
  }
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((a2 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_62_2();
      v7 = *(_QWORD *)(a2 + 8 * i + 32);
      OUTLINED_FUNCTION_289();
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 96))(a1);
      OUTLINED_FUNCTION_38_2();
    }
    goto LABEL_12;
  }
  __break(1u);
}

void sub_1B2531174()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_108_4();
  if (v0)
  {
    v2 = 0;
    v3 = v1 + 32;
    do
    {
      v4 = *(_QWORD *)(v3 + 24 * v2 + 16);
      OUTLINED_FUNCTION_444();
      OUTLINED_FUNCTION_133();
      OUTLINED_FUNCTION_387_0();
      OUTLINED_FUNCTION_101_1();
      sub_1B25CD6B4();
      v5 = *(_QWORD *)(v4 + 16);
      if (v5)
      {
        OUTLINED_FUNCTION_133();
        v6 = v4 + 40;
        do
        {
          OUTLINED_FUNCTION_168();
          sub_1B25CCAB4();
          OUTLINED_FUNCTION_107();
          v6 += 16;
          --v5;
        }
        while (v5);
        OUTLINED_FUNCTION_101_1();
        OUTLINED_FUNCTION_36_2();
      }
      else
      {
        OUTLINED_FUNCTION_69();
        OUTLINED_FUNCTION_101_1();
      }
      ++v2;
    }
    while (v2 != v0);
  }
  OUTLINED_FUNCTION_7_1();
}

void sub_1B253122C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_108_4();
  if (v0)
  {
    v2 = v1 + 40;
    do
    {
      OUTLINED_FUNCTION_61_6();
      OUTLINED_FUNCTION_294_1();
      OUTLINED_FUNCTION_101_1();
      v2 += 16;
      --v0;
    }
    while (v0);
  }
  OUTLINED_FUNCTION_233();
}

void sub_1B2531270()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_108_4();
  if (v0)
  {
    v2 = v1 + 48;
    do
    {
      v2 += 24;
      OUTLINED_FUNCTION_61_6();
      OUTLINED_FUNCTION_294_1();
      sub_1B25CD6B4();
      OUTLINED_FUNCTION_101_1();
      --v0;
    }
    while (v0);
  }
  OUTLINED_FUNCTION_233();
}

uint64_t sub_1B25312BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v17;

  v3 = sub_1B25CC538();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF08);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a2 + 16);
  sub_1B25CD6B4();
  if (!v12)
    return __swift_storeEnumTagSinglePayload((uint64_t)v11, 1, 1, v3);
  v13 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v14 = *(_QWORD *)(v4 + 72);
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  while (1)
  {
    v15(v11, v13, v3);
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v3);
    result = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v3);
    if ((_DWORD)result == 1)
      break;
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v11, v3);
    sub_1B2531930(&qword_1EEFD6970, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    sub_1B25CC91C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    v13 += v14;
    if (!--v12)
      return __swift_storeEnumTagSinglePayload((uint64_t)v11, 1, 1, v3);
  }
  return result;
}

uint64_t sub_1B253144C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v16 = a2 + 64;
  OUTLINED_FUNCTION_106_2();
  result = swift_bridgeObjectRetain();
  v5 = 0;
  v6 = 0;
  if (!v2)
    goto LABEL_3;
LABEL_2:
  OUTLINED_FUNCTION_288_2();
  while (1)
  {
    v13 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v7);
    OUTLINED_FUNCTION_168();
    OUTLINED_FUNCTION_95_1();
    OUTLINED_FUNCTION_290_2();
    OUTLINED_FUNCTION_107();
    sub_1B25CD6B4();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = v13 + 40;
      do
      {
        OUTLINED_FUNCTION_168();
        OUTLINED_FUNCTION_290_2();
        OUTLINED_FUNCTION_107();
        v15 += 16;
        --v14;
      }
      while (v14);
    }
    OUTLINED_FUNCTION_267();
    result = sub_1B25CD6CC();
    v5 ^= result;
    if (v2)
      goto LABEL_2;
LABEL_3:
    v8 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_22;
    }
    if (v8 >= v17)
      goto LABEL_20;
    ++v6;
    if (!*(_QWORD *)(v16 + 8 * v8))
    {
      v6 = v8 + 1;
      if (v8 + 1 >= v17)
        goto LABEL_20;
      if (!*(_QWORD *)(v16 + 8 * v6))
        break;
    }
LABEL_14:
    OUTLINED_FUNCTION_179_2();
    v2 = v11 & v10;
    v7 = v12 + (v6 << 6);
  }
  v9 = v8 + 2;
  if (v9 >= v17)
  {
LABEL_20:
    swift_release();
    return sub_1B25CD6B4();
  }
  if (*(_QWORD *)(v16 + 8 * v9))
  {
    v6 = v9;
    goto LABEL_14;
  }
  while (1)
  {
    v6 = v9 + 1;
    if (__OFADD__(v9, 1))
      break;
    if (v6 >= v17)
      goto LABEL_20;
    ++v9;
    if (*(_QWORD *)(v16 + 8 * v6))
      goto LABEL_14;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_1B25315E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;

  v12 = a2 + 64;
  v2 = 1 << *(_BYTE *)(a2 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a2 + 64);
  v5 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  v8 = 0;
  if (!v4)
    goto LABEL_5;
LABEL_4:
  for (v4 &= v4 - 1; ; v4 = (v10 - 1) & v10)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B25CCAB4();
    swift_bridgeObjectRelease();
    sub_1B25CCAB4();
    swift_bridgeObjectRelease();
    result = sub_1B25CD6CC();
    v7 ^= result;
    if (v4)
      goto LABEL_4;
LABEL_5:
    v9 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v9 >= v5)
      goto LABEL_19;
    v10 = *(_QWORD *)(v12 + 8 * v9);
    ++v8;
    if (!v10)
    {
      v8 = v9 + 1;
      if (v9 + 1 >= v5)
        goto LABEL_19;
      v10 = *(_QWORD *)(v12 + 8 * v8);
      if (!v10)
        break;
    }
LABEL_16:
    ;
  }
  v11 = v9 + 2;
  if (v11 >= v5)
  {
LABEL_19:
    swift_release();
    return sub_1B25CD6B4();
  }
  v10 = *(_QWORD *)(v12 + 8 * v11);
  if (v10)
  {
    v8 = v11;
    goto LABEL_16;
  }
  while (1)
  {
    v8 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v8 >= v5)
      goto LABEL_19;
    v10 = *(_QWORD *)(v12 + 8 * v8);
    ++v11;
    if (v10)
      goto LABEL_16;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for Transcriber.ModelOptions(uint64_t a1)
{
  return sub_1B24B1B88(a1, (uint64_t *)&unk_1EEFD6B10);
}

void sub_1B25317B8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_420_0(a1, a2);
  OUTLINED_FUNCTION_278_0(v2);
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for TranscriptionSegment(uint64_t a1)
{
  return sub_1B24B1B88(a1, (uint64_t *)&unk_1EEFD6FD0);
}

uint64_t sub_1B25317F0(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1B253181C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B2531864(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B25318AC(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B25317F0(v2);
  swift_bridgeObjectRetain();
  return a1;
}

void sub_1B2531930(_QWORD *a1, void (*a2)(uint64_t))
{
  if (!*a1)
  {
    a2(255);
    OUTLINED_FUNCTION_706();
  }
  OUTLINED_FUNCTION_0();
}

void sub_1B2531964(void *a1)
{
  bzero(a1, 0xA0uLL);
}

uint64_t sub_1B253196C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B25319E0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B2531A54(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1B2531A80()
{
  unint64_t result;

  result = qword_1EEFD6F68;
  if (!qword_1EEFD6F68)
  {
    result = MEMORY[0x1B5E261DC](&protocol conformance descriptor for ConfidenceAttribute, &type metadata for ConfidenceAttribute);
    atomic_store(result, (unint64_t *)&qword_1EEFD6F68);
  }
  return result;
}

unint64_t sub_1B2531ABC()
{
  unint64_t result;

  result = qword_1EEFD6F60;
  if (!qword_1EEFD6F60)
  {
    result = MEMORY[0x1B5E261DC](&protocol conformance descriptor for TimeRangeAttribute, &type metadata for TimeRangeAttribute);
    atomic_store(result, (unint64_t *)&qword_1EEFD6F60);
  }
  return result;
}

void sub_1B2531AF8()
{
  sub_1B2531930(&qword_1EEFD9A10, (void (*)(uint64_t))type metadata accessor for Transcriber.ModelOptions);
}

unint64_t sub_1B2531B28()
{
  unint64_t result;

  result = qword_1EEFD6B48;
  if (!qword_1EEFD6B48)
  {
    result = MEMORY[0x1B5E261DC](&protocol conformance descriptor for Transcriber.TranscriptionOption, &type metadata for Transcriber.TranscriptionOption);
    atomic_store(result, (unint64_t *)&qword_1EEFD6B48);
  }
  return result;
}

unint64_t sub_1B2531B68()
{
  unint64_t result;

  result = qword_1EEFD6B40;
  if (!qword_1EEFD6B40)
  {
    result = MEMORY[0x1B5E261DC](&protocol conformance descriptor for Transcriber.ReportingOption, &type metadata for Transcriber.ReportingOption);
    atomic_store(result, (unint64_t *)&qword_1EEFD6B40);
  }
  return result;
}

void sub_1B2531BA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_1B2531930(&qword_1EEFD6B80, (void (*)(uint64_t))type metadata accessor for Transcriber);
  *(_QWORD *)(a1 + 8) = v2;
  sub_1B2531930(&qword_1EEFD6B88, (void (*)(uint64_t))type metadata accessor for Transcriber);
  *(_QWORD *)(a1 + 16) = v3;
}

uint64_t type metadata accessor for Transcriber(uint64_t a1)
{
  return sub_1B24B1B88(a1, (uint64_t *)&unk_1EEFD6B90);
}

void sub_1B2531C14(uint64_t a1)
{
  uint64_t v2;

  sub_1B2531930(&qword_1EEFD6B88, (void (*)(uint64_t))type metadata accessor for Transcriber);
  *(_QWORD *)(a1 + 8) = v2;
}

_UNKNOWN **sub_1B2531C50()
{
  return &protocol witness table for Transcriber.Result;
}

uint64_t sub_1B2531C5C()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1B2531C6C()
{
  sub_1B2531930(&qword_1EEFD6AB0, (void (*)(uint64_t))type metadata accessor for SpeechRecognizerWorker);
}

unint64_t sub_1B2531C9C()
{
  unint64_t result;

  result = qword_1EEFD70C8;
  if (!qword_1EEFD70C8)
  {
    result = MEMORY[0x1B5E261DC](&protocol conformance descriptor for TranscriptionResultAttributeOption, &type metadata for TranscriptionResultAttributeOption);
    atomic_store(result, (unint64_t *)&qword_1EEFD70C8);
  }
  return result;
}

uint64_t sub_1B2531CD8()
{
  return MEMORY[0x1E0DEB090];
}

void sub_1B2531CE4()
{
  sub_1B2531930(&qword_1EEFD7370, type metadata accessor for CMTimeRange);
}

unint64_t sub_1B2531D14()
{
  unint64_t result;

  result = qword_1EEFD9A38;
  if (!qword_1EEFD9A38)
  {
    result = MEMORY[0x1B5E261DC](&protocol conformance descriptor for AttributeScopes.SpeechAttributes, &type metadata for AttributeScopes.SpeechAttributes);
    atomic_store(result, (unint64_t *)&qword_1EEFD9A38);
  }
  return result;
}

unint64_t sub_1B2531D54()
{
  unint64_t result;

  result = qword_1EEFD9A40;
  if (!qword_1EEFD9A40)
  {
    result = MEMORY[0x1B5E261DC](&protocol conformance descriptor for AttributeScopes.SpeechAttributes, &type metadata for AttributeScopes.SpeechAttributes);
    atomic_store(result, (unint64_t *)&qword_1EEFD9A40);
  }
  return result;
}

void sub_1B2531D90()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  sub_1B25CC6F4();
  if (v0 <= 0x3F)
  {
    sub_1B2532908(319, (unint64_t *)&qword_1EEFD6B28, (void (*)(uint64_t))type metadata accessor for Transcriber.ModelOptions);
    if (v1 <= 0x3F)
    {
      sub_1B2531F38();
      if (v2 <= 0x3F)
      {
        sub_1B2531FA8();
        if (v3 <= 0x3F)
        {
          sub_1B2532010();
          if (v4 <= 0x3F)
          {
            sub_1B2532084(319, &qword_1EEFD7280, &qword_1EEFD7270);
            if (v5 <= 0x3F)
            {
              sub_1B2532084(319, &qword_1EEFD7268, &qword_1EEFD7258);
              if (v6 <= 0x3F)
              {
                sub_1B2532084(319, &qword_1EEFD7FB0, &qword_1EEFD7FA0);
                if (v7 <= 0x3F)
                  swift_updateClassMetadata2();
              }
            }
          }
        }
      }
    }
  }
}

uint64_t method lookup function for Transcriber()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Transcriber.__allocating_init(locale:taskHint:modelOptions:transcriptionOptions:reportingOptions:attributeOptions:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

void sub_1B2531F38()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEFD72E8)
  {
    type metadata accessor for Transcriber.Result(255);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED36D060);
    v0 = sub_1B25CCDD8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEFD72E8);
  }
}

void sub_1B2531FA8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEFD72D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED36D060);
    v0 = sub_1B25CCDD8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEFD72D0);
  }
}

void sub_1B2532010()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEFD7FC0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEFD7760);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED36D060);
    v0 = sub_1B25CCDD8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEFD7FC0);
  }
}

void sub_1B2532084(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v4 = OUTLINED_FUNCTION_397_0();
    if (!v5)
      atomic_store(v4, a2);
  }
  OUTLINED_FUNCTION_0();
}

_QWORD *initializeBufferWithCopyOfBuffer for Transcriber.Result(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    v6 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v6;
    v7 = *(int *)(a3 + 24);
    v8 = (char *)(a1 + v7);
    v9 = (char *)a2 + v7;
    *(_QWORD *)(a1 + 64) = a2[8];
    v10 = (int *)type metadata accessor for TranscriptionSegment(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, (uint64_t)v10))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6FE0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      v13 = sub_1B25CC3B8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v8, v9, v13);
      *(_QWORD *)&v8[v10[5]] = *(_QWORD *)&v9[v10[5]];
      *(_QWORD *)&v8[v10[6]] = *(_QWORD *)&v9[v10[6]];
      *(_QWORD *)&v8[v10[7]] = *(_QWORD *)&v9[v10[7]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, (uint64_t)v10);
    }
  }
  return v3;
}

uint64_t destroy for Transcriber.Result(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v2 = a1 + *(int *)(a2 + 24);
  v3 = type metadata accessor for TranscriptionSegment(0);
  result = __swift_getEnumTagSinglePayload(v2, 1, v3);
  if (!(_DWORD)result)
  {
    v5 = sub_1B25CC3B8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v2, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for Transcriber.Result(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v6 = *(int *)(a3 + 24);
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = (int *)type metadata accessor for TranscriptionSegment(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, (uint64_t)v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6FE0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = sub_1B25CC3B8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v7, v8, v11);
    *(_QWORD *)&v7[v9[5]] = *(_QWORD *)&v8[v9[5]];
    *(_QWORD *)&v7[v9[6]] = *(_QWORD *)&v8[v9[6]];
    *(_QWORD *)&v7[v9[7]] = *(_QWORD *)&v8[v9[7]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, (uint64_t)v9);
  }
  return a1;
}

uint64_t assignWithCopy for Transcriber.Result(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  int *v7;
  int EnumTagSinglePayload;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v4 = *(int *)(a3 + 24);
  v5 = (char *)(a1 + v4);
  v6 = (char *)(a2 + v4);
  v7 = (int *)type metadata accessor for TranscriptionSegment(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v5, 1, (uint64_t)v7);
  v9 = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, (uint64_t)v7);
  if (!EnumTagSinglePayload)
  {
    if (!v9)
    {
      v13 = sub_1B25CC3B8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v5, v6, v13);
      *(_QWORD *)&v5[v7[5]] = *(_QWORD *)&v6[v7[5]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v5[v7[6]] = *(_QWORD *)&v6[v7[6]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v5[v7[7]] = *(_QWORD *)&v6[v7[7]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1B25317B8((uint64_t)v5, type metadata accessor for TranscriptionSegment);
    goto LABEL_6;
  }
  if (v9)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6FE0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    return a1;
  }
  v10 = sub_1B25CC3B8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v5, v6, v10);
  *(_QWORD *)&v5[v7[5]] = *(_QWORD *)&v6[v7[5]];
  *(_QWORD *)&v5[v7[6]] = *(_QWORD *)&v6[v7[6]];
  *(_QWORD *)&v5[v7[7]] = *(_QWORD *)&v6[v7[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, (uint64_t)v7);
  return a1;
}

uint64_t initializeWithTake for Transcriber.Result(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v6 = *(int *)(a3 + 24);
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = (int *)type metadata accessor for TranscriptionSegment(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, (uint64_t)v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6FE0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = sub_1B25CC3B8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v7, v8, v11);
    *(_QWORD *)&v7[v9[5]] = *(_QWORD *)&v8[v9[5]];
    *(_QWORD *)&v7[v9[6]] = *(_QWORD *)&v8[v9[6]];
    *(_QWORD *)&v7[v9[7]] = *(_QWORD *)&v8[v9[7]];
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, (uint64_t)v9);
  }
  return a1;
}

uint64_t assignWithTake for Transcriber.Result(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  int *v7;
  int EnumTagSinglePayload;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v4 = *(int *)(a3 + 24);
  v5 = (char *)(a2 + v4);
  v6 = (char *)(a1 + v4);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v7 = (int *)type metadata accessor for TranscriptionSegment(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, (uint64_t)v7);
  v9 = __swift_getEnumTagSinglePayload((uint64_t)v5, 1, (uint64_t)v7);
  if (!EnumTagSinglePayload)
  {
    if (!v9)
    {
      v13 = sub_1B25CC3B8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v6, v5, v13);
      *(_QWORD *)&v6[v7[5]] = *(_QWORD *)&v5[v7[5]];
      swift_bridgeObjectRelease();
      *(_QWORD *)&v6[v7[6]] = *(_QWORD *)&v5[v7[6]];
      swift_bridgeObjectRelease();
      *(_QWORD *)&v6[v7[7]] = *(_QWORD *)&v5[v7[7]];
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1B25317B8((uint64_t)v6, type metadata accessor for TranscriptionSegment);
    goto LABEL_6;
  }
  if (v9)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6FE0);
    memcpy(v6, v5, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    return a1;
  }
  v10 = sub_1B25CC3B8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v6, v5, v10);
  *(_QWORD *)&v6[v7[5]] = *(_QWORD *)&v5[v7[5]];
  *(_QWORD *)&v6[v7[6]] = *(_QWORD *)&v5[v7[6]];
  *(_QWORD *)&v6[v7[7]] = *(_QWORD *)&v5[v7[7]];
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, (uint64_t)v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for Transcriber.Result()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B2532800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 24);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6FE0);
  return __swift_getEnumTagSinglePayload(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for Transcriber.Result()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B2532848()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6FE0);
  v0 = OUTLINED_FUNCTION_162_1();
  return __swift_storeEnumTagSinglePayload(v0, v1, v2, v3);
}

void sub_1B253287C()
{
  unint64_t v0;

  sub_1B2532908(319, (unint64_t *)&qword_1EEFD6FE8, (void (*)(uint64_t))type metadata accessor for TranscriptionSegment);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1B2532908(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = OUTLINED_FUNCTION_397_0();
    if (!v5)
      atomic_store(v4, a2);
  }
  OUTLINED_FUNCTION_0();
}

uint64_t destroy for Transcriber.MultisegmentResult(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 160))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Transcriber.MultisegmentResult(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v9 = a2 + 160;
  v8 = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_OWORD *)(a1 + 108) = *(_OWORD *)(a2 + 108);
  *(_OWORD *)(a1 + 124) = *(_OWORD *)(a2 + 124);
  *(_OWORD *)(a1 + 140) = *(_OWORD *)(a2 + 140);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8)
  {
    v11 = *(_QWORD *)(a2 + 168);
    v10 = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 160) = v8;
    *(_QWORD *)(a1 + 168) = v11;
    *(_QWORD *)(a1 + 176) = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 160) = *(_OWORD *)v9;
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(v9 + 16);
  }
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  v12 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v12;
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  v13 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v13;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Transcriber.MultisegmentResult(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 160);
  v5 = *(_QWORD *)(a1 + 160);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 108) = *(_QWORD *)(a2 + 108);
  *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 124) = *(_QWORD *)(a2 + 124);
  *(_QWORD *)(a1 + 132) = *(_QWORD *)(a2 + 132);
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 148) = *(_QWORD *)(a2 + 148);
  v7 = (_OWORD *)(a2 + 160);
  v6 = *(_QWORD *)(a2 + 160);
  if (v5)
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 160) = v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    }
    else
    {
      sub_1B2532D04(a1 + 160);
      v8 = *(_QWORD *)(a2 + 176);
      *v4 = *v7;
      *(_QWORD *)(a1 + 176) = v8;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 160) = v6;
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = *v7;
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *v4 = v9;
  }
  v10 = *(_QWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = v10;
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
  *(_DWORD *)(a1 + 220) = *(_DWORD *)(a2 + 220);
  *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
  *(_DWORD *)(a1 + 228) = *(_DWORD *)(a2 + 228);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  v11 = *(_QWORD *)(a2 + 248);
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  *(_QWORD *)(a1 + 248) = v11;
  return a1;
}

uint64_t sub_1B2532D04(uint64_t a1)
{
  destroy for AudioAnalytics();
  return a1;
}

void *__swift_memcpy257_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x101uLL);
}

uint64_t assignWithTake for Transcriber.MultisegmentResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v4 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 160);
  v6 = *(_QWORD *)(a1 + 160);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 108) = *(_QWORD *)(a2 + 108);
  *(_QWORD *)(a1 + 116) = *(_QWORD *)(a2 + 116);
  *(_OWORD *)(a1 + 124) = *(_OWORD *)(a2 + 124);
  *(_QWORD *)(a1 + 140) = *(_QWORD *)(a2 + 140);
  *(_QWORD *)(a1 + 148) = *(_QWORD *)(a2 + 148);
  if (!v6)
    goto LABEL_5;
  if (!v5)
  {
    sub_1B2532D04(a1 + 160);
LABEL_5:
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 160) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
LABEL_6:
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  v7 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  v8 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v8;
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  return a1;
}

uint64_t getEnumTagSinglePayload for Transcriber.MultisegmentResult(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 257))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 72);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Transcriber.MultisegmentResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 248) = 0;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 256) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 257) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 72) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 257) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for Transcriber.MultisegmentResult()
{
  OUTLINED_FUNCTION_239_0();
}

uint64_t *initializeBufferWithCopyOfBuffer for Transcriber.ModelOptions(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1B25CC538();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF08);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    v10 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v10, 1, v7))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF08);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v11, v12, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v7);
    }
    v14 = a3[7];
    v15 = a3[8];
    v16 = (uint64_t *)((char *)a1 + v14);
    v17 = (uint64_t *)((char *)a2 + v14);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    *(uint64_t *)((char *)a1 + v15) = *(uint64_t *)((char *)a2 + v15);
    v19 = a3[10];
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    *((_BYTE *)a1 + v19) = *((_BYTE *)a2 + v19);
    *(uint64_t *)((char *)a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for Transcriber.ModelOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1B25CC538();
  if (!__swift_getEnumTagSinglePayload(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 24);
  if (!__swift_getEnumTagSinglePayload(v5, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v5, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for Transcriber.ModelOptions(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1B25CC538();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF08);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v8 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  v9 = &a1[v8];
  v10 = &a2[v8];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v8], 1, v6))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF08);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v9, v10, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v6);
  }
  v12 = a3[7];
  v13 = a3[8];
  v14 = &a1[v12];
  v15 = &a2[v12];
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  *(_QWORD *)&a1[v13] = *(_QWORD *)&a2[v13];
  v17 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  a1[v17] = a2[v17];
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for Transcriber.ModelOptions(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;

  v6 = sub_1B25CC538();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF08);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  a1[a3[5]] = a2[a3[5]];
  v11 = a3[6];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v11], 1, v6);
  v15 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v6);
  if (!v14)
  {
    v16 = *(_QWORD *)(v6 - 8);
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v12, v13, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
    goto LABEL_12;
  }
  if (v15)
  {
LABEL_12:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF08);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v12, v13, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v6);
LABEL_13:
  v18 = a3[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[9]] = a2[a3[9]];
  a1[a3[10]] = a2[a3[10]];
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for Transcriber.ModelOptions(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_1B25CC538();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF08);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v8 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  v9 = &a1[v8];
  v10 = &a2[v8];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v8], 1, v6))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF08);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v9, v10, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v6);
  }
  v12 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  *(_QWORD *)&a1[v12] = *(_QWORD *)&a2[v12];
  v13 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  a1[v13] = a2[v13];
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  return a1;
}

char *assignWithTake for Transcriber.ModelOptions(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_1B25CC538();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF08);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  v11 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v11], 1, v6);
  v15 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v6);
  if (!v14)
  {
    v16 = *(_QWORD *)(v6 - 8);
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v12, v13, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
    goto LABEL_12;
  }
  if (v15)
  {
LABEL_12:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF08);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v12, v13, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v6);
LABEL_13:
  v18 = a3[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v22 = *(_QWORD *)v20;
  v21 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v19 = v22;
  *((_QWORD *)v19 + 1) = v21;
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  swift_bridgeObjectRelease();
  v23 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  a1[v23] = a2[v23];
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Transcriber.ModelOptions()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1B25338CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF08);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    OUTLINED_FUNCTION_11_0(a1, a2, v6);
  }
  else
  {
    OUTLINED_FUNCTION_277_2(*(int *)(a3 + 32));
    OUTLINED_FUNCTION_262();
  }
}

uint64_t storeEnumTagSinglePayload for Transcriber.ModelOptions()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1B2533934()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_392_0();
  if (*(_DWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF08) - 8) + 84) == v3)
  {
    v4 = OUTLINED_FUNCTION_162_1();
    OUTLINED_FUNCTION_12_0(v4, v5, v6, v7);
  }
  else
  {
    *(_QWORD *)(v1 + *(int *)(v2 + 32)) = (v0 - 1);
    OUTLINED_FUNCTION_262();
  }
}

void sub_1B2533984()
{
  unint64_t v0;

  sub_1B2532908(319, (unint64_t *)&qword_1EEFD6978, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t getEnumTagSinglePayload for Transcriber.TranscriptionOption(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 5) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v5 = v6 - 6;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Transcriber.TranscriptionOption(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1B2533B00 + 4 * byte_1B25DD385[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1B2533B34 + 4 * byte_1B25DD380[v4]))();
}

uint64_t sub_1B2533B34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B2533B3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B2533B44);
  return result;
}

uint64_t sub_1B2533B50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B2533B58);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1B2533B5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B2533B64(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for Transcriber.TranscriptionOption()
{
  OUTLINED_FUNCTION_239_0();
}

uint64_t getEnumTagSinglePayload for AnalysisOptions.ModelRetention(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 4) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v5 = v6 - 5;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Transcriber.ReportingOption(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1B2533C50 + 4 * byte_1B25DD38F[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1B2533C84 + 4 * byte_1B25DD38A[v4]))();
}

uint64_t sub_1B2533C84(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B2533C8C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B2533C94);
  return result;
}

uint64_t sub_1B2533CA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B2533CA8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1B2533CAC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B2533CB4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for Transcriber.ReportingOption()
{
  OUTLINED_FUNCTION_239_0();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptionSegment(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1B25CC3B8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for TranscriptionSegment(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1B25CC3B8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TranscriptionSegment(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1B25CC3B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TranscriptionSegment(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;

  v6 = sub_1B25CC3B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for TranscriptionSegment(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1B25CC3B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for TranscriptionSegment(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;

  v6 = sub_1B25CC3B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptionSegment()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1B2534008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = OUTLINED_FUNCTION_99_4();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    OUTLINED_FUNCTION_11_0(a1, a2, v6);
  }
  else
  {
    OUTLINED_FUNCTION_277_2(*(int *)(a3 + 20));
    OUTLINED_FUNCTION_262();
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptionSegment()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1B2534068()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_392_0();
  if (*(_DWORD *)(*(_QWORD *)(OUTLINED_FUNCTION_99_4() - 8) + 84) == v3)
  {
    v4 = OUTLINED_FUNCTION_162_1();
    OUTLINED_FUNCTION_12_0(v4, v5, v6, v7);
  }
  else
  {
    *(_QWORD *)(v1 + *(int *)(v2 + 20)) = (v0 - 1);
    OUTLINED_FUNCTION_262();
  }
}

uint64_t sub_1B25340B0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B25CC3B8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for TranscriptionToken()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TranscriptionToken(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v4 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v4;
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  v5 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v5;
  v6 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v6;
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_WORD *)(a1 + 137) = *(_WORD *)(a2 + 137);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TranscriptionToken(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_BYTE *)(a1 + 137) = *(_BYTE *)(a2 + 137);
  *(_BYTE *)(a1 + 138) = *(_BYTE *)(a2 + 138);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  return a1;
}

void *__swift_memcpy160_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xA0uLL);
}

uint64_t assignWithTake for TranscriptionToken(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  v5 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_BYTE *)(a1 + 137) = *(_BYTE *)(a2 + 137);
  *(_BYTE *)(a1 + 138) = *(_BYTE *)(a2 + 138);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptionToken(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 160))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TranscriptionToken(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 160) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 160) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for TranscriptionToken()
{
  OUTLINED_FUNCTION_239_0();
}

uint64_t storeEnumTagSinglePayload for TranscriptionResultAttributeOption(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B25344F4 + 4 * byte_1B25DD399[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B2534528 + 4 * byte_1B25DD394[v4]))();
}

uint64_t sub_1B2534528(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B2534530(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B2534538);
  return result;
}

uint64_t sub_1B2534544(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B253454CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B2534550(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B2534558(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for TranscriptionResultAttributeOption()
{
  OUTLINED_FUNCTION_239_0();
}

void type metadata accessor for ConfidenceAttribute()
{
  OUTLINED_FUNCTION_239_0();
}

void type metadata accessor for TimeRangeAttribute()
{
  OUTLINED_FUNCTION_239_0();
}

void type metadata accessor for AttributeScopes.SpeechAttributes()
{
  OUTLINED_FUNCTION_239_0();
}

uint64_t destroy for TranscriptionLatticeMitigatorResult()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TranscriptionLatticeMitigatorResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TranscriptionLatticeMitigatorResult(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for TranscriptionLatticeMitigatorResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptionLatticeMitigatorResult(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 33))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TranscriptionLatticeMitigatorResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for TranscriptionLatticeMitigatorResult()
{
  OUTLINED_FUNCTION_239_0();
}

uint64_t destroy for AudioAnalytics()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void _s6Speech14AudioAnalyticsVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_0();
}

_QWORD *assignWithCopy for AudioAnalytics(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for AudioAnalytics(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

void type metadata accessor for AudioAnalytics()
{
  OUTLINED_FUNCTION_239_0();
}

_QWORD *assignWithCopy for AudioAnalytics.AcousticFeature(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

_QWORD *assignWithTake for AudioAnalytics.AcousticFeature(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

void type metadata accessor for AudioAnalytics.AcousticFeature()
{
  OUTLINED_FUNCTION_239_0();
}

void sub_1B25348DC()
{
  sub_1B24EBFA4(&qword_1EEFD9A48, &qword_1EEFD72E0);
}

void sub_1B2534908()
{
  sub_1B24EBFA4(&qword_1EEFD72D8, &qword_1EEFD72C8);
}

void sub_1B2534934()
{
  sub_1B24EBFA4(&qword_1EEFD9A50, &qword_1EEFD7FB8);
}

uint64_t sub_1B2534960(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  uint64_t i;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v2 = 64;
  for (i = 10; i - 8 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    v1 = *(_QWORD *)(a1 + 8 * i);
    v2 += 64;
    if (v1)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1B25349E0(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return (uint64_t)*(id *)(*(_QWORD *)(a4 + 56) + 8 * result);
LABEL_8:
  __break(1u);
  return result;
}

_QWORD *sub_1B2534A34(_QWORD *result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  void *v6;
  id v7;

  if (a2 < 0 || 1 << *(_BYTE *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a5 + (((unint64_t)a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    v5 = *(_QWORD *)(*(_QWORD *)(a5 + 48) + 16 * a2);
    v6 = *(void **)(*(_QWORD *)(a5 + 56) + 8 * a2);
    *result = v6;
    swift_bridgeObjectRetain();
    v7 = v6;
    return (_QWORD *)v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

unint64_t sub_1B2534AC4()
{
  unint64_t result;

  result = qword_1EEFD9AA0;
  if (!qword_1EEFD9AA0)
  {
    result = MEMORY[0x1B5E261DC](&protocol conformance descriptor for AttributeScopes.SpeechAttributes, &type metadata for AttributeScopes.SpeechAttributes);
    atomic_store(result, (unint64_t *)&qword_1EEFD9AA0);
  }
  return result;
}

uint64_t sub_1B2534B00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_1B2527FD0(a1, a2, *(uint64_t **)(v3 + 16), *(_BYTE *)(v3 + 24), a3);
}

uint64_t sub_1B2534B3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1B2528758(a1, a2, *(uint64_t **)(v2 + 16));
}

uint64_t sub_1B2534B44(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 160);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B2531A54(v2);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B2534BC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t result;

  result = a10;
  if (a10)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B2531A54(a21);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1B2534C58(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 72);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_1B2534C70(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  __int128 v4;
  char v5;

  v5 = *(_BYTE *)(a1 + 256);
  v4 = *(_OWORD *)(a1 + 208);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    v4,
    *((_QWORD *)&v4 + 1),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    *(_QWORD *)(a1 + 240),
    *(_QWORD *)(a1 + 248),
    v5);
  return a1;
}

uint64_t sub_1B2534CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t result;

  result = a10;
  if (a10)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B25317F0(a21);
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1B2534D88(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_186(a1, a2);
  OUTLINED_FUNCTION_278_0(v2);
  OUTLINED_FUNCTION_0();
}

unint64_t sub_1B2534DAC@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_1B2522264(a1, a2, *(_QWORD *)(v3 + 16), a3);
}

uint64_t sub_1B2534DC4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B2534DF8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1B2508AAC;
  return sub_1B25252F8(a1, v4, v5, v7, v6);
}

uint64_t OUTLINED_FUNCTION_7_7()
{
  return sub_1B25CD4A4();
}

uint64_t OUTLINED_FUNCTION_14_5()
{
  return swift_arrayInitWithCopy();
}

uint64_t OUTLINED_FUNCTION_20_6(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void *OUTLINED_FUNCTION_23_8(void *__dst, const void *__src, size_t __n)
{
  return memcpy(__dst, __src, __n);
}

uint64_t OUTLINED_FUNCTION_24_8()
{
  return swift_task_alloc();
}

void OUTLINED_FUNCTION_25_7()
{
  sub_1B252BA30();
}

uint64_t OUTLINED_FUNCTION_35_7()
{
  uint64_t v0;

  return v0;
}

void *OUTLINED_FUNCTION_53_3(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xA0uLL);
}

uint64_t OUTLINED_FUNCTION_56_5()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 56) = v0;
  return swift_task_dealloc();
}

size_t OUTLINED_FUNCTION_59_5(const void *a1)
{
  return _swift_stdlib_malloc_size(a1);
}

uint64_t OUTLINED_FUNCTION_61_6()
{
  return swift_bridgeObjectRetain();
}

BOOL OUTLINED_FUNCTION_64_6@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_67_5()
{
  return swift_arrayInitWithCopy();
}

size_t OUTLINED_FUNCTION_70_7(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  size_t result;

  result = _swift_stdlib_malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / v2);
  return result;
}

uint64_t OUTLINED_FUNCTION_71_7()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v0 + 32, v2);
}

uint64_t OUTLINED_FUNCTION_74_4()
{
  return sub_1B25CCAE4();
}

uint64_t OUTLINED_FUNCTION_79_3()
{
  return 0;
}

double OUTLINED_FUNCTION_80_6@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 16);
  result = *(double *)(v1 + 32);
  *(double *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 40) = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_84_4()
{
  return sub_1B25CCE44();
}

uint64_t OUTLINED_FUNCTION_87_4()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_88_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v1 + 16) = v4;
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v1+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v0, v3, v2);
}

uint64_t OUTLINED_FUNCTION_92_4()
{
  return sub_1B25CD6C0();
}

uint64_t OUTLINED_FUNCTION_94_5()
{
  return sub_1B24EADD4();
}

uint64_t OUTLINED_FUNCTION_99_4()
{
  return sub_1B25CC3B8();
}

uint64_t OUTLINED_FUNCTION_100_2(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v4)(_QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  return v4(0, v5, a3, v3);
}

uint64_t OUTLINED_FUNCTION_101_3(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 - 8) = *v1;
  *(_QWORD *)(v2 - 8) = *v1;
  *(_QWORD *)(v3 + 24) = a1;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_103_3(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  return sub_1B2504AB0(a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a2, a3);
}

uint64_t OUTLINED_FUNCTION_104_2()
{
  return 0;
}

void OUTLINED_FUNCTION_105_1()
{
  char v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = (unint64_t)((1 << v0) + 63) >> 6;
}

uint64_t OUTLINED_FUNCTION_107_1()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_108_4()
{
  return sub_1B25CD6B4();
}

uint64_t OUTLINED_FUNCTION_109_3()
{
  uint64_t v0;

  return sub_1B2534B44(v0 + 536);
}

void OUTLINED_FUNCTION_116_2(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint8_t *v4;
  NSObject *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v5, v6, a4, v4, 2u);
}

uint64_t OUTLINED_FUNCTION_117_2()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_118_2()
{
  return sub_1B25CC340();
}

uint64_t OUTLINED_FUNCTION_120_2()
{
  return sub_1B25CCAE4();
}

uint64_t OUTLINED_FUNCTION_122_2()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  return sub_1B252ED00(v3, v4, v0, v1, (_QWORD *)(v5 - 104), v2);
}

void *OUTLINED_FUNCTION_126_1(float a1)
{
  uint64_t v1;
  float *v2;

  *v2 = a1;
  return memcpy((void *)(v1 + 240), (const void *)(v1 + 536), 0x101uLL);
}

void OUTLINED_FUNCTION_127_1(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t *v4;

  *(_BYTE *)(v3 + *(int *)(a1 + 20)) = v2;
  sub_1B24EBCE4(v1, v3 + *(int *)(a1 + 24), v4);
}

void OUTLINED_FUNCTION_128_1(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = 2 * a1;
}

void OUTLINED_FUNCTION_130_1(unsigned __int8 a1)
{
  uint64_t v1;

  sub_1B251CDC8(a1, v1);
}

uint64_t OUTLINED_FUNCTION_131_2()
{
  return 0;
}

void OUTLINED_FUNCTION_135_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 + 16) = v0;
  v5 = v4 + 16 * v3;
  *(_QWORD *)(v5 + 32) = v1;
  *(_QWORD *)(v5 + 40) = v2;
}

uint64_t OUTLINED_FUNCTION_140_2()
{
  return type metadata accessor for Transcriber.ModelOptions(0);
}

uint64_t OUTLINED_FUNCTION_142_2(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_143_3()
{
  return sub_1B25CCA0C();
}

void *OUTLINED_FUNCTION_147_1(void *a1)
{
  uint64_t v1;

  return memcpy(a1, (const void *)(v1 + 536), 0x101uLL);
}

void *OUTLINED_FUNCTION_152_0(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x101uLL);
}

uint64_t OUTLINED_FUNCTION_153_1()
{
  return sub_1B25CCA6C();
}

void OUTLINED_FUNCTION_154_2()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  sub_1B2530288(v4, v3, v0, v2, v1);
}

uint64_t OUTLINED_FUNCTION_157_2()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return sub_1B252EEA4(v3, v2, v0, v1, (_QWORD *)(v4 - 168));
}

uint64_t OUTLINED_FUNCTION_160_2()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_161_0()
{
  return sub_1B25CD0D8();
}

uint64_t OUTLINED_FUNCTION_162_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_165_2()
{
  return sub_1B252488C();
}

uint64_t OUTLINED_FUNCTION_168_2@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 16);
}

void OUTLINED_FUNCTION_171_0(uint64_t a1)
{
  uint64_t *v1;

  sub_1B2534D88(a1, v1);
}

_WORD *OUTLINED_FUNCTION_172_2(_WORD *result)
{
  *result = 0;
  return result;
}

void OUTLINED_FUNCTION_174_0(uint64_t a1)
{
  uint64_t *v1;

  sub_1B2534D88(a1, v1);
}

void OUTLINED_FUNCTION_181_0()
{
  uint64_t v0;

  sub_1B2505544(0, *(_QWORD *)(v0 + 16) + 1, 1);
}

uint64_t OUTLINED_FUNCTION_186_2()
{
  return sub_1B25CCAE4();
}

uint64_t OUTLINED_FUNCTION_187_2(uint64_t a1, int64_t a2)
{
  return sub_1B25055E8(a1, a2, 1);
}

void OUTLINED_FUNCTION_190_2(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 72) = a1;
  sub_1B2505640(0, v1, 0);
}

uint64_t OUTLINED_FUNCTION_192_1()
{
  return type metadata accessor for TranscriptionSegment(0);
}

uint64_t OUTLINED_FUNCTION_193_1()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_195_1()
{
  return swift_arrayInitWithCopy();
}

uint64_t OUTLINED_FUNCTION_196()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v0, 1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_199_1@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

CMTime *OUTLINED_FUNCTION_202_2(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, Float64 a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, CMTime *a19)
{
  int32_t v19;

  return CMTimeMakeWithSeconds((CMTime *)&a19, a9, v19);
}

void OUTLINED_FUNCTION_204_2()
{
  sub_1B252E438();
}

uint64_t OUTLINED_FUNCTION_205_2()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_206_2(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1B24EBCB8(a1, a2, v2);
}

void OUTLINED_FUNCTION_207_1()
{
  uint64_t v0;

  sub_1B2505544(0, v0, 0);
}

void OUTLINED_FUNCTION_208_2()
{
  sub_1B252B524();
}

uint64_t OUTLINED_FUNCTION_209_0()
{
  return swift_unknownObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_210_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_211_2@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

void OUTLINED_FUNCTION_212_2(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_1B24EBCB8(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_213_1()
{
  return sub_1B25CC91C();
}

uint64_t OUTLINED_FUNCTION_215_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_219_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_220_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_224_2()
{
  return sub_1B25CC994();
}

void OUTLINED_FUNCTION_225_2(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1B24EBCB8(a1, a2, v2);
}

void OUTLINED_FUNCTION_228_1(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 104) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_229_1(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_230_2(uint64_t a1@<X8>, uint64_t a2)
{
  _QWORD *v2;

  *v2 = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_233_2()
{
  return sub_1B25CC3B8();
}

uint64_t OUTLINED_FUNCTION_234_0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1B252692C(a1, a2);
}

uint64_t OUTLINED_FUNCTION_235_2()
{
  return swift_arrayInitWithCopy();
}

void OUTLINED_FUNCTION_236_2(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_1B2534D88(v2, a2);
}

void OUTLINED_FUNCTION_237_1(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_1B25317B8(v2, a2);
}

void OUTLINED_FUNCTION_241_1(char a1)
{
  uint64_t v1;

  sub_1B251CE50(a1, v1);
}

uint64_t OUTLINED_FUNCTION_242_2()
{
  return sub_1B25CC3D0();
}

void OUTLINED_FUNCTION_243_2(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = a1;
}

BOOL OUTLINED_FUNCTION_244_2@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

BOOL OUTLINED_FUNCTION_245_2(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_246_2()
{
  uint64_t v0;
  uint64_t result;

  result = sub_1B251CD30();
  *(_QWORD *)(v0 + 40) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_247_2()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_248_1()
{
  uint64_t v0;
  uint64_t result;

  result = sub_1B251CD30();
  *(_QWORD *)(v0 + 24) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_256_2()
{
  return sub_1B25CCAE4();
}

uint64_t OUTLINED_FUNCTION_257_2@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

void OUTLINED_FUNCTION_258_2()
{
  sub_1B252FD2C();
}

void OUTLINED_FUNCTION_260_2()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_261_1()
{
  uint64_t v0;

  return sub_1B25318AC(v0 + 536);
}

uint64_t OUTLINED_FUNCTION_262_1()
{
  _QWORD *v0;

  v0[5] = *(_QWORD *)(v0[3] + v0[4]);
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_263_1()
{
  return sub_1B25CD6B4();
}

uint64_t OUTLINED_FUNCTION_265_2()
{
  return sub_1B25CD0E4();
}

uint64_t OUTLINED_FUNCTION_267_2()
{
  return sub_1B25CCE38();
}

uint64_t OUTLINED_FUNCTION_268_1(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_269_0()
{
  return sub_1B25CD060();
}

void OUTLINED_FUNCTION_270_2(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1B24EBCE4(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_274_2()
{
  return sub_1B25CC3D0();
}

uint64_t OUTLINED_FUNCTION_275_2(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v3;

  return sub_1B2504AB0(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_277_2@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + a1);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

void OUTLINED_FUNCTION_278_2()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_279_2(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

void OUTLINED_FUNCTION_280_2(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_1B25317B8(a1, v1);
}

void OUTLINED_FUNCTION_281_2()
{
  sub_1B252FD2C();
}

void OUTLINED_FUNCTION_282_1()
{
  sub_1B252FD2C();
}

uint64_t OUTLINED_FUNCTION_283_2()
{
  uint64_t v0;

  return sub_1B25317F0(v0);
}

uint64_t OUTLINED_FUNCTION_284_2()
{
  uint64_t v0;

  return sub_1B2531A54(v0);
}

uint64_t OUTLINED_FUNCTION_289_2()
{
  return sub_1B24EADD4();
}

uint64_t OUTLINED_FUNCTION_290_2()
{
  return sub_1B25CCAB4();
}

void OUTLINED_FUNCTION_291_2()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_293_2()
{
  return sub_1B25CD3E4();
}

uint64_t OUTLINED_FUNCTION_294_1()
{
  return sub_1B25CCAB4();
}

void OUTLINED_FUNCTION_296_1(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_1B2534D88(v2, a2);
}

uint64_t OUTLINED_FUNCTION_298_1()
{
  uint64_t v0;

  return sub_1B25317F0(v0);
}

uint64_t OUTLINED_FUNCTION_299_0()
{
  uint64_t v0;

  return sub_1B2531A54(v0);
}

uint64_t OUTLINED_FUNCTION_300_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 248))(v2, v1);
}

void OUTLINED_FUNCTION_301_0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_1B25317B8(v2, a2);
}

void OUTLINED_FUNCTION_303_1()
{
  sub_1B25056E4();
}

void OUTLINED_FUNCTION_304_1()
{
  sub_1B2505214();
}

void OUTLINED_FUNCTION_306_0(uint64_t a1, uint64_t a2)
{
  sub_1B2505640(a1, a2, 1);
}

void OUTLINED_FUNCTION_307_1(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_1B24EBCB8(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_309_1()
{
  return sub_1B25CD1D4();
}

uint64_t OUTLINED_FUNCTION_310_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_311_1(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

void OUTLINED_FUNCTION_312_1()
{
  static TranscriptionToken.allTokensString(from:ipa:attributes:)();
}

uint64_t OUTLINED_FUNCTION_313_0()
{
  return sub_1B25CD5D0();
}

uint64_t OUTLINED_FUNCTION_314_1()
{
  return swift_dynamicCastClass();
}

uint64_t OUTLINED_FUNCTION_319_0()
{
  uint64_t v0;
  _QWORD *v1;

  return sub_1B2500448(0, v0, v1);
}

uint64_t OUTLINED_FUNCTION_320_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_322_0()
{
  return sub_1B25CD12C();
}

void OUTLINED_FUNCTION_323_0(os_unfair_lock_s *a1@<X8>)
{
  os_unfair_lock_lock(a1 + 69);
}

uint64_t OUTLINED_FUNCTION_329_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_330_0()
{
  return swift_stdlib_isStackAllocationSafe();
}

uint64_t OUTLINED_FUNCTION_331_0()
{
  return sub_1B25CCAE4();
}

void OUTLINED_FUNCTION_332_0()
{
  JUMPOUT(0x1B5E252C4);
}

uint64_t OUTLINED_FUNCTION_334_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return __swift_instantiateConcreteTypeFromMangledName(a4);
}

uint64_t OUTLINED_FUNCTION_335_0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t OUTLINED_FUNCTION_340_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_341_0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

void OUTLINED_FUNCTION_345_0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  sub_1B24EBCE4(a1, a2, v2);
}

id OUTLINED_FUNCTION_347_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(id *)(a1 + 8 * v1);
}

void OUTLINED_FUNCTION_348_0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1B24EBCB8(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_349_0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1B2504AB0(a1, a2, (uint64_t *)(v2 + 504));
}

void OUTLINED_FUNCTION_357_0()
{
  JUMPOUT(0x1B5E246D0);
}

void OUTLINED_FUNCTION_358()
{
  sub_1B2530C3C();
}

uint64_t OUTLINED_FUNCTION_359()
{
  uint64_t v0;

  return v0;
}

id OUTLINED_FUNCTION_360_0()
{
  uint64_t v0;
  void *v1;

  *(_QWORD *)(v0 + 896) = v1;
  return v1;
}

uint64_t OUTLINED_FUNCTION_361_0()
{
  return sub_1B25CD12C();
}

uint64_t OUTLINED_FUNCTION_362_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;

  return v2(v1 + a1, v3);
}

void *OUTLINED_FUNCTION_363_0(void *a1)
{
  const void *v1;
  size_t v2;

  return memcpy(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_366_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_367_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_368()
{
  return sub_1B25CD048();
}

uint64_t OUTLINED_FUNCTION_369_0()
{
  return sub_1B25CCAE4();
}

void OUTLINED_FUNCTION_372_0()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_lock(v0);
}

void OUTLINED_FUNCTION_373_0()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_unlock(v0);
}

void OUTLINED_FUNCTION_374_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_1B2534D88(v2, a2);
}

uint64_t OUTLINED_FUNCTION_375_0()
{
  return sub_1B25CD6B4();
}

void OUTLINED_FUNCTION_376_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + *(int *)(v2 + 32)) = v0;
}

uint64_t OUTLINED_FUNCTION_380_0()
{
  return sub_1B25CD450();
}

CMTime *OUTLINED_FUNCTION_382_0(Float64 a1)
{
  int32_t v1;
  uint64_t v2;

  return CMTimeMakeWithSeconds((CMTime *)(v2 - 192), a1, v1);
}

uint64_t OUTLINED_FUNCTION_383_0()
{
  return sub_1B25CC3C4();
}

uint64_t OUTLINED_FUNCTION_384_0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 192) = a1;
  return sub_1B25CC8B0();
}

uint64_t OUTLINED_FUNCTION_386_0()
{
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_387_0()
{
  return sub_1B25CCAB4();
}

void OUTLINED_FUNCTION_389_0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_1B25317B8(v2, a2);
}

void OUTLINED_FUNCTION_394_0()
{
  void *v0;

}

void OUTLINED_FUNCTION_395_0()
{
  JUMPOUT(0x1B5E24B5CLL);
}

uint64_t OUTLINED_FUNCTION_396_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = v1;
  *(_QWORD *)(v2 - 184) = v0;
  return result;
}

uint64_t OUTLINED_FUNCTION_397_0()
{
  return sub_1B25CD108();
}

uint64_t OUTLINED_FUNCTION_399_0()
{
  return sub_1B25CCA6C();
}

void OUTLINED_FUNCTION_400_0()
{
  uint64_t v0;

  sub_1B251CDC8(1u, v0);
}

uint64_t OUTLINED_FUNCTION_404_0()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

void OUTLINED_FUNCTION_406_0()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_407_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

void OUTLINED_FUNCTION_409_0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = v0;
}

void OUTLINED_FUNCTION_411_0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_1B24EBCB8(a1, v3, a3);
}

void OUTLINED_FUNCTION_412_0(uint64_t a1)
{
  uint64_t *v1;

  sub_1B2534D88(a1, v1);
}

void OUTLINED_FUNCTION_413_0()
{
  sub_1B252BAEC();
}

void OUTLINED_FUNCTION_414_0()
{
  sub_1B2505214();
}

uint64_t OUTLINED_FUNCTION_415_0(uint64_t a1, int64_t a2)
{
  return sub_1B25055E8(0, a2, 0);
}

uint64_t OUTLINED_FUNCTION_419_0()
{
  return sub_1B25CD5E8();
}

uint64_t OUTLINED_FUNCTION_420_0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  return a2(0);
}

void OUTLINED_FUNCTION_422(void *a1)
{
  uint64_t v1;

  sub_1B2527DB0(a1, v1 - 256);
}

uint64_t sub_1B2535F94()
{
  return swift_allocateGenericValueMetadata();
}

void sub_1B2535F9C()
{
  type metadata accessor for ZipStateMachine.State();
}

_QWORD *sub_1B2536024(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  size_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  size_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  int v33;
  unint64_t v34;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  unsigned int v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  const void *v50;
  uint64_t v51;
  _QWORD *v52;
  void *v53;
  const void *v54;
  _QWORD *v55;
  _QWORD *v56;
  const void *v57;
  _QWORD *v58;
  _QWORD *v59;
  void *v60;
  const void *v61;
  _QWORD *v62;
  _QWORD *v63;
  void *v64;
  const void *v65;
  _QWORD *v66;
  _QWORD *v67;
  void *v68;
  const void *v69;
  _QWORD *v70;
  _QWORD *v71;
  void *v72;
  const void *v73;
  char v74;
  unsigned int v75;
  char v76;
  int v77;
  unsigned int v78;
  uint64_t v79;
  BOOL v80;
  uint64_t v82;
  size_t __n;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  void *__dst;
  void *__dsta;
  void *__dstb;
  size_t v91;
  size_t v92;
  size_t v93;
  size_t v94;
  size_t v95;
  size_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t AssociatedTypeWitness;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  unint64_t v111;
  unint64_t v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;

  v4 = (_QWORD *)a3[2];
  v5 = a3[3];
  v6 = a3[4];
  v119 = *(v4 - 1);
  v7 = *(_QWORD *)(v5 - 8);
  v116 = *(_DWORD *)(v7 + 80);
  v86 = *(_QWORD *)(v119 + 64) + v116;
  v94 = v7;
  v8 = *(_QWORD *)(v6 - 8);
  v91 = *(_QWORD *)(v7 + 64);
  v113 = *(_DWORD *)(v8 + 80);
  v9 = *(_QWORD *)(v8 + 64);
  if (!*(_DWORD *)(v8 + 84))
    ++v9;
  v82 = *(_QWORD *)(v6 - 8);
  __n = v9;
  v104 = v9
       + ((v91 + *(_DWORD *)(v8 + 80) + (v86 & ~(unint64_t)v116)) & ~(unint64_t)*(_DWORD *)(v8 + 80));
  __dst = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v110 = *(_DWORD *)(v10 + 80);
  v103 = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(v103 - 8);
  v107 = *(_DWORD *)(v11 + 80);
  v12 = v107 | 7;
  v13 = v107 | (unint64_t)v110;
  v99 = v6;
  v14 = swift_getAssociatedTypeWitness();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_DWORD *)(v15 + 80);
  v17 = v16 | 7;
  v18 = v13 | v16 | 7;
  v19 = v110 + 8;
  v84 = v10;
  v85 = v11;
  if (*(_DWORD *)(v10 + 84))
    v20 = *(_QWORD *)(v10 + 64);
  else
    v20 = *(_QWORD *)(v10 + 64) + 1;
  if (*(_DWORD *)(v11 + 84))
    v21 = *(_QWORD *)(v11 + 64);
  else
    v21 = *(_QWORD *)(v11 + 64) + 1;
  v22 = v21 + v17 + ((v107 + 8) & ~(unint64_t)v107);
  v23 = v16 + 8;
  v24 = *(_QWORD *)(v15 + 64);
  if (!*(_DWORD *)(v15 + 84))
    ++v24;
  v25 = v24
      + ((v16 + 8) & ~v16)
      + ((v22 + ((v20 + v12 + ((v110 + 8) & ~(unint64_t)v110)) & ~v12)) & ~v17);
  v26 = v25 + (((v13 | v16) + 8) & ~v18);
  v27 = v104;
  if (v26 > v104)
    v27 = v25 + (((v13 | v16) + 8) & ~v18);
  v28 = ((v26 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v28 <= v27)
    v29 = v27;
  else
    v29 = v28;
  v30 = 8 * v29;
  if (v29 > 3)
    goto LABEL_20;
  v31 = ((1 << v30) + 1) >> v30;
  v32 = 2;
  if (v31 > 0xFFFC)
    v32 = 4;
  if (v31 <= 0xFC)
LABEL_20:
    v32 = 1;
  v33 = *(_DWORD *)(v119 + 80);
  v34 = v13 | v16 | ((v113 | v116) | v33) & 0xF8 | 7u;
  if (((v29 + v32 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= 0x18
    && ((v113 | v116 | v110 | v107 | *(_DWORD *)(v15 + 80) | v33) & 0x100000) == 0
    && v34 == 7)
  {
    v38 = a1;
    v39 = a2;
    if (v29 <= 3)
    {
      v40 = ((1 << v30) + 1) >> v30;
      if (v40 > 0xFFFC)
      {
        v41 = *(_DWORD *)((char *)a2 + v29);
      }
      else
      {
        if (v40 <= 0xFC)
          goto LABEL_32;
        v41 = *(unsigned __int16 *)((char *)a2 + v29);
      }
LABEL_35:
      if (v41 >= 3)
      {
        if (v29 <= 3)
          v42 = v29;
        else
          v42 = 4;
        __asm { BR              X16 }
      }
      v43 = ~v18;
      v44 = ~(unint64_t)v110;
      v45 = ~v12;
      v46 = ~(unint64_t)v107;
      v47 = ~v17;
      v48 = ~v16;
      if (v41 != 2)
      {
        if (v41 != 1)
        {
          (*(void (**)(_QWORD *, _QWORD *, void *))(v119 + 16))(a1, a2, __dst);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v94 + 16))(((unint64_t)a1 + v86) & ~(unint64_t)v116, ((unint64_t)a2 + v86) & ~(unint64_t)v116, v5);
          v49 = (void *)(((((unint64_t)a1 + v86) & ~(unint64_t)v116)
                        + v91
                        + v113) & ~(unint64_t)v113);
          v50 = (const void *)(((((unint64_t)a2 + v86) & ~(unint64_t)v116)
                              + v91
                              + v113) & ~(unint64_t)v113);
          if (__swift_getEnumTagSinglePayload((uint64_t)v50, 1, v99))
          {
            memcpy(v49, v50, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v82 + 16))(v49, v50, v99);
            __swift_storeEnumTagSinglePayload((uint64_t)v49, 0, 1, v99);
          }
          v74 = 8 * v29;
          if (v29 > 3)
            goto LABEL_73;
          v75 = ((1 << (8 * v29)) + 1) >> (8 * v29);
          if (v75 > 0xFFFC)
          {
            *(_DWORD *)((char *)a1 + v29) = 0;
          }
          else
          {
            if (v75 <= 0xFC)
            {
LABEL_73:
              *((_BYTE *)a1 + v29) = 0;
              goto LABEL_74;
            }
            *(_WORD *)((char *)a1 + v29) = 0;
          }
LABEL_87:
          v80 = v75 > 0xFFFC;
          v79 = 2;
          if (v80)
            v79 = 4;
          goto LABEL_89;
        }
        v98 = v47;
        v101 = v48;
        v106 = v20 + v12 + ((v110 + 8) & ~(unint64_t)v110);
        v109 = v107 + 8;
        v93 = v21;
        v112 = v22;
        v115 = v23;
        v96 = v24;
        v118 = v14;
        *a1 = *a2;
        v55 = (_QWORD *)(((unint64_t)a1 + v18 + 8) & v43);
        v56 = (_QWORD *)(((unint64_t)a2 + v18 + 8) & v43);
        *v55 = *v56;
        __dstb = (void *)(((unint64_t)v55 + v19) & v44);
        v57 = (const void *)(((unint64_t)v56 + v19) & v44);
        swift_retain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v57, 1, AssociatedTypeWitness))
        {
          memcpy(__dstb, v57, v20);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v84 + 16))(__dstb, v57, AssociatedTypeWitness);
          __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, AssociatedTypeWitness);
        }
        v62 = (_QWORD *)(((unint64_t)v55 + v106) & v45);
        v63 = (_QWORD *)(((unint64_t)v56 + v106) & v45);
        *v62 = *v63;
        v64 = (void *)(((unint64_t)v62 + v109) & v46);
        v65 = (const void *)(((unint64_t)v63 + v109) & v46);
        if (__swift_getEnumTagSinglePayload((uint64_t)v65, 1, v103))
        {
          memcpy(v64, v65, v93);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v85 + 16))(v64, v65, v103);
          __swift_storeEnumTagSinglePayload((uint64_t)v64, 0, 1, v103);
        }
        v39 = a2;
        v70 = (_QWORD *)(((unint64_t)v62 + v112) & v98);
        v71 = (_QWORD *)(((unint64_t)v63 + v112) & v98);
        *v70 = *v71;
        v72 = (void *)(((unint64_t)v70 + v115) & v101);
        v73 = (const void *)(((unint64_t)v71 + v115) & v101);
        if (__swift_getEnumTagSinglePayload((uint64_t)v73, 1, v118))
        {
          memcpy(v72, v73, v96);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v72, v73, v118);
          __swift_storeEnumTagSinglePayload((uint64_t)v72, 0, 1, v118);
        }
        v74 = 8 * v29;
        if (v29 > 3)
          goto LABEL_69;
        v77 = 1;
        v75 = ((1 << (8 * v29)) + 1) >> (8 * v29);
        if (v75 <= 0xFFFC)
        {
          if (v75 <= 0xFC)
          {
LABEL_69:
            v76 = 1;
            goto LABEL_70;
          }
LABEL_86:
          *(_WORD *)((char *)a1 + v29) = v77;
          goto LABEL_87;
        }
LABEL_83:
        *(_DWORD *)((char *)a1 + v29) = v77;
        goto LABEL_87;
      }
      v97 = v47;
      v100 = v48;
      v105 = v20 + v12 + ((v110 + 8) & ~(unint64_t)v110);
      v108 = v107 + 8;
      __dsta = (void *)v25;
      v92 = v21;
      v111 = v22;
      v114 = v23;
      v95 = v24;
      v117 = v14;
      *a1 = *a2;
      v51 = ((unint64_t)a1 + v18 + 8) & v43;
      v52 = (_QWORD *)(((unint64_t)a2 + v18 + 8) & v43);
      *(_QWORD *)v51 = *v52;
      v53 = (void *)((v19 + v51) & v44);
      v87 = (unint64_t)v52;
      v54 = (const void *)(((unint64_t)v52 + v19) & v44);
      swift_retain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v54, 1, AssociatedTypeWitness))
      {
        memcpy(v53, v54, v20);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v84 + 16))(v53, v54, AssociatedTypeWitness);
        __swift_storeEnumTagSinglePayload((uint64_t)v53, 0, 1, AssociatedTypeWitness);
      }
      v58 = (_QWORD *)((v105 + v51) & v45);
      v59 = (_QWORD *)((v105 + v87) & v45);
      *v58 = *v59;
      v60 = (void *)(((unint64_t)v58 + v108) & v46);
      v61 = (const void *)(((unint64_t)v59 + v108) & v46);
      if (__swift_getEnumTagSinglePayload((uint64_t)v61, 1, v103))
      {
        memcpy(v60, v61, v92);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v85 + 16))(v60, v61, v103);
        __swift_storeEnumTagSinglePayload((uint64_t)v60, 0, 1, v103);
      }
      v66 = (_QWORD *)(((unint64_t)v58 + v111) & v97);
      v67 = (_QWORD *)(((unint64_t)v59 + v111) & v97);
      *v66 = *v67;
      v68 = (void *)(((unint64_t)v66 + v114) & v100);
      v69 = (const void *)(((unint64_t)v67 + v114) & v100);
      if (__swift_getEnumTagSinglePayload((uint64_t)v69, 1, v117))
      {
        memcpy(v68, v69, v95);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v68, v69, v117);
        __swift_storeEnumTagSinglePayload((uint64_t)v68, 0, 1, v117);
      }
      *(_QWORD *)(((unint64_t)__dsta + (v51 | 7)) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)__dsta
                                                                                            + (v87 | 7)) & 0xFFFFFFFFFFFFF8);
      v39 = a2;
      v74 = 8 * v29;
      if (v29 <= 3)
      {
        v75 = ((1 << (8 * v29)) + 1) >> (8 * v29);
        if (v75 > 0xFFFC)
        {
          v77 = 2;
          goto LABEL_83;
        }
        if (v75 > 0xFC)
        {
          LOWORD(v77) = 2;
          goto LABEL_86;
        }
      }
      v76 = 2;
LABEL_70:
      *((_BYTE *)a1 + v29) = v76;
LABEL_74:
      if (v29 > 3)
        goto LABEL_78;
      v78 = ((1 << v74) + 1) >> v74;
      v79 = 2;
      if (v78 > 0xFFFC)
        v79 = 4;
      if (v78 <= 0xFC)
LABEL_78:
        v79 = 1;
LABEL_89:
      *(_QWORD *)(((unint64_t)a1 + v79 + v29 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v39
                                                                                            + v79
                                                                                            + v29
                                                                                            + 7) & 0xFFFFFFFFFFFFF8);
      return v38;
    }
LABEL_32:
    v41 = *((unsigned __int8 *)a2 + v29);
    goto LABEL_35;
  }
  v37 = *a2;
  *a1 = *a2;
  v38 = (_QWORD *)(v37 + ((v34 + 16) & ~v34));
  swift_retain();
  return v38;
}

_QWORD *sub_1B25369B8(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  size_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  size_t v29;
  size_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unsigned int v38;
  unsigned int v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  const void *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  const void *v55;
  char *v56;
  char *v57;
  _QWORD *v58;
  _QWORD *v59;
  void *v60;
  const void *v61;
  _QWORD *v62;
  _QWORD *v63;
  void *v64;
  const void *v65;
  _QWORD *v66;
  _QWORD *v67;
  void *v68;
  const void *v69;
  _QWORD *v70;
  _QWORD *v71;
  void *v72;
  const void *v73;
  _QWORD *v74;
  _QWORD *v75;
  void *v76;
  const void *v77;
  _QWORD *v78;
  char v79;
  unsigned int v80;
  char v81;
  int v82;
  unsigned int v83;
  uint64_t v84;
  BOOL v85;
  size_t v87;
  uint64_t v88;
  size_t __n;
  size_t __na;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  size_t v96;
  size_t v97;
  size_t v98;
  size_t v99;
  size_t v100;
  size_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  size_t v112;
  size_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t AssociatedTypeWitness;
  uint64_t v119;
  uint64_t v120;

  v4 = a3[2];
  v6 = a3[3];
  v5 = a3[4];
  v99 = *(_QWORD *)(v4 - 8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v102 = *(_QWORD *)(v99 + 64) + v8;
  v93 = v8;
  v9 = v102 & ~v8;
  v108 = v7;
  v10 = *(_QWORD *)(v5 - 8);
  v111 = *(_QWORD *)(v7 + 64);
  v96 = *(unsigned __int8 *)(v10 + 80);
  v11 = (v111 + v96 + v9) & ~v96;
  v12 = *(_QWORD *)(v10 + 64);
  if (!*(_DWORD *)(v10 + 84))
    ++v12;
  v88 = *(_QWORD *)(v5 - 8);
  __n = v12;
  v13 = v12 + v11;
  v105 = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v114 = v6;
  v119 = swift_getAssociatedTypeWitness();
  v16 = *(_QWORD *)(v119 - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v117 = v5;
  v18 = v17 | 7;
  v120 = swift_getAssociatedTypeWitness();
  v19 = *(_QWORD *)(v120 - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v20 | 7;
  v22 = v17 | v15 | v20;
  v23 = a2;
  v24 = v22 | 7;
  v25 = (v22 + 8) & ~(v22 | 7);
  v26 = v15 + 8;
  v91 = v14;
  v92 = v16;
  if (*(_DWORD *)(v14 + 84))
    v27 = *(_QWORD *)(v14 + 64);
  else
    v27 = *(_QWORD *)(v14 + 64) + 1;
  v28 = v27 + ((v15 + 8) & ~v15) + v18;
  if (*(_DWORD *)(v16 + 84))
    v29 = *(_QWORD *)(v16 + 64);
  else
    v29 = *(_QWORD *)(v16 + 64) + 1;
  v30 = v29 + ((v17 + 8) & ~v17) + v21;
  v31 = v20 + 8;
  if (*(_DWORD *)(v19 + 84))
    v32 = *(_QWORD *)(v19 + 64);
  else
    v32 = *(_QWORD *)(v19 + 64) + 1;
  v33 = v32 + ((v20 + 8) & ~v20) + ((v30 + (v28 & ~v18)) & ~v21);
  v34 = v33 + v25;
  if (v34 <= v13)
    v35 = v13;
  else
    v35 = v34;
  v36 = ((v34 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v36 <= v35)
    v37 = v35;
  else
    v37 = v36;
  if (v37 > 3)
    goto LABEL_21;
  v38 = ((1 << (8 * v37)) + 1) >> (8 * v37);
  if (v38 > 0xFFFC)
  {
    v23 = a2;
    v39 = *(_DWORD *)((char *)a2 + v37);
  }
  else
  {
    v23 = a2;
    if (v38 <= 0xFC)
    {
LABEL_21:
      v39 = *((unsigned __int8 *)v23 + v37);
      goto LABEL_24;
    }
    v39 = *(unsigned __int16 *)((char *)a2 + v37);
  }
LABEL_24:
  v40 = a1;
  if (v39 >= 3)
  {
    if (v37 <= 3)
      v41 = v37;
    else
      v41 = 4;
    __asm { BR              X16 }
  }
  v42 = ~v24;
  v43 = ~v15;
  v44 = ~v18;
  v45 = ~v17;
  v46 = ~v21;
  v47 = ~v20;
  if (v39 == 2)
  {
    v97 = v27;
    v100 = v32;
    v103 = v46;
    v106 = v47;
    v109 = v17 + 8;
    v112 = v30;
    __na = v33;
    v115 = v31;
    v94 = *(_QWORD *)(v120 - 8);
    *a1 = *v23;
    v50 = (char *)a1 + v24;
    v51 = (char *)v23 + v24;
    v52 = (unint64_t)(v50 + 8) & v42;
    v53 = (unint64_t)(v51 + 8) & v42;
    *(_QWORD *)v52 = *(_QWORD *)v53;
    v54 = (void *)((v26 + v52) & v43);
    v55 = (const void *)((v26 + v53) & v43);
    swift_retain();
    v87 = v29;
    if (__swift_getEnumTagSinglePayload((uint64_t)v55, 1, AssociatedTypeWitness))
    {
      memcpy(v54, v55, v97);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v91 + 16))(v54, v55, AssociatedTypeWitness);
      __swift_storeEnumTagSinglePayload((uint64_t)v54, 0, 1, AssociatedTypeWitness);
    }
    v62 = (_QWORD *)((v28 + v52) & v44);
    v63 = (_QWORD *)((v28 + v53) & v44);
    *v62 = *v63;
    v64 = (void *)(((unint64_t)v62 + v109) & v45);
    v65 = (const void *)(((unint64_t)v63 + v109) & v45);
    if (__swift_getEnumTagSinglePayload((uint64_t)v65, 1, v119))
    {
      memcpy(v64, v65, v87);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v92 + 16))(v64, v65, v119);
      __swift_storeEnumTagSinglePayload((uint64_t)v64, 0, 1, v119);
    }
    v70 = (_QWORD *)(((unint64_t)v62 + v112) & v103);
    v71 = (_QWORD *)(((unint64_t)v63 + v112) & v103);
    *v70 = *v71;
    v72 = (void *)(((unint64_t)v70 + v115) & v106);
    v73 = (const void *)(((unint64_t)v71 + v115) & v106);
    if (__swift_getEnumTagSinglePayload((uint64_t)v73, 1, v120))
    {
      memcpy(v72, v73, v100);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v94 + 16))(v72, v73, v120);
      __swift_storeEnumTagSinglePayload((uint64_t)v72, 0, 1, v120);
    }
    *(_QWORD *)(((v52 | 7) + __na) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v53 | 7) + __na) & 0xFFFFFFFFFFFFF8);
    v40 = a1;
    v78 = a2;
    v79 = 8 * v37;
    if (v37 <= 3)
    {
      v80 = ((1 << (8 * v37)) + 1) >> (8 * v37);
      if (v80 > 0xFFFC)
      {
        v82 = 2;
        goto LABEL_72;
      }
      if (v80 > 0xFC)
      {
        LOWORD(v82) = 2;
        goto LABEL_75;
      }
    }
    v81 = 2;
LABEL_59:
    *((_BYTE *)v40 + v37) = v81;
LABEL_63:
    if (v37 > 3)
      goto LABEL_67;
    v83 = ((1 << v79) + 1) >> v79;
    v84 = 2;
    if (v83 > 0xFFFC)
      v84 = 4;
    if (v83 <= 0xFC)
LABEL_67:
      v84 = 1;
    goto LABEL_78;
  }
  if (v39 == 1)
  {
    v98 = v27;
    v101 = v32;
    v104 = v46;
    v107 = v47;
    v110 = v17 + 8;
    v113 = v30;
    v116 = v31;
    v95 = *(_QWORD *)(v120 - 8);
    *a1 = *v23;
    v56 = (char *)a1 + v24;
    v57 = (char *)v23 + v24;
    v58 = (_QWORD *)((unint64_t)(v56 + 8) & v42);
    v59 = (_QWORD *)((unint64_t)(v57 + 8) & v42);
    *v58 = *v59;
    v60 = (void *)(((unint64_t)v58 + v26) & v43);
    v61 = (const void *)(((unint64_t)v59 + v26) & v43);
    swift_retain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v61, 1, AssociatedTypeWitness))
    {
      memcpy(v60, v61, v98);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v91 + 16))(v60, v61, AssociatedTypeWitness);
      __swift_storeEnumTagSinglePayload((uint64_t)v60, 0, 1, AssociatedTypeWitness);
    }
    v66 = (_QWORD *)(((unint64_t)v58 + v28) & v44);
    v67 = (_QWORD *)(((unint64_t)v59 + v28) & v44);
    *v66 = *v67;
    v68 = (void *)(((unint64_t)v66 + v110) & v45);
    v69 = (const void *)(((unint64_t)v67 + v110) & v45);
    if (__swift_getEnumTagSinglePayload((uint64_t)v69, 1, v119))
    {
      memcpy(v68, v69, v29);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v92 + 16))(v68, v69, v119);
      __swift_storeEnumTagSinglePayload((uint64_t)v68, 0, 1, v119);
    }
    v40 = a1;
    v74 = (_QWORD *)(((unint64_t)v66 + v113) & v104);
    v75 = (_QWORD *)(((unint64_t)v67 + v113) & v104);
    *v74 = *v75;
    v76 = (void *)(((unint64_t)v74 + v116) & v107);
    v77 = (const void *)(((unint64_t)v75 + v116) & v107);
    if (__swift_getEnumTagSinglePayload((uint64_t)v77, 1, v120))
    {
      memcpy(v76, v77, v101);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v95 + 16))(v76, v77, v120);
      __swift_storeEnumTagSinglePayload((uint64_t)v76, 0, 1, v120);
    }
    v78 = a2;
    v79 = 8 * v37;
    if (v37 > 3)
      goto LABEL_58;
    v82 = 1;
    v80 = ((1 << (8 * v37)) + 1) >> (8 * v37);
    if (v80 <= 0xFFFC)
    {
      if (v80 <= 0xFC)
      {
LABEL_58:
        v81 = 1;
        goto LABEL_59;
      }
LABEL_75:
      *(_WORD *)((char *)v40 + v37) = v82;
      goto LABEL_76;
    }
LABEL_72:
    *(_DWORD *)((char *)v40 + v37) = v82;
    goto LABEL_76;
  }
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v99 + 16))(a1, v23, v105);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v108 + 16))(((unint64_t)a1 + v102) & ~v93, ((unint64_t)v23 + v102) & ~v93, v114);
  v48 = (void *)(((((unint64_t)a1 + v102) & ~v93) + v111 + v96) & ~v96);
  v49 = (const void *)(((((unint64_t)v23 + v102) & ~v93) + v111 + v96) & ~v96);
  if (__swift_getEnumTagSinglePayload((uint64_t)v49, 1, v117))
  {
    memcpy(v48, v49, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v88 + 16))(v48, v49, v117);
    __swift_storeEnumTagSinglePayload((uint64_t)v48, 0, 1, v117);
  }
  v78 = a2;
  v79 = 8 * v37;
  if (v37 > 3)
    goto LABEL_62;
  v80 = ((1 << (8 * v37)) + 1) >> (8 * v37);
  if (v80 > 0xFFFC)
  {
    *(_DWORD *)((char *)a1 + v37) = 0;
  }
  else
  {
    if (v80 <= 0xFC)
    {
LABEL_62:
      *((_BYTE *)a1 + v37) = 0;
      goto LABEL_63;
    }
    *(_WORD *)((char *)a1 + v37) = 0;
  }
LABEL_76:
  v85 = v80 > 0xFFFC;
  v84 = 2;
  if (v85)
    v84 = 4;
LABEL_78:
  *(_QWORD *)(((unint64_t)v40 + v84 + v37 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v78
                                                                                         + v84
                                                                                         + v37
                                                                                         + 7) & 0xFFFFFFFFFFFFF8);
  return v40;
}

_QWORD *sub_1B2537294(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  size_t v31;
  _QWORD *v32;
  size_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  unsigned int v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int v54;
  unsigned int v55;
  uint64_t v56;
  void *v57;
  const void *v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  const void *v62;
  char *v63;
  _QWORD *v64;
  _QWORD *v65;
  void *v66;
  const void *v67;
  _QWORD *v68;
  _QWORD *v69;
  void *v70;
  const void *v71;
  _QWORD *v72;
  _QWORD *v73;
  void *v74;
  const void *v75;
  _QWORD *v76;
  _QWORD *v77;
  void *v78;
  const void *v79;
  _QWORD *v80;
  _QWORD *v81;
  void *v82;
  const void *v83;
  unsigned int v84;
  char v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  uint64_t v89;
  unint64_t v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unsigned int v111;
  uint64_t v112;
  _QWORD *result;
  size_t __n;
  uint64_t v115;
  uint64_t v116;
  size_t v117;
  size_t v118;
  size_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t AssociatedTypeWitness;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;

  v3 = a3;
  if (a1 == a2)
    goto LABEL_95;
  v5 = a3[2];
  v6 = v3[3];
  v125 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v126 = *(_QWORD *)(v125 + 64) + v8;
  v145 = v8;
  v9 = v126 & ~v8;
  v128 = v7;
  v10 = v3[4];
  v11 = *(_QWORD *)(v10 - 8);
  v129 = *(_QWORD *)(v7 + 64);
  v147 = *(unsigned __int8 *)(v11 + 80);
  v12 = (v129 + v147 + v9) & ~v147;
  v13 = *(_QWORD *)(v11 + 64);
  if (!*(_DWORD *)(v11 + 84))
    ++v13;
  __n = v13;
  v115 = *(_QWORD *)(v10 - 8);
  v136 = v13 + v12;
  v127 = v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v130 = v6;
  v143 = swift_getAssociatedTypeWitness();
  v16 = a1;
  v17 = *(_QWORD *)(v143 - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = v18 | 7;
  v132 = v3;
  v131 = v10;
  v20 = swift_getAssociatedTypeWitness();
  v21 = v15;
  v144 = v20;
  v22 = *(_QWORD *)(v20 - 8);
  v23 = *(unsigned __int8 *)(v22 + 80);
  v24 = v23 | 7;
  v25 = v18 | v15 | v23;
  v26 = v25 | 7;
  v27 = (v25 + 8) & ~(v25 | 7);
  v28 = v15 + 8;
  v120 = v14;
  if (*(_DWORD *)(v14 + 84))
    v29 = *(_QWORD *)(v14 + 64);
  else
    v29 = *(_QWORD *)(v14 + 64) + 1;
  v138 = v29 + ((v15 + 8) & ~v15) + v19;
  v139 = v18 + 8;
  v30 = *(_DWORD *)(v17 + 84);
  v121 = v17;
  v31 = *(_QWORD *)(v17 + 64);
  v32 = v16;
  if (v30)
    v33 = v31;
  else
    v33 = v31 + 1;
  v141 = v33 + ((v18 + 8) & ~v18) + v24;
  v142 = v23 + 8;
  v122 = v22;
  if (*(_DWORD *)(v22 + 84))
    v34 = *(_QWORD *)(v22 + 64);
  else
    v34 = *(_QWORD *)(v22 + 64) + 1;
  v35 = v34 + ((v23 + 8) & ~v23) + ((v141 + (v138 & ~v19)) & ~v24);
  v36 = v35 + v27;
  v37 = v136;
  if (v36 > v136)
    v37 = v36;
  v38 = ((v36 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v38 <= v37)
    v39 = v37;
  else
    v39 = v38;
  v40 = 8 * v39;
  if (v39 > 3)
    goto LABEL_21;
  v41 = ((1 << v40) + 1) >> v40;
  if (v41 > 0xFFFC)
  {
    v42 = *(_DWORD *)((char *)v16 + v39);
  }
  else
  {
    if (v41 <= 0xFC)
    {
LABEL_21:
      v42 = *((unsigned __int8 *)v16 + v39);
      goto LABEL_25;
    }
    v42 = *(unsigned __int16 *)((char *)v16 + v39);
  }
LABEL_25:
  if (v42 >= 3)
  {
    if (v39 <= 3)
      v43 = v39;
    else
      v43 = 4;
    __asm { BR              X14 }
  }
  v123 = ~v145;
  v124 = ~v147;
  v44 = ~v26;
  v133 = ~v21;
  v134 = ~v19;
  v135 = ~v18;
  v137 = ~v24;
  v45 = ~v23;
  v146 = 8 * v39;
  v118 = v33;
  v119 = v34;
  v116 = v35;
  v117 = v29;
  if (v42 == 2)
  {
    swift_release();
    v50 = ((unint64_t)v16 + v26 + 8) & v44;
    v48 = v28;
    v51 = (v28 + v50) & v133;
    v47 = AssociatedTypeWitness;
    v46 = a2;
    if (!__swift_getEnumTagSinglePayload(v51, 1, AssociatedTypeWitness))
LABEL_35:
      (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v51, v47);
  }
  else
  {
    v46 = a2;
    v47 = AssociatedTypeWitness;
    if (v42 != 1)
    {
      v48 = v28;
      (*(void (**)(_QWORD *, uint64_t))(v125 + 8))(v32, v127);
      (*(void (**)(unint64_t, uint64_t))(v128 + 8))(((unint64_t)v32 + v126) & v123, v130);
      v49 = ((((unint64_t)v32 + v126) & v123) + v129 + v147) & v124;
      if (!__swift_getEnumTagSinglePayload(v49, 1, v131))
        (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v49, v131);
      goto LABEL_40;
    }
    swift_release();
    v50 = ((unint64_t)v16 + v26 + 8) & v44;
    v48 = v28;
    v51 = (v28 + v50) & v133;
    if (!__swift_getEnumTagSinglePayload(v51, 1, AssociatedTypeWitness))
      goto LABEL_35;
  }
  v52 = (v138 + v50) & v134;
  if (!__swift_getEnumTagSinglePayload((v139 + v52) & v135, 1, v143))
    (*(void (**)(uint64_t, uint64_t))(v121 + 8))((v139 + v52) & v135, v143);
  v53 = (v142 + ((v141 + v52) & v137)) & v45;
  v40 = 8 * v39;
  if (!__swift_getEnumTagSinglePayload(v53, 1, v144))
    (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v53, v144);
LABEL_40:
  if (v39 > 3)
  {
LABEL_43:
    v55 = *((unsigned __int8 *)v46 + v39);
    goto LABEL_48;
  }
  v54 = ((1 << v40) + 1) >> v40;
  if (v54 > 0xFFFC)
  {
    v55 = *(_DWORD *)((char *)v46 + v39);
  }
  else
  {
    if (v54 <= 0xFC)
      goto LABEL_43;
    v55 = *(unsigned __int16 *)((char *)v46 + v39);
  }
LABEL_48:
  if (v55 >= 3)
  {
    if (v39 <= 3)
      v56 = v39;
    else
      v56 = 4;
    __asm { BR              X12 }
  }
  if (v55 == 2)
  {
    v148 = v45;
    *v32 = *v46;
    v59 = ((unint64_t)v32 + v26 + 8) & v44;
    v60 = ((unint64_t)v46 + v26 + 8) & v44;
    *(_QWORD *)v59 = *(_QWORD *)v60;
    v61 = (void *)((v48 + v59) & v133);
    v62 = (const void *)((v48 + v60) & v133);
    swift_retain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v62, 1, v47))
    {
      memcpy(v61, v62, v117);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v120 + 16))(v61, v62, v47);
      __swift_storeEnumTagSinglePayload((uint64_t)v61, 0, 1, v47);
    }
    v68 = (_QWORD *)((v138 + v59) & v134);
    v69 = (_QWORD *)((v138 + v60) & v134);
    *v68 = *v69;
    v70 = (void *)(((unint64_t)v68 + v139) & v135);
    v71 = (const void *)(((unint64_t)v69 + v139) & v135);
    if (__swift_getEnumTagSinglePayload((uint64_t)v71, 1, v143))
    {
      memcpy(v70, v71, v118);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v121 + 16))(v70, v71, v143);
      __swift_storeEnumTagSinglePayload((uint64_t)v70, 0, 1, v143);
    }
    v76 = (_QWORD *)(((unint64_t)v68 + v141) & v137);
    v77 = (_QWORD *)(((unint64_t)v69 + v141) & v137);
    *v76 = *v77;
    v78 = (void *)(((unint64_t)v76 + v142) & v148);
    v79 = (const void *)(((unint64_t)v77 + v142) & v148);
    if (__swift_getEnumTagSinglePayload((uint64_t)v79, 1, v144))
    {
      memcpy(v78, v79, v119);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v122 + 16))(v78, v79, v144);
      __swift_storeEnumTagSinglePayload((uint64_t)v78, 0, 1, v144);
    }
    *(_QWORD *)(((v59 | 7) + v116) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v60 | 7) + v116) & 0xFFFFFFFFFFFFF8);
    v3 = v132;
    if (v39 <= 3)
    {
      v84 = ((1 << v146) + 1) >> v146;
      if (v84 > 0xFFFC)
      {
        v86 = 2;
        goto LABEL_91;
      }
      if (v84 > 0xFC)
      {
        LOWORD(v86) = 2;
        goto LABEL_94;
      }
    }
    v85 = 2;
LABEL_83:
    *((_BYTE *)v32 + v39) = v85;
    goto LABEL_95;
  }
  if (v55 == 1)
  {
    v149 = v45;
    *v32 = *v46;
    v63 = (char *)v46 + v26;
    v64 = (_QWORD *)(((unint64_t)v32 + v26 + 8) & v44);
    v65 = (_QWORD *)((unint64_t)(v63 + 8) & v44);
    *v64 = *v65;
    v66 = (void *)(((unint64_t)v64 + v48) & v133);
    v67 = (const void *)(((unint64_t)v65 + v48) & v133);
    swift_retain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v67, 1, v47))
    {
      memcpy(v66, v67, v117);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v120 + 16))(v66, v67, v47);
      __swift_storeEnumTagSinglePayload((uint64_t)v66, 0, 1, v47);
    }
    v72 = (_QWORD *)(((unint64_t)v64 + v138) & v134);
    v73 = (_QWORD *)(((unint64_t)v65 + v138) & v134);
    *v72 = *v73;
    v74 = (void *)(((unint64_t)v72 + v139) & v135);
    v75 = (const void *)(((unint64_t)v73 + v139) & v135);
    if (__swift_getEnumTagSinglePayload((uint64_t)v75, 1, v143))
    {
      memcpy(v74, v75, v118);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v121 + 16))(v74, v75, v143);
      __swift_storeEnumTagSinglePayload((uint64_t)v74, 0, 1, v143);
    }
    v80 = (_QWORD *)(((unint64_t)v72 + v141) & v137);
    v81 = (_QWORD *)(((unint64_t)v73 + v141) & v137);
    *v80 = *v81;
    v82 = (void *)(((unint64_t)v80 + v142) & v149);
    v83 = (const void *)(((unint64_t)v81 + v142) & v149);
    if (__swift_getEnumTagSinglePayload((uint64_t)v83, 1, v144))
    {
      memcpy(v82, v83, v119);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v122 + 16))(v82, v83, v144);
      __swift_storeEnumTagSinglePayload((uint64_t)v82, 0, 1, v144);
    }
    v3 = v132;
    if (v39 > 3)
      goto LABEL_82;
    v86 = 1;
    v87 = ((1 << v146) + 1) >> v146;
    if (v87 <= 0xFFFC)
    {
      if (v87 <= 0xFC)
      {
LABEL_82:
        v85 = 1;
        goto LABEL_83;
      }
LABEL_94:
      *(_WORD *)((char *)v32 + v39) = v86;
      goto LABEL_95;
    }
LABEL_91:
    *(_DWORD *)((char *)v32 + v39) = v86;
    goto LABEL_95;
  }
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v125 + 16))(v32, v46, v127);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v128 + 16))(((unint64_t)v32 + v126) & v123, ((unint64_t)v46 + v126) & v123, v130);
  v57 = (void *)(((((unint64_t)v32 + v126) & v123) + v129 + v147) & v124);
  v58 = (const void *)(((((unint64_t)v46 + v126) & v123) + v129 + v147) & v124);
  if (__swift_getEnumTagSinglePayload((uint64_t)v58, 1, v131))
  {
    memcpy(v57, v58, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v115 + 16))(v57, v58, v131);
    __swift_storeEnumTagSinglePayload((uint64_t)v57, 0, 1, v131);
  }
  v3 = v132;
  if (v39 > 3)
    goto LABEL_86;
  v88 = ((1 << v146) + 1) >> v146;
  if (v88 > 0xFFFC)
  {
    *(_DWORD *)((char *)v32 + v39) = 0;
  }
  else
  {
    if (v88 <= 0xFC)
    {
LABEL_86:
      *((_BYTE *)v32 + v39) = 0;
      goto LABEL_95;
    }
    *(_WORD *)((char *)v32 + v39) = 0;
  }
LABEL_95:
  v89 = *(_QWORD *)(v3[4] - 8);
  v90 = (((*(_QWORD *)(*(_QWORD *)(v3[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(v3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3[3] - 8) + 80))
       + *(_QWORD *)(*(_QWORD *)(v3[3] - 8) + 64)
       + *(unsigned __int8 *)(v89 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80);
  v91 = *(_DWORD *)(v89 + 84);
  v92 = *(_QWORD *)(v89 + 64);
  if (v91)
    v93 = v92;
  else
    v93 = v92 + 1;
  v94 = v93 + v90;
  v95 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v96 = *(unsigned __int8 *)(v95 + 80);
  v97 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v98 = *(unsigned __int8 *)(v97 + 80);
  v99 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v100 = *(unsigned __int8 *)(v99 + 80);
  v101 = v100 | 7;
  v102 = (v98 | 7) + *(_QWORD *)(v95 + 64) + ((v96 + 8) & ~v96);
  if (!*(_DWORD *)(v95 + 84))
    ++v102;
  v103 = v102 & ~(v98 | 7);
  v104 = v101 + *(_QWORD *)(v97 + 64) + ((v98 + 8) & ~v98);
  if (!*(_DWORD *)(v97 + 84))
    ++v104;
  v105 = (v104 + v103) & ~v101;
  v106 = *(_DWORD *)(v99 + 84);
  v107 = *(_QWORD *)(v99 + 64)
       + ((v100 + 8) & ~v100)
       + (((v98 | v96 | v100) & 0xF8 ^ 0x1F8) & ((v98 | v96 | v100) + 8));
  if (!v106)
    ++v107;
  v108 = v107 + v105;
  if (v108 <= v94)
    v109 = v94;
  else
    v109 = v108;
  v110 = ((v108 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v110 <= v109)
    v110 = v109;
  if (v110 > 3)
    goto LABEL_113;
  v111 = ((1 << (8 * v110)) + 1) >> (8 * v110);
  v112 = 2;
  if (v111 > 0xFFFC)
    v112 = 4;
  if (v111 <= 0xFC)
LABEL_113:
    v112 = 1;
  result = a1;
  *(_QWORD *)(((unint64_t)a1 + v112 + v110 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2
                                                                                          + v112
                                                                                          + v110
                                                                                          + 7) & 0xFFFFFFFFFFFFF8);
  return result;
}

_QWORD *sub_1B2537F6C(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  uint64_t v10;
  size_t v11;
  size_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unsigned int v37;
  unsigned int v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  void *v48;
  const void *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  const void *v55;
  _QWORD *v56;
  _QWORD *v57;
  void *v58;
  const void *v59;
  _QWORD *v60;
  _QWORD *v61;
  void *v62;
  const void *v63;
  _QWORD *v64;
  _QWORD *v65;
  void *v66;
  const void *v67;
  _QWORD *v68;
  _QWORD *v69;
  void *v70;
  const void *v71;
  _QWORD *v72;
  _QWORD *v73;
  void *v74;
  const void *v75;
  char v76;
  unsigned int v77;
  char v78;
  int v79;
  unsigned int v80;
  uint64_t v81;
  BOOL v82;
  uint64_t v84;
  size_t __n;
  size_t __na;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  size_t v92;
  size_t v93;
  size_t v94;
  size_t v95;
  size_t v96;
  size_t v97;
  size_t v98;
  size_t v99;
  size_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t AssociatedTypeWitness;

  v4 = a3[2];
  v5 = a3[3];
  v6 = a3[4];
  v95 = *(_QWORD *)(v4 - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v98 = *(_QWORD *)(v95 + 64) + v8;
  v89 = v8;
  v9 = v98 & ~v8;
  v104 = v7;
  v10 = *(_QWORD *)(v6 - 8);
  v107 = *(_QWORD *)(v7 + 64);
  v92 = *(unsigned __int8 *)(v10 + 80);
  v11 = (v107 + v92 + v9) & ~v92;
  v12 = *(_QWORD *)(v10 + 64);
  if (!*(_DWORD *)(v10 + 84))
    ++v12;
  v84 = *(_QWORD *)(v6 - 8);
  __n = v12;
  v13 = v12 + v11;
  v101 = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v110 = v5;
  v113 = swift_getAssociatedTypeWitness();
  v16 = *(_QWORD *)(v113 - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = v17 | v15;
  v19 = v17 | 7;
  v114 = swift_getAssociatedTypeWitness();
  v20 = *(_QWORD *)(v114 - 8);
  v21 = *(unsigned __int8 *)(v20 + 80);
  v22 = v21 | 7;
  v23 = v17 | v15 | v21 | 7;
  v24 = v15 + 8;
  v87 = v14;
  v88 = v16;
  if (*(_DWORD *)(v14 + 84))
    v25 = *(_QWORD *)(v14 + 64);
  else
    v25 = *(_QWORD *)(v14 + 64) + 1;
  v26 = v25 + ((v15 + 8) & ~v15) + v19;
  v27 = v17 + 8;
  if (*(_DWORD *)(v16 + 84))
    v28 = *(_QWORD *)(v16 + 64);
  else
    v28 = *(_QWORD *)(v16 + 64) + 1;
  v29 = v28 + ((v17 + 8) & ~v17) + v22;
  v30 = v21 + 8;
  if (*(_DWORD *)(v20 + 84))
    v31 = *(_QWORD *)(v20 + 64);
  else
    v31 = *(_QWORD *)(v20 + 64) + 1;
  v32 = v31 + ((v21 + 8) & ~v21) + ((v29 + (v26 & ~v19)) & ~v22);
  v33 = v32 + (((v18 | v21) + 8) & ~v23);
  if (v33 <= v13)
    v34 = v13;
  else
    v34 = v32 + (((v18 | v21) + 8) & ~v23);
  v35 = ((v33 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v35 <= v34)
    v36 = v34;
  else
    v36 = v35;
  if (v36 > 3)
    goto LABEL_21;
  v37 = ((1 << (8 * v36)) + 1) >> (8 * v36);
  if (v37 <= 0xFFFC)
  {
    if (v37 > 0xFC)
    {
      v38 = *(unsigned __int16 *)((char *)a2 + v36);
      goto LABEL_22;
    }
LABEL_21:
    v38 = *((unsigned __int8 *)a2 + v36);
LABEL_22:
    v39 = a2;
    goto LABEL_24;
  }
  v39 = a2;
  v38 = *(_DWORD *)((char *)a2 + v36);
LABEL_24:
  if (v38 >= 3)
  {
    if (v36 <= 3)
      v40 = v36;
    else
      v40 = 4;
    __asm { BR              X16 }
  }
  v41 = ~v23;
  v42 = ~v15;
  v43 = ~v19;
  v44 = ~v17;
  v45 = ~v22;
  v46 = ~v21;
  if (v38 == 2)
  {
    v93 = v25;
    v96 = v28;
    v102 = v45;
    v105 = v46;
    __na = v32;
    v108 = v29;
    v111 = v30;
    v99 = v31;
    v90 = *(_QWORD *)(v114 - 8);
    *a1 = *v39;
    v50 = (char *)a1 + v23;
    v51 = (char *)v39 + v23;
    v52 = (unint64_t)(v50 + 8) & v41;
    v53 = (unint64_t)(v51 + 8) & v41;
    *(_QWORD *)v52 = *(_QWORD *)v53;
    v54 = (void *)((v24 + v52) & v42);
    v55 = (const void *)((v24 + v53) & v42);
    if (__swift_getEnumTagSinglePayload((uint64_t)v55, 1, AssociatedTypeWitness))
    {
      memcpy(v54, v55, v93);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v87 + 32))(v54, v55, AssociatedTypeWitness);
      __swift_storeEnumTagSinglePayload((uint64_t)v54, 0, 1, AssociatedTypeWitness);
    }
    v60 = (_QWORD *)((v26 + v52) & v43);
    v61 = (_QWORD *)((v26 + v53) & v43);
    *v60 = *v61;
    v62 = (void *)(((unint64_t)v60 + v27) & v44);
    v63 = (const void *)(((unint64_t)v61 + v27) & v44);
    if (__swift_getEnumTagSinglePayload((uint64_t)v63, 1, v113))
    {
      memcpy(v62, v63, v96);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v88 + 32))(v62, v63, v113);
      __swift_storeEnumTagSinglePayload((uint64_t)v62, 0, 1, v113);
    }
    v68 = (_QWORD *)(((unint64_t)v60 + v108) & v102);
    v69 = (_QWORD *)(((unint64_t)v61 + v108) & v102);
    *v68 = *v69;
    v70 = (void *)(((unint64_t)v68 + v111) & v105);
    v71 = (const void *)(((unint64_t)v69 + v111) & v105);
    if (__swift_getEnumTagSinglePayload((uint64_t)v71, 1, v114))
    {
      memcpy(v70, v71, v99);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v90 + 32))(v70, v71, v114);
      __swift_storeEnumTagSinglePayload((uint64_t)v70, 0, 1, v114);
    }
    *(_QWORD *)(((v52 | 7) + __na) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v53 | 7) + __na) & 0xFFFFFFFFFFFFF8);
    v47 = a1;
    v39 = a2;
    v76 = 8 * v36;
    if (v36 <= 3)
    {
      v77 = ((1 << (8 * v36)) + 1) >> (8 * v36);
      if (v77 > 0xFFFC)
      {
        v79 = 2;
        goto LABEL_73;
      }
      if (v77 > 0xFC)
      {
        LOWORD(v79) = 2;
        goto LABEL_76;
      }
    }
    v78 = 2;
LABEL_60:
    *((_BYTE *)v47 + v36) = v78;
LABEL_64:
    if (v36 > 3)
      goto LABEL_68;
    v80 = ((1 << v76) + 1) >> v76;
    v81 = 2;
    if (v80 > 0xFFFC)
      v81 = 4;
    if (v80 <= 0xFC)
LABEL_68:
      v81 = 1;
    goto LABEL_79;
  }
  if (v38 == 1)
  {
    v94 = v25;
    v97 = v28;
    v103 = v45;
    v106 = v46;
    v109 = v29;
    v112 = v30;
    v100 = v31;
    v91 = *(_QWORD *)(v114 - 8);
    *a1 = *v39;
    v56 = (_QWORD *)(((unint64_t)a1 + v23 + 8) & v41);
    v57 = (_QWORD *)(((unint64_t)v39 + v23 + 8) & v41);
    *v56 = *v57;
    v58 = (void *)(((unint64_t)v56 + v24) & v42);
    v59 = (const void *)(((unint64_t)v57 + v24) & v42);
    if (__swift_getEnumTagSinglePayload((uint64_t)v59, 1, AssociatedTypeWitness))
    {
      memcpy(v58, v59, v94);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v87 + 32))(v58, v59, AssociatedTypeWitness);
      __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, AssociatedTypeWitness);
    }
    v64 = (_QWORD *)(((unint64_t)v56 + v26) & v43);
    v65 = (_QWORD *)(((unint64_t)v57 + v26) & v43);
    *v64 = *v65;
    v66 = (void *)(((unint64_t)v64 + v27) & v44);
    v67 = (const void *)(((unint64_t)v65 + v27) & v44);
    if (__swift_getEnumTagSinglePayload((uint64_t)v67, 1, v113))
    {
      memcpy(v66, v67, v97);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v88 + 32))(v66, v67, v113);
      __swift_storeEnumTagSinglePayload((uint64_t)v66, 0, 1, v113);
    }
    v39 = a2;
    v72 = (_QWORD *)(((unint64_t)v64 + v109) & v103);
    v73 = (_QWORD *)(((unint64_t)v65 + v109) & v103);
    *v72 = *v73;
    v74 = (void *)(((unint64_t)v72 + v112) & v106);
    v75 = (const void *)(((unint64_t)v73 + v112) & v106);
    if (__swift_getEnumTagSinglePayload((uint64_t)v75, 1, v114))
    {
      memcpy(v74, v75, v100);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v91 + 32))(v74, v75, v114);
      __swift_storeEnumTagSinglePayload((uint64_t)v74, 0, 1, v114);
    }
    v47 = a1;
    v76 = 8 * v36;
    if (v36 > 3)
      goto LABEL_59;
    v79 = 1;
    v77 = ((1 << (8 * v36)) + 1) >> (8 * v36);
    if (v77 <= 0xFFFC)
    {
      if (v77 <= 0xFC)
      {
LABEL_59:
        v78 = 1;
        goto LABEL_60;
      }
LABEL_76:
      *(_WORD *)((char *)v47 + v36) = v79;
      goto LABEL_77;
    }
LABEL_73:
    *(_DWORD *)((char *)v47 + v36) = v79;
    goto LABEL_77;
  }
  v47 = a1;
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v95 + 32))(a1, v39, v101);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v104 + 32))(((unint64_t)a1 + v98) & ~v89, ((unint64_t)v39 + v98) & ~v89, v110);
  v48 = (void *)(((((unint64_t)a1 + v98) & ~v89) + v107 + v92) & ~v92);
  v49 = (const void *)(((((unint64_t)v39 + v98) & ~v89) + v107 + v92) & ~v92);
  if (__swift_getEnumTagSinglePayload((uint64_t)v49, 1, v6))
  {
    memcpy(v48, v49, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v84 + 32))(v48, v49, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v48, 0, 1, v6);
  }
  v76 = 8 * v36;
  if (v36 > 3)
    goto LABEL_63;
  v77 = ((1 << (8 * v36)) + 1) >> (8 * v36);
  if (v77 > 0xFFFC)
  {
    *(_DWORD *)((char *)a1 + v36) = 0;
  }
  else
  {
    if (v77 <= 0xFC)
    {
LABEL_63:
      *((_BYTE *)a1 + v36) = 0;
      goto LABEL_64;
    }
    *(_WORD *)((char *)a1 + v36) = 0;
  }
LABEL_77:
  v82 = v77 > 0xFFFC;
  v81 = 2;
  if (v82)
    v81 = 4;
LABEL_79:
  *(_QWORD *)(((unint64_t)v47 + v81 + v36 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v39
                                                                                         + v81
                                                                                         + v36
                                                                                         + 7) & 0xFFFFFFFFFFFFF8);
  return v47;
}

_QWORD *sub_1B2538834(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  size_t v31;
  _QWORD *v32;
  size_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  unsigned int v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int v54;
  unsigned int v55;
  uint64_t v56;
  void *v57;
  const void *v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  const void *v62;
  char *v63;
  _QWORD *v64;
  _QWORD *v65;
  void *v66;
  const void *v67;
  _QWORD *v68;
  _QWORD *v69;
  void *v70;
  const void *v71;
  _QWORD *v72;
  _QWORD *v73;
  void *v74;
  const void *v75;
  _QWORD *v76;
  _QWORD *v77;
  void *v78;
  const void *v79;
  _QWORD *v80;
  _QWORD *v81;
  void *v82;
  const void *v83;
  unsigned int v84;
  char v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  uint64_t v89;
  unint64_t v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unsigned int v111;
  uint64_t v112;
  _QWORD *result;
  size_t __n;
  uint64_t v115;
  uint64_t v116;
  size_t v117;
  size_t v118;
  size_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t AssociatedTypeWitness;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;

  v3 = a3;
  if (a1 == a2)
    goto LABEL_95;
  v5 = a3[2];
  v6 = v3[3];
  v125 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v126 = *(_QWORD *)(v125 + 64) + v8;
  v145 = v8;
  v9 = v126 & ~v8;
  v128 = v7;
  v10 = v3[4];
  v11 = *(_QWORD *)(v10 - 8);
  v129 = *(_QWORD *)(v7 + 64);
  v147 = *(unsigned __int8 *)(v11 + 80);
  v12 = (v129 + v147 + v9) & ~v147;
  v13 = *(_QWORD *)(v11 + 64);
  if (!*(_DWORD *)(v11 + 84))
    ++v13;
  __n = v13;
  v115 = *(_QWORD *)(v10 - 8);
  v136 = v13 + v12;
  v127 = v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v130 = v6;
  v143 = swift_getAssociatedTypeWitness();
  v16 = a1;
  v17 = *(_QWORD *)(v143 - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = v18 | 7;
  v133 = v3;
  v132 = v10;
  v20 = swift_getAssociatedTypeWitness();
  v21 = v15;
  v144 = v20;
  v22 = *(_QWORD *)(v20 - 8);
  v23 = *(unsigned __int8 *)(v22 + 80);
  v24 = v23 | 7;
  v25 = v18 | v15 | v23;
  v26 = v25 | 7;
  v27 = (v25 + 8) & ~(v25 | 7);
  v28 = v15 + 8;
  v120 = v14;
  if (*(_DWORD *)(v14 + 84))
    v29 = *(_QWORD *)(v14 + 64);
  else
    v29 = *(_QWORD *)(v14 + 64) + 1;
  v138 = v29 + ((v15 + 8) & ~v15) + v19;
  v139 = v18 + 8;
  v30 = *(_DWORD *)(v17 + 84);
  v121 = v17;
  v31 = *(_QWORD *)(v17 + 64);
  v32 = v16;
  if (v30)
    v33 = v31;
  else
    v33 = v31 + 1;
  v117 = v33;
  v141 = v33 + ((v18 + 8) & ~v18) + v24;
  v142 = v23 + 8;
  v122 = v22;
  if (*(_DWORD *)(v22 + 84))
    v34 = *(_QWORD *)(v22 + 64);
  else
    v34 = *(_QWORD *)(v22 + 64) + 1;
  v35 = v34 + ((v23 + 8) & ~v23) + ((v141 + (v138 & ~v19)) & ~v24);
  v36 = v35 + v27;
  v37 = v136;
  if (v36 > v136)
    v37 = v36;
  v38 = ((v36 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v38 <= v37)
    v39 = v37;
  else
    v39 = v38;
  v40 = 8 * v39;
  if (v39 > 3)
    goto LABEL_21;
  v41 = ((1 << v40) + 1) >> v40;
  if (v41 > 0xFFFC)
  {
    v42 = *(_DWORD *)((char *)v16 + v39);
  }
  else
  {
    if (v41 <= 0xFC)
    {
LABEL_21:
      v42 = *((unsigned __int8 *)v16 + v39);
      goto LABEL_25;
    }
    v42 = *(unsigned __int16 *)((char *)v16 + v39);
  }
LABEL_25:
  if (v42 >= 3)
  {
    if (v39 <= 3)
      v43 = v39;
    else
      v43 = 4;
    __asm { BR              X14 }
  }
  v123 = ~v145;
  v124 = ~v147;
  v44 = ~v26;
  v45 = ~v21;
  v134 = ~v19;
  v135 = ~v18;
  v137 = ~v24;
  v46 = ~v23;
  v146 = 8 * v39;
  v118 = v29;
  v119 = v34;
  v116 = v35;
  v131 = v28;
  if (v42 == 2)
  {
    swift_release();
    v50 = ((unint64_t)v32 + v26 + 8) & v44;
    v51 = (v28 + v50) & v45;
    v48 = AssociatedTypeWitness;
    v47 = a2;
    if (!__swift_getEnumTagSinglePayload(v51, 1, AssociatedTypeWitness))
LABEL_35:
      (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v51, v48);
  }
  else
  {
    v47 = a2;
    v48 = AssociatedTypeWitness;
    if (v42 != 1)
    {
      (*(void (**)(_QWORD *, uint64_t))(v125 + 8))(v32, v127);
      (*(void (**)(unint64_t, uint64_t))(v128 + 8))(((unint64_t)v32 + v126) & v123, v130);
      v49 = ((((unint64_t)v32 + v126) & v123) + v129 + v147) & v124;
      if (!__swift_getEnumTagSinglePayload(v49, 1, v132))
        (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v49, v132);
      goto LABEL_40;
    }
    swift_release();
    v50 = ((unint64_t)v32 + v26 + 8) & v44;
    v51 = (v28 + v50) & v45;
    if (!__swift_getEnumTagSinglePayload(v51, 1, AssociatedTypeWitness))
      goto LABEL_35;
  }
  v52 = (v138 + v50) & v134;
  if (!__swift_getEnumTagSinglePayload((v139 + v52) & v135, 1, v143))
    (*(void (**)(uint64_t, uint64_t))(v121 + 8))((v139 + v52) & v135, v143);
  v53 = (v142 + ((v141 + v52) & v137)) & v46;
  v40 = 8 * v39;
  if (!__swift_getEnumTagSinglePayload(v53, 1, v144))
    (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v53, v144);
LABEL_40:
  if (v39 > 3)
  {
LABEL_43:
    v55 = *((unsigned __int8 *)v47 + v39);
    goto LABEL_48;
  }
  v54 = ((1 << v40) + 1) >> v40;
  if (v54 > 0xFFFC)
  {
    v55 = *(_DWORD *)((char *)v47 + v39);
  }
  else
  {
    if (v54 <= 0xFC)
      goto LABEL_43;
    v55 = *(unsigned __int16 *)((char *)v47 + v39);
  }
LABEL_48:
  if (v55 >= 3)
  {
    if (v39 <= 3)
      v56 = v39;
    else
      v56 = 4;
    __asm { BR              X12 }
  }
  if (v55 == 2)
  {
    v148 = v46;
    *v32 = *v47;
    v59 = ((unint64_t)v32 + v26 + 8) & v44;
    v60 = ((unint64_t)v47 + v26 + 8) & v44;
    *(_QWORD *)v59 = *(_QWORD *)v60;
    v61 = (void *)((v131 + v59) & v45);
    v62 = (const void *)((v131 + v60) & v45);
    if (__swift_getEnumTagSinglePayload((uint64_t)v62, 1, v48))
    {
      memcpy(v61, v62, v118);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v120 + 32))(v61, v62, v48);
      __swift_storeEnumTagSinglePayload((uint64_t)v61, 0, 1, v48);
    }
    v68 = (_QWORD *)((v138 + v59) & v134);
    v69 = (_QWORD *)((v138 + v60) & v134);
    *v68 = *v69;
    v70 = (void *)(((unint64_t)v68 + v139) & v135);
    v71 = (const void *)(((unint64_t)v69 + v139) & v135);
    if (__swift_getEnumTagSinglePayload((uint64_t)v71, 1, v143))
    {
      memcpy(v70, v71, v117);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v121 + 32))(v70, v71, v143);
      __swift_storeEnumTagSinglePayload((uint64_t)v70, 0, 1, v143);
    }
    v76 = (_QWORD *)(((unint64_t)v68 + v141) & v137);
    v77 = (_QWORD *)(((unint64_t)v69 + v141) & v137);
    *v76 = *v77;
    v78 = (void *)(((unint64_t)v76 + v142) & v148);
    v79 = (const void *)(((unint64_t)v77 + v142) & v148);
    if (__swift_getEnumTagSinglePayload((uint64_t)v79, 1, v144))
    {
      memcpy(v78, v79, v119);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v122 + 32))(v78, v79, v144);
      __swift_storeEnumTagSinglePayload((uint64_t)v78, 0, 1, v144);
    }
    *(_QWORD *)(((v59 | 7) + v116) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v60 | 7) + v116) & 0xFFFFFFFFFFFFF8);
    v3 = v133;
    if (v39 <= 3)
    {
      v84 = ((1 << v146) + 1) >> v146;
      if (v84 > 0xFFFC)
      {
        v86 = 2;
        goto LABEL_91;
      }
      if (v84 > 0xFC)
      {
        LOWORD(v86) = 2;
        goto LABEL_94;
      }
    }
    v85 = 2;
LABEL_83:
    *((_BYTE *)v32 + v39) = v85;
    goto LABEL_95;
  }
  if (v55 == 1)
  {
    v149 = v46;
    *v32 = *v47;
    v63 = (char *)v47 + v26;
    v64 = (_QWORD *)(((unint64_t)v32 + v26 + 8) & v44);
    v65 = (_QWORD *)((unint64_t)(v63 + 8) & v44);
    *v64 = *v65;
    v66 = (void *)(((unint64_t)v64 + v131) & v45);
    v67 = (const void *)(((unint64_t)v65 + v131) & v45);
    if (__swift_getEnumTagSinglePayload((uint64_t)v67, 1, v48))
    {
      memcpy(v66, v67, v118);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v120 + 32))(v66, v67, v48);
      __swift_storeEnumTagSinglePayload((uint64_t)v66, 0, 1, v48);
    }
    v72 = (_QWORD *)(((unint64_t)v64 + v138) & v134);
    v73 = (_QWORD *)(((unint64_t)v65 + v138) & v134);
    *v72 = *v73;
    v74 = (void *)(((unint64_t)v72 + v139) & v135);
    v75 = (const void *)(((unint64_t)v73 + v139) & v135);
    if (__swift_getEnumTagSinglePayload((uint64_t)v75, 1, v143))
    {
      memcpy(v74, v75, v117);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v121 + 32))(v74, v75, v143);
      __swift_storeEnumTagSinglePayload((uint64_t)v74, 0, 1, v143);
    }
    v80 = (_QWORD *)(((unint64_t)v72 + v141) & v137);
    v81 = (_QWORD *)(((unint64_t)v73 + v141) & v137);
    *v80 = *v81;
    v82 = (void *)(((unint64_t)v80 + v142) & v149);
    v83 = (const void *)(((unint64_t)v81 + v142) & v149);
    if (__swift_getEnumTagSinglePayload((uint64_t)v83, 1, v144))
    {
      memcpy(v82, v83, v119);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v122 + 32))(v82, v83, v144);
      __swift_storeEnumTagSinglePayload((uint64_t)v82, 0, 1, v144);
    }
    v3 = v133;
    if (v39 > 3)
      goto LABEL_82;
    v86 = 1;
    v87 = ((1 << v146) + 1) >> v146;
    if (v87 <= 0xFFFC)
    {
      if (v87 <= 0xFC)
      {
LABEL_82:
        v85 = 1;
        goto LABEL_83;
      }
LABEL_94:
      *(_WORD *)((char *)v32 + v39) = v86;
      goto LABEL_95;
    }
LABEL_91:
    *(_DWORD *)((char *)v32 + v39) = v86;
    goto LABEL_95;
  }
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v125 + 32))(v32, v47, v127);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v128 + 32))(((unint64_t)v32 + v126) & v123, ((unint64_t)v47 + v126) & v123, v130);
  v57 = (void *)(((((unint64_t)v32 + v126) & v123) + v129 + v147) & v124);
  v58 = (const void *)(((((unint64_t)v47 + v126) & v123) + v129 + v147) & v124);
  if (__swift_getEnumTagSinglePayload((uint64_t)v58, 1, v132))
  {
    memcpy(v57, v58, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v115 + 32))(v57, v58, v132);
    __swift_storeEnumTagSinglePayload((uint64_t)v57, 0, 1, v132);
  }
  v3 = v133;
  if (v39 > 3)
    goto LABEL_86;
  v88 = ((1 << v146) + 1) >> v146;
  if (v88 > 0xFFFC)
  {
    *(_DWORD *)((char *)v32 + v39) = 0;
  }
  else
  {
    if (v88 <= 0xFC)
    {
LABEL_86:
      *((_BYTE *)v32 + v39) = 0;
      goto LABEL_95;
    }
    *(_WORD *)((char *)v32 + v39) = 0;
  }
LABEL_95:
  v89 = *(_QWORD *)(v3[4] - 8);
  v90 = (((*(_QWORD *)(*(_QWORD *)(v3[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(v3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3[3] - 8) + 80))
       + *(_QWORD *)(*(_QWORD *)(v3[3] - 8) + 64)
       + *(unsigned __int8 *)(v89 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80);
  v91 = *(_DWORD *)(v89 + 84);
  v92 = *(_QWORD *)(v89 + 64);
  if (v91)
    v93 = v92;
  else
    v93 = v92 + 1;
  v94 = v93 + v90;
  v95 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v96 = *(unsigned __int8 *)(v95 + 80);
  v97 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v98 = *(unsigned __int8 *)(v97 + 80);
  v99 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v100 = *(unsigned __int8 *)(v99 + 80);
  v101 = v100 | 7;
  v102 = (v98 | 7) + *(_QWORD *)(v95 + 64) + ((v96 + 8) & ~v96);
  if (!*(_DWORD *)(v95 + 84))
    ++v102;
  v103 = v102 & ~(v98 | 7);
  v104 = v101 + *(_QWORD *)(v97 + 64) + ((v98 + 8) & ~v98);
  if (!*(_DWORD *)(v97 + 84))
    ++v104;
  v105 = (v104 + v103) & ~v101;
  v106 = *(_DWORD *)(v99 + 84);
  v107 = *(_QWORD *)(v99 + 64)
       + ((v100 + 8) & ~v100)
       + (((v98 | v96 | v100) & 0xF8 ^ 0x1F8) & ((v98 | v96 | v100) + 8));
  if (!v106)
    ++v107;
  v108 = v107 + v105;
  if (v108 <= v94)
    v109 = v94;
  else
    v109 = v108;
  v110 = ((v108 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v110 <= v109)
    v110 = v109;
  if (v110 > 3)
    goto LABEL_113;
  v111 = ((1 << (8 * v110)) + 1) >> (8 * v110);
  v112 = 2;
  if (v111 > 0xFFFC)
    v112 = 4;
  if (v111 <= 0xFC)
LABEL_113:
    v112 = 1;
  result = a1;
  *(_QWORD *)(((unint64_t)a1 + v112 + v110 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2
                                                                                          + v112
                                                                                          + v110
                                                                                          + 7) & 0xFFFFFFFFFFFFF8);
  return result;
}

uint64_t sub_1B25394F4(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  int v26;
  unsigned int v27;
  char v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  uint64_t v32;
  unsigned int v33;
  unsigned int v34;
  uint64_t v35;
  char v36;
  int v37;
  unsigned int v38;
  char v39;
  unsigned int v40;
  char v41;
  int v42;
  unsigned int v43;
  char v44;
  int v45;
  char v46;
  int v47;
  unsigned int v48;
  char v49;
  unsigned int v50;
  unsigned int v51;
  uint64_t v52;
  unsigned int v53;
  unint64_t v54;
  char v55;
  int v56;
  unsigned int v57;
  int v58;
  int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  int v63;
  unsigned int v65;
  int v66;
  unsigned int v67;
  char v68;
  unsigned int v69;
  unint64_t v71;

  v3 = *(_QWORD *)(a3[4] - 8);
  v4 = (((*(_QWORD *)(*(_QWORD *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80))
      + *(_QWORD *)(*(_QWORD *)(a3[3] - 8) + 64)
      + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_DWORD *)(v3 + 84);
  v6 = *(_QWORD *)(v3 + 64);
  if (v5)
    v7 = v6;
  else
    v7 = v6 + 1;
  v71 = v7 + v4;
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = v13 | 7;
  v15 = (v11 | 7) + *(_QWORD *)(v8 + 64) + ((v9 + 8) & ~v9);
  if (!*(_DWORD *)(v8 + 84))
    ++v15;
  v16 = v15 & ~(v11 | 7);
  v17 = v14 + *(_QWORD *)(v10 + 64) + ((v11 + 8) & ~v11);
  if (!*(_DWORD *)(v10 + 84))
    ++v17;
  v18 = (v17 + v16) & ~v14;
  v19 = *(_DWORD *)(v12 + 84);
  v20 = *(_QWORD *)(v12 + 64)
      + ((v13 + 8) & ~v13)
      + (((v11 | v9 | v13) & 0xF8 ^ 0x1F8) & ((v11 | v9 | v13) + 8));
  if (!v19)
    ++v20;
  v21 = v20 + v18;
  v22 = v71;
  if (v21 > v71)
    v22 = v21;
  v23 = ((v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v23 > v22)
    v22 = v23;
  v24 = 8;
  v25 = 8 * v22;
  if (v22 <= 3)
  {
    v27 = ((1 << v25) + 1) >> v25;
    if (v27 >= 0xFFFD)
      v28 = 32;
    else
      v28 = 16;
    if (v27 >= 0xFD)
      v24 = v28;
    else
      v24 = 8;
    if (v27 > 0xFFFC)
    {
      v30 = 0x7FFFFFFF;
      v29 = a2;
      goto LABEL_27;
    }
    v26 = v27 + 3;
  }
  else
  {
    v26 = 4;
  }
  v29 = a2;
  v30 = (1 << v24) - v26;
  if ((v30 & 0x80000000) != 0)
    v30 = 0x7FFFFFFF;
LABEL_27:
  if (v22 > 3)
    goto LABEL_31;
  v31 = ((1 << v25) + 1) >> v25;
  v32 = 2;
  if (v31 > 0xFFFC)
    v32 = 4;
  if (v31 <= 0xFC)
LABEL_31:
    v32 = 1;
  if (!v29)
    return 0;
  if (v30 < v29)
  {
    if (((((v22 + v32 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v33 = 2;
    else
      v33 = v29 - v30 + 1;
    if (v33 >= 0x10000)
      v34 = 4;
    else
      v34 = 2;
    if (v33 < 0x100)
      v34 = 1;
    if (v33 >= 2)
      v35 = v34;
    else
      v35 = 0;
    __asm { BR              X15 }
  }
  if (!v30)
    return 0;
  v36 = 8;
  if (v22 > 3)
  {
    v37 = 4;
    goto LABEL_57;
  }
  v38 = ((1 << v25) + 1) >> v25;
  if (v38 >= 0xFFFD)
    v39 = 32;
  else
    v39 = 16;
  if (v38 >= 0xFD)
    v36 = v39;
  else
    v36 = 8;
  if (v38 <= 0xFFFC)
  {
    v37 = v38 + 3;
LABEL_57:
    v40 = (1 << v36) - v37;
    if ((v40 & 0x80000000) == 0)
      goto LABEL_59;
  }
  v40 = 0x7FFFFFFF;
LABEL_59:
  v41 = 8;
  if (v22 > 3)
  {
    v42 = 4;
    goto LABEL_69;
  }
  v43 = ((1 << v25) + 1) >> v25;
  if (v43 >= 0xFFFD)
    v44 = 32;
  else
    v44 = 16;
  if (v43 >= 0xFD)
    v41 = v44;
  else
    v41 = 8;
  if (v43 <= 0xFFFC)
  {
    v42 = v43 + 3;
LABEL_69:
    v45 = (1 << v41) - v42;
    if ((v45 & 0x80000000) == 0)
      goto LABEL_71;
  }
  v45 = 0x7FFFFFFF;
LABEL_71:
  if (v45 != v40)
    return 0;
  v46 = 8;
  if (v22 <= 3)
  {
    v48 = ((1 << v25) + 1) >> v25;
    if (v48 >= 0xFFFD)
      v49 = 32;
    else
      v49 = 16;
    if (v48 >= 0xFD)
      v46 = v49;
    else
      v46 = 8;
    if (v48 > 0xFFFC)
      goto LABEL_83;
    v47 = v48 + 3;
  }
  else
  {
    v47 = 4;
  }
  v50 = (1 << v46) - v47;
  if ((v50 & 0x80000000) != 0)
LABEL_83:
    v50 = 0x7FFFFFFF;
  if (v22 > 3)
    goto LABEL_88;
  v51 = ((1 << v25) + 1) >> v25;
  v52 = 2;
  if (v51 > 0xFFFC)
    v52 = 4;
  if (v51 <= 0xFC)
LABEL_88:
    v52 = 1;
  if (!v40)
    return 0;
  v53 = v40 - v50;
  if (v40 <= v50)
    goto LABEL_107;
  v54 = v52 + v22;
  v55 = 8 * (v52 + v22);
  if (v54 > 3)
  {
LABEL_92:
    v56 = *(unsigned __int8 *)(a1 + v54);
    goto LABEL_99;
  }
  v57 = ((v53 + ~(-1 << v55)) >> v55) + 1;
  if (HIWORD(v57))
  {
    v56 = *(_DWORD *)(a1 + v54);
  }
  else
  {
    if (v57 <= 0xFF)
    {
      if (v57 < 2)
      {
LABEL_107:
        if (v50)
        {
          if (v22 > 3)
            goto LABEL_109;
          v65 = ((1 << v25) + 1) >> v25;
          if (v65 > 0xFFFC)
          {
            v61 = *(_DWORD *)(a1 + v22);
            v62 = ~v61;
            goto LABEL_122;
          }
          if (v65 < 0xFD)
          {
LABEL_109:
            v60 = *(unsigned __int8 *)(a1 + v22);
            v61 = v60 | 0xFFFFFF00;
            v62 = v60 ^ 0xFF;
            if (v22 > 3)
            {
              v63 = 4;
              goto LABEL_117;
            }
          }
          else
          {
            v66 = *(unsigned __int16 *)(a1 + v22);
            v61 = v66 | 0xFFFF0000;
            v62 = v66 ^ 0xFFFF;
          }
          v67 = ((1 << v25) + 1) >> v25;
          if (v67 <= 0xFFFC)
          {
            v63 = v67 + 3;
            if (v67 > 0xFC)
            {
              v68 = 16;
LABEL_121:
              v69 = (1 << v68) - v63;
              if ((v69 & 0x80000000) == 0)
                goto LABEL_123;
              goto LABEL_122;
            }
LABEL_117:
            v68 = 8;
            goto LABEL_121;
          }
LABEL_122:
          v69 = 0x7FFFFFFF;
LABEL_123:
          if (v69 > v62)
            return -v61;
          else
            return 0;
        }
        return 0;
      }
      goto LABEL_92;
    }
    v56 = *(unsigned __int16 *)(a1 + v54);
  }
LABEL_99:
  if (!v56)
    goto LABEL_107;
  v58 = (v56 - 1) << v55;
  if (v54 > 3)
    v58 = 0;
  if ((_DWORD)v54)
  {
    if (v54 <= 3)
      v59 = v54;
    else
      v59 = 4;
    __asm { BR              X12 }
  }
  return v50 + v58 + 1;
}

void sub_1B2539B48(unsigned int *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  uint64_t v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  int v27;
  unsigned int v28;
  char v29;
  unsigned int *v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  uint64_t v35;
  size_t v36;
  unsigned int v37;
  int v38;
  int v39;
  unsigned int v40;
  unint64_t v41;

  v4 = *(_QWORD *)(a4[4] - 8);
  v5 = (((*(_QWORD *)(*(_QWORD *)(a4[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a4[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a4[3] - 8) + 80))
      + *(_QWORD *)(*(_QWORD *)(a4[3] - 8) + 64)
      + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_DWORD *)(v4 + 84);
  v7 = *(_QWORD *)(v4 + 64);
  if (v6)
    v8 = v7;
  else
    v8 = v7 + 1;
  v41 = v8 + v5;
  v9 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v14 | 7;
  v16 = (v12 | 7) + *(_QWORD *)(v9 + 64) + ((v10 + 8) & ~v10);
  if (!*(_DWORD *)(v9 + 84))
    ++v16;
  v17 = v16 & ~(v12 | 7);
  v18 = v15 + *(_QWORD *)(v11 + 64) + ((v12 + 8) & ~v12);
  if (!*(_DWORD *)(v11 + 84))
    ++v18;
  v19 = (v18 + v17) & ~v15;
  v20 = *(_DWORD *)(v13 + 84);
  v21 = *(_QWORD *)(v13 + 64)
      + ((v14 + 8) & ~v14)
      + (((v12 | v10 | v14) & 0xF8 ^ 0x1F8) & ((v12 | v10 | v14) + 8));
  if (!v20)
    ++v21;
  v22 = v21 + v19;
  v23 = v41;
  if (v22 > v41)
    v23 = v22;
  v24 = ((v22 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v24 <= v23)
    v24 = v23;
  v25 = 8;
  v26 = 8 * v24;
  if (v24 <= 3)
  {
    v28 = ((1 << v26) + 1) >> v26;
    if (v28 >= 0xFFFD)
      v29 = 32;
    else
      v29 = 16;
    if (v28 >= 0xFD)
      v25 = v29;
    else
      v25 = 8;
    if (v28 > 0xFFFC)
    {
      v33 = 0x7FFFFFFF;
      v30 = a1;
      v31 = a3;
      v32 = a2;
      goto LABEL_27;
    }
    v27 = v28 + 3;
  }
  else
  {
    v27 = 4;
  }
  v30 = a1;
  v31 = a3;
  v32 = a2;
  v33 = (1 << v25) - v27;
  if ((v33 & 0x80000000) != 0)
    v33 = 0x7FFFFFFF;
LABEL_27:
  if (v24 > 3)
    goto LABEL_31;
  v34 = ((1 << v26) + 1) >> v26;
  v35 = 2;
  if (v34 > 0xFFFC)
    v35 = 4;
  if (v34 <= 0xFC)
LABEL_31:
    v35 = 1;
  v36 = ((v24 + v35 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v33 >= v31)
  {
    v39 = 0u;
  }
  else
  {
    if ((((_DWORD)v24 + (_DWORD)v35 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v37 = v31 - v33 + 1;
    else
      v37 = 2;
    if (v37 >= 0x10000)
      v38 = 4;
    else
      v38 = 2;
    if (v37 < 0x100)
      v38 = 1;
    if (v37 >= 2)
      v39 = v38;
    else
      v39 = 0;
  }
  if (v32 > v33)
  {
    if ((_DWORD)v36)
    {
      v40 = ~v33 + v32;
      bzero(v30, v36);
      *v30 = v40;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

uint64_t sub_1B2539E4C@<X0>(uint64_t a1@<X8>)
{
  char v1;
  unsigned int v2;
  uint64_t v3;
  _BYTE *v4;
  char v5;
  int v6;
  unsigned int v7;
  char v8;
  unsigned int v9;
  char v10;
  int v11;
  unsigned int v12;
  char v13;
  int v14;
  char v15;
  int v16;
  unsigned int v17;
  uint64_t v18;
  unsigned int v19;
  char v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  size_t v24;
  char v25;
  BOOL v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  uint64_t result;
  unsigned int v31;
  int v32;

  v4[v3] = 0;
  if (!v2)
    return result;
  v5 = 8;
  if (a1 > 3)
  {
    v6 = 4;
    goto LABEL_12;
  }
  v7 = ((1 << v1) + 1) >> v1;
  if (v7 >= 0xFFFD)
    v8 = 32;
  else
    v8 = 16;
  if (v7 >= 0xFD)
    v5 = v8;
  else
    v5 = 8;
  if (v7 <= 0xFFFC)
  {
    v6 = v7 + 3;
LABEL_12:
    v9 = (1 << v5) - v6;
    if ((v9 & 0x80000000) == 0)
      goto LABEL_14;
  }
  v9 = 0x7FFFFFFF;
LABEL_14:
  v10 = 8;
  if (a1 > 3)
  {
    v11 = 4;
    goto LABEL_24;
  }
  v12 = ((1 << v1) + 1) >> v1;
  if (v12 >= 0xFFFD)
    v13 = 32;
  else
    v13 = 16;
  if (v12 >= 0xFD)
    v10 = v13;
  else
    v10 = 8;
  if (v12 <= 0xFFFC)
  {
    v11 = v12 + 3;
LABEL_24:
    v14 = (1 << v10) - v11;
    if ((v14 & 0x80000000) == 0)
      goto LABEL_26;
  }
  v14 = 0x7FFFFFFF;
LABEL_26:
  if (v14 == v9)
  {
    v15 = 8;
    if (a1 <= 3)
    {
      v19 = ((1 << v1) + 1) >> v1;
      if (v19 >= 0xFFFD)
        v20 = 32;
      else
        v20 = 16;
      if (v19 >= 0xFD)
        v15 = v20;
      else
        v15 = 8;
      if (v19 > 0xFFFC)
      {
LABEL_44:
        v21 = 0x7FFFFFFF;
LABEL_45:
        if (a1 > 3)
          goto LABEL_49;
        v22 = ((1 << v1) + 1) >> v1;
        v23 = 2;
        if (v22 > 0xFFFC)
          v23 = 4;
        if (v22 <= 0xFC)
LABEL_49:
          v23 = 1;
        v24 = v23 + a1;
        v25 = 8 * (v23 + a1);
        v26 = v9 >= v21;
        v27 = v9 - v21;
        if (v27 != 0 && v26)
        {
          if (v24 <= 3)
          {
            v31 = ((v27 + ~(-1 << v25)) >> v25) + 1;
            if (HIWORD(v31))
            {
              v28 = 4u;
            }
            else if (v31 >= 0x100)
            {
              v28 = 2;
            }
            else
            {
              v28 = v31 > 1;
            }
          }
          else
          {
            v28 = 1u;
          }
        }
        else
        {
          v28 = 0u;
        }
        if (v21 >= v2)
          return ((uint64_t (*)(void))((char *)&loc_1B253A0AC + 4 * byte_1B25DDBF1[v28]))();
        v29 = ~v21 + v2;
        if (v24 < 4)
        {
          if ((_DWORD)v24)
          {
            v32 = v29 & ~(-1 << v25);
            bzero(v4, v24);
            if ((_DWORD)v24 == 3)
            {
              *(_WORD *)v4 = v32;
              v4[2] = BYTE2(v32);
            }
            else if ((_DWORD)v24 == 2)
            {
              *(_WORD *)v4 = v32;
            }
            else
            {
              *v4 = v32;
            }
          }
        }
        else
        {
          bzero(v4, v24);
          *(_DWORD *)v4 = v29;
        }
        return ((uint64_t (*)(void))((char *)sub_1B253A1B4 + 4 * byte_1B25DDBF6[v28]))();
      }
      v16 = v19 + 3;
    }
    else
    {
      v16 = 4;
    }
    v21 = (1 << v15) - v16;
    if ((v21 & 0x80000000) == 0)
      goto LABEL_45;
    goto LABEL_44;
  }
  if (a1 > 3)
    goto LABEL_33;
  v17 = ((1 << v1) + 1) >> v1;
  v18 = 2;
  if (v17 > 0xFFFC)
    v18 = 4;
  if (v17 <= 0xFC)
LABEL_33:
    v18 = 1;
  *(_QWORD *)((unint64_t)&v4[a1 + 7 + v18] & 0xFFFFFFFFFFFFF8) = v2 - 1;
  return result;
}

void sub_1B253A1B4()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + v1) = v0;
}

void sub_1B253A1BC()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v2 + v1) = v0;
}

void type metadata accessor for ZipStateMachine()
{
  JUMPOUT(0x1B5E26140);
}

void type metadata accessor for ZipStateMachine.State()
{
  JUMPOUT(0x1B5E26140);
}

uint64_t sub_1B253A204()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v7;
  char *v8;

  v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    v2 = swift_checkMetadataState();
    if (v3 > 0x3F)
    {
      return v2;
    }
    else
    {
      v4 = sub_1B25CD108();
      if (v5 <= 0x3F)
      {
        swift_getTupleTypeLayout3();
        v8 = &v7;
        swift_getAssociatedTypeWitness();
        type metadata accessor for ZipStateMachine.State.Upstream();
      }
      return v4;
    }
  }
  return v0;
}

uint64_t *sub_1B253A454(uint64_t *a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  size_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  size_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  int v35;
  unint64_t v36;
  uint64_t v39;
  uint64_t *v40;
  unsigned int v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  const void *v51;
  uint64_t v52;
  _QWORD *v53;
  void *v54;
  const void *v55;
  _QWORD *v56;
  _QWORD *v57;
  void *v58;
  const void *v59;
  _QWORD *v60;
  _QWORD *v61;
  void *v62;
  const void *v63;
  _QWORD *v64;
  _QWORD *v65;
  void *v66;
  const void *v67;
  _QWORD *v68;
  _QWORD *v69;
  void *v70;
  const void *v71;
  _QWORD *v72;
  _QWORD *v73;
  void *v74;
  const void *v75;
  unsigned int v76;
  char v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  uint64_t v82;
  size_t __n;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  size_t v89;
  size_t v90;
  size_t v91;
  size_t v92;
  size_t v93;
  size_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t AssociatedTypeWitness;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int v104;
  unint64_t v105;
  unint64_t v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  unint64_t v111;
  unint64_t v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v120;

  v4 = a3[2];
  v5 = a3[3];
  v6 = a3[4];
  v116 = *(_QWORD *)(v4 - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v113 = *(_DWORD *)(v7 + 80);
  v86 = *(_QWORD *)(v116 + 64) + v113;
  v92 = v7;
  v8 = *(_QWORD *)(v6 - 8);
  v89 = *(_QWORD *)(v7 + 64);
  v110 = *(_DWORD *)(v8 + 80);
  v9 = *(_QWORD *)(v8 + 64);
  if (!*(_DWORD *)(v8 + 84))
    ++v9;
  v82 = *(_QWORD *)(v6 - 8);
  __n = v9;
  v101 = v9
       + ((v89 + *(_DWORD *)(v8 + 80) + (v86 & ~(unint64_t)v113)) & ~(unint64_t)*(_DWORD *)(v8 + 80));
  v87 = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v107 = *(_DWORD *)(v10 + 80);
  v95 = v5;
  v100 = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(v100 - 8);
  v104 = *(_DWORD *)(v11 + 80);
  v12 = v104;
  v13 = v104 | 7;
  v14 = v104 | (unint64_t)v107;
  v96 = v6;
  v15 = swift_getAssociatedTypeWitness();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_DWORD *)(v16 + 80);
  v18 = v17 | 7;
  v19 = v14 | v17;
  v20 = v14 | v17 | 7;
  v21 = v107 + 8;
  v84 = v10;
  v85 = v11;
  if (*(_DWORD *)(v10 + 84))
    v22 = *(_QWORD *)(v10 + 64);
  else
    v22 = *(_QWORD *)(v10 + 64) + 1;
  if (*(_DWORD *)(v11 + 84))
    v23 = *(_QWORD *)(v11 + 64);
  else
    v23 = *(_QWORD *)(v11 + 64) + 1;
  v24 = v23 + v18 + ((v104 + 8) & ~(unint64_t)v104);
  v25 = v17 + 8;
  v26 = *(_QWORD *)(v16 + 64);
  if (!*(_DWORD *)(v16 + 84))
    ++v26;
  v27 = v26
      + ((v17 + 8) & ~v17)
      + ((v24 + ((v22 + v13 + ((v107 + 8) & ~(unint64_t)v107)) & ~v13)) & ~v18);
  v28 = v27 + (((v14 | v17) + 8) & ~v20);
  v29 = v101;
  if (v28 > v101)
    v29 = v27 + (((v14 | v17) + 8) & ~v20);
  v30 = ((v28 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v30 <= v29)
    v31 = v29;
  else
    v31 = v30;
  v32 = 8 * v31;
  if (v31 > 3)
    goto LABEL_20;
  v33 = ((1 << v32) + 1) >> v32;
  v34 = 2;
  if (v33 > 0xFFFC)
    v34 = 4;
  if (v33 <= 0xFC)
LABEL_20:
    v34 = 1;
  v35 = *(_DWORD *)(v116 + 80);
  v36 = v19 | ((v110 | v113) | v35) & 0xF8 | 7u;
  if (v34 + v31 > 0x18 || ((v110 | v113 | v107 | v104 | *(_DWORD *)(v16 + 80) | v35) & 0x100000) != 0 || v36 != 7)
  {
    v39 = *a2;
    *a1 = *a2;
    v40 = (uint64_t *)(v39 + ((v36 + 16) & ~v36));
    swift_retain();
    return v40;
  }
  v40 = a1;
  if (v31 > 3)
    goto LABEL_32;
  v41 = ((1 << v32) + 1) >> v32;
  if (v41 > 0xFFFC)
  {
    v42 = *(_DWORD *)((char *)a2 + v31);
  }
  else
  {
    if (v41 <= 0xFC)
    {
LABEL_32:
      v42 = *((unsigned __int8 *)a2 + v31);
      goto LABEL_35;
    }
    v42 = *(unsigned __int16 *)((char *)a2 + v31);
  }
LABEL_35:
  if (v42 >= 3)
  {
    if (v31 <= 3)
      v43 = v31;
    else
      v43 = 4;
    __asm { BR              X16 }
  }
  v44 = ~v20;
  v45 = ~(unint64_t)v107;
  v46 = ~v13;
  v47 = ~(unint64_t)v104;
  v48 = ~v18;
  v49 = ~v17;
  if (v42 == 2)
  {
    v97 = v48;
    v102 = v49;
    v105 = v22 + v13 + ((v107 + 8) & ~(unint64_t)v107);
    v108 = v12 + 8;
    v88 = v27;
    v90 = v23;
    v111 = v24;
    v114 = v25;
    v93 = v26;
    v117 = v15;
    *a1 = *a2;
    v52 = ((unint64_t)a1 + v20 + 8) & v44;
    v53 = (_QWORD *)(((unint64_t)a2 + v20 + 8) & v44);
    *(_QWORD *)v52 = *v53;
    v54 = (void *)((v21 + v52) & v45);
    v120 = (unint64_t)v53;
    v55 = (const void *)(((unint64_t)v53 + v21) & v45);
    swift_retain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v55, 1, AssociatedTypeWitness))
    {
      memcpy(v54, v55, v22);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v84 + 16))(v54, v55, AssociatedTypeWitness);
      __swift_storeEnumTagSinglePayload((uint64_t)v54, 0, 1, AssociatedTypeWitness);
    }
    v60 = (_QWORD *)((v105 + v52) & v46);
    v61 = (_QWORD *)((v105 + v120) & v46);
    *v60 = *v61;
    v62 = (void *)(((unint64_t)v60 + v108) & v47);
    v63 = (const void *)(((unint64_t)v61 + v108) & v47);
    if (__swift_getEnumTagSinglePayload((uint64_t)v63, 1, v100))
    {
      memcpy(v62, v63, v90);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v85 + 16))(v62, v63, v100);
      __swift_storeEnumTagSinglePayload((uint64_t)v62, 0, 1, v100);
    }
    v68 = (_QWORD *)(((unint64_t)v60 + v111) & v97);
    v69 = (_QWORD *)(((unint64_t)v61 + v111) & v97);
    *v68 = *v69;
    v70 = (void *)(((unint64_t)v68 + v114) & v102);
    v71 = (const void *)(((unint64_t)v69 + v114) & v102);
    if (__swift_getEnumTagSinglePayload((uint64_t)v71, 1, v117))
    {
      memcpy(v70, v71, v93);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v70, v71, v117);
      __swift_storeEnumTagSinglePayload((uint64_t)v70, 0, 1, v117);
    }
    *(_QWORD *)(((v52 | 7) + v88) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v120 | 7) + v88) & 0xFFFFFFFFFFFFF8);
    if (v31 <= 3)
    {
      v76 = ((1 << v32) + 1) >> v32;
      if (v76 > 0xFFFC)
      {
        v78 = 2;
        goto LABEL_78;
      }
      if (v76 > 0xFC)
      {
        LOWORD(v78) = 2;
        goto LABEL_81;
      }
    }
    v77 = 2;
LABEL_70:
    *((_BYTE *)v40 + v31) = v77;
    return v40;
  }
  if (v42 == 1)
  {
    v98 = v48;
    v103 = v49;
    v106 = v22 + v13 + ((v107 + 8) & ~(unint64_t)v107);
    v109 = v12 + 8;
    v91 = v23;
    v112 = v24;
    v115 = v25;
    v94 = v26;
    v118 = v15;
    *a1 = *a2;
    v56 = (_QWORD *)(((unint64_t)a1 + v20 + 8) & v44);
    v57 = (_QWORD *)(((unint64_t)a2 + v20 + 8) & v44);
    *v56 = *v57;
    v58 = (void *)(((unint64_t)v56 + v21) & v45);
    v59 = (const void *)(((unint64_t)v57 + v21) & v45);
    swift_retain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v59, 1, AssociatedTypeWitness))
    {
      memcpy(v58, v59, v22);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v58, v59, AssociatedTypeWitness);
      __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, AssociatedTypeWitness);
    }
    v64 = (_QWORD *)(((unint64_t)v56 + v106) & v46);
    v65 = (_QWORD *)(((unint64_t)v57 + v106) & v46);
    *v64 = *v65;
    v66 = (void *)(((unint64_t)v64 + v109) & v47);
    v67 = (const void *)(((unint64_t)v65 + v109) & v47);
    if (__swift_getEnumTagSinglePayload((uint64_t)v67, 1, v100))
    {
      memcpy(v66, v67, v91);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v85 + 16))(v66, v67, v100);
      __swift_storeEnumTagSinglePayload((uint64_t)v66, 0, 1, v100);
    }
    v40 = a1;
    v72 = (_QWORD *)(((unint64_t)v64 + v112) & v98);
    v73 = (_QWORD *)(((unint64_t)v65 + v112) & v98);
    *v72 = *v73;
    v74 = (void *)(((unint64_t)v72 + v115) & v103);
    v75 = (const void *)(((unint64_t)v73 + v115) & v103);
    if (__swift_getEnumTagSinglePayload((uint64_t)v75, 1, v118))
    {
      memcpy(v74, v75, v94);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v74, v75, v118);
      __swift_storeEnumTagSinglePayload((uint64_t)v74, 0, 1, v118);
    }
    if (v31 > 3)
      goto LABEL_69;
    v78 = 1;
    v79 = ((1 << (8 * v31)) + 1) >> (8 * v31);
    if (v79 <= 0xFFFC)
    {
      if (v79 <= 0xFC)
      {
LABEL_69:
        v77 = 1;
        goto LABEL_70;
      }
LABEL_81:
      *(_WORD *)((char *)v40 + v31) = v78;
      return v40;
    }
LABEL_78:
    *(_DWORD *)((char *)v40 + v31) = v78;
    return v40;
  }
  (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v116 + 16))(a1, a2, v87);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v92 + 16))(((unint64_t)a1 + v86) & ~(unint64_t)v113, ((unint64_t)a2 + v86) & ~(unint64_t)v113, v95);
  v50 = (void *)(((((unint64_t)a1 + v86) & ~(unint64_t)v113) + v89
                                                                                            + v110) & ~(unint64_t)v110);
  v51 = (const void *)(((((unint64_t)a2 + v86) & ~(unint64_t)v113)
                      + v89
                      + v110) & ~(unint64_t)v110);
  if (__swift_getEnumTagSinglePayload((uint64_t)v51, 1, v96))
  {
    memcpy(v50, v51, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v82 + 16))(v50, v51, v96);
    __swift_storeEnumTagSinglePayload((uint64_t)v50, 0, 1, v96);
  }
  if (v31 > 3)
    goto LABEL_73;
  v80 = ((1 << v32) + 1) >> v32;
  if (v80 > 0xFFFC)
  {
    *(_DWORD *)((char *)a1 + v31) = 0;
    return v40;
  }
  if (v80 <= 0xFC)
LABEL_73:
    *((_BYTE *)a1 + v31) = 0;
  else
    *(_WORD *)((char *)a1 + v31) = 0;
  return v40;
}

uint64_t sub_1B253AD64(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unsigned int v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v66;
  unint64_t v67;

  v2 = a2[3];
  v52 = *(_QWORD *)(a2[2] - 8);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v53 = *(_QWORD *)(v52 + 64) + v4;
  v51 = v4;
  v5 = v53 & ~v4;
  v55 = v3;
  v6 = a2[4];
  v7 = *(_QWORD *)(v6 - 8);
  v56 = *(_QWORD *)(v3 + 64);
  v50 = *(unsigned __int8 *)(v7 + 80);
  v8 = (v56 + v50 + v5) & ~v50;
  v48 = v7;
  v9 = *(_QWORD *)(v7 + 64);
  if (!*(_DWORD *)(v7 + 84))
    ++v9;
  v67 = v9 + v8;
  v54 = a2[2];
  v62 = OUTLINED_FUNCTION_69_7();
  v10 = *(_QWORD *)(v62 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v58 = v2;
  v63 = OUTLINED_FUNCTION_69_7();
  v12 = *(_QWORD *)(v63 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = v13 | 7;
  v60 = v6;
  v64 = OUTLINED_FUNCTION_69_7();
  v15 = *(_QWORD *)(v64 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = v16 | 7;
  v18 = v13 | v11 | v16;
  v19 = a1;
  v20 = v18 | 7;
  v21 = (v18 + 8) & ~(v18 | 7);
  v49 = v12;
  v22 = *(_QWORD *)(v10 + 64) + ((v11 + 8) & ~v11);
  if (!*(_DWORD *)(v10 + 84))
    ++v22;
  v23 = v22 + v14;
  v24 = (v22 + v14) & ~v14;
  v25 = *(_QWORD *)(v12 + 64) + ((v13 + 8) & ~v13);
  if (!*(_DWORD *)(v12 + 84))
    ++v25;
  v26 = v25 + v17;
  v27 = (v25 + v17 + v24) & ~v17;
  v28 = v16 + 8;
  v29 = v21 + ((v16 + 8) & ~v16) + *(_QWORD *)(v15 + 64);
  if (!*(_DWORD *)(v15 + 84))
    ++v29;
  v30 = v29 + v27;
  v31 = v67;
  if (v30 > v67)
    v31 = v30;
  v32 = ((v30 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v32 <= v31)
    v32 = v31;
  if (v32 > 3)
    goto LABEL_14;
  v34 = ((1 << (8 * v32)) + 1) >> (8 * v32);
  if (v34 > 0xFFFC)
  {
    v33 = *(_DWORD *)(a1 + v32);
  }
  else
  {
    if (v34 <= 0xFC)
    {
LABEL_14:
      v33 = *(unsigned __int8 *)(a1 + v32);
      goto LABEL_19;
    }
    v33 = *(unsigned __int16 *)(a1 + v32);
  }
LABEL_19:
  if (v33 >= 3)
  {
    if (v32 <= 3)
      v35 = v32;
    else
      v35 = 4;
    __asm { BR              X16 }
  }
  v36 = ~v17;
  v37 = ~v16;
  if (v33 == 2 || v33 == 1)
  {
    v59 = v36;
    v61 = v37;
    v66 = v23;
    v57 = *(_QWORD *)(v64 - 8);
    swift_release();
    v41 = (v19 + v20 + 8) & ~v20;
    v42 = OUTLINED_FUNCTION_116_3();
    if (!__swift_getEnumTagSinglePayload(v42, v43, v62))
      OUTLINED_FUNCTION_20_7((v11 + 8 + v41) & ~v11, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
    v44 = (v66 + v41) & ~(v13 | 7);
    v45 = (v13 + 8 + v44) & ~v13;
    v46 = OUTLINED_FUNCTION_116_3();
    if (!__swift_getEnumTagSinglePayload(v46, v47, v63))
      OUTLINED_FUNCTION_20_7(v45, *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8));
    result = __swift_getEnumTagSinglePayload((v28 + ((v26 + v44) & v59)) & v61, 1, v64);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v57 + 8))((v28 + ((v26 + v44) & v59)) & v61, v64);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(a1, v54);
    v38 = (v53 + a1) & ~v51;
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v38, v58);
    v39 = (v38 + v56 + v50) & ~v50;
    result = __swift_getEnumTagSinglePayload(v39, 1, v60);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 8))(v39, v60);
  }
  return result;
}

_QWORD *sub_1B253B174(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  size_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  uint64_t v10;
  size_t v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  size_t v24;
  size_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unsigned int v36;
  unsigned int v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  unint64_t v47;
  unint64_t v48;
  void *v49;
  const void *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  const void *v54;
  _QWORD *v55;
  _QWORD *v56;
  void *v57;
  const void *v58;
  _QWORD *v59;
  _QWORD *v60;
  void *v61;
  const void *v62;
  _QWORD *v63;
  _QWORD *v64;
  void *v65;
  const void *v66;
  _QWORD *v67;
  _QWORD *v68;
  void *v69;
  const void *v70;
  _QWORD *v71;
  _QWORD *v72;
  void *v73;
  const void *v74;
  unsigned int v75;
  char v76;
  int v77;
  unsigned int v78;
  unsigned int v79;
  uint64_t v81;
  size_t __n;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  size_t v91;
  size_t v92;
  size_t v93;
  size_t v94;
  size_t v95;
  size_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t AssociatedTypeWitness;

  v4 = a3[2];
  v5 = a3[3];
  v6 = a3[4];
  v88 = *(_QWORD *)(v4 - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v91 = *(_QWORD *)(v88 + 64) + v8;
  v85 = v8;
  v9 = v91 & ~v8;
  v97 = v7;
  v10 = *(_QWORD *)(v6 - 8);
  v98 = *(_QWORD *)(v7 + 64);
  v86 = *(unsigned __int8 *)(v10 + 80);
  v11 = (v98 + v86 + v9) & ~v86;
  v12 = *(_QWORD *)(v10 + 64);
  if (!*(_DWORD *)(v10 + 84))
    ++v12;
  v81 = *(_QWORD *)(v6 - 8);
  __n = v12;
  v112 = v12 + v11;
  v94 = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v101 = v5;
  v104 = v6;
  v107 = swift_getAssociatedTypeWitness();
  v15 = *(_QWORD *)(v107 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = v16 | 7;
  v18 = v16 | v14;
  v108 = swift_getAssociatedTypeWitness();
  v19 = *(_QWORD *)(v108 - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v20 | 7;
  v22 = v16 | v14 | v20 | 7;
  v23 = v14 + 8;
  v83 = v13;
  v84 = v15;
  if (*(_DWORD *)(v13 + 84))
    v24 = *(_QWORD *)(v13 + 64);
  else
    v24 = *(_QWORD *)(v13 + 64) + 1;
  v25 = v24 + ((v14 + 8) & ~v14) + v17;
  if (*(_DWORD *)(v15 + 84))
    v26 = *(_QWORD *)(v15 + 64);
  else
    v26 = *(_QWORD *)(v15 + 64) + 1;
  v27 = v26 + ((v16 + 8) & ~v16) + v21;
  v28 = v20 + 8;
  if (*(_DWORD *)(v19 + 84))
    v29 = *(_QWORD *)(v19 + 64);
  else
    v29 = *(_QWORD *)(v19 + 64) + 1;
  v30 = v29 + ((v20 + 8) & ~v20) + ((v27 + (v25 & ~v17)) & ~v21);
  v31 = v30 + (((v18 | v20) + 8) & ~v22);
  v32 = v112;
  if (v31 > v112)
    v32 = v30 + (((v18 | v20) + 8) & ~v22);
  v33 = ((v31 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v33 <= v32)
    v34 = v32;
  else
    v34 = v33;
  v35 = 8 * v34;
  if (v34 > 3)
    goto LABEL_20;
  v36 = ((1 << v35) + 1) >> v35;
  if (v36 <= 0xFFFC)
  {
    if (v36 > 0xFC)
    {
      v37 = *(unsigned __int16 *)((char *)a2 + v34);
      goto LABEL_21;
    }
LABEL_20:
    v37 = *((unsigned __int8 *)a2 + v34);
LABEL_21:
    v38 = a2;
    goto LABEL_23;
  }
  v38 = a2;
  v37 = *(_DWORD *)((char *)a2 + v34);
LABEL_23:
  if (v37 >= 3)
  {
    if (v34 <= 3)
      v39 = v34;
    else
      v39 = 4;
    __asm { BR              X16 }
  }
  v40 = ~v22;
  v41 = ~v14;
  v42 = ~(v16 | 7);
  v43 = ~v16;
  v44 = ~v21;
  v45 = ~v20;
  if (v37 == 2)
  {
    v99 = v44;
    v102 = v45;
    v105 = v16 + 8;
    v87 = v30;
    v92 = v26;
    v110 = v27;
    v113 = v28;
    v95 = v29;
    v89 = *(_QWORD *)(v108 - 8);
    *a1 = *v38;
    v51 = ((unint64_t)a1 + v22 + 8) & v40;
    v52 = ((unint64_t)v38 + v22 + 8) & v40;
    *(_QWORD *)v51 = *(_QWORD *)v52;
    v53 = (void *)((v23 + v51) & v41);
    v54 = (const void *)((v23 + v52) & v41);
    swift_retain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v54, 1, AssociatedTypeWitness))
    {
      memcpy(v53, v54, v24);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v83 + 16))(v53, v54, AssociatedTypeWitness);
      __swift_storeEnumTagSinglePayload((uint64_t)v53, 0, 1, AssociatedTypeWitness);
    }
    v59 = (_QWORD *)((v25 + v51) & v42);
    v60 = (_QWORD *)((v25 + v52) & v42);
    *v59 = *v60;
    v61 = (void *)(((unint64_t)v59 + v105) & v43);
    v62 = (const void *)(((unint64_t)v60 + v105) & v43);
    v46 = a1;
    if (__swift_getEnumTagSinglePayload((uint64_t)v62, 1, v107))
    {
      memcpy(v61, v62, v92);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v84 + 16))(v61, v62, v107);
      __swift_storeEnumTagSinglePayload((uint64_t)v61, 0, 1, v107);
    }
    v67 = (_QWORD *)(((unint64_t)v59 + v110) & v99);
    v68 = (_QWORD *)(((unint64_t)v60 + v110) & v99);
    *v67 = *v68;
    v69 = (void *)(((unint64_t)v67 + v113) & v102);
    v70 = (const void *)(((unint64_t)v68 + v113) & v102);
    if (__swift_getEnumTagSinglePayload((uint64_t)v70, 1, v108))
    {
      memcpy(v69, v70, v95);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v89 + 16))(v69, v70, v108);
      __swift_storeEnumTagSinglePayload((uint64_t)v69, 0, 1, v108);
    }
    *(_QWORD *)(((v51 | 7) + v87) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v52 | 7) + v87) & 0xFFFFFFFFFFFFF8);
    if (v34 <= 3)
    {
      v75 = ((1 << (8 * v34)) + 1) >> (8 * v34);
      if (v75 > 0xFFFC)
      {
        v77 = 2;
        goto LABEL_67;
      }
      if (v75 > 0xFC)
      {
        LOWORD(v77) = 2;
        goto LABEL_70;
      }
    }
    v76 = 2;
LABEL_59:
    *((_BYTE *)v46 + v34) = v76;
    return v46;
  }
  if (v37 == 1)
  {
    v100 = v44;
    v103 = v45;
    v106 = v16 + 8;
    v93 = v26;
    v111 = v27;
    v114 = v28;
    v96 = v29;
    v90 = *(_QWORD *)(v108 - 8);
    *a1 = *v38;
    v55 = (_QWORD *)(((unint64_t)a1 + v22 + 8) & v40);
    v56 = (_QWORD *)(((unint64_t)v38 + v22 + 8) & v40);
    *v55 = *v56;
    v57 = (void *)(((unint64_t)v55 + v23) & v41);
    v58 = (const void *)(((unint64_t)v56 + v23) & v41);
    swift_retain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v58, 1, AssociatedTypeWitness))
    {
      memcpy(v57, v58, v24);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v83 + 16))(v57, v58, AssociatedTypeWitness);
      __swift_storeEnumTagSinglePayload((uint64_t)v57, 0, 1, AssociatedTypeWitness);
    }
    v63 = (_QWORD *)(((unint64_t)v55 + v25) & v42);
    v64 = (_QWORD *)(((unint64_t)v56 + v25) & v42);
    *v63 = *v64;
    v65 = (void *)(((unint64_t)v63 + v106) & v43);
    v66 = (const void *)(((unint64_t)v64 + v106) & v43);
    v46 = a1;
    if (__swift_getEnumTagSinglePayload((uint64_t)v66, 1, v107))
    {
      memcpy(v65, v66, v93);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v84 + 16))(v65, v66, v107);
      __swift_storeEnumTagSinglePayload((uint64_t)v65, 0, 1, v107);
    }
    v71 = (_QWORD *)(((unint64_t)v63 + v111) & v100);
    v72 = (_QWORD *)(((unint64_t)v64 + v111) & v100);
    *v71 = *v72;
    v73 = (void *)(((unint64_t)v71 + v114) & v103);
    v74 = (const void *)(((unint64_t)v72 + v114) & v103);
    if (__swift_getEnumTagSinglePayload((uint64_t)v74, 1, v108))
    {
      memcpy(v73, v74, v96);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v90 + 16))(v73, v74, v108);
      __swift_storeEnumTagSinglePayload((uint64_t)v73, 0, 1, v108);
    }
    if (v34 > 3)
      goto LABEL_58;
    v77 = 1;
    v78 = ((1 << (8 * v34)) + 1) >> (8 * v34);
    if (v78 <= 0xFFFC)
    {
      if (v78 <= 0xFC)
      {
LABEL_58:
        v76 = 1;
        goto LABEL_59;
      }
LABEL_70:
      *(_WORD *)((char *)v46 + v34) = v77;
      return v46;
    }
LABEL_67:
    *(_DWORD *)((char *)v46 + v34) = v77;
    return v46;
  }
  v46 = a1;
  (*(void (**)(_QWORD *, _QWORD *, size_t))(v88 + 16))(a1, v38, v94);
  v47 = ((unint64_t)a1 + v91) & ~v85;
  v48 = ((unint64_t)v38 + v91) & ~v85;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v97 + 16))(v47, v48, v101);
  v49 = (void *)((v47 + v98 + v86) & ~v86);
  v50 = (const void *)((v48 + v98 + v86) & ~v86);
  if (__swift_getEnumTagSinglePayload((uint64_t)v50, 1, v104))
  {
    memcpy(v49, v50, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v81 + 16))(v49, v50, v104);
    __swift_storeEnumTagSinglePayload((uint64_t)v49, 0, 1, v104);
  }
  if (v34 > 3)
    goto LABEL_62;
  v79 = ((1 << v35) + 1) >> v35;
  if (v79 > 0xFFFC)
  {
    *(_DWORD *)((char *)a1 + v34) = 0;
    return v46;
  }
  if (v79 <= 0xFC)
LABEL_62:
    *((_BYTE *)a1 + v34) = 0;
  else
    *(_WORD *)((char *)a1 + v34) = 0;
  return v46;
}

_QWORD *sub_1B253B9D8(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unsigned int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int v48;
  unsigned int v49;
  uint64_t v50;
  void *v51;
  const void *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  const void *v56;
  char *v57;
  _QWORD *v58;
  _QWORD *v59;
  void *v60;
  const void *v61;
  _QWORD *v62;
  _QWORD *v63;
  void *v64;
  const void *v65;
  _QWORD *v66;
  _QWORD *v67;
  void *v68;
  const void *v69;
  _QWORD *v70;
  _QWORD *v71;
  void *v72;
  const void *v73;
  _QWORD *v74;
  _QWORD *v75;
  void *v76;
  const void *v77;
  unsigned int v78;
  char v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  size_t __n;
  uint64_t v85;
  uint64_t v86;
  size_t v87;
  size_t v88;
  size_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t AssociatedTypeWitness;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;

  if (a1 == a2)
    return a1;
  v5 = a3[2];
  v6 = a3[3];
  v7 = a3[4];
  v95 = *(_QWORD *)(v5 - 8);
  v8 = *(_QWORD *)(v6 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v96 = *(_QWORD *)(v95 + 64) + v9;
  v108 = v9;
  v10 = v96 & ~v9;
  v98 = v8;
  v11 = *(_QWORD *)(v7 - 8);
  v99 = *(_QWORD *)(v8 + 64);
  v116 = *(unsigned __int8 *)(v11 + 80);
  v12 = (v99 + v116 + v10) & ~v116;
  v13 = *(_QWORD *)(v11 + 64);
  if (!*(_DWORD *)(v11 + 84))
    ++v13;
  __n = v13;
  v85 = *(_QWORD *)(v7 - 8);
  v106 = v13 + v12;
  v97 = v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v100 = v6;
  v117 = swift_getAssociatedTypeWitness();
  v16 = *(_QWORD *)(v117 - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = v17 | 7;
  v101 = v7;
  v19 = swift_getAssociatedTypeWitness();
  v20 = v15;
  v115 = v19;
  v21 = *(_QWORD *)(v19 - 8);
  v22 = *(unsigned __int8 *)(v21 + 80);
  v23 = v22 | 7;
  v24 = v17 | v15 | v22;
  v25 = v24 | 7;
  v26 = (v24 + 8) & ~(v24 | 7);
  v27 = v15 + 8;
  v90 = v14;
  if (*(_DWORD *)(v14 + 84))
    v28 = *(_QWORD *)(v14 + 64);
  else
    v28 = *(_QWORD *)(v14 + 64) + 1;
  v110 = v28 + ((v15 + 8) & ~v15) + v18;
  v111 = v17 + 8;
  v91 = v16;
  if (*(_DWORD *)(v16 + 84))
    v29 = *(_QWORD *)(v16 + 64);
  else
    v29 = *(_QWORD *)(v16 + 64) + 1;
  v112 = v29 + ((v17 + 8) & ~v17) + v23;
  v113 = v22 + 8;
  v92 = *(_QWORD *)(v19 - 8);
  if (*(_DWORD *)(v21 + 84))
    v30 = *(_QWORD *)(v21 + 64);
  else
    v30 = *(_QWORD *)(v21 + 64) + 1;
  v31 = v30 + ((v22 + 8) & ~v22) + ((v112 + (v110 & ~v18)) & ~v23) + v26;
  v32 = v106;
  if (v31 > v106)
    v32 = v31;
  v33 = ((v31 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v33 <= v32)
    v34 = v32;
  else
    v34 = v33;
  v35 = 8 * v34;
  if (v34 > 3)
    goto LABEL_21;
  v36 = ((1 << v35) + 1) >> v35;
  if (v36 > 0xFFFC)
  {
    v37 = *(_DWORD *)((char *)a1 + v34);
  }
  else
  {
    if (v36 <= 0xFC)
    {
LABEL_21:
      v37 = *((unsigned __int8 *)a1 + v34);
      goto LABEL_24;
    }
    v37 = *(unsigned __int16 *)((char *)a1 + v34);
  }
LABEL_24:
  if (v37 >= 3)
  {
    if (v34 <= 3)
      v38 = v34;
    else
      v38 = 4;
    __asm { BR              X14 }
  }
  v93 = ~v108;
  v94 = ~v116;
  v39 = ~v25;
  v103 = ~v20;
  v104 = ~v18;
  v105 = ~v17;
  v107 = ~v23;
  v109 = ~v22;
  v88 = v29;
  v89 = v30;
  v86 = v30 + ((v22 + 8) & ~v22) + ((v112 + (v110 & ~v18)) & ~v23);
  v87 = v28;
  if (v37 == 2)
  {
    swift_release();
    v44 = ((unint64_t)a1 + v25 + 8) & v39;
    v45 = (v27 + v44) & v103;
    v40 = v115;
    v41 = v117;
    if (!__swift_getEnumTagSinglePayload(v45, 1, AssociatedTypeWitness))
LABEL_34:
      (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v45, AssociatedTypeWitness);
  }
  else
  {
    v40 = v19;
    v41 = v117;
    if (v37 != 1)
    {
      v42 = a2;
      (*(void (**)(_QWORD *, uint64_t))(v95 + 8))(a1, v97);
      (*(void (**)(unint64_t, uint64_t))(v98 + 8))(((unint64_t)a1 + v96) & v93, v100);
      v43 = ((((unint64_t)a1 + v96) & v93) + v99 + v116) & v94;
      if (!__swift_getEnumTagSinglePayload(v43, 1, v101))
        (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v43, v101);
      goto LABEL_39;
    }
    swift_release();
    v44 = ((unint64_t)a1 + v25 + 8) & v39;
    v45 = (v27 + v44) & v103;
    if (!__swift_getEnumTagSinglePayload(v45, 1, AssociatedTypeWitness))
      goto LABEL_34;
  }
  v46 = (v110 + v44) & v104;
  if (!__swift_getEnumTagSinglePayload((v111 + v46) & v105, 1, v41))
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))((v111 + v46) & v105, v41);
  v47 = (v113 + ((v112 + v46) & v107)) & v109;
  v42 = a2;
  if (!__swift_getEnumTagSinglePayload(v47, 1, v40))
    (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v47, v40);
LABEL_39:
  if (v34 > 3)
  {
LABEL_42:
    v49 = *((unsigned __int8 *)v42 + v34);
    goto LABEL_47;
  }
  v48 = ((1 << v35) + 1) >> v35;
  if (v48 > 0xFFFC)
  {
    v49 = *(_DWORD *)((char *)v42 + v34);
  }
  else
  {
    if (v48 <= 0xFC)
      goto LABEL_42;
    v49 = *(unsigned __int16 *)((char *)v42 + v34);
  }
LABEL_47:
  if (v49 >= 3)
  {
    if (v34 <= 3)
      v50 = v34;
    else
      v50 = 4;
    __asm { BR              X12 }
  }
  if (v49 == 2)
  {
    *a1 = *v42;
    v53 = ((unint64_t)a1 + v25 + 8) & v39;
    v54 = ((unint64_t)v42 + v25 + 8) & v39;
    *(_QWORD *)v53 = *(_QWORD *)v54;
    v55 = (void *)((v27 + v53) & v103);
    v56 = (const void *)((v27 + v54) & v103);
    swift_retain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v56, 1, AssociatedTypeWitness))
    {
      memcpy(v55, v56, v87);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v90 + 16))(v55, v56, AssociatedTypeWitness);
      __swift_storeEnumTagSinglePayload((uint64_t)v55, 0, 1, AssociatedTypeWitness);
    }
    v62 = (_QWORD *)((v110 + v53) & v104);
    v63 = (_QWORD *)((v110 + v54) & v104);
    *v62 = *v63;
    v64 = (void *)(((unint64_t)v62 + v111) & v105);
    v65 = (const void *)(((unint64_t)v63 + v111) & v105);
    if (__swift_getEnumTagSinglePayload((uint64_t)v65, 1, v117))
    {
      memcpy(v64, v65, v88);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v91 + 16))(v64, v65, v117);
      __swift_storeEnumTagSinglePayload((uint64_t)v64, 0, 1, v117);
    }
    v70 = (_QWORD *)(((unint64_t)v62 + v112) & v107);
    v71 = (_QWORD *)(((unint64_t)v63 + v112) & v107);
    *v70 = *v71;
    v72 = (void *)(((unint64_t)v70 + v113) & v109);
    v73 = (const void *)(((unint64_t)v71 + v113) & v109);
    if (__swift_getEnumTagSinglePayload((uint64_t)v73, 1, v115))
    {
      memcpy(v72, v73, v89);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v92 + 16))(v72, v73, v115);
      __swift_storeEnumTagSinglePayload((uint64_t)v72, 0, 1, v115);
    }
    *(_QWORD *)(((v53 | 7) + v86) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v54 | 7) + v86) & 0xFFFFFFFFFFFFF8);
    if (v34 <= 3)
    {
      v78 = ((1 << (8 * v34)) + 1) >> (8 * v34);
      if (v78 > 0xFFFC)
      {
        v80 = 2;
        goto LABEL_90;
      }
      if (v78 > 0xFC)
      {
        LOWORD(v80) = 2;
        goto LABEL_93;
      }
    }
    v79 = 2;
LABEL_82:
    *((_BYTE *)a1 + v34) = v79;
    return a1;
  }
  if (v49 == 1)
  {
    *a1 = *v42;
    v57 = (char *)v42 + v25;
    v58 = (_QWORD *)(((unint64_t)a1 + v25 + 8) & v39);
    v59 = (_QWORD *)((unint64_t)(v57 + 8) & v39);
    *v58 = *v59;
    v60 = (void *)(((unint64_t)v58 + v27) & v103);
    v61 = (const void *)(((unint64_t)v59 + v27) & v103);
    swift_retain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v61, 1, AssociatedTypeWitness))
    {
      memcpy(v60, v61, v87);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v90 + 16))(v60, v61, AssociatedTypeWitness);
      __swift_storeEnumTagSinglePayload((uint64_t)v60, 0, 1, AssociatedTypeWitness);
    }
    v66 = (_QWORD *)(((unint64_t)v58 + v110) & v104);
    v67 = (_QWORD *)(((unint64_t)v59 + v110) & v104);
    *v66 = *v67;
    v68 = (void *)(((unint64_t)v66 + v111) & v105);
    v69 = (const void *)(((unint64_t)v67 + v111) & v105);
    if (__swift_getEnumTagSinglePayload((uint64_t)v69, 1, v117))
    {
      memcpy(v68, v69, v88);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v91 + 16))(v68, v69, v117);
      __swift_storeEnumTagSinglePayload((uint64_t)v68, 0, 1, v117);
    }
    v74 = (_QWORD *)(((unint64_t)v66 + v112) & v107);
    v75 = (_QWORD *)(((unint64_t)v67 + v112) & v107);
    *v74 = *v75;
    v76 = (void *)(((unint64_t)v74 + v113) & v109);
    v77 = (const void *)(((unint64_t)v75 + v113) & v109);
    if (__swift_getEnumTagSinglePayload((uint64_t)v77, 1, v40))
    {
      memcpy(v76, v77, v89);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v92 + 16))(v76, v77, v40);
      __swift_storeEnumTagSinglePayload((uint64_t)v76, 0, 1, v40);
    }
    if (v34 > 3)
      goto LABEL_81;
    v80 = 1;
    v81 = ((1 << (8 * v34)) + 1) >> (8 * v34);
    if (v81 <= 0xFFFC)
    {
      if (v81 <= 0xFC)
      {
LABEL_81:
        v79 = 1;
        goto LABEL_82;
      }
LABEL_93:
      *(_WORD *)((char *)a1 + v34) = v80;
      return a1;
    }
LABEL_90:
    *(_DWORD *)((char *)a1 + v34) = v80;
    return a1;
  }
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v95 + 16))(a1, v42, v97);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v98 + 16))(((unint64_t)a1 + v96) & v93, ((unint64_t)v42 + v96) & v93, v100);
  v51 = (void *)(((((unint64_t)a1 + v96) & v93) + v99 + v116) & v94);
  v52 = (const void *)(((((unint64_t)v42 + v96) & v93) + v99 + v116) & v94);
  if (__swift_getEnumTagSinglePayload((uint64_t)v52, 1, v101))
  {
    memcpy(v51, v52, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v85 + 16))(v51, v52, v101);
    __swift_storeEnumTagSinglePayload((uint64_t)v51, 0, 1, v101);
  }
  if (v34 > 3)
    goto LABEL_85;
  v82 = ((1 << v35) + 1) >> v35;
  if (v82 > 0xFFFC)
  {
    *(_DWORD *)((char *)a1 + v34) = 0;
    return a1;
  }
  if (v82 <= 0xFC)
LABEL_85:
    *((_BYTE *)a1 + v34) = 0;
  else
    *(_WORD *)((char *)a1 + v34) = 0;
  return a1;
}

_QWORD *sub_1B253C4B8(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  size_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  uint64_t v10;
  size_t v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  size_t v24;
  size_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unsigned int v36;
  unsigned int v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  unint64_t v47;
  unint64_t v48;
  void *v49;
  const void *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  const void *v56;
  char *v57;
  char *v58;
  _QWORD *v59;
  _QWORD *v60;
  void *v61;
  const void *v62;
  _QWORD *v63;
  _QWORD *v64;
  void *v65;
  const void *v66;
  _QWORD *v67;
  _QWORD *v68;
  void *v69;
  const void *v70;
  _QWORD *v71;
  _QWORD *v72;
  void *v73;
  const void *v74;
  _QWORD *v75;
  _QWORD *v76;
  void *v77;
  const void *v78;
  unsigned int v79;
  char v80;
  int v81;
  unsigned int v82;
  unsigned int v83;
  uint64_t v85;
  size_t __n;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  size_t v95;
  size_t v96;
  size_t v97;
  size_t v98;
  size_t v99;
  size_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t AssociatedTypeWitness;

  v4 = a3[2];
  v5 = a3[3];
  v6 = a3[4];
  v92 = *(_QWORD *)(v4 - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v95 = *(_QWORD *)(v92 + 64) + v8;
  v89 = v8;
  v9 = v95 & ~v8;
  v101 = v7;
  v10 = *(_QWORD *)(v6 - 8);
  v102 = *(_QWORD *)(v7 + 64);
  v90 = *(unsigned __int8 *)(v10 + 80);
  v11 = (v102 + v90 + v9) & ~v90;
  v12 = *(_QWORD *)(v10 + 64);
  if (!*(_DWORD *)(v10 + 84))
    ++v12;
  v85 = *(_QWORD *)(v6 - 8);
  __n = v12;
  v116 = v12 + v11;
  v98 = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v105 = v5;
  v108 = v6;
  v111 = swift_getAssociatedTypeWitness();
  v15 = *(_QWORD *)(v111 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = v16 | 7;
  v18 = v16 | v14;
  v112 = swift_getAssociatedTypeWitness();
  v19 = *(_QWORD *)(v112 - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v20 | 7;
  v22 = v16 | v14 | v20 | 7;
  v23 = v14 + 8;
  v87 = v13;
  v88 = v15;
  if (*(_DWORD *)(v13 + 84))
    v24 = *(_QWORD *)(v13 + 64);
  else
    v24 = *(_QWORD *)(v13 + 64) + 1;
  v25 = v24 + ((v14 + 8) & ~v14) + v17;
  if (*(_DWORD *)(v15 + 84))
    v26 = *(_QWORD *)(v15 + 64);
  else
    v26 = *(_QWORD *)(v15 + 64) + 1;
  v27 = v26 + ((v16 + 8) & ~v16) + v21;
  v28 = v20 + 8;
  if (*(_DWORD *)(v19 + 84))
    v29 = *(_QWORD *)(v19 + 64);
  else
    v29 = *(_QWORD *)(v19 + 64) + 1;
  v30 = v29 + ((v20 + 8) & ~v20) + ((v27 + (v25 & ~v17)) & ~v21);
  v31 = v30 + (((v18 | v20) + 8) & ~v22);
  v32 = v116;
  if (v31 > v116)
    v32 = v30 + (((v18 | v20) + 8) & ~v22);
  v33 = ((v31 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v33 <= v32)
    v34 = v32;
  else
    v34 = v33;
  v35 = 8 * v34;
  if (v34 > 3)
    goto LABEL_20;
  v36 = ((1 << v35) + 1) >> v35;
  if (v36 <= 0xFFFC)
  {
    if (v36 > 0xFC)
    {
      v37 = *(unsigned __int16 *)((char *)a2 + v34);
      goto LABEL_21;
    }
LABEL_20:
    v37 = *((unsigned __int8 *)a2 + v34);
LABEL_21:
    v38 = a2;
    goto LABEL_23;
  }
  v38 = a2;
  v37 = *(_DWORD *)((char *)a2 + v34);
LABEL_23:
  if (v37 >= 3)
  {
    if (v34 <= 3)
      v39 = v34;
    else
      v39 = 4;
    __asm { BR              X16 }
  }
  v40 = ~v22;
  v41 = ~v14;
  v42 = ~v17;
  v43 = ~v16;
  v44 = ~v21;
  v45 = ~v20;
  if (v37 == 2)
  {
    v103 = v44;
    v106 = v45;
    v109 = v16 + 8;
    v91 = v30;
    v96 = v26;
    v114 = v27;
    v117 = v28;
    v99 = v29;
    v93 = *(_QWORD *)(v112 - 8);
    *a1 = *v38;
    v51 = (char *)a1 + v22;
    v52 = (char *)v38 + v22;
    v53 = (unint64_t)(v51 + 8) & v40;
    v54 = (unint64_t)(v52 + 8) & v40;
    *(_QWORD *)v53 = *(_QWORD *)v54;
    v55 = (void *)((v23 + v53) & v41);
    v56 = (const void *)((v23 + v54) & v41);
    if (__swift_getEnumTagSinglePayload((uint64_t)v56, 1, AssociatedTypeWitness))
    {
      memcpy(v55, v56, v24);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v87 + 32))(v55, v56, AssociatedTypeWitness);
      __swift_storeEnumTagSinglePayload((uint64_t)v55, 0, 1, AssociatedTypeWitness);
    }
    v63 = (_QWORD *)((v25 + v53) & v42);
    v64 = (_QWORD *)((v25 + v54) & v42);
    *v63 = *v64;
    v65 = (void *)(((unint64_t)v63 + v109) & v43);
    v66 = (const void *)(((unint64_t)v64 + v109) & v43);
    if (__swift_getEnumTagSinglePayload((uint64_t)v66, 1, v111))
    {
      memcpy(v65, v66, v96);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v88 + 32))(v65, v66, v111);
      __swift_storeEnumTagSinglePayload((uint64_t)v65, 0, 1, v111);
    }
    v71 = (_QWORD *)(((unint64_t)v63 + v114) & v103);
    v72 = (_QWORD *)(((unint64_t)v64 + v114) & v103);
    *v71 = *v72;
    v73 = (void *)(((unint64_t)v71 + v117) & v106);
    v74 = (const void *)(((unint64_t)v72 + v117) & v106);
    if (__swift_getEnumTagSinglePayload((uint64_t)v74, 1, v112))
    {
      memcpy(v73, v74, v99);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v93 + 32))(v73, v74, v112);
      __swift_storeEnumTagSinglePayload((uint64_t)v73, 0, 1, v112);
    }
    v46 = a1;
    *(_QWORD *)(((v53 | 7) + v91) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v54 | 7) + v91) & 0xFFFFFFFFFFFFF8);
    if (v34 <= 3)
    {
      v79 = ((1 << (8 * v34)) + 1) >> (8 * v34);
      if (v79 > 0xFFFC)
      {
        v81 = 2;
        goto LABEL_67;
      }
      if (v79 > 0xFC)
      {
        LOWORD(v81) = 2;
        goto LABEL_70;
      }
    }
    v80 = 2;
LABEL_59:
    *((_BYTE *)v46 + v34) = v80;
    return v46;
  }
  if (v37 == 1)
  {
    v104 = v44;
    v107 = v45;
    v110 = v16 + 8;
    v97 = v26;
    v115 = v27;
    v118 = v28;
    v100 = v29;
    v94 = *(_QWORD *)(v112 - 8);
    *a1 = *v38;
    v57 = (char *)a1 + v22;
    v58 = (char *)v38 + v22;
    v59 = (_QWORD *)((unint64_t)(v57 + 8) & v40);
    v60 = (_QWORD *)((unint64_t)(v58 + 8) & v40);
    *v59 = *v60;
    v61 = (void *)(((unint64_t)v59 + v23) & v41);
    v62 = (const void *)(((unint64_t)v60 + v23) & v41);
    if (__swift_getEnumTagSinglePayload((uint64_t)v62, 1, AssociatedTypeWitness))
    {
      memcpy(v61, v62, v24);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v87 + 32))(v61, v62, AssociatedTypeWitness);
      __swift_storeEnumTagSinglePayload((uint64_t)v61, 0, 1, AssociatedTypeWitness);
    }
    v67 = (_QWORD *)(((unint64_t)v59 + v25) & v42);
    v68 = (_QWORD *)(((unint64_t)v60 + v25) & v42);
    *v67 = *v68;
    v69 = (void *)(((unint64_t)v67 + v110) & v43);
    v70 = (const void *)(((unint64_t)v68 + v110) & v43);
    if (__swift_getEnumTagSinglePayload((uint64_t)v70, 1, v111))
    {
      memcpy(v69, v70, v97);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v88 + 32))(v69, v70, v111);
      __swift_storeEnumTagSinglePayload((uint64_t)v69, 0, 1, v111);
    }
    v75 = (_QWORD *)(((unint64_t)v67 + v115) & v104);
    v76 = (_QWORD *)(((unint64_t)v68 + v115) & v104);
    *v75 = *v76;
    v77 = (void *)(((unint64_t)v75 + v118) & v107);
    v78 = (const void *)(((unint64_t)v76 + v118) & v107);
    if (__swift_getEnumTagSinglePayload((uint64_t)v78, 1, v112))
    {
      memcpy(v77, v78, v100);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v94 + 32))(v77, v78, v112);
      __swift_storeEnumTagSinglePayload((uint64_t)v77, 0, 1, v112);
    }
    v46 = a1;
    if (v34 > 3)
      goto LABEL_58;
    v81 = 1;
    v82 = ((1 << (8 * v34)) + 1) >> (8 * v34);
    if (v82 <= 0xFFFC)
    {
      if (v82 <= 0xFC)
      {
LABEL_58:
        v80 = 1;
        goto LABEL_59;
      }
LABEL_70:
      *(_WORD *)((char *)v46 + v34) = v81;
      return v46;
    }
LABEL_67:
    *(_DWORD *)((char *)v46 + v34) = v81;
    return v46;
  }
  v46 = a1;
  (*(void (**)(_QWORD *, _QWORD *, size_t))(v92 + 32))(a1, v38, v98);
  v47 = ((unint64_t)a1 + v95) & ~v89;
  v48 = ((unint64_t)v38 + v95) & ~v89;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v101 + 32))(v47, v48, v105);
  v49 = (void *)((v47 + v102 + v90) & ~v90);
  v50 = (const void *)((v48 + v102 + v90) & ~v90);
  if (__swift_getEnumTagSinglePayload((uint64_t)v50, 1, v108))
  {
    memcpy(v49, v50, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v85 + 32))(v49, v50, v108);
    __swift_storeEnumTagSinglePayload((uint64_t)v49, 0, 1, v108);
  }
  if (v34 > 3)
    goto LABEL_62;
  v83 = ((1 << v35) + 1) >> v35;
  if (v83 > 0xFFFC)
  {
    *(_DWORD *)((char *)a1 + v34) = 0;
    return v46;
  }
  if (v83 <= 0xFC)
LABEL_62:
    *((_BYTE *)a1 + v34) = 0;
  else
    *(_WORD *)((char *)a1 + v34) = 0;
  return v46;
}

_QWORD *sub_1B253CD10(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unsigned int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int v48;
  unsigned int v49;
  uint64_t v50;
  void *v51;
  const void *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  const void *v56;
  char *v57;
  _QWORD *v58;
  _QWORD *v59;
  void *v60;
  const void *v61;
  _QWORD *v62;
  _QWORD *v63;
  void *v64;
  const void *v65;
  _QWORD *v66;
  _QWORD *v67;
  void *v68;
  const void *v69;
  _QWORD *v70;
  _QWORD *v71;
  void *v72;
  const void *v73;
  _QWORD *v74;
  _QWORD *v75;
  void *v76;
  const void *v77;
  unsigned int v78;
  char v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  size_t __n;
  uint64_t v85;
  uint64_t v86;
  size_t v87;
  size_t v88;
  size_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t AssociatedTypeWitness;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;

  if (a1 == a2)
    return a1;
  v5 = a3[2];
  v6 = a3[3];
  v7 = a3[4];
  v95 = *(_QWORD *)(v5 - 8);
  v8 = *(_QWORD *)(v6 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v96 = *(_QWORD *)(v95 + 64) + v9;
  v108 = v9;
  v10 = v96 & ~v9;
  v98 = v8;
  v11 = *(_QWORD *)(v7 - 8);
  v99 = *(_QWORD *)(v8 + 64);
  v116 = *(unsigned __int8 *)(v11 + 80);
  v12 = (v99 + v116 + v10) & ~v116;
  v13 = *(_QWORD *)(v11 + 64);
  if (!*(_DWORD *)(v11 + 84))
    ++v13;
  __n = v13;
  v85 = *(_QWORD *)(v7 - 8);
  v106 = v13 + v12;
  v97 = v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v100 = v6;
  v117 = swift_getAssociatedTypeWitness();
  v16 = *(_QWORD *)(v117 - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = v17 | 7;
  v101 = v7;
  v19 = swift_getAssociatedTypeWitness();
  v20 = v15;
  v115 = v19;
  v21 = *(_QWORD *)(v19 - 8);
  v22 = *(unsigned __int8 *)(v21 + 80);
  v23 = v22 | 7;
  v24 = v17 | v15 | v22;
  v25 = v24 | 7;
  v26 = (v24 + 8) & ~(v24 | 7);
  v27 = v15 + 8;
  v90 = v14;
  if (*(_DWORD *)(v14 + 84))
    v28 = *(_QWORD *)(v14 + 64);
  else
    v28 = *(_QWORD *)(v14 + 64) + 1;
  v110 = v28 + ((v15 + 8) & ~v15) + v18;
  v111 = v17 + 8;
  v91 = v16;
  if (*(_DWORD *)(v16 + 84))
    v29 = *(_QWORD *)(v16 + 64);
  else
    v29 = *(_QWORD *)(v16 + 64) + 1;
  v112 = v29 + ((v17 + 8) & ~v17) + v23;
  v113 = v22 + 8;
  v92 = *(_QWORD *)(v19 - 8);
  if (*(_DWORD *)(v21 + 84))
    v30 = *(_QWORD *)(v21 + 64);
  else
    v30 = *(_QWORD *)(v21 + 64) + 1;
  v31 = v30 + ((v22 + 8) & ~v22) + ((v112 + (v110 & ~v18)) & ~v23) + v26;
  v32 = v106;
  if (v31 > v106)
    v32 = v31;
  v33 = ((v31 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v33 <= v32)
    v34 = v32;
  else
    v34 = v33;
  v35 = 8 * v34;
  if (v34 > 3)
    goto LABEL_21;
  v36 = ((1 << v35) + 1) >> v35;
  if (v36 > 0xFFFC)
  {
    v37 = *(_DWORD *)((char *)a1 + v34);
  }
  else
  {
    if (v36 <= 0xFC)
    {
LABEL_21:
      v37 = *((unsigned __int8 *)a1 + v34);
      goto LABEL_24;
    }
    v37 = *(unsigned __int16 *)((char *)a1 + v34);
  }
LABEL_24:
  if (v37 >= 3)
  {
    if (v34 <= 3)
      v38 = v34;
    else
      v38 = 4;
    __asm { BR              X14 }
  }
  v93 = ~v108;
  v94 = ~v116;
  v39 = ~v25;
  v103 = ~v20;
  v104 = ~v18;
  v105 = ~v17;
  v107 = ~v23;
  v109 = ~v22;
  v88 = v29;
  v89 = v30;
  v86 = v30 + ((v22 + 8) & ~v22) + ((v112 + (v110 & ~v18)) & ~v23);
  v87 = v28;
  if (v37 == 2)
  {
    swift_release();
    v44 = ((unint64_t)a1 + v25 + 8) & v39;
    v45 = (v27 + v44) & v103;
    v40 = v115;
    v41 = v117;
    if (!__swift_getEnumTagSinglePayload(v45, 1, AssociatedTypeWitness))
LABEL_34:
      (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v45, AssociatedTypeWitness);
  }
  else
  {
    v40 = v19;
    v41 = v117;
    if (v37 != 1)
    {
      v42 = a2;
      (*(void (**)(_QWORD *, uint64_t))(v95 + 8))(a1, v97);
      (*(void (**)(unint64_t, uint64_t))(v98 + 8))(((unint64_t)a1 + v96) & v93, v100);
      v43 = ((((unint64_t)a1 + v96) & v93) + v99 + v116) & v94;
      if (!__swift_getEnumTagSinglePayload(v43, 1, v101))
        (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v43, v101);
      goto LABEL_39;
    }
    swift_release();
    v44 = ((unint64_t)a1 + v25 + 8) & v39;
    v45 = (v27 + v44) & v103;
    if (!__swift_getEnumTagSinglePayload(v45, 1, AssociatedTypeWitness))
      goto LABEL_34;
  }
  v46 = (v110 + v44) & v104;
  if (!__swift_getEnumTagSinglePayload((v111 + v46) & v105, 1, v41))
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))((v111 + v46) & v105, v41);
  v47 = (v113 + ((v112 + v46) & v107)) & v109;
  v42 = a2;
  if (!__swift_getEnumTagSinglePayload(v47, 1, v40))
    (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v47, v40);
LABEL_39:
  if (v34 > 3)
  {
LABEL_42:
    v49 = *((unsigned __int8 *)v42 + v34);
    goto LABEL_47;
  }
  v48 = ((1 << v35) + 1) >> v35;
  if (v48 > 0xFFFC)
  {
    v49 = *(_DWORD *)((char *)v42 + v34);
  }
  else
  {
    if (v48 <= 0xFC)
      goto LABEL_42;
    v49 = *(unsigned __int16 *)((char *)v42 + v34);
  }
LABEL_47:
  if (v49 >= 3)
  {
    if (v34 <= 3)
      v50 = v34;
    else
      v50 = 4;
    __asm { BR              X12 }
  }
  if (v49 == 2)
  {
    *a1 = *v42;
    v53 = ((unint64_t)a1 + v25 + 8) & v39;
    v54 = ((unint64_t)v42 + v25 + 8) & v39;
    *(_QWORD *)v53 = *(_QWORD *)v54;
    v55 = (void *)((v27 + v53) & v103);
    v56 = (const void *)((v27 + v54) & v103);
    if (__swift_getEnumTagSinglePayload((uint64_t)v56, 1, AssociatedTypeWitness))
    {
      memcpy(v55, v56, v87);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v90 + 32))(v55, v56, AssociatedTypeWitness);
      __swift_storeEnumTagSinglePayload((uint64_t)v55, 0, 1, AssociatedTypeWitness);
    }
    v62 = (_QWORD *)((v110 + v53) & v104);
    v63 = (_QWORD *)((v110 + v54) & v104);
    *v62 = *v63;
    v64 = (void *)(((unint64_t)v62 + v111) & v105);
    v65 = (const void *)(((unint64_t)v63 + v111) & v105);
    if (__swift_getEnumTagSinglePayload((uint64_t)v65, 1, v117))
    {
      memcpy(v64, v65, v88);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v91 + 32))(v64, v65, v117);
      __swift_storeEnumTagSinglePayload((uint64_t)v64, 0, 1, v117);
    }
    v70 = (_QWORD *)(((unint64_t)v62 + v112) & v107);
    v71 = (_QWORD *)(((unint64_t)v63 + v112) & v107);
    *v70 = *v71;
    v72 = (void *)(((unint64_t)v70 + v113) & v109);
    v73 = (const void *)(((unint64_t)v71 + v113) & v109);
    if (__swift_getEnumTagSinglePayload((uint64_t)v73, 1, v115))
    {
      memcpy(v72, v73, v89);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v92 + 32))(v72, v73, v115);
      __swift_storeEnumTagSinglePayload((uint64_t)v72, 0, 1, v115);
    }
    *(_QWORD *)(((v53 | 7) + v86) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v54 | 7) + v86) & 0xFFFFFFFFFFFFF8);
    if (v34 <= 3)
    {
      v78 = ((1 << (8 * v34)) + 1) >> (8 * v34);
      if (v78 > 0xFFFC)
      {
        v80 = 2;
        goto LABEL_90;
      }
      if (v78 > 0xFC)
      {
        LOWORD(v80) = 2;
        goto LABEL_93;
      }
    }
    v79 = 2;
LABEL_82:
    *((_BYTE *)a1 + v34) = v79;
    return a1;
  }
  if (v49 == 1)
  {
    *a1 = *v42;
    v57 = (char *)v42 + v25;
    v58 = (_QWORD *)(((unint64_t)a1 + v25 + 8) & v39);
    v59 = (_QWORD *)((unint64_t)(v57 + 8) & v39);
    *v58 = *v59;
    v60 = (void *)(((unint64_t)v58 + v27) & v103);
    v61 = (const void *)(((unint64_t)v59 + v27) & v103);
    if (__swift_getEnumTagSinglePayload((uint64_t)v61, 1, AssociatedTypeWitness))
    {
      memcpy(v60, v61, v87);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v90 + 32))(v60, v61, AssociatedTypeWitness);
      __swift_storeEnumTagSinglePayload((uint64_t)v60, 0, 1, AssociatedTypeWitness);
    }
    v66 = (_QWORD *)(((unint64_t)v58 + v110) & v104);
    v67 = (_QWORD *)(((unint64_t)v59 + v110) & v104);
    *v66 = *v67;
    v68 = (void *)(((unint64_t)v66 + v111) & v105);
    v69 = (const void *)(((unint64_t)v67 + v111) & v105);
    if (__swift_getEnumTagSinglePayload((uint64_t)v69, 1, v117))
    {
      memcpy(v68, v69, v88);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v91 + 32))(v68, v69, v117);
      __swift_storeEnumTagSinglePayload((uint64_t)v68, 0, 1, v117);
    }
    v74 = (_QWORD *)(((unint64_t)v66 + v112) & v107);
    v75 = (_QWORD *)(((unint64_t)v67 + v112) & v107);
    *v74 = *v75;
    v76 = (void *)(((unint64_t)v74 + v113) & v109);
    v77 = (const void *)(((unint64_t)v75 + v113) & v109);
    if (__swift_getEnumTagSinglePayload((uint64_t)v77, 1, v40))
    {
      memcpy(v76, v77, v89);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v92 + 32))(v76, v77, v40);
      __swift_storeEnumTagSinglePayload((uint64_t)v76, 0, 1, v40);
    }
    if (v34 > 3)
      goto LABEL_81;
    v80 = 1;
    v81 = ((1 << (8 * v34)) + 1) >> (8 * v34);
    if (v81 <= 0xFFFC)
    {
      if (v81 <= 0xFC)
      {
LABEL_81:
        v79 = 1;
        goto LABEL_82;
      }
LABEL_93:
      *(_WORD *)((char *)a1 + v34) = v80;
      return a1;
    }
LABEL_90:
    *(_DWORD *)((char *)a1 + v34) = v80;
    return a1;
  }
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v95 + 32))(a1, v42, v97);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v98 + 32))(((unint64_t)a1 + v96) & v93, ((unint64_t)v42 + v96) & v93, v100);
  v51 = (void *)(((((unint64_t)a1 + v96) & v93) + v99 + v116) & v94);
  v52 = (const void *)(((((unint64_t)v42 + v96) & v93) + v99 + v116) & v94);
  if (__swift_getEnumTagSinglePayload((uint64_t)v52, 1, v101))
  {
    memcpy(v51, v52, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v85 + 32))(v51, v52, v101);
    __swift_storeEnumTagSinglePayload((uint64_t)v51, 0, 1, v101);
  }
  if (v34 > 3)
    goto LABEL_85;
  v82 = ((1 << v35) + 1) >> v35;
  if (v82 > 0xFFFC)
  {
    *(_DWORD *)((char *)a1 + v34) = 0;
    return a1;
  }
  if (v82 <= 0xFC)
LABEL_85:
    *((_BYTE *)a1 + v34) = 0;
  else
    *(_WORD *)((char *)a1 + v34) = 0;
  return a1;
}

uint64_t sub_1B253D7E8(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  int v26;
  unsigned int v27;
  char v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  int v35;
  unsigned int v36;
  int v37;
  int v38;
  unsigned int v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  int v44;
  unsigned int v45;
  char v46;
  unsigned int v48;
  unint64_t v51;

  v3 = *(_QWORD *)(a3[4] - 8);
  v4 = (((*(_QWORD *)(*(_QWORD *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80))
      + *(_QWORD *)(*(_QWORD *)(a3[3] - 8) + 64)
      + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_DWORD *)(v3 + 84);
  v6 = *(_QWORD *)(v3 + 64);
  if (v5)
    v7 = v6;
  else
    v7 = v6 + 1;
  v51 = v7 + v4;
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = v13 | 7;
  v15 = (v11 | 7) + *(_QWORD *)(v8 + 64) + ((v9 + 8) & ~v9);
  if (!*(_DWORD *)(v8 + 84))
    ++v15;
  v16 = v15 & ~(v11 | 7);
  v17 = v14 + *(_QWORD *)(v10 + 64) + ((v11 + 8) & ~v11);
  if (!*(_DWORD *)(v10 + 84))
    ++v17;
  v18 = (v17 + v16) & ~v14;
  v19 = *(_DWORD *)(v12 + 84);
  v20 = *(_QWORD *)(v12 + 64)
      + ((v13 + 8) & ~v13)
      + (((v11 | v9 | v13) & 0xF8 ^ 0x1F8) & ((v11 | v9 | v13) + 8));
  if (!v19)
    ++v20;
  v21 = v20 + v18;
  v22 = v51;
  if (v21 > v51)
    v22 = v21;
  v23 = ((v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v23 > v22)
    v22 = v23;
  v24 = 8;
  v25 = 8 * v22;
  if (v22 > 3)
  {
    v26 = 4;
    goto LABEL_24;
  }
  v27 = ((1 << v25) + 1) >> v25;
  if (v27 >= 0xFFFD)
    v28 = 32;
  else
    v28 = 16;
  if (v27 >= 0xFD)
    v24 = v28;
  else
    v24 = 8;
  if (v27 <= 0xFFFC)
  {
    v26 = v27 + 3;
LABEL_24:
    v29 = a2;
    v30 = (1 << v24) - v26;
    if ((v30 & 0x80000000) != 0)
      v30 = 0x7FFFFFFF;
    goto LABEL_27;
  }
  v30 = 0x7FFFFFFF;
  v29 = a2;
LABEL_27:
  if (v22 > 3)
    goto LABEL_31;
  v31 = ((1 << v25) + 1) >> v25;
  v32 = 2;
  if (v31 > 0xFFFC)
    v32 = 4;
  if (v31 <= 0xFC)
LABEL_31:
    v32 = 1;
  if (!v29)
    return 0;
  if (v29 <= v30)
    goto LABEL_51;
  v33 = v32 + v22;
  v34 = 8 * v33;
  if (v33 <= 3)
  {
    v36 = ((v29 - v30 + ~(-1 << v34)) >> v34) + 1;
    if (HIWORD(v36))
    {
      v35 = *(_DWORD *)(a1 + v33);
      if (!v35)
        goto LABEL_51;
      goto LABEL_42;
    }
    if (v36 > 0xFF)
    {
      v35 = *(unsigned __int16 *)(a1 + v33);
      if (!*(_WORD *)(a1 + v33))
        goto LABEL_51;
      goto LABEL_42;
    }
    if (v36 < 2)
    {
LABEL_51:
      if (v30)
      {
        if (v22 > 3)
          goto LABEL_55;
        v39 = ((1 << v25) + 1) >> v25;
        if (v39 > 0xFFFC)
        {
          v41 = *(_DWORD *)(a1 + v22);
          v42 = ~v41;
          goto LABEL_65;
        }
        if (v39 >= 0xFD)
        {
          v44 = *(unsigned __int16 *)(a1 + v22);
          v41 = v44 | 0xFFFF0000;
          v42 = v44 ^ 0xFFFF;
        }
        else
        {
LABEL_55:
          v40 = *(unsigned __int8 *)(a1 + v22);
          v41 = v40 | 0xFFFFFF00;
          v42 = v40 ^ 0xFF;
          if (v22 > 3)
          {
            v43 = 4;
            goto LABEL_62;
          }
        }
        v45 = ((1 << v25) + 1) >> v25;
        if (v45 <= 0xFFFC)
        {
          v43 = v45 + 3;
          if (v45 > 0xFC)
          {
            v46 = 16;
LABEL_64:
            v48 = (1 << v46) - v43;
            if ((v48 & 0x80000000) == 0)
              goto LABEL_66;
            goto LABEL_65;
          }
LABEL_62:
          v46 = 8;
          goto LABEL_64;
        }
LABEL_65:
        v48 = 0x7FFFFFFF;
LABEL_66:
        if (v48 > v42)
          return -v41;
        else
          return 0;
      }
      return 0;
    }
  }
  v35 = *(unsigned __int8 *)(a1 + v33);
  if (!*(_BYTE *)(a1 + v33))
    goto LABEL_51;
LABEL_42:
  v37 = (v35 - 1) << v34;
  if (v33 > 3)
    v37 = 0;
  if ((_DWORD)v33)
  {
    if (v33 <= 3)
      v38 = v33;
    else
      v38 = 4;
    __asm { BR              X12 }
  }
  return v30 + v37 + 1;
}

void sub_1B253DC18(_BYTE *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  uint64_t v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  int v27;
  unsigned int v28;
  char v29;
  _BYTE *v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  uint64_t v34;
  size_t v35;
  char v36;
  unsigned int v37;
  int v38;
  unsigned int v39;
  int v40;
  unint64_t v41;

  v4 = *(_QWORD *)(a4[4] - 8);
  v5 = (((*(_QWORD *)(*(_QWORD *)(a4[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a4[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a4[3] - 8) + 80))
      + *(_QWORD *)(*(_QWORD *)(a4[3] - 8) + 64)
      + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_DWORD *)(v4 + 84);
  v7 = *(_QWORD *)(v4 + 64);
  if (v6)
    v8 = v7;
  else
    v8 = v7 + 1;
  v41 = v8 + v5;
  v9 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v14 | 7;
  v16 = (v12 | 7) + *(_QWORD *)(v9 + 64) + ((v10 + 8) & ~v10);
  if (!*(_DWORD *)(v9 + 84))
    ++v16;
  v17 = v16 & ~(v12 | 7);
  v18 = v15 + *(_QWORD *)(v11 + 64) + ((v12 + 8) & ~v12);
  if (!*(_DWORD *)(v11 + 84))
    ++v18;
  v19 = (v18 + v17) & ~v15;
  v20 = *(_DWORD *)(v13 + 84);
  v21 = *(_QWORD *)(v13 + 64)
      + ((v14 + 8) & ~v14)
      + (((v12 | v10 | v14) & 0xF8 ^ 0x1F8) & ((v12 | v10 | v14) + 8));
  if (!v20)
    ++v21;
  v22 = v21 + v19;
  v23 = v41;
  if (v22 > v41)
    v23 = v22;
  v24 = ((v22 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v24 <= v23)
    v24 = v23;
  v25 = 8;
  v26 = 8 * v24;
  if (v24 <= 3)
  {
    v28 = ((1 << v26) + 1) >> v26;
    if (v28 >= 0xFFFD)
      v29 = 32;
    else
      v29 = 16;
    if (v28 >= 0xFD)
      v25 = v29;
    else
      v25 = 8;
    if (v28 > 0xFFFC)
    {
      v32 = 0x7FFFFFFF;
      v30 = a1;
      v31 = a2;
      goto LABEL_27;
    }
    v27 = v28 + 3;
  }
  else
  {
    v27 = 4;
  }
  v30 = a1;
  v31 = a2;
  v32 = (1 << v25) - v27;
  if ((v32 & 0x80000000) != 0)
    v32 = 0x7FFFFFFF;
LABEL_27:
  if (v24 > 3)
    goto LABEL_31;
  v33 = ((1 << v26) + 1) >> v26;
  v34 = 2;
  if (v33 > 0xFFFC)
    v34 = 4;
  if (v33 <= 0xFC)
LABEL_31:
    v34 = 1;
  v35 = v34 + v24;
  v36 = 8 * (v34 + v24);
  if (a3 <= v32)
  {
    v37 = 0u;
  }
  else if (v35 <= 3)
  {
    v39 = ((a3 - v32 + ~(-1 << v36)) >> v36) + 1;
    if (HIWORD(v39))
    {
      v37 = 4u;
    }
    else if (v39 >= 0x100)
    {
      v37 = 2;
    }
    else
    {
      v37 = v39 > 1;
    }
  }
  else
  {
    v37 = 1u;
  }
  if (v32 < v31)
  {
    v38 = ~v32 + v31;
    if (v35 < 4)
    {
      if ((_DWORD)v35)
      {
        v40 = v38 & ~(-1 << v36);
        bzero(v30, v35);
        if ((_DWORD)v35 == 3)
        {
          *(_WORD *)v30 = v40;
          v30[2] = BYTE2(v40);
        }
        else if ((_DWORD)v35 == 2)
        {
          *(_WORD *)v30 = v40;
        }
        else
        {
          *v30 = v40;
        }
      }
    }
    else
    {
      bzero(v30, v35);
      *(_DWORD *)v30 = v38;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

uint64_t sub_1B253E024(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t result;
  unsigned int v24;
  uint64_t v25;
  unint64_t v26;

  v2 = *(_QWORD *)(a2[4] - 8);
  v3 = (((*(_QWORD *)(*(_QWORD *)(a2[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a2[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a2[3] - 8) + 80))
      + *(_QWORD *)(*(_QWORD *)(a2[3] - 8) + 64)
      + *(unsigned __int8 *)(v2 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_DWORD *)(v2 + 84);
  v5 = *(_QWORD *)(v2 + 64);
  if (v4)
    v6 = v5;
  else
    v6 = v5 + 1;
  v26 = v6 + v3;
  v7 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = v12 | 7;
  v14 = (v10 | 7) + *(_QWORD *)(v7 + 64) + ((v8 + 8) & ~v8);
  if (!*(_DWORD *)(v7 + 84))
    ++v14;
  v15 = v14 & ~(v10 | 7);
  v16 = v13 + *(_QWORD *)(v9 + 64) + ((v10 + 8) & ~v10);
  if (!*(_DWORD *)(v9 + 84))
    ++v16;
  v17 = (v16 + v15) & ~v13;
  v18 = *(_DWORD *)(v11 + 84);
  v19 = *(_QWORD *)(v11 + 64)
      + ((v12 + 8) & ~v12)
      + (((v10 | v8 | v12) & 0xF8 ^ 0x1F8) & ((v10 | v8 | v12) + 8));
  if (!v18)
    ++v19;
  v20 = v19 + v17;
  v21 = v26;
  if (v20 > v26)
    v21 = v20;
  v22 = ((v20 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v22 <= v21)
    v22 = v21;
  if (v22 > 3)
    goto LABEL_15;
  v24 = ((1 << (8 * v22)) + 1) >> (8 * v22);
  if (v24 > 0xFFFC)
  {
    result = *(unsigned int *)(a1 + v22);
  }
  else
  {
    if (v24 <= 0xFC)
    {
LABEL_15:
      result = *(unsigned __int8 *)(a1 + v22);
      goto LABEL_20;
    }
    result = *(unsigned __int16 *)(a1 + v22);
  }
LABEL_20:
  if (result >= 3)
  {
    if (v22 <= 3)
      v25 = v22;
    else
      v25 = 4;
    __asm { BR              X13 }
  }
  return result;
}

uint64_t sub_1B253E284(char *a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  unint64_t v21;
  size_t v22;
  size_t v23;
  unint64_t v24;
  size_t v25;
  void *v26;
  char *v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  int v31;
  size_t v33;

  v3 = *(_QWORD *)(a3[4] - 8);
  v4 = (((*(_QWORD *)(*(_QWORD *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80))
      + *(_QWORD *)(*(_QWORD *)(a3[3] - 8) + 64)
      + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_DWORD *)(v3 + 84);
  v6 = *(_QWORD *)(v3 + 64);
  if (v5)
    v7 = v6;
  else
    v7 = v6 + 1;
  v33 = v7 + v4;
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  result = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(result - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v14 | 7;
  v16 = (v11 | 7) + *(_QWORD *)(v8 + 64) + ((v9 + 8) & ~v9);
  if (!*(_DWORD *)(v8 + 84))
    ++v16;
  v17 = v16 & ~(v11 | 7);
  v18 = v15 + *(_QWORD *)(v10 + 64) + ((v11 + 8) & ~v11);
  if (!*(_DWORD *)(v10 + 84))
    ++v18;
  v19 = (v18 + v17) & ~v15;
  v20 = *(_DWORD *)(v13 + 84);
  v21 = *(_QWORD *)(v13 + 64)
      + ((v14 + 8) & ~v14)
      + (((v11 | v9 | v14) & 0xF8 ^ 0x1F8) & ((v11 | v9 | v14) + 8));
  if (!v20)
    ++v21;
  v22 = v21 + v19;
  v23 = v33;
  if (v22 > v33)
    v23 = v22;
  v24 = ((v22 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v24 <= v23)
    v25 = v23;
  else
    v25 = v24;
  if (a2 > 2)
  {
    if (v25 >= 4)
    {
      v26 = a1;
      v27 = &a1[v25];
      LOBYTE(v28) = 3;
LABEL_20:
      *v27 = v28;
      goto LABEL_29;
    }
    v28 = ((a2 - 3) >> (8 * v25)) + 3;
    v26 = a1;
    v27 = &a1[v25];
    v30 = ((1 << (8 * v25)) + 1) >> (8 * v25);
    if (v30 > 0xFFFC)
    {
      *(_DWORD *)v27 = v28;
    }
    else
    {
      if (v30 <= 0xFC)
        goto LABEL_20;
      *(_WORD *)v27 = v28;
    }
LABEL_29:
    if (v25 >= 4)
      v31 = 4;
    else
      v31 = v25;
    bzero(v26, v25);
    __asm { BR              X10 }
  }
  if (v25 > 3)
  {
LABEL_17:
    a1[v25] = a2;
    return result;
  }
  v29 = ((1 << (8 * v25)) + 1) >> (8 * v25);
  if (v29 > 0xFFFC)
  {
    *(_DWORD *)&a1[v25] = a2;
  }
  else
  {
    if (v29 <= 0xFC)
      goto LABEL_17;
    *(_WORD *)&a1[v25] = a2;
  }
  return result;
}

void type metadata accessor for ZipStateMachine.State.Upstream()
{
  JUMPOUT(0x1B5E26140);
}

uint64_t sub_1B253E564()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1B253E56C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B25CD108();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1B253E5E4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  size_t v8;
  int v9;
  uint64_t v12;
  void *v13;
  const void *v14;

  v3 = a1;
  v4 = *(_QWORD *)(a3 + 40);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6;
  if (*(_DWORD *)(v5 + 84))
    v8 = *(_QWORD *)(v5 + 64);
  else
    v8 = *(_QWORD *)(v5 + 64) + 1;
  v9 = v6 & 0x100000;
  if (v7 > 7 || v9 != 0 || ((v7 + 8) & ~v7) + v8 > 0x18)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16)));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v13 = (void *)(((unint64_t)a1 + v7 + 8) & ~v7);
    v14 = (const void *)(((unint64_t)a2 + v7 + 8) & ~v7);
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v4))
    {
      memcpy(v13, v14, v8);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v13, v14, v4);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v4);
    }
  }
  return v3;
}

uint64_t sub_1B253E6E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;

  v2 = *(_QWORD *)(a2 + 40);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (a1 + *(unsigned __int8 *)(v3 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  result = __swift_getEnumTagSinglePayload(v4, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v3 + 8))(v4, v2);
  return result;
}

_QWORD *sub_1B253E750(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  size_t v9;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 40);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  v8 = (const void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v4))
  {
    if (*(_DWORD *)(v5 + 84))
      v9 = *(_QWORD *)(v5 + 64);
    else
      v9 = *(_QWORD *)(v5 + 64) + 1;
    memcpy(v7, v8, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v7, v8, v4);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v4);
  }
  return a1;
}

_QWORD *sub_1B253E804(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  int EnumTagSinglePayload;
  int v10;
  size_t v11;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 40);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  v8 = (const void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v4);
  v10 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v4);
  if (EnumTagSinglePayload)
  {
    if (!v10)
    {
      (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v7, v8, v4);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v4);
      return a1;
    }
  }
  else
  {
    if (!v10)
    {
      (*(void (**)(void *, const void *, uint64_t))(v5 + 24))(v7, v8, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  }
  if (*(_DWORD *)(v5 + 84))
    v11 = *(_QWORD *)(v5 + 64);
  else
    v11 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(v7, v8, v11);
  return a1;
}

_QWORD *sub_1B253E8FC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  size_t v9;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 40);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  v8 = (const void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v4))
  {
    if (*(_DWORD *)(v5 + 84))
      v9 = *(_QWORD *)(v5 + 64);
    else
      v9 = *(_QWORD *)(v5 + 64) + 1;
    memcpy(v7, v8, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(v7, v8, v4);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v4);
  }
  return a1;
}

_QWORD *sub_1B253E9B0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  int EnumTagSinglePayload;
  int v10;
  size_t v11;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 40);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  v8 = (const void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v4);
  v10 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v4);
  if (EnumTagSinglePayload)
  {
    if (!v10)
    {
      (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(v7, v8, v4);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v4);
      return a1;
    }
  }
  else
  {
    if (!v10)
    {
      (*(void (**)(void *, const void *, uint64_t))(v5 + 40))(v7, v8, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  }
  if (*(_DWORD *)(v5 + 84))
    v11 = *(_QWORD *)(v5 + 64);
  else
    v11 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(v7, v8, v11);
  return a1;
}

uint64_t sub_1B253EAA8(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  char v13;
  int v14;
  unsigned int v16;
  int v17;
  uint64_t v18;
  unsigned int EnumTagSinglePayload;

  v4 = *(_QWORD *)(a3 + 40);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if ((_DWORD)v6)
    v7 = v6 - 1;
  else
    v7 = 0;
  if (v7 <= 0x7FFFFFFE)
    v8 = 2147483646;
  else
    v8 = v7;
  v9 = *(_QWORD *)(v5 + 64);
  if (!(_DWORD)v6)
    ++v9;
  if (!a2)
    return 0;
  v10 = *(unsigned __int8 *)(v5 + 80);
  v11 = a2 - v8;
  if (a2 <= v8)
    goto LABEL_27;
  v12 = v9 + ((v10 + 8) & ~v10);
  v13 = 8 * v12;
  if (v12 <= 3)
  {
    v16 = ((v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v16))
    {
      v14 = *(_DWORD *)((char *)a1 + v12);
      if (!v14)
        goto LABEL_27;
      goto LABEL_20;
    }
    if (v16 > 0xFF)
    {
      v14 = *(unsigned __int16 *)((char *)a1 + v12);
      if (!*(_WORD *)((char *)a1 + v12))
        goto LABEL_27;
      goto LABEL_20;
    }
    if (v16 < 2)
    {
LABEL_27:
      if (v7 > 0x7FFFFFFE)
      {
        EnumTagSinglePayload = __swift_getEnumTagSinglePayload(((unint64_t)a1 + v10 + 8) & ~v10, v6, v4);
        if (EnumTagSinglePayload >= 2)
          return EnumTagSinglePayload - 1;
        else
          return 0;
      }
      else
      {
        v18 = *a1;
        if (*a1 >= 0xFFFFFFFFuLL)
          LODWORD(v18) = -1;
        if ((v18 + 1) >= 2)
          return v18;
        else
          return 0;
      }
    }
  }
  v14 = *((unsigned __int8 *)a1 + v12);
  if (!*((_BYTE *)a1 + v12))
    goto LABEL_27;
LABEL_20:
  v17 = (v14 - 1) << v13;
  if (v12 > 3)
    v17 = 0;
  if ((_DWORD)v12)
  {
    if (v12 > 3)
      LODWORD(v12) = 4;
    __asm { BR              X12 }
  }
  return v8 + v17 + 1;
}

void sub_1B253EC24(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  size_t v13;
  char v14;
  BOOL v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  int v19;

  v6 = 0u;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 40) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (!v8)
    v9 = 0;
  if (v9 <= 0x7FFFFFFE)
    v10 = 2147483646;
  else
    v10 = v9;
  v11 = (*(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v12 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v12;
  v13 = v11 + v12;
  v14 = 8 * (v11 + v12);
  v15 = a3 >= v10;
  v16 = a3 - v10;
  if (v16 != 0 && v15)
  {
    if (v13 <= 3)
    {
      v17 = ((v16 + ~(-1 << v14)) >> v14) + 1;
      if (HIWORD(v17))
      {
        v6 = 4u;
      }
      else if (v17 >= 0x100)
      {
        v6 = 2;
      }
      else
      {
        v6 = v17 > 1;
      }
    }
    else
    {
      v6 = 1u;
    }
  }
  if (v10 < a2)
  {
    v18 = ~v10 + a2;
    if (v13 < 4)
    {
      if ((_DWORD)v13)
      {
        v19 = v18 & ~(-1 << v14);
        bzero(a1, v13);
        if ((_DWORD)v13 == 3)
        {
          *a1 = v19;
          *((_BYTE *)a1 + 2) = BYTE2(v19);
        }
        else if ((_DWORD)v13 == 2)
        {
          *a1 = v19;
        }
        else
        {
          *(_BYTE *)a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v13);
      *(_DWORD *)a1 = v18;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

void sub_1B253EE78()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1B253EE80()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_1B253EEA0()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_1B253EEB0()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_1B253EEB8()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

void sub_1B253EEC4(_QWORD *a1@<X8>)
{
  *a1 = 0;
  type metadata accessor for ZipStateMachine.State.Upstream();
}

uint64_t sub_1B253EEFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(v2 + *(int *)(a1 + 76), 1, 1, v1);
}

void sub_1B253EF24(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = a1;
  type metadata accessor for ZipStateMachine.State.Upstream();
}

uint64_t sub_1B253EF68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v2 + *(int *)(a1 + 76);
  v4 = sub_1B25CD108();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, v1, v4);
}

void sub_1B253EFA8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v10 = sub_1B25CD108();
  v11 = OUTLINED_FUNCTION_1_4();
  v12 = a6 + *(int *)(v11 + 48);
  v13 = a6 + *(int *)(v11 + 64);
  OUTLINED_FUNCTION_817(a6, a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32));
  OUTLINED_FUNCTION_293_0(v12, a2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32));
  OUTLINED_FUNCTION_311(v13, a3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16));
  type metadata accessor for ZipStateMachine.State();
}

void sub_1B253F084()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int EnumTagSinglePayload;

  OUTLINED_FUNCTION_132_1();
  OUTLINED_FUNCTION_131_3();
  v3 = v0;
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v0, 1, v1);
  OUTLINED_FUNCTION_98_4(v3, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  if (EnumTagSinglePayload == 1)
    OUTLINED_FUNCTION_40_3();
  OUTLINED_FUNCTION_40_3();
}

void sub_1B253F0F4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_59_0();
  v0 = OUTLINED_FUNCTION_34_5();
  OUTLINED_FUNCTION_15_5(v0);
}

void sub_1B253F148()
{
  uint64_t v0;

  OUTLINED_FUNCTION_95_4();
  v0 = OUTLINED_FUNCTION_34_5();
  OUTLINED_FUNCTION_15_5(v0);
}

void sub_1B253F160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = OUTLINED_FUNCTION_34_5();
  *(_QWORD *)(v6 - 144) = v5;
  *(_QWORD *)(v6 - 136) = v1;
  *(_QWORD *)(v6 - 128) = v0;
  *(_QWORD *)(v6 - 120) = v7;
  *(_QWORD *)(v6 - 112) = v2;
  *(_QWORD *)(v6 - 104) = v3;
  *(_QWORD *)(v6 - 96) = v4;
  OUTLINED_FUNCTION_6_10();
}

#error "1B253F218: call analysis failed (funcsize=42)"

uint64_t sub_1B253F234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int EnumCaseMultiPayload;

  v10 = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_18_8();
  MEMORY[0x1E0C80A78](v11, v12);
  OUTLINED_FUNCTION_311((uint64_t)&a9 - v13, *(_QWORD *)(v9 - 152), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16));
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)&loc_1B253F288 + *((int *)qword_1B253F6B8 + EnumCaseMultiPayload)))();
}

void sub_1B253F29C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = OUTLINED_FUNCTION_103_4();
  v4 = OUTLINED_FUNCTION_1_4();
  v5 = v1 + *(int *)(v4 + 48);
  OUTLINED_FUNCTION_156(v1 + *(int *)(v4 + 64), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8));
  OUTLINED_FUNCTION_249_0(v5, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8));
  OUTLINED_FUNCTION_82_6(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8));
  OUTLINED_FUNCTION_7_1();
}

void sub_1B253F6CC()
{
  OUTLINED_FUNCTION_59_0();
  type metadata accessor for ZipStateMachine.State();
}

uint64_t sub_1B253F710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(void);

  v11 = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_18_8();
  MEMORY[0x1E0C80A78](v12, v13);
  v15 = (char *)&a9 - v14;
  OUTLINED_FUNCTION_817((uint64_t)&a9 - v14, v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16));
  v16 = (uint64_t (*)(void))((char *)&loc_1B253F75C + dword_1B253FBE4[OUTLINED_FUNCTION_101_4()]);
  *(_QWORD *)(v10 - 160) = v15;
  return v16();
}

void sub_1B253F770()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v9 - 192) = OUTLINED_FUNCTION_106_3();
  v10 = OUTLINED_FUNCTION_1_4();
  *(_QWORD *)(v9 - 184) = v3 + *(int *)(v10 + 48);
  *(_QWORD *)(v9 - 200) = v3 + *(int *)(v10 + 64);
  OUTLINED_FUNCTION_204_0(v4, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  *(_QWORD *)(v9 - 224) = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EEFD9CA0);
  *(_QWORD *)(v9 - 216) = v4;
  v11 = OUTLINED_FUNCTION_97_4();
  *(_QWORD *)(v9 - 152) = v11;
  *(_QWORD *)(v9 - 144) = v1;
  *(_QWORD *)(v9 - 136) = v2;
  *(_QWORD *)(v9 - 128) = v6;
  *(_QWORD *)(v9 - 120) = v11;
  *(_QWORD *)(v9 - 112) = v5;
  *(_QWORD *)(v9 - 104) = v7;
  *(_QWORD *)(v9 - 96) = v8;
  OUTLINED_FUNCTION_8_9();
}

void sub_1B253F804()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v7 - 208) = v2;
  v8 = OUTLINED_FUNCTION_97_4();
  *(_QWORD *)(v7 - 144) = v0;
  *(_QWORD *)(v7 - 136) = v1;
  *(_QWORD *)(v7 - 128) = v4;
  *(_QWORD *)(v7 - 120) = v8;
  *(_QWORD *)(v7 - 240) = v8;
  *(_QWORD *)(v7 - 112) = v3;
  *(_QWORD *)(v7 - 104) = v5;
  *(_QWORD *)(v7 - 96) = v6;
  OUTLINED_FUNCTION_8_9();
}

void sub_1B253F83C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;

  OUTLINED_FUNCTION_107_2();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v5 - 144) = v0;
  *(_QWORD *)(v5 - 136) = v1;
  *(_QWORD *)(v5 - 128) = v3;
  *(_QWORD *)(v5 - 120) = AssociatedTypeWitness;
  *(_QWORD *)(v5 - 232) = AssociatedTypeWitness;
  *(_QWORD *)(v5 - 112) = v2;
  *(_QWORD *)(v5 - 104) = v4;
  OUTLINED_FUNCTION_36_5();
}

void sub_1B253F874()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_0_4();
  sub_1B25CD108();
  OUTLINED_FUNCTION_55_5();
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_16_7();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED36D060);
  OUTLINED_FUNCTION_52_7();
  sub_1B25CD6D8();
  OUTLINED_FUNCTION_44_4();
  v1 = OUTLINED_FUNCTION_1_4();
  v2 = *(_QWORD **)(v0 - 216);
  *(_QWORD *)(v0 - 224) = *(int *)(v1 + 64);
  *v2 = *(_QWORD *)(v0 - 168);
  OUTLINED_FUNCTION_59_6();
  OUTLINED_FUNCTION_48_6(v3);
}

void sub_1B253F934()
{
  _QWORD *v0;

  OUTLINED_FUNCTION_59_6();
  OUTLINED_FUNCTION_48_6(v0);
}

void sub_1B253F944()
{
  _QWORD *v0;

  OUTLINED_FUNCTION_59_6();
  OUTLINED_FUNCTION_48_6(v0);
}

void sub_1B253F954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + *(_QWORD *)(v3 - 224)) = *(_QWORD *)(v3 - 176);
  OUTLINED_FUNCTION_112_4();
  swift_retain();
  OUTLINED_FUNCTION_93_4(*(_QWORD *)(v3 - 200));
  OUTLINED_FUNCTION_249_0(*(_QWORD *)(v3 - 184), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8));
  OUTLINED_FUNCTION_20_7(*(_QWORD *)(v3 - 160), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8));
  OUTLINED_FUNCTION_7_1();
}

void sub_1B253F9B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release();
  *(_QWORD *)(v3 - 152) = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EEFD9CA0);
  v4 = OUTLINED_FUNCTION_73_6();
  *(_QWORD *)(v3 - 144) = v0;
  *(_QWORD *)(v3 - 136) = v1;
  *(_QWORD *)(v3 - 128) = v2;
  *(_QWORD *)(v3 - 120) = v4;
  OUTLINED_FUNCTION_9_7();
}

void sub_1B253F9F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = OUTLINED_FUNCTION_73_6();
  *(_QWORD *)(v6 - 144) = v0;
  *(_QWORD *)(v6 - 136) = v1;
  *(_QWORD *)(v6 - 128) = v3;
  *(_QWORD *)(v6 - 120) = v7;
  *(_QWORD *)(v6 - 112) = v2;
  *(_QWORD *)(v6 - 104) = v4;
  *(_QWORD *)(v6 - 96) = v5;
  OUTLINED_FUNCTION_8_9();
}

void sub_1B253FA20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_73_6();
  *(_QWORD *)(v3 - 144) = v0;
  *(_QWORD *)(v3 - 136) = v1;
  *(_QWORD *)(v3 - 128) = v2;
  *(_QWORD *)(v3 - 120) = v4;
  OUTLINED_FUNCTION_9_7();
}

void sub_1B253FA4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_52_7();
  v1 = OUTLINED_FUNCTION_0_4();
  v2 = OUTLINED_FUNCTION_33_7();
  OUTLINED_FUNCTION_20_7(*(_QWORD *)(v0 - 160) + *(int *)(v2 + 48), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8));
  __break(1u);
  JUMPOUT(0x1B253FBE0);
}

void sub_1B253FBF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_52_7();
  OUTLINED_FUNCTION_34_5();
  sub_1B25CD108();
  OUTLINED_FUNCTION_18_8();
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_86_3();
  OUTLINED_FUNCTION_34_5();
  sub_1B25CD108();
  OUTLINED_FUNCTION_18_8();
  MEMORY[0x1E0C80A78](v2, v3);
  OUTLINED_FUNCTION_86_3();
  OUTLINED_FUNCTION_74_5(v4);
  OUTLINED_FUNCTION_133_2();
  OUTLINED_FUNCTION_34_5();
  v8 = OUTLINED_FUNCTION_121_3();
  OUTLINED_FUNCTION_75_7(*(_QWORD *)(v8 - 8));
  OUTLINED_FUNCTION_18_8();
  MEMORY[0x1E0C80A78](v5, v6);
  OUTLINED_FUNCTION_86_3();
  OUTLINED_FUNCTION_74_5(v7);
  OUTLINED_FUNCTION_8_9();
}

void sub_1B253FD40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v7 - 144) = v0;
  *(_QWORD *)(v7 - 136) = v5;
  *(_QWORD *)(v7 - 128) = v2;
  *(_QWORD *)(v7 - 120) = v1;
  *(_QWORD *)(v7 - 208) = v1;
  *(_QWORD *)(v7 - 112) = v6;
  *(_QWORD *)(v7 - 104) = v3;
  *(_QWORD *)(v7 - 96) = v4;
  OUTLINED_FUNCTION_8_9();
}

void sub_1B253FD5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v7 - 144) = v0;
  *(_QWORD *)(v7 - 136) = v5;
  *(_QWORD *)(v7 - 128) = v1;
  *(_QWORD *)(v7 - 120) = v4;
  *(_QWORD *)(v7 - 240) = v4;
  *(_QWORD *)(v7 - 112) = v6;
  *(_QWORD *)(v7 - 104) = v2;
  *(_QWORD *)(v7 - 96) = v3;
  OUTLINED_FUNCTION_6_10();
}

void sub_1B253FD78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)(v12 - 168) = a4;
  *(_QWORD *)(v12 - 160) = v11;
  *(_QWORD *)(v12 - 176) = v6;
  v13 = OUTLINED_FUNCTION_0_4();
  MEMORY[0x1E0C80A78](v13, v14);
  OUTLINED_FUNCTION_29_7();
  *(_QWORD *)(v12 - 200) = v15;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v16, v17);
  *(_QWORD *)(v12 - 144) = v4;
  *(_QWORD *)(v12 - 136) = v9;
  *(_QWORD *)(v12 - 128) = v5;
  *(_QWORD *)(v12 - 120) = v10;
  *(_QWORD *)(v12 - 112) = v7;
  *(_QWORD *)(v12 - 104) = v8;
  type metadata accessor for ZipStateMachine.State();
}

uint64_t sub_1B253FDE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;

  v10 = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_18_8();
  MEMORY[0x1E0C80A78](v11, v12);
  OUTLINED_FUNCTION_817((uint64_t)&a9 - v13, *(_QWORD *)(v9 - 152), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16));
  v14 = OUTLINED_FUNCTION_101_4();
  return ((uint64_t (*)(void))((char *)&loc_1B253FE30 + *((int *)qword_1B25403F8 + v14)))();
}

void sub_1B253FE40()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  void (*v12)(_QWORD *);
  void (*v13)(uint64_t);
  uint64_t v14;
  void (*v15)(_QWORD *, char *);
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;

  *(_QWORD *)(v3 - 200) = *v0;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EEFD9CA0);
  v4 = OUTLINED_FUNCTION_33_7();
  v5 = v2;
  v6 = v4;
  v7 = (char *)v0 + *(int *)(v4 + 48);
  v8 = (_QWORD *)((char *)v1 + *(int *)(v5 + 48));
  *(_QWORD *)(v3 - 208) = v5;
  v9 = *(int *)(v5 + 64);
  v10 = (_QWORD *)((char *)v1 + v9);
  v11 = &v7[v9];
  v12 = *(void (**)(_QWORD *))(*(_QWORD *)(*(_QWORD *)(v3 - 160) - 8) + 32);
  *(_QWORD *)(v3 - 216) = v12;
  v12(v1);
  v13 = *(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 - 176) - 8) + 32);
  v14 = OUTLINED_FUNCTION_92_5();
  v13(v14);
  v15 = *(void (**)(_QWORD *, char *))(*(_QWORD *)(*(_QWORD *)(v3 - 168) - 8) + 32);
  v15(v10, v11);
  OUTLINED_FUNCTION_96_4();
  OUTLINED_FUNCTION_43_5();
  v16 = *(_QWORD *)(v3 - 192);
  if (v16 == 2)
  {
    v17 = v10;
    *v10 = *(_QWORD *)(v3 - 184);
  }
  else if (v16 == 1)
  {
    *v8 = *(_QWORD *)(v3 - 184);
    v17 = v10;
  }
  else
  {
    if (v16)
    {
      swift_release();
      __break(1u);
      JUMPOUT(0x1B25403F8);
    }
    v17 = v10;
    *v1 = *(_QWORD *)(v3 - 184);
  }
  OUTLINED_FUNCTION_96_4();
  v18 = (char *)v10 + *(int *)(v6 + 48);
  v19 = *(_QWORD *)(v3 - 208);
  *v10 = *(_QWORD *)(v3 - 200);
  v20 = &v18[*(int *)(v19 + 48)];
  v21 = &v18[*(int *)(v19 + 64)];
  (*(void (**)(void))(v3 - 216))();
  ((void (*)(char *, _QWORD *, _QWORD))v13)(v20, v8, *(_QWORD *)(v3 - 176));
  ((void (*)(char *, _QWORD *, _QWORD))v15)(v21, v17, *(_QWORD *)(v3 - 168));
  OUTLINED_FUNCTION_235_1();
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_7_1();
}

void sub_1B254040C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  OUTLINED_FUNCTION_59_0();
  v48 = OUTLINED_FUNCTION_64_7();
  v49 = sub_1B25CD108();
  OUTLINED_FUNCTION_37_6(*(_QWORD *)(v49 - 8));
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_29_7();
  OUTLINED_FUNCTION_2_6();
  MEMORY[0x1E0C80A78](v2, v3);
  OUTLINED_FUNCTION_89_4();
  OUTLINED_FUNCTION_2_6();
  MEMORY[0x1E0C80A78](v4, v5);
  OUTLINED_FUNCTION_752();
  OUTLINED_FUNCTION_74_5(v6);
  OUTLINED_FUNCTION_37_6(*(_QWORD *)(v48 - 8));
  MEMORY[0x1E0C80A78](v7, v8);
  OUTLINED_FUNCTION_29_7();
  OUTLINED_FUNCTION_2_6();
  MEMORY[0x1E0C80A78](v9, v10);
  OUTLINED_FUNCTION_752();
  OUTLINED_FUNCTION_74_5(v11);
  v12 = OUTLINED_FUNCTION_64_7();
  OUTLINED_FUNCTION_37_6(*(_QWORD *)(v12 - 8));
  MEMORY[0x1E0C80A78](v13, v14);
  OUTLINED_FUNCTION_29_7();
  OUTLINED_FUNCTION_2_6();
  MEMORY[0x1E0C80A78](v15, v16);
  OUTLINED_FUNCTION_89_4();
  OUTLINED_FUNCTION_2_6();
  MEMORY[0x1E0C80A78](v17, v18);
  OUTLINED_FUNCTION_752();
  OUTLINED_FUNCTION_121_3();
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v19, v20);
  OUTLINED_FUNCTION_29_7();
  OUTLINED_FUNCTION_2_6();
  MEMORY[0x1E0C80A78](v21, v22);
  OUTLINED_FUNCTION_89_4();
  OUTLINED_FUNCTION_2_6();
  MEMORY[0x1E0C80A78](v23, v24);
  OUTLINED_FUNCTION_89_4();
  OUTLINED_FUNCTION_2_6();
  MEMORY[0x1E0C80A78](v25, v26);
  OUTLINED_FUNCTION_89_4();
  OUTLINED_FUNCTION_2_6();
  MEMORY[0x1E0C80A78](v27, v28);
  OUTLINED_FUNCTION_752();
  OUTLINED_FUNCTION_74_5(v29);
  v30 = OUTLINED_FUNCTION_64_7();
  OUTLINED_FUNCTION_37_6(*(_QWORD *)(v30 - 8));
  MEMORY[0x1E0C80A78](v31, v32);
  OUTLINED_FUNCTION_29_7();
  OUTLINED_FUNCTION_2_6();
  MEMORY[0x1E0C80A78](v33, v34);
  OUTLINED_FUNCTION_89_4();
  OUTLINED_FUNCTION_2_6();
  MEMORY[0x1E0C80A78](v35, v36);
  OUTLINED_FUNCTION_752();
  OUTLINED_FUNCTION_122_3();
  v37 = sub_1B25CD108();
  MEMORY[0x1E0C80A78](v37, v38);
  OUTLINED_FUNCTION_29_7();
  OUTLINED_FUNCTION_2_6();
  MEMORY[0x1E0C80A78](v39, v40);
  OUTLINED_FUNCTION_89_4();
  OUTLINED_FUNCTION_2_6();
  MEMORY[0x1E0C80A78](v41, v42);
  OUTLINED_FUNCTION_89_4();
  OUTLINED_FUNCTION_2_6();
  MEMORY[0x1E0C80A78](v43, v44);
  OUTLINED_FUNCTION_89_4();
  OUTLINED_FUNCTION_2_6();
  MEMORY[0x1E0C80A78](v45, v46);
  OUTLINED_FUNCTION_752();
  OUTLINED_FUNCTION_74_5(v47);
  OUTLINED_FUNCTION_8_9();
}

void sub_1B254073C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v7 - 144) = v6;
  *(_QWORD *)(v7 - 136) = v4;
  *(_QWORD *)(v7 - 128) = v2;
  *(_QWORD *)(v7 - 120) = v1;
  *(_QWORD *)(v7 - 192) = v1;
  *(_QWORD *)(v7 - 112) = v5;
  *(_QWORD *)(v7 - 104) = v3;
  *(_QWORD *)(v7 - 96) = v0;
  type metadata accessor for ZipStateMachine.State.Upstream();
}

void sub_1B2540764()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v6 - 144) = v5;
  *(_QWORD *)(v6 - 136) = v3;
  v7 = *(_QWORD *)(v6 - 184);
  *(_QWORD *)(v6 - 128) = v1;
  *(_QWORD *)(v6 - 120) = v7;
  *(_QWORD *)(v6 - 112) = v4;
  *(_QWORD *)(v6 - 104) = v2;
  *(_QWORD *)(v6 - 96) = v0;
  OUTLINED_FUNCTION_6_10();
}

void sub_1B2540780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v12 - 256) = v5;
  *(_QWORD *)(v12 - 232) = v4;
  *(_QWORD *)(v12 - 280) = a4;
  *(_QWORD *)(v12 - 216) = OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_18_8();
  MEMORY[0x1E0C80A78](v13, v14);
  OUTLINED_FUNCTION_86_3();
  *(_QWORD *)(v12 - 168) = v15;
  *(_QWORD *)(v12 - 272) = v11;
  *(_QWORD *)(v12 - 144) = v11;
  *(_QWORD *)(v12 - 136) = v9;
  *(_QWORD *)(v12 - 304) = v9;
  *(_QWORD *)(v12 - 296) = v7;
  *(_QWORD *)(v12 - 128) = v7;
  *(_QWORD *)(v12 - 120) = v10;
  *(_QWORD *)(v12 - 352) = v10;
  *(_QWORD *)(v12 - 344) = v8;
  *(_QWORD *)(v12 - 112) = v8;
  *(_QWORD *)(v12 - 104) = v6;
  *(_QWORD *)(v12 - 288) = v6;
  OUTLINED_FUNCTION_67_6();
}

uint64_t sub_1B2540804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  void (*v29)(void);
  uint64_t v30;
  unsigned int EnumCaseMultiPayload;

  v13 = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_18_8();
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (char *)&a9 - v16;
  v18 = *(_QWORD *)(v11 - 160);
  v19 = OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_37_6(*(_QWORD *)(v19 - 8));
  MEMORY[0x1E0C80A78](v20, v21);
  OUTLINED_FUNCTION_29_7();
  OUTLINED_FUNCTION_2_6();
  MEMORY[0x1E0C80A78](v22, v23);
  v25 = (char *)&a9 - v24;
  *(_QWORD *)(v11 - 368) = v9;
  v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  v27 = *(_QWORD *)(v11 - 240);
  *(_QWORD *)(v11 - 248) = v10;
  *(_QWORD *)(v11 - 240) = v26;
  OUTLINED_FUNCTION_519((uint64_t)&a9 - v24, v27, v26);
  (*(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v11 - 208) + 16))(&v25[*(int *)(v19 + 48)], *(_QWORD *)(v11 - 312), v18);
  OUTLINED_FUNCTION_83_3();
  v29 = *(void (**)(void))(v28 + 16);
  *(_QWORD *)(v11 - 400) = v30;
  v29();
  OUTLINED_FUNCTION_310_0((uint64_t)v17, *(_QWORD *)(v11 - 176), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16));
  *(_QWORD *)(v11 - 224) = a1;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)&loc_1B2540914 + *((int *)qword_1B25417B0 + EnumCaseMultiPayload)))();
}

void sub_1B2540924()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(void);
  uint64_t v18;
  void (*v19)(uint64_t);
  void (*v20)(uint64_t, char *);
  void (*v21)(_QWORD, void (*)(uint64_t, uint64_t, uint64_t));
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(void);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(_QWORD);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  void (*v48)(_QWORD);
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  void (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int EnumTagSinglePayload;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  void (*v75)(uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t (*v89)(void);
  char v90;
  uint64_t (*v91)(uint64_t, uint64_t);
  uint64_t v92;
  void (*v93)(uint64_t, uint64_t, uint64_t);
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t (*v101)(uint64_t, uint64_t, uint64_t);
  _QWORD *v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  _QWORD *v111;

  *(_QWORD *)(v7 - 608) = v0;
  *(_QWORD *)(v7 - 600) = *v6;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EEFD9CA0);
  OUTLINED_FUNCTION_95_4();
  *(_QWORD *)(v7 - 392) = v1;
  *(_QWORD *)(v7 - 312) = v3;
  *(_QWORD *)(v7 - 648) = OUTLINED_FUNCTION_0_4();
  sub_1B25CD108();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED36D060);
  *(_QWORD *)(v7 - 656) = OUTLINED_FUNCTION_104_3();
  v8 = sub_1B25CCD84();
  *(_QWORD *)(v7 - 672) = v0;
  v9 = *(_QWORD *)(v7 - 216);
  *(_QWORD *)(v7 - 664) = v8;
  v10 = OUTLINED_FUNCTION_1_4();
  v11 = (char *)v6 + *(int *)(v10 + 48);
  *(_QWORD *)(v7 - 640) = v10;
  *(_QWORD *)(v7 - 616) = *(_QWORD *)((char *)v6 + *(int *)(v10 + 64));
  v12 = *(_QWORD *)(v7 - 168);
  v13 = v12 + *(int *)(v9 + 48);
  v14 = *(int *)(v9 + 64);
  v15 = v12 + v14;
  v16 = &v11[v14];
  OUTLINED_FUNCTION_77_4();
  v17();
  OUTLINED_FUNCTION_77_4();
  *(_QWORD *)(v7 - 376) = v13;
  v18 = OUTLINED_FUNCTION_128_2();
  v19(v18);
  OUTLINED_FUNCTION_77_4();
  *(_QWORD *)(v7 - 528) = v15;
  v20(v15, v16);
  v21 = *(void (**)(_QWORD, void (*)(uint64_t, uint64_t, uint64_t)))(v5 + 8);
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 - 224);
  v21(*(_QWORD *)(v7 - 176), v22);
  swift_storeEnumTagMultiPayload();
  v23 = *(_QWORD *)(v7 - 328);
  v24 = v23 + *(int *)(v2 + 48);
  v25 = v23 + *(int *)(v2 + 64);
  v26 = *(void (**)(void))(v7 - 240);
  ((void (*)(uint64_t, uint64_t, _QWORD))v26)(v23, v4, *(_QWORD *)(v7 - 248));
  OUTLINED_FUNCTION_12_7(v7 - 56);
  OUTLINED_FUNCTION_109_4(v7 - 136);
  OUTLINED_FUNCTION_118_0(v23, 1, *(_QWORD *)(v7 - 200));
  *(_QWORD *)(v7 - 624) = v21;
  *(_QWORD *)(v7 - 632) = v24;
  if (v47)
  {
    v27 = OUTLINED_FUNCTION_116_3();
    OUTLINED_FUNCTION_118_0(v27, v28, *(_QWORD *)(v7 - 192));
    v29 = *(_QWORD *)(v7 - 184);
    v30 = *(_QWORD *)(v7 - 208);
    if (!v47)
    {
      v56 = *(_QWORD *)(v7 - 544);
      v57 = *(_QWORD *)(v7 - 160);
      OUTLINED_FUNCTION_109_4(v7 - 56);
      OUTLINED_FUNCTION_118_0(v25, 1, v29);
      if (!v58)
      {
        OUTLINED_FUNCTION_80_7();
        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v7 - 472) + 8))(v56, *(_QWORD *)(v7 - 192));
LABEL_45:
        __break(1u);
        JUMPOUT(0x1B25417B0);
      }
      OUTLINED_FUNCTION_11_5();
      v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 472) + 32);
      v60 = *(_QWORD *)(v7 - 568);
      v61 = *(_QWORD *)(v7 - 192);
      v59(v60, v56, v61);
      v62 = *(_QWORD *)(v7 - 376) + *(int *)(*(_QWORD *)(v7 - 232) + 76);
      v63 = *(_QWORD *)(v7 - 576);
      v22(v63, v62, v57);
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v63, 1, v61);
      OUTLINED_FUNCTION_90_4(v63);
      v43 = *(_QWORD *)(v7 - 408);
      v44 = *(_QWORD *)(v7 - 248);
      if (EnumTagSinglePayload == 1)
      {
        OUTLINED_FUNCTION_90_4(v62);
        v59(v62, v60, v61);
        OUTLINED_FUNCTION_737();
        __swift_storeEnumTagSinglePayload(v65, v66, v67, v61);
        v41 = *(_QWORD *)(v7 - 200);
        goto LABEL_18;
      }
LABEL_42:
      __break(1u);
      JUMPOUT(0x1B2541760);
    }
    OUTLINED_FUNCTION_118_0(v25, 1, *(_QWORD *)(v7 - 184));
    if (v47)
    {
      OUTLINED_FUNCTION_80_7();
      goto LABEL_45;
    }
    OUTLINED_FUNCTION_11_5();
    v31 = *(void (**)(_QWORD))(*(_QWORD *)(v7 - 520) + 32);
    ((void (*)(_QWORD, uint64_t, uint64_t))v31)(*(_QWORD *)(v7 - 560), v25, v29);
    OUTLINED_FUNCTION_114_4();
    v34 = *(_QWORD *)(v32 - 256) + v33;
    v35 = *(_QWORD *)(v7 - 552);
    v22(v35, v34, *(_QWORD *)(v7 - 152));
    v36 = __swift_getEnumTagSinglePayload(v35, 1, v29);
    OUTLINED_FUNCTION_83_3();
    OUTLINED_FUNCTION_90_4(v35);
    if (v36 == 1)
    {
      OUTLINED_FUNCTION_90_4(v34);
      v37 = OUTLINED_FUNCTION_92_5();
      v31(v37);
      OUTLINED_FUNCTION_737();
      __swift_storeEnumTagSinglePayload(v38, v39, v40, v29);
      v41 = *(_QWORD *)(v7 - 200);
      v57 = *(_QWORD *)(v7 - 160);
      v42 = *(_QWORD *)(v7 - 384);
      v43 = *(_QWORD *)(v7 - 408);
      v44 = *(_QWORD *)(v7 - 248);
      goto LABEL_19;
    }
  }
  else
  {
    v45 = v24;
    v46 = *(_QWORD *)(v7 - 488);
    OUTLINED_FUNCTION_133_2();
    v26();
    OUTLINED_FUNCTION_118_0(v45, 1, *(_QWORD *)(v7 - 192));
    v30 = *(_QWORD *)(v7 - 208);
    if (!v47 || (OUTLINED_FUNCTION_118_0(v25, 1, *(_QWORD *)(v7 - 184)), v57 = *(_QWORD *)(v7 - 160), !v47))
    {
      OUTLINED_FUNCTION_80_7();
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v7 - 360) + 8))(v46, *(_QWORD *)(v7 - 200));
      goto LABEL_45;
    }
    OUTLINED_FUNCTION_11_5();
    v48 = *(void (**)(_QWORD))(*(_QWORD *)(v7 - 360) + 32);
    v41 = *(_QWORD *)(v7 - 200);
    ((void (*)(_QWORD, uint64_t, uint64_t))v48)(*(_QWORD *)(v7 - 496), v46, v41);
    v44 = *(_QWORD *)(v7 - 248);
    v49 = *(_QWORD *)(v7 - 168) + *(int *)(*(_QWORD *)(v7 - 256) + 76);
    v50 = *(_QWORD *)(v7 - 504);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 - 240))(v50, v49, v44);
    v51 = __swift_getEnumTagSinglePayload(v50, 1, v41);
    OUTLINED_FUNCTION_81_2(v50);
    v43 = *(_QWORD *)(v7 - 408);
    if (v51 == 1)
    {
      OUTLINED_FUNCTION_81_2(v49);
      v52 = OUTLINED_FUNCTION_92_5();
      v48(v52);
      OUTLINED_FUNCTION_737();
      __swift_storeEnumTagSinglePayload(v53, v54, v55, v41);
LABEL_18:
      v42 = *(_QWORD *)(v7 - 384);
LABEL_19:
      v68 = *(_QWORD *)(v30 + 8);
      OUTLINED_FUNCTION_57_4(*(_QWORD *)(v7 - 632));
      v69 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 368) + 8);
      v69(*(_QWORD *)(v7 - 328), v44);
      v70 = *(_QWORD *)(v7 - 168) + *(int *)(*(_QWORD *)(v7 - 256) + 76);
      v71 = *(_QWORD *)(v7 - 416);
      v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 - 240);
      v72(v71, v70, v44);
      OUTLINED_FUNCTION_118_0(v71, 1, v41);
      if (v47)
      {
        v69(v71, v44);
        v73 = v44;
        v74 = *(_QWORD *)(v7 - 360);
      }
      else
      {
        *(_QWORD *)(v7 - 208) = v68;
        v74 = *(_QWORD *)(v7 - 360);
        v75 = *(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 32);
        v76 = v71;
        v77 = *(_QWORD *)(v7 - 464);
        *(_QWORD *)(v7 - 256) = v75;
        v75(v77, v76, v41);
        OUTLINED_FUNCTION_84_5();
        v78 = *(_QWORD *)(v7 - 512);
        OUTLINED_FUNCTION_12_7(v7 - 56);
        OUTLINED_FUNCTION_118_0(v78, 1, *(_QWORD *)(v7 - 192));
        if (!v79)
        {
          v88 = *(_QWORD *)(v7 - 472);
          OUTLINED_FUNCTION_133_2();
          OUTLINED_FUNCTION_49_5(v89);
          OUTLINED_FUNCTION_114_4();
          OUTLINED_FUNCTION_12_7(v7 - 136);
          OUTLINED_FUNCTION_118_0(v43, 1, *(_QWORD *)(v7 - 184));
          if (!v90)
          {
            v101 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 520) + 32);
            *(_QWORD *)(v7 - 152) = v101;
            OUTLINED_FUNCTION_424(*(_QWORD *)(v7 - 584), v43, v101);
            v102 = *(_QWORD **)(v7 - 176);
            OUTLINED_FUNCTION_47_8((uint64_t)v102);
            v103 = *(_QWORD *)(v7 - 216);
            v104 = (_QWORD *)((char *)v102 + *(int *)(OUTLINED_FUNCTION_33_7() + 48));
            *v102 = *(_QWORD *)(v7 - 600);
            *(_QWORD *)(v7 - 208) = (char *)v104 + *(int *)(v103 + 48);
            *(_QWORD *)(v7 - 160) = (char *)v104 + *(int *)(v103 + 64);
            v105 = **(_QWORD **)(v7 - 168);
            __swift_storeEnumTagSinglePayload(*(_QWORD *)(v7 - 440), 1, 1, v41);
            sub_1B253EF24(v105, v104);
          }
          OUTLINED_FUNCTION_156(v42, *(uint64_t (**)(uint64_t, uint64_t))(v88 + 8));
          v74 = *(_QWORD *)(v7 - 360);
          OUTLINED_FUNCTION_615(*(_QWORD *)(v7 - 464), *(uint64_t (**)(uint64_t, uint64_t))(v74 + 8));
          OUTLINED_FUNCTION_65_6();
          OUTLINED_FUNCTION_20_7(v43, v91);
          v73 = *(_QWORD *)(v7 - 248);
          v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 - 240);
          v80 = *(_QWORD *)(v7 - 456);
          v72(v80, v70, v73);
LABEL_26:
          OUTLINED_FUNCTION_118_0(v80, 1, v41);
          v81 = *(_QWORD *)(v7 - 448);
          if (v47)
          {
            v69(v80, v73);
            v82 = v73;
          }
          else
          {
            v83 = v80;
            v84 = *(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 32);
            v85 = *(_QWORD *)(v7 - 480);
            v84(v85, v83, v41);
            OUTLINED_FUNCTION_84_5();
            OUTLINED_FUNCTION_12_7(v7 - 56);
            v86 = *(_QWORD *)(v7 - 192);
            OUTLINED_FUNCTION_118_0(v81, 1, v86);
            if (v87)
            {
              OUTLINED_FUNCTION_615(v85, *(uint64_t (**)(uint64_t, uint64_t))(v74 + 8));
              OUTLINED_FUNCTION_57_4(v81);
            }
            else
            {
              *(_QWORD *)(v7 - 208) = v84;
              v92 = *(_QWORD *)(v7 - 472);
              v93 = *(void (**)(uint64_t, uint64_t, uint64_t))(v92 + 32);
              v94 = *(_QWORD *)(v7 - 536);
              *(_QWORD *)(v7 - 240) = v93;
              v93(v94, v81, v86);
              v95 = *(_QWORD **)(v7 - 176);
              if (*(_QWORD *)((char *)v95 + *(int *)(*(_QWORD *)(v7 - 592) + 68)) == 2)
              {
                OUTLINED_FUNCTION_47_8(*(_QWORD *)(v7 - 176));
                v96 = *(_QWORD *)(v7 - 216);
                v97 = OUTLINED_FUNCTION_33_7();
                v98 = v95;
                v99 = (_QWORD *)((char *)v95 + *(int *)(v97 + 48));
                *v98 = *(_QWORD *)(v7 - 600);
                *(_QWORD *)(v7 - 152) = (char *)v99 + *(int *)(v96 + 64);
                v100 = **(_QWORD **)(v7 - 168);
                __swift_storeEnumTagSinglePayload(*(_QWORD *)(v7 - 440), 1, 1, v41);
                OUTLINED_FUNCTION_129_2(v100, v99);
              }
              (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v94, v86);
              OUTLINED_FUNCTION_615(v85, *(uint64_t (**)(uint64_t, uint64_t))(v74 + 8));
            }
            v82 = *(_QWORD *)(v7 - 248);
          }
          v106 = *(_QWORD *)(v7 - 600);
          v107 = *(_QWORD **)(v7 - 176);
          OUTLINED_FUNCTION_47_8((uint64_t)v107);
          v108 = *(_QWORD *)(v7 - 640);
          v109 = (char *)v107 + *(int *)(v108 + 48);
          *(_QWORD *)(v7 - 208) = *(int *)(v108 + 64);
          *v107 = v106;
          *(_QWORD *)(v7 - 240) = &v109[*(int *)(*(_QWORD *)(v7 - 216) + 64)];
          v72(*(_QWORD *)(v7 - 440), v70, v82);
          v110 = OUTLINED_FUNCTION_235_1();
          OUTLINED_FUNCTION_108_5(v110, v111);
        }
        OUTLINED_FUNCTION_615(v77, *(uint64_t (**)(uint64_t, uint64_t))(v74 + 8));
        (*(void (**)(uint64_t, uint64_t))(v7 - 208))(v78, v57);
        v73 = *(_QWORD *)(v7 - 248);
        v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 - 240);
      }
      v80 = *(_QWORD *)(v7 - 456);
      v72(v80, v70, v73);
      goto LABEL_26;
    }
    __break(1u);
  }
  __break(1u);
  goto LABEL_42;
}

void sub_1B25417C4()
{
  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_53_4();
  OUTLINED_FUNCTION_28_8();
}

void sub_1B2541828()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = OUTLINED_FUNCTION_53_4();
  *(_QWORD *)(v5 - 144) = v1;
  *(_QWORD *)(v5 - 136) = v2;
  *(_QWORD *)(v5 - 128) = v3;
  *(_QWORD *)(v5 - 120) = v6;
  *(_QWORD *)(v5 - 216) = v6;
  *(_QWORD *)(v5 - 112) = v4;
  *(_QWORD *)(v5 - 104) = v0;
  OUTLINED_FUNCTION_28_8();
}

void sub_1B2541854()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = OUTLINED_FUNCTION_53_4();
  *(_QWORD *)(v6 - 144) = v2;
  *(_QWORD *)(v6 - 136) = v3;
  *(_QWORD *)(v6 - 128) = v4;
  *(_QWORD *)(v6 - 120) = v7;
  *(_QWORD *)(v6 - 112) = v5;
  *(_QWORD *)(v6 - 104) = v0;
  *(_QWORD *)(v6 - 96) = v1;
  OUTLINED_FUNCTION_6_10();
}

void sub_1B2541884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  *(_QWORD *)(v16 - 184) = a4;
  *(_QWORD *)(v16 - 176) = v12;
  v17 = OUTLINED_FUNCTION_0_4();
  MEMORY[0x1E0C80A78](v17, v18);
  *(_QWORD *)(v16 - 192) = (char *)&a9 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v20, v21);
  *(_QWORD *)(v16 - 168) = (char *)&a9 - v22;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v23, v24);
  OUTLINED_FUNCTION_89_4();
  *(_QWORD *)(v16 - 200) = v25;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v26, v27);
  OUTLINED_FUNCTION_752();
  *(_QWORD *)(v16 - 152) = v28;
  *(_QWORD *)(v16 - 144) = v11;
  *(_QWORD *)(v16 - 136) = v13;
  *(_QWORD *)(v16 - 128) = v14;
  *(_QWORD *)(v16 - 120) = v15;
  *(_QWORD *)(v16 - 112) = v9;
  *(_QWORD *)(v16 - 104) = v10;
  type metadata accessor for ZipStateMachine.State();
}

uint64_t sub_1B2541930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int EnumCaseMultiPayload;

  v10 = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_18_8();
  MEMORY[0x1E0C80A78](v11, v12);
  OUTLINED_FUNCTION_311((uint64_t)&a9 - v13, *(_QWORD *)(v9 - 160), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16));
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)&loc_1B2541984 + *((int *)qword_1B2541DB8 + EnumCaseMultiPayload)))();
}

void sub_1B254199C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  _QWORD *v34;
  void (*v35)(uint64_t *, _QWORD, uint64_t);
  uint64_t v36;
  void (*v37)(void);
  uint64_t v38;
  void (*v39)(_QWORD *, uint64_t, uint64_t);
  uint64_t (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  _QWORD *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  void (*v49)(_QWORD *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  *(_QWORD *)(v5 - 296) = v4;
  *(_QWORD *)(v5 - 304) = *v0;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EEFD9CA0);
  *(_QWORD *)(v5 - 240) = v2;
  sub_1B25CD108();
  OUTLINED_FUNCTION_55_5();
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_16_7();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED36D060);
  sub_1B25CD6D8();
  OUTLINED_FUNCTION_44_4();
  v6 = OUTLINED_FUNCTION_1_4();
  v7 = (uint64_t)v0 + *(int *)(v6 + 48);
  v8 = *(_QWORD *)((char *)v0 + *(int *)(v6 + 64));
  v9 = *(int *)(v3 + 48);
  v10 = *(_QWORD *)(v5 - 152);
  v11 = v10 + v9;
  *(_QWORD *)(v5 - 216) = v10 + v9;
  v12 = *(int *)(v3 + 64);
  v13 = v10 + v12;
  *(_QWORD *)(v5 - 232) = v8;
  *(_QWORD *)(v5 - 224) = v10 + v12;
  v14 = v7 + v9;
  v15 = v7 + v12;
  v16 = *(_QWORD *)(v5 - 176);
  v17 = *(_QWORD *)(v16 - 8);
  OUTLINED_FUNCTION_71_6(v10, v7, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 32));
  v18 = *(_QWORD *)(v1 - 8);
  *(_QWORD *)(v5 - 208) = v18;
  OUTLINED_FUNCTION_286_0(v11, v14, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 32));
  v19 = *(_QWORD *)(v5 - 184);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 32);
  v22 = v3;
  v23 = v20;
  *(_QWORD *)(v5 - 264) = v20;
  OUTLINED_FUNCTION_293_0(v13, v15, v21);
  OUTLINED_FUNCTION_98_4(*(_QWORD *)(v5 - 160), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 240) + 8));
  OUTLINED_FUNCTION_50_6();
  v24 = *(_QWORD **)(v5 - 200);
  v25 = (char *)v24 + *(int *)(v22 + 48);
  *(_QWORD *)(v5 - 160) = v25;
  v26 = (uint64_t)v24 + *(int *)(v22 + 64);
  *(_QWORD *)(v5 - 240) = v26;
  v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
  *(_QWORD *)(v5 - 272) = v27;
  OUTLINED_FUNCTION_71_6((uint64_t)v24, *(_QWORD *)(v5 - 152), v27);
  OUTLINED_FUNCTION_100_3(*(_QWORD *)(*(_QWORD *)(v5 - 208) + 16));
  v28 = (uint64_t)v25;
  v29 = *(_QWORD *)(v5 - 216);
  OUTLINED_FUNCTION_286_0(v28, v29, v30);
  OUTLINED_FUNCTION_75_7(*(_QWORD *)(v23 + 16));
  OUTLINED_FUNCTION_293_0(v26, *(_QWORD *)(v5 - 224), v31);
  v32 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8);
  *(_QWORD *)(v5 - 256) = *v24;
  *(_QWORD *)(v5 - 248) = v32;
  OUTLINED_FUNCTION_82_6((uint64_t)v24, v32);
  v33 = *(_QWORD *)(v5 - 168);
  v34 = (_QWORD *)(v33 + *(int *)(v22 + 48));
  v35 = (void (*)(uint64_t *, _QWORD, uint64_t))(v33 + *(int *)(v22 + 64));
  *(_QWORD *)(v5 - 200) = v35;
  v36 = *(_QWORD *)(v5 - 152);
  v37 = *(void (**)(void))(v5 - 272);
  v37();
  v38 = v29;
  v39 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v5 - 280);
  v39(v34, v38, v1);
  OUTLINED_FUNCTION_109_4(v5 - 32);
  *(_QWORD *)(v5 - 320) = *v34;
  v40 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 208) + 8);
  *(_QWORD *)(v5 - 208) = v40;
  OUTLINED_FUNCTION_249_0((uint64_t)v34, v40);
  v41 = *(_QWORD *)(v5 - 192);
  v42 = (_QWORD *)(v41 + *(int *)(v22 + 48));
  *(_QWORD *)(v5 - 312) = v22;
  v43 = (uint64_t *)(v41 + *(int *)(v22 + 64));
  ((void (*)(uint64_t, uint64_t, uint64_t))v37)(v41, v36, v16);
  v39(v42, *(_QWORD *)(v5 - 216), v1);
  v35(v43, *(_QWORD *)(v5 - 224), v19);
  v44 = *v43;
  OUTLINED_FUNCTION_83_3();
  v46 = *(_QWORD *)(v45 + 8);
  OUTLINED_FUNCTION_93_4((uint64_t)v43);
  v47 = v42;
  v48 = *(_QWORD *)(v5 - 256);
  v49 = *(void (**)(_QWORD *, uint64_t))(v5 - 208);
  v49(v47, v1);
  v50 = v41;
  v51 = *(_QWORD *)(v5 - 248);
  ((void (*)(uint64_t, uint64_t))v51)(v50, v16);
  OUTLINED_FUNCTION_93_4(*(_QWORD *)(v5 - 200));
  OUTLINED_FUNCTION_81_2(*(_QWORD *)(v5 - 168));
  OUTLINED_FUNCTION_93_4(*(_QWORD *)(v5 - 240));
  v52 = ((uint64_t (*)(_QWORD, uint64_t))v49)(*(_QWORD *)(v5 - 160), v1);
  if (!v48)
  {
    v56 = MEMORY[0x1E0DEE9D8];
    OUTLINED_FUNCTION_102_3();
    v59 = *(_QWORD *)(v5 - 320);
    if (!v59)
      goto LABEL_12;
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_10_9(v52, v53, v54, MEMORY[0x1E0DEE9D8]);
  v56 = v55;
  OUTLINED_FUNCTION_35_8();
  if (v58)
  {
    OUTLINED_FUNCTION_4_8(v57);
    v56 = v65;
  }
  OUTLINED_FUNCTION_102_3();
  v59 = *(_QWORD *)(v5 - 320);
  OUTLINED_FUNCTION_117_3();
  *(_QWORD *)(v60 + 32) = v48;
  if (v59)
  {
LABEL_7:
    if ((OUTLINED_FUNCTION_94_6() & 1) == 0)
    {
      OUTLINED_FUNCTION_7_8(0, *(_QWORD *)(v56 + 16) + 1);
      v56 = v66;
    }
    v61 = *(_QWORD *)(v56 + 16);
    OUTLINED_FUNCTION_35_8();
    if (v58)
    {
      OUTLINED_FUNCTION_4_8(v62);
      v56 = v67;
    }
    *(_QWORD *)(v56 + 16) = v46;
    *(_QWORD *)(v56 + 8 * v61 + 32) = v59;
  }
LABEL_12:
  if (v44)
  {
    if ((OUTLINED_FUNCTION_94_6() & 1) == 0)
      OUTLINED_FUNCTION_7_8(0, *(_QWORD *)(v56 + 16) + 1);
    OUTLINED_FUNCTION_35_8();
    if (v58)
      OUTLINED_FUNCTION_4_8(v63);
    OUTLINED_FUNCTION_117_3();
    *(_QWORD *)(v64 + 32) = v44;
  }
  (*(void (**)(_QWORD, _QWORD))(v51 + 8))(*(_QWORD *)(v5 - 152), v49);
  OUTLINED_FUNCTION_7_1();
}

void sub_1B2541DCC()
{
  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_34_5();
  OUTLINED_FUNCTION_8_9();
}

void sub_1B2541E38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = OUTLINED_FUNCTION_34_5();
  *(_QWORD *)(v5 - 144) = v1;
  *(_QWORD *)(v5 - 136) = v2;
  *(_QWORD *)(v5 - 128) = v4;
  *(_QWORD *)(v5 - 120) = v6;
  *(_QWORD *)(v5 - 232) = v6;
  *(_QWORD *)(v5 - 112) = v0;
  *(_QWORD *)(v5 - 104) = v3;
  OUTLINED_FUNCTION_13_6();
}

void sub_1B2541E64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_52_7();
  v7 = OUTLINED_FUNCTION_34_5();
  *(_QWORD *)(v6 - 144) = v1;
  *(_QWORD *)(v6 - 136) = v2;
  *(_QWORD *)(v6 - 128) = v5;
  *(_QWORD *)(v6 - 120) = v7;
  *(_QWORD *)(v6 - 112) = v0;
  *(_QWORD *)(v6 - 104) = v4;
  *(_QWORD *)(v6 - 96) = v3;
  OUTLINED_FUNCTION_6_10();
}

#error "1B2541F0C: call analysis failed (funcsize=36)"

uint64_t sub_1B2541F20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;

  v10 = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_18_8();
  MEMORY[0x1E0C80A78](v11, v12);
  OUTLINED_FUNCTION_71_6((uint64_t)&a9 - v13, *(_QWORD *)(v9 - 152), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16));
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)&loc_1B2541F74 + dword_1B25423DC[EnumCaseMultiPayload]))();
}

uint64_t sub_1B2541F90()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, char *);
  uint64_t v20;
  void (*v21)(uint64_t, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  void (*v31)(void);
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  void (*v38)(void);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(void);
  void (*v43)(_QWORD *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  char v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  id v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  *(_QWORD *)(v4 - 248) = *v0;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EEFD9CA0);
  *(_QWORD *)(v4 - 264) = v1;
  OUTLINED_FUNCTION_103_4();
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_16_7();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED36D060);
  sub_1B25CD6D8();
  OUTLINED_FUNCTION_44_4();
  v5 = OUTLINED_FUNCTION_1_4();
  v6 = (char *)v0 + *(int *)(v5 + 48);
  *(_QWORD *)(v4 - 256) = *(_QWORD *)((char *)v0 + *(int *)(v5 + 64));
  v7 = *(int *)(v3 + 48);
  v8 = v2;
  v9 = *(_QWORD *)(v4 - 160);
  v10 = v9 + v7;
  v11 = *(int *)(v3 + 64);
  v12 = v9 + v11;
  *(_QWORD *)(v4 - 240) = v9 + v11;
  *(_QWORD *)(v4 - 232) = v9 + v7;
  v13 = &v6[v7];
  v14 = &v6[v11];
  *(_QWORD *)(v4 - 168) = v3;
  v15 = *(_QWORD *)(v4 - 208);
  OUTLINED_FUNCTION_100_3(*(_QWORD *)(v15 - 8));
  OUTLINED_FUNCTION_817(v9, v17, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 32));
  v18 = *(_QWORD *)(*(_QWORD *)(v4 - 176) - 8);
  v19 = *(void (**)(uint64_t, char *))(v18 + 32);
  *(_QWORD *)(v4 - 304) = v18;
  v19(v10, v13);
  v20 = *(_QWORD *)(v8 - 8);
  v21 = *(void (**)(uint64_t, char *, uint64_t))(v20 + 32);
  *(_QWORD *)(v4 - 296) = v20;
  v22 = v12;
  v23 = v8;
  v21(v22, v14, v8);
  OUTLINED_FUNCTION_65_6();
  OUTLINED_FUNCTION_82_6(*(_QWORD *)(v4 - 152), v24);
  OUTLINED_FUNCTION_50_6();
  v25 = *(uint64_t **)(v4 - 224);
  v26 = (uint64_t)v25 + *(int *)(*(_QWORD *)(v4 - 168) + 48);
  *(_QWORD *)(v4 - 264) = v26;
  *(_QWORD *)(v4 - 272) = (char *)v25 + *(int *)(*(_QWORD *)(v4 - 168) + 64);
  v27 = *(_QWORD *)(v4 - 280);
  OUTLINED_FUNCTION_87_5(*(_QWORD *)(v27 + 16));
  OUTLINED_FUNCTION_817((uint64_t)v25, v9, v28);
  v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
  *(_QWORD *)(v4 - 152) = v29;
  v30 = *(_QWORD *)(v4 - 176);
  OUTLINED_FUNCTION_311(v26, *(_QWORD *)(v4 - 232), v29);
  v31 = *(void (**)(void))(v20 + 16);
  v32 = *(_QWORD *)(v4 - 240);
  OUTLINED_FUNCTION_119_1();
  v31();
  OUTLINED_FUNCTION_75_7(*v25);
  OUTLINED_FUNCTION_100_3(*(_QWORD *)(v27 + 8));
  v33 = *(_QWORD *)(v4 - 168);
  OUTLINED_FUNCTION_204_0((uint64_t)v25, v34);
  v35 = *(_QWORD *)(v4 - 184);
  v36 = (_QWORD *)(v35 + *(int *)(v33 + 48));
  v37 = v35 + *(int *)(v33 + 64);
  *(_QWORD *)(v4 - 224) = v37;
  v38 = *(void (**)(void))(v4 - 312);
  v38();
  OUTLINED_FUNCTION_126_2();
  v39 = v37;
  v40 = v32;
  v41 = v23;
  v42 = v31;
  ((void (*)(uint64_t, uint64_t, uint64_t))v31)(v39, v40, v23);
  *(_QWORD *)(v4 - 320) = *v36;
  v43 = *(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v4 - 304) + 8);
  v44 = v30;
  v43(v36, v30);
  v45 = *(_QWORD *)(v4 - 216);
  v46 = (_QWORD *)(v45 + *(int *)(v33 + 48));
  v47 = (uint64_t *)(v45 + *(int *)(v33 + 64));
  ((void (*)(uint64_t, _QWORD, uint64_t))v38)(v45, *(_QWORD *)(v4 - 160), v15);
  OUTLINED_FUNCTION_126_2();
  ((void (*)(uint64_t *, _QWORD, uint64_t))v42)(v47, *(_QWORD *)(v4 - 240), v41);
  v48 = *v47;
  v49 = *(_QWORD *)(*(_QWORD *)(v4 - 296) + 8);
  OUTLINED_FUNCTION_57_4((uint64_t)v47);
  v50 = v46;
  v51 = *(_QWORD *)(v4 - 288);
  v43(v50, v44);
  v52 = *(void (**)(uint64_t, uint64_t))(v4 - 280);
  v52(v45, v15);
  OUTLINED_FUNCTION_57_4(*(_QWORD *)(v4 - 224));
  v52(*(_QWORD *)(v4 - 184), v15);
  OUTLINED_FUNCTION_57_4(*(_QWORD *)(v4 - 272));
  v53 = ((uint64_t (*)(_QWORD, uint64_t))v43)(*(_QWORD *)(v4 - 264), v44);
  if (v51)
  {
    OUTLINED_FUNCTION_10_9(v53, v54, v55, MEMORY[0x1E0DEE9D8]);
    v57 = v56;
    OUTLINED_FUNCTION_35_8();
    v59 = *(_QWORD *)(v4 - 200);
    if (v60)
    {
      OUTLINED_FUNCTION_4_8(v58);
      v57 = v70;
    }
    v61 = *(void **)(v4 - 192);
    OUTLINED_FUNCTION_117_3();
    *(_QWORD *)(v62 + 32) = v51;
  }
  else
  {
    v57 = MEMORY[0x1E0DEE9D8];
    v59 = *(_QWORD *)(v4 - 200);
    v61 = *(void **)(v4 - 192);
  }
  v63 = *(_QWORD *)(v4 - 320);
  if (v63)
  {
    if ((OUTLINED_FUNCTION_94_6() & 1) == 0)
    {
      OUTLINED_FUNCTION_7_8(0, *(_QWORD *)(v57 + 16) + 1);
      v57 = v71;
    }
    OUTLINED_FUNCTION_35_8();
    if (v60)
    {
      OUTLINED_FUNCTION_4_8(v64);
      v57 = v72;
    }
    OUTLINED_FUNCTION_117_3();
    *(_QWORD *)(v65 + 32) = v63;
  }
  if (v48)
  {
    if ((OUTLINED_FUNCTION_94_6() & 1) == 0)
    {
      OUTLINED_FUNCTION_7_8(0, *(_QWORD *)(v57 + 16) + 1);
      v57 = v73;
    }
    v66 = *(_QWORD *)(v57 + 16);
    OUTLINED_FUNCTION_35_8();
    if (v60)
    {
      OUTLINED_FUNCTION_4_8(v67);
      v57 = v74;
    }
    *(_QWORD *)(v57 + 16) = v49;
    *(_QWORD *)(v57 + 8 * v66 + 32) = v48;
  }
  OUTLINED_FUNCTION_20_7(*(_QWORD *)(v4 - 160), *(uint64_t (**)(uint64_t, uint64_t))(v59 + 8));
  v68 = v61;
  return *(_QWORD *)(v4 - 256);
}

void sub_1B25423F0()
{
  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_52_7();
  OUTLINED_FUNCTION_53_4();
  OUTLINED_FUNCTION_28_8();
}

void sub_1B2542450()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = OUTLINED_FUNCTION_53_4();
  *(_QWORD *)(v5 - 144) = v0;
  *(_QWORD *)(v5 - 136) = v2;
  *(_QWORD *)(v5 - 128) = v3;
  *(_QWORD *)(v5 - 120) = v6;
  *(_QWORD *)(v5 - 232) = v6;
  *(_QWORD *)(v5 - 112) = v1;
  *(_QWORD *)(v5 - 104) = v4;
  OUTLINED_FUNCTION_28_8();
}

void sub_1B254247C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_107_2();
  v7 = OUTLINED_FUNCTION_53_4();
  *(_QWORD *)(v6 - 144) = v0;
  *(_QWORD *)(v6 - 136) = v3;
  *(_QWORD *)(v6 - 128) = v4;
  *(_QWORD *)(v6 - 120) = v7;
  *(_QWORD *)(v6 - 112) = v2;
  *(_QWORD *)(v6 - 104) = v5;
  *(_QWORD *)(v6 - 96) = v1;
  OUTLINED_FUNCTION_6_10();
}

void sub_1B25424A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  *(_QWORD *)(v17 - 184) = v15;
  *(_QWORD *)(v17 - 176) = v11;
  *(_QWORD *)(v17 - 208) = a4;
  v18 = OUTLINED_FUNCTION_0_4();
  *(_QWORD *)(v17 - 160) = v18;
  *(_QWORD *)(v17 - 200) = *(_QWORD *)(v18 - 8);
  OUTLINED_FUNCTION_43_3();
  v21 = MEMORY[0x1E0C80A78](v19, v20);
  MEMORY[0x1E0C80A78](v21, v22);
  OUTLINED_FUNCTION_89_4();
  *(_QWORD *)(v17 - 216) = v23;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v24, v25);
  *(_QWORD *)(v17 - 168) = (char *)&a9 - v26;
  OUTLINED_FUNCTION_42_8();
  v29 = MEMORY[0x1E0C80A78](v27, v28);
  MEMORY[0x1E0C80A78](v29, v30);
  OUTLINED_FUNCTION_752();
  *(_QWORD *)(v17 - 192) = v31;
  *(_QWORD *)(v17 - 144) = v9;
  *(_QWORD *)(v17 - 136) = v13;
  *(_QWORD *)(v17 - 128) = v14;
  *(_QWORD *)(v17 - 120) = v12;
  *(_QWORD *)(v17 - 112) = v16;
  *(_QWORD *)(v17 - 104) = v10;
  type metadata accessor for ZipStateMachine.State();
}

uint64_t sub_1B2542570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;

  v10 = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_18_8();
  MEMORY[0x1E0C80A78](v11, v12);
  OUTLINED_FUNCTION_817((uint64_t)&a9 - v13, *(_QWORD *)(v9 - 152), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16));
  v14 = OUTLINED_FUNCTION_101_4();
  return ((uint64_t (*)(void))((char *)&loc_1B25425BC + *((int *)qword_1B2542DA0 + v14)))();
}

void sub_1B25425CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = OUTLINED_FUNCTION_106_3();
  OUTLINED_FUNCTION_122_3();
  v6 = OUTLINED_FUNCTION_1_4();
  v7 = v3 + *(int *)(v6 + 48);
  v8 = v3 + *(int *)(v6 + 64);
  OUTLINED_FUNCTION_204_0(*(_QWORD *)(v4 - 152), *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_42_9();
  OUTLINED_FUNCTION_20_7(v8, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8));
  OUTLINED_FUNCTION_615(v7, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8));
  OUTLINED_FUNCTION_156(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8));
  OUTLINED_FUNCTION_235_1();
  OUTLINED_FUNCTION_7_1();
}

void sub_1B2542DB4()
{
  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_63_5();
  OUTLINED_FUNCTION_13_6();
}

void sub_1B2542E18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_107_2();
  v7 = OUTLINED_FUNCTION_63_5();
  *(_QWORD *)(v6 - 144) = v4;
  *(_QWORD *)(v6 - 136) = v2;
  *(_QWORD *)(v6 - 128) = v1;
  *(_QWORD *)(v6 - 120) = v7;
  *(_QWORD *)(v6 - 248) = v7;
  *(_QWORD *)(v6 - 112) = v5;
  *(_QWORD *)(v6 - 104) = v0;
  *(_QWORD *)(v6 - 96) = v3;
  OUTLINED_FUNCTION_8_9();
}

void sub_1B2542E40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_52_7();
  v7 = OUTLINED_FUNCTION_63_5();
  *(_QWORD *)(v6 - 144) = v4;
  *(_QWORD *)(v6 - 136) = v2;
  *(_QWORD *)(v6 - 128) = v1;
  *(_QWORD *)(v6 - 120) = v7;
  *(_QWORD *)(v6 - 256) = v7;
  *(_QWORD *)(v6 - 112) = v5;
  *(_QWORD *)(v6 - 104) = v0;
  *(_QWORD *)(v6 - 96) = v3;
  OUTLINED_FUNCTION_6_10();
}

void sub_1B2542E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v12 - 208) = v4;
  *(_QWORD *)(v12 - 200) = v10;
  *(_QWORD *)(v12 - 216) = a4;
  *(_QWORD *)(v12 - 224) = OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_18_8();
  MEMORY[0x1E0C80A78](v13, v14);
  OUTLINED_FUNCTION_86_3();
  *(_QWORD *)(v12 - 232) = v15;
  *(_QWORD *)(v12 - 184) = v9;
  *(_QWORD *)(v12 - 176) = v6;
  *(_QWORD *)(v12 - 144) = v9;
  *(_QWORD *)(v12 - 136) = v7;
  *(_QWORD *)(v12 - 128) = v6;
  *(_QWORD *)(v12 - 120) = v11;
  *(_QWORD *)(v12 - 168) = v5;
  *(_QWORD *)(v12 - 112) = v5;
  *(_QWORD *)(v12 - 104) = v8;
  OUTLINED_FUNCTION_67_6();
}

uint64_t sub_1B2542EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int EnumCaseMultiPayload;

  v10 = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_18_8();
  MEMORY[0x1E0C80A78](v11, v12);
  OUTLINED_FUNCTION_424((uint64_t)&a9 - v13, *(_QWORD *)(v9 - 152), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16));
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)&loc_1B2542F10 + *((int *)qword_1B25433D8 + EnumCaseMultiPayload)))();
}

void sub_1B2542F20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_QWORD *)(v4 - 176);
  v6 = sub_1B25CD108();
  v7 = *(_QWORD *)(v4 - 184);
  v8 = v0;
  v9 = OUTLINED_FUNCTION_1_4();
  v10 = v2 + *(int *)(v9 + 48);
  v11 = v3;
  v12 = v2 + *(int *)(v9 + 64);
  v13 = *(_QWORD *)(v4 - 160);
  OUTLINED_FUNCTION_293_0(v13, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32));
  OUTLINED_FUNCTION_119_1();
  v14 = OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_310_0(v13 + *(int *)(v14 + 48), v10, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v13 + *(int *)(v14 + 64), v12, v6);
  *(_QWORD *)(v4 - 144) = v7;
  *(_QWORD *)(v4 - 136) = v8;
  *(_QWORD *)(v4 - 128) = v5;
  *(_QWORD *)(v4 - 120) = v11;
  *(_QWORD *)(v4 - 112) = *(_QWORD *)(v4 - 168);
  *(_QWORD *)(v4 - 104) = v1;
  type metadata accessor for ZipStateMachine.NextAction();
}

void sub_1B2542FE8()
{
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_1B25433EC()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1B25433F8()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1B2543420(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1B2543454(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1B25434B0(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for ZipStateMachine.IteratorDeinitializedAction()
{
  JUMPOUT(0x1B5E26140);
}

void type metadata accessor for ZipStateMachine.ElementProducedAction()
{
  JUMPOUT(0x1B5E26140);
}

void type metadata accessor for ZipStateMachine.NextAction()
{
  JUMPOUT(0x1B5E26140);
}

uint64_t *sub_1B2543510(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  sub_1B254354C(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

id sub_1B254354C(uint64_t a1, uint64_t a2)
{
  id result;

  if (a2 < 0)
    return (id)(a2 & 0x7FFFFFFFFFFFFFFFLL);
  return result;
}

void sub_1B254355C(uint64_t *a1)
{
  sub_1B2543568(*a1, a1[1]);
}

void sub_1B2543568(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)

}

uint64_t *sub_1B2543578(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  sub_1B254354C(*a2, v4);
  v5 = *a1;
  v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_1B2543568(v5, v6);
  return a1;
}

uint64_t *sub_1B25435BC(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_1B2543568(v3, v4);
  return a1;
}

uint64_t sub_1B25435F4(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7FFF && *(_BYTE *)(a1 + 16))
    {
      v2 = *(_DWORD *)a1 + 32766;
    }
    else
    {
      v2 = (((*(_QWORD *)(a1 + 8) >> 49) >> 14) | (2
                                                               * ((*(_QWORD *)(a1 + 8) >> 49) & 0x3800 | ((*(_QWORD *)(a1 + 8) & 7) << 8) | HIBYTE(*(_QWORD *)a1) & 0xF0 | *(_QWORD *)a1 & 0xF))) ^ 0x7FFF;
      if (v2 >= 0x7FFE)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t sub_1B2543664(uint64_t result, unsigned int a2, unsigned int a3)
{
  unint64_t v3;

  if (a2 > 0x7FFE)
  {
    *(_QWORD *)result = a2 - 0x7FFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      v3 = (-a2 >> 1) & 0x3FFF | ((-a2 & 0x7FFF) << 14);
      *(_QWORD *)result = (v3 | (v3 << 56)) & 0xF00000000000000FLL;
      *(_QWORD *)(result + 8) = ((v3 >> 8) | (v3 << 49)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1B25436D0(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8) >> 63;
}

uint64_t sub_1B25436DC(uint64_t result)
{
  *(_QWORD *)(result + 8) &= ~0x8000000000000000;
  return result;
}

_QWORD *sub_1B25436EC(_QWORD *result, uint64_t a2)
{
  uint64_t v2;

  v2 = result[1] & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  *result &= 0xFFFFFFFFFFFFFF0uLL;
  result[1] = v2;
  return result;
}

void type metadata accessor for ZipStateMachine.ChildTaskSuspendedAction()
{
  JUMPOUT(0x1B5E26140);
}

uint64_t sub_1B2543714()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1B254373C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1B2543778(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B25437DC(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for ZipStateMachine.UpstreamFinishedAction()
{
  JUMPOUT(0x1B5E26140);
}

uint64_t sub_1B254382C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  int v4;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  sub_1B25CD108();
  swift_getTupleTypeMetadata3();
  sub_1B25CD108();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED36D060);
  result = sub_1B25CD6D8();
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSingleCase();
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = v4;
  }
  return result;
}

_QWORD *sub_1B2543968(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  size_t v27;
  uint64_t v28;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  id *v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  int v47;
  int v48;
  unsigned int v49;
  int v50;
  unsigned int EnumTagSinglePayload;
  void *v52;
  const void *v53;
  unint64_t v55;
  size_t __n;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t AssociatedTypeWitness;
  uint64_t v64;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = *(_DWORD *)(v3 + 80);
  v5 = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = v7;
  v9 = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(v9 - 8);
  v12 = *(_DWORD *)(v10 + 80);
  v11 = *(unsigned int *)(v10 + 84);
  v13 = v12;
  v14 = v7 | v4 | v12;
  v15 = v14 & 0xF8 | 7u;
  v16 = ~v15;
  v17 = *(unsigned int *)(v3 + 84);
  v18 = *(unsigned int *)(v6 + 84);
  if (v18 <= v17)
    v19 = *(_DWORD *)(v3 + 84);
  else
    v19 = *(_DWORD *)(v6 + 84);
  v20 = v11 - 1;
  if (!(_DWORD)v11)
    v20 = 0;
  if (v20 <= v19)
    v21 = v19;
  else
    v21 = v20;
  v22 = *(_QWORD *)(v3 + 64) + v7;
  v23 = *(_QWORD *)(v6 + 64) + v12;
  if ((_DWORD)v11)
    v25 = *(_QWORD *)(v10 + 64);
  else
    v25 = *(_QWORD *)(v10 + 64) + 1;
  v24 = (v23 + (v22 & ~(unint64_t)v7)) & ~(unint64_t)v12;
  v26 = v24 + v25;
  if (v21)
    v27 = v24 + v25;
  else
    v27 = v26 + 1;
  if (v27 <= 8)
    v28 = 8;
  else
    v28 = v27;
  if ((v14 & 0x1000F8) == 0 && v28 + ((v15 + 8) & (unint64_t)~v15) + 1 <= 0x18)
  {
    v32 = v8;
    v33 = v6;
    v61 = v5;
    *a1 = *a2;
    v31 = a1;
    v34 = (_QWORD *)(((unint64_t)a1 + v15 + 8) & v16);
    v35 = (id *)(((unint64_t)a2 + v15 + 8) & v16);
    v36 = *((unsigned __int8 *)v35 + v28);
    if (v36 >= 2)
    {
      if (v28 <= 3)
        v37 = v28;
      else
        v37 = 4;
      __asm { BR              X15 }
    }
    v38 = v5;
    if (v36 == 1)
    {
      v39 = *v35;
      v40 = *v35;
      *v34 = v39;
      *((_BYTE *)v34 + v28) = 1;
      return v31;
    }
    v41 = ~v13;
    v59 = v23;
    v60 = v9;
    v57 = v21;
    __n = v25;
    v58 = v33;
    v64 = ~v13;
    if (!v21)
    {
      v42 = ~v32;
      v46 = v3;
      if (*((_BYTE *)v35 + v26))
      {
        v47 = (*((unsigned __int8 *)v35 + v26) - 1) << (8 * v26);
        if (v26 > 3)
          v47 = 0;
        if ((_DWORD)v26)
        {
          if (v26 <= 3)
            v48 = v26;
          else
            v48 = 4;
          __asm { BR              X11 }
        }
        if (v47 != -1)
          goto LABEL_45;
      }
      goto LABEL_49;
    }
    if ((_DWORD)v17 == v21)
    {
      v42 = ~v32;
      v43 = (uint64_t)v35;
      v44 = v17;
      v38 = AssociatedTypeWitness;
      v45 = v24 + v25;
    }
    else
    {
      v49 = v21;
      v45 = v24 + v25;
      v42 = ~v32;
      v43 = ((unint64_t)v35 + v22) & ~v32;
      if ((_DWORD)v18 != v49)
      {
        EnumTagSinglePayload = __swift_getEnumTagSinglePayload((v23 + v43) & v41, v11, v9);
        v26 = v45;
        v46 = v3;
        if (EnumTagSinglePayload >= 2)
          goto LABEL_45;
        goto LABEL_49;
      }
      v44 = v18;
    }
    v50 = __swift_getEnumTagSinglePayload(v43, v44, v38);
    v26 = v45;
    v46 = v3;
    if (v50)
    {
LABEL_45:
      memcpy(v34, v35, v27);
LABEL_54:
      *((_BYTE *)v34 + v28) = 0;
      return v31;
    }
LABEL_49:
    v55 = v26;
    (*(void (**)(_QWORD *, id *, uint64_t))(v46 + 16))(v34, v35, AssociatedTypeWitness);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v58 + 16))(((unint64_t)v34 + v22) & v42, ((unint64_t)v35 + v22) & v42, v61);
    v52 = (void *)((v59 + (((unint64_t)v34 + v22) & v42)) & v64);
    v53 = (const void *)((v59 + (((unint64_t)v35 + v22) & v42)) & v64);
    if (__swift_getEnumTagSinglePayload((uint64_t)v53, 1, v60))
    {
      memcpy(v52, v53, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v52, v53, v60);
      __swift_storeEnumTagSinglePayload((uint64_t)v52, 0, 1, v60);
    }
    if (!v57)
      *((_BYTE *)v34 + v55) = 0;
    goto LABEL_54;
  }
  v30 = *a2;
  *a1 = *a2;
  v31 = (_QWORD *)(v30 + ((v15 + 16) & v16));
  swift_retain();
  return v31;
}

void sub_1B2543DB4(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unsigned int v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = *(_DWORD *)(v3 + 80);
  v5 = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(v8 - 8);
  v11 = *(_DWORD *)(v9 + 80);
  v10 = *(unsigned int *)(v9 + 84);
  v12 = ((v7 | v4) | v11) & 0xF8 | 7u;
  v13 = v11;
  v14 = (id *)((a1 + v12 + 8) & ~v12);
  v15 = *(_DWORD *)(v3 + 84);
  v16 = *(_DWORD *)(v6 + 84);
  if (v16 <= v15)
    v17 = *(_DWORD *)(v3 + 84);
  else
    v17 = *(_DWORD *)(v6 + 84);
  v18 = v10 - 1;
  if (!(_DWORD)v10)
    v18 = 0;
  if (v18 > v17)
    v17 = v18;
  v19 = *(_QWORD *)(v3 + 64) + v7;
  v20 = *(_QWORD *)(v6 + 64) + v11;
  v21 = *(_QWORD *)(v9 + 64);
  if (!(_DWORD)v10)
    ++v21;
  v22 = v21 + ((v20 + (v19 & ~(unint64_t)v7)) & ~(unint64_t)v11);
  if (v17)
    v23 = v21 + ((v20 + (v19 & ~(unint64_t)v7)) & ~v13);
  else
    v23 = v22 + 1;
  if (v23 <= 8)
    v23 = 8;
  v24 = *((unsigned __int8 *)v14 + v23);
  if (v24 >= 2)
  {
    if (v23 <= 3)
      v25 = v23;
    else
      v25 = 4;
    __asm { BR              X2 }
  }
  if (v24 == 1)
  {

    return;
  }
  v26 = ~(unint64_t)v7;
  v27 = ~v13;
  v33 = v27;
  if (v17)
  {
    if (v15 == v17)
    {
      v28 = (uint64_t)v14;
      v29 = *(unsigned int *)(v3 + 84);
      v30 = AssociatedTypeWitness;
      goto LABEL_35;
    }
    v28 = ((unint64_t)v14 + v19) & v26;
    if (v16 == v17)
    {
      v29 = *(unsigned int *)(v6 + 84);
      v30 = v5;
LABEL_35:
      if (__swift_getEnumTagSinglePayload(v28, v29, v30))
        return;
      goto LABEL_40;
    }
    if (__swift_getEnumTagSinglePayload((v20 + v28) & v27, v10, v8) >= 2)
      return;
LABEL_40:
    (*(void (**)(id *, uint64_t))(v3 + 8))(v14, AssociatedTypeWitness);
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(((unint64_t)v14 + v19) & v26, v5);
    if (!__swift_getEnumTagSinglePayload((v20 + (((unint64_t)v14 + v19) & v26)) & v33, 1, v8))
      (*(void (**)(unint64_t, uint64_t))(v9 + 8))((v20 + (((unint64_t)v14 + v19) & v26)) & v33, v8);
    return;
  }
  if (!*((_BYTE *)v14 + v22))
    goto LABEL_40;
  v31 = (*((unsigned __int8 *)v14 + v22) - 1) << (8 * v22);
  if (v22 > 3)
    v31 = 0;
  if ((_DWORD)v22)
  {
    if (v22 <= 3)
      v32 = v22;
    else
      v32 = 4;
    __asm { BR              X11 }
  }
  if (v31 == -1)
    goto LABEL_40;
}

_QWORD *sub_1B25440F4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  id *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  size_t v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  id v30;
  id v31;
  void *v32;
  char v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  void *v40;
  const void *v41;
  _QWORD *result;
  size_t __n;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t AssociatedTypeWitness;
  _QWORD *v50;
  _QWORD *__dst;

  *a1 = *a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5 = *(_DWORD *)(v4 + 80);
  v48 = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(v48 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = v7;
  v9 = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(v9 - 8);
  v12 = *(_DWORD *)(v10 + 80);
  v11 = *(unsigned int *)(v10 + 84);
  v13 = v12;
  v14 = ((v7 | v5) | v12) & 0xF8 | 7u;
  v50 = a1;
  __dst = (_QWORD *)(((unint64_t)a1 + v14 + 8) & ~v14);
  v15 = (id *)(((unint64_t)a2 + v14 + 8) & ~v14);
  v16 = *(unsigned int *)(v4 + 84);
  v17 = *(unsigned int *)(v6 + 84);
  if (v17 <= v16)
    v18 = *(_DWORD *)(v4 + 84);
  else
    v18 = *(_DWORD *)(v6 + 84);
  v19 = v11 - 1;
  if (!(_DWORD)v11)
    v19 = 0;
  if (v19 <= v18)
    v20 = v18;
  else
    v20 = v19;
  v21 = *(_QWORD *)(v4 + 64) + v7;
  v22 = *(_QWORD *)(v6 + 64) + v12;
  if ((_DWORD)v11)
    v24 = *(_QWORD *)(v10 + 64);
  else
    v24 = *(_QWORD *)(v10 + 64) + 1;
  v23 = (v22 + (v21 & ~(unint64_t)v7)) & ~(unint64_t)v12;
  v25 = v23 + v24;
  if (v20)
    v26 = v23 + v24;
  else
    v26 = v25 + 1;
  if (v26 <= 8)
    v27 = 8;
  else
    v27 = v26;
  v28 = *((unsigned __int8 *)v15 + v27);
  if (v28 >= 2)
  {
    if (v27 <= 3)
      v29 = v27;
    else
      v29 = 4;
    __asm { BR              X15 }
  }
  if (v28 == 1)
  {
    v30 = *v15;
    v31 = *v15;
    v32 = __dst;
    *__dst = v30;
    v33 = 1;
LABEL_48:
    result = v50;
    goto LABEL_49;
  }
  v34 = ~v13;
  v46 = v34;
  v47 = v9;
  __n = v24;
  v44 = v23 + v24;
  v45 = ~v8;
  if (!v20)
  {
    v32 = __dst;
    if (!*((_BYTE *)v15 + v25))
      goto LABEL_41;
    v35 = (*((unsigned __int8 *)v15 + v25) - 1) << (8 * v25);
    if (v25 > 3)
      v35 = 0;
    if ((_DWORD)v25)
    {
      if (v25 <= 3)
        v36 = v23 + v24;
      else
        v36 = 4;
      __asm { BR              X11 }
    }
    if (v35 == -1)
      goto LABEL_41;
    goto LABEL_47;
  }
  if ((_DWORD)v16 == v20)
  {
    v32 = __dst;
    if (!__swift_getEnumTagSinglePayload((uint64_t)v15, v16, AssociatedTypeWitness))
      goto LABEL_41;
LABEL_47:
    memcpy(v32, v15, v26);
    v33 = 0;
    goto LABEL_48;
  }
  v37 = ((unint64_t)v15 + v21) & ~v8;
  v32 = __dst;
  if ((_DWORD)v17 != v20)
  {
    if (__swift_getEnumTagSinglePayload((v22 + v37) & v34, v11, v9) < 2)
      goto LABEL_41;
    goto LABEL_47;
  }
  if (__swift_getEnumTagSinglePayload(v37, v17, v48))
    goto LABEL_47;
LABEL_41:
  (*(void (**)(void *, id *, uint64_t))(v4 + 16))(v32, v15, AssociatedTypeWitness);
  v38 = ((unint64_t)v32 + v21) & v45;
  v39 = ((unint64_t)v15 + v21) & v45;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(v38, v39, v48);
  v40 = (void *)((v22 + v38) & v46);
  v41 = (const void *)((v22 + v39) & v46);
  if (__swift_getEnumTagSinglePayload((uint64_t)v41, 1, v47))
  {
    memcpy(v40, v41, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v40, v41, v47);
    __swift_storeEnumTagSinglePayload((uint64_t)v40, 0, 1, v47);
  }
  result = v50;
  v32 = __dst;
  v33 = 0;
  if (!v20)
    *((_BYTE *)__dst + v44) = 0;
LABEL_49:
  *((_BYTE *)v32 + v27) = v33;
  return result;
}

_QWORD *sub_1B25444C0(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  id *v13;
  id *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  unsigned int v33;
  uint64_t v34;
  id v35;
  id v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  int v43;
  void *v44;
  const void *v45;
  size_t v47;
  unsigned int v48;
  size_t __n;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int v58;
  uint64_t v59;

  *a1 = *a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v59 = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(v59 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = ((v8 | v6) | v11) & 0xF8 | 7u;
  v13 = (id *)(((unint64_t)a1 + v12 + 8) & ~v12);
  v14 = (id *)(((unint64_t)a2 + v12 + 8) & ~v12);
  if (v13 != v14)
  {
    v56 = AssociatedTypeWitness;
    v53 = v9;
    v15 = v8;
    v16 = *(_DWORD *)(v10 + 80);
    v17 = *(unsigned int *)(v5 + 84);
    v18 = *(_DWORD *)(v7 + 84);
    v50 = v18;
    if (v18 <= v17)
      v18 = *(_DWORD *)(v5 + 84);
    v19 = *(_DWORD *)(v10 + 84);
    v20 = v19 - 1;
    if (!v19)
      v20 = 0;
    if (v20 <= v18)
      v21 = v18;
    else
      v21 = v20;
    v48 = *(_DWORD *)(v10 + 84);
    v55 = *(_QWORD *)(v5 + 64);
    v52 = *(_QWORD *)(v7 + 64) + v11;
    if (v19)
      v22 = *(_QWORD *)(v10 + 64);
    else
      v22 = *(_QWORD *)(v10 + 64) + 1;
    v57 = ((v52 + ((v55 + v15) & ~v15)) & ~v16) + v22;
    if (v21)
      v23 = ((v52 + ((v55 + v15) & ~v15)) & ~v16) + v22;
    else
      v23 = ((v52 + ((v55 + v15) & ~v15)) & ~v16) + v22 + 1;
    if (v23 <= 8)
      v24 = 8;
    else
      v24 = v23;
    v25 = *((unsigned __int8 *)v13 + v24);
    if (v25 >= 2)
    {
      if (v24 <= 3)
        v26 = v24;
      else
        v26 = 4;
      __asm { BR              X13 }
    }
    v54 = ~v15;
    v51 = ~v16;
    v58 = v21;
    v47 = v22;
    __n = v23;
    if (v25 == 1)
    {

      goto LABEL_45;
    }
    if (v21)
    {
      if ((_DWORD)v17 == v21)
      {
        v27 = (uint64_t)v13;
        v28 = *(unsigned int *)(v5 + 84);
        v29 = v56;
      }
      else
      {
        v27 = ((unint64_t)v13 + v15 + v55) & v54;
        v28 = v50;
        if (v50 != v21)
        {
          if (__swift_getEnumTagSinglePayload((v52 + v27) & v51, v19, v53) >= 2)
            goto LABEL_45;
          goto LABEL_43;
        }
        v29 = v59;
      }
      if (__swift_getEnumTagSinglePayload(v27, v28, v29))
        goto LABEL_45;
    }
    else if (*((_BYTE *)v13 + v57))
    {
      v30 = (*((unsigned __int8 *)v13 + v57) - 1) << (8 * v57);
      if (v57 > 3)
        v30 = 0;
      if ((_DWORD)v57)
      {
        if (v57 <= 3)
          v31 = v57;
        else
          v31 = 4;
        __asm { BR              X11 }
      }
      if (v30 != -1)
      {
LABEL_45:
        v33 = *((unsigned __int8 *)v14 + v24);
        if (v33 >= 2)
        {
          if (v24 <= 3)
            v34 = v24;
          else
            v34 = 4;
          __asm { BR              X12 }
        }
        if (v33 == 1)
        {
          v35 = *v14;
          v36 = *v14;
          *v13 = v35;
          v37 = 1;
LABEL_75:
          *((_BYTE *)v13 + v24) = v37;
          return a1;
        }
        if (!v58)
        {
          v41 = v57;
          if (*((_BYTE *)v14 + v57))
          {
            v42 = (*((unsigned __int8 *)v14 + v57) - 1) << (8 * v57);
            if (v57 > 3)
              v42 = 0;
            if ((_DWORD)v57)
            {
              if (v57 <= 3)
                v43 = v57;
              else
                v43 = 4;
              __asm { BR              X11 }
            }
            if (v42 != -1)
              goto LABEL_66;
          }
          goto LABEL_70;
        }
        if ((_DWORD)v17 == v58)
        {
          v38 = (uint64_t)v14;
          v39 = v17;
          v40 = v56;
        }
        else
        {
          v38 = ((unint64_t)v14 + v15 + v55) & v54;
          v39 = v50;
          if (v50 != v58)
          {
            v41 = v57;
            if (__swift_getEnumTagSinglePayload((v52 + v38) & v51, v48, v53) >= 2)
              goto LABEL_66;
            goto LABEL_70;
          }
          v40 = v59;
        }
        v41 = v57;
        if (__swift_getEnumTagSinglePayload(v38, v39, v40))
        {
LABEL_66:
          memcpy(v13, v14, __n);
LABEL_74:
          v37 = 0;
          goto LABEL_75;
        }
LABEL_70:
        (*(void (**)(id *, id *, uint64_t))(v5 + 16))(v13, v14, v56);
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v13 + v15 + v55) & v54, ((unint64_t)v14 + v15 + v55) & v54, v59);
        v44 = (void *)((v52 + (((unint64_t)v13 + v15 + v55) & v54)) & v51);
        v45 = (const void *)((v52 + (((unint64_t)v14 + v15 + v55) & v54)) & v51);
        if (__swift_getEnumTagSinglePayload((uint64_t)v45, 1, v53))
        {
          memcpy(v44, v45, v47);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v44, v45, v53);
          __swift_storeEnumTagSinglePayload((uint64_t)v44, 0, 1, v53);
        }
        v37 = v58;
        if (!v58)
        {
          *((_BYTE *)v13 + v41) = 0;
          goto LABEL_75;
        }
        goto LABEL_74;
      }
    }
LABEL_43:
    (*(void (**)(id *, uint64_t))(v5 + 8))(v13, v56);
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(((unint64_t)v13 + v15 + v55) & v54, v59);
    v32 = (v52 + (((unint64_t)v13 + v15 + v55) & v54)) & v51;
    if (!__swift_getEnumTagSinglePayload(v32, 1, v53))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v32, v53);
    goto LABEL_45;
  }
  return a1;
}

_QWORD *sub_1B2544AAC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *result;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  size_t v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int EnumTagSinglePayload;
  int v37;
  int v38;
  unint64_t v39;
  uint64_t v40;
  int v41;
  unsigned int v42;
  unint64_t v43;
  _QWORD *v44;
  unint64_t v45;
  unint64_t v46;
  void *v47;
  const void *v48;
  size_t __n;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *__dst;
  uint64_t v55;
  uint64_t AssociatedTypeWitness;

  *a1 = *a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5 = *(_DWORD *)(v4 + 80);
  v55 = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(v55 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = v7;
  v9 = swift_getAssociatedTypeWitness();
  result = a1;
  v11 = *(_QWORD *)(v9 - 8);
  v13 = *(_DWORD *)(v11 + 80);
  v12 = *(unsigned int *)(v11 + 84);
  v14 = v13;
  v15 = ((v7 | v5) | v13) & 0xF8 | 7u;
  v16 = (_QWORD *)(((unint64_t)result + v15 + 8) & ~v15);
  v17 = (_QWORD *)(((unint64_t)a2 + v15 + 8) & ~v15);
  v18 = *(unsigned int *)(v4 + 84);
  v19 = *(unsigned int *)(v6 + 84);
  if (v19 <= v18)
    v20 = *(_DWORD *)(v4 + 84);
  else
    v20 = *(_DWORD *)(v6 + 84);
  v21 = v12 - 1;
  if (!(_DWORD)v12)
    v21 = 0;
  if (v21 <= v20)
    v22 = v20;
  else
    v22 = v21;
  v23 = *(_QWORD *)(v4 + 64) + v7;
  v24 = *(_QWORD *)(v6 + 64) + v13;
  if ((_DWORD)v12)
    v26 = *(_QWORD *)(v11 + 64);
  else
    v26 = *(_QWORD *)(v11 + 64) + 1;
  v25 = (v24 + (v23 & ~(unint64_t)v7)) & ~(unint64_t)v13;
  v27 = v25 + v26;
  if (v22)
    v28 = v25 + v26;
  else
    v28 = v27 + 1;
  if (v28 <= 8)
    v29 = 8;
  else
    v29 = v28;
  v30 = *((unsigned __int8 *)v17 + v29);
  if (v30 >= 2)
  {
    if (v29 <= 3)
      v31 = v29;
    else
      v31 = 4;
    __asm { BR              X15 }
  }
  if (v30 == 1)
  {
    *v16 = *v17;
    v32 = 1;
    goto LABEL_48;
  }
  v33 = ~v8;
  v34 = ~v14;
  v53 = result;
  __dst = v16;
  v51 = v34;
  v52 = v9;
  __n = v26;
  v50 = ~v8;
  if (!v22)
  {
    if (!*((_BYTE *)v17 + v27))
      goto LABEL_41;
    v37 = (*((unsigned __int8 *)v17 + v27) - 1) << (8 * v27);
    if (v27 > 3)
      v37 = 0;
    if ((_DWORD)v27)
    {
      if (v27 <= 3)
        v38 = v27;
      else
        v38 = 4;
      __asm { BR              X11 }
    }
    if (v37 == -1)
      goto LABEL_41;
    goto LABEL_47;
  }
  if ((_DWORD)v18 == v22)
  {
    v35 = v27;
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v17, v18, AssociatedTypeWitness);
    v27 = v35;
    v16 = __dst;
    if (!EnumTagSinglePayload)
      goto LABEL_41;
LABEL_47:
    memcpy(v16, v17, v28);
    result = v53;
    v16 = __dst;
    v32 = 0;
    goto LABEL_48;
  }
  v39 = v27;
  v40 = ((unint64_t)v17 + v23) & v33;
  if ((_DWORD)v19 != v22)
  {
    v42 = __swift_getEnumTagSinglePayload((v24 + v40) & v34, v12, v9);
    v16 = __dst;
    v27 = v39;
    if (v42 < 2)
      goto LABEL_41;
    goto LABEL_47;
  }
  v41 = __swift_getEnumTagSinglePayload(v40, v19, v55);
  v16 = __dst;
  v27 = v39;
  if (v41)
    goto LABEL_47;
LABEL_41:
  v43 = v27;
  v44 = v16;
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v4 + 32))(v16, v17, AssociatedTypeWitness);
  v45 = ((unint64_t)v44 + v23) & v50;
  v46 = ((unint64_t)v17 + v23) & v50;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32))(v45, v46, v55);
  v47 = (void *)((v24 + v45) & v51);
  v48 = (const void *)((v24 + v46) & v51);
  if (__swift_getEnumTagSinglePayload((uint64_t)v48, 1, v52))
  {
    memcpy(v47, v48, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v47, v48, v52);
    __swift_storeEnumTagSinglePayload((uint64_t)v47, 0, 1, v52);
  }
  result = v53;
  v16 = __dst;
  v32 = 0;
  if (!v22)
    *((_BYTE *)__dst + v43) = 0;
LABEL_48:
  *((_BYTE *)v16 + v29) = v32;
  return result;
}

_QWORD *sub_1B2544E7C(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  id *v13;
  id *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  unsigned int v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  int v41;
  void *v42;
  const void *v43;
  size_t v45;
  unsigned int v46;
  size_t __n;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int v56;
  uint64_t v57;

  *a1 = *a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v57 = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(v57 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = ((v8 | v6) | v11) & 0xF8 | 7u;
  v13 = (id *)(((unint64_t)a1 + v12 + 8) & ~v12);
  v14 = (id *)(((unint64_t)a2 + v12 + 8) & ~v12);
  if (v13 != v14)
  {
    v54 = AssociatedTypeWitness;
    v51 = v9;
    v15 = v8;
    v16 = *(_DWORD *)(v10 + 80);
    v17 = *(unsigned int *)(v5 + 84);
    v18 = *(_DWORD *)(v7 + 84);
    v48 = v18;
    if (v18 <= v17)
      v18 = *(_DWORD *)(v5 + 84);
    v19 = *(_DWORD *)(v10 + 84);
    v20 = v19 - 1;
    if (!v19)
      v20 = 0;
    if (v20 <= v18)
      v21 = v18;
    else
      v21 = v20;
    v46 = *(_DWORD *)(v10 + 84);
    v53 = *(_QWORD *)(v5 + 64);
    v50 = *(_QWORD *)(v7 + 64) + v11;
    if (v19)
      v22 = *(_QWORD *)(v10 + 64);
    else
      v22 = *(_QWORD *)(v10 + 64) + 1;
    v55 = ((v50 + ((v53 + v15) & ~v15)) & ~v16) + v22;
    if (v21)
      v23 = ((v50 + ((v53 + v15) & ~v15)) & ~v16) + v22;
    else
      v23 = ((v50 + ((v53 + v15) & ~v15)) & ~v16) + v22 + 1;
    if (v23 <= 8)
      v24 = 8;
    else
      v24 = v23;
    v25 = *((unsigned __int8 *)v13 + v24);
    if (v25 >= 2)
    {
      if (v24 <= 3)
        v26 = v24;
      else
        v26 = 4;
      __asm { BR              X13 }
    }
    v52 = ~v15;
    v49 = ~v16;
    v56 = v21;
    v45 = v22;
    __n = v23;
    if (v25 == 1)
    {

      goto LABEL_45;
    }
    if (v21)
    {
      if ((_DWORD)v17 == v21)
      {
        v27 = (uint64_t)v13;
        v28 = *(unsigned int *)(v5 + 84);
        v29 = v54;
      }
      else
      {
        v27 = ((unint64_t)v13 + v15 + v53) & v52;
        v28 = v48;
        if (v48 != v21)
        {
          if (__swift_getEnumTagSinglePayload((v50 + v27) & v49, v19, v51) >= 2)
            goto LABEL_45;
          goto LABEL_43;
        }
        v29 = v57;
      }
      if (__swift_getEnumTagSinglePayload(v27, v28, v29))
        goto LABEL_45;
    }
    else if (*((_BYTE *)v13 + v55))
    {
      v30 = (*((unsigned __int8 *)v13 + v55) - 1) << (8 * v55);
      if (v55 > 3)
        v30 = 0;
      if ((_DWORD)v55)
      {
        if (v55 <= 3)
          v31 = v55;
        else
          v31 = 4;
        __asm { BR              X11 }
      }
      if (v30 != -1)
      {
LABEL_45:
        v33 = *((unsigned __int8 *)v14 + v24);
        if (v33 >= 2)
        {
          if (v24 <= 3)
            v34 = v24;
          else
            v34 = 4;
          __asm { BR              X12 }
        }
        if (v33 == 1)
        {
          *v13 = *v14;
          v35 = 1;
LABEL_75:
          *((_BYTE *)v13 + v24) = v35;
          return a1;
        }
        if (!v56)
        {
          v39 = v55;
          if (*((_BYTE *)v14 + v55))
          {
            v40 = (*((unsigned __int8 *)v14 + v55) - 1) << (8 * v55);
            if (v55 > 3)
              v40 = 0;
            if ((_DWORD)v55)
            {
              if (v55 <= 3)
                v41 = v55;
              else
                v41 = 4;
              __asm { BR              X11 }
            }
            if (v40 != -1)
              goto LABEL_66;
          }
          goto LABEL_70;
        }
        if ((_DWORD)v17 == v56)
        {
          v36 = (uint64_t)v14;
          v37 = v17;
          v38 = v54;
        }
        else
        {
          v36 = ((unint64_t)v14 + v15 + v53) & v52;
          v37 = v48;
          if (v48 != v56)
          {
            v39 = v55;
            if (__swift_getEnumTagSinglePayload((v50 + v36) & v49, v46, v51) >= 2)
              goto LABEL_66;
            goto LABEL_70;
          }
          v38 = v57;
        }
        v39 = v55;
        if (__swift_getEnumTagSinglePayload(v36, v37, v38))
        {
LABEL_66:
          memcpy(v13, v14, __n);
LABEL_74:
          v35 = 0;
          goto LABEL_75;
        }
LABEL_70:
        (*(void (**)(id *, id *, uint64_t))(v5 + 32))(v13, v14, v54);
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 32))(((unint64_t)v13 + v15 + v53) & v52, ((unint64_t)v14 + v15 + v53) & v52, v57);
        v42 = (void *)((v50 + (((unint64_t)v13 + v15 + v53) & v52)) & v49);
        v43 = (const void *)((v50 + (((unint64_t)v14 + v15 + v53) & v52)) & v49);
        if (__swift_getEnumTagSinglePayload((uint64_t)v43, 1, v51))
        {
          memcpy(v42, v43, v45);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v42, v43, v51);
          __swift_storeEnumTagSinglePayload((uint64_t)v42, 0, 1, v51);
        }
        v35 = v56;
        if (!v56)
        {
          *((_BYTE *)v13 + v39) = 0;
          goto LABEL_75;
        }
        goto LABEL_74;
      }
    }
LABEL_43:
    (*(void (**)(id *, uint64_t))(v5 + 8))(v13, v54);
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(((unint64_t)v13 + v15 + v53) & v52, v57);
    v32 = (v50 + (((unint64_t)v13 + v15 + v53) & v52)) & v49;
    if (!__swift_getEnumTagSinglePayload(v32, 1, v51))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v32, v51);
    goto LABEL_45;
  }
  return a1;
}

uint64_t sub_1B2545460(_QWORD *a1, int a2)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  BOOL v12;
  int v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  char v20;
  int v21;
  unsigned int v22;
  int v23;

  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v6 + 84) > v5)
    v5 = *(_DWORD *)(v6 + 84);
  v7 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_DWORD *)(v7 + 84);
  v10 = v9 - 1;
  if (!v9)
    v10 = 0;
  v11 = (v10 | v5) == 0;
  v12 = v9 == 0;
  v13 = *(_DWORD *)(v6 + 80);
  v14 = *(_QWORD *)(v7 + 64);
  if (v12)
    ++v11;
  v15 = v11
      + v14
      + ((((*(_QWORD *)(v4 + 64) + v13) & ~(unint64_t)*(_DWORD *)(v6 + 80))
        + *(_QWORD *)(v6 + 64)
        + v8) & ~(unint64_t)v8);
  if (v15 <= 8)
    v15 = 8;
  if (!a2)
    return 0;
  if ((a2 & 0x80000000) == 0)
    goto LABEL_11;
  v18 = ((v13 | *(_DWORD *)(v4 + 80)) | v8) & 0xF8 | 7u;
  v19 = v15 + ((v18 + 8) & ~v18) + 1;
  v20 = 8 * v19;
  if (v19 > 3)
    goto LABEL_16;
  v22 = (a2 - 0x7FFFFFFF + ~(-1 << v20)) >> v20;
  if (v22 > 0xFFFE)
  {
    v21 = *(_DWORD *)((char *)a1 + v19);
    if (!v21)
      goto LABEL_11;
    goto LABEL_25;
  }
  if (v22 <= 0xFE)
  {
    if (!v22)
      goto LABEL_11;
LABEL_16:
    v21 = *((unsigned __int8 *)a1 + v19);
    if (!*((_BYTE *)a1 + v19))
      goto LABEL_11;
    goto LABEL_25;
  }
  v21 = *(unsigned __int16 *)((char *)a1 + v19);
  if (!*(_WORD *)((char *)a1 + v19))
  {
LABEL_11:
    v16 = *a1;
    if (*a1 >= 0xFFFFFFFFuLL)
      LODWORD(v16) = -1;
    return (v16 + 1);
  }
LABEL_25:
  v23 = (v21 - 1) << v20;
  if (v19 > 3)
    v23 = 0;
  if ((_DWORD)v19)
  {
    if (v19 > 3)
      LODWORD(v19) = 4;
    __asm { BR              X11 }
  }
  return v23 ^ 0x80000000;
}

void sub_1B2545688(_BYTE *a1, int a2, int a3)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  BOOL v15;
  unsigned __int8 v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  size_t v22;
  char v23;
  unsigned int v24;
  int v25;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v8 + 84) > v7)
    v7 = *(_DWORD *)(v8 + 84);
  v9 = 0u;
  v10 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v12 = *(_DWORD *)(v10 + 80);
  v11 = *(_DWORD *)(v10 + 84);
  v13 = v11 - 1;
  if (!v11)
    v13 = 0;
  v14 = (v13 | v7) == 0;
  v15 = v11 == 0;
  v16 = *(_DWORD *)(v8 + 80);
  v17 = (((*(_QWORD *)(v6 + 64) + v16) & ~(unint64_t)v16)
       + *(_QWORD *)(v8 + 64)
       + *(_DWORD *)(v10 + 80)) & ~(unint64_t)*(_DWORD *)(v10 + 80);
  v18 = *(_QWORD *)(v10 + 64);
  v19 = ((v16 | *(_DWORD *)(v6 + 80)) | v12) & 0xF8 | 7u;
  v20 = (v19 + 8) & ~v19;
  if (v15)
    ++v14;
  v21 = v14 + v18 + v17;
  if (v21 <= 8)
    v21 = 8;
  v22 = v21 + v20 + 1;
  v23 = 8 * v22;
  if (a3 < 0)
  {
    if (v22 > 3)
    {
      v9 = 1u;
      if (a2 < 0)
      {
LABEL_20:
        if (v22 < 4)
        {
          if ((_DWORD)v22)
          {
            v25 = a2 & ~(-1 << v23);
            bzero(a1, v22);
            if ((_DWORD)v22 == 3)
            {
              *(_WORD *)a1 = v25;
              a1[2] = BYTE2(v25);
            }
            else if ((_DWORD)v22 == 2)
            {
              *(_WORD *)a1 = v25;
            }
            else
            {
              *a1 = v25;
            }
          }
        }
        else
        {
          bzero(a1, v22);
          *(_DWORD *)a1 = a2 ^ 0x80000000;
        }
        __asm { BR              X10 }
      }
LABEL_18:
      __asm { BR              X10 }
    }
    v24 = (a3 - 0x7FFFFFFF + ~(-1 << v23)) >> v23;
    if (v24 > 0xFFFE)
    {
      v9 = 4u;
      if (a2 < 0)
        goto LABEL_20;
      goto LABEL_18;
    }
    if (v24 >= 0xFF)
      v9 = 2;
    else
      v9 = v24 != 0;
  }
  if (a2 < 0)
    goto LABEL_20;
  goto LABEL_18;
}

void sub_1B2545904()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1B2545844);
}

void sub_1B254590C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1B2545844);
}

void sub_1B2545914()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1B2545844);
}

uint64_t sub_1B2545920(uint64_t a1)
{

  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1B2545950(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;

  v4 = (void *)a2[1];
  *a1 = *a2;
  v5 = v4;
  v6 = a2[2];
  v7 = a2[3];
  a1[1] = v4;
  a1[2] = v6;
  a1[3] = v7;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1B25459A4(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  id v5;
  void *v6;

  *a1 = *a2;
  v4 = (void *)a2[1];
  v5 = v4;
  v6 = (void *)a1[1];
  a1[1] = v4;

  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B2545A2C(uint64_t a1, _OWORD *a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  swift_release();
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B2545A78(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1B2545AB8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ZipStateMachine.UpstreamThrewAction()
{
  JUMPOUT(0x1B5E26140);
}

uint64_t sub_1B2545B04()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v6;
  char *v7;
  uint64_t v8;
  const char *v9;

  v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    v0 = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      v3 = sub_1B25CD108();
      if (v4 > 0x3F)
      {
        return v3;
      }
      else
      {
        swift_getTupleTypeLayout3();
        v7 = &v6;
        v8 = MEMORY[0x1E0DE9D18] + 64;
        v9 = "\b";
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return v0;
}

uint64_t *sub_1B2545BE8(uint64_t *a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  int v15;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  void *v23;
  const void *v24;
  unint64_t v26;
  uint64_t v27;

  v4 = a1;
  v5 = *(_QWORD *)(a3[2] - 8);
  v6 = *(_QWORD *)(a3[3] - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = *(_QWORD *)(v5 + 64) + v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = *(_QWORD *)(a3[4] - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = v11;
  if (*(_DWORD *)(v10 + 84))
    v13 = *(_QWORD *)(v10 + 64);
  else
    v13 = *(_QWORD *)(v10 + 64) + 1;
  if (v13
     + ((v9 + v11 + (v8 & ~(unint64_t)v7)) & ~(unint64_t)v11) <= 8)
    v14 = 8;
  else
    v14 = v13
        + ((v9 + v11 + (v8 & ~(unint64_t)v7)) & ~(unint64_t)v11);
  v15 = v7 | *(_DWORD *)(v5 + 80) | v11;
  if ((v15 & 0x1000F8) != 0 || (unint64_t)(v14 + 1) > 0x18)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + (((v15 & 0xF8 | 7u) + 16) & ~(unint64_t)(v15 & 0xF8 | 7u)));
    swift_retain();
  }
  else
  {
    v18 = *((unsigned __int8 *)a2 + v14);
    if (v18 >= 3)
    {
      if (v14 <= 3)
        v19 = v14;
      else
        v19 = 4;
      __asm { BR              X14 }
    }
    if (v18 == 2)
    {
      *a1 = *a2;
      *((_BYTE *)a1 + v14) = 2;
    }
    else if (v18 == 1)
    {
      *a1 = *a2;
      *((_BYTE *)a1 + v14) = 1;
      swift_bridgeObjectRetain();
    }
    else
    {
      v26 = ~(unint64_t)v7;
      v27 = a3[4];
      (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
      v20 = ((unint64_t)v4 + v8) & v26;
      v21 = ((unint64_t)a2 + v8) & v26;
      v22 = v20;
      (*(void (**)(void))(v6 + 16))();
      v23 = (void *)((v22 + v9 + v12) & ~v12);
      v24 = (const void *)((v21 + v9 + v12) & ~v12);
      if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v27))
      {
        memcpy(v23, v24, v13);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v23, v24, v27);
        __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v27);
      }
      *((_BYTE *)v4 + v14) = 0;
    }
  }
  return v4;
}

uint64_t sub_1B2545E3C(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = result;
  v4 = a2[3];
  v3 = a2[4];
  v5 = *(_QWORD *)(a2[2] - 8);
  v6 = *(_QWORD *)(v4 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v5 + 64) + v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = *(_QWORD *)(v3 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  if (*(_DWORD *)(v10 + 84))
    v12 = *(_QWORD *)(v10 + 64);
  else
    v12 = *(_QWORD *)(v10 + 64) + 1;
  v13 = v12 + ((v9 + v11 + (v8 & ~v7)) & ~v11);
  if (v13 <= 8)
    v13 = 8;
  v14 = *(unsigned __int8 *)(result + v13);
  if (v14 >= 3)
  {
    if (v13 <= 3)
      v15 = v13;
    else
      v15 = 4;
    __asm { BR              X15 }
  }
  if (v14 != 2)
  {
    if (v14 == 1)
    {
      return swift_bridgeObjectRelease();
    }
    else
    {
      v16 = ~v7;
      (*(void (**)(uint64_t))(v5 + 8))(result);
      v17 = (v8 + v2) & v16;
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v17, v4);
      v18 = (v17 + v9 + v11) & ~v11;
      result = __swift_getEnumTagSinglePayload(v18, 1, v3);
      if (!(_DWORD)result)
        return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v18, v3);
    }
  }
  return result;
}

_QWORD *sub_1B2545FE8(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void *v19;
  const void *v20;
  size_t __n;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v5 = *(_QWORD *)(a3[2] - 8);
  v6 = *(_QWORD *)(a3[3] - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v5 + 64) + v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = *(_QWORD *)(a3[4] - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  if (*(_DWORD *)(v10 + 84))
    v12 = *(_QWORD *)(v10 + 64);
  else
    v12 = *(_QWORD *)(v10 + 64) + 1;
  if (v12 + ((v9 + v11 + (v8 & ~v7)) & (unint64_t)~v11) <= 8)
    v13 = 8;
  else
    v13 = v12 + ((v9 + v11 + (v8 & ~v7)) & ~v11);
  v14 = *((unsigned __int8 *)a2 + v13);
  if (v14 >= 3)
  {
    if (v13 <= 3)
      v15 = v13;
    else
      v15 = 4;
    __asm { BR              X14 }
  }
  if (v14 == 2)
  {
    *a1 = *a2;
    *((_BYTE *)a1 + v13) = 2;
  }
  else if (v14 == 1)
  {
    *a1 = *a2;
    *((_BYTE *)a1 + v13) = 1;
    swift_bridgeObjectRetain();
  }
  else
  {
    v23 = *(_QWORD *)(v6 + 64);
    v24 = a3[3];
    __n = v12;
    v25 = a3[4];
    v16 = ~v7;
    (*(void (**)(_QWORD *, _QWORD *))(v5 + 16))(a1, a2);
    v17 = ((unint64_t)a1 + v8) & v16;
    v18 = ((unint64_t)a2 + v8) & v16;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(v17, v18, v24);
    v19 = (void *)((v17 + v23 + v11) & ~v11);
    v20 = (const void *)((v18 + v23 + v11) & ~v11);
    if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v25))
    {
      memcpy(v19, v20, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v19, v20, v25);
      __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v25);
    }
    *((_BYTE *)a1 + v13) = 0;
  }
  return a1;
}

_QWORD *sub_1B25461F4(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  unint64_t v21;
  void *v22;
  const void *v23;
  size_t __n;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (a1 != a2)
  {
    v27 = a3[2];
    v5 = *(_QWORD *)(v27 - 8);
    v6 = *(_QWORD *)(v5 + 64);
    v29 = a3[3];
    v7 = *(_QWORD *)(v29 - 8);
    v8 = *(unsigned __int8 *)(v7 + 80);
    v9 = v6 + v8;
    v10 = *(_QWORD *)(a3[4] - 8);
    v11 = *(unsigned __int8 *)(v10 + 80);
    v28 = *(_QWORD *)(v7 + 64);
    v12 = (v28 + v11 + ((v6 + v8) & ~v8)) & ~v11;
    if (*(_DWORD *)(v10 + 84))
      v13 = *(_QWORD *)(v10 + 64);
    else
      v13 = *(_QWORD *)(v10 + 64) + 1;
    __n = v13;
    v14 = v13 + v12;
    if (v14 <= 8)
      v15 = 8;
    else
      v15 = v14;
    v16 = *((unsigned __int8 *)a1 + v15);
    if (v16 >= 3)
    {
      if (v15 <= 3)
        v17 = v15;
      else
        v17 = 4;
      __asm { BR              X13 }
    }
    v30 = a3[4];
    v18 = ~v8;
    v26 = ~v11;
    if (v16 != 2)
    {
      if (v16 == 1)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(a1, v27);
        (*(void (**)(unint64_t, uint64_t))(v7 + 8))(((unint64_t)a1 + v9) & v18, v29);
        if (!__swift_getEnumTagSinglePayload(((((unint64_t)a1 + v9) & v18) + v28 + v11) & v26, 1, v30))(*(void (**)(unint64_t, uint64_t))(v10 + 8))(((((unint64_t)a1 + v9) & v18) + v28 + v11) & v26, v30);
      }
    }
    v19 = *((unsigned __int8 *)a2 + v15);
    if (v19 >= 3)
    {
      if (v15 <= 3)
        v20 = v15;
      else
        v20 = 4;
      __asm { BR              X12 }
    }
    if (v19 == 2)
    {
      *a1 = *a2;
      *((_BYTE *)a1 + v15) = 2;
    }
    else if (v19 == 1)
    {
      *a1 = *a2;
      *((_BYTE *)a1 + v15) = 1;
      swift_bridgeObjectRetain();
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, v27);
      v21 = ((unint64_t)a2 + v9) & v18;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)a1 + v9) & v18, v21, v29);
      v22 = (void *)(((((unint64_t)a1 + v9) & v18) + v28 + v11) & v26);
      v23 = (const void *)((v21 + v28 + v11) & v26);
      if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v30))
      {
        memcpy(v22, v23, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v22, v23, v30);
        __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v30);
      }
      *((_BYTE *)a1 + v15) = 0;
    }
  }
  return a1;
}

_QWORD *sub_1B2546504(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  const void *v21;
  size_t __n;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v5 = *(_QWORD *)(a3[2] - 8);
  v6 = *(_QWORD *)(a3[3] - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v5 + 64) + v7;
  v10 = *(_QWORD *)(a3[4] - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  if (*(_DWORD *)(v10 + 84))
    v12 = *(_QWORD *)(v10 + 64);
  else
    v12 = *(_QWORD *)(v10 + 64) + 1;
  v9 = *(_QWORD *)(v6 + 64);
  if (v12 + ((v9 + v11 + (v8 & ~v7)) & (unint64_t)~v11) <= 8)
    v13 = 8;
  else
    v13 = v12 + ((v9 + v11 + (v8 & ~v7)) & ~v11);
  v14 = *((unsigned __int8 *)a2 + v13);
  if (v14 >= 3)
  {
    if (v13 <= 3)
      v15 = v13;
    else
      v15 = 4;
    __asm { BR              X14 }
  }
  if (v14 == 2)
  {
    *a1 = *a2;
    v16 = 2;
  }
  else if (v14 == 1)
  {
    *a1 = *a2;
    v16 = 1;
  }
  else
  {
    v24 = *(_QWORD *)(v6 + 64);
    v25 = a3[3];
    __n = v12;
    v26 = a3[4];
    v17 = ~v7;
    (*(void (**)(_QWORD *, _QWORD *))(v5 + 32))(a1, a2);
    v18 = ((unint64_t)a1 + v8) & v17;
    v19 = ((unint64_t)a2 + v8) & v17;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32))(v18, v19, v25);
    v20 = (void *)((v18 + v24 + v11) & ~v11);
    v21 = (const void *)((v19 + v24 + v11) & ~v11);
    if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v26))
    {
      memcpy(v20, v21, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v20, v21, v26);
      __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v26);
    }
    v16 = 0;
  }
  *((_BYTE *)a1 + v13) = v16;
  return a1;
}

_QWORD *sub_1B2546708(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  void *v23;
  const void *v24;
  size_t __n;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  if (a1 != a2)
  {
    v28 = a3[2];
    v5 = *(_QWORD *)(v28 - 8);
    v6 = *(_QWORD *)(v5 + 64);
    v30 = a3[3];
    v7 = *(_QWORD *)(v30 - 8);
    v8 = *(unsigned __int8 *)(v7 + 80);
    v9 = v6 + v8;
    v10 = *(_QWORD *)(a3[4] - 8);
    v11 = *(unsigned __int8 *)(v10 + 80);
    v29 = *(_QWORD *)(v7 + 64);
    v12 = (v29 + v11 + ((v6 + v8) & ~v8)) & ~v11;
    if (*(_DWORD *)(v10 + 84))
      v13 = *(_QWORD *)(v10 + 64);
    else
      v13 = *(_QWORD *)(v10 + 64) + 1;
    __n = v13;
    v14 = v13 + v12;
    if (v14 <= 8)
      v15 = 8;
    else
      v15 = v14;
    v16 = *((unsigned __int8 *)a1 + v15);
    if (v16 >= 3)
    {
      if (v15 <= 3)
        v17 = v15;
      else
        v17 = 4;
      __asm { BR              X13 }
    }
    v31 = a3[4];
    v18 = ~v8;
    v27 = ~v11;
    if (v16 != 2)
    {
      if (v16 == 1)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(a1, v28);
        (*(void (**)(unint64_t, uint64_t))(v7 + 8))(((unint64_t)a1 + v9) & v18, v30);
        if (!__swift_getEnumTagSinglePayload(((((unint64_t)a1 + v9) & v18) + v29 + v11) & v27, 1, v31))(*(void (**)(unint64_t, uint64_t))(v10 + 8))(((((unint64_t)a1 + v9) & v18) + v29 + v11) & v27, v31);
      }
    }
    v19 = *((unsigned __int8 *)a2 + v15);
    if (v19 >= 3)
    {
      if (v15 <= 3)
        v20 = v15;
      else
        v20 = 4;
      __asm { BR              X12 }
    }
    if (v19 == 2)
    {
      *a1 = *a2;
      v21 = 2;
    }
    else if (v19 == 1)
    {
      *a1 = *a2;
      v21 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 32))(a1, a2, v28);
      v22 = ((unint64_t)a2 + v9) & v18;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 32))(((unint64_t)a1 + v9) & v18, v22, v30);
      v23 = (void *)(((((unint64_t)a1 + v9) & v18) + v29 + v11) & v27);
      v24 = (const void *)((v22 + v29 + v11) & v27);
      if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v31))
      {
        memcpy(v23, v24, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v23, v24, v31);
        __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v31);
      }
      v21 = 0;
    }
    *((_BYTE *)a1 + v15) = v21;
  }
  return a1;
}

uint64_t sub_1B2546A10(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  int v12;
  unsigned int v14;
  int v15;
  unsigned int v16;

  v3 = *(_QWORD *)(a3[4] - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = *(_DWORD *)(v3 + 84);
  v6 = *(_QWORD *)(v3 + 64);
  if (v5)
    v7 = v6;
  else
    v7 = v6 + 1;
  v8 = v7
     + ((((*(_QWORD *)(*(_QWORD *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80))
       + *(_QWORD *)(*(_QWORD *)(a3[3] - 8) + 64)
       + v4) & ~v4);
  v9 = 8;
  if (v8 > 8)
    v9 = v8;
  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_24;
  v10 = v9 + 1;
  v11 = 8 * (v9 + 1);
  if ((v9 + 1) <= 3)
  {
    v14 = ((a2 + ~(-1 << v11) - 253) >> v11) + 1;
    if (HIWORD(v14))
    {
      v12 = *(_DWORD *)(a1 + v10);
      if (!v12)
        goto LABEL_24;
      goto LABEL_17;
    }
    if (v14 > 0xFF)
    {
      v12 = *(unsigned __int16 *)(a1 + v10);
      if (!*(_WORD *)(a1 + v10))
        goto LABEL_24;
      goto LABEL_17;
    }
    if (v14 < 2)
    {
LABEL_24:
      v16 = *(unsigned __int8 *)(a1 + v9);
      if (v16 >= 3)
        return (v16 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v12 = *(unsigned __int8 *)(a1 + v10);
  if (!*(_BYTE *)(a1 + v10))
    goto LABEL_24;
LABEL_17:
  v15 = (v12 - 1) << v11;
  if (v10 > 3)
    v15 = 0;
  if (!(_DWORD)v10)
    return (v15 + 254);
  if (v10 > 3)
    LODWORD(v10) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1B2546B14 + 4 * byte_1B25DDCCF[(v10 - 1)]))();
}

void sub_1B2546B60(_WORD *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  uint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  size_t v11;
  char v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;

  v5 = *(_QWORD *)(a4[4] - 8);
  v6 = (((*(_QWORD *)(*(_QWORD *)(a4[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a4[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a4[3] - 8) + 80))
      + *(_QWORD *)(*(_QWORD *)(a4[3] - 8) + 64)
      + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_DWORD *)(v5 + 84);
  v8 = *(_QWORD *)(v5 + 64);
  if (v7)
    v9 = v8;
  else
    v9 = v8 + 1;
  v10 = v9 + v6;
  if (v10 <= 8)
    v10 = 8;
  v11 = v10 + 1;
  v12 = 8 * (v10 + 1);
  if (a3 < 0xFE)
  {
    v13 = 0u;
  }
  else if (v11 <= 3)
  {
    v15 = ((a3 + ~(-1 << v12) - 253) >> v12) + 1;
    if (HIWORD(v15))
    {
      v13 = 4u;
    }
    else if (v15 >= 0x100)
    {
      v13 = 2;
    }
    else
    {
      v13 = v15 > 1;
    }
  }
  else
  {
    v13 = 1u;
  }
  if (a2 <= 0xFD)
    __asm { BR              X11 }
  v14 = a2 - 254;
  if (v11 < 4)
  {
    if ((_DWORD)v10 != -1)
    {
      v16 = v14 & ~(-1 << v12);
      bzero(a1, v11);
      if ((_DWORD)v11 == 3)
      {
        *a1 = v16;
        *((_BYTE *)a1 + 2) = BYTE2(v16);
      }
      else if ((_DWORD)v11 == 2)
      {
        *a1 = v16;
      }
      else
      {
        *(_BYTE *)a1 = v16;
      }
    }
  }
  else
  {
    bzero(a1, v10 + 1);
    *(_DWORD *)a1 = v14;
  }
  __asm { BR              X10 }
}

uint64_t sub_1B2546D44(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a2[4] - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = *(_DWORD *)(v2 + 84);
  v5 = *(_QWORD *)(v2 + 64);
  if (v4)
    v6 = v5;
  else
    v6 = v5 + 1;
  v7 = v6
     + ((((*(_QWORD *)(*(_QWORD *)(a2[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a2[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a2[3] - 8) + 80))
       + *(_QWORD *)(*(_QWORD *)(a2[3] - 8) + 64)
       + v3) & ~v3);
  v8 = 8;
  if (v7 > 8)
    v8 = v7;
  if (*(unsigned __int8 *)(a1 + v8) < 3u)
    return *(unsigned __int8 *)(a1 + v8);
  if (v8 <= 3)
    v9 = v8;
  else
    v9 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1B2546DCC + 4 * byte_1B25DDCDD[v9]))();
}

_BYTE *sub_1B2546E14(_BYTE *result, unsigned int a2, _QWORD *a3)
{
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char v9;
  int v10;

  v3 = *(_QWORD *)(a3[4] - 8);
  v4 = (((*(_QWORD *)(*(_QWORD *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80))
      + *(_QWORD *)(*(_QWORD *)(a3[3] - 8) + 64)
      + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_DWORD *)(v3 + 84);
  v6 = *(_QWORD *)(v3 + 64);
  if (v5)
    v7 = v6;
  else
    v7 = v6 + 1;
  v8 = v7 + v4;
  if (v8 <= 8)
    v8 = 8;
  if (a2 > 2)
  {
    if (v8 <= 3)
      v9 = ((a2 - 3) >> (8 * v8)) + 3;
    else
      v9 = 3;
    result[v8] = v9;
    if (v8 >= 4)
      v10 = 4;
    else
      v10 = v8;
    bzero(result, v8);
    __asm { BR              X10 }
  }
  result[v8] = a2;
  return result;
}

uint64_t sub_1B2546F2C()
{
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B2546F5C()
{
  return sub_1B2546F6C();
}

uint64_t sub_1B2546F6C()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1B2546F9C(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  sub_1B2546F2C();
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return a1;
}

_QWORD *sub_1B2546FE4(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  sub_1B2546F2C();
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  sub_1B2546F6C();
  return a1;
}

uint64_t sub_1B2547038(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  sub_1B2546F6C();
  return a1;
}

uint64_t sub_1B2547078(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7F && *(_BYTE *)(a1 + 24))
    {
      v2 = *(_DWORD *)a1 + 126;
    }
    else
    {
      v2 = (((*(_QWORD *)a1 >> 57) >> 6) | (2 * ((*(_QWORD *)a1 >> 57) & 0x38 | *(_QWORD *)a1 & 7))) ^ 0x7F;
      if (v2 >= 0x7E)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t sub_1B25470CC(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7E)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 127;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
    {
      v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1B2547124(_QWORD *a1)
{
  return *a1 >> 63;
}

_QWORD *sub_1B2547130(_QWORD *result)
{
  *result &= ~0x8000000000000000;
  return result;
}

uint64_t *sub_1B2547140(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

void type metadata accessor for ZipStateMachine.CancelledAction()
{
  JUMPOUT(0x1B5E26140);
}

uint64_t OUTLINED_FUNCTION_0_4()
{
  return swift_getTupleTypeMetadata3();
}

uint64_t OUTLINED_FUNCTION_1_4()
{
  return swift_getTupleTypeMetadata3();
}

void OUTLINED_FUNCTION_2_6()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = v0;
}

void OUTLINED_FUNCTION_4_8(unint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  sub_1B252C270(a1 > 1, v1, 1, v2);
}

void OUTLINED_FUNCTION_6_10()
{
  type metadata accessor for ZipStateMachine.State.Upstream();
}

uint64_t sub_1B25471B0()
{
  return 0;
}

void OUTLINED_FUNCTION_7_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1B252C270(a1, a2, 1, v2);
}

void OUTLINED_FUNCTION_8_9()
{
  type metadata accessor for ZipStateMachine.State.Upstream();
}

void OUTLINED_FUNCTION_9_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 112) = v0;
  *(_QWORD *)(v3 - 104) = v1;
  *(_QWORD *)(v3 - 96) = v2;
  type metadata accessor for ZipStateMachine.State.Upstream();
}

void OUTLINED_FUNCTION_10_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1B252C270(0, 1, 1, a4);
}

uint64_t OUTLINED_FUNCTION_11_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 320) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_12_7@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 - 256))();
}

void OUTLINED_FUNCTION_13_6()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = v0;
  type metadata accessor for ZipStateMachine.State.Upstream();
}

void OUTLINED_FUNCTION_15_5(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v7 - 144) = v6;
  *(_QWORD *)(v7 - 136) = v2;
  *(_QWORD *)(v7 - 128) = v1;
  *(_QWORD *)(v7 - 120) = a1;
  *(_QWORD *)(v7 - 112) = v3;
  *(_QWORD *)(v7 - 104) = v4;
  *(_QWORD *)(v7 - 96) = v5;
  type metadata accessor for ZipStateMachine.State.Upstream();
}

uint64_t OUTLINED_FUNCTION_16_7()
{
  return sub_1B25CD108();
}

uint64_t OUTLINED_FUNCTION_17_8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8))(*(_QWORD *)(v2 - 152), v1);
}

uint64_t OUTLINED_FUNCTION_20_7@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_21_6()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

void OUTLINED_FUNCTION_23_9(unint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  sub_1B252C270(a1 > 1, v2, 1, v1);
}

void OUTLINED_FUNCTION_24_9(unint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  sub_1B252C270(a1 > 1, v1, 1, v2);
}

void OUTLINED_FUNCTION_25_8(unint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  sub_1B252C270(a1 > 1, v1, 1, v2);
}

void OUTLINED_FUNCTION_28_8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = v0;
  type metadata accessor for ZipStateMachine.State.Upstream();
}

void OUTLINED_FUNCTION_29_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1B252C270(a1, a2, 1, v2);
}

void OUTLINED_FUNCTION_30_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1B252C270(a1, a2, 1, v2);
}

void OUTLINED_FUNCTION_31_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1B252C270(a1, a2, 1, v2);
}

void OUTLINED_FUNCTION_32_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1B252C270(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_33_7()
{
  return swift_getTupleTypeMetadata2();
}

uint64_t OUTLINED_FUNCTION_34_5()
{
  return swift_getAssociatedTypeWitness();
}

void OUTLINED_FUNCTION_36_5()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = v0;
  type metadata accessor for ZipStateMachine.State.Upstream();
}

uint64_t sub_1B2547348()
{
  return 255;
}

void OUTLINED_FUNCTION_37_6(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
}

uint64_t OUTLINED_FUNCTION_38_5()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 432);
}

void OUTLINED_FUNCTION_40_3()
{
  type metadata accessor for ZipStateMachine();
}

void OUTLINED_FUNCTION_41_7()
{
  uint64_t v0;

  **(_QWORD **)(v0 - 336) = *(_QWORD *)(v0 - 616);
}

uint64_t OUTLINED_FUNCTION_42_9()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_43_5()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_44_4()
{
  return sub_1B25CCD84();
}

uint64_t OUTLINED_FUNCTION_45_6@<X0>(uint64_t a1@<X8>)
{
  uint64_t (*v1)(_QWORD, uint64_t);
  uint64_t v2;

  return v1(*(_QWORD *)(a1 - 256), v2);
}

uint64_t OUTLINED_FUNCTION_47_8(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 - 624))(a1, *(_QWORD *)(v1 - 224));
}

void OUTLINED_FUNCTION_48_6(_QWORD *a1@<X8>)
{
  sub_1B253EEC4(a1);
}

uint64_t OUTLINED_FUNCTION_49_5@<X0>(uint64_t (*a1)(void)@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return a1();
}

uint64_t OUTLINED_FUNCTION_50_6()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_52_7()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_53_4()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_55_5()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_57_4(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

void OUTLINED_FUNCTION_58_5()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 - 304);
  *(_QWORD *)(v0 - 144) = *(_QWORD *)(v0 - 272);
  *(_QWORD *)(v0 - 136) = v1;
}

uint64_t OUTLINED_FUNCTION_59_6()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_63_5()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_64_7()
{
  return swift_getAssociatedTypeWitness();
}

void OUTLINED_FUNCTION_67_6()
{
  type metadata accessor for ZipStateMachine.State();
}

uint64_t OUTLINED_FUNCTION_69_7()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_71_8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 216);
}

uint64_t OUTLINED_FUNCTION_73_6()
{
  return swift_getAssociatedTypeWitness();
}

void OUTLINED_FUNCTION_74_5(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
}

void OUTLINED_FUNCTION_75_7(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 288) = a1;
}

uint64_t OUTLINED_FUNCTION_76_6()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_80_7()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_81_2(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_82_6@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_85_4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

void OUTLINED_FUNCTION_87_5(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 312) = a1;
}

uint64_t OUTLINED_FUNCTION_90_4(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_92_5()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_93_4(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_94_6()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_95_4()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_96_4()
{
  uint64_t (*v0)(_QWORD, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(*(_QWORD *)(v2 - 152), v1);
}

uint64_t OUTLINED_FUNCTION_97_4()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_98_4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

void OUTLINED_FUNCTION_100_3(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 280) = a1;
}

uint64_t OUTLINED_FUNCTION_101_4()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_103_4()
{
  return sub_1B25CD108();
}

uint64_t OUTLINED_FUNCTION_104_3()
{
  return sub_1B25CD6D8();
}

uint64_t OUTLINED_FUNCTION_105_2()
{
  return sub_1B25CD6D8();
}

uint64_t OUTLINED_FUNCTION_106_3()
{
  return sub_1B25CD108();
}

uint64_t OUTLINED_FUNCTION_107_2()
{
  return 255;
}

void OUTLINED_FUNCTION_108_5(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1B253EF24(a1, a2);
}

uint64_t OUTLINED_FUNCTION_109_4@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 - 256))();
}

void OUTLINED_FUNCTION_111_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 160) = (char *)&a9 - v9;
}

uint64_t OUTLINED_FUNCTION_112_4()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_113_2@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 - 256);
  *(_QWORD *)(v2 - 112) = v1;
  *(_QWORD *)(v2 - 104) = v3;
  return 0;
}

uint64_t OUTLINED_FUNCTION_115_2()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 288))();
}

uint64_t OUTLINED_FUNCTION_116_3()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_117_3()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
}

uint64_t OUTLINED_FUNCTION_118_3(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_120_3(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_121_3()
{
  return sub_1B25CD108();
}

uint64_t OUTLINED_FUNCTION_122_3()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_123_3()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_124_4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 168);
}

uint64_t OUTLINED_FUNCTION_125_2@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 296) = *(_QWORD *)(a1 + 16);
  return v1;
}

uint64_t OUTLINED_FUNCTION_126_2()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 152))();
}

uint64_t OUTLINED_FUNCTION_127_2(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return __swift_storeEnumTagSinglePayload(a1, a2, a3, v3);
}

uint64_t OUTLINED_FUNCTION_128_2()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_129_2(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1B253EF24(a1, a2);
}

uint64_t OUTLINED_FUNCTION_131_3()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_132_1()
{
  uint64_t v0;

  return v0;
}

uint64_t AnalysisOptions.priority.getter()
{
  return sub_1B2547CE4((void (*)(_QWORD))MEMORY[0x1E0DF0750]);
}

uint64_t AnalysisOptions.modelRetention.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = OUTLINED_FUNCTION_0_5();
  *a1 = *(_BYTE *)(v1 + v4);
  return result;
}

uint64_t type metadata accessor for AnalysisOptions(uint64_t a1)
{
  return sub_1B24B1B88(a1, (uint64_t *)&unk_1EEFD6E80);
}

uint64_t AnalysisOptions.powerContext.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AnalysisOptions(0) + 24));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1B2547828(v4, v5);
}

uint64_t sub_1B2547828(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t AnalysisOptions.ModelRetention.hash(into:)()
{
  return sub_1B25CD6B4();
}

BOOL static AnalysisOptions.ModelRetention.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t AnalysisOptions.ModelRetention.hashValue.getter()
{
  sub_1B25CD6A8();
  sub_1B25CD6B4();
  return sub_1B25CD6CC();
}

void AnalysisOptions.PowerContext.ane.getter()
{
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_0();
}

void AnalysisOptions.PowerContext.cpu.getter()
{
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_0();
}

void AnalysisOptions.PowerContext.gpu.getter()
{
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_0();
}

void __swiftcall AnalysisOptions.PowerContext.init(ane:cpu:gpu:)(Speech::AnalysisOptions::PowerContext *__return_ptr retstr, Swift::String ane, Swift::String cpu, Swift::String gpu)
{
  retstr->ane = ane;
  retstr->cpu = cpu;
  retstr->gpu = gpu;
}

uint64_t static AnalysisOptions.PowerContext.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  char v11;
  uint64_t result;
  BOOL v13;
  char v14;

  v2 = a1[2];
  v4 = a1[3];
  v3 = a1[4];
  v5 = a1[5];
  v6 = a2[2];
  v7 = a2[3];
  v8 = a2[4];
  v9 = a2[5];
  v10 = *a1 == *a2 && a1[1] == a2[1];
  if (v10 || (v11 = OUTLINED_FUNCTION_303_0(), result = 0, (v11 & 1) != 0))
  {
    v13 = v2 == v6 && v4 == v7;
    if (v13 || (v14 = OUTLINED_FUNCTION_4_9(), result = 0, (v14 & 1) != 0))
    {
      if (v3 == v8 && v5 == v9)
      {
        return 1;
      }
      else
      {
        OUTLINED_FUNCTION_38_0();
        return sub_1B25CD5D0();
      }
    }
  }
  return result;
}

void AnalysisOptions.init(priority:modelRetention:powerContext:)(uint64_t a1@<X0>, char *a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X8>)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;

  v6 = *a2;
  v13 = a3[1];
  v14 = *a3;
  v7 = *((_QWORD *)a3 + 4);
  v8 = *((_QWORD *)a3 + 5);
  v9 = OUTLINED_FUNCTION_37_4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a4, a1, v9);
  v10 = OUTLINED_FUNCTION_0_5();
  *(_BYTE *)(a4 + v11) = v6;
  v12 = a4 + *(int *)(v10 + 24);
  *(_OWORD *)v12 = v14;
  *(_OWORD *)(v12 + 16) = v13;
  *(_QWORD *)(v12 + 32) = v7;
  *(_QWORD *)(v12 + 40) = v8;
  OUTLINED_FUNCTION_223_1();
}

void AnalysisOptions.init(highPriority:loggingInfo:powerContext:)(char a1@<W0>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;

  v6 = OUTLINED_FUNCTION_37_4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  OUTLINED_FUNCTION_1_5();
  v9 = *a2;
  v17 = a2[1];
  v10 = a2[2];
  v11 = a2[3];
  v13 = a2[4];
  v12 = a2[5];
  if ((a1 & 1) != 0)
    sub_1B25CCCB8();
  else
    sub_1B25CCCC4();
  OUTLINED_FUNCTION_11_6(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32));
  v14 = OUTLINED_FUNCTION_0_5();
  *(_BYTE *)(a3 + v15) = 0;
  v16 = (_QWORD *)(a3 + *(int *)(v14 + 24));
  *v16 = v9;
  v16[1] = v17;
  v16[2] = v10;
  v16[3] = v11;
  v16[4] = v13;
  v16[5] = v12;
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_1B2547B54(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6E78);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void AnalysisOptions.init(highPriority:modelRetention:loggingInfo:powerContext:)(char a1@<W0>, char *a2@<X1>, uint64_t *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;

  v8 = OUTLINED_FUNCTION_37_4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  OUTLINED_FUNCTION_1_5();
  v11 = *a2;
  v12 = *a3;
  v13 = a3[1];
  v14 = a3[2];
  v15 = a3[3];
  v16 = a3[4];
  v17 = a3[5];
  v21 = v16;
  v22 = v12;
  if ((a1 & 1) != 0)
    sub_1B25CCCB8();
  else
    sub_1B25CCCC4();
  OUTLINED_FUNCTION_11_6(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 32));
  v18 = OUTLINED_FUNCTION_0_5();
  *(_BYTE *)(a4 + v19) = v11;
  v20 = (_QWORD *)(a4 + *(int *)(v18 + 24));
  *v20 = v22;
  v20[1] = v13;
  v20[2] = v14;
  v20[3] = v15;
  v20[4] = v21;
  v20[5] = v17;
  OUTLINED_FUNCTION_7_1();
}

void AnalysisOptions.init(priority:modelRetention:loggingInfo:powerContext:)(uint64_t a1@<X0>, _BYTE *a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;

  sub_1B2547B54(a3);
  LOBYTE(a2) = *a2;
  v15 = a4[1];
  v16 = *a4;
  v10 = *((_QWORD *)a4 + 4);
  v9 = *((_QWORD *)a4 + 5);
  v11 = OUTLINED_FUNCTION_37_4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a5, a1, v11);
  v12 = OUTLINED_FUNCTION_0_5();
  *(_BYTE *)(a5 + v13) = (_BYTE)a2;
  v14 = a5 + *(int *)(v12 + 24);
  *(_OWORD *)v14 = v16;
  *(_OWORD *)(v14 + 16) = v15;
  *(_QWORD *)(v14 + 32) = v10;
  *(_QWORD *)(v14 + 40) = v9;
  OUTLINED_FUNCTION_223_1();
}

uint64_t AnalysisOptions.LoggingInfo.asrID.getter()
{
  return sub_1B2547CE4((void (*)(_QWORD))MEMORY[0x1E0CB0998]);
}

uint64_t sub_1B2547CE4(void (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  a1(0);
  v1 = OUTLINED_FUNCTION_38_0();
  return OUTLINED_FUNCTION_21_0(v1, v2, v3, v4);
}

uint64_t AnalysisOptions.LoggingInfo.requestID.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  type metadata accessor for AnalysisOptions.LoggingInfo(0);
  sub_1B25CC61C();
  v0 = OUTLINED_FUNCTION_38_0();
  return OUTLINED_FUNCTION_21_0(v0, v1, v2, v3);
}

uint64_t type metadata accessor for AnalysisOptions.LoggingInfo(uint64_t a1)
{
  return sub_1B24B1B88(a1, (uint64_t *)&unk_1EEFD6E68);
}

uint64_t AnalysisOptions.LoggingInfo.init(asrID:requestID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  sub_1B25CC610();
  type metadata accessor for AnalysisOptions.LoggingInfo(0);
  sub_1B25CC610();
  v4 = sub_1B25CC61C();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a2, v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1, v4);
}

uint64_t static AnalysisOptions.LoggingInfo.== infix(_:_:)()
{
  if ((sub_1B25CC5F8() & 1) == 0)
    return 0;
  type metadata accessor for AnalysisOptions.LoggingInfo(0);
  return sub_1B25CC5F8();
}

BOOL static AnalysisOptions.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  BOOL v23;
  BOOL v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if ((sub_1B25CCCAC() & 1) != 0)
  {
    v4 = OUTLINED_FUNCTION_0_5();
    if (*(unsigned __int8 *)(a1 + v5) == *(unsigned __int8 *)(a2 + v5))
    {
      v6 = *(int *)(v4 + 24);
      v7 = *(_QWORD *)(a1 + v6);
      v8 = *(_QWORD *)(a1 + v6 + 8);
      v9 = *(_QWORD *)(a1 + v6 + 16);
      v10 = *(_QWORD *)(a1 + v6 + 24);
      v12 = *(_QWORD *)(a1 + v6 + 32);
      v11 = *(_QWORD *)(a1 + v6 + 40);
      v13 = (uint64_t *)(a2 + v6);
      v14 = *v13;
      v15 = v13[1];
      v16 = v13[2];
      v17 = v13[3];
      v19 = v13[4];
      v18 = v13[5];
      if (v8)
      {
        if (v15)
        {
          v30 = v18;
          if (v7 != v14 || v8 != v15)
          {
            v21 = v9;
            v22 = OUTLINED_FUNCTION_303_0();
            v9 = v21;
            if ((v22 & 1) == 0)
              return 0;
          }
          v23 = v9 == v16 && v10 == v17;
          if (!v23 && (OUTLINED_FUNCTION_4_9() & 1) == 0)
            return 0;
          v24 = v12 == v19 && v11 == v30;
          return v24 || (OUTLINED_FUNCTION_303_0() & 1) != 0;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else if (!v15)
      {
        return 1;
      }
      v26 = OUTLINED_FUNCTION_10_10();
      sub_1B2547828(v26, v27);
      sub_1B2547FB4(v7, v8);
      v28 = OUTLINED_FUNCTION_10_10();
      sub_1B2547FB4(v28, v29);
    }
  }
  return 0;
}

uint64_t sub_1B2547FB4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1B2547FF4()
{
  unint64_t result;

  result = qword_1EEFDA028;
  if (!qword_1EEFDA028)
  {
    result = MEMORY[0x1B5E261DC](&protocol conformance descriptor for AnalysisOptions.ModelRetention, &type metadata for AnalysisOptions.ModelRetention);
    atomic_store(result, (unint64_t *)&qword_1EEFDA028);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for AnalysisOptions(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1B25CCCDC();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = v10[1];
    if (v11)
    {
      *v9 = *v10;
      v9[1] = v11;
      v12 = v10[3];
      v9[2] = v10[2];
      v9[3] = v12;
      v13 = v10[5];
      v9[4] = v10[4];
      v9[5] = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v15 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v15;
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
    }
  }
  return a1;
}

uint64_t destroy for AnalysisOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_1B25CCCDC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  result = *(_QWORD *)(a1 + *(int *)(a2 + 24) + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for AnalysisOptions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;

  v6 = sub_1B25CCCDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  if (v10)
  {
    *v8 = *v9;
    v8[1] = v10;
    v11 = v9[3];
    v8[2] = v9[2];
    v8[3] = v11;
    v12 = v9[5];
    v8[4] = v9[4];
    v8[5] = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v13 = *((_OWORD *)v9 + 1);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *((_OWORD *)v8 + 1) = v13;
    *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
  }
  return a1;
}

uint64_t assignWithCopy for AnalysisOptions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v6 = sub_1B25CCCDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v7 = *(int *)(a3 + 24);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = *(_QWORD *)(a1 + v7 + 8);
  v11 = v9[1];
  if (v10)
  {
    if (v11)
    {
      *v8 = *v9;
      v8[1] = v9[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v8[2] = v9[2];
      v8[3] = v9[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v8[4] = v9[4];
      v8[5] = v9[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B2548370((uint64_t)v8);
      v13 = *((_OWORD *)v9 + 1);
      v12 = *((_OWORD *)v9 + 2);
      *(_OWORD *)v8 = *(_OWORD *)v9;
      *((_OWORD *)v8 + 1) = v13;
      *((_OWORD *)v8 + 2) = v12;
    }
  }
  else if (v11)
  {
    *v8 = *v9;
    v8[1] = v9[1];
    v8[2] = v9[2];
    v8[3] = v9[3];
    v8[4] = v9[4];
    v8[5] = v9[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v14 = *(_OWORD *)v9;
    v15 = *((_OWORD *)v9 + 2);
    *((_OWORD *)v8 + 1) = *((_OWORD *)v9 + 1);
    *((_OWORD *)v8 + 2) = v15;
    *(_OWORD *)v8 = v14;
  }
  return a1;
}

uint64_t sub_1B2548370(uint64_t a1)
{
  destroy for AnalysisOptions.PowerContext();
  return a1;
}

uint64_t initializeWithTake for AnalysisOptions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;

  v6 = sub_1B25CCCDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v8[2] = v9[2];
  return a1;
}

uint64_t assignWithTake for AnalysisOptions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;

  v6 = sub_1B25CCCDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  if (!*(_QWORD *)(a1 + v7 + 8))
    goto LABEL_5;
  v10 = *(_QWORD *)(v9 + 8);
  if (!v10)
  {
    sub_1B2548370(a1 + v7);
LABEL_5:
    v13 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v13;
    *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
    return a1;
  }
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = v12;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AnalysisOptions()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B25484D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;
  int v9;

  v6 = OUTLINED_FUNCTION_37_4();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  v9 = v8 - 1;
  if (v9 < 0)
    v9 = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for AnalysisOptions()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B2548568(uint64_t a1, unsigned int a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = OUTLINED_FUNCTION_37_4();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = OUTLINED_FUNCTION_162_1();
    return __swift_storeEnumTagSinglePayload(v9, v10, v11, v12);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  }
  return result;
}

uint64_t sub_1B25485D0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B25CCCDC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AnalysisOptions.ModelRetention(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1B2548698 + 4 * byte_1B25DDEAD[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1B25486CC + 4 * byte_1B25DDEA8[v4]))();
}

uint64_t sub_1B25486CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B25486D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B25486DCLL);
  return result;
}

uint64_t sub_1B25486E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B25486F0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1B25486F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B25486FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AnalysisOptions.ModelRetention()
{
  return &type metadata for AnalysisOptions.ModelRetention;
}

ValueMetadata *type metadata accessor for AnalysisOptions.PowerContext()
{
  return &type metadata for AnalysisOptions.PowerContext;
}

uint64_t *initializeBufferWithCopyOfBuffer for AnalysisOptions.LoggingInfo(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1B25CC61C();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
  }
  return a1;
}

uint64_t destroy for AnalysisOptions.LoggingInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = sub_1B25CC61C();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 20), v4);
}

uint64_t initializeWithCopy for AnalysisOptions.LoggingInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1B25CC61C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t assignWithCopy for AnalysisOptions.LoggingInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1B25CC61C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t initializeWithTake for AnalysisOptions.LoggingInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1B25CC61C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t assignWithTake for AnalysisOptions.LoggingInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1B25CC61C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnalysisOptions.LoggingInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B25489F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_9_8();
  return __swift_getEnumTagSinglePayload(v1, v0, v2);
}

uint64_t storeEnumTagSinglePayload for AnalysisOptions.LoggingInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B2548A2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_9_8();
  v0 = OUTLINED_FUNCTION_162_1();
  return __swift_storeEnumTagSinglePayload(v0, v1, v2, v3);
}

uint64_t sub_1B2548A4C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B25CC61C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_5()
{
  return type metadata accessor for AnalysisOptions(0);
}

uint64_t OUTLINED_FUNCTION_1_5()
{
  uint64_t v0;

  return sub_1B2547B54(v0);
}

uint64_t OUTLINED_FUNCTION_4_9()
{
  return sub_1B25CD5D0();
}

uint64_t OUTLINED_FUNCTION_9_8()
{
  return sub_1B25CC61C();
}

uint64_t OUTLINED_FUNCTION_10_10()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_11_6@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v1, v3, v2);
}

uint64_t sub_1B2548B34()
{
  return swift_initClassMetadata2();
}

double sub_1B2548BA0()
{
  id v0;
  double result;
  _OWORD v2[2];
  char v3;

  v0 = objc_msgSend((id)objc_opt_self(), sel_cooldownTimerTimeoutSeconds);
  sub_1B2548C00(1, 0, (uint64_t)v2, (double)(unint64_t)v0);
  result = *(double *)v2;
  xmmword_1EEFD6BA0 = v2[0];
  *(_OWORD *)algn_1EEFD6BB0 = v2[1];
  byte_1EEFD6BC0 = v3;
  return result;
}

uint64_t sub_1B2548C00@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>, double a4@<D0>)
{
  double v5;
  uint64_t v7;
  uint64_t v8;

  v5 = ceil(a4);
  if ((~*(_QWORD *)&v5 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v5 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v5 < 9.22337204e18)
  {
    v7 = result;
    result = sub_1B25CD714();
    *(_QWORD *)a3 = v7;
    *(_BYTE *)(a3 + 8) = a2 & 1;
    *(_QWORD *)(a3 + 16) = result;
    *(_QWORD *)(a3 + 24) = v8;
    *(_BYTE *)(a3 + 32) = 0;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1B2548C8C()
{
  uint64_t result;
  _OWORD v1[2];
  char v2;

  if (qword_1EEFD6BC8 != -1)
    swift_once();
  v1[0] = xmmword_1EEFD6BA0;
  v1[1] = *(_OWORD *)algn_1EEFD6BB0;
  v2 = byte_1EEFD6BC0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6DF0);
  swift_allocObject();
  result = sub_1B2548D20((uint64_t)v1, 0, 0);
  qword_1EEFE41B0 = result;
  return result;
}

uint64_t sub_1B2548D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  __int128 v8;

  swift_defaultActor_initialize();
  v7 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v3 + 168) = 0;
  *(_QWORD *)(v3 + 176) = v7;
  v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v3 + 112) = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 128) = v8;
  *(_BYTE *)(v3 + 144) = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(v3 + 152) = a2;
  *(_QWORD *)(v3 + 160) = a3;
  return v3;
}

uint64_t sub_1B2548D78()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 168))
  {
    swift_retain();
    sub_1B25CCD3C();
    swift_release();
  }
  sub_1B24C4564(*(_QWORD *)(v0 + 152));
  swift_release();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_1B2548DEC()
{
  sub_1B2548D78();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for KeepAliveCache(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for KeepAliveCache);
}

uint64_t getEnumTagSinglePayload for KeepAliveCachePolicy(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for KeepAliveCachePolicy(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 33) = v3;
  return result;
}

ValueMetadata *type metadata accessor for KeepAliveCachePolicy()
{
  return &type metadata for KeepAliveCachePolicy;
}

uint64_t sub_1B2548E70()
{
  return sub_1B24B1AE4();
}

id AnalysisContext.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t sub_1B2548EA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = a3;
  v3[2] = a3;
  v3[3] = a1;
  return OUTLINED_FUNCTION_10_3();
}

uint64_t sub_1B2548EC0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  if (!*(_QWORD *)(*(_QWORD *)(v0 + 40) + 16))
    return OUTLINED_FUNCTION_15_0(*(uint64_t (**)(void))(v0 + 8));
  v1 = OUTLINED_FUNCTION_109_5();
  OUTLINED_FUNCTION_639(v1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v2;
  *v2 = v0;
  v2[1] = sub_1B2548F34;
  OUTLINED_FUNCTION_637();
  return OUTLINED_FUNCTION_53_5();
}

uint64_t sub_1B2548F34()
{
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B2548F74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = a3;
  v3[2] = a3;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_1B2548F90()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  if (!*(_QWORD *)(*(_QWORD *)(v0 + 40) + 16))
    return OUTLINED_FUNCTION_15_0(*(uint64_t (**)(void))(v0 + 8));
  v1 = OUTLINED_FUNCTION_109_5();
  OUTLINED_FUNCTION_639(v1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v2;
  *v2 = v0;
  v2[1] = sub_1B2549004;
  OUTLINED_FUNCTION_637();
  return OUTLINED_FUNCTION_53_5();
}

uint64_t sub_1B2549004()
{
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

void sub_1B2549044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B2549118(a1, a2, a3, (void (*)(void))sub_1B24E1148);
}

void sub_1B2549050(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v6;
  char v7;

  if (*(_QWORD *)(a3 + 16) && (v6 = sub_1B24E1148(a1, a2), (v7 & 1) != 0))
  {
    sub_1B24BFFF8(*(_QWORD *)(a3 + 56) + 32 * v6, (uint64_t)a4);
  }
  else
  {
    *a4 = 0u;
    a4[1] = 0u;
    OUTLINED_FUNCTION_0();
  }
}

void sub_1B254909C(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1B24E11AC();
    if ((v2 & 1) != 0)
      OUTLINED_FUNCTION_93_5();
  }
  OUTLINED_FUNCTION_0();
}

void sub_1B25490D0(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1B24E11AC();
    if ((v2 & 1) != 0)
      swift_retain();
  }
  OUTLINED_FUNCTION_0();
}

void sub_1B254910C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B2549118(a1, a2, a3, (void (*)(void))sub_1B24E113C);
}

void sub_1B2549118(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  char v4;

  if (*(_QWORD *)(a3 + 16))
  {
    a4();
    if ((v4 & 1) != 0)
      OUTLINED_FUNCTION_93_5();
  }
  OUTLINED_FUNCTION_0();
}

void sub_1B254914C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1B24E113C(a1, a2);
    if ((v3 & 1) != 0)
      OUTLINED_FUNCTION_47_0();
  }
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_0();
}

void sub_1B2549194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (*(_QWORD *)(a3 + 16))
  {
    v3 = sub_1B24E113C(a1, a2);
    if ((v4 & 1) != 0)
      OUTLINED_FUNCTION_94_7(v3);
  }
  OUTLINED_FUNCTION_0();
}

void sub_1B25491CC(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  char v5;

  if (*(_QWORD *)(a4 + 16))
  {
    sub_1B24E1250(a1, a2, a3);
    if ((v5 & 1) != 0)
      OUTLINED_FUNCTION_94_7(v4);
  }
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1B2549204(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    sub_1B2569468(a1, a2);
    return sub_1B254E8C4(a2);
  }
  else
  {
    sub_1B254C4C4();
    sub_1B254E8C4(a2);
    return OUTLINED_FUNCTION_63_6();
  }
}

void sub_1B2549250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B2549274(a1, a2, a3, (void (*)(void))sub_1B24AB608, (void (*)(_QWORD *, uint64_t, uint64_t))sub_1B25694BC, &qword_1ED36D068, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t))sub_1B254C5D4);
}

void sub_1B2549274(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), void (*a5)(_QWORD *, uint64_t, uint64_t), uint64_t *a6, void (*a7)(_QWORD *__return_ptr, uint64_t, uint64_t))
{
  _QWORD v12[4];

  if (*(_QWORD *)(a1 + 24))
  {
    a4();
    a5(v12, a2, a3);
    OUTLINED_FUNCTION_10_0();
  }
  else
  {
    sub_1B254E678(a1, a6);
    a7(v12, a2, a3);
    OUTLINED_FUNCTION_10_0();
    sub_1B254E678((uint64_t)v12, a6);
  }
}

void sub_1B2549308(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v5 = 0;
    v6 = MEMORY[0x1E0DEE9D8];
    do
    {
      v7 = v5;
      while (1)
      {
        if (v7 >= *(_QWORD *)(a1 + 16))
        {
          __break(1u);
          return;
        }
        v13 = *(_OWORD *)(a1 + 32 + 16 * v7);
        v5 = v7 + 1;
        v8 = swift_retain();
        ((void (*)(uint64_t *__return_ptr, uint64_t))v13)(&v14, v8);
        v9 = v14;
        if (!v14)
          break;
        swift_unknownObjectRelease();
        if (v9 != a2)
          break;
        swift_release();
        ++v7;
        if (v4 == v5)
          goto LABEL_14;
      }
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v15 = v6;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1B2505718();
        v6 = v15;
      }
      v11 = *(_QWORD *)(v6 + 16);
      v12 = v11 + 1;
      if (v11 >= *(_QWORD *)(v6 + 24) >> 1)
      {
        sub_1B2505718();
        v12 = v11 + 1;
        v6 = v15;
      }
      *(_QWORD *)(v6 + 16) = v12;
      *(_OWORD *)(v6 + 16 * v11 + 32) = v13;
    }
    while (v4 - 1 != v7);
  }
LABEL_14:
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_1B2549484()
{
  swift_bridgeObjectRetain();
  return sub_1B25494B8();
}

void sub_1B25494AC()
{
  sub_1B2549580(&OBJC_IVAR____TtC6Speech15AnalysisContext_contextualStringsMutex);
}

uint64_t sub_1B25494B8()
{
  return sub_1B25495D0();
}

uint64_t sub_1B25494CC(_QWORD *a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *a1 = a2;
  return swift_bridgeObjectRetain();
}

void sub_1B2549510(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  sub_1B25494AC();
  *a1 = v3;
  OUTLINED_FUNCTION_0();
}

void sub_1B2549540(uint64_t *a1, char a2)
{
  sub_1B2549660(a1, a2, (void (*)(uint64_t))sub_1B25494B8);
}

uint64_t sub_1B254954C()
{
  swift_bridgeObjectRetain();
  return sub_1B25495BC();
}

void sub_1B2549574()
{
  sub_1B2549580(&OBJC_IVAR____TtC6Speech15AnalysisContext_userDataMutex);
}

void sub_1B2549580(_QWORD *a1)
{
  uint64_t v1;
  os_unfair_lock_s *v2;

  v2 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + *a1) + 24);
  os_unfair_lock_lock(v2);
  OUTLINED_FUNCTION_47_0();
  os_unfair_lock_unlock(v2);
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1B25495BC()
{
  return sub_1B25495D0();
}

uint64_t sub_1B25495D0()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  _QWORD *v3;
  os_unfair_lock_s *v4;
  uint64_t v5;

  OUTLINED_FUNCTION_81_3();
  v2 = v1;
  v4 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + *v3) + 24);
  os_unfair_lock_lock(v4);
  v5 = OUTLINED_FUNCTION_128_2();
  v2(v5);
  os_unfair_lock_unlock(v4);
  return OUTLINED_FUNCTION_27_6();
}

void sub_1B2549624(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  sub_1B2549574();
  *a1 = v3;
  OUTLINED_FUNCTION_0();
}

void sub_1B2549654(uint64_t *a1, char a2)
{
  sub_1B2549660(a1, a2, (void (*)(uint64_t))sub_1B25495BC);
}

void sub_1B2549660(uint64_t *a1, char a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  if ((a2 & 1) != 0)
  {
    v4 = OUTLINED_FUNCTION_133();
    a3(v4);
    OUTLINED_FUNCTION_47_9();
  }
  else
  {
    a3(*a1);
    OUTLINED_FUNCTION_262();
  }
}

uint64_t sub_1B25496A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_280();
  swift_bridgeObjectRetain();
  sub_1B25494AC();
  sub_1B2549118(v1, v0, v2, (void (*)(void))sub_1B24E1148);
  v4 = v3;
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_173();
  return v4;
}

uint64_t sub_1B2549784()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_81_3();
  v2 = v1;
  v4 = v3;
  if (v0)
  {
    v5 = v0;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_133();
    sub_1B25494AC();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1B254E22C(v5, v4, v2, isUniquelyReferenced_nonNull_native, (uint64_t (*)(uint64_t))sub_1B24E1148, &qword_1EEFDA110, (uint64_t)&type metadata for AnalysisContext.ContextualStringsTag, (void (*)(uint64_t))sub_1B254C1D8);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_69();
    return sub_1B25494B8();
  }
  else
  {
    OUTLINED_FUNCTION_133();
    sub_1B25494AC();
    v8 = OUTLINED_FUNCTION_665();
    sub_1B254C828(v8, v9);
    swift_bridgeObjectRelease();
    sub_1B25494B8();
    return OUTLINED_FUNCTION_27_6();
  }
}

double sub_1B25498E4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t *boxed_opaque_existential_1;
  double result;
  _QWORD v9[3];
  uint64_t v10;

  swift_bridgeObjectRetain();
  sub_1B2549574();
  v2 = OUTLINED_FUNCTION_665();
  OUTLINED_FUNCTION_95_5(v2, v3, v4);
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_173();
  v5 = v10;
  if (v10)
  {
    v6 = __swift_project_boxed_opaque_existential_1(v9, v10);
    *(_QWORD *)(a1 + 24) = v5;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(boxed_opaque_existential_1, v6, v5);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v9);
  }
  else
  {
    sub_1B254E678((uint64_t)v9, &qword_1EEFD7650);
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

Speech::AnalysisContext::UserDataTag __swiftcall AnalysisContext.UserDataTag.init(rawValue:)(Speech::AnalysisContext::UserDataTag rawValue)
{
  Speech::AnalysisContext::UserDataTag *v1;

  *v1 = rawValue;
  return rawValue;
}

uint64_t sub_1B2549A9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void (*v22)(_QWORD *, uint64_t, uint64_t);
  uint64_t *v23;
  void (*v24)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;

  v5 = sub_1B251AC38(a1, (uint64_t)&v36);
  if (v38)
  {
    OUTLINED_FUNCTION_35_9(v5, v6, v7, v8, v9, v10, v11, v12, v33, v35, v36, v37, v38, v39);
    v13 = v40;
    v14 = __swift_project_boxed_opaque_existential_1(&v39, v40);
    v38 = v13;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v36);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(boxed_opaque_existential_1, v14, v13);
    OUTLINED_FUNCTION_133();
    sub_1B2549574();
    v21 = OUTLINED_FUNCTION_87_6(v16, v17, v18, v19, (uint64_t)sub_1B2569450, (uint64_t)&qword_1EEFD7650, (uint64_t)sub_1B254C2E0, v20, v34, v16, v36);
    sub_1B2549274((uint64_t)v21, a2, a3, (void (*)(void))sub_1B24AB608, v22, v23, v24);
    sub_1B25495BC();
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v39);
  }
  else
  {
    v26 = OUTLINED_FUNCTION_133();
    OUTLINED_FUNCTION_73_7(v26, &qword_1ED36D068, v27, v28);
    sub_1B2549574();
    *(_QWORD *)&v36 = v29;
    v30 = OUTLINED_FUNCTION_665();
    sub_1B254C2E0(v30, v31, v32);
    sub_1B254E678((uint64_t)&v39, &qword_1EEFD7650);
    sub_1B25495BC();
    return OUTLINED_FUNCTION_69();
  }
}

uint64_t sub_1B2549C74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_10_3();
}

uint64_t sub_1B2549C88()
{
  uint64_t v0;
  _QWORD *v1;

  swift_bridgeObjectRetain();
  sub_1B25494B8();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_1B2549CDC;
  return sub_1B254AD8C();
}

uint64_t sub_1B2549CDC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = a1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B2549D2C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  v1 = v0[3];
  v2 = OUTLINED_FUNCTION_8_4();
  v0[6] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  OUTLINED_FUNCTION_67_7();
  v3 = (_QWORD *)swift_task_alloc();
  v0[7] = v3;
  *v3 = v0;
  v3[1] = sub_1B2549DA0;
  v4 = OUTLINED_FUNCTION_107_3((uint64_t)&unk_1EEFDA058);
  return OUTLINED_FUNCTION_40_4(v4, v5, v6, v7);
}

uint64_t sub_1B2549DA0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_81();
  swift_release();
  OUTLINED_FUNCTION_10_0();
  return OUTLINED_FUNCTION_15_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B2549DE4(_OWORD *a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a2;
  *(_OWORD *)(v2 + 24) = *a1;
  return swift_task_switch();
}

uint64_t sub_1B2549E04(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;

  OUTLINED_FUNCTION_106_4(a1);
  *(_QWORD *)(v1 + 40) = v5;
  if (!v5)
    return OUTLINED_FUNCTION_6_6(*(uint64_t (**)(void))(v1 + 8));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 48) = v2;
  v3 = OUTLINED_FUNCTION_108_6(v2, (uint64_t)sub_1B2549E58);
  return OUTLINED_FUNCTION_52_8(v3);
}

uint64_t sub_1B2549E58()
{
  uint64_t v0;

  OUTLINED_FUNCTION_81();
  swift_unknownObjectRelease();
  return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B2549E94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_10_3();
}

uint64_t sub_1B2549EAC()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7648);
  sub_1B254D170();
  sub_1B25CD468();
  sub_1B25495BC();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_1B2549F40;
  return sub_1B254AD8C();
}

uint64_t sub_1B2549F40(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = a1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B2549F90()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  v1 = v0[4];
  v2 = OUTLINED_FUNCTION_8_4();
  v0[7] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  OUTLINED_FUNCTION_67_7();
  v3 = (_QWORD *)swift_task_alloc();
  v0[8] = v3;
  *v3 = v0;
  v3[1] = sub_1B254A004;
  v4 = OUTLINED_FUNCTION_107_3((uint64_t)&unk_1EEFDA078);
  return OUTLINED_FUNCTION_40_4(v4, v5, v6, v7);
}

uint64_t sub_1B254A004()
{
  uint64_t v0;

  OUTLINED_FUNCTION_81();
  swift_release();
  OUTLINED_FUNCTION_10_0();
  return OUTLINED_FUNCTION_15_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B254A048(_OWORD *a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a2;
  *(_OWORD *)(v2 + 24) = *a1;
  return swift_task_switch();
}

uint64_t sub_1B254A068(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;

  OUTLINED_FUNCTION_106_4(a1);
  *(_QWORD *)(v1 + 40) = v5;
  if (!v5)
    return OUTLINED_FUNCTION_6_6(*(uint64_t (**)(void))(v1 + 8));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 48) = v2;
  v3 = OUTLINED_FUNCTION_108_6(v2, (uint64_t)sub_1B254E984);
  return OUTLINED_FUNCTION_52_8(v3);
}

uint64_t sub_1B254A120()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;

  sub_1B2549574();
  sub_1B2549050(0x65524D4C6F65675FLL, 0xEE0044496E6F6967, v0, &v13);
  v1 = OUTLINED_FUNCTION_10_0();
  if (v15)
  {
    OUTLINED_FUNCTION_35_9(v1, v2, v3, v4, v5, v6, v7, v8, v10, v12, v13, v14, v15, v16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7648);
    OUTLINED_FUNCTION_72_7();
    return v11;
  }
  else
  {
    OUTLINED_FUNCTION_73_7(v1, &qword_1EEFD7650, v3, v4);
    return 0;
  }
}

uint64_t sub_1B254A228(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(void);
  void (*v9)(_QWORD *, uint64_t, uint64_t);
  uint64_t *v10;
  uint64_t v12;

  if (!a2)
    a1 = 0;
  sub_1B2549574();
  v7 = OUTLINED_FUNCTION_87_6(v2, v3, v4, (uint64_t)sub_1B24AB608, (uint64_t)sub_1B2569450, (uint64_t)&unk_1EEFD7650, v5, v6, v12, v2, a1);
  sub_1B2549274((uint64_t)v7, 0x65524D4C6F65675FLL, 0xEE0044496E6F6967, v8, v9, v10, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t))sub_1B254C2E0);
  return OUTLINED_FUNCTION_49_6();
}

uint64_t sub_1B254A2BC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return sub_1B254A228(v1, v2);
}

void sub_1B254A2F8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  *a1 = sub_1B254A120();
  a1[1] = v3;
  OUTLINED_FUNCTION_0();
}

void sub_1B254A328(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_98_5();
    OUTLINED_FUNCTION_47_9();
  }
  else
  {
    OUTLINED_FUNCTION_98_5();
    OUTLINED_FUNCTION_262();
  }
}

uint64_t sub_1B254A368()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return sub_1B254A438(v0);
}

uint64_t sub_1B254A390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;

  sub_1B2549574();
  sub_1B2549050(0xD000000000000018, 0x80000001B25D49E0, v0, &v13);
  v1 = OUTLINED_FUNCTION_10_0();
  if (v15)
  {
    OUTLINED_FUNCTION_35_9(v1, v2, v3, v4, v5, v6, v7, v8, v10, v11, v13, v14, v15, v16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7648);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDA080);
    swift_dynamicCast();
    return v12;
  }
  else
  {
    OUTLINED_FUNCTION_73_7(v1, &qword_1EEFD7650, v3, v4);
    return 0;
  }
}

uint64_t sub_1B254A438(uint64_t a1)
{
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void (*v7)(void);
  void (*v8)(_QWORD *, uint64_t, uint64_t);
  uint64_t *v9;
  void (*v10)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v12;
  char v13;

  if (a1)
  {
    v1 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDA080);
    v13 = v1;
  }
  else
  {
    v13 = 0;
  }
  sub_1B2549574();
  v5 = OUTLINED_FUNCTION_87_6(v2, v3, 0x80000001B25D49E0, (uint64_t)sub_1B24AB608, (uint64_t)sub_1B2569450, (uint64_t)&unk_1EEFD7650, (uint64_t)sub_1B254C2E0, v4, v12, v2, v13);
  sub_1B2549274((uint64_t)v5, 0xD000000000000018, v6, v7, v8, v9, v10);
  return OUTLINED_FUNCTION_49_6();
}

void sub_1B254A4CC(uint64_t *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_1B254A390();
  OUTLINED_FUNCTION_0();
}

void sub_1B254A4FC(uint64_t *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = swift_bridgeObjectRetain();
    sub_1B254A438(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B254A438(*a1);
    OUTLINED_FUNCTION_0();
  }
}

double sub_1B254A53C@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  sub_1B254A630();
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  result = *(double *)&v7;
  *(_OWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 80) = v8;
  return result;
}

uint64_t sub_1B254A58C(uint64_t *a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  __int128 v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;

  v1 = a1[5];
  v2 = (void *)a1[6];
  v3 = (void *)a1[7];
  v4 = (void *)a1[8];
  v6 = (void *)a1[9];
  v5 = (void *)a1[10];
  v14 = *a1;
  v7 = *(_OWORD *)(a1 + 3);
  v15 = *(_OWORD *)(a1 + 1);
  v16 = v7;
  v17 = v1;
  v18 = v2;
  v19 = v3;
  v20 = v4;
  v21 = v6;
  v22 = v5;
  v8 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = v2;
  v10 = v3;
  v11 = v4;
  v12 = v6;
  return sub_1B254A6C0((__int128 *)&v14);
}

uint64_t sub_1B254A630()
{
  uint64_t result;
  __int128 v1;
  uint64_t v2;
  __int128 v3;

  sub_1B2549574();
  OUTLINED_FUNCTION_95_5(0xD000000000000014, 0x80000001B25D3C50, &v1);
  result = OUTLINED_FUNCTION_173();
  if (v2)
  {
    sub_1B24AB608(&v1, &v3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7648);
    return swift_dynamicCast();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B254A6C0(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _QWORD v9[4];

  v7 = a1[1];
  v8 = *a1;
  v5 = a1[3];
  v6 = a1[2];
  v4 = a1[4];
  v1 = *((_QWORD *)a1 + 10);
  v9[3] = &type metadata for VoiceCommandContext;
  v2 = OUTLINED_FUNCTION_8_4();
  v9[0] = v2;
  *(_OWORD *)(v2 + 16) = v8;
  *(_OWORD *)(v2 + 32) = v7;
  *(_OWORD *)(v2 + 48) = v6;
  *(_OWORD *)(v2 + 64) = v5;
  *(_OWORD *)(v2 + 80) = v4;
  *(_QWORD *)(v2 + 96) = v1;
  sub_1B2549574();
  sub_1B2549274((uint64_t)v9, 0xD000000000000014, 0x80000001B25D3C50, (void (*)(void))sub_1B24AB608, (void (*)(_QWORD *, uint64_t, uint64_t))sub_1B2569450, &qword_1EEFD7650, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t))sub_1B254C2E0);
  return sub_1B25495BC();
}

void (*sub_1B254A7A0(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  sub_1B254A630();
  return sub_1B254A7EC;
}

void sub_1B254A7EC(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  __int128 v18[5];

  v2 = *(_QWORD **)a1;
  v4 = *(void **)(*(_QWORD *)a1 + 48);
  v3 = *(void **)(*(_QWORD *)a1 + 56);
  v6 = *(void **)(*(_QWORD *)a1 + 64);
  v5 = *(void **)(*(_QWORD *)a1 + 72);
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_62_6();
    v8 = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_133();
    v9 = v4;
    v10 = v3;
    v11 = v6;
    v12 = v5;
    sub_1B254A6C0(v18);
    v13 = (void *)v2[6];
    v14 = (void *)v2[7];
    v15 = (void *)v2[8];
    v16 = (void *)v2[9];
    v17 = (void *)v2[10];
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_173();
    OUTLINED_FUNCTION_69();

  }
  else
  {
    OUTLINED_FUNCTION_62_6();
    sub_1B254A6C0(v18);
  }
  free(v2);
}

uint64_t sub_1B254A8C8()
{
  return sub_1B254A99C();
}

uint64_t sub_1B254A8E8(uint64_t a1, uint64_t a2)
{
  return sub_1B254AA4C(a1, a2, 0x656C69666F72705FLL, 0xEC00000061746144);
}

void sub_1B254A908(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  *a1 = sub_1B254A8C8();
  a1[1] = v3;
  OUTLINED_FUNCTION_0();
}

void sub_1B254A938(uint64_t a1, char a2)
{
  sub_1B254AB44(a1, a2);
}

void sub_1B254A944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v6 = OUTLINED_FUNCTION_665();
  sub_1B24B8920(v6, v7);
  v8 = OUTLINED_FUNCTION_665();
  a5(v8);
  OUTLINED_FUNCTION_262();
}

uint64_t sub_1B254A978()
{
  return sub_1B254A99C();
}

uint64_t sub_1B254A99C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  OUTLINED_FUNCTION_280();
  sub_1B2549574();
  OUTLINED_FUNCTION_95_5(v1, v0, &v14);
  v2 = OUTLINED_FUNCTION_173();
  if (v16)
  {
    OUTLINED_FUNCTION_35_9(v2, v3, v4, v5, v6, v7, v8, v9, v11, v13, v14, v15, v16, v17);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7648);
    OUTLINED_FUNCTION_72_7();
    return v12;
  }
  else
  {
    OUTLINED_FUNCTION_73_7(v2, &qword_1EEFD7650, v4, v5);
    return 0;
  }
}

uint64_t sub_1B254AA28(uint64_t a1, uint64_t a2)
{
  return sub_1B254AA4C(a1, a2, 0x666F725074696A5FLL, 0xEF61746144656C69);
}

uint64_t sub_1B254AA4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v4;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(void);
  void (*v17)(_QWORD *, uint64_t, uint64_t);
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  char v23;

  OUTLINED_FUNCTION_280();
  if (v7 >> 60 == 15)
    v23 = 0;
  else
    v23 = v4;
  v8 = OUTLINED_FUNCTION_459();
  sub_1B24B8920(v8, v9);
  sub_1B2549574();
  v15 = OUTLINED_FUNCTION_87_6(v10, v11, v12, (uint64_t)sub_1B24AB608, (uint64_t)sub_1B2569450, (uint64_t)&qword_1EEFD7650, v13, v14, v22, v10, v23);
  sub_1B2549274((uint64_t)v15, a3, a4, v16, v17, v18, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t))sub_1B254C2E0);
  sub_1B25495BC();
  v19 = OUTLINED_FUNCTION_459();
  return sub_1B24B890C(v19, v20);
}

void sub_1B254AB08(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  *a1 = sub_1B254A978();
  a1[1] = v3;
  OUTLINED_FUNCTION_0();
}

void sub_1B254AB38(uint64_t a1, char a2)
{
  sub_1B254AB44(a1, a2);
}

void sub_1B254AB44(uint64_t a1, char a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;

  if ((a2 & 1) != 0)
  {
    v2 = OUTLINED_FUNCTION_99_5();
    sub_1B24B8920(v2, v3);
    OUTLINED_FUNCTION_100_4();
    v4 = OUTLINED_FUNCTION_99_5();
    sub_1B24B890C(v4, v5);
  }
  else
  {
    OUTLINED_FUNCTION_100_4();
    OUTLINED_FUNCTION_262();
  }
}

void static AnalysisContext.ContextualStringsTag.jitGrammar.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_21_7(a1);
}

void static AnalysisContext.ContextualStringsTag.leftContext.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_21_7(a1);
}

void static AnalysisContext.ContextualStringsTag.rightContext.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_21_7(a1);
}

void static AnalysisContext.ContextualStringsTag.selectedText.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_21_7(a1);
}

_QWORD *sub_1B254AC18@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1B254AD1C(a1, (_QWORD *(*)(_QWORD *__return_ptr, _QWORD, _QWORD))AnalysisContext.ContextualStringsTag.init(rawValue:), a2);
}

uint64_t sub_1B254AC24(_QWORD *a1, _QWORD *a2)
{
  return sub_1B256B708(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_1B254AC38()
{
  _QWORD *v0;

  return sub_1B2497120(*v0, v0[1]);
}

uint64_t sub_1B254AC40(uint64_t a1)
{
  _QWORD *v1;

  return sub_1B2497264(a1, *v1, v1[1]);
}

uint64_t sub_1B254AC48(uint64_t a1)
{
  _QWORD *v1;

  return sub_1B24972A8(a1, *v1, v1[1]);
}

void AnalysisContext.UserDataTag.rawValue.getter()
{
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_0();
}

void static AnalysisContext.UserDataTag.geoLMRegionID.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_21_7(a1);
}

void static AnalysisContext.UserDataTag.contextualNamedEntities.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_21_7(a1);
}

void static AnalysisContext.UserDataTag.voiceCommandContext.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_21_7(a1);
}

void static AnalysisContext.UserDataTag.profileData.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_21_7(a1);
}

void static AnalysisContext.UserDataTag.jitProfileData.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_21_7(a1);
}

_QWORD *sub_1B254AD10@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1B254AD1C(a1, (_QWORD *(*)(_QWORD *__return_ptr, _QWORD, _QWORD))AnalysisContext.UserDataTag.init(rawValue:), a2);
}

_QWORD *sub_1B254AD1C@<X0>(_QWORD *a1@<X0>, _QWORD *(*a2)(_QWORD *__return_ptr, _QWORD, _QWORD)@<X3>, _QWORD *a3@<X8>)
{
  _QWORD *result;
  uint64_t v5;
  _QWORD v6[2];

  result = a2(v6, *a1, a1[1]);
  v5 = v6[1];
  *a3 = v6[0];
  a3[1] = v5;
  return result;
}

void sub_1B254AD58(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  AnalysisContext.UserDataTag.rawValue.getter();
  *a1 = v2;
  a1[1] = v3;
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1B254AD78(uint64_t *a1, uint64_t *a2)
{
  return sub_1B2560900(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_1B254AD8C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  return OUTLINED_FUNCTION_10_3();
}

uint64_t sub_1B254ADA0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 48) = *(_QWORD *)(*(_QWORD *)(v0 + 40)
                                   + OBJC_IVAR____TtC6Speech15AnalysisContext_contextDelegatesMutex);
  return OUTLINED_FUNCTION_10_3();
}

uint64_t sub_1B254ADC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v3)(uint64_t);

  swift_beginAccess();
  v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  v1 = swift_bridgeObjectRetain();
  return v3(v1);
}

uint64_t sub_1B254AE10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return OUTLINED_FUNCTION_10_3();
}

uint64_t sub_1B254AE28()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = *(_QWORD *)(*(_QWORD *)(v0 + 16)
                                   + OBJC_IVAR____TtC6Speech15AnalysisContext_contextDelegatesMutex);
  return OUTLINED_FUNCTION_10_3();
}

uint64_t sub_1B254AE48()
{
  uint64_t v0;

  sub_1B254B208(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B254AE74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return OUTLINED_FUNCTION_10_3();
}

uint64_t sub_1B254AE8C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = *(_QWORD *)(*(_QWORD *)(v0 + 16)
                                   + OBJC_IVAR____TtC6Speech15AnalysisContext_contextDelegatesMutex);
  return OUTLINED_FUNCTION_10_3();
}

uint64_t sub_1B254AEAC()
{
  uint64_t v0;

  sub_1B254B2C4(*(_QWORD *)(v0 + 24));
  return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v0 + 8));
}

id sub_1B254AED8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  double v15;
  id v16;
  void *v17;
  SEL v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  id v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  sub_1B25494AC();
  sub_1B2500464(v0, v1);
  OUTLINED_FUNCTION_10_0();
  v2 = sub_1B24F3584();
  swift_release();
  v3 = sub_1B254A390();
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)(v3 + 16);
    if (v5)
    {
      v39 = v2;
      v43 = MEMORY[0x1E0DEE9D8];
      sub_1B25CD384();
      v6 = 0;
      v40 = v4;
      while (1)
      {
        v7 = *(_QWORD *)(v4 + v6 + 40);
        v41 = *(_QWORD *)(v4 + v6 + 32);
        v8 = *(unsigned __int8 *)(v4 + v6 + 48);
        v9 = *(_QWORD *)(v4 + v6 + 72);
        v10 = *(_BYTE *)(v4 + v6 + 80);
        v12 = *(_QWORD *)(v4 + v6 + 88);
        v11 = *(_QWORD *)(v4 + v6 + 96);
        if ((*(_BYTE *)(v4 + v6 + 64) & 1) != 0)
        {
          OUTLINED_FUNCTION_444();
          swift_bridgeObjectRetain_n();
          v13 = 0;
          if ((v10 & 1) != 0)
            goto LABEL_8;
        }
        else
        {
          v15 = *(double *)(v4 + v6 + 56);
          v16 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
          OUTLINED_FUNCTION_444();
          OUTLINED_FUNCTION_444();
          swift_bridgeObjectRetain();
          v17 = (void *)OUTLINED_FUNCTION_459();
          v13 = objc_msgSend(v17, v18, v15);
          if ((v10 & 1) != 0)
          {
LABEL_8:
            v14 = 0;
            goto LABEL_9;
          }
        }
        v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v9);
LABEL_9:
        v19 = objc_allocWithZone((Class)_SFContextualNamedEntityCodingObject);
        swift_bridgeObjectRetain();
        sub_1B254BE04(v41, v7, v8, v13, v14, v12, v11);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        sub_1B25CD36C();
        sub_1B25CD390();
        OUTLINED_FUNCTION_459();
        sub_1B25CD39C();
        sub_1B25CD378();
        v6 += 72;
        --v5;
        v4 = v40;
        if (!v5)
        {
          v42 = v43;
          OUTLINED_FUNCTION_10_0();
          v2 = v39;
          goto LABEL_13;
        }
      }
    }
    OUTLINED_FUNCTION_10_0();
    v42 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v42 = 0;
  }
LABEL_13:
  sub_1B25494AC();
  sub_1B2549118(0x6E6F437466656C5FLL, 0xEC00000074786574, v20, (void (*)(void))sub_1B24E1148);
  v22 = v21;
  OUTLINED_FUNCTION_10_0();
  sub_1B25494AC();
  OUTLINED_FUNCTION_43_6(0x6F4374686769725FLL, 0x746Eu);
  v24 = v23;
  OUTLINED_FUNCTION_10_0();
  sub_1B25494AC();
  OUTLINED_FUNCTION_43_6(0x657463656C65735FLL, 0x5464u);
  v26 = v25;
  OUTLINED_FUNCTION_10_0();
  v27 = sub_1B254A120();
  v29 = v28;
  if (*(_QWORD *)(v2 + 16))
  {
    v30 = v2;
  }
  else
  {
    swift_bridgeObjectRelease();
    v30 = 0;
  }
  v31 = sub_1B254A8C8();
  v33 = v32;
  v34 = sub_1B254A978();
  v36 = v35;
  v37 = objc_allocWithZone((Class)_SFAnalysisContextCodingObject);
  return sub_1B254BBE4(v22, v24, v26, v27, v29, v30, v42, v31, v33, v34, v36);
}

uint64_t sub_1B254B208(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v2;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 24) = a2;
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  swift_retain();
  sub_1B2568D04();
  v6 = *(_QWORD *)(*(_QWORD *)(v3 + 112) + 16);
  sub_1B2568E08(v6);
  v7 = *(_QWORD *)(v3 + 112);
  *(_QWORD *)(v7 + 16) = v6 + 1;
  v8 = v7 + 16 * v6;
  *(_QWORD *)(v8 + 32) = sub_1B250A0E4;
  *(_QWORD *)(v8 + 40) = v5;
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1B254B2C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  swift_beginAccess();
  swift_unknownObjectRetain();
  v3 = swift_bridgeObjectRetain();
  sub_1B2549308(v3, a1);
  *(_QWORD *)(v1 + 112) = v4;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B254B33C()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

id AnalysisContext.init()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  objc_super v10;

  v1 = OBJC_IVAR____TtC6Speech15AnalysisContext_contextualStringsMutex;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7FE0);
  v2 = OUTLINED_FUNCTION_8_4();
  v3 = MEMORY[0x1E0DEE9E0];
  *(_DWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 16) = v3;
  *(_QWORD *)&v0[v1] = v2;
  v4 = OBJC_IVAR____TtC6Speech15AnalysisContext_userDataMutex;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7FD8);
  v5 = OUTLINED_FUNCTION_8_4();
  *(_DWORD *)(v5 + 24) = 0;
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)&v0[v4] = v5;
  v6 = OBJC_IVAR____TtC6Speech15AnalysisContext_contextDelegatesMutex;
  type metadata accessor for AnalysisContext.ContextDelegatesMutex();
  v7 = swift_allocObject();
  v8 = v0;
  swift_defaultActor_initialize();
  *(_QWORD *)(v7 + 112) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v0[v6] = v7;

  v10.receiver = v8;
  v10.super_class = (Class)type metadata accessor for AnalysisContext();
  return objc_msgSendSuper2(&v10, sel_init);
}

id AnalysisContext.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AnalysisContext();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void ContextualNamedEntity.content.getter()
{
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_0();
}

void ContextualNamedEntity.sourceFramework.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t ContextualNamedEntity.score.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t ContextualNamedEntity.category.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

void ContextualNamedEntity.language.getter()
{
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_0();
}

Speech::ContextualNamedEntity::SourceFramework_optional __swiftcall ContextualNamedEntity.SourceFramework.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (Speech::ContextualNamedEntity::SourceFramework_optional)rawValue;
}

uint64_t ContextualNamedEntity.SourceFramework.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

BOOL sub_1B254B550(char *a1, char *a2)
{
  return sub_1B25553BC(*a1, *a2);
}

void sub_1B254B55C()
{
  sub_1B2497164();
}

void sub_1B254B564()
{
  sub_1B2497224();
}

void sub_1B254B56C()
{
  sub_1B249731C();
}

Speech::ContextualNamedEntity::SourceFramework_optional sub_1B254B574(Swift::Int *a1)
{
  return ContextualNamedEntity.SourceFramework.init(rawValue:)(*a1);
}

void sub_1B254B57C(uint64_t *a1@<X8>)
{
  *a1 = ContextualNamedEntity.SourceFramework.rawValue.getter();
  OUTLINED_FUNCTION_0();
}

void __swiftcall ContextualNamedEntity.init(personalizationPortraitName:score:category:language:)(Speech::ContextualNamedEntity *__return_ptr retstr, Swift::String personalizationPortraitName, Swift::Double score, Swift::Int category, Swift::String language)
{
  retstr->content = personalizationPortraitName;
  retstr->sourceFramework = Speech_ContextualNamedEntity_SourceFramework_personalizationPortrait;
  retstr->score.value = score;
  retstr->score.is_nil = 0;
  retstr->category.value = category;
  retstr->category.is_nil = 0;
  retstr->language.value = language;
}

void __swiftcall ContextualNamedEntity.init(peopleSuggesterRecipientDisplayName:)(Speech::ContextualNamedEntity *__return_ptr retstr, Swift::String peopleSuggesterRecipientDisplayName)
{
  retstr->content = peopleSuggesterRecipientDisplayName;
  retstr->sourceFramework = Speech_ContextualNamedEntity_SourceFramework_peopleSuggester;
  retstr->score.value = 0.0;
  retstr->score.is_nil = 1;
  retstr->category.value = 0;
  retstr->category.is_nil = 1;
  retstr->language.value._countAndFlagsBits = 0;
  retstr->language.value._object = 0;
}

void VoiceCommandContext.prefixText.getter()
{
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_0();
}

void VoiceCommandContext.postfixText.getter()
{
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_0();
}

void VoiceCommandContext.selectedText.getter()
{
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_0();
}

void VoiceCommandContext.disambiguationActive.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 48);
  OUTLINED_FUNCTION_0();
}

void VoiceCommandContext.cursorInVisibleText.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 56);
  OUTLINED_FUNCTION_0();
}

void VoiceCommandContext.favorCommandSuppression.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 64);
  OUTLINED_FUNCTION_0();
}

void VoiceCommandContext.abortCommandSuppression.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 72);
  OUTLINED_FUNCTION_0();
}

void VoiceCommandContext.undoEvent.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 80);
  OUTLINED_FUNCTION_0();
}

__n128 VoiceCommandContext.init(prefixText:postfixText:selectedText:disambiguationActive:cursorInVisibleText:favorCommandSuppression:abortCommandSuppression:undoEvent:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, unint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, __n128 *a9@<X8>, __n128 a10, unint64_t a11)
{
  __n128 result;

  result = a10;
  a9->n128_u64[0] = a1;
  a9->n128_u64[1] = a2;
  a9[1].n128_u64[0] = a3;
  a9[1].n128_u64[1] = a4;
  a9[2].n128_u64[0] = a5;
  a9[2].n128_u64[1] = a6;
  a9[3].n128_u64[0] = a7;
  a9[3].n128_u64[1] = a8;
  a9[4] = a10;
  a9[5].n128_u64[0] = a11;
  return result;
}

uint64_t VoiceCommandContext.init(prefixText:postfixText:selectedText:disambiguationActive:cursorInVisibleText:favorCommandSuppression:abortCommandSuppression:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = a10;
  a9[9] = a11;
  a9[10] = 0;
  return result;
}

uint64_t sub_1B254B72C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[11] = a4;
  v5[12] = a5;
  v5[9] = a2;
  v5[10] = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD71C0);
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1B254B79C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;

  v5 = *(_QWORD *)(*(_QWORD *)(v1 + 80) + 16);
  if (v5)
  {
    OUTLINED_FUNCTION_44_5();
    v22 = MEMORY[0x1E0DEE9C0] + 8;
    do
    {
      v6 = *(_QWORD *)(v1 + 104);
      v7 = OUTLINED_FUNCTION_8_4();
      v8 = OUTLINED_FUNCTION_18_9(v7);
      v9 = OUTLINED_FUNCTION_38_6(v8);
      OUTLINED_FUNCTION_105_3(v9, v10, v11, v12, v13, v14, v15, v16, v20, (uint64_t)v21, v22, v23, v24);
      swift_unknownObjectRetain();
      swift_retain();
      if ((_DWORD)v6 == 1)
      {
        sub_1B254E678(*(_QWORD *)(v1 + 104), &qword_1EEFD71C0);
      }
      else
      {
        sub_1B25CCCD0();
        OUTLINED_FUNCTION_42_10();
      }
      if (*v2)
      {
        OUTLINED_FUNCTION_111_4();
        OUTLINED_FUNCTION_92_6();
        OUTLINED_FUNCTION_104_4();
        OUTLINED_FUNCTION_75_8();
      }
      else
      {
        v6 = 0;
        v4 = 0;
      }
      v17 = OUTLINED_FUNCTION_8_4();
      *(_QWORD *)(v17 + 16) = &unk_1EEFDA140;
      *(_QWORD *)(v17 + 24) = v3;
      v18 = v4 | v6;
      if (v4 | v6)
      {
        v18 = (uint64_t)v21;
        *v21 = 0;
        v21[1] = 0;
        *(_QWORD *)(v1 + 32) = v6;
        *(_QWORD *)(v1 + 40) = v4;
      }
      OUTLINED_FUNCTION_69_8(v18);
      swift_task_create();
      swift_release();
      v0 += 16;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  OUTLINED_FUNCTION_36();
  return OUTLINED_FUNCTION_34_0(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1B254B8E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[11] = a4;
  v5[12] = a5;
  v5[9] = a2;
  v5[10] = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD71C0);
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1B254B954()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;

  v5 = *(_QWORD *)(*(_QWORD *)(v1 + 80) + 16);
  if (v5)
  {
    OUTLINED_FUNCTION_44_5();
    v22 = MEMORY[0x1E0DEE9C0] + 8;
    do
    {
      v6 = *(_QWORD *)(v1 + 104);
      v7 = OUTLINED_FUNCTION_8_4();
      v8 = OUTLINED_FUNCTION_18_9(v7);
      v9 = OUTLINED_FUNCTION_38_6(v8);
      OUTLINED_FUNCTION_105_3(v9, v10, v11, v12, v13, v14, v15, v16, v20, (uint64_t)v21, v22, v23, v24);
      swift_retain();
      swift_retain();
      if ((_DWORD)v6 == 1)
      {
        sub_1B254E678(*(_QWORD *)(v1 + 104), &qword_1EEFD71C0);
      }
      else
      {
        sub_1B25CCCD0();
        OUTLINED_FUNCTION_42_10();
      }
      if (*v2)
      {
        OUTLINED_FUNCTION_111_4();
        OUTLINED_FUNCTION_92_6();
        OUTLINED_FUNCTION_104_4();
        OUTLINED_FUNCTION_75_8();
      }
      else
      {
        v6 = 0;
        v4 = 0;
      }
      v17 = OUTLINED_FUNCTION_8_4();
      *(_QWORD *)(v17 + 16) = &unk_1EEFDA0F0;
      *(_QWORD *)(v17 + 24) = v3;
      v18 = v4 | v6;
      if (v4 | v6)
      {
        v18 = (uint64_t)v21;
        *v21 = 0;
        v21[1] = 0;
        *(_QWORD *)(v1 + 32) = v6;
        *(_QWORD *)(v1 + 40) = v4;
      }
      OUTLINED_FUNCTION_69_8(v18);
      swift_task_create();
      swift_release();
      v0 += 16;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  OUTLINED_FUNCTION_36();
  return OUTLINED_FUNCTION_34_0(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1B254BA9C(uint64_t a1, uint64_t a2, int *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t (*v9)(_QWORD *);

  v6[2] = a5;
  v6[3] = a6;
  v9 = (uint64_t (*)(_QWORD *))((char *)a3 + *a3);
  v7 = (_QWORD *)swift_task_alloc();
  v6[4] = v7;
  *v7 = v6;
  v7[1] = sub_1B254BB04;
  return v9(v6 + 2);
}

uint64_t sub_1B254BB04()
{
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B254BB40(uint64_t a1, uint64_t a2, int *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t (*v9)(_QWORD *);

  v6[2] = a5;
  v6[3] = a6;
  v9 = (uint64_t (*)(_QWORD *))((char *)a3 + *a3);
  v7 = (_QWORD *)swift_task_alloc();
  v6[4] = v7;
  *v7 = v6;
  v7[1] = sub_1B254BBA8;
  return v9(v6 + 2);
}

uint64_t sub_1B254BBA8()
{
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

id sub_1B254BBE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10, unint64_t a11)
{
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  id v27;

  if (a1)
  {
    v17 = (void *)sub_1B25CCB98();
    swift_bridgeObjectRelease();
    if (a2)
      goto LABEL_3;
  }
  else
  {
    v17 = 0;
    if (a2)
    {
LABEL_3:
      v18 = (void *)sub_1B25CCB98();
      swift_bridgeObjectRelease();
      if (a3)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  v18 = 0;
  if (a3)
  {
LABEL_4:
    v19 = (void *)sub_1B25CCB98();
    swift_bridgeObjectRelease();
    if (a5)
      goto LABEL_5;
LABEL_10:
    v20 = 0;
    if (a6)
      goto LABEL_6;
    goto LABEL_11;
  }
LABEL_9:
  v19 = 0;
  if (!a5)
    goto LABEL_10;
LABEL_5:
  v20 = (void *)sub_1B25CCA0C();
  swift_bridgeObjectRelease();
  if (a6)
  {
LABEL_6:
    v21 = (void *)sub_1B25CCB98();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
LABEL_11:
  v21 = 0;
LABEL_12:
  if (a7)
  {
    sub_1B24B3050(0, &qword_1EEFDA0B0);
    v22 = (void *)sub_1B25CCB98();
    swift_bridgeObjectRelease();
  }
  else
  {
    v22 = 0;
  }
  if (a9 >> 60 == 15)
  {
    v23 = 0;
  }
  else
  {
    v23 = (void *)sub_1B25CC580();
    sub_1B24B890C(a8, a9);
  }
  if (a11 >> 60 == 15)
  {
    v24 = 0;
  }
  else
  {
    v24 = (void *)sub_1B25CC580();
    sub_1B24B890C(a10, a11);
  }
  v25 = objc_msgSend(v27, sel_initWithLeftContext_rightContext_selectedText_geoLMRegionID_contextualStrings_contextualNamedEntities_profileData_jitProfileData_, v17, v18, v19, v20, v21, v22, v23, v24);

  return v25;
}

id sub_1B254BE04(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  void *v7;
  void *v8;
  void *v13;
  void *v14;
  id v15;

  v8 = v7;
  v13 = (void *)sub_1B25CCA0C();
  swift_bridgeObjectRelease();
  if (a7)
  {
    v14 = (void *)sub_1B25CCA0C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = 0;
  }
  v15 = objc_msgSend(v8, sel_initWithContent_sourceFramework_score_category_language_, v13, a3, a4, a5, v14);

  return v15;
}

uint64_t sub_1B254BEC0(int *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))((char *)a1 + *a1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_1B254BF18;
  return v4();
}

uint64_t sub_1B254BF18()
{
  uint64_t v0;

  OUTLINED_FUNCTION_81();
  return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v0 + 8));
}

_OWORD *sub_1B254BF50(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_1B24AB608(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_1B254BFB8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  OUTLINED_FUNCTION_55_6(a1, a4 + 8 * (a1 >> 6));
  v9 = *(_QWORD *)(v8 + 48);
  v10 = type metadata accessor for SpeechRecognizerSupportedFeatures();
  result = sub_1B254E880(a2, v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1);
  *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * a1) = a3;
  v12 = *(_QWORD *)(a4 + 16);
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    *(_QWORD *)(a4 + 16) = v14;
  return result;
}

uint64_t sub_1B254C038(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for SpeechRecognizerSupportedFeatures();
  result = sub_1B254E880(a2, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

unint64_t sub_1B254C0C8(unint64_t result, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  a7[(result >> 6) + 8] |= 1 << result;
  v7 = a7[6] + 24 * result;
  *(_QWORD *)v7 = a2;
  *(_QWORD *)(v7 + 8) = a3;
  *(_BYTE *)(v7 + 16) = a4;
  v8 = (_QWORD *)(a7[7] + 16 * result);
  *v8 = a5;
  v8[1] = a6;
  v9 = a7[2];
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    a7[2] = v11;
  return result;
}

unint64_t sub_1B254C11C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a6[(result >> 6) + 8] |= 1 << result;
  v6 = (_QWORD *)(a6[6] + 16 * result);
  *v6 = a2;
  v6[1] = a3;
  v7 = (_QWORD *)(a6[7] + 16 * result);
  *v7 = a4;
  v7[1] = a5;
  v8 = a6[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a6[2] = v10;
  return result;
}

void *sub_1B254C168(unint64_t a1, uint64_t a2, uint64_t a3, void *__src, _QWORD *a5)
{
  _QWORD *v6;
  void *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = memcpy((void *)(a5[7] + 264 * a1), __src, 0x101uLL);
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

unint64_t sub_1B254C1D8(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

uint64_t sub_1B254C220(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  result = OUTLINED_FUNCTION_55_6(a1, a6 + 8 * (a1 >> 6));
  v8 = v7[6] + 24 * result;
  *(_QWORD *)v8 = v9;
  *(_QWORD *)(v8 + 8) = v10;
  *(_BYTE *)(v8 + 16) = v11;
  *(_QWORD *)(v7[7] + 8 * result) = v12;
  v13 = v7[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    v7[2] = v15;
  return result;
}

void sub_1B254C268(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v8 = OUTLINED_FUNCTION_55_6(a1, a5 + 8 * (a1 >> 6));
  v10 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v8);
  *v10 = v11;
  v10[1] = v12;
  v13 = *(_QWORD *)(v9 + 56);
  v14 = sub_1B25CC838();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v13 + *(_QWORD *)(*(_QWORD *)(v14 - 8) + 72) * a1, a4, v14);
  v15 = *(_QWORD *)(a5 + 16);
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a5 + 16) = v17;
    OUTLINED_FUNCTION_262();
  }
}

double sub_1B254C2E0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  char v9;
  double result;
  uint64_t v11;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1B24E1148(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    *v4 = 0x8000000000000000;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDA108);
    sub_1B25CD408();
    swift_bridgeObjectRelease();
    sub_1B24AB608((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v8), a3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7648);
    sub_1B254D170();
    sub_1B25CD420();
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

void sub_1B254C40C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_81_3();
  OUTLINED_FUNCTION_91_6();
  sub_1B24E11AC();
  OUTLINED_FUNCTION_76_7();
  if ((v11 & 1) != 0)
  {
    OUTLINED_FUNCTION_45_7();
    OUTLINED_FUNCTION_5_8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7738);
    OUTLINED_FUNCTION_6_11();
    v12 = *(_QWORD *)(a10 + 48);
    v13 = type metadata accessor for SpeechRecognizerSupportedFeatures();
    sub_1B254E8C4(v12 + *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72) * v10);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7130);
    sub_1B254E900();
    OUTLINED_FUNCTION_99_5();
    sub_1B25CD420();
    OUTLINED_FUNCTION_90_5();
  }
  OUTLINED_FUNCTION_22_5();
}

uint64_t sub_1B254C4C4()
{
  uint64_t *v0;
  uint64_t *v1;
  unint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = v0;
  swift_bridgeObjectRetain();
  v2 = sub_1B24E11AC();
  v4 = v3;
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0)
    return 0;
  swift_isUniquelyReferenced_nonNull_native();
  v9 = *v1;
  *v1 = 0x8000000000000000;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EEFD7780);
  sub_1B25CD408();
  v5 = *(_QWORD *)(v9 + 48);
  v6 = type metadata accessor for SpeechRecognizerSupportedFeatures();
  sub_1B254E8C4(v5 + *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72) * v2);
  v7 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v2);
  type metadata accessor for SpeechRecognizerWorker();
  sub_1B254E900();
  sub_1B25CD420();
  *v1 = v9;
  swift_bridgeObjectRelease();
  return v7;
}

double sub_1B254C5D4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  char v9;
  double result;
  uint64_t v11;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1B24E113C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    *v4 = 0x8000000000000000;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDA0A8);
    sub_1B25CD408();
    swift_bridgeObjectRelease();
    sub_1B24AB608((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v8), a3);
    sub_1B25CD420();
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

#error "1B254C734: call analysis failed (funcsize=29)"

void sub_1B254C778()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_81_3();
  v2 = v1;
  v4 = v3;
  OUTLINED_FUNCTION_91_6();
  sub_1B24E113C(v4, v2);
  OUTLINED_FUNCTION_76_7();
  if ((v0 & 1) != 0)
  {
    OUTLINED_FUNCTION_45_7();
    OUTLINED_FUNCTION_5_8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7500);
    OUTLINED_FUNCTION_6_11();
    swift_bridgeObjectRelease();
    sub_1B25CD420();
    OUTLINED_FUNCTION_61_7();
  }
  OUTLINED_FUNCTION_128_2();
  OUTLINED_FUNCTION_22_5();
}

uint64_t sub_1B254C828(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v10;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1B24E1148(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  swift_isUniquelyReferenced_nonNull_native();
  v10 = *v3;
  *v3 = 0x8000000000000000;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDA110);
  sub_1B25CD408();
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CFD0);
  sub_1B254E728();
  sub_1B25CD420();
  *v3 = v10;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1B254C938(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1B254CA88(a1, a2, a3, &qword_1EEFD74E8, &qword_1ED36CFE8);
}

void sub_1B254C954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  char v10;
  uint64_t v11;

  OUTLINED_FUNCTION_81_3();
  OUTLINED_FUNCTION_14_6();
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_37_7();
  if ((v10 & 1) != 0)
  {
    OUTLINED_FUNCTION_45_7();
    OUTLINED_FUNCTION_5_8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD74E0);
    OUTLINED_FUNCTION_6_11();
    OUTLINED_FUNCTION_86_4(*(_QWORD *)(a10 + 48) + 24 * v11);
    type metadata accessor for NSXPCActorSystem.ArgumentListenerDelegate();
    sub_1B24A019C();
    OUTLINED_FUNCTION_99_5();
    sub_1B25CD420();
    OUTLINED_FUNCTION_90_5();
  }
  OUTLINED_FUNCTION_22_5();
}

#error "1B254CA28: call analysis failed (funcsize=29)"

uint64_t sub_1B254CA6C(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1B254CA88(a1, a2, a3, &qword_1ED36D038, (unint64_t *)&unk_1ED36D000);
}

uint64_t sub_1B254CA88(uint64_t a1, uint64_t a2, char a3, uint64_t *a4, unint64_t *a5)
{
  uint64_t *v5;
  uint64_t *v8;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v18;

  v8 = v5;
  swift_bridgeObjectRetain();
  sub_1B24E1250(a1, a2, a3);
  v13 = v12;
  v15 = v14;
  swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
    return 0;
  OUTLINED_FUNCTION_45_7();
  v18 = *v8;
  *v8 = 0x8000000000000000;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  sub_1B25CD408();
  OUTLINED_FUNCTION_86_4(*(_QWORD *)(v18 + 48) + 24 * v13);
  v16 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v13);
  sub_1B24B3050(0, a5);
  sub_1B24A019C();
  sub_1B25CD420();
  *v8 = v18;
  swift_bridgeObjectRelease();
  return v16;
}

_OWORD *sub_1B254CBB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _OWORD *v14;
  _OWORD *v15;
  _OWORD *result;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  _QWORD *v21;

  v3 = OUTLINED_FUNCTION_41_8(a1, a2);
  sub_1B24E1148(v3, v4);
  OUTLINED_FUNCTION_2_7();
  if (v7)
  {
    __break(1u);
    goto LABEL_9;
  }
  v8 = v5;
  v9 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDA108);
  if ((OUTLINED_FUNCTION_19_6() & 1) == 0)
    goto LABEL_5;
  v10 = OUTLINED_FUNCTION_665();
  v12 = sub_1B24E1148(v10, v11);
  if ((v9 & 1) != (v13 & 1))
  {
LABEL_9:
    result = (_OWORD *)sub_1B25CD630();
    __break(1u);
    return result;
  }
  v8 = v12;
LABEL_5:
  if ((v9 & 1) != 0)
  {
    __swift_destroy_boxed_opaque_existential_0Tm(*(_QWORD *)(*(_QWORD *)v2 + 56) + 32 * v8);
    v14 = (_OWORD *)OUTLINED_FUNCTION_38_0();
    return OUTLINED_FUNCTION_28_9(v14, v15);
  }
  else
  {
    v17 = OUTLINED_FUNCTION_103_5();
    sub_1B254BF50(v17, v18, v19, v20, v21);
    return (_OWORD *)OUTLINED_FUNCTION_10_11();
  }
}

void sub_1B254CC60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_54_6();
  OUTLINED_FUNCTION_85_5();
  MEMORY[0x1E0C80A78](v2, v3);
  OUTLINED_FUNCTION_25_9();
  OUTLINED_FUNCTION_2_7();
  if (v6)
  {
    __break(1u);
LABEL_11:
    sub_1B25CD630();
    __break(1u);
    return;
  }
  v7 = v4;
  v8 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7738);
  if ((OUTLINED_FUNCTION_59_7() & 1) != 0)
  {
    OUTLINED_FUNCTION_96_5();
    OUTLINED_FUNCTION_30_5();
    if (!v10)
      goto LABEL_11;
    v7 = v9;
  }
  if ((v8 & 1) != 0)
  {
    v11 = *(_QWORD *)(*(_QWORD *)v1 + 56);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v11 + 8 * v7) = v0;
  }
  else
  {
    OUTLINED_FUNCTION_97_5();
    v12 = OUTLINED_FUNCTION_102_4();
    sub_1B254BFB8(v12, v13, v14, v15);
  }
  OUTLINED_FUNCTION_7_1();
}

void sub_1B254CD04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_54_6();
  OUTLINED_FUNCTION_85_5();
  MEMORY[0x1E0C80A78](v2, v3);
  OUTLINED_FUNCTION_25_9();
  OUTLINED_FUNCTION_2_7();
  if (v6)
  {
    __break(1u);
LABEL_11:
    sub_1B25CD630();
    __break(1u);
    return;
  }
  v7 = v4;
  v8 = v5;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EEFD7780);
  if ((OUTLINED_FUNCTION_59_7() & 1) != 0)
  {
    OUTLINED_FUNCTION_96_5();
    OUTLINED_FUNCTION_30_5();
    if (!v10)
      goto LABEL_11;
    v7 = v9;
  }
  if ((v8 & 1) != 0)
  {
    v11 = *(_QWORD *)(*(_QWORD *)v1 + 56);
    swift_release();
    *(_QWORD *)(v11 + 8 * v7) = v0;
  }
  else
  {
    OUTLINED_FUNCTION_97_5();
    v12 = OUTLINED_FUNCTION_102_4();
    sub_1B254C038(v12, v13, v14, v15);
  }
  OUTLINED_FUNCTION_7_1();
}

_OWORD *sub_1B254CDA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _OWORD *v14;
  _OWORD *v15;
  _OWORD *result;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  _QWORD *v21;

  v3 = OUTLINED_FUNCTION_41_8(a1, a2);
  sub_1B24E113C(v3, v4);
  OUTLINED_FUNCTION_2_7();
  if (v7)
  {
    __break(1u);
    goto LABEL_9;
  }
  v8 = v5;
  v9 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDA0A8);
  if ((OUTLINED_FUNCTION_19_6() & 1) == 0)
    goto LABEL_5;
  v10 = OUTLINED_FUNCTION_665();
  v12 = sub_1B24E113C(v10, v11);
  if ((v9 & 1) != (v13 & 1))
  {
LABEL_9:
    result = (_OWORD *)sub_1B25CD630();
    __break(1u);
    return result;
  }
  v8 = v12;
LABEL_5:
  if ((v9 & 1) != 0)
  {
    __swift_destroy_boxed_opaque_existential_0Tm(*(_QWORD *)(*(_QWORD *)v2 + 56) + 32 * v8);
    v14 = (_OWORD *)OUTLINED_FUNCTION_38_0();
    return OUTLINED_FUNCTION_28_9(v14, v15);
  }
  else
  {
    v17 = OUTLINED_FUNCTION_103_5();
    sub_1B254BF50(v17, v18, v19, v20, v21);
    return (_OWORD *)OUTLINED_FUNCTION_10_11();
  }
}

void sub_1B254CE58()
{
  _QWORD **v0;
  char v1;
  char v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  char v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  uint64_t *v19;

  OUTLINED_FUNCTION_59_0();
  v2 = v1;
  v4 = (void *)v3;
  v6 = (void *)v5;
  v8 = v7;
  v10 = v9;
  OUTLINED_FUNCTION_68_7(v9, v7, v5, v3, v1);
  OUTLINED_FUNCTION_2_7();
  if (v13)
  {
    __break(1u);
LABEL_10:
    sub_1B25CD630();
    __break(1u);
    return;
  }
  v14 = v11;
  v15 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD74D8);
  if ((OUTLINED_FUNCTION_60_3() & 1) != 0)
  {
    sub_1B24E1250((uint64_t)v6, (uint64_t)v4, v2);
    OUTLINED_FUNCTION_30_5();
    if (!v17)
      goto LABEL_10;
    v14 = v16;
  }
  v18 = *v0;
  if ((v15 & 1) != 0)
  {
    v19 = (uint64_t *)(v18[7] + 16 * v14);
    swift_release();
    *v19 = v10;
    v19[1] = v8;
    OUTLINED_FUNCTION_7_1();
  }
  else
  {
    sub_1B254C0C8(v14, (uint64_t)v6, (uint64_t)v4, v2, v10, v8, v18);
    OUTLINED_FUNCTION_7_9(v6, v4, v2);
  }
}

void sub_1B254CF38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;

  OUTLINED_FUNCTION_59_0();
  v2 = v1;
  v4 = v3;
  sub_1B24E113C(v5, v6);
  OUTLINED_FUNCTION_2_7();
  if (v9)
  {
    __break(1u);
    goto LABEL_9;
  }
  v10 = v7;
  v11 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7500);
  if ((OUTLINED_FUNCTION_58_6() & 1) == 0)
    goto LABEL_5;
  v12 = OUTLINED_FUNCTION_74_6();
  v14 = sub_1B24E113C(v12, v13);
  if ((v11 & 1) != (v15 & 1))
  {
LABEL_9:
    sub_1B25CD630();
    __break(1u);
    return;
  }
  v10 = v14;
LABEL_5:
  if ((v11 & 1) != 0)
  {
    v16 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 56) + 16 * v10);
    swift_bridgeObjectRelease();
    *v16 = v4;
    v16[1] = v2;
    OUTLINED_FUNCTION_7_1();
  }
  else
  {
    v17 = OUTLINED_FUNCTION_112_5();
    sub_1B254C11C(v17, v18, v19, v20, v2, v21);
    swift_bridgeObjectRetain();
  }
}

uint64_t sub_1B254D020(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD **v3;
  void *v4;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  char v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  _QWORD *v16;
  uint64_t result;

  v7 = OUTLINED_FUNCTION_46_5(a1, a2);
  sub_1B24E113C(v7, v8);
  OUTLINED_FUNCTION_2_7();
  if (v11)
  {
    __break(1u);
    goto LABEL_9;
  }
  v12 = v9;
  v13 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDA0B8);
  if ((OUTLINED_FUNCTION_19_6() & 1) == 0)
    goto LABEL_5;
  v14 = sub_1B24E113C(a2, a3);
  if ((v13 & 1) != (v15 & 1))
  {
LABEL_9:
    result = sub_1B25CD630();
    __break(1u);
    return result;
  }
  v12 = v14;
LABEL_5:
  v16 = *v3;
  if ((v13 & 1) != 0)
    return sub_1B254E32C((uint64_t)v4, v16[7] + 264 * v12);
  sub_1B254C168(v12, a2, a3, v4, v16);
  return OUTLINED_FUNCTION_10_11();
}

uint64_t sub_1B254D0FC()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1B254D120()
{
  uint64_t v0;
  _QWORD *v1;
  _OWORD *v2;
  uint64_t v3;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1B24EBFF4;
  v2 = (_OWORD *)OUTLINED_FUNCTION_38_0();
  return sub_1B2549DE4(v2, v3);
}

unint64_t sub_1B254D170()
{
  unint64_t result;

  result = qword_1EEFD6E48;
  if (!qword_1EEFD6E48)
  {
    result = MEMORY[0x1B5E261DC](&protocol conformance descriptor for AnalysisContext.UserDataTag, &type metadata for AnalysisContext.UserDataTag);
    atomic_store(result, (unint64_t *)&qword_1EEFD6E48);
  }
  return result;
}

uint64_t sub_1B254D1AC()
{
  uint64_t v0;
  _QWORD *v1;
  _OWORD *v2;
  uint64_t v3;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1B24EBFF4;
  v2 = (_OWORD *)OUTLINED_FUNCTION_38_0();
  return sub_1B254A048(v2, v3);
}

uint64_t sub_1B254D1FC()
{
  id *v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t type metadata accessor for AnalysisContext.ContextDelegatesMutex()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for AnalysisContext()
{
  return objc_opt_self();
}

unint64_t sub_1B254D29C()
{
  unint64_t result;

  result = qword_1EEFD6E60;
  if (!qword_1EEFD6E60)
  {
    result = MEMORY[0x1B5E261DC](&protocol conformance descriptor for AnalysisContext.ContextualStringsTag, &type metadata for AnalysisContext.ContextualStringsTag);
    atomic_store(result, (unint64_t *)&qword_1EEFD6E60);
  }
  return result;
}

unint64_t sub_1B254D2DC()
{
  unint64_t result;

  result = qword_1EEFD6E50;
  if (!qword_1EEFD6E50)
  {
    result = MEMORY[0x1B5E261DC](&protocol conformance descriptor for AnalysisContext.UserDataTag, &type metadata for AnalysisContext.UserDataTag);
    atomic_store(result, (unint64_t *)&qword_1EEFD6E50);
  }
  return result;
}

unint64_t sub_1B254D31C()
{
  unint64_t result;

  result = qword_1EEFDA090;
  if (!qword_1EEFDA090)
  {
    result = MEMORY[0x1B5E261DC](&protocol conformance descriptor for ContextualNamedEntity.SourceFramework, &type metadata for ContextualNamedEntity.SourceFramework);
    atomic_store(result, (unint64_t *)&qword_1EEFDA090);
  }
  return result;
}

void sub_1B254D358()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_64_8();
  sub_1B25494AC();
  *v0 = v1;
  OUTLINED_FUNCTION_0();
}

void sub_1B254D37C()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_64_8();
  sub_1B2549574();
  *v0 = v1;
  OUTLINED_FUNCTION_0();
}

void sub_1B254D3A0()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_64_8();
  *v0 = sub_1B254A120();
  v0[1] = v1;
  OUTLINED_FUNCTION_0();
}

void sub_1B254D3C4()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_64_8();
  *v0 = sub_1B254A390();
  OUTLINED_FUNCTION_0();
}

void sub_1B254D3F0()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_64_8();
  *v0 = sub_1B254A8C8();
  v0[1] = v1;
  OUTLINED_FUNCTION_0();
}

void sub_1B254D410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1B254A944(a1, a2, a3, a4, (void (*)(uint64_t))sub_1B254A8E8);
}

void sub_1B254D42C()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_64_8();
  *v0 = sub_1B254A978();
  v0[1] = v1;
  OUTLINED_FUNCTION_0();
}

void sub_1B254D44C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1B254A944(a1, a2, a3, a4, (void (*)(uint64_t))sub_1B254AA28);
}

uint64_t method lookup function for AnalysisContext()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AnalysisContext.contextualStrings.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of AnalysisContext.contextualStrings.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of AnalysisContext.contextualStrings.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of AnalysisContext.userData.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of AnalysisContext.userData.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of AnalysisContext.userData.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of AnalysisContext._contextualStrings(forKey:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of AnalysisContext._set(contextualStrings:forKey:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of AnalysisContext._userData(forKey:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of AnalysisContext._set(userData:forKey:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of AnalysisContext.setWait(contextualStrings:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v4 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v1) + 0xB8);
  v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1B24DE4C4;
  return v7(a1);
}

uint64_t dispatch thunk of AnalysisContext.setWait<A>(userData:)()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v6)(uint64_t);

  OUTLINED_FUNCTION_280();
  v2 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0);
  v6 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1B24EBFF4;
  v4 = OUTLINED_FUNCTION_459();
  return v6(v4);
}

uint64_t dispatch thunk of AnalysisContext.geoLMRegionID.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of AnalysisContext.geoLMRegionID.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of AnalysisContext.geoLMRegionID.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of AnalysisContext.contextualNamedEntities.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of AnalysisContext.contextualNamedEntities.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of AnalysisContext.contextualNamedEntities.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of AnalysisContext.voiceCommandContext.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of AnalysisContext.voiceCommandContext.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of AnalysisContext.voiceCommandContext.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of AnalysisContext.profileData.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of AnalysisContext.profileData.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of AnalysisContext.profileData.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of AnalysisContext.jitProfileData.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of AnalysisContext.jitProfileData.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of AnalysisContext.jitProfileData.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138))();
}

void type metadata accessor for AnalysisContext.ContextualStringsTag()
{
  OUTLINED_FUNCTION_239_0();
}

_QWORD *initializeBufferWithCopyOfBuffer for AnalysisContext.UserDataTag(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void _s6Speech15AnalysisContextC20ContextualStringsTagVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_0();
}

_QWORD *assignWithTake for AnalysisContext.UserDataTag(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s6Speech15AnalysisContextC20ContextualStringsTagVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1B254D908(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for AnalysisContext.UserDataTag()
{
  OUTLINED_FUNCTION_239_0();
}

uint64_t destroy for ContextualNamedEntity()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ContextualNamedEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ContextualNamedEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy72_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x48uLL);
}

uint64_t assignWithTake for ContextualNamedEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextualNamedEntity(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 72))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContextualNamedEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ContextualNamedEntity()
{
  OUTLINED_FUNCTION_239_0();
}

uint64_t getEnumTagSinglePayload for ContextualNamedEntity.SourceFramework(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 2) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v5 = v6 - 3;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ContextualNamedEntity.SourceFramework(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B254DC54 + 4 * byte_1B25DE165[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B254DC88 + 4 * byte_1B25DE160[v4]))();
}

uint64_t sub_1B254DC88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B254DC90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B254DC98);
  return result;
}

uint64_t sub_1B254DCA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B254DCACLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B254DCB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B254DCB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ContextualNamedEntity.SourceFramework()
{
  OUTLINED_FUNCTION_239_0();
}

void destroy for VoiceCommandContext(id *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for VoiceCommandContext(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = (void *)a2[6];
  v7 = (void *)a2[7];
  a1[6] = v6;
  a1[7] = v7;
  v8 = (void *)a2[8];
  v9 = (void *)a2[9];
  a1[8] = v8;
  a1[9] = v9;
  v10 = (void *)a2[10];
  a1[10] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = v6;
  v12 = v7;
  v13 = v8;
  v14 = v9;
  v15 = v10;
  return a1;
}

_QWORD *assignWithCopy for VoiceCommandContext(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a1[6];
  v5 = (void *)a2[6];
  a1[6] = v5;
  v6 = v5;

  v7 = (void *)a1[7];
  v8 = (void *)a2[7];
  a1[7] = v8;
  v9 = v8;

  v10 = (void *)a1[8];
  v11 = (void *)a2[8];
  a1[8] = v11;
  v12 = v11;

  v13 = (void *)a1[9];
  v14 = (void *)a2[9];
  a1[9] = v14;
  v15 = v14;

  v16 = (void *)a1[10];
  v17 = (void *)a2[10];
  a1[10] = v17;
  v18 = v17;

  return a1;
}

uint64_t assignWithTake for VoiceCommandContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v6 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  v7 = *(void **)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);

  v8 = *(void **)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);

  return a1;
}

uint64_t getEnumTagSinglePayload for VoiceCommandContext(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 88))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VoiceCommandContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 88) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

void type metadata accessor for VoiceCommandContext()
{
  OUTLINED_FUNCTION_239_0();
}

void sub_1B254E004()
{
  sub_1B254E01C();
}

void sub_1B254E010()
{
  sub_1B254E01C();
}

void sub_1B254E01C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  char v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_59_0();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = (void *)v8;
  v11 = OUTLINED_FUNCTION_46_5(v10, v8);
  sub_1B24E1250(v11, v12, v13);
  OUTLINED_FUNCTION_2_7();
  if (v16)
  {
    __break(1u);
LABEL_10:
    sub_1B25CD630();
    __break(1u);
    return;
  }
  v17 = v14;
  v18 = v15;
  __swift_instantiateConcreteTypeFromMangledName(v3);
  if ((OUTLINED_FUNCTION_58_6() & 1) != 0)
  {
    v19 = OUTLINED_FUNCTION_74_6();
    sub_1B24E1250(v19, v20, v5);
    OUTLINED_FUNCTION_30_5();
    if (!v22)
      goto LABEL_10;
    v17 = v21;
  }
  v23 = *v0;
  if ((v18 & 1) != 0)
  {
    v24 = *(_QWORD *)(v23 + 56);

    *(_QWORD *)(v24 + 8 * v17) = v1;
    OUTLINED_FUNCTION_7_1();
  }
  else
  {
    sub_1B254C220(v17, (uint64_t)v9, (uint64_t)v7, v5, v1, v23);
    OUTLINED_FUNCTION_7_9(v9, v7, v5);
  }
}

void sub_1B254E0F4()
{
  sub_1B254E01C();
}

void sub_1B254E100()
{
  _QWORD **v0;
  char v1;
  char v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  char v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  uint64_t v19;
  void *v20;

  OUTLINED_FUNCTION_59_0();
  v2 = v1;
  v4 = (void *)v3;
  v6 = (void *)v5;
  v8 = v7;
  v10 = v9;
  OUTLINED_FUNCTION_68_7(v9, v7, v5, v3, v1);
  OUTLINED_FUNCTION_2_7();
  if (v13)
  {
    __break(1u);
LABEL_10:
    sub_1B25CD630();
    __break(1u);
    return;
  }
  v14 = v11;
  v15 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD74F0);
  if ((OUTLINED_FUNCTION_60_3() & 1) != 0)
  {
    sub_1B24E1250((uint64_t)v6, (uint64_t)v4, v2);
    OUTLINED_FUNCTION_30_5();
    if (!v17)
      goto LABEL_10;
    v14 = v16;
  }
  v18 = *v0;
  if ((v15 & 1) != 0)
  {
    v19 = v18[7] + 16 * v14;
    v20 = *(void **)v19;
    swift_unknownObjectRelease();

    *(_QWORD *)v19 = v10;
    *(_QWORD *)(v19 + 8) = v8;
    OUTLINED_FUNCTION_7_1();
  }
  else
  {
    sub_1B254C0C8(v14, (uint64_t)v6, (uint64_t)v4, v2, v10, v8, v18);
    OUTLINED_FUNCTION_7_9(v6, v4, v2);
  }
}

uint64_t sub_1B254E1E4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B254E208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B254E22C(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1B24E113C, &qword_1EEFDA0C0, MEMORY[0x1E0DEA968], (void (*)(uint64_t))sub_1B254C1D8);
}

uint64_t sub_1B254E22C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t *a6, uint64_t a7, void (*a8)(uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;

  v12 = OUTLINED_FUNCTION_46_5(a1, a2);
  v13(v12);
  OUTLINED_FUNCTION_2_7();
  if (v16)
  {
    __break(1u);
    goto LABEL_9;
  }
  v17 = v14;
  v18 = v15;
  __swift_instantiateConcreteTypeFromMangledName(a6);
  if ((OUTLINED_FUNCTION_58_6() & 1) == 0)
    goto LABEL_5;
  v19 = OUTLINED_FUNCTION_74_6();
  v20 = a5(v19);
  if ((v18 & 1) != (v21 & 1))
  {
LABEL_9:
    result = sub_1B25CD630();
    __break(1u);
    return result;
  }
  v17 = v20;
LABEL_5:
  if ((v18 & 1) != 0)
  {
    v22 = *(_QWORD *)(*(_QWORD *)v8 + 56);
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v22 + 8 * v17) = v9;
  }
  else
  {
    v24 = OUTLINED_FUNCTION_112_5();
    a8(v24);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1B254E32C(uint64_t a1, uint64_t a2)
{
  assignWithTake for Transcriber.MultisegmentResult(a2, a1);
  return a2;
}

uint64_t sub_1B254E368(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  _QWORD *v11;

  v10 = *a3;
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1B24EBFF4;
  return sub_1B254B72C(a1, a2, v10, a4, a5);
}

uint64_t sub_1B254E3E8(uint64_t a1, uint64_t a2, int *a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v10 = *a5;
  v11 = a5[1];
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v12;
  *v12 = v5;
  v12[1] = sub_1B24EBFF4;
  return sub_1B254BA9C(a1, a2, a3, a4, v10, v11);
}

uint64_t sub_1B254E468(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  _QWORD *v11;

  v10 = *a3;
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1B24EBFF4;
  return sub_1B254B8E4(a1, a2, v10, a4, a5);
}

uint64_t sub_1B254E4E8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_280_0();
  v1 = (_QWORD *)OUTLINED_FUNCTION_437();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_76_2(v1);
  return OUTLINED_FUNCTION_86_2(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1B254E530(uint64_t a1, uint64_t a2, int *a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v10 = *a5;
  v11 = a5[1];
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v12;
  *v12 = v5;
  v12[1] = sub_1B24EBFF4;
  return sub_1B254BB40(a1, a2, a3, a4, v10, v11);
}

uint64_t sub_1B254E5B0()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B254E5E4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_437();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_315(v1, (uint64_t)sub_1B24EBFF4);
  return OUTLINED_FUNCTION_86_2(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1B254E630(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD71C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1B254E678(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1B254E6B0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B254E6D4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1B24EBFF4;
  v2 = OUTLINED_FUNCTION_38_0();
  return OUTLINED_FUNCTION_8_0(v2, v3, v4);
}

unint64_t sub_1B254E728()
{
  unint64_t result;

  result = qword_1EEFD6E58;
  if (!qword_1EEFD6E58)
  {
    result = MEMORY[0x1B5E261DC](&protocol conformance descriptor for AnalysisContext.ContextualStringsTag, &type metadata for AnalysisContext.ContextualStringsTag);
    atomic_store(result, (unint64_t *)&qword_1EEFD6E58);
  }
  return result;
}

uint64_t sub_1B254E764()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_280_0();
  v1 = (_QWORD *)OUTLINED_FUNCTION_437();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_76_2(v1);
  return OUTLINED_FUNCTION_86_2(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1B254E7AC()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B254E7E0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_437();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_315(v1, (uint64_t)sub_1B24EBFF4);
  return OUTLINED_FUNCTION_86_2(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1B254E82C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1B24DE4C4;
  v2 = OUTLINED_FUNCTION_38_0();
  return OUTLINED_FUNCTION_8_0(v2, v3, v4);
}

uint64_t sub_1B254E880(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SpeechRecognizerSupportedFeatures();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B254E8C4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SpeechRecognizerSupportedFeatures();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1B254E900()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEFD76B0;
  if (!qword_1EEFD76B0)
  {
    v1 = type metadata accessor for SpeechRecognizerSupportedFeatures();
    result = MEMORY[0x1B5E261DC](&unk_1B25DF3D8, v1);
    atomic_store(result, (unint64_t *)&qword_1EEFD76B0);
  }
  return result;
}

uint64_t sub_1B254E940(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SpeechRecognizerSupportedFeatures();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B254E9A8(_QWORD *a1, uint64_t a2)
{
  return sub_1B25494CC(a1, a2);
}

void OUTLINED_FUNCTION_5_8()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_6_11()
{
  return sub_1B25CD408();
}

id OUTLINED_FUNCTION_7_9(id result, id a2, char a3)
{
  return sub_1B24A1AF4(result, a2, a3);
}

uint64_t OUTLINED_FUNCTION_10_11()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_14_6()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_18_9(uint64_t a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v4 = *v1;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = v3;
  *(_QWORD *)(a1 + 40) = v2;
  *(_OWORD *)(a1 + 48) = v4;
  return sub_1B25CCCDC();
}

uint64_t OUTLINED_FUNCTION_19_6()
{
  return sub_1B25CD408();
}

void OUTLINED_FUNCTION_21_7(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v1;
  a1[1] = v2;
}

void OUTLINED_FUNCTION_24_10()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  sub_1B24E1250(v2, v1, v0);
}

unint64_t OUTLINED_FUNCTION_25_9()
{
  return sub_1B24E11AC();
}

uint64_t OUTLINED_FUNCTION_27_6()
{
  return swift_bridgeObjectRelease();
}

_OWORD *OUTLINED_FUNCTION_28_9(_OWORD *a1, _OWORD *a2)
{
  return sub_1B24AB608(a1, a2);
}

_OWORD *OUTLINED_FUNCTION_35_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, __int128 a11, uint64_t a12, uint64_t a13, __int128 a14)
{
  return sub_1B24AB608(&a11, &a14);
}

void OUTLINED_FUNCTION_36_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  sub_1B24AB77C(*(void **)(*(_QWORD *)(a10 + 48) + 24 * v10), *(id *)(*(_QWORD *)(a10 + 48) + 24 * v10 + 8), *(_BYTE *)(*(_QWORD *)(a10 + 48) + 24 * v10 + 16));
}

uint64_t OUTLINED_FUNCTION_37_7()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_38_6(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
  return sub_1B254E630(v1, v2);
}

uint64_t OUTLINED_FUNCTION_40_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t OUTLINED_FUNCTION_41_8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t OUTLINED_FUNCTION_42_10()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
}

void OUTLINED_FUNCTION_43_6(uint64_t a1, unsigned __int16 a2)
{
  uint64_t v2;
  void (*v3)(void);

  sub_1B2549118(a1, a2 | 0xED00007478650000, v2, v3);
}

uint64_t OUTLINED_FUNCTION_44_5()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_45_7()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_46_5(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t OUTLINED_FUNCTION_47_9()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_49_6()
{
  return sub_1B25495BC();
}

uint64_t OUTLINED_FUNCTION_52_8(uint64_t a1)
{
  return sub_1B24CB114(a1);
}

uint64_t OUTLINED_FUNCTION_53_5()
{
  return sub_1B25CD594();
}

uint64_t OUTLINED_FUNCTION_54_6()
{
  return type metadata accessor for SpeechRecognizerSupportedFeatures();
}

uint64_t OUTLINED_FUNCTION_55_6@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 + 64) |= 1 << result;
  return result;
}

uint64_t OUTLINED_FUNCTION_58_6()
{
  return sub_1B25CD408();
}

uint64_t OUTLINED_FUNCTION_59_7()
{
  return sub_1B25CD408();
}

uint64_t OUTLINED_FUNCTION_60_3()
{
  return sub_1B25CD408();
}

uint64_t OUTLINED_FUNCTION_61_7()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = v1;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_63_6()
{
  return swift_release();
}

id OUTLINED_FUNCTION_67_7()
{
  void *v0;

  return v0;
}

void OUTLINED_FUNCTION_68_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  sub_1B24E1250(a3, a4, a5);
}

uint64_t OUTLINED_FUNCTION_69_8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;

  result = v3 | 0x7100;
  v2[6] = 1;
  v2[7] = a1;
  v2[8] = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_72_7()
{
  return swift_dynamicCast();
}

void OUTLINED_FUNCTION_73_7(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_1B254E678((uint64_t)va, a2);
}

uint64_t OUTLINED_FUNCTION_74_6()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_75_8()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_76_7()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_77_5()
{
  return sub_1B25CD420();
}

void OUTLINED_FUNCTION_86_4(uint64_t a1@<X8>)
{
  sub_1B24AB77C(*(void **)a1, *(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

char *OUTLINED_FUNCTION_87_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  return &a11;
}

uint64_t OUTLINED_FUNCTION_90_5()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = v1;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_91_6()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_92_6()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_93_5()
{
  return swift_bridgeObjectRetain();
}

id OUTLINED_FUNCTION_94_7(uint64_t a1)
{
  uint64_t v1;

  return *(id *)(*(_QWORD *)(v1 + 56) + 8 * a1);
}

void OUTLINED_FUNCTION_95_5(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3;

  sub_1B2549050(a1, a2, v3, a3);
}

unint64_t OUTLINED_FUNCTION_96_5()
{
  return sub_1B24E11AC();
}

uint64_t OUTLINED_FUNCTION_97_5()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1B254E940(v0, v1);
}

uint64_t OUTLINED_FUNCTION_98_5()
{
  uint64_t v0;
  char v1;

  return sub_1B254A228(v1, v0);
}

uint64_t OUTLINED_FUNCTION_99_5()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_100_4()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t OUTLINED_FUNCTION_102_4()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_103_5()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_104_4()
{
  return sub_1B25CCC40();
}

__n128 OUTLINED_FUNCTION_105_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, __int128 a13)
{
  uint64_t v13;
  uint64_t v14;

  __swift_getEnumTagSinglePayload(v13, 1, v14);
  return (__n128)a13;
}

_QWORD *OUTLINED_FUNCTION_106_4(uint64_t a1, ...)
{
  uint64_t v1;
  va_list va;

  va_start(va, a1);
  return (*(_QWORD *(**)(uint64_t *__return_ptr))(v1 + 24))((uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_107_3@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_108_6@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 16);
}

uint64_t OUTLINED_FUNCTION_109_5()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_111_4()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_112_5()
{
  uint64_t v0;

  return v0;
}

void sub_1B254EF10()
{
  sub_1B254F1DC();
}

void sub_1B254EF1C()
{
  sub_1B254F1DC();
}

void sub_1B254EF28()
{
  sub_1B254F1DC();
}

void sub_1B254EF34()
{
  sub_1B254F1DC();
}

void sub_1B254EF40()
{
  sub_1B254F1DC();
}

uint64_t sub_1B254EF4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t result;
  uint64_t v7;

  v1 = v0;
  if (qword_1ED36CF48 != -1)
    swift_once();
  v2 = sub_1B25CC8C8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED36D980);
  v3 = sub_1B25CC8B0();
  v4 = sub_1B25CCFD0();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    *(_DWORD *)v5 = 136315138;
    sub_1B2504AB0(0xD00000000000003CLL, 0x80000001B25D4C10, &v7);
    sub_1B25CD12C();
    _os_log_impl(&dword_1B2494000, v3, v4, "EARSpeechRecognitionResultStream.%s", v5, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_174();
  }

  result = MEMORY[0x1B5E26380](v1 + 144);
  if (result)
  {
    sub_1B24FCEF8();
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1B254F0D4()
{
  sub_1B254F1DC();
}

void sub_1B254F0E0()
{
  OUTLINED_FUNCTION_29_9();
}

uint64_t sub_1B254F11C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  double v7;

  if (result)
  {
    sub_1B24FDEB8(v3, v2, v4, v1, v7, v6, v5);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1B254F184()
{
  OUTLINED_FUNCTION_29_9();
}

uint64_t sub_1B254F19C(uint64_t result)
{
  double v1;

  if (result)
  {
    sub_1B24FE144(v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1B254F1D0()
{
  sub_1B254F1DC();
}

void sub_1B254F1DC()
{
  OUTLINED_FUNCTION_29_9();
}

uint64_t sub_1B254F1F8(uint64_t result)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  if (result)
  {
    v1(v2);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1B254F230(void *a1, void *a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;

  v9 = sub_1B24A1BB8(a1, a2, a3, a4);
  v10 = v9;
  if (!v4 && !v9)
  {
    type metadata accessor for EARSpeechRecognitionResultStream();
    v10 = swift_distributedActor_remote_initialize();
    *(_QWORD *)(v10 + 112) = a1;
    *(_QWORD *)(v10 + 120) = a2;
    *(_BYTE *)(v10 + 128) = a3;
    *(_QWORD *)(v10 + 136) = a4;
    sub_1B24A1AF4(a1, a2, a3);
    swift_retain();
  }
  return v10;
}

uint64_t sub_1B254F2B4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  unsigned __int8 v3;

  if ((swift_distributed_actor_is_remote() & 1) != 0)
  {
    sub_1B24AB77C(*(void **)(v0 + 112), *(id *)(v0 + 120), *(_BYTE *)(v0 + 128));
    swift_release();
  }
  else
  {
    v1 = *(void **)(v0 + 112);
    v2 = *(void **)(v0 + 120);
    v3 = *(_BYTE *)(v0 + 128);
    sub_1B2551F58(v1, v2, v3);
    sub_1B24AB77C(v1, v2, v3);
    swift_release();
    sub_1B2550D00(v0 + 144);
  }
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_1B254F34C()
{
  sub_1B254F2B4();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for EARSpeechRecognitionResultStream()
{
  return objc_opt_self();
}

uint64_t sub_1B254F384()
{
  uint64_t v0;

  sub_1B25CD6A8();
  type metadata accessor for EARSpeechRecognitionResultStream();
  sub_1B24B87C4(&qword_1EEFD70A8, v0, (uint64_t (*)(uint64_t))type metadata accessor for EARSpeechRecognitionResultStream, (uint64_t)&unk_1B25DE58C);
  sub_1B25CC91C();
  return sub_1B25CD6CC();
}

uint64_t sub_1B254F3F4()
{
  uint64_t v0;
  uint64_t v1;

  if ((sub_1B25CC7C0() & 1) == 0)
  {
    type metadata accessor for EARSpeechRecognitionResultStream();
    sub_1B24B87C4(&qword_1EEFDA1D0, v1, (uint64_t (*)(uint64_t))type metadata accessor for EARSpeechRecognitionResultStream, (uint64_t)&unk_1B25DE614);
    return sub_1B25CC76C();
  }
  return v0;
}

uint64_t sub_1B254F460(uint64_t a1, uint64_t *a2)
{
  return sub_1B254F230(*(void **)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16), *a2);
}

uint64_t sub_1B254F488()
{
  return sub_1B254F384();
}

uint64_t sub_1B254F4A8()
{
  uint64_t v0;

  type metadata accessor for EARSpeechRecognitionResultStream();
  sub_1B24B87C4(&qword_1EEFDA1D0, v0, (uint64_t (*)(uint64_t))type metadata accessor for EARSpeechRecognitionResultStream, (uint64_t)&unk_1B25DE614);
  return sub_1B25CC79C();
}

uint64_t sub_1B254F504()
{
  sub_1B25CD6A8();
  type metadata accessor for EARSpeechRecognitionResultStream();
  sub_1B25CC91C();
  return sub_1B25CD6CC();
}

uint64_t sub_1B254F558()
{
  uint64_t v0;

  type metadata accessor for EARSpeechRecognitionResultStream();
  sub_1B24B87C4(&qword_1EEFDA1D0, v0, (uint64_t (*)(uint64_t))type metadata accessor for EARSpeechRecognitionResultStream, (uint64_t)&unk_1B25DE614);
  return sub_1B25CC790();
}

uint64_t sub_1B254F5B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  type metadata accessor for EARSpeechRecognitionResultStream();
  sub_1B24B87C4(&qword_1EEFDA1D0, v3, (uint64_t (*)(uint64_t))type metadata accessor for EARSpeechRecognitionResultStream, (uint64_t)&unk_1B25DE614);
  sub_1B24A1DF4();
  result = sub_1B25CC7B4();
  if (!v1)
    *a1 = result;
  return result;
}

uint64_t sub_1B254F634()
{
  uint64_t v0;

  type metadata accessor for EARSpeechRecognitionResultStream();
  sub_1B24B87C4(&qword_1EEFDA1D0, v0, (uint64_t (*)(uint64_t))type metadata accessor for EARSpeechRecognitionResultStream, (uint64_t)&unk_1B25DE614);
  sub_1B24A1DB8();
  return sub_1B25CC7A8();
}

id sub_1B254F6AC()
{
  id result;

  result = xpcInterface_EARSpeechRecognitionResultStream();
  qword_1EEFE4100 = (uint64_t)result;
  return result;
}

id sub_1B254F6D0(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  char *v6;
  id v7;
  objc_super v9;

  v5 = OBJC_IVAR____TtCC6Speech32EARSpeechRecognitionResultStream8XPCProxy_enqueue;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEFD7078);
  swift_allocObject();
  v6 = v2;
  *(_QWORD *)&v2[v5] = sub_1B255043C(&qword_1EEFD71E0, &qword_1EEFD71F0, &qword_1EEFD7208, &qword_1EEFD7660);
  swift_retain();
  sub_1B254F7FC(a1, a2, &qword_1EEFD7208, (uint64_t)&unk_1E6482F68, (uint64_t)&unk_1E6482F90, (uint64_t)&unk_1EEFDA1E0);
  swift_release();

  v9.receiver = v6;
  v9.super_class = (Class)type metadata accessor for EARSpeechRecognitionResultStream.XPCProxy();
  v7 = objc_msgSendSuper2(&v9, sel_init);
  swift_release();
  sub_1B2550374(a2);
  return v7;
}

uint64_t sub_1B254F7D8(uint64_t a1, uint64_t a2)
{
  return sub_1B254F7FC(a1, a2, &qword_1EEFDA1E8, (uint64_t)&unk_1E6482FB8, (uint64_t)&unk_1E6482FE0, (uint64_t)&unk_1EEFDA1F8);
}

uint64_t sub_1B254F7FC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v20 = a6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78]();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD71C0);
  MEMORY[0x1E0C80A78]();
  OUTLINED_FUNCTION_41_1();
  v13 = v12 - v11;
  sub_1B25503B4(a2, v12 - v11);
  v14 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 96);
  v15 = OUTLINED_FUNCTION_3_10();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v14, v8);
  v16 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 0;
  *(_QWORD *)(v17 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v17 + v16, (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  *(_QWORD *)(v17 + ((v10 + v16 + 7) & 0xFFFFFFFFFFFFFFF8)) = v15;
  sub_1B24C52C0(v13, v20, v17);
  return swift_release();
}

void sub_1B254F958(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7618);
  v2 = OUTLINED_FUNCTION_142_0();
  *(_OWORD *)(v2 + 16) = xmmword_1B25DB5B0;
  v3 = OUTLINED_FUNCTION_3_10();
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v2 + 32) = sub_1B2550CE4;
  *(_QWORD *)(v2 + 40) = v3;
  v4 = a1;
  OUTLINED_FUNCTION_26_7();
  OUTLINED_FUNCTION_296_0();
  OUTLINED_FUNCTION_28_10();
  OUTLINED_FUNCTION_20_2();
}

uint64_t sub_1B254FA18(void *a1)
{
  return sub_1B254FCB8(a1, (uint64_t)&unk_1E6483148, (uint64_t)sub_1B2550CAC);
}

void sub_1B254FA80(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7618);
  v2 = OUTLINED_FUNCTION_142_0();
  *(_OWORD *)(v2 + 16) = xmmword_1B25DB5B0;
  v3 = OUTLINED_FUNCTION_3_10();
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v2 + 32) = sub_1B2550C90;
  *(_QWORD *)(v2 + 40) = v3;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_26_7();
  OUTLINED_FUNCTION_296_0();
  OUTLINED_FUNCTION_28_10();
  OUTLINED_FUNCTION_20_2();
}

uint64_t sub_1B254FB6C(void *a1)
{
  return sub_1B254FCB8(a1, (uint64_t)&unk_1E64830F8, (uint64_t)sub_1B2550C58);
}

uint64_t sub_1B254FBD4(void *a1)
{
  return sub_1B254FCB8(a1, (uint64_t)&unk_1E64830D0, (uint64_t)sub_1B2550C3C);
}

uint64_t sub_1B254FC3C(void *a1)
{
  return sub_1B254FCB8(a1, (uint64_t)&unk_1E64830A8, (uint64_t)sub_1B2550C20);
}

uint64_t sub_1B254FCA4(void *a1)
{
  return sub_1B254FCB8(a1, (uint64_t)&unk_1E6483080, (uint64_t)sub_1B2550C04);
}

uint64_t sub_1B254FCB8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  id v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7618);
  v5 = OUTLINED_FUNCTION_142_0();
  *(_OWORD *)(v5 + 16) = xmmword_1B25DB5B0;
  v6 = OUTLINED_FUNCTION_3_10();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v5 + 32) = a3;
  *(_QWORD *)(v5 + 40) = v6;
  v7 = a1;
  sub_1B25866BC((_QWORD *)v5);
  swift_setDeallocating();
  return sub_1B250036C();
}

uint64_t sub_1B254FDA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7)
{
  uint64_t v14;
  uint64_t v15;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7618);
  v14 = OUTLINED_FUNCTION_142_0();
  *(_OWORD *)(v14 + 16) = xmmword_1B25DB5B0;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  *(double *)(v15 + 32) = a5;
  *(_QWORD *)(v15 + 40) = a3;
  *(double *)(v15 + 48) = a6;
  *(_QWORD *)(v15 + 56) = a4;
  *(double *)(v15 + 64) = a7;
  *(_QWORD *)(v14 + 32) = sub_1B2550BCC;
  *(_QWORD *)(v14 + 40) = v15;
  swift_bridgeObjectRetain();
  sub_1B25866BC((_QWORD *)v14);
  swift_setDeallocating();
  return sub_1B250036C();
}

void sub_1B254FE80(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  id v9;
  unint64_t v10;
  uint64_t v11;

  if (a4 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1B25CD474();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v5)
    goto LABEL_12;
  v11 = MEMORY[0x1E0DEE9D8];
  sub_1B2505214();
  if ((v5 & 0x8000000000000000) == 0)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((a4 & 0xC000000000000001) != 0)
        v7 = (id)MEMORY[0x1B5E252C4](i, a4);
      else
        v7 = *(id *)(a4 + 8 * i + 32);
      v8 = v7;
      v9 = objc_msgSend(v7, sel_integerValue);

      v10 = *(_QWORD *)(v11 + 16);
      if (v10 >= *(_QWORD *)(v11 + 24) >> 1)
        sub_1B2505214();
      *(_QWORD *)(v11 + 16) = v10 + 1;
      *(_QWORD *)(v11 + 8 * v10 + 32) = v9;
    }
LABEL_12:
    sub_1B254F0E0();
  }
  __break(1u);
}

uint64_t sub_1B25500D4(double a1)
{
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7618);
  v2 = OUTLINED_FUNCTION_142_0();
  *(_OWORD *)(v2 + 16) = xmmword_1B25DB5B0;
  v3 = OUTLINED_FUNCTION_3_10();
  *(double *)(v3 + 16) = a1;
  *(_QWORD *)(v2 + 32) = sub_1B2550B88;
  *(_QWORD *)(v2 + 40) = v3;
  sub_1B25866BC((_QWORD *)v2);
  swift_setDeallocating();
  return sub_1B250036C();
}

void sub_1B25501A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7618);
  v2 = OUTLINED_FUNCTION_142_0();
  *(_OWORD *)(v2 + 16) = xmmword_1B25DB5B0;
  v3 = OUTLINED_FUNCTION_3_10();
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v2 + 32) = sub_1B2550B68;
  *(_QWORD *)(v2 + 40) = v3;
  OUTLINED_FUNCTION_26_7();
  OUTLINED_FUNCTION_296_0();
  OUTLINED_FUNCTION_28_10();
  OUTLINED_FUNCTION_20_2();
}

void sub_1B2550258()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_1B2550290()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EARSpeechRecognitionResultStream.XPCProxy();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for EARSpeechRecognitionResultStream.XPCProxy()
{
  return objc_opt_self();
}

uint64_t sub_1B25502F0(uint64_t a1, uint64_t a2)
{
  return sub_1B24B87C4(&qword_1EEFD70B0, a2, (uint64_t (*)(uint64_t))type metadata accessor for EARSpeechRecognitionResultStream, (uint64_t)&unk_1B25DE564);
}

uint64_t sub_1B255031C(uint64_t a1, uint64_t a2)
{
  return sub_1B24B87C4(&qword_1EEFD70A8, a2, (uint64_t (*)(uint64_t))type metadata accessor for EARSpeechRecognitionResultStream, (uint64_t)&unk_1B25DE58C);
}

uint64_t sub_1B2550348(uint64_t a1, uint64_t a2)
{
  return sub_1B24B87C4(&qword_1EEFD70B8, a2, (uint64_t (*)(uint64_t))type metadata accessor for EARSpeechRecognitionResultStream, (uint64_t)&unk_1B25DE5CC);
}

uint64_t sub_1B2550374(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD71C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B25503B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD71C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B25503FC()
{
  swift_weakDestroy();
  OUTLINED_FUNCTION_223_0();
  return swift_deallocObject();
}

uint64_t sub_1B2550418()
{
  return sub_1B255043C(&qword_1EEFDA208, &qword_1EEFDA210, &qword_1EEFDA1E8, &qword_1EEFDA218);
}

uint64_t sub_1B255043C(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v8 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78]();
  OUTLINED_FUNCTION_41_1();
  v12 = v11 - v10;
  v23 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v13 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78]();
  OUTLINED_FUNCTION_41_1();
  v16 = v15 - v14;
  v17 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78]();
  OUTLINED_FUNCTION_41_1();
  v21 = v20 - v19;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104))(v12, *MEMORY[0x1E0DF07B8], v8);
  sub_1B25CCCE8();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v12, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v4 + *(_QWORD *)(*(_QWORD *)v4 + 96), v21, v17);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v4 + *(_QWORD *)(*(_QWORD *)v4 + 104), v16, v23);
  return v4;
}

uint64_t sub_1B25505A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[7] = a4;
  v5[8] = a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD71F8);
  v5[9] = v6;
  v5[10] = *(_QWORD *)(v6 - 8);
  v5[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1B2550604()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_23_10();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7208);
  sub_1B25CCD18();
  OUTLINED_FUNCTION_22_6();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_21_8(v0);
  OUTLINED_FUNCTION_0_6(v1);
  return OUTLINED_FUNCTION_8_10();
}

uint64_t sub_1B2550664()
{
  OUTLINED_FUNCTION_7_10();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B2550690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  OUTLINED_FUNCTION_32_9();
  if (v1)
  {
    v2 = OUTLINED_FUNCTION_30_6();
    *(_QWORD *)(v0 + 120) = v2;
    if (v2)
    {
      if ((sub_1B25CC7C0() & 1) != 0)
        return OUTLINED_FUNCTION_31();
      swift_release();
    }
    OUTLINED_FUNCTION_24_11();
    v4 = swift_task_alloc();
    v5 = (_QWORD *)OUTLINED_FUNCTION_21_8(v4);
    OUTLINED_FUNCTION_0_6(v5);
    return OUTLINED_FUNCTION_11_7();
  }
  else
  {
    OUTLINED_FUNCTION_20_8();
    swift_task_dealloc();
    return OUTLINED_FUNCTION_56(*(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_1B255072C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;

  OUTLINED_FUNCTION_19_7(a1, a2, a3, a4, a5, a6, a7, a8, v9);
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B2550758()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_25_10();
  OUTLINED_FUNCTION_24_11();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_21_8(v1);
  *v2 = v0;
  v2[1] = sub_1B2550664;
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_18_10();
}

uint64_t sub_1B25507B0()
{
  return objectdestroy_3Tm(&qword_1EEFD7208);
}

uint64_t sub_1B25507BC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7208);
  OUTLINED_FUNCTION_4_10();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_16_8(v1);
  return sub_1B25505A0(v2, v3, v4, v5, v6);
}

uint64_t sub_1B2550824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[7] = a4;
  v5[8] = a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDA200);
  v5[9] = v6;
  v5[10] = *(_QWORD *)(v6 - 8);
  v5[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1B2550888()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_23_10();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDA1E8);
  sub_1B25CCD18();
  OUTLINED_FUNCTION_22_6();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_21_8(v0);
  OUTLINED_FUNCTION_0_6(v1);
  return OUTLINED_FUNCTION_8_10();
}

uint64_t sub_1B25508E8()
{
  OUTLINED_FUNCTION_7_10();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B2550914()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  OUTLINED_FUNCTION_32_9();
  if (v1)
  {
    v2 = OUTLINED_FUNCTION_30_6();
    *(_QWORD *)(v0 + 120) = v2;
    if (v2)
    {
      if ((sub_1B25CC7C0() & 1) != 0)
        return OUTLINED_FUNCTION_31();
      swift_release();
    }
    OUTLINED_FUNCTION_24_11();
    v4 = swift_task_alloc();
    v5 = (_QWORD *)OUTLINED_FUNCTION_21_8(v4);
    OUTLINED_FUNCTION_0_6(v5);
    return OUTLINED_FUNCTION_11_7();
  }
  else
  {
    OUTLINED_FUNCTION_20_8();
    swift_task_dealloc();
    return OUTLINED_FUNCTION_56(*(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_1B25509B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;

  OUTLINED_FUNCTION_19_7(a1, a2, a3, a4, a5, a6, a7, a8, v9);
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B25509DC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_25_10();
  OUTLINED_FUNCTION_24_11();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_21_8(v1);
  *v2 = v0;
  v2[1] = sub_1B25508E8;
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_18_10();
}

uint64_t sub_1B2550A34()
{
  return objectdestroy_3Tm(&qword_1EEFDA1E8);
}

uint64_t objectdestroy_3Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B2550ACC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDA1E8);
  OUTLINED_FUNCTION_4_10();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_16_8(v1);
  return sub_1B2550824(v2, v3, v4, v5, v6);
}

uint64_t sub_1B2550B34(uint64_t a1, uint64_t (*a2)(uint64_t *))
{
  uint64_t v3;

  v3 = a1;
  return a2(&v3);
}

void sub_1B2550B68()
{
  OUTLINED_FUNCTION_2_8();
  sub_1B254F1D0();
}

void sub_1B2550B7C()
{
  OUTLINED_FUNCTION_0();
}

void sub_1B2550B88()
{
  sub_1B254F184();
}

void sub_1B2550BA0()
{
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1B2550BA8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1B2550BCC(uint64_t a1)
{
  uint64_t v1;

  sub_1B254FE80(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1B2550BE8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_223_0();
  return swift_deallocObject();
}

void sub_1B2550C04()
{
  OUTLINED_FUNCTION_2_8();
  sub_1B254F0D4();
}

void sub_1B2550C18()
{
  OUTLINED_FUNCTION_0();
}

void sub_1B2550C20()
{
  OUTLINED_FUNCTION_2_8();
  sub_1B254EF4C();
  OUTLINED_FUNCTION_0();
}

void sub_1B2550C3C()
{
  OUTLINED_FUNCTION_2_8();
  sub_1B254EF40();
}

void sub_1B2550C50()
{
  OUTLINED_FUNCTION_0();
}

void sub_1B2550C58()
{
  OUTLINED_FUNCTION_2_8();
  sub_1B254EF34();
}

void sub_1B2550C6C()
{
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1B2550C74()
{
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_223_0();
  return swift_deallocObject();
}

void sub_1B2550C90()
{
  OUTLINED_FUNCTION_2_8();
  sub_1B254EF28();
}

void sub_1B2550CA4()
{
  OUTLINED_FUNCTION_0();
}

void sub_1B2550CAC()
{
  OUTLINED_FUNCTION_2_8();
  sub_1B254EF1C();
}

void sub_1B2550CC0()
{
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1B2550CC8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_223_0();
  return swift_deallocObject();
}

void sub_1B2550CE4()
{
  OUTLINED_FUNCTION_2_8();
  sub_1B254EF10();
}

void sub_1B2550CF8()
{
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1B2550D00(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t OUTLINED_FUNCTION_0_6(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_2_8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_3_10()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_7_10()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_8_10()
{
  return sub_1B25CCD24();
}

uint64_t OUTLINED_FUNCTION_11_7()
{
  return sub_1B25CCD24();
}

uint64_t OUTLINED_FUNCTION_12_8()
{
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_16_8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_18_10()
{
  return sub_1B25CCD24();
}

uint64_t OUTLINED_FUNCTION_19_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t (*v10)(uint64_t *);

  v10 = *(uint64_t (**)(uint64_t *))(v9 + 104);
  a9 = *(_QWORD *)(v9 + 120);
  return v10(&a9);
}

uint64_t OUTLINED_FUNCTION_20_8()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[10] + 8))(v0[11], v0[9]);
}

uint64_t OUTLINED_FUNCTION_21_8(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 96) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_22_6()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_24_11()
{
  uint64_t v0;

  return sub_1B24C4564(*(_QWORD *)(v0 + 104));
}

uint64_t OUTLINED_FUNCTION_25_10()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_26_7()
{
  _QWORD *v0;

  return sub_1B25866BC(v0);
}

uint64_t OUTLINED_FUNCTION_28_10()
{
  return sub_1B250036C();
}

void OUTLINED_FUNCTION_29_9()
{
  JUMPOUT(0x1B5E26380);
}

uint64_t OUTLINED_FUNCTION_30_6()
{
  return swift_weakLoadStrong();
}

__n128 OUTLINED_FUNCTION_32_9()
{
  uint64_t v0;
  __n128 result;

  result = *(__n128 *)(v0 + 40);
  *(__n128 *)(v0 + 104) = result;
  return result;
}

uint64_t sub_1B2550ED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(_QWORD *)(a3 - 8);
}

uint64_t sub_1B2550EE0()
{
  swift_conformsToProtocol();
  return OUTLINED_FUNCTION_53();
}

uint64_t sub_1B2550F38()
{
  return MEMORY[0x1E0DEE9D8];
}

__n128 sub_1B2550F44(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t DynamicType;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 result;
  __int128 v14;
  __int128 v15;
  _OWORD v16[2];
  _OWORD v17[2];
  __int128 v18;
  uint64_t MetatypeMetadata;
  uint64_t v20[4];

  v4 = v2;
  v6 = swift_conformsToProtocol();
  v7 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  OUTLINED_FUNCTION_229();
  v20[3] = a2;
  __swift_allocate_boxed_opaque_existential_0Tm(v20);
  sub_1B25CC808();
  sub_1B25CC7FC();
  sub_1B25CC7FC();
  DynamicType = swift_getDynamicType();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v3, a2);
  MetatypeMetadata = swift_getMetatypeMetadata();
  *(_QWORD *)&v18 = DynamicType;
  sub_1B24AD568((uint64_t)v20, (uint64_t)v16);
  sub_1B24AB608(&v18, v17);
  sub_1B2568C5C();
  v10 = *(_QWORD *)(*v4 + 16);
  sub_1B2568D5C(v10);
  v11 = *v4;
  *(_QWORD *)(v11 + 16) = v10 + 1;
  v12 = v11 + (v10 << 6);
  result = (__n128)v16[0];
  v14 = v16[1];
  v15 = v17[1];
  *(_OWORD *)(v12 + 64) = v17[0];
  *(_OWORD *)(v12 + 80) = v15;
  *(__n128 *)(v12 + 32) = result;
  *(_OWORD *)(v12 + 48) = v14;
  *v4 = v11;
  return result;
}

uint64_t sub_1B2551080()
{
  return swift_conformsToProtocol();
}

uint64_t sub_1B25510B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v9[11] = v13;
  v9[12] = v8;
  v9[9] = v11;
  v9[10] = v12;
  v9[7] = a7;
  v9[8] = a8;
  v9[5] = a4;
  v9[6] = a6;
  v9[3] = a2;
  v9[4] = a3;
  v9[2] = a1;
  v9[13] = swift_conformsToProtocol();
  OUTLINED_FUNCTION_17();
  return swift_task_switch();
}

uint64_t sub_1B2551114()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;

  sub_1B2552528();
  *(_QWORD *)(v0 + 112) = v1;
  v2 = v1;
  v4 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 48);
  v7 = *(_QWORD *)(v0 + 24);
  v8 = swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v8;
  v9 = *(_OWORD *)(v0 + 72);
  v10 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)(v0 + 56);
  *(_OWORD *)(v8 + 32) = v9;
  *(_QWORD *)(v8 + 48) = v5;
  *(_QWORD *)(v8 + 56) = v3;
  *(_QWORD *)(v8 + 64) = v2;
  *(_QWORD *)(v8 + 72) = v4;
  *(_OWORD *)(v8 + 80) = v10;
  *(_QWORD *)(v8 + 96) = v6;
  *(_QWORD *)(v8 + 104) = v7;
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v11;
  *v11 = v0;
  v11[1] = sub_1B2551230;
  OUTLINED_FUNCTION_17();
  return sub_1B25CD5F4();
}

uint64_t sub_1B2551230()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  OUTLINED_FUNCTION_17();
  return swift_task_switch();
}

uint64_t sub_1B2551298()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_66();
  return OUTLINED_FUNCTION_21(v1);
}

uint64_t sub_1B25512C0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_36();
  return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B25512F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;

  v8[12] = a7;
  v8[13] = v7;
  v8[10] = a3;
  v8[11] = a5;
  v8[8] = a1;
  v8[9] = a2;
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B2551308()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD *v8;
  os_unfair_lock_s *v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  void *v16;
  void *v17;

  sub_1B2552528();
  v17 = v1;
  v2 = objc_msgSend(v1, sel_remoteObjectProxy);
  sub_1B25CD180();
  v3 = swift_unknownObjectRelease();
  OUTLINED_FUNCTION_60(v3, &qword_1ED36D030);
  OUTLINED_FUNCTION_53();
  v16 = *(void **)(v0 + 48);
  sub_1B25CC7CC();
  v4 = sub_1B25CD18C();
  v6 = v5;
  result = OUTLINED_FUNCTION_69();
  if (v6)
  {
    v8 = *(_QWORD **)(v0 + 104);
    v9 = *(os_unfair_lock_s **)(v8[16] + 16);
    swift_retain();
    os_unfair_lock_lock(v9);
    swift_retain();
    v10 = swift_bridgeObjectRetain();
    sub_1B2551550(v10);
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(v9);
    swift_release();
    __swift_project_boxed_opaque_existential_1(v8 + 2, v8[5]);
    v11 = v16;
    swift_bridgeObjectRetain();
    v12 = sub_1B2509CD4();
    OUTLINED_FUNCTION_69();

    if (qword_1ED36CF48 != -1)
      swift_once();
    v13 = OUTLINED_FUNCTION_147();
    v14 = __swift_project_value_buffer(v13, (uint64_t)qword_1ED36D980);
    sub_1B24B3534(v12 & 1, "/Library/Caches/com.apple.xbs/Sources/SpeechFramework/EAR-XPC/NSXPCActorSystem.swift", 84, 2, 169, v14, v4, v6);

    OUTLINED_FUNCTION_69();
    v15 = (uint64_t (*)(void))OUTLINED_FUNCTION_66();
    return v15();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B255153C(uint64_t a1)
{
  return sub_1B2551550(a1);
}

uint64_t sub_1B2551550(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _BYTE v7[32];
  _OWORD v8[2];
  _OWORD v9[2];
  _BYTE v10[32];
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1B250574C();
    v3 = a1 + 64;
    do
    {
      sub_1B24AD25C(v3 - 32, (uint64_t)v7, &qword_1ED36D068);
      sub_1B24BFFF8(v3, (uint64_t)v8);
      sub_1B24AD568((uint64_t)v7, (uint64_t)v10);
      sub_1B24AB608(v8, v9);
      sub_1B2552CA8((uint64_t)v10, (uint64_t)v9, (uint64_t)v7);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v9);
      sub_1B254E678((uint64_t)v10, &qword_1ED36D068);
      v4 = v11;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B250574C();
        v4 = v11;
      }
      v5 = *(_QWORD *)(v4 + 16);
      if (v5 >= *(_QWORD *)(v4 + 24) >> 1)
      {
        sub_1B250574C();
        v4 = v11;
      }
      *(_QWORD *)(v4 + 16) = v5 + 1;
      sub_1B24AD568((uint64_t)v7, v4 + 32 * v5 + 32);
      v3 += 64;
      --v1;
    }
    while (v1);
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x1E0DEE9D8];
  }
  return v4;
}

uint64_t sub_1B25516D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B25516F0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_38_7();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  v2 = OUTLINED_FUNCTION_10_12(v1, (uint64_t)sub_1B2551734);
  return sub_1B255AA14(v2, v3, v4, v5);
}

uint64_t sub_1B2551734()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_3_11();
  if (!v1)
    *(_QWORD *)(v2 + 72) = v0;
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_31();
}

uint64_t sub_1B2551778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B2551790()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_38_7();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  v2 = OUTLINED_FUNCTION_10_12(v1, (uint64_t)sub_1B2551734);
  return sub_1B255AEE0(v2, v3, v4, v5);
}

uint64_t sub_1B25517D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11)
{
  uint64_t v11;
  char v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  *(_QWORD *)(v11 + 136) = v16;
  *(_OWORD *)(v11 + 120) = v15;
  *(_OWORD *)(v11 + 104) = v14;
  *(_BYTE *)(v11 + 160) = v13;
  *(double *)(v11 + 88) = a10;
  *(double *)(v11 + 96) = a11;
  *(double *)(v11 + 80) = a9;
  *(_QWORD *)(v11 + 64) = a7;
  *(_QWORD *)(v11 + 72) = a8;
  *(_QWORD *)(v11 + 48) = a5;
  *(_QWORD *)(v11 + 56) = a6;
  *(_QWORD *)(v11 + 32) = a3;
  *(_QWORD *)(v11 + 40) = a4;
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  OUTLINED_FUNCTION_17();
  return swift_task_switch();
}

uint64_t sub_1B2551828()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 24) + 16);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v2;
  *v2 = v0;
  v2[1] = sub_1B25518B4;
  return sub_1B24F8B3C(*(double *)(v0 + 80), *(double *)(v0 + 88), *(double *)(v0 + 96), *(_QWORD *)(v0 + 16), v1, *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
}

uint64_t sub_1B25518B4()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_188_1();
  *(_QWORD *)(v1 + 152) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B2551900()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_32_10();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_670();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_66();
  return OUTLINED_FUNCTION_4_0(v0);
}

uint64_t sub_1B2551948()
{
  uint64_t v0;

  OUTLINED_FUNCTION_32_10();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_670();
  return OUTLINED_FUNCTION_4_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B2551994(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B25519A4()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_38_7();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_1B2557F28;
  return OUTLINED_FUNCTION_35_10();
}

uint64_t sub_1B25519E4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B25519F4()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_38_7();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_1B2551A3C;
  return sub_1B25781C4();
}

uint64_t sub_1B2551A3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_81();
  if (v1)
  {
    OUTLINED_FUNCTION_670();
    a1 = 0;
  }
  return OUTLINED_FUNCTION_14_0(a1, *(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_1B2551A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B2551A94()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
  v4 = (uint64_t (*)(uint64_t))(**(int **)(v0 + 24) + *(_QWORD *)(v0 + 24));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v2;
  *v2 = v0;
  v2[1] = sub_1B2551AF8;
  return v4(v1);
}

uint64_t sub_1B2551AF8()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_188_1();
  *(_QWORD *)(v1 + 48) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B2551B44()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1B2551B54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B2551B68()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_53_6();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_1B2551BB8;
  v2 = OUTLINED_FUNCTION_55_7();
  return sub_1B24F60B8(v2, v3, v4, v5);
}

uint64_t sub_1B2551BB8()
{
  OUTLINED_FUNCTION_44_2();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B2551BF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B2551C08()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_53_6();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_1B2551C58;
  v2 = OUTLINED_FUNCTION_55_7();
  return sub_1B25A02EC(v2, v3, v4, v5);
}

uint64_t sub_1B2551C58()
{
  OUTLINED_FUNCTION_44_2();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B2551C94()
{
  uint64_t v0;
  id *v1;
  uint64_t v2;

  v1 = *(id **)(v0 + 40);
  swift_release();
  v2 = *(_QWORD *)(v0 + 16);
  sub_1B2557174(v1);
  return OUTLINED_FUNCTION_14_0(v2, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B2551CD0()
{
  uint64_t v0;
  id *v1;

  v1 = *(id **)(v0 + 40);
  swift_release();
  sub_1B2557174(v1);
  return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B2551D04(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B2551D14()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_53_6();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_1B2551D60;
  v2 = OUTLINED_FUNCTION_55_7();
  return sub_1B25A0B08(v2);
}

uint64_t sub_1B2551D60()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_188_1();
  *(_QWORD *)(v1 + 40) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B2551DB4()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1B2551DC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B2551DD8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_38_7();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  v2 = OUTLINED_FUNCTION_10_12(v1, (uint64_t)sub_1B2551E1C);
  return sub_1B2595F20(v2, v3, v4, v5);
}

uint64_t sub_1B2551E1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_3_11();
  if (!v1)
    *(_QWORD *)(v2 + 72) = v0;
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_31();
}

uint64_t sub_1B2551E60()
{
  uint64_t v0;

  OUTLINED_FUNCTION_66_2();
  OUTLINED_FUNCTION_173();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 72));
}

uint64_t sub_1B2551E98()
{
  uint64_t v0;

  OUTLINED_FUNCTION_66_2();
  OUTLINED_FUNCTION_173();
  return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B2551EC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload() != 1)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 32))(a3, v3);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 32))(a2, v3, *(_QWORD *)(a1 + 24));
  return swift_willThrowTypedImpl();
}

void sub_1B2551F58(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v8;
  uint64_t v9;

  v4 = v3;
  v8 = *(os_unfair_lock_s **)(*(_QWORD *)(v4 + 128) + 16);
  OUTLINED_FUNCTION_90_6();
  sub_1B24A1AF4(a1, a2, a3);
  os_unfair_lock_lock(v8);
  sub_1B2553630(v4, (uint64_t)a1, (uint64_t)a2, a3);
  os_unfair_lock_unlock(v8);
  swift_release();
  sub_1B24AB77C(a1, a2, a3);
  v9 = *(_QWORD *)(v4 + 144);
  OUTLINED_FUNCTION_90_6();
  sub_1B24A1AF4(a1, a2, a3);
  sub_1B2556DD0(v9, v4, a1, a2, a3);
  OUTLINED_FUNCTION_22_5();
}

id sub_1B2552014()
{
  id v0;
  id v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_anonymousListener);
  v1 = objc_msgSend(v0, sel_endpoint);
  v2 = v1;
  sub_1B2556C8C(sub_1B2557404);

  return v1;
}

void sub_1B25520CC(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  swift_beginAccess();
  sub_1B24A1AF4(a2, a3, a4);
  sub_1B2569520((uint64_t)a5, (uint64_t)a2, (uint64_t)a3, a4);
  swift_endAccess();
  sub_1B24AB77C(a2, a3, a4);
}

void sub_1B255216C()
{
  sub_1B2556C8C((void (*)(void))sub_1B255719C);
}

uint64_t sub_1B25521B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  _QWORD *v7;
  void *v9;
  void *v10;
  unsigned __int8 v11;

  sub_1B25CD2F4();
  v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a3;
  v7[3] = a4;
  v7[4] = v6;
  swift_beginAccess();
  swift_retain();
  sub_1B2569514((uint64_t)sub_1B25571F8, (uint64_t)v7, (uint64_t)v9, (uint64_t)v10, v11);
  swift_endAccess();
  sub_1B24AB77C(v9, v10, v11);
  return swift_release();
}

uint64_t sub_1B25522CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v5 = a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x1B5E26380](v5);
  if (result)
    v7 = a2;
  else
    v7 = 0;
  *a3 = result;
  a3[1] = v7;
  return result;
}

void sub_1B255232C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  char v19;
  _QWORD v20[4];
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_326_0();
  v20[3] = v1;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = OUTLINED_FUNCTION_147();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1B25524CC();
  if (v13)
  {
    v15 = v13;
    v16 = v14;
    v20[2] = v0;
    if (qword_1ED36CF48 != -1)
      swift_once();
    v17 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED36D980);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v17, v8);
    v21 = v15;
    v22 = v16;
    swift_unknownObjectRetain();
    v20[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF18);
    v18 = swift_dynamicCast();
    v19 = v18;
    if (v18)
      swift_unknownObjectRelease();
    swift_unknownObjectRetain();
    sub_1B24A1AF4(v7, v5, v3);
    sub_1B24B3538(v19, (int)"/Library/Caches/com.apple.xbs/Sources/SpeechFramework/EAR-XPC/NSXPCActorSystem.swift", 84, 2, 79, (int)v12, v7, v5, v3, v15);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    v21 = v15;
    v22 = v16;
    OUTLINED_FUNCTION_53();
  }
  OUTLINED_FUNCTION_49_4();
}

uint64_t sub_1B25524CC()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  char v5;

  OUTLINED_FUNCTION_289();
  OUTLINED_FUNCTION_22_7();
  v0 = OUTLINED_FUNCTION_48_7();
  sub_1B2556A74(v0, v1, v2, v3, v4, v5);
  return 0;
}

void sub_1B2552528()
{
  uint64_t AssociatedTypeWitness;
  uint64_t v1;
  void *v2;
  id v3;
  char v4;

  OUTLINED_FUNCTION_326_0();
  OUTLINED_FUNCTION_147();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v1);
  sub_1B25CD2F4();
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_56_6();
  if (!sub_1B255378C())
    __asm { BR              X9 }
  v2 = (void *)OUTLINED_FUNCTION_56_6();
  sub_1B24AB77C(v2, v3, v4);
  OUTLINED_FUNCTION_49_4();
}

void sub_1B2552748()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 - 120) = 0;
  *(_QWORD *)(v1 - 112) = 0xE000000000000000;
  sub_1B25CD2DC();
  v2 = *(_QWORD *)(v1 - 112);
  *(_QWORD *)(v1 - 120) = *(_QWORD *)(v1 - 120);
  *(_QWORD *)(v1 - 112) = v2;
  sub_1B25CCAE4();
  *(_QWORD *)(v1 - 72) = v0;
  sub_1B25CD5AC();
  sub_1B25CD45C();
  __break(1u);
}

uint64_t sub_1B25527D0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  os_unfair_lock_s *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[2];
  void (*v44)(char *, char *, uint64_t);
  void (*v45)(char *, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  _QWORD aBlock[7];

  v59 = a8;
  v56 = a7;
  v54 = a6;
  v46 = a5;
  v57 = a2;
  v58 = a4;
  v48 = a3;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED36D060);
  v14 = sub_1B25CCC64();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x1E0C80A78](v14, v17);
  v19 = (char *)v43 - v18;
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v49 = a1;
  v45 = v20;
  v20(v19, a1, v14);
  v21 = *(unsigned __int8 *)(v15 + 80);
  v22 = (v21 + 64) & ~v21;
  v47 = v16;
  v43[0] = v21;
  v43[1] = v21 | 7;
  v23 = (char *)swift_allocObject();
  *((_QWORD *)v23 + 2) = v59;
  *((_QWORD *)v23 + 3) = a9;
  v50 = a9;
  v51 = a10;
  *((_QWORD *)v23 + 4) = a10;
  *((_QWORD *)v23 + 5) = a11;
  v55 = a11;
  v52 = a12;
  v53 = a13;
  *((_QWORD *)v23 + 6) = a12;
  *((_QWORD *)v23 + 7) = a13;
  v44 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v44(&v23[v22], v19, v14);
  aBlock[4] = sub_1B25579AC;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B2552C5C;
  aBlock[3] = &block_descriptor_83;
  v24 = _Block_copy(aBlock);
  swift_release();
  v25 = objc_msgSend(v57, sel_remoteObjectProxyWithErrorHandler_, v24);
  _Block_release(v24);
  sub_1B25CD180();
  swift_unknownObjectRelease();
  sub_1B24ADA58(0, &qword_1ED36D030);
  swift_dynamicCast();
  v57 = v60;
  sub_1B25CC7CC();
  v58 = sub_1B25CD18C();
  v27 = v26;
  result = swift_bridgeObjectRelease();
  if (v27)
  {
    v29 = v43[0];
    v30 = v48;
    v31 = *(os_unfair_lock_s **)(*(_QWORD *)(v48 + 128) + 16);
    swift_retain();
    os_unfair_lock_lock(v31);
    swift_retain();
    v32 = swift_bridgeObjectRetain();
    sub_1B2551550(v32);
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(v31);
    swift_release();
    v45(v19, v49, v14);
    v33 = (char *)swift_allocObject();
    v34 = v50;
    *((_QWORD *)v33 + 2) = v59;
    *((_QWORD *)v33 + 3) = v34;
    v35 = v55;
    *((_QWORD *)v33 + 4) = v51;
    *((_QWORD *)v33 + 5) = v35;
    v36 = v53;
    *((_QWORD *)v33 + 6) = v52;
    *((_QWORD *)v33 + 7) = v36;
    v37 = v54;
    *((_QWORD *)v33 + 8) = v30;
    *((_QWORD *)v33 + 9) = v37;
    v44(&v33[(v29 + 80) & ~v29], v19, v14);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v30 + 16), *(_QWORD *)(v30 + 40));
    swift_retain();
    v38 = v57;
    swift_bridgeObjectRetain();
    v39 = v58;
    v40 = sub_1B2509CD4();

    swift_bridgeObjectRelease();
    if (qword_1ED36CF48 != -1)
      swift_once();
    v41 = sub_1B25CC8C8();
    v42 = __swift_project_value_buffer(v41, (uint64_t)qword_1ED36D980);
    sub_1B24B3534(v40 & 1, "/Library/Caches/com.apple.xbs/Sources/SpeechFramework/EAR-XPC/NSXPCActorSystem.swift", 84, 2, 135, v42, v39, v27);
    swift_bridgeObjectRelease();

    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B2552BFC(void *a1)
{
  id v1;

  v1 = a1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED36D060);
  sub_1B25CCC64();
  return sub_1B25CCC4C();
}

void sub_1B2552C5C(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  OUTLINED_FUNCTION_289();
  v4 = a2;
  v3();
  swift_release();

}

void sub_1B2552CA8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v6;
  uint64_t v7;
  _BYTE v8[24];
  uint64_t v9;
  _BYTE v10[32];

  sub_1B24AD25C(a1, (uint64_t)v8, &qword_1ED36D068);
  sub_1B24BFFF8(a2, (uint64_t)v10);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36CFA8);
  if ((swift_dynamicCast() & 1) != 0)
    goto LABEL_5;
  if (!v9)
  {
LABEL_11:
    sub_1B24AD25C(a1, a3, &qword_1ED36D068);
    sub_1B254E678((uint64_t)v8, &qword_1ED36D070);
    return;
  }
  sub_1B24AD25C((uint64_t)v8, (uint64_t)&v7, &qword_1ED36D068);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF18);
  if (!swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v7);
    goto LABEL_11;
  }
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v7);
LABEL_5:
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v10);
  sub_1B254E678((uint64_t)v8, &qword_1ED36D068);
  sub_1B24AD25C(a1, (uint64_t)v8, &qword_1ED36D068);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF18);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v6 = sub_1B2553D90();
      *(_QWORD *)(a3 + 24) = sub_1B24ADA58(0, (unint64_t *)&qword_1ED36A530);
      swift_unknownObjectRelease();
      *(_QWORD *)a3 = v6;
      return;
    }
  }
  else
  {
    sub_1B254E678((uint64_t)v8, &qword_1ED36D068);
  }
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
}

void sub_1B2552E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  _QWORD v27[2];
  uint64_t v28[4];
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  _BYTE v33[40];
  _BYTE v34[24];
  uint64_t v35;

  v11 = *(_QWORD *)(a7 - 8);
  v12 = MEMORY[0x1E0C80A78](a1, a2);
  v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v12, v15);
  v18 = (char *)v27 - v17;
  v20 = MEMORY[0x1E0C80A78](v16, v19);
  v22 = (char *)v27 - v21;
  sub_1B24AD25C(v20, (uint64_t)v34, &qword_1ED36D068);
  if (!v35)
    goto LABEL_5;
  sub_1B24AD25C((uint64_t)v34, (uint64_t)v33, &qword_1ED36D068);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF78);
  if (!swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v33);
LABEL_5:
    sub_1B25531D0(a3, a1, a7, (uint64_t)v14);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v18, v14, a7);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED36D060);
    sub_1B25CCC64();
    sub_1B25CCC58();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, a7);
    goto LABEL_6;
  }
  v27[0] = v11;
  v27[1] = a4;
  sub_1B24AD190(&v32, (uint64_t)v29);
  v23 = v30;
  v24 = v31;
  __swift_project_boxed_opaque_existential_1(v29, v30);
  v25 = *(void (**)(uint64_t, uint64_t))(v24 + 24);
  v28[3] = swift_getAssociatedTypeWitness();
  __swift_allocate_boxed_opaque_existential_0Tm(v28);
  v25(v23, v24);
  sub_1B25531D0(a3, (uint64_t)v28, a7, (uint64_t)v22);
  sub_1B254E678((uint64_t)v28, &qword_1ED36D068);
  v26 = v27[0];
  (*(void (**)(char *, char *, uint64_t))(v27[0] + 16))(v18, v22, a7);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED36D060);
  sub_1B25CCC64();
  sub_1B25CCC58();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v22, a7);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v29);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v33);
LABEL_6:
  sub_1B254E678((uint64_t)v34, &qword_1ED36D068);
}

void sub_1B25531D0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19[5];
  _BYTE v20[32];
  void *v21;

  sub_1B24AD25C(a2, (uint64_t)v20, &qword_1ED36D068);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36D068);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED36D020);
  if (!swift_dynamicCast())
    goto LABEL_9;
  v9 = v21;
  if (dynamic_cast_existential_1_conditional(a1))
  {
    v11 = v10;
    sub_1B2554B70();
    v13 = v12;

    if (!v4)
    {
      v19[0] = v13;
      v19[1] = v11;
      v14 = &qword_1ED36CF18;
LABEL_11:
      __swift_instantiateConcreteTypeFromMangledName(v14);
      swift_dynamicCast();
      goto LABEL_12;
    }
    goto LABEL_12;
  }
  v15 = dynamic_cast_existential_1_conditional(a1);
  if (!v15)
  {

LABEL_9:
    sub_1B254E678((uint64_t)v20, &qword_1ED36D068);
    sub_1B2554E4C(a2, a3, a4);
    return;
  }
  v17 = v15;
  v18 = v16;
  v19[3] = v15;
  v19[4] = v16;
  __swift_allocate_boxed_opaque_existential_0Tm(v19);
  sub_1B2554D1C(v17, v9, v17, v18);

  if (!v4)
  {
    v14 = (uint64_t *)&unk_1EEFD8500;
    goto LABEL_11;
  }
  __swift_deallocate_boxed_opaque_existential_0Tm((uint64_t)v19);
LABEL_12:
  sub_1B254E678((uint64_t)v20, &qword_1ED36D068);
}

uint64_t sub_1B2553390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[5];
  _QWORD v16[5];

  OUTLINED_FUNCTION_25_3();
  sub_1B2599AA0(v15);
  v2 = v15[1];
  v3 = v15[3];
  v4 = v15[4];
  result = OUTLINED_FUNCTION_50_7();
  if (!v4)
    goto LABEL_3;
LABEL_2:
  OUTLINED_FUNCTION_60_4();
  while (1)
  {
    result = (uint64_t)OUTLINED_FUNCTION_58_7();
    if (v4)
      goto LABEL_2;
LABEL_3:
    v6 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }
    if (v6 >= v1)
      goto LABEL_22;
    if (!*(_QWORD *)(v2 + 8 * v6))
    {
      if (v3 + 2 >= v1)
        goto LABEL_22;
      if (!*(_QWORD *)(v2 + 8 * (v3 + 2)))
      {
        if (v3 + 3 >= v1)
          goto LABEL_22;
        if (!*(_QWORD *)(v2 + 8 * (v3 + 3)))
        {
          if (v3 + 4 >= v1)
            goto LABEL_22;
          if (!*(_QWORD *)(v2 + 8 * (v3 + 4)))
          {
            if (v3 + 5 >= v1)
              goto LABEL_22;
            if (!*(_QWORD *)(v2 + 8 * (v3 + 5)))
            {
              if (v3 + 6 >= v1)
                goto LABEL_22;
              if (!*(_QWORD *)(v2 + 8 * (v3 + 6)))
                break;
            }
          }
        }
      }
    }
LABEL_19:
    OUTLINED_FUNCTION_47_10();
  }
  v7 = v3 + 7;
  while (v7 < v1)
  {
    if (*(_QWORD *)(v2 + 8 * v7++))
      goto LABEL_19;
  }
LABEL_22:
  OUTLINED_FUNCTION_10_0();
  swift_release();
  OUTLINED_FUNCTION_25_3();
  sub_1B2599AA0(v16);
  v9 = v16[1];
  v10 = v16[3];
  v11 = v16[4];
  result = OUTLINED_FUNCTION_50_7();
  if (!v11)
    goto LABEL_24;
LABEL_23:
  OUTLINED_FUNCTION_60_4();
  while (1)
  {
    result = (uint64_t)OUTLINED_FUNCTION_58_7();
    if (v11)
      goto LABEL_23;
LABEL_24:
    v12 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_45;
    if (v12 >= v1)
      goto LABEL_43;
    if (!*(_QWORD *)(v9 + 8 * v12))
    {
      if (v10 + 2 >= v1)
        goto LABEL_43;
      if (!*(_QWORD *)(v9 + 8 * (v10 + 2)))
      {
        if (v10 + 3 >= v1)
          goto LABEL_43;
        if (!*(_QWORD *)(v9 + 8 * (v10 + 3)))
        {
          if (v10 + 4 >= v1)
            goto LABEL_43;
          if (!*(_QWORD *)(v9 + 8 * (v10 + 4)))
          {
            if (v10 + 5 >= v1)
              goto LABEL_43;
            if (!*(_QWORD *)(v9 + 8 * (v10 + 5)))
            {
              if (v10 + 6 >= v1)
                goto LABEL_43;
              if (!*(_QWORD *)(v9 + 8 * (v10 + 6)))
                break;
            }
          }
        }
      }
    }
LABEL_40:
    OUTLINED_FUNCTION_47_10();
  }
  v13 = v10 + 7;
  while (v13 < v1)
  {
    if (*(_QWORD *)(v9 + 8 * v13++))
      goto LABEL_40;
  }
LABEL_43:
  OUTLINED_FUNCTION_10_0();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  sub_1B254E678(v0 + 56, &qword_1ED36CFA0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_1B2553610()
{
  sub_1B2553390();
  return swift_deallocClassInstance();
}

void *sub_1B2553630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v18;
  uint64_t v19;

  swift_beginAccess();
  v7 = sub_1B254C6F8(a2, a3, a4);
  swift_endAccess();
  if (v7)
    sub_1B24C4564(v7);
  swift_beginAccess();
  v8 = (void *)sub_1B254C938(a2, a3, a4);
  swift_endAccess();
  objc_msgSend(v8, sel_invalidate);

  swift_beginAccess();
  sub_1B254C954(a2, a3, a4, v9, v10, v11, v12, v13, v18, v19);
  v15 = v14;
  swift_endAccess();

  swift_beginAccess();
  v16 = (void *)sub_1B254C9EC(a2, a3, a4);
  swift_endAccess();
  return sub_1B2557B44(v16);
}

uint64_t sub_1B255378C()
{
  uint64_t v0;
  void **v1;
  uint64_t v2;
  void *v3;
  void *v4;
  char v5;

  OUTLINED_FUNCTION_289();
  OUTLINED_FUNCTION_22_7();
  v0 = OUTLINED_FUNCTION_48_7();
  sub_1B2556888(v0, v1, v2, v3, v4, v5);
  return 0;
}

void sub_1B25537E8(void *a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;

  v9 = *(_QWORD *)(v4 + 144);
  OUTLINED_FUNCTION_289();
  OUTLINED_FUNCTION_22_7();
  sub_1B255698C(v9, v4, a2, a3, a4, a1);
  OUTLINED_FUNCTION_22_5();
}

void sub_1B2553848(void *a1, void *a2, char a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(_QWORD *)(v3 + 144);
  swift_retain();
  sub_1B24A1AF4(a1, a2, a3);
  sub_1B2556BB8(v7, v3, a1, a2, a3);
}

void sub_1B25538BC()
{
  id v0;
  void *v1;

  OUTLINED_FUNCTION_280();
  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v1 = (void *)sub_1B25CCA0C();
  OUTLINED_FUNCTION_10_0();
  objc_msgSend(v0, sel_initWithServiceName_, v1);

  OUTLINED_FUNCTION_262();
}

void sub_1B255391C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4;
  void *v5;

  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v5 = (void *)sub_1B25CCA0C();
  OUTLINED_FUNCTION_69();
  objc_msgSend(v4, sel_initWithMachServiceName_options_, v5, a3);

  OUTLINED_FUNCTION_262();
}

uint64_t sub_1B2553988()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v6;
  unsigned __int8 v7;
  uint64_t v8[5];

  OUTLINED_FUNCTION_280();
  swift_getObjectType();
  v8[3] = OUTLINED_FUNCTION_89_5();
  v8[4] = OUTLINED_FUNCTION_88_3();
  __swift_allocate_boxed_opaque_existential_0Tm(v8);
  sub_1B25CD2F4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CFB8);
  OUTLINED_FUNCTION_53();
  v3 = v1[16];
  OUTLINED_FUNCTION_90_6();
  sub_1B24A1AF4(v2, v6, v7);
  swift_unknownObjectRetain();
  v4 = sub_1B2556CF0(v3, v1, v2, v6, v7, (uint64_t)v2, v0);
  sub_1B24AB77C(v2, v6, v7);
  return v4;
}

uint64_t sub_1B2553ACC(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = OUTLINED_FUNCTION_289();
  v1(v2);
  return swift_release();
}

void sub_1B2553AF4(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  os_unfair_lock_s **v16;
  os_unfair_lock_s *v17;
  os_unfair_lock_s *v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char **__return_ptr, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void *v26;
  char v27;
  uint64_t v28;
  id v29;
  char *v32;
  void *v33;
  char v34;
  uint64_t v35[3];
  uint64_t v36;
  uint64_t v37;

  v11 = sub_1B25CCA18();
  v13 = v12;
  v14 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
  v15 = OUTLINED_FUNCTION_68_8(v11, v13, 4099);
  sub_1B24AD25C(a1 + 56, (uint64_t)v35, &qword_1ED36CFA0);
  if (v36)
  {
    v16 = (os_unfair_lock_s **)__swift_project_boxed_opaque_existential_1(v35, v36);
    v17 = *v16 + 4;
    v18 = *v16 + 6;
    os_unfair_lock_lock(v18);
    sub_1B2509884(v17, &v32);
    os_unfair_lock_unlock(v18);
    v19 = *((_QWORD *)v32 + 2);
    if (v19)
    {
      v20 = v32 + 40;
      do
      {
        v21 = (void (*)(char **__return_ptr, uint64_t))*((_QWORD *)v20 - 1);
        v22 = OUTLINED_FUNCTION_289();
        v21(&v32, v22);
        swift_release();
        if (v32)
        {
          swift_getObjectType();
          v23 = swift_unknownObjectRetain();
          OUTLINED_FUNCTION_61_8(v23, a4);
          swift_unknownObjectRelease();
          if (a5)
          {
            v24 = swift_unknownObjectRetain();
            OUTLINED_FUNCTION_61_8(v24, a6);
            swift_unknownObjectRelease();
          }
          swift_unknownObjectRelease();
        }
        v20 += 16;
        --v19;
      }
      while (v19);
    }
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v35);
  }
  else
  {
    sub_1B254E678((uint64_t)v35, &qword_1ED36CFA0);
  }
  swift_getObjectType();
  v32 = a3;
  v36 = OUTLINED_FUNCTION_89_5();
  v37 = OUTLINED_FUNCTION_88_3();
  __swift_allocate_boxed_opaque_existential_0Tm(v35);
  sub_1B25CD2F4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CFB8);
  OUTLINED_FUNCTION_53();
  v25 = v32;
  v26 = v33;
  v27 = v34;
  sub_1B2553848(v32, v33, v34);
  sub_1B24AB77C(v25, v26, v27);
  if (a7)
    v28 = a7();
  v29 = OUTLINED_FUNCTION_63_7(v28, sel_setInterruptionHandler_);
  OUTLINED_FUNCTION_63_7((uint64_t)v29, sel_setInvalidationHandler_);

}

id sub_1B2553D90()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  void *v15;
  void *v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void *);
  objc_class *v26;
  char *v27;
  uint64_t (**v28)(void *);
  id v29;
  id v30;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  void *v38;
  char v39;
  objc_super v40;
  uint64_t v41[5];

  v3 = v1;
  OUTLINED_FUNCTION_280();
  v4 = OUTLINED_FUNCTION_147();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78]();
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  v37 = v2;
  v41[3] = OUTLINED_FUNCTION_89_5();
  v41[4] = OUTLINED_FUNCTION_88_3();
  __swift_allocate_boxed_opaque_existential_0Tm(v41);
  sub_1B25CD2F4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CFB8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    if (qword_1ED36CF48 != -1)
      swift_once();
    v34 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED36D980);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v34, v4);
    swift_unknownObjectRetain_n();
    sub_1B24B3BAC();
  }
  v9 = v37;
  v8 = (uint64_t)v38;
  v10 = v39;
  if (v39 != 2)
  {
    v32 = v37;
    v33 = v38;
LABEL_11:
    sub_1B24AB77C(v32, v33, v10);
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_25_3();
  v11 = *(_QWORD *)(v1 + 104);
  OUTLINED_FUNCTION_20_9();
  v36 = v9;
  v12 = OUTLINED_FUNCTION_59_8();
  sub_1B25491CC(v12, v13, v14, v11);
  v16 = v15;
  OUTLINED_FUNCTION_5_9();
  if (!v16)
  {
    swift_endAccess();
    OUTLINED_FUNCTION_5_9();
    v32 = (void *)OUTLINED_FUNCTION_59_8();
    goto LABEL_11;
  }
  swift_endAccess();
  ObjectType = swift_getObjectType();
  OUTLINED_FUNCTION_25_3();
  if (*(_QWORD *)(*(_QWORD *)(v3 + 112) + 16)
    && (swift_bridgeObjectRetain(),
        v18 = OUTLINED_FUNCTION_59_8(),
        sub_1B24E1250(v18, v19, v20),
        v22 = v21,
        OUTLINED_FUNCTION_173(),
        (v22 & 1) != 0))
  {
    OUTLINED_FUNCTION_5_9();
  }
  else
  {
    v23 = OUTLINED_FUNCTION_8_4();
    swift_weakInit();
    v24 = OUTLINED_FUNCTION_8_4();
    *(_QWORD *)(v24 + 24) = v0;
    swift_unknownObjectWeakInit();
    v25 = (uint64_t (*)(void *))OUTLINED_FUNCTION_8_4();
    *((_QWORD *)v25 + 2) = v23;
    *((_QWORD *)v25 + 3) = v24;
    *((_QWORD *)v25 + 4) = ObjectType;
    *((_QWORD *)v25 + 5) = v0;
    v26 = (objc_class *)type metadata accessor for NSXPCActorSystem.ArgumentListenerDelegate();
    v27 = (char *)objc_allocWithZone(v26);
    v28 = (uint64_t (**)(void *))&v27[OBJC_IVAR____TtCC6Speech16NSXPCActorSystemP33_94CB77BB9A0C7D73CCFFEC4A056F3C0724ArgumentListenerDelegate_shouldAcceptNewConnectionToActor];
    *v28 = sub_1B2557868;
    v28[1] = v25;
    v40.receiver = v27;
    v40.super_class = v26;
    v29 = objc_msgSendSuper2(&v40, sel_init);
    OUTLINED_FUNCTION_25_3();
    OUTLINED_FUNCTION_20_9();
    v30 = v29;
    sub_1B256952C((uint64_t)v30, (uint64_t)v9, v8, 2);
    swift_endAccess();
    OUTLINED_FUNCTION_5_9();
    objc_msgSend(v16, sel_setDelegate_, v30);
    objc_msgSend(v16, sel_activate);
    OUTLINED_FUNCTION_5_9();

  }
  return v36;
}

uint64_t sub_1B25540F0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  __int128 v29;
  uint64_t v30;
  _QWORD v31[5];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v6 = result;
    sub_1B24AD25C(result + 56, (uint64_t)&v29, &qword_1ED36CFA0);
    if (v30)
    {
      sub_1B24AD190(&v29, (uint64_t)v31);
      swift_beginAccess();
      v7 = MEMORY[0x1B5E26380](a3 + 16);
      if (v7)
      {
        v8 = v7;
        v9 = *(_QWORD *)(a3 + 24);
        sub_1B24EACEC(v6 + 16, (uint64_t)&v29);
        v10 = objc_msgSend(a1, sel_endpoint);
        v11 = v10;
        v12 = objc_msgSend(a1, sel_remoteObjectInterface);
        v28 = v11;
        if (v12)
        {
          v13 = v12;
          __swift_project_boxed_opaque_existential_1(&v29, v30);
          v14 = sub_1B250955C(v6, (int)v10, 0, 3, v13);
          v23 = v14;
          if (v14)
          {
            v24 = v15;
            sub_1B25537E8(a1, v10, 0, 3);

LABEL_18:
            v25 = (void *)sub_1B2553988();
            v27 = v26;
            objc_msgSend(a1, sel_setExportedInterface_, v25);
            objc_msgSend(a1, sel_setExportedObject_, v27);
            sub_1B255464C(a1, v8, v9, v23, v24);
            __swift_project_boxed_opaque_existential_1(v31, v31[3]);
            sub_1B2509710(v6, a1);
            swift_release();
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();

            swift_unknownObjectRelease();
            __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v29);
            __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v31);
            return 1;
          }

        }
        else
        {
          v23 = 0;
        }
        v24 = 0;
        goto LABEL_18;
      }
      if (qword_1ED36CF48 != -1)
        swift_once();
      v16 = sub_1B25CC8C8();
      __swift_project_value_buffer(v16, (uint64_t)qword_1ED36D980);
      v17 = sub_1B25CC8B0();
      v18 = sub_1B25CCFF4();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc();
        v20 = swift_slowAlloc();
        *(_QWORD *)&v29 = v20;
        *(_DWORD *)v19 = 136315138;
        v21 = sub_1B25CD738();
        sub_1B2504AB0(v21, v22, (uint64_t *)&v29);
        sub_1B25CD12C();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1B2494000, v17, v18, "Remote connection attempt to argument of type %s refused because argument was deallocated", v19, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1B5E262B4](v20, -1, -1);
        MEMORY[0x1B5E262B4](v19, -1, -1);
        swift_release();

      }
      else
      {

        swift_release();
      }
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v31);
    }
    else
    {
      swift_release();
      sub_1B254E678((uint64_t)&v29, &qword_1ED36CFA0);
    }
    return 0;
  }
  return result;
}

id sub_1B255464C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v12)();
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t (*v18)();
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  id v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  void *v27;
  uint64_t (*v28)();
  _QWORD *v29;

  v6 = v5;
  v12 = (uint64_t (*)())objc_msgSend(a1, sel_interruptionHandler);
  if (v12)
  {
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = v12;
    v12 = sub_1B2557F24;
  }
  else
  {
    v13 = 0;
  }
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v6;
  v14[3] = a1;
  v14[4] = a4;
  v14[5] = a5;
  v14[6] = a2;
  v14[7] = a3;
  v14[8] = v12;
  v14[9] = v13;
  v28 = sub_1B2557878;
  v29 = v14;
  v15 = MEMORY[0x1E0C809B0];
  v24 = MEMORY[0x1E0C809B0];
  v25 = 1107296256;
  v26 = sub_1B2553ACC;
  v27 = &block_descriptor_5;
  v16 = _Block_copy(&v24);
  swift_unknownObjectRetain();
  swift_retain();
  v17 = a1;
  swift_unknownObjectRetain();
  swift_release();
  objc_msgSend(v17, sel_setInterruptionHandler_, v16);
  _Block_release(v16);
  v18 = (uint64_t (*)())objc_msgSend(v17, sel_invalidationHandler);
  if (v18)
  {
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = v18;
    v18 = sub_1B25578C0;
  }
  else
  {
    v19 = 0;
  }
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = v6;
  v20[3] = v17;
  v20[4] = a4;
  v20[5] = a5;
  v20[6] = a2;
  v20[7] = a3;
  v20[8] = v18;
  v20[9] = v19;
  v28 = sub_1B2557898;
  v29 = v20;
  v24 = v15;
  v25 = 1107296256;
  v26 = sub_1B2553ACC;
  v27 = &block_descriptor_46;
  v21 = _Block_copy(&v24);
  swift_retain();
  v22 = v17;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_release();
  objc_msgSend(v22, sel_setInvalidationHandler_, v21);
  _Block_release(v21);
  return objc_msgSend(v22, sel_activate);
}

void sub_1B2554898(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  _BYTE v15[24];
  uint64_t v16;

  v10 = sub_1B25CCA18();
  v12 = v11;
  v13 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
  v14 = OUTLINED_FUNCTION_68_8(v10, v12, 4097);
  sub_1B24AD25C(a1 + 56, (uint64_t)v15, &qword_1ED36CFA0);
  if (v16)
    objc_msgSend(a2, sel_invalidate);
  sub_1B254E678((uint64_t)v15, &qword_1ED36CFA0);
  if (a7)
    a7();

  OUTLINED_FUNCTION_40_5();
}

void sub_1B2554950(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(_QWORD))
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  os_unfair_lock_s **v17;
  os_unfair_lock_s *v18;
  os_unfair_lock_s *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t *__return_ptr, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  void (*v26)(uint64_t, uint64_t, id, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(_QWORD);
  void *v32;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[3];
  uint64_t v37;

  v12 = sub_1B25CCA18();
  v14 = v13;
  v15 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
  v16 = sub_1B2557204(v12, v14, 4099, 0);
  sub_1B24AD25C(a1 + 56, (uint64_t)v36, &qword_1ED36CFA0);
  if (!v37)
  {
    sub_1B254E678((uint64_t)v36, &qword_1ED36CFA0);
    if (!a7)
      goto LABEL_12;
    goto LABEL_11;
  }
  v31 = a7;
  v32 = a2;
  v17 = (os_unfair_lock_s **)__swift_project_boxed_opaque_existential_1(v36, v37);
  v18 = *v17 + 4;
  v19 = *v17 + 6;
  os_unfair_lock_lock(v19);
  sub_1B2509884(v18, &v34);
  os_unfair_lock_unlock(v19);
  v20 = *(_QWORD *)(v34 + 16);
  if (v20)
  {
    v21 = v34 + 40;
    do
    {
      v22 = *(void (**)(uint64_t *__return_ptr, uint64_t))(v21 - 8);
      v23 = swift_retain();
      v22(&v34, v23);
      swift_release();
      if (v34)
      {
        v24 = v35;
        if (a3)
        {
          ObjectType = swift_getObjectType();
          v26 = *(void (**)(uint64_t, uint64_t, id, uint64_t, uint64_t))(v24 + 8);
          v27 = swift_unknownObjectRetain();
          v26(v27, a4, v16, ObjectType, v24);
          swift_unknownObjectRelease();
        }
        else
        {
          v26 = *(void (**)(uint64_t, uint64_t, id, uint64_t, uint64_t))(v35 + 8);
        }
        v28 = swift_getObjectType();
        v29 = swift_unknownObjectRetain();
        v26(v29, a6, v16, v28, v24);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
      }
      v21 += 16;
      --v20;
    }
    while (v20);
  }
  swift_bridgeObjectRelease();
  v30 = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v36);
  a7 = v31;
  a2 = v32;
  if (v31)
LABEL_11:
    a7(v30);
LABEL_12:
  objc_msgSend(a2, sel_setInterruptionHandler_, 0);
  objc_msgSend(a2, sel_setInvalidationHandler_, 0);

}

void sub_1B2554B70()
{
  void *v0;
  void *v1;
  id v2;
  _BYTE *v3;

  OUTLINED_FUNCTION_326_0();
  v1 = v0;
  swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78]();
  swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78]();
  if (v1)
  {
    v2 = v1;
    OUTLINED_FUNCTION_53();
    OUTLINED_FUNCTION_289();
    OUTLINED_FUNCTION_53();
    sub_1B25CC784();

    OUTLINED_FUNCTION_46_6();
    OUTLINED_FUNCTION_4_11();
  }
  else
  {
    sub_1B24AD200();
    OUTLINED_FUNCTION_172();
    *v3 = 0;
    swift_willThrow();
  }
  OUTLINED_FUNCTION_49_4();
}

void sub_1B2554D1C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void (*v7)(uint64_t, uint64_t);
  id v8;
  id v9;

  if (a2)
  {
    v7 = *(void (**)(uint64_t, uint64_t))(a4 + 32);
    v8 = a2;
    v7(a3, a4);
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    v9 = v8;
    sub_1B2554B70();

    if (!v4)
      OUTLINED_FUNCTION_53();
  }
  else
  {
    sub_1B25CD57C();
  }
}

uint64_t sub_1B2554E4C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v12;
  _BYTE v13[32];

  v6 = sub_1B25CD108();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = &v13[-v9];
  sub_1B24AD25C(a1, (uint64_t)v13, &qword_1ED36D068);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36D068);
  if ((swift_dynamicCast() & 1) != 0)
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, a2);
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, v10, a2);
  }
  else
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, a2);
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v10, v6);
    sub_1B24AD200();
    swift_allocError();
    *v12 = 1;
    return swift_willThrow();
  }
}

void sub_1B2554F90(_QWORD *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, _QWORD *a6@<X8>)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;

  v31 = a5;
  v12 = sub_1B25CC8C8();
  v26 = *(_QWORD *)(v12 - 8);
  v27 = v12;
  MEMORY[0x1E0C80A78]();
  v28 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v14 = a1[15];
  if (!*(_QWORD *)(v14 + 16))
  {
LABEL_5:
    v29 = a6;
    v30 = v6;
    swift_endAccess();
    __swift_project_boxed_opaque_existential_1(a1 + 2, a1[5]);
    sub_1B25094B0();
    if (v21)
    {
      v22 = v21;
      __swift_project_boxed_opaque_existential_1(a1 + 2, a1[5]);
      v23 = sub_1B25093E8();
      if (v23)
      {
        v19 = (uint64_t)v23;
        swift_beginAccess();
        sub_1B24A1AF4(a2, a3, a4);
        v20 = v22;
        swift_unknownObjectRetain();
        sub_1B256958C((uint64_t)v20, v19, (uint64_t)a2, (uint64_t)a3, a4);
        swift_endAccess();
        a6 = v29;
        goto LABEL_8;
      }

    }
    if (qword_1ED36CF48 != -1)
      swift_once();
    v24 = v27;
    v25 = __swift_project_value_buffer(v27, (uint64_t)qword_1ED36D980);
    (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v28, v25, v24);
    swift_unknownObjectRetain_n();
    sub_1B24B3CDC();
  }
  sub_1B24A1AF4(a2, a3, a4);
  sub_1B24E1250((uint64_t)a2, (uint64_t)a3, a4);
  if ((v16 & 1) == 0)
  {
    sub_1B24AB77C(a2, a3, a4);
    goto LABEL_5;
  }
  v17 = *(_QWORD *)(v14 + 56) + 16 * v15;
  v18 = *(void **)v17;
  v19 = *(_QWORD *)(v17 + 8);
  swift_endAccess();
  v20 = v18;
  swift_unknownObjectRetain();
LABEL_8:
  sub_1B24AB77C(a2, a3, a4);
  *a6 = v20;
  a6[1] = v19;
}

uint64_t sub_1B2555214(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v2
                                            + OBJC_IVAR____TtCC6Speech16NSXPCActorSystemP33_94CB77BB9A0C7D73CCFFEC4A056F3C0724ArgumentListenerDelegate_shouldAcceptNewConnectionToActor))(a2) & 1;
}

void sub_1B25552A8()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_1B25552F4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NSXPCActorSystem.ArgumentListenerDelegate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1B255533C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B255534C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = dynamic_cast_existential_1_unconditional(v0[3]);
  v3 = v2;
  v4 = (_QWORD *)swift_task_alloc();
  v0[4] = (uint64_t)v4;
  *v4 = v0;
  v4[1] = sub_1B24CA7C0;
  return sub_1B25572B0(v1, v0[2], v1, v3);
}

BOOL sub_1B25553BC(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_1B25553CC()
{
  return sub_1B25CD6B4();
}

uint64_t sub_1B25553F0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v8;

  v2 = a1 == 0x65636976726573 && a2 == 0xE700000000000000;
  if (v2 || (OUTLINED_FUNCTION_9_9() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x767265536863616DLL && a2 == 0xEB00000000656369;
    if (v6 || (OUTLINED_FUNCTION_9_9() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x726F746361 && a2 == 0xE500000000000000;
      if (v7 || (OUTLINED_FUNCTION_9_9() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000010 && a2 == 0x80000001B25D4E60)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = OUTLINED_FUNCTION_9_9();
        OUTLINED_FUNCTION_10_0();
        if ((v8 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_1B2555578()
{
  OUTLINED_FUNCTION_4();
  sub_1B25CD6B4();
  return OUTLINED_FUNCTION_2();
}

uint64_t sub_1B25555B0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B25555E4 + 4 * byte_1B25DE684[a1]))(0x65636976726573, 0xE700000000000000);
}

uint64_t sub_1B25555E4()
{
  return 0x767265536863616DLL;
}

uint64_t sub_1B2555604()
{
  return 0x726F746361;
}

unint64_t sub_1B2555618()
{
  return 0xD000000000000010;
}

void sub_1B2555634()
{
  sub_1B255232C();
}

id sub_1B2555664@<X0>(uint64_t a1@<X8>)
{
  id result;

  result = sub_1B2552014();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 2;
  return result;
}

void sub_1B2555694()
{
  sub_1B255216C();
}

uint64_t sub_1B25556B4(uint64_t a1)
{
  return sub_1B2552328(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16));
}

uint64_t sub_1B25556E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v14;
  uint64_t v15;

  swift_conformsToProtocol();
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v14;
  *v14 = v8;
  v14[1] = sub_1B249C4EC;
  return sub_1B25510B0(a1, a2, a3, a4, v15, a6, a7, a8);
}

uint64_t sub_1B255579C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v13;
  *v13 = v7;
  v13[1] = sub_1B24AE11C;
  return sub_1B25512F0(a1, a2, a3, v14, a5, v15, a7);
}

uint64_t sub_1B2555820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1B24AE11C;
  return sub_1B255533C(a2, a3);
}

uint64_t sub_1B2555874()
{
  return sub_1B2555578();
}

uint64_t sub_1B255587C()
{
  return sub_1B25553CC();
}

uint64_t sub_1B2555884()
{
  unsigned __int8 *v0;

  return sub_1B25555B0(*v0);
}

uint64_t sub_1B255588C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B25553F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B25558B0()
{
  return 0;
}

void sub_1B25558BC(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1B25558C8()
{
  sub_1B2557B70();
  return sub_1B25CD720();
}

uint64_t sub_1B25558F0()
{
  sub_1B2557B70();
  return sub_1B25CD72C();
}

void sub_1B2555918()
{
  char v0;
  char v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_326_0();
  v1 = v0;
  v3 = v2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDA388);
  MEMORY[0x1E0C80A78](v4, v5);
  OUTLINED_FUNCTION_229();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1B2557B70();
  sub_1B25CD708();
  __asm { BR              X10 }
}

uint64_t sub_1B25559D4()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 104) = 0;
  sub_1B25CD528();
  return OUTLINED_FUNCTION_17_9();
}

_QWORD *sub_1B2555BFC()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_326_0();
  v3 = v2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDA368);
  MEMORY[0x1E0C80A78](v4, v5);
  OUTLINED_FUNCTION_229();
  v6 = __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1B2557B70();
  sub_1B25CD6FC();
  if (!v0)
  {
    v7 = sub_1B25CD51C();
    if (*(_QWORD *)(v7 + 16))
    {
      v8 = *(unsigned __int8 *)(v7 + 32);
      swift_bridgeObjectRelease();
      __asm { BR              X9 }
    }
    swift_bridgeObjectRelease();
    v9 = sub_1B25CD33C();
    OUTLINED_FUNCTION_172();
    v11 = v10;
    v6 = v1;
    sub_1B25CD4EC();
    sub_1B25CD330();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v11, *MEMORY[0x1E0DEC458], v9);
    swift_willThrow();
    OUTLINED_FUNCTION_4_11();
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v3);
  return v6;
}

void sub_1B2555EC4()
{
  OUTLINED_FUNCTION_280();
  __asm { BR              X10 }
}

uint64_t sub_1B2555F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a6)
    return 0;
  if (v7 == v9 && v6 == v8)
    return 1;
  else
    return sub_1B25CD5D0();
}

void sub_1B2556014(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __asm { BR              X10 }
}

uint64_t sub_1B255604C()
{
  sub_1B25CD6B4();
  return sub_1B25CCAB4();
}

void sub_1B25560B4(uint64_t a1, uint64_t a2, char a3)
{
  OUTLINED_FUNCTION_280();
  OUTLINED_FUNCTION_4();
  __asm { BR              X10 }
}

void sub_1B25560F0()
{
  sub_1B25CD6B4();
  OUTLINED_FUNCTION_54_7();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_286_2();
}

void sub_1B2556144()
{
  sub_1B2555EC4();
}

void sub_1B2556160()
{
  uint64_t v0;

  sub_1B25560B4(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

void sub_1B255616C(uint64_t a1)
{
  uint64_t v1;

  sub_1B2556014(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16));
}

void sub_1B2556178()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1B25CD6A8();
  __asm { BR              X9 }
}

void sub_1B25561B4()
{
  sub_1B25CD6B4();
  OUTLINED_FUNCTION_54_7();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_286_2();
}

_QWORD *sub_1B2556208@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *result;
  uint64_t v4;
  char v5;

  result = sub_1B2555BFC();
  if (!v1)
  {
    *(_QWORD *)a1 = result;
    *(_QWORD *)(a1 + 8) = v4;
    *(_BYTE *)(a1 + 16) = v5;
  }
  return result;
}

void sub_1B2556234()
{
  sub_1B2555918();
}

void sub_1B2556250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v0 = OUTLINED_FUNCTION_147();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0, v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED36CF48 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED36D980);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v4, v5, v0);
  sub_1B24B3DB4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/SpeechFramework/EAR-XPC/NSXPCActorSystem.swift", 84, 2, 553, (uint64_t)v4);
}

void sub_1B25562FC()
{
  sub_1B2556250();
}

double sub_1B2556308(uint64_t a1, uint64_t a2)
{
  double result;

  swift_conformsToProtocol();
  *(_QWORD *)&result = sub_1B2550F44(a1, a2).n128_u64[0];
  return result;
}

uint64_t sub_1B2556354()
{
  swift_conformsToProtocol();
  return sub_1B2551080();
}

uint64_t sub_1B2556390()
{
  swift_conformsToProtocol();
  return sub_1B2550EE0();
}

uint64_t sub_1B25563D8()
{
  uint64_t v0;

  swift_conformsToProtocol();
  return sub_1B24E8B40(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B2556418()
{
  uint64_t v0;
  _QWORD *v1;

  swift_conformsToProtocol();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1B24AE11C;
  return sub_1B25563D8();
}

uint64_t sub_1B2556474()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1B24AE11C;
  return j__OUTLINED_FUNCTION_190_0(v1);
}

uint64_t sub_1B25564B8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1B24AE11C;
  return j__OUTLINED_FUNCTION_190_0(v1);
}

void sub_1B2556508()
{
  void *v0;
  void *v1;
  unsigned __int8 v2;

  OUTLINED_FUNCTION_280();
  sub_1B25CC778();
  sub_1B25CD2F4();
  sub_1B2551F58(v0, v1, v2);
  swift_release();
  sub_1B24AB77C(v0, v1, v2);
  OUTLINED_FUNCTION_40_5();
}

uint64_t sub_1B2556584()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v1 = v0;
  v2 = sub_1B25718EC(*(_QWORD *)(v0 + 16));
  v4 = v3;
  if (qword_1ED36CF48 != -1)
    swift_once();
  v5 = OUTLINED_FUNCTION_147();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED36D980);
  swift_retain_n();
  swift_bridgeObjectRetain();
  v6 = sub_1B25CC8B0();
  v7 = sub_1B25CCFC4();
  if (os_log_type_enabled(v6, v7))
  {
    v12 = v2;
    v8 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    *(_DWORD *)v8 = 136446466;
    swift_getObjectType();
    v9 = sub_1B25CD738();
    sub_1B2504AB0(v9, v10, &v13);
    sub_1B25CD12C();
    OUTLINED_FUNCTION_255();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2082;
    swift_bridgeObjectRetain();
    sub_1B2504AB0(v12, v4, &v13);
    sub_1B25CD12C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1B2494000, v6, v7, "Invalidate and deinit %{public}s %{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_174();
  }

  swift_bridgeObjectRelease_n();
  OUTLINED_FUNCTION_255();
  sub_1B2556508();
  swift_unknownObjectRelease();
  return v1;
}

uint64_t sub_1B25567AC()
{
  sub_1B2556584();
  OUTLINED_FUNCTION_223_0();
  return swift_deallocClassInstance();
}

uint64_t sub_1B25567C4(uint64_t a1, uint64_t a2)
{
  return nullsub_1(*(_QWORD *)(a1 + 16), *(_QWORD *)(a2 - 8));
}

uint64_t sub_1B25567D0(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1B5E261DC](MEMORY[0x1E0DEE9A8]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for NSXPCActorSystem()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for NSXPCActorSystem.ArgumentListenerDelegate()
{
  return objc_opt_self();
}

uint64_t sub_1B255683C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for InvalidatingRemoteActor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for InvalidatingRemoteActor);
}

void sub_1B2556888(uint64_t a1, void **a2, uint64_t a3, void *a4, void *a5, char a6)
{
  os_unfair_lock_s *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  void *v16;
  id v17;
  void *v18;

  v11 = *(os_unfair_lock_s **)(a1 + 16);
  os_unfair_lock_lock(v11);
  swift_beginAccess();
  v12 = *(_QWORD *)(a3 + 136);
  v13 = *(_QWORD *)(v12 + 16);
  sub_1B24A1AF4(a4, a5, a6);
  if (v13 && (sub_1B24E1250((uint64_t)a4, (uint64_t)a5, a6), (v15 & 1) != 0))
  {
    v16 = *(void **)(*(_QWORD *)(v12 + 56) + 8 * v14);
    v17 = v16;
  }
  else
  {
    v16 = 0;
  }
  swift_endAccess();
  sub_1B24AB77C(a4, a5, a6);
  v18 = *a2;
  *a2 = v16;

  os_unfair_lock_unlock(v11);
  swift_release();
  sub_1B24AB77C(a4, a5, a6);
}

void sub_1B255698C(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void *a6)
{
  os_unfair_lock_s *v10;
  id v11;

  v10 = *(os_unfair_lock_s **)(a1 + 16);
  os_unfair_lock_lock(v10);
  swift_beginAccess();
  sub_1B24A1AF4(a3, a4, a5);
  v11 = a6;
  sub_1B2569538((uint64_t)v11, (uint64_t)a3, (uint64_t)a4, a5);
  swift_endAccess();
  sub_1B24AB77C(a3, a4, a5);
  os_unfair_lock_unlock(v10);
  swift_release();
  sub_1B24AB77C(a3, a4, a5);

}

void sub_1B2556A74(uint64_t a1, _OWORD *a2, uint64_t a3, void *a4, void *a5, char a6)
{
  os_unfair_lock_s *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  void (*v15)(__int128 *__return_ptr, uint64_t);
  uint64_t v16;
  __int128 v17;
  __int128 v18;

  v11 = *(os_unfair_lock_s **)(a1 + 16);
  os_unfair_lock_lock(v11);
  swift_beginAccess();
  v12 = *(_QWORD *)(a3 + 96);
  if (!*(_QWORD *)(v12 + 16))
    goto LABEL_5;
  sub_1B24A1AF4(a4, a5, a6);
  sub_1B24E1250((uint64_t)a4, (uint64_t)a5, a6);
  if ((v14 & 1) == 0)
  {
    sub_1B24AB77C(a4, a5, a6);
LABEL_5:
    swift_endAccess();
    v17 = 0uLL;
    goto LABEL_6;
  }
  v15 = *(void (**)(__int128 *__return_ptr, uint64_t))(*(_QWORD *)(v12 + 56) + 16 * v13);
  swift_retain();
  swift_endAccess();
  sub_1B24AB77C(a4, a5, a6);
  v16 = swift_retain();
  v15(&v18, v16);
  swift_release_n();
  v17 = v18;
LABEL_6:
  *a2 = v17;
  swift_unknownObjectRelease();
  os_unfair_lock_unlock(v11);
  swift_release();
  sub_1B24AB77C(a4, a5, a6);
}

void sub_1B2556BB8(uint64_t a1, uint64_t a2, void *a3, void *a4, char a5)
{
  os_unfair_lock_s *v8;
  void *v9;

  v8 = *(os_unfair_lock_s **)(a1 + 16);
  os_unfair_lock_lock(v8);
  swift_beginAccess();
  sub_1B24A1AF4(a3, a4, a5);
  v9 = (void *)sub_1B254CA6C((uint64_t)a3, (uint64_t)a4, a5);
  swift_endAccess();
  sub_1B24AB77C(a3, a4, a5);

  os_unfair_lock_unlock(v8);
  swift_release();
  sub_1B24AB77C(a3, a4, a5);
}

void sub_1B2556C8C(void (*a1)(void))
{
  uint64_t v1;
  os_unfair_lock_s *v3;

  v3 = *(os_unfair_lock_s **)(v1 + 16);
  os_unfair_lock_lock(v3);
  a1();
  os_unfair_lock_unlock(v3);
}

uint64_t sub_1B2556CF0(uint64_t a1, _QWORD *a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  os_unfair_lock_s *v13;
  uint64_t v15;

  v13 = *(os_unfair_lock_s **)(a1 + 16);
  os_unfair_lock_lock(v13);
  sub_1B2554F90(a2, a3, a4, a5, a7, &v15);
  os_unfair_lock_unlock(v13);
  swift_release();
  if (!v7)
    a7 = v15;
  sub_1B24AB77C(a3, a4, a5);
  swift_unknownObjectRelease();
  return a7;
}

BOOL sub_1B2556DD0(uint64_t a1, uint64_t a2, void *a3, void *a4, char a5)
{
  os_unfair_lock_s *v8;
  void *v9;

  v8 = *(os_unfair_lock_s **)(a1 + 16);
  os_unfair_lock_lock(v8);
  swift_beginAccess();
  v9 = (void *)sub_1B254CA6C((uint64_t)a3, (uint64_t)a4, a5);
  swift_endAccess();
  if (v9)
  {
    objc_msgSend(v9, sel_invalidate);

  }
  os_unfair_lock_unlock(v8);
  swift_release();
  sub_1B24AB77C(a3, a4, a5);
  return v9 == 0;
}

uint64_t sub_1B2556EA4()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for _Lock()
{
  return objc_opt_self();
}

void sub_1B2556ED8(uint64_t a1)
{
  sub_1B24AB77C(*(void **)a1, *(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_1B2556EE8(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1B24A1AF4(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  OUTLINED_FUNCTION_262();
}

uint64_t sub_1B2556F28(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;
  void *v6;
  void *v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1B24A1AF4(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1B24AB77C(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t sub_1B2556F90(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1B24AB77C(v4, v5, v6);
  return a1;
}

uint64_t sub_1B2556FD4(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 3)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1B2557014(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1B2557058(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1B2557060(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

void type metadata accessor for NSXPCActorID()
{
  OUTLINED_FUNCTION_239_0();
}

unint64_t sub_1B2557078()
{
  unint64_t result;

  result = qword_1ED36CF90;
  if (!qword_1ED36CF90)
  {
    result = MEMORY[0x1B5E261DC](&unk_1B25DEAA4, &unk_1E647D750);
    atomic_store(result, (unint64_t *)&qword_1ED36CF90);
  }
  return result;
}

unint64_t sub_1B25570B8()
{
  unint64_t result;

  result = qword_1EEFDA2A0;
  if (!qword_1EEFDA2A0)
  {
    result = MEMORY[0x1B5E261DC](&unk_1B25DEC04, &unk_1E647EB20);
    atomic_store(result, (unint64_t *)&qword_1EEFDA2A0);
  }
  return result;
}

unint64_t sub_1B25570F8()
{
  unint64_t result;

  result = qword_1EEFDA2A8;
  if (!qword_1EEFDA2A8)
  {
    result = MEMORY[0x1B5E261DC](&unk_1B25DEBB4, &unk_1E647EB40);
    atomic_store(result, (unint64_t *)&qword_1EEFDA2A8);
  }
  return result;
}

unint64_t sub_1B2557138()
{
  unint64_t result;

  result = qword_1EEFDA2B0[0];
  if (!qword_1EEFDA2B0[0])
  {
    result = MEMORY[0x1B5E261DC](&unk_1B25DEB74, &unk_1E647E5F8);
    atomic_store(result, qword_1EEFDA2B0);
  }
  return result;
}

id *sub_1B2557174(id *a1)
{

  return a1;
}

uint64_t sub_1B255719C()
{
  uint64_t *v0;

  return sub_1B25521B8(v0[4], v0[5], v0[2], v0[3]);
}

uint64_t sub_1B25571B8()
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_223_0();
  return swift_deallocObject();
}

uint64_t sub_1B25571D4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B25571F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1B25522CC(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 24), a1);
}

id sub_1B2557204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v7;
  void *v8;
  id v9;

  v7 = (void *)sub_1B25CCA0C();
  swift_bridgeObjectRelease();
  if (a4)
  {
    v8 = (void *)sub_1B25CC8EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  v9 = objc_msgSend(v4, sel_initWithDomain_code_userInfo_, v7, a3, v8);

  return v9;
}

uint64_t sub_1B25572B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = *(_QWORD *)(a3 - 8);
  v4[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1B2557308()
{
  uint64_t v0;
  _QWORD *v1;

  sub_1B25CCB80();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v1;
  *v1 = v0;
  v1[1] = sub_1B2557364;
  return sub_1B25563D8();
}

uint64_t sub_1B2557364()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_188_1();
  *(_QWORD *)(v1 + 72) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B25573B0()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_44_6();
  OUTLINED_FUNCTION_36();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_66();
  return OUTLINED_FUNCTION_21(v0);
}

uint64_t sub_1B25573D8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_44_6();
  OUTLINED_FUNCTION_36();
  return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1B2557404()
{
  uint64_t v0;

  sub_1B25520CC(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(unsigned __int8 *)(v0 + 40), *(void **)(v0 + 48));
}

void sub_1B2557428(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = sub_1B25CC8C8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 40));
  sub_1B24ACFA4();
  if (!v8)
  {
    if (qword_1ED36CF48 != -1)
      swift_once();
    v9 = __swift_project_value_buffer(v3, (uint64_t)qword_1ED36D980);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v9, v3);
    swift_unknownObjectRetain_n();
    sub_1B24B3ED4();
  }
}

id sub_1B255754C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v13;
  id v14;
  uint64_t v15;
  uint64_t (*v16)();
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t (*v21)();
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  id v25;
  uint64_t aBlock;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  void *v30;
  uint64_t (*v31)();
  _QWORD *v32;

  v13 = objc_msgSend(a1, sel_interruptionHandler);
  if (v13)
  {
    v14 = v13;
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = v14;
    v16 = sub_1B2557F24;
  }
  else
  {
    v16 = 0;
    v15 = 0;
  }
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a5;
  v17[3] = a1;
  v17[4] = a2;
  v17[5] = a7;
  v17[6] = a3;
  v17[7] = a4;
  v17[8] = v16;
  v17[9] = v15;
  v31 = sub_1B2557878;
  v32 = v17;
  v18 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v28 = 1107296256;
  v29 = sub_1B2553ACC;
  v30 = &block_descriptor_59;
  v19 = _Block_copy(&aBlock);
  swift_unknownObjectRetain();
  swift_retain();
  v20 = a1;
  swift_unknownObjectRetain();
  swift_release();
  objc_msgSend(v20, sel_setInterruptionHandler_, v19);
  _Block_release(v19);
  v21 = (uint64_t (*)())objc_msgSend(v20, sel_invalidationHandler);
  if (v21)
  {
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = v21;
    v21 = sub_1B2557F24;
  }
  else
  {
    v22 = 0;
  }
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = a5;
  v23[3] = v20;
  v23[4] = a2;
  v23[5] = a7;
  v23[6] = a3;
  v23[7] = a4;
  v23[8] = v21;
  v23[9] = v22;
  v31 = sub_1B24AD250;
  v32 = v23;
  aBlock = v18;
  v28 = 1107296256;
  v29 = sub_1B2553ACC;
  v30 = &block_descriptor_65_0;
  v24 = _Block_copy(&aBlock);
  swift_retain();
  v25 = v20;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_release();
  objc_msgSend(v25, sel_setInvalidationHandler_, v24);
  _Block_release(v24);
  sub_1B24AD25C(a5 + 56, (uint64_t)&aBlock, &qword_1ED36CFA0);
  if (v30)
  {
    __swift_project_boxed_opaque_existential_1(&aBlock, (uint64_t)v30);
    sub_1B2509B60(a5, v25);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&aBlock);
  }
  else
  {
    sub_1B254E678((uint64_t)&aBlock, &qword_1ED36CFA0);
  }
  return objc_msgSend(v25, sel_activate);
}

uint64_t sub_1B25577FC()
{
  swift_weakDestroy();
  OUTLINED_FUNCTION_223_0();
  return swift_deallocObject();
}

uint64_t sub_1B2557818()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B255783C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B2557868(void *a1)
{
  uint64_t v1;

  return sub_1B25540F0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_1B2557898()
{
  return sub_1B24ADD10((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B2554950);
}

uint64_t sub_1B25578A4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  OUTLINED_FUNCTION_223_0();
  return swift_deallocObject();
}

uint64_t sub_1B25578C0()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_49_7(*(_QWORD *)(v0 + 16));
}

void sub_1B25578CC()
{
  uint64_t v0;

  sub_1B2554898(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(void (**)(void))(v0 + 64));
}

uint64_t sub_1B25578F4(uint64_t a1)
{
  uint64_t v1;

  return sub_1B25527D0(a1, *(void **)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_1B2557934()
{
  uint64_t v0;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED36D060);
  v1 = OUTLINED_FUNCTION_80_8();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1B25579AC()
{
  void *v0;

  OUTLINED_FUNCTION_84_6();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED36D060);
  OUTLINED_FUNCTION_81_4();
  return sub_1B2552BFC(v0);
}

uint64_t sub_1B2557A2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED36D060);
  v1 = OUTLINED_FUNCTION_80_8();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_1B2557AB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_84_6();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED36D060);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_81_4() - 8) + 80);
  sub_1B2552E6C(v0, *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), v1 + ((v5 + 80) & ~v5), v2, v3, v4);
}

void *sub_1B2557B44(void *result)
{
  if (result)
  {

    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

unint64_t sub_1B2557B70()
{
  unint64_t result;

  result = qword_1EEFDA370;
  if (!qword_1EEFDA370)
  {
    result = MEMORY[0x1B5E261DC](&unk_1B25DEDAC, &unk_1E647D6C0);
    atomic_store(result, (unint64_t *)&qword_1EEFDA370);
  }
  return result;
}

unint64_t sub_1B2557BAC()
{
  unint64_t result;

  result = qword_1EEFDA378;
  if (!qword_1EEFDA378)
  {
    result = MEMORY[0x1B5E261DC](MEMORY[0x1E0CB0378], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1EEFDA378);
  }
  return result;
}

unint64_t sub_1B2557BE8()
{
  unint64_t result;

  result = qword_1EEFDA398;
  if (!qword_1EEFDA398)
  {
    result = MEMORY[0x1B5E261DC](MEMORY[0x1E0CB0350], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1EEFDA398);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CommandRecognizer.Argument.Presence(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 3) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v5 = v6 - 4;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_1B2557CAC(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1B2557CF8 + 4 * byte_1B25DE6A5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1B2557D2C + 4 * byte_1B25DE6A0[v4]))();
}

uint64_t sub_1B2557D2C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B2557D34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B2557D3CLL);
  return result;
}

uint64_t sub_1B2557D48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B2557D50);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1B2557D54(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B2557D5C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for NSXPCActorID.CodingKeys()
{
  OUTLINED_FUNCTION_239_0();
}

uint64_t sub_1B2557D74(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B2557DC0 + 4 * byte_1B25DE6AF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B2557DF4 + 4 * byte_1B25DE6AA[v4]))();
}

uint64_t sub_1B2557DF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B2557DFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B2557E04);
  return result;
}

uint64_t sub_1B2557E10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B2557E18);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B2557E1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B2557E24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for NSXPCActorError()
{
  OUTLINED_FUNCTION_239_0();
}

void type metadata accessor for NSXPCActorResultHandler()
{
  OUTLINED_FUNCTION_239_0();
}

void type metadata accessor for NSXPCActorInvocationEncoder()
{
  OUTLINED_FUNCTION_239_0();
}

void type metadata accessor for NSXPCActorInvocationDecoder()
{
  OUTLINED_FUNCTION_239_0();
}

unint64_t sub_1B2557E68()
{
  unint64_t result;

  result = qword_1EEFDA3D8;
  if (!qword_1EEFDA3D8)
  {
    result = MEMORY[0x1B5E261DC](&unk_1B25DED84, &unk_1E647D6C0);
    atomic_store(result, (unint64_t *)&qword_1EEFDA3D8);
  }
  return result;
}

unint64_t sub_1B2557EA8()
{
  unint64_t result;

  result = qword_1EEFDA3E0;
  if (!qword_1EEFDA3E0)
  {
    result = MEMORY[0x1B5E261DC](&unk_1B25DECF4, &unk_1E647D6C0);
    atomic_store(result, (unint64_t *)&qword_1EEFDA3E0);
  }
  return result;
}

unint64_t sub_1B2557EE8()
{
  unint64_t result;

  result = qword_1EEFDA3E8;
  if (!qword_1EEFDA3E8)
  {
    result = MEMORY[0x1B5E261DC](&unk_1B25DED1C, &unk_1E647D6C0);
    atomic_store(result, (unint64_t *)&qword_1EEFDA3E8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_3_11()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 64) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_4_11()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

void OUTLINED_FUNCTION_5_9()
{
  void *v0;
  void *v1;

  sub_1B24AB77C(v1, v0, 2);
}

uint64_t OUTLINED_FUNCTION_9_9()
{
  return sub_1B25CD5D0();
}

uint64_t OUTLINED_FUNCTION_10_12@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 24);
}

uint64_t OUTLINED_FUNCTION_11_8()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_12_9()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_17_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

id OUTLINED_FUNCTION_20_9()
{
  void *v0;
  void *v1;

  return sub_1B24A1AF4(v1, v0, 2);
}

uint64_t OUTLINED_FUNCTION_21_9()
{
  return sub_1B25CD510();
}

id OUTLINED_FUNCTION_22_7()
{
  char v0;
  void *v1;
  void *v2;

  return sub_1B24A1AF4(v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_29_10()
{
  return sub_1B25CD540();
}

uint64_t OUTLINED_FUNCTION_32_10()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_35_10()
{
  return sub_1B249BC1C();
}

uint64_t OUTLINED_FUNCTION_42_11()
{
  return sub_1B25CD000();
}

id OUTLINED_FUNCTION_43_7(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  return objc_msgSend(v2, a2, v3, 1, v4 - 104);
}

uint64_t OUTLINED_FUNCTION_44_6()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[6] + 8))(v0[7], v0[4]);
}

uint64_t OUTLINED_FUNCTION_46_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 112) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_48_7()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_49_7(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t OUTLINED_FUNCTION_50_7()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_52_9()
{
  return sub_1B25CD0E4();
}

uint64_t OUTLINED_FUNCTION_54_7()
{
  return sub_1B25CCAB4();
}

uint64_t OUTLINED_FUNCTION_55_7()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_56_6()
{
  uint64_t v0;

  return v0;
}

id OUTLINED_FUNCTION_58_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return objc_msgSend(*(id *)(*(_QWORD *)(v1 + 56) + 8 * v0), (SEL)(v2 + 3784));
}

uint64_t OUTLINED_FUNCTION_59_8()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_61_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  return v5(a1, a2, v4, v2, v3);
}

uint64_t OUTLINED_FUNCTION_62_7()
{
  return sub_1B25CD60C();
}

id OUTLINED_FUNCTION_63_7(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2, 0);
}

uint64_t OUTLINED_FUNCTION_64_9()
{
  return sub_1B25CD0D8();
}

uint64_t OUTLINED_FUNCTION_66_2()
{
  return swift_bridgeObjectRelease();
}

id OUTLINED_FUNCTION_68_8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B2557204(a1, a2, a3, 0);
}

uint64_t OUTLINED_FUNCTION_72_8()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1B24AB6DC(v0, v1);
}

uint64_t OUTLINED_FUNCTION_75_9()
{
  return sub_1B25CD6B4();
}

uint64_t OUTLINED_FUNCTION_77_6()
{
  return sub_1B25CD6B4();
}

uint64_t OUTLINED_FUNCTION_80_8()
{
  return sub_1B25CCC64();
}

uint64_t OUTLINED_FUNCTION_81_4()
{
  return sub_1B25CCC64();
}

uint64_t OUTLINED_FUNCTION_88_3()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_89_5()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_90_6()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_91_7()
{
  return swift_bridgeObjectRetain();
}

id OUTLINED_FUNCTION_92_7()
{
  void *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = v0;
  return v0;
}

uint64_t OUTLINED_FUNCTION_93_6()
{
  return swift_unknownObjectRelease();
}

id sub_1B255829C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  objc_class *ObjectType;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  objc_super v16;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  v9 = OBJC_IVAR____TtC6Speech20ModelDownloadRequest_progress;
  v10 = objc_allocWithZone(MEMORY[0x1E0CB38A8]);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, sel_init);
  if (qword_1ED36CF48 != -1)
    swift_once();
  v12 = sub_1B25CC8C8();
  v13 = __swift_project_value_buffer(v12, (uint64_t)qword_1ED36D980);
  sub_1B24B37EC(*(_QWORD *)(a1 + 16) != 0, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/SpeechFramework/SpeechAnalyzer/ModelDownloadRequest.swift", 95, 2, 19, v13);
  *(_QWORD *)&v11[OBJC_IVAR____TtC6Speech20ModelDownloadRequest_assetTypesPerLocale] = a1;
  v14 = &v11[OBJC_IVAR____TtC6Speech20ModelDownloadRequest_clientID];
  *(_QWORD *)v14 = a2;
  *((_QWORD *)v14 + 1) = a3;

  v16.receiver = v11;
  v16.super_class = ObjectType;
  return objc_msgSendSuper2(&v16, sel_init);
}

id ModelDownloadRequest.progress.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC6Speech20ModelDownloadRequest_progress);
}

uint64_t sub_1B25583F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1B2558408()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  _QWORD *v5;
  _QWORD *v6;

  v2 = v0[2];
  v1 = v0[3];
  v3 = objc_msgSend(objc_allocWithZone((Class)SFLocalSpeechRecognitionClient), sel_init);
  v0[4] = v3;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB38A8]), sel_init);
  v0[5] = v4;
  objc_msgSend(v4, sel_setTotalUnitCount_, 100);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC6Speech20ModelDownloadRequest_progress), sel_addChild_withPendingUnitCount_, v4, 1);
  v5 = (_QWORD *)swift_task_alloc();
  v0[6] = v5;
  v5[2] = v3;
  v5[3] = v2;
  v5[4] = v1;
  v5[5] = v4;
  v6 = (_QWORD *)swift_task_alloc();
  v0[7] = v6;
  *v6 = v0;
  v6[1] = sub_1B2558520;
  return sub_1B25CD5F4();
}

uint64_t sub_1B2558520()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B255858C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 40);

  return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B25585BC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 40);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1B2558600(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t aBlock;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;

  v20 = a2;
  v21 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEFD6880);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7, v10);
  v11 = (void *)sub_1B25CCA0C();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a5;
  v26 = sub_1B25593DC;
  v27 = v12;
  v13 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v23 = 1107296256;
  v24 = sub_1B2558800;
  v25 = &block_descriptor_6;
  v14 = _Block_copy(&aBlock);
  v15 = a5;
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  v16 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v15;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v17 + v16, (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  v26 = sub_1B2559474;
  v27 = v17;
  aBlock = v13;
  v23 = 1107296256;
  v24 = sub_1B24C31E8;
  v25 = &block_descriptor_25;
  v18 = _Block_copy(&aBlock);
  v19 = v15;
  swift_release();
  objc_msgSend(v20, sel_downloadAssetsForConfig_clientID_detailedProgress_completionHandler_, v21, v11, v14, v18);
  _Block_release(v18);
  _Block_release(v14);

}

uint64_t sub_1B25587E0(uint64_t result, int a2, id a3)
{
  if ((result & 0x8000000000000000) == 0)
    return (uint64_t)objc_msgSend(a3, sel_setCompletedUnitCount_, result);
  __break(1u);
  return result;
}

uint64_t sub_1B2558800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v5)(uint64_t, uint64_t);

  v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(a2, a3);
  return swift_release();
}

uint64_t sub_1B2558848(int a1, int a2, void *a3, id a4)
{
  id v5;

  objc_msgSend(a4, sel_setCompletedUnitCount_, 100);
  if (a3)
  {
    v5 = a3;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEFD6880);
    return sub_1B25CCC4C();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEFD6880);
    return sub_1B25CCC58();
  }
}

uint64_t ModelDownloadRequest.download()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_1B25588DC()
{
  unint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  int64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  id v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  _QWORD *v35;
  _QWORD *v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v1 + 16) = MEMORY[0x1E0DEE9D8];
  v2 = (_QWORD *)(v1 + 16);
  OUTLINED_FUNCTION_3_12();
  v5 = v4 & v3;
  v39 = (unint64_t)(63 - v6) >> 6;
  v40 = v7;
  swift_bridgeObjectRetain();
  v8 = 0;
  if (!v5)
    goto LABEL_3;
  do
  {
    v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v41 = v5;
    v42 = v8;
    v10 = v9 | (v8 << 6);
LABEL_17:
    v15 = (uint64_t *)(*(_QWORD *)(v40 + 48) + 16 * v10);
    v17 = *v15;
    v16 = v15[1];
    v18 = *(_QWORD *)(*(_QWORD *)(v40 + 56) + 8 * v10);
    v43 = v18 + 56;
    OUTLINED_FUNCTION_3_12();
    v0 = v20 & v19;
    v22 = (unint64_t)(63 - v21) >> 6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23 = 0;
    if (v0)
    {
LABEL_18:
      v24 = __clz(__rbit64(v0));
      v0 &= v0 - 1;
      v25 = v24 | (v23 << 6);
      goto LABEL_33;
    }
    while (1)
    {
      v26 = v23 + 1;
      if (__OFADD__(v23, 1))
      {
        __break(1u);
        goto LABEL_43;
      }
      if (v26 >= v22)
        break;
      v27 = *(_QWORD *)(v43 + 8 * v26);
      ++v23;
      if (v27)
        goto LABEL_32;
      v23 = v26 + 1;
      if (v26 + 1 >= v22)
        break;
      v27 = *(_QWORD *)(v43 + 8 * v23);
      if (v27)
        goto LABEL_32;
      v23 = v26 + 2;
      if (v26 + 2 >= v22)
        break;
      v27 = *(_QWORD *)(v43 + 8 * v23);
      if (v27)
        goto LABEL_32;
      v28 = v26 + 3;
      if (v28 >= v22)
        break;
      v27 = *(_QWORD *)(v43 + 8 * v28);
      if (!v27)
      {
        while (1)
        {
          v23 = v28 + 1;
          if (__OFADD__(v28, 1))
            break;
          if (v23 >= v22)
            goto LABEL_37;
          v27 = *(_QWORD *)(v43 + 8 * v23);
          ++v28;
          if (v27)
            goto LABEL_32;
        }
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        swift_bridgeObjectRetain();
        v32 = sub_1B25CD474();
        swift_bridgeObjectRelease();
        v31 = (char *)v37[3];
        goto LABEL_41;
      }
      v23 = v28;
LABEL_32:
      v0 = (v27 - 1) & v27;
      v25 = __clz(__rbit64(v27)) + (v23 << 6);
LABEL_33:
      v29 = *(_QWORD *)(*(_QWORD *)(v18 + 48) + 8 * v25);
      sub_1B2558DA0();
      swift_bridgeObjectRetain();
      v30 = sub_1B2558DDC(v17, v16, v29);
      MEMORY[0x1B5E24B38]();
      if (*(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1B25CCBD4();
      v5 = (unint64_t)v2;
      sub_1B25CCC04();
      sub_1B25CCBBC();

      if (v0)
        goto LABEL_18;
    }
LABEL_37:
    swift_bridgeObjectRelease();
    swift_release();
    v5 = v41;
    v8 = v42;
  }
  while (v41);
LABEL_3:
  v11 = v8 + 1;
  if (__OFADD__(v8, 1))
    goto LABEL_44;
  if (v11 < v39)
  {
    v12 = *(_QWORD *)(v38 + 8 * v11);
    v13 = v8 + 1;
    if (v12)
      goto LABEL_16;
    v13 = v8 + 2;
    if (v8 + 2 < v39)
    {
      v12 = *(_QWORD *)(v38 + 8 * v13);
      if (v12)
        goto LABEL_16;
      v13 = v8 + 3;
      if (v8 + 3 < v39)
      {
        v12 = *(_QWORD *)(v38 + 8 * v13);
        if (v12)
          goto LABEL_16;
        v14 = v8 + 4;
        if (v8 + 4 < v39)
        {
          v12 = *(_QWORD *)(v38 + 8 * v14);
          if (!v12)
          {
            while (1)
            {
              v13 = v14 + 1;
              if (__OFADD__(v14, 1))
                goto LABEL_45;
              if (v13 >= v39)
                goto LABEL_39;
              v12 = *(_QWORD *)(v38 + 8 * v13);
              ++v14;
              if (v12)
                goto LABEL_16;
            }
          }
          v13 = v8 + 4;
LABEL_16:
          v41 = (v12 - 1) & v12;
          v42 = v13;
          v10 = __clz(__rbit64(v12)) + (v13 << 6);
          goto LABEL_17;
        }
      }
    }
  }
LABEL_39:
  swift_release();
  v5 = v37[2];
  v31 = (char *)v37[3];
  v0 = *(_QWORD *)&v31[OBJC_IVAR____TtC6Speech20ModelDownloadRequest_progress];
  v37[4] = v5;
  if (v5 >> 62)
    goto LABEL_46;
  v32 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_41:
  objc_msgSend((id)v0, sel_setTotalUnitCount_, v32);
  objc_msgSend((id)v0, sel_setCompletedUnitCount_, 0);
  v33 = swift_allocObject();
  v37[5] = v33;
  *(_QWORD *)(v33 + 16) = v31;
  v44 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EEFD8CD8 + dword_1EEFD8CD8);
  v34 = v31;
  v35 = (_QWORD *)swift_task_alloc();
  v37[6] = v35;
  *v35 = v37;
  v35[1] = sub_1B2558D14;
  return v44((uint64_t)&unk_1EEFDA418, v33, v5);
}

uint64_t sub_1B2558D14()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1B2558D94()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1B2558DA0()
{
  unint64_t result;

  result = qword_1EEFDA408;
  if (!qword_1EEFDA408)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_1EEFDA408);
  }
  return result;
}

id sub_1B2558DDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4;
  void *v5;
  id v6;

  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v5 = (void *)sub_1B25CCA0C();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, sel_initWithLanguage_assetType_, v5, a3);

  return v6;
}

uint64_t sub_1B2558E54(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1B2508AAC;
  return sub_1B25583F0(v2);
}

uint64_t sub_1B2558EA4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1B2558EC8(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1B2508AAC;
  return sub_1B2558E54(a1);
}

uint64_t ModelDownloadRequest.download(withCompletion:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD71C0);
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1B25CCCDC();
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v9);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v2;
  v10[5] = a1;
  v10[6] = a2;
  v11 = v2;
  swift_retain();
  sub_1B24C52C0((uint64_t)v8, (uint64_t)&unk_1EEFDA430, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_1B2558FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;

  v6[2] = a5;
  v6[3] = a6;
  v7 = (_QWORD *)swift_task_alloc();
  v6[4] = v7;
  *v7 = v6;
  v7[1] = sub_1B2559038;
  return ModelDownloadRequest.download()();
}

uint64_t sub_1B2559038()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B255909C()
{
  uint64_t v0;

  (*(void (**)(_QWORD))(v0 + 16))(0);
  return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B25590C8()
{
  uint64_t v0;
  void *v1;
  void (*v2)(void *);
  id v3;

  v1 = *(void **)(v0 + 40);
  v2 = *(void (**)(void *))(v0 + 16);
  v3 = v1;
  v2(v1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B2559120()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B2559154(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1B2508AAC;
  return sub_1B2558FEC(a1, v4, v5, v6, v7, v8);
}

void sub_1B2559254(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;

  if (a1)
    v3 = sub_1B25CC4CC();
  else
    v3 = 0;
  v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);

}

id ModelDownloadRequest.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ModelDownloadRequest.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ModelDownloadRequest.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ModelDownloadRequest()
{
  return objc_opt_self();
}

uint64_t method lookup function for ModelDownloadRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1B25593A4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1B25593C8(uint64_t a1)
{
  uint64_t v1;

  sub_1B2559254(a1, *(_QWORD *)(v1 + 16));
}

void sub_1B25593D0(uint64_t a1)
{
  uint64_t v1;

  sub_1B2558600(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_1B25593DC(uint64_t a1, int a2)
{
  uint64_t v2;

  return sub_1B25587E0(a1, a2, *(id *)(v2 + 16));
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_1B25593FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEFD6880);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1B2559474(int a1, int a2, void *a3)
{
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEFD6880);
  return sub_1B2558848(a1, a2, a3, *(id *)(v3 + 16));
}

uint64_t VoiceMeasurer.results.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC6Speech13VoiceMeasurer__results;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDA4B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

double VoiceMeasurer.Result.range.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 16);
  result = *(double *)(v1 + 32);
  *(double *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 40) = v2;
  return result;
}

uint64_t VoiceMeasurer.Result.resultsFinalToTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t VoiceMeasurer.compatibleAudioFormats.getter()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t VoiceMeasurer.availableCompatibleAudioFormats.getter()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t VoiceMeasurer.availableCompatibleAudioFormats(clientID:)()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t VoiceMeasurer.deinit()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDA4B8);
  OUTLINED_FUNCTION_278_0(v1);
  return v0;
}

uint64_t VoiceMeasurer.__deallocating_deinit()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDA4B8);
  OUTLINED_FUNCTION_278_0(v0);
  return swift_deallocClassInstance();
}

uint64_t sub_1B2559620()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1B2508FD0;
  return OUTLINED_FUNCTION_190_0();
}

uint64_t sub_1B2559664(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1B249793C(&qword_1EEFDA4C8, (uint64_t (*)(uint64_t))type metadata accessor for VoiceMeasurer, (uint64_t)&protocol conformance descriptor for VoiceMeasurer);
  result = sub_1B249793C(qword_1EEFDA4D0, (uint64_t (*)(uint64_t))type metadata accessor for VoiceMeasurer, (uint64_t)&unk_1B25DEEB0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for VoiceMeasurer()
{
  uint64_t result;

  result = qword_1EEFDA4F0;
  if (!qword_1EEFDA4F0)
    return swift_getSingletonMetadata();
  return result;
}

_UNKNOWN **sub_1B25596F8()
{
  return &protocol witness table for VoiceMeasurer.Result;
}

uint64_t sub_1B2559704()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B2559718()
{
  return type metadata accessor for VoiceMeasurer();
}

void sub_1B2559720()
{
  unint64_t v0;

  sub_1B2559798();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for VoiceMeasurer()
{
  return swift_lookUpClassMethod();
}

void sub_1B2559798()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEFDA500)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED36D060);
    v0 = sub_1B25CCDD8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEFDA500);
  }
}

void *__swift_memcpy72_4(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x48uLL);
}

uint64_t getEnumTagSinglePayload for VoiceMeasurer.Result(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 72))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for VoiceMeasurer.Result(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 72) = v3;
  return result;
}

ValueMetadata *type metadata accessor for VoiceMeasurer.Result()
{
  return &type metadata for VoiceMeasurer.Result;
}

unint64_t sub_1B2559878()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEFDA508;
  if (!qword_1EEFDA508)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEFDA4B8);
    result = MEMORY[0x1B5E261DC](MEMORY[0x1E0DF0AE0], v1);
    atomic_store(result, &qword_1EEFDA508);
  }
  return result;
}

void sub_1B25598BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t inited;
  uint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  void *v9;
  void *v10;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD75C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B25DB5B0;
  *(_QWORD *)(inited + 32) = 0x6E65764520525341;
  *(_QWORD *)(inited + 40) = 0xE900000000000074;
  *(_QWORD *)(inited + 48) = a1;
  *(_QWORD *)(inited + 56) = a2;
  swift_bridgeObjectRetain();
  v7 = sub_1B25CC904();
  if (a3)
  {
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = v7;
    sub_1B255A294(a3, (uint64_t)sub_1B255A988, 0, isUniquelyReferenced_nonNull_native, &v11);
    v7 = v11;
    swift_bridgeObjectRelease();
  }
  v9 = (void *)sub_1B25CCA0C();
  sub_1B257EDB0(v7);
  swift_bridgeObjectRelease();
  v10 = (void *)sub_1B25CC8EC();
  swift_bridgeObjectRelease();
  SFPLLogRegisteredEvent(38, v9, v10, 0);

}

uint64_t sub_1B2559A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD75C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B25DB5B0;
  *(_QWORD *)(inited + 32) = 0x746163696C707041;
  *(_QWORD *)(inited + 40) = 0xEF656D614E6E6F69;
  *(_QWORD *)(inited + 48) = a1;
  *(_QWORD *)(inited + 56) = a2;
  swift_bridgeObjectRetain();
  v11 = sub_1B25CC904();
  v15 = v11;
  if (a4)
  {
    v12 = v11;
    swift_bridgeObjectRetain();
    swift_isUniquelyReferenced_nonNull_native();
    sub_1B254CF38();
    v15 = v12;
  }
  else
  {
    sub_1B254C778();
  }
  swift_bridgeObjectRelease();
  if (a6)
  {
    swift_bridgeObjectRetain();
    swift_isUniquelyReferenced_nonNull_native();
    sub_1B254CF38();
    v13 = v15;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B254C778();
    swift_bridgeObjectRelease();
    v13 = v15;
  }
  sub_1B25598BC(0xD00000000000001DLL, 0x80000001B25D5000, v13);
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for PowerlogHelper()
{
  return objc_opt_self();
}

void sub_1B2559C4C(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t i;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  int64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _BYTE v35[72];

  v3 = v2;
  v5 = type metadata accessor for SpeechRecognizerSupportedFeatures();
  v34 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7740);
  v10 = a2;
  v11 = sub_1B25CD48C();
  v12 = (_QWORD *)v11;
  if (*(_QWORD *)(v9 + 16))
  {
    v31 = v2;
    v13 = 1 << *(_BYTE *)(v9 + 32);
    v14 = *(_QWORD *)(v9 + 64);
    v33 = (_QWORD *)(v9 + 64);
    if (v13 < 64)
      v15 = ~(-1 << v13);
    else
      v15 = -1;
    v16 = v15 & v14;
    v32 = (unint64_t)(v13 + 63) >> 6;
    v17 = v11 + 64;
    swift_retain();
    v18 = 0;
    if (!v16)
      goto LABEL_7;
LABEL_6:
    v19 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    for (i = v19 | (v18 << 6); ; i = __clz(__rbit64(v23)) + (v18 << 6))
    {
      v25 = *(_QWORD *)(v34 + 72);
      v26 = *(_QWORD *)(v9 + 48) + v25 * i;
      if ((v10 & 1) != 0)
      {
        sub_1B254E880(v26, (uint64_t)v8);
        v27 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * i);
      }
      else
      {
        sub_1B254E940(v26, (uint64_t)v8);
        v27 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * i);
        swift_bridgeObjectRetain();
      }
      sub_1B25CD6A8();
      sub_1B255F958((uint64_t)v35);
      sub_1B25CD6CC();
      v28 = sub_1B25CD1C8();
      *(_QWORD *)(v17 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
      sub_1B254E880((uint64_t)v8, v12[6] + v25 * v28);
      *(_QWORD *)(v12[7] + 8 * v28) = v27;
      ++v12[2];
      if (v16)
        goto LABEL_6;
LABEL_7:
      v21 = v18 + 1;
      if (__OFADD__(v18, 1))
      {
        __break(1u);
LABEL_33:
        __break(1u);
        return;
      }
      v22 = v33;
      if (v21 >= v32)
        goto LABEL_24;
      v23 = v33[v21];
      ++v18;
      if (!v23)
      {
        v18 = v21 + 1;
        if (v21 + 1 >= v32)
          goto LABEL_24;
        v23 = v33[v18];
        if (!v23)
        {
          v24 = v21 + 2;
          if (v24 >= v32)
          {
LABEL_24:
            OUTLINED_FUNCTION_75_3();
            if ((v10 & 1) == 0)
            {
              OUTLINED_FUNCTION_75_3();
              v3 = v31;
              goto LABEL_31;
            }
            v29 = 1 << *(_BYTE *)(v9 + 32);
            if (v29 >= 64)
              sub_1B2500448(0, (unint64_t)(v29 + 63) >> 6, v22);
            else
              *v22 = -1 << v29;
            v3 = v31;
            *(_QWORD *)(v9 + 16) = 0;
            break;
          }
          v23 = v33[v24];
          if (!v23)
          {
            while (1)
            {
              v18 = v24 + 1;
              if (__OFADD__(v24, 1))
                goto LABEL_33;
              if (v18 >= v32)
                goto LABEL_24;
              v23 = v33[v18];
              ++v24;
              if (v23)
                goto LABEL_18;
            }
          }
          v18 = v24;
        }
      }
LABEL_18:
      v16 = (v23 - 1) & v23;
    }
  }
  OUTLINED_FUNCTION_75_3();
LABEL_31:
  *v3 = v12;
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_1B2559F10(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  _QWORD *v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  uint64_t v39;
  char v40;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7530);
  v40 = a2;
  v6 = sub_1B25CD48C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_39;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v39 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v37 = v2;
  v38 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  if (!v10)
    goto LABEL_7;
LABEL_6:
  v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v18)) + (v13 << 6))
  {
    v20 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * i);
    v22 = *v20;
    v21 = v20[1];
    v23 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * i);
    v24 = *v23;
    v25 = v23[1];
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1B25CD6A8();
    sub_1B25CCAB4();
    result = sub_1B25CD6CC();
    v26 = -1 << *(_BYTE *)(v7 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6))) == 0)
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v26) >> 6;
      while (++v28 != v31 || (v30 & 1) == 0)
      {
        v32 = v28 == v31;
        if (v28 == v31)
          v28 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v11 + 8 * v28);
        if (v33 != -1)
        {
          v29 = __clz(__rbit64(~v33)) + (v28 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    v29 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v11 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    v34 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v29);
    *v34 = v22;
    v34[1] = v21;
    v35 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 16 * v29);
    *v35 = v24;
    v35[1] = v25;
    ++*(_QWORD *)(v7 + 16);
    if (v10)
      goto LABEL_6;
LABEL_7:
    v16 = v13 + 1;
    if (__OFADD__(v13, 1))
      goto LABEL_41;
    if (v16 >= v38)
    {
      swift_release();
      v3 = v37;
      v17 = (_QWORD *)(v5 + 64);
      goto LABEL_34;
    }
    v17 = (_QWORD *)(v5 + 64);
    v18 = *(_QWORD *)(v39 + 8 * v16);
    ++v13;
    if (!v18)
    {
      v13 = v16 + 1;
      if (v16 + 1 >= v38)
        goto LABEL_32;
      v18 = *(_QWORD *)(v39 + 8 * v13);
      if (!v18)
        break;
    }
LABEL_18:
    v10 = (v18 - 1) & v18;
  }
  v19 = v16 + 2;
  if (v19 < v38)
  {
    v18 = *(_QWORD *)(v39 + 8 * v19);
    if (!v18)
    {
      while (1)
      {
        v13 = v19 + 1;
        if (__OFADD__(v19, 1))
          goto LABEL_42;
        if (v13 >= v38)
          goto LABEL_32;
        v18 = *(_QWORD *)(v39 + 8 * v13);
        ++v19;
        if (v18)
          goto LABEL_18;
      }
    }
    v13 = v19;
    goto LABEL_18;
  }
LABEL_32:
  swift_release();
  v3 = v37;
LABEL_34:
  if ((v40 & 1) != 0)
  {
    v36 = 1 << *(_BYTE *)(v5 + 32);
    if (v36 >= 64)
      sub_1B2500448(0, (unint64_t)(v36 + 63) >> 6, v17);
    else
      *v17 = -1 << v36;
    *(_QWORD *)(v5 + 16) = 0;
  }
LABEL_39:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1B255A21C(uint64_t a1, uint64_t a2)
{
  sub_1B254E940(a2, a1);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B255A24C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *a1 = a4;
  a1[1] = a5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t sub_1B255A294(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t *v26;
  _QWORD *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  __int128 v35;

  sub_1B255A4A4(a1, a2, a3, &v35);
  swift_bridgeObjectRetain();
  swift_retain();
  v7 = sub_1B255A7F0();
  if (v8)
  {
    v11 = v7;
    v12 = v8;
    v13 = v9;
    v14 = v10;
    while (1)
    {
      v15 = (_QWORD *)*a5;
      v17 = sub_1B24E113C(v11, v12);
      v18 = v15[2];
      v19 = (v16 & 1) == 0;
      v20 = v18 + v19;
      if (__OFADD__(v18, v19))
        break;
      v21 = v16;
      if (v15[3] >= v20)
      {
        if ((a4 & 1) == 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7500);
          sub_1B25CD414();
        }
      }
      else
      {
        sub_1B2559F10(v20, a4 & 1);
        v22 = sub_1B24E113C(v11, v12);
        if ((v21 & 1) != (v23 & 1))
          goto LABEL_17;
        v17 = v22;
      }
      v24 = (_QWORD *)*a5;
      if ((v21 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v25 = (_QWORD *)(v24[7] + 16 * v17);
        swift_bridgeObjectRelease();
        *v25 = v13;
        v25[1] = v14;
      }
      else
      {
        v24[(v17 >> 6) + 8] |= 1 << v17;
        v26 = (uint64_t *)(v24[6] + 16 * v17);
        *v26 = v11;
        v26[1] = v12;
        v27 = (_QWORD *)(v24[7] + 16 * v17);
        *v27 = v13;
        v27[1] = v14;
        v28 = v24[2];
        v29 = __OFADD__(v28, 1);
        v30 = v28 + 1;
        if (v29)
          goto LABEL_16;
        v24[2] = v30;
      }
      v11 = sub_1B255A7F0();
      v12 = v31;
      v13 = v32;
      v14 = v33;
      a4 = 1;
      if (!v31)
        goto LABEL_14;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    result = sub_1B25CD630();
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
    swift_release();
    sub_1B24EADD4();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B255A4A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = -1 << *(_BYTE *)(a1 + 32);
  *a4 = a1;
  v7 = *(_QWORD *)(a1 + 64);
  result = a1 + 64;
  v6 = v7;
  a4[1] = result;
  a4[2] = ~v4;
  if (-v4 < 64)
    v8 = ~(-1 << -(char)v4);
  else
    v8 = -1;
  a4[3] = 0;
  a4[4] = v8 & v6;
  a4[5] = a2;
  a4[6] = a3;
  return result;
}

void sub_1B255A4E0(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  size_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  int64_t v31;
  void (*v32)(uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  size_t v39;
  char *v40;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7688);
  MEMORY[0x1E0C80A78](v3, v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7690);
  v8 = *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64);
  v10 = MEMORY[0x1E0C80A78](v7, v9);
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v37 - v12;
  v14 = *v1;
  v15 = v1[1];
  v17 = v1[2];
  v16 = v1[3];
  v18 = v16;
  v19 = v1[4];
  v37 = v6;
  v40 = v20;
  if (!v19)
  {
    v27 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      return;
    }
    v28 = (unint64_t)(v17 + 64) >> 6;
    if (v27 < v28)
    {
      v29 = *(_QWORD *)(v15 + 8 * v27);
      if (v29)
      {
LABEL_7:
        v38 = v17;
        v39 = v8;
        v21 = v15;
        v22 = a1;
        v23 = (v29 - 1) & v29;
        v24 = __clz(__rbit64(v29)) + (v27 << 6);
        v18 = v27;
        goto LABEL_3;
      }
      v30 = v16 + 2;
      v18 = v16 + 1;
      if (v16 + 2 < v28)
      {
        v29 = *(_QWORD *)(v15 + 8 * v30);
        if (v29)
        {
LABEL_10:
          v27 = v30;
          goto LABEL_7;
        }
        v18 = v16 + 2;
        if (v16 + 3 < v28)
        {
          v29 = *(_QWORD *)(v15 + 8 * (v16 + 3));
          if (v29)
          {
            v27 = v16 + 3;
            goto LABEL_7;
          }
          v30 = v16 + 4;
          v18 = v16 + 3;
          if (v16 + 4 < v28)
          {
            v29 = *(_QWORD *)(v15 + 8 * v30);
            if (v29)
              goto LABEL_10;
            v27 = v16 + 5;
            v18 = v16 + 4;
            if (v16 + 5 < v28)
            {
              v29 = *(_QWORD *)(v15 + 8 * v27);
              if (v29)
                goto LABEL_7;
              v18 = v28 - 1;
              v31 = v16 + 6;
              while (v31 < v28)
              {
                v29 = *(_QWORD *)(v15 + 8 * v31++);
                if (v29)
                {
                  v27 = v31 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    OUTLINED_FUNCTION_1_6((uint64_t)v13, 1);
    v23 = 0;
    goto LABEL_23;
  }
  v38 = v17;
  v39 = v8;
  v21 = v15;
  v22 = a1;
  v23 = (v19 - 1) & v19;
  v24 = __clz(__rbit64(v19)) | (v16 << 6);
LABEL_3:
  v25 = *(_QWORD *)(v14 + 48);
  v26 = type metadata accessor for SpeechRecognizerSupportedFeatures();
  sub_1B254E940(v25 + *(_QWORD *)(*(_QWORD *)(v26 - 8) + 72) * v24, (uint64_t)v13);
  *(_QWORD *)&v13[*(int *)(v3 + 48)] = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v24);
  OUTLINED_FUNCTION_1_6((uint64_t)v13, 0);
  swift_bridgeObjectRetain();
  a1 = v22;
  v15 = v21;
  v17 = v38;
  v8 = v39;
LABEL_23:
  *v1 = v14;
  v1[1] = v15;
  v1[2] = v17;
  v1[3] = v18;
  v1[4] = v23;
  v32 = (void (*)(uint64_t))v1[5];
  if (OUTLINED_FUNCTION_374((uint64_t)v13))
  {
    v33 = v40;
    memcpy(v40, v13, v8);
  }
  else
  {
    v33 = v40;
    sub_1B254E880((uint64_t)v13, (uint64_t)v40);
    *(_QWORD *)&v33[*(int *)(v3 + 48)] = *(_QWORD *)&v13[*(int *)(v3 + 48)];
    OUTLINED_FUNCTION_1_6((uint64_t)v33, 0);
  }
  v34 = 1;
  if (OUTLINED_FUNCTION_374((uint64_t)v33) != 1)
  {
    v35 = (uint64_t)v37;
    sub_1B254E880((uint64_t)v33, (uint64_t)v37);
    *(_QWORD *)(v35 + *(int *)(v3 + 48)) = *(_QWORD *)&v33[*(int *)(v3 + 48)];
    v32(v35);
    sub_1B254E8C4(v35);
    sub_1B255A9C8(v35 + *(int *)(v3 + 48));
    v34 = 0;
  }
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD76E8);
  __swift_storeEnumTagSinglePayload(a1, v34, 1, v36);
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_1B255A7F0()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  int64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t *__return_ptr, _QWORD *);
  uint64_t result;
  int64_t v15;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  int64_t v20;
  uint64_t v21;
  _QWORD v22[4];

  v1 = *v0;
  v3 = v0[3];
  v2 = v0[4];
  v4 = v3;
  if (v2)
  {
    v5 = (v2 - 1) & v2;
    v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    v7 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v6);
    v8 = *v7;
    v9 = v7[1];
    v10 = (uint64_t *)(*(_QWORD *)(v1 + 56) + 16 * v6);
    v11 = *v10;
    v12 = v10[1];
    v0[3] = v4;
    v0[4] = v5;
    v13 = (void (*)(uint64_t *__return_ptr, _QWORD *))v0[5];
    v22[0] = v8;
    v22[1] = v9;
    v22[2] = v11;
    v22[3] = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(&v21, v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v21;
  }
  v15 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    v16 = (unint64_t)(v0[2] + 64) >> 6;
    if (v15 < v16)
    {
      v17 = v0[1];
      v18 = *(_QWORD *)(v17 + 8 * v15);
      if (v18)
      {
LABEL_7:
        v5 = (v18 - 1) & v18;
        v6 = __clz(__rbit64(v18)) + (v15 << 6);
        v4 = v15;
        goto LABEL_3;
      }
      v19 = v3 + 2;
      v4 = v3 + 1;
      if (v3 + 2 < v16)
      {
        v18 = *(_QWORD *)(v17 + 8 * v19);
        if (v18)
        {
LABEL_10:
          v15 = v19;
          goto LABEL_7;
        }
        v4 = v3 + 2;
        if (v3 + 3 < v16)
        {
          v18 = *(_QWORD *)(v17 + 8 * (v3 + 3));
          if (v18)
          {
            v15 = v3 + 3;
            goto LABEL_7;
          }
          v19 = v3 + 4;
          v4 = v3 + 3;
          if (v3 + 4 < v16)
          {
            v18 = *(_QWORD *)(v17 + 8 * v19);
            if (v18)
              goto LABEL_10;
            v15 = v3 + 5;
            v4 = v3 + 4;
            if (v3 + 5 < v16)
            {
              v18 = *(_QWORD *)(v17 + 8 * v15);
              if (v18)
                goto LABEL_7;
              v4 = v16 - 1;
              v20 = v3 + 6;
              while (v20 < v16)
              {
                v18 = *(_QWORD *)(v17 + 8 * v20++);
                if (v18)
                {
                  v15 = v20 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    result = 0;
    v0[3] = v4;
    v0[4] = 0;
  }
  return result;
}

uint64_t sub_1B255A988@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[2];

  result = sub_1B255A24C(v7, *a1, a1[1], a1[2], a1[3]);
  v4 = v7[0];
  v5 = v7[1];
  *a2 = result;
  a2[1] = v6;
  a2[2] = v4;
  a2[3] = v5;
  return result;
}

uint64_t sub_1B255A9C8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7730);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t OUTLINED_FUNCTION_1_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t sub_1B255AA14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[10] = a4;
  v5[11] = v4;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  v6 = OUTLINED_FUNCTION_61();
  v5[12] = v6;
  v5[13] = *(_QWORD *)(v6 - 8);
  v5[14] = OUTLINED_FUNCTION_7_0();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF30);
  v5[15] = v7;
  v5[16] = *(_QWORD *)(v7 - 8);
  v5[17] = OUTLINED_FUNCTION_80();
  v5[18] = OUTLINED_FUNCTION_92();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B255AA88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  if ((swift_distributed_actor_is_remote() & 1) == 0)
    return OUTLINED_FUNCTION_15();
  v2 = OUTLINED_FUNCTION_23_11();
  OUTLINED_FUNCTION_29_11(v2);
  OUTLINED_FUNCTION_5_10();
  OUTLINED_FUNCTION_126();
  if (v0)
  {
    OUTLINED_FUNCTION_30(*(_QWORD *)(v1 + 128));
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_55_8();
    OUTLINED_FUNCTION_36();
    OUTLINED_FUNCTION_48();
    v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_22();
    return OUTLINED_FUNCTION_23(v5);
  }
  else
  {
    OUTLINED_FUNCTION_36_7();
    OUTLINED_FUNCTION_8_11();
    v3 = OUTLINED_FUNCTION_167();
    nullsub_1(v3, v4);
    OUTLINED_FUNCTION_67();
    OUTLINED_FUNCTION_82();
    OUTLINED_FUNCTION_74();
    v7 = (_QWORD *)OUTLINED_FUNCTION_39();
    *(_QWORD *)(v1 + 152) = v7;
    v8 = OUTLINED_FUNCTION_25_11(v7, (uint64_t)sub_1B255ABBC);
    return OUTLINED_FUNCTION_16(v8, v9, v10, v11);
  }
}

uint64_t sub_1B255ABBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_13_7();
  if (!v1)
    *(_QWORD *)(v2 + 168) = v0;
  OUTLINED_FUNCTION_44_7();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_31();
}

uint64_t sub_1B255AC08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  OUTLINED_FUNCTION_54_8(*(_QWORD *)(v0 + 104));
  OUTLINED_FUNCTION_41_9(v1);
  OUTLINED_FUNCTION_41_9(v2);
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_72();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 168));
}

void sub_1B255AC7C()
{
  sub_1B255BE7C();
}

uint64_t sub_1B255AC94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  OUTLINED_FUNCTION_30(*(_QWORD *)(v0 + 104));
  OUTLINED_FUNCTION_232(v1);
  OUTLINED_FUNCTION_232(v2);
  swift_task_dealloc();
  OUTLINED_FUNCTION_48();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B255AD08(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v3[2] = a3;
  v5 = *a2;
  v3[3] = *a2;
  v3[4] = *(_QWORD *)(v5 - 8);
  v6 = (uint64_t *)swift_task_alloc();
  v3[5] = v6;
  result = swift_conformsToProtocol();
  if (result)
  {
    sub_1B2550EE0();
    v8 = *v6;
    v9 = v6[1];
    v10 = a2[1];
    v3[6] = v10;
    v3[7] = *(_QWORD *)(v10 - 8);
    v11 = (uint64_t *)swift_task_alloc();
    v3[8] = v11;
    result = swift_conformsToProtocol();
    if (result)
    {
      sub_1B2550EE0();
      v12 = *v11;
      v13 = v11[1];
      v14 = (_QWORD *)swift_task_alloc();
      v3[9] = v14;
      *v14 = v3;
      v14[1] = sub_1B255AE90;
      return sub_1B255AA14(v8, v9, v12, v13);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1B255AE90()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_53_7(v1);
  OUTLINED_FUNCTION_238_1();
  OUTLINED_FUNCTION_45_8();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_72();
  return OUTLINED_FUNCTION_23(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B255AEE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[10] = a4;
  v5[11] = v4;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  v6 = OUTLINED_FUNCTION_61();
  v5[12] = v6;
  v5[13] = *(_QWORD *)(v6 - 8);
  v5[14] = OUTLINED_FUNCTION_7_0();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF30);
  v5[15] = v7;
  v5[16] = *(_QWORD *)(v7 - 8);
  v5[17] = OUTLINED_FUNCTION_80();
  v5[18] = OUTLINED_FUNCTION_92();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B255AF54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  if ((swift_distributed_actor_is_remote() & 1) == 0)
    return OUTLINED_FUNCTION_15();
  v2 = OUTLINED_FUNCTION_23_11();
  OUTLINED_FUNCTION_29_11(v2);
  OUTLINED_FUNCTION_5_10();
  OUTLINED_FUNCTION_126();
  if (v0)
  {
    OUTLINED_FUNCTION_30(*(_QWORD *)(v1 + 128));
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_55_8();
    OUTLINED_FUNCTION_36();
    OUTLINED_FUNCTION_48();
    v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_22();
    return OUTLINED_FUNCTION_23(v5);
  }
  else
  {
    OUTLINED_FUNCTION_36_7();
    OUTLINED_FUNCTION_8_11();
    v3 = OUTLINED_FUNCTION_167();
    nullsub_1(v3, v4);
    OUTLINED_FUNCTION_67();
    OUTLINED_FUNCTION_82();
    OUTLINED_FUNCTION_74();
    v7 = (_QWORD *)OUTLINED_FUNCTION_39();
    *(_QWORD *)(v1 + 152) = v7;
    v8 = OUTLINED_FUNCTION_25_11(v7, (uint64_t)sub_1B255B088);
    return OUTLINED_FUNCTION_16(v8, v9, v10, v11);
  }
}

uint64_t sub_1B255B088()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_13_7();
  if (!v1)
    *(_QWORD *)(v2 + 168) = v0;
  OUTLINED_FUNCTION_44_7();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_31();
}

void sub_1B255B0D4()
{
  sub_1B255C034();
}

uint64_t sub_1B255B0EC(double a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v3 + 56) = v2;
  *(double *)(v3 + 40) = a1;
  *(double *)(v3 + 48) = a2;
  v4 = OUTLINED_FUNCTION_61();
  *(_QWORD *)(v3 + 64) = v4;
  *(_QWORD *)(v3 + 72) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 80) = OUTLINED_FUNCTION_7_0();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD69E8);
  *(_QWORD *)(v3 + 88) = v5;
  *(_QWORD *)(v3 + 96) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 104) = OUTLINED_FUNCTION_80();
  *(_QWORD *)(v3 + 112) = OUTLINED_FUNCTION_92();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B255B15C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  if ((swift_distributed_actor_is_remote() & 1) == 0)
    return OUTLINED_FUNCTION_15();
  v1 = v0[14];
  v2 = v0[5];
  v3 = OUTLINED_FUNCTION_35_11();
  v0[3] = v2;
  v0[2] = v3;
  sub_1B25CC7F0();
  sub_1B2498BC0(v1);
  v4 = v0[13];
  v0[4] = v0[6];
  sub_1B25CC7F0();
  v5 = sub_1B2498BC0(v4);
  nullsub_1(v5, v6);
  OUTLINED_FUNCTION_67();
  OUTLINED_FUNCTION_82();
  OUTLINED_FUNCTION_74();
  v7 = (_QWORD *)OUTLINED_FUNCTION_25();
  v0[15] = v7;
  *v7 = v0;
  v7[1] = sub_1B255B358;
  v8 = OUTLINED_FUNCTION_27(v0[7]);
  return OUTLINED_FUNCTION_16(v8, v9, v10, v11);
}

uint64_t sub_1B255B358(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 128) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    *(_QWORD *)(v6 + 136) = a2;
    *(_QWORD *)(v6 + 144) = a1;
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_2_0();
}

uint64_t sub_1B255B3D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  OUTLINED_FUNCTION_54_8(*(_QWORD *)(v0 + 72));
  OUTLINED_FUNCTION_41_9(v1);
  OUTLINED_FUNCTION_41_9(v2);
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_72();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 136));
}

void sub_1B255B44C()
{
  sub_1B255C23C();
}

uint64_t sub_1B255B464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  OUTLINED_FUNCTION_30(*(_QWORD *)(v0 + 72));
  OUTLINED_FUNCTION_232(v1);
  OUTLINED_FUNCTION_232(v2);
  swift_task_dealloc();
  OUTLINED_FUNCTION_48();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B255B4D8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[3] = v0;
  v2 = OUTLINED_FUNCTION_61();
  v1[4] = v2;
  v1[5] = *(_QWORD *)(v2 - 8);
  v1[6] = OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B255B51C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  if ((swift_distributed_actor_is_remote() & 1) == 0)
    return OUTLINED_FUNCTION_15();
  v2 = OUTLINED_FUNCTION_35_11();
  v3 = OUTLINED_FUNCTION_49_8(v2);
  nullsub_1(v3, v4);
  if (v0)
  {
    OUTLINED_FUNCTION_107();
    OUTLINED_FUNCTION_77();
    v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_22();
    return OUTLINED_FUNCTION_23(v5);
  }
  else
  {
    OUTLINED_FUNCTION_82();
    OUTLINED_FUNCTION_74();
    v7 = (_QWORD *)OUTLINED_FUNCTION_25();
    *(_QWORD *)(v1 + 64) = v7;
    *v7 = v1;
    v7[1] = sub_1B255B5E8;
    v8 = OUTLINED_FUNCTION_27(*(_QWORD *)(v1 + 24));
    return OUTLINED_FUNCTION_16(v8, v9, v10, v11);
  }
}

uint64_t sub_1B255B5E8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_2_0();
}

uint64_t sub_1B255B64C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_30(*(_QWORD *)(v0 + 40));
  OUTLINED_FUNCTION_77();
  return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B255B680()
{
  uint64_t v0;

  OUTLINED_FUNCTION_77();
  return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B255B6A8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[3] = v0;
  v2 = OUTLINED_FUNCTION_61();
  v1[4] = v2;
  v1[5] = *(_QWORD *)(v2 - 8);
  v1[6] = OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B255B6EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  if ((swift_distributed_actor_is_remote() & 1) == 0)
    return OUTLINED_FUNCTION_15();
  v2 = OUTLINED_FUNCTION_35_11();
  v3 = OUTLINED_FUNCTION_49_8(v2);
  nullsub_1(v3, v4);
  if (v0)
  {
    OUTLINED_FUNCTION_107();
    OUTLINED_FUNCTION_77();
    v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_22();
    return OUTLINED_FUNCTION_23(v5);
  }
  else
  {
    OUTLINED_FUNCTION_67();
    OUTLINED_FUNCTION_82();
    OUTLINED_FUNCTION_74();
    v7 = (_QWORD *)OUTLINED_FUNCTION_25();
    *(_QWORD *)(v1 + 64) = v7;
    *v7 = v1;
    v7[1] = sub_1B255B7C0;
    v8 = OUTLINED_FUNCTION_27(*(_QWORD *)(v1 + 24));
    return OUTLINED_FUNCTION_16(v8, v9, v10, v11);
  }
}

uint64_t sub_1B255B7C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 72) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v1)
    *(_QWORD *)(v4 + 80) = a1;
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_31();
}

uint64_t sub_1B255B82C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 32));
  OUTLINED_FUNCTION_36();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 80));
}

void sub_1B255B874()
{
  sub_1B255BE4C();
}

uint64_t sub_1B255B88C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_30(*(_QWORD *)(v0 + 40));
  OUTLINED_FUNCTION_77();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B255B8C8(void *a1, void *a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;

  v9 = sub_1B24A1B64(a1, a2, a3, a4);
  v10 = v9;
  if (!v4 && !v9)
  {
    type metadata accessor for LSRAssets();
    v10 = swift_distributedActor_remote_initialize();
    *(_QWORD *)(v10 + 112) = a1;
    *(_QWORD *)(v10 + 120) = a2;
    *(_BYTE *)(v10 + 128) = a3;
    *(_QWORD *)(v10 + 136) = a4;
    sub_1B24A1AF4(a1, a2, a3);
    OUTLINED_FUNCTION_289();
  }
  return v10;
}

void sub_1B255B948(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v11;
  uint64_t v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  double v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  double v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  double v65;
  __int128 v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;

  if (a1 == 0xD000000000000018 && (OUTLINED_FUNCTION_29(), v11) || (sub_1B25CD5D0() & 1) != 0)
  {
    objc_msgSend(a3, sel_hello);
    return;
  }
  if (a1 == 0xD000000000000022 && (OUTLINED_FUNCTION_29(), v11) || (OUTLINED_FUNCTION_12() & 1) != 0)
  {
    if (a5)
    {
      v12 = OUTLINED_FUNCTION_79();
      *(_QWORD *)(v12 + 16) = a5;
      *(_QWORD *)(v12 + 24) = a6;
      v13 = OUTLINED_FUNCTION_23_3((uint64_t)sub_1B24A1930, MEMORY[0x1E0C809B0], 1107296256, v59, v60);
      OUTLINED_FUNCTION_289();
      swift_release();
      objc_msgSend(a3, sel_getModelPropertiesWithReply_, v13);
LABEL_10:
      _Block_release(v13);
      return;
    }
    goto LABEL_44;
  }
  if (a1 == 0xD000000000000047 && (OUTLINED_FUNCTION_29(), v11) || (OUTLINED_FUNCTION_12() & 1) != 0)
  {
    v14 = *(_QWORD *)(a4 + 16);
    if (v14)
    {
      v15 = OUTLINED_FUNCTION_51_5(a4 + 32);
      if (!v69)
      {
LABEL_45:
        __break(1u);
        __break(1u);
        goto LABEL_46;
      }
      OUTLINED_FUNCTION_27_7(v15, v16, v17, v18, v19, v20, v21, v22, v56);
      OUTLINED_FUNCTION_10_13();
      v23 = (void *)OUTLINED_FUNCTION_26_8();
      OUTLINED_FUNCTION_107();
      if (v14 >= 2)
      {
        v24 = OUTLINED_FUNCTION_51_5(a4 + 64);
        OUTLINED_FUNCTION_27_7(v24, v25, v26, v27, v28, v29, v30, v31, v57);
        OUTLINED_FUNCTION_10_13();
        v32 = (void *)OUTLINED_FUNCTION_26_8();
        OUTLINED_FUNCTION_107();
        if (!a5)
        {
LABEL_46:
          __break(1u);
          goto LABEL_47;
        }
        v33 = OUTLINED_FUNCTION_79();
        *(_QWORD *)(v33 + 16) = a5;
        *(_QWORD *)(v33 + 24) = a6;
        v34 = OUTLINED_FUNCTION_23_3((uint64_t)sub_1B255C798, MEMORY[0x1E0C809B0], 1107296256, v59, v60);
        OUTLINED_FUNCTION_289();
        swift_release();
        objc_msgSend(a3, sel_getContextualNamedEntitySourcesForApplication_taskName_reply_, v23, v32, v34);
        goto LABEL_27;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_40;
  }
  if (a1 == 0xD000000000000049 && (OUTLINED_FUNCTION_29(), v11) || (OUTLINED_FUNCTION_12() & 1) != 0)
  {
    v35 = *(_QWORD *)(a4 + 16);
    if (v35)
    {
      v36 = OUTLINED_FUNCTION_51_5(a4 + 32);
      if (!v69)
      {
LABEL_47:
        __break(1u);
        __break(1u);
        goto LABEL_48;
      }
      OUTLINED_FUNCTION_27_7(v36, v37, v38, v39, v40, v41, v42, v43, v56);
      OUTLINED_FUNCTION_10_13();
      v23 = (void *)OUTLINED_FUNCTION_26_8();
      OUTLINED_FUNCTION_107();
      if (v35 >= 2)
      {
        v44 = OUTLINED_FUNCTION_51_5(a4 + 64);
        OUTLINED_FUNCTION_27_7(v44, v45, v46, v47, v48, v49, v50, v51, v58);
        OUTLINED_FUNCTION_10_13();
        v32 = (void *)OUTLINED_FUNCTION_26_8();
        OUTLINED_FUNCTION_107();
        if (!a5)
        {
LABEL_48:
          __break(1u);
          goto LABEL_49;
        }
        v52 = OUTLINED_FUNCTION_79();
        *(_QWORD *)(v52 + 16) = a5;
        *(_QWORD *)(v52 + 24) = a6;
        v34 = OUTLINED_FUNCTION_23_3((uint64_t)sub_1B255C808, MEMORY[0x1E0C809B0], 1107296256, v59, v60);
        OUTLINED_FUNCTION_289();
        swift_release();
        objc_msgSend(a3, sel_getContextualRankedContactSourcesForApplication_taskName_reply_, v23, v32, v34);
LABEL_27:
        _Block_release(v34);

        return;
      }
      goto LABEL_41;
    }
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (a1 == 0xD000000000000036 && (OUTLINED_FUNCTION_29(), v11) || (OUTLINED_FUNCTION_12() & 1) != 0)
  {
    v53 = *(_QWORD *)(a4 + 16);
    if (v53)
    {
      sub_1B251AC38(a4 + 32, (uint64_t)&v66);
      if (!v67)
      {
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
      sub_1B24AB608(&v66, &v68);
      swift_dynamicCast();
      if (v53 >= 2)
      {
        v54 = v65;
        sub_1B251AC38(a4 + 64, (uint64_t)&v62);
        if (v63)
        {
          sub_1B24AB608(&v62, &v64);
          swift_dynamicCast();
          if (a5)
          {
            v55 = OUTLINED_FUNCTION_79();
            *(_QWORD *)(v55 + 16) = a5;
            *(_QWORD *)(v55 + 24) = a6;
            v13 = OUTLINED_FUNCTION_23_3((uint64_t)sub_1B255C8DC, MEMORY[0x1E0C809B0], 1107296256, v59, v60);
            OUTLINED_FUNCTION_289();
            swift_release();
            objc_msgSend(a3, sel_getGeoLMRegionIDForLatitude_longitude_reply_, v13, v54, v61);
            goto LABEL_10;
          }
          goto LABEL_51;
        }
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
        return;
      }
      goto LABEL_43;
    }
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
}

void sub_1B255BE4C()
{
  OUTLINED_FUNCTION_4_12();
  __break(1u);
}

void sub_1B255BE7C()
{
  OUTLINED_FUNCTION_4_12();
  __break(1u);
}

uint64_t sub_1B255BEAC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v3[2] = a3;
  v5 = *a2;
  v3[3] = *a2;
  v3[4] = *(_QWORD *)(v5 - 8);
  v6 = (uint64_t *)swift_task_alloc();
  v3[5] = v6;
  result = swift_conformsToProtocol();
  if (result)
  {
    sub_1B2550EE0();
    v8 = *v6;
    v9 = v6[1];
    v10 = a2[1];
    v3[6] = v10;
    v3[7] = *(_QWORD *)(v10 - 8);
    v11 = (uint64_t *)swift_task_alloc();
    v3[8] = v11;
    result = swift_conformsToProtocol();
    if (result)
    {
      sub_1B2550EE0();
      v12 = *v11;
      v13 = v11[1];
      v14 = (_QWORD *)swift_task_alloc();
      v3[9] = v14;
      *v14 = v3;
      v14[1] = sub_1B255C9F8;
      return sub_1B255AEE0(v8, v9, v12, v13);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1B255C034()
{
  OUTLINED_FUNCTION_4_12();
  __break(1u);
}

uint64_t sub_1B255C064(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  double *v6;
  uint64_t result;
  double v8;
  uint64_t v9;
  double *v10;
  double v11;
  _QWORD *v12;

  v3[2] = a3;
  v5 = *a2;
  v3[3] = *a2;
  v3[4] = *(_QWORD *)(v5 - 8);
  v6 = (double *)swift_task_alloc();
  v3[5] = v6;
  result = swift_conformsToProtocol();
  if (result)
  {
    sub_1B2550EE0();
    v8 = *v6;
    v9 = a2[1];
    v3[6] = v9;
    v3[7] = *(_QWORD *)(v9 - 8);
    v10 = (double *)swift_task_alloc();
    v3[8] = v10;
    result = swift_conformsToProtocol();
    if (result)
    {
      sub_1B2550EE0();
      v11 = *v10;
      v12 = (_QWORD *)swift_task_alloc();
      v3[9] = v12;
      *v12 = v3;
      v12[1] = sub_1B255C1E4;
      return sub_1B255B0EC(v8, v11);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1B255C1E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_15_6();
  *v3 = v1;
  v3[1] = v2;
  swift_task_dealloc();
  OUTLINED_FUNCTION_238_1();
  OUTLINED_FUNCTION_45_8();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_72();
  return OUTLINED_FUNCTION_23(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1B255C23C()
{
  OUTLINED_FUNCTION_4_12();
  __break(1u);
}

uint64_t sub_1B255C26C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1B250AF74;
  return sub_1B255B4D8();
}

uint64_t sub_1B255C2B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  *(_QWORD *)(v3 + 16) = a3;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v4;
  *v4 = v3;
  v4[1] = sub_1B255C300;
  return sub_1B255B6A8();
}

uint64_t sub_1B255C300(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  OUTLINED_FUNCTION_53_7(a1);
  return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v3 + 8));
}

uint64_t type metadata accessor for LSRAssets()
{
  return objc_opt_self();
}

uint64_t sub_1B255C360()
{
  uint64_t v0;

  sub_1B25CD6A8();
  type metadata accessor for LSRAssets();
  sub_1B24B87C4(&qword_1EEFD70E0, v0, (uint64_t (*)(uint64_t))type metadata accessor for LSRAssets, (uint64_t)&unk_1B25DF17C);
  sub_1B25CC91C();
  return sub_1B25CD6CC();
}

uint64_t sub_1B255C3D0()
{
  uint64_t v0;
  uint64_t v1;

  if ((sub_1B25CC7C0() & 1) == 0)
  {
    type metadata accessor for LSRAssets();
    sub_1B24B87C4(&qword_1EEFD70D8, v1, (uint64_t (*)(uint64_t))type metadata accessor for LSRAssets, (uint64_t)&unk_1B25DF204);
    return sub_1B25CC76C();
  }
  return v0;
}

uint64_t sub_1B255C43C(uint64_t a1, uint64_t *a2)
{
  return sub_1B255B8C8(*(void **)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16), *a2);
}

uint64_t sub_1B255C464()
{
  return sub_1B255C360();
}

uint64_t sub_1B255C484()
{
  uint64_t v0;

  type metadata accessor for LSRAssets();
  sub_1B24B87C4(&qword_1EEFD70D8, v0, (uint64_t (*)(uint64_t))type metadata accessor for LSRAssets, (uint64_t)&unk_1B25DF204);
  return sub_1B25CC79C();
}

uint64_t sub_1B255C4E0()
{
  sub_1B25CD6A8();
  type metadata accessor for LSRAssets();
  sub_1B25CC91C();
  return sub_1B25CD6CC();
}

uint64_t sub_1B255C534()
{
  uint64_t v0;

  type metadata accessor for LSRAssets();
  sub_1B24B87C4(&qword_1EEFD70D8, v0, (uint64_t (*)(uint64_t))type metadata accessor for LSRAssets, (uint64_t)&unk_1B25DF204);
  return sub_1B25CC790();
}

uint64_t sub_1B255C590()
{
  uint64_t v0;

  type metadata accessor for LSRAssets();
  sub_1B24B87C4(&qword_1EEFD70D8, v0, (uint64_t (*)(uint64_t))type metadata accessor for LSRAssets, (uint64_t)&unk_1B25DF204);
  sub_1B24A1DB8();
  return sub_1B25CC7A8();
}

uint64_t sub_1B255C608@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  type metadata accessor for LSRAssets();
  sub_1B24B87C4(&qword_1EEFD70D8, v3, (uint64_t (*)(uint64_t))type metadata accessor for LSRAssets, (uint64_t)&unk_1B25DF204);
  sub_1B24A1DF4();
  result = sub_1B25CC7B4();
  if (!v1)
    *a1 = result;
  return result;
}

uint64_t sub_1B255C688(uint64_t a1, uint64_t a2)
{
  return sub_1B24B87C4((unint64_t *)&unk_1EEFD67C0, a2, (uint64_t (*)(uint64_t))type metadata accessor for LSRAssets, (uint64_t)&unk_1B25DF154);
}

uint64_t sub_1B255C6B4(uint64_t a1, uint64_t a2)
{
  return sub_1B24B87C4(&qword_1EEFD70E0, a2, (uint64_t (*)(uint64_t))type metadata accessor for LSRAssets, (uint64_t)&unk_1B25DF17C);
}

uint64_t sub_1B255C6E0(uint64_t a1, uint64_t a2)
{
  return sub_1B24B87C4((unint64_t *)&unk_1EEFD70E8, a2, (uint64_t (*)(uint64_t))type metadata accessor for LSRAssets, (uint64_t)&unk_1B25DF1BC);
}

id sub_1B255C70C()
{
  id result;

  result = xpcInterface_LSRAssets();
  qword_1EEFE41C0 = (uint64_t)result;
  return result;
}

uint64_t sub_1B255C730(void *a1, void (*a2)(_QWORD *))
{
  id v4;
  _QWORD v6[4];

  v6[3] = sub_1B24ADA58(0, &qword_1EEFD73E8);
  v6[0] = a1;
  v4 = a1;
  a2(v6);
  return sub_1B24B8848((uint64_t)v6);
}

uint64_t sub_1B255C798(uint64_t a1, uint64_t a2)
{
  return sub_1B255C81C(a1, a2, &qword_1EEFDA568);
}

uint64_t sub_1B255C7AC(uint64_t a1, void (*a2)(_QWORD *), uint64_t a3, uint64_t *a4)
{
  _QWORD v7[4];

  v7[3] = __swift_instantiateConcreteTypeFromMangledName(a4);
  v7[0] = a1;
  swift_bridgeObjectRetain();
  a2(v7);
  return sub_1B24B8848((uint64_t)v7);
}

uint64_t sub_1B255C808(uint64_t a1, uint64_t a2)
{
  return sub_1B255C81C(a1, a2, &qword_1EEFDA570);
}

uint64_t sub_1B255C81C(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  void (*v3)(uint64_t);
  uint64_t v4;

  v3 = *(void (**)(uint64_t))(a1 + 32);
  sub_1B24ADA58(0, a3);
  v4 = sub_1B25CCBA4();
  OUTLINED_FUNCTION_289();
  v3(v4);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B255C87C(uint64_t a1, uint64_t a2, void (*a3)(__int128 *))
{
  __int128 v5;
  __int128 v6;

  if (a2)
  {
    *((_QWORD *)&v6 + 1) = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v5 = a1;
    *((_QWORD *)&v5 + 1) = a2;
  }
  else
  {
    v5 = 0u;
    v6 = 0u;
  }
  swift_bridgeObjectRetain();
  a3(&v5);
  return sub_1B24B8848((uint64_t)&v5);
}

uint64_t sub_1B255C8DC(uint64_t a1, uint64_t a2)
{
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  if (a2)
  {
    v3 = sub_1B25CCA18();
    v5 = v4;
  }
  else
  {
    v3 = 0;
    v5 = 0;
  }
  swift_retain();
  v2(v3, v5);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B255C940()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B255C964(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1B255C87C(a1, a2, *(void (**)(__int128 *))(v2 + 16));
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_1B255C984(uint64_t a1)
{
  uint64_t v1;

  return sub_1B255C7AC(a1, *(void (**)(_QWORD *))(v1 + 16), *(_QWORD *)(v1 + 24), &qword_1EEFD85E0);
}

uint64_t sub_1B255C9A4(uint64_t a1)
{
  uint64_t v1;

  return sub_1B255C7AC(a1, *(void (**)(_QWORD *))(v1 + 16), *(_QWORD *)(v1 + 24), &qword_1EEFD85F8);
}

uint64_t sub_1B255C9C4(void *a1)
{
  uint64_t v1;

  return sub_1B255C730(a1, *(void (**)(_QWORD *))(v1 + 16));
}

uint64_t OUTLINED_FUNCTION_4_12()
{
  return sub_1B25CD45C();
}

uint64_t OUTLINED_FUNCTION_5_10()
{
  return sub_1B25CC7F0();
}

uint64_t OUTLINED_FUNCTION_8_11()
{
  return sub_1B25CC7F0();
}

uint64_t OUTLINED_FUNCTION_10_13()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_13_7()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 160) = v0;
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_15_6()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_23_11()
{
  return sub_1B2550F38();
}

uint64_t OUTLINED_FUNCTION_25_11@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 88);
}

uint64_t OUTLINED_FUNCTION_26_8()
{
  return sub_1B25CCA0C();
}

_OWORD *OUTLINED_FUNCTION_27_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9)
{
  uint64_t v9;

  return sub_1B24AB608((_OWORD *)(v9 - 128), &a9);
}

uint64_t OUTLINED_FUNCTION_29_11(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[2] = v3;
  v1[6] = a1;
  v1[3] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_35_11()
{
  return sub_1B2550F38();
}

uint64_t OUTLINED_FUNCTION_36_7()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[10];
  v0[4] = v0[9];
  v0[5] = v1;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_41_9(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_44_7()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_45_8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_49_8(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = result;
  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_51_5(uint64_t a1)
{
  uint64_t v1;

  return sub_1B251AC38(a1, v1 - 128);
}

uint64_t OUTLINED_FUNCTION_53_7(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_54_8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t OUTLINED_FUNCTION_55_8()
{
  return swift_task_dealloc();
}

BOOL static TaskHint.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t TaskHint.preferredModelTaskNames.getter()
{
  char *v0;

  return (uint64_t)*(&off_1E6483A38 + *v0);
}

uint64_t sub_1B255CC14@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v4 = sub_1B25CC8C8();
  v5 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x1E0C80A78](v4, v6);
  switch(a1)
  {
    case 1001:
      v8 = 3;
      break;
    case 1002:
      v8 = 7;
      break;
    case 1003:
      v8 = 8;
      break;
    case 1004:
      v8 = 9;
      break;
    case 1005:
      v8 = 10;
      break;
    case 1006:
      v8 = 11;
      break;
    case 1007:
      v8 = 12;
      break;
    case 1008:
      v8 = 13;
      break;
    case 1009:
      v8 = 15;
      break;
    case 1010:
      v8 = 14;
      break;
    case 1011:
      v8 = 4;
      break;
    default:
      v8 = 16;
      switch(a1)
      {
        case 0:
          goto LABEL_17;
        case 1:
          v8 = 0;
          break;
        case 2:
          v8 = 1;
          break;
        case 3:
          v8 = 2;
          break;
        default:
          v9 = result;
          if (qword_1ED36CF48 != -1)
            swift_once();
          v10 = __swift_project_value_buffer(v9, (uint64_t)qword_1ED36D980);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(16, v10, v9);
          sub_1B24B3A88();
      }
      return result;
  }
LABEL_17:
  *a2 = v8;
  return result;
}

uint64_t TaskHint.hash(into:)()
{
  return sub_1B25CD6B4();
}

uint64_t TaskHint.hashValue.getter()
{
  sub_1B25CD6A8();
  sub_1B25CD6B4();
  return sub_1B25CD6CC();
}

unint64_t sub_1B255CE24()
{
  unint64_t result;

  result = qword_1EEFDA578;
  if (!qword_1EEFDA578)
  {
    result = MEMORY[0x1B5E261DC](&protocol conformance descriptor for TaskHint, &type metadata for TaskHint);
    atomic_store(result, (unint64_t *)&qword_1EEFDA578);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TaskHint(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF1)
  {
    if (a2 + 15 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 15) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 16;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x10;
  v5 = v6 - 16;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for TaskHint(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_1B255CF34 + 4 * byte_1B25DF278[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_1B255CF68 + 4 * byte_1B25DF273[v4]))();
}

uint64_t sub_1B255CF68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B255CF70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B255CF78);
  return result;
}

uint64_t sub_1B255CF84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B255CF8CLL);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_1B255CF90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B255CF98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TaskHint()
{
  return &type metadata for TaskHint;
}

_QWORD *sub_1B255CFB4(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  char *v13;
  char *v14;
  int *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD *v31;
  _OWORD *v32;
  uint64_t v33;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1B25CC6F4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
    *((_BYTE *)a1 + v8) = *((_BYTE *)a2 + v8);
    v9 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    v10 = a3[9];
    v11 = a3[10];
    v12 = *(void **)((char *)a2 + v10);
    *(_QWORD *)((char *)a1 + v10) = v12;
    v13 = (char *)a1 + v11;
    v14 = (char *)a2 + v11;
    v15 = (int *)type metadata accessor for Transcriber.ModelOptions(0);
    swift_bridgeObjectRetain();
    v16 = v12;
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, (uint64_t)v15))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6B20);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v19 = sub_1B25CC538();
      if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v19))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF08);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v13, v14, v19);
        __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v19);
      }
      v13[v15[5]] = v14[v15[5]];
      v21 = v15[6];
      v22 = &v13[v21];
      v23 = &v14[v21];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v14[v21], 1, v19))
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF08);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v22, v23, v19);
        __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v19);
      }
      v25 = v15[7];
      v26 = &v13[v25];
      v27 = &v14[v25];
      v28 = *((_QWORD *)v27 + 1);
      *(_QWORD *)v26 = *(_QWORD *)v27;
      *((_QWORD *)v26 + 1) = v28;
      *(_QWORD *)&v13[v15[8]] = *(_QWORD *)&v14[v15[8]];
      v13[v15[9]] = v14[v15[9]];
      v13[v15[10]] = v14[v15[10]];
      *(_QWORD *)&v13[v15[11]] = *(_QWORD *)&v14[v15[11]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, (uint64_t)v15);
    }
    v29 = a3[11];
    v30 = a3[12];
    v31 = (_OWORD *)((char *)a1 + v29);
    v32 = (_OWORD *)((char *)a2 + v29);
    *v31 = *v32;
    *(_OWORD *)((char *)v31 + 10) = *(_OWORD *)((char *)v32 + 10);
    *(_QWORD *)((char *)a1 + v30) = *(_QWORD *)((char *)a2 + v30);
    v33 = a3[14];
    *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
    *(_QWORD *)((char *)a1 + v33) = *(_QWORD *)((char *)a2 + v33);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1B255D278(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_1B25CC6F4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();

  v5 = a1 + *(int *)(a2 + 40);
  v6 = type metadata accessor for Transcriber.ModelOptions(0);
  if (!__swift_getEnumTagSinglePayload(v5, 1, v6))
  {
    v7 = sub_1B25CC538();
    if (!__swift_getEnumTagSinglePayload(v5, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
    v8 = v5 + *(int *)(v6 + 24);
    if (!__swift_getEnumTagSinglePayload(v8, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v8, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B255D3B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char *v12;
  char *v13;
  int *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  _OWORD *v30;
  uint64_t v31;

  v6 = sub_1B25CC6F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v9 = a3[9];
  v10 = a3[10];
  v11 = *(void **)(a2 + v9);
  *(_QWORD *)(a1 + v9) = v11;
  v12 = (char *)(a1 + v10);
  v13 = (char *)(a2 + v10);
  v14 = (int *)type metadata accessor for Transcriber.ModelOptions(0);
  swift_bridgeObjectRetain();
  v15 = v11;
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, (uint64_t)v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6B20);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v17 = sub_1B25CC538();
    if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v17))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF08);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v12, v13, v17);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v17);
    }
    v12[v14[5]] = v13[v14[5]];
    v19 = v14[6];
    v20 = &v12[v19];
    v21 = &v13[v19];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v13[v19], 1, v17))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF08);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v20, v21, v17);
      __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v17);
    }
    v23 = v14[7];
    v24 = &v12[v23];
    v25 = &v13[v23];
    v26 = *((_QWORD *)v25 + 1);
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *((_QWORD *)v24 + 1) = v26;
    *(_QWORD *)&v12[v14[8]] = *(_QWORD *)&v13[v14[8]];
    v12[v14[9]] = v13[v14[9]];
    v12[v14[10]] = v13[v14[10]];
    *(_QWORD *)&v12[v14[11]] = *(_QWORD *)&v13[v14[11]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, (uint64_t)v14);
  }
  v27 = a3[11];
  v28 = a3[12];
  v29 = (_OWORD *)(a1 + v27);
  v30 = (_OWORD *)(a2 + v27);
  *v29 = *v30;
  *(_OWORD *)((char *)v29 + 10) = *(_OWORD *)((char *)v30 + 10);
  *(_QWORD *)(a1 + v28) = *(_QWORD *)(a2 + v28);
  v31 = a3[14];
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  *(_QWORD *)(a1 + v31) = *(_QWORD *)(a2 + v31);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B255D648(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  int *v14;
  int EnumTagSinglePayload;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  _OWORD *v43;
  __int128 *v44;
  __int128 v45;

  v6 = sub_1B25CC6F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v7 = a3[9];
  v8 = *(void **)(a1 + v7);
  v9 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = v9;

  v11 = a3[10];
  v12 = (_BYTE *)(a1 + v11);
  v13 = (_BYTE *)(a2 + v11);
  v14 = (int *)type metadata accessor for Transcriber.ModelOptions(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, (uint64_t)v14);
  v16 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, (uint64_t)v14);
  if (!EnumTagSinglePayload)
  {
    if (v16)
    {
      sub_1B24EACC4((uint64_t)v12, type metadata accessor for Transcriber.ModelOptions);
      goto LABEL_7;
    }
    v20 = sub_1B25CC538();
    v21 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v20);
    v22 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v20);
    if (v21)
    {
      if (!v22)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v12, v13, v20);
        __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v20);
        goto LABEL_19;
      }
    }
    else
    {
      v30 = *(_QWORD *)(v20 - 8);
      if (!v22)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v30 + 24))(v12, v13, v20);
LABEL_19:
        v12[v14[5]] = v13[v14[5]];
        v32 = v14[6];
        v33 = &v12[v32];
        v34 = &v13[v32];
        v35 = __swift_getEnumTagSinglePayload((uint64_t)&v12[v32], 1, v20);
        v36 = __swift_getEnumTagSinglePayload((uint64_t)v34, 1, v20);
        if (v35)
        {
          if (!v36)
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v33, v34, v20);
            __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v20);
LABEL_25:
            v39 = v14[7];
            v40 = &v12[v39];
            v41 = &v13[v39];
            *v40 = *v41;
            v40[1] = v41[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(_QWORD *)&v12[v14[8]] = *(_QWORD *)&v13[v14[8]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v12[v14[9]] = v13[v14[9]];
            v12[v14[10]] = v13[v14[10]];
            *(_QWORD *)&v12[v14[11]] = *(_QWORD *)&v13[v14[11]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            goto LABEL_26;
          }
        }
        else
        {
          v37 = *(_QWORD *)(v20 - 8);
          if (!v36)
          {
            (*(void (**)(char *, char *, uint64_t))(v37 + 24))(v33, v34, v20);
            goto LABEL_25;
          }
          (*(void (**)(char *, uint64_t))(v37 + 8))(v33, v20);
        }
        v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF08);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        goto LABEL_25;
      }
      (*(void (**)(_BYTE *, uint64_t))(v30 + 8))(v12, v20);
    }
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF08);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_19;
  }
  if (v16)
  {
LABEL_7:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6B20);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_26;
  }
  v17 = sub_1B25CC538();
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v17))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF08);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v12, v13, v17);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v17);
  }
  v12[v14[5]] = v13[v14[5]];
  v23 = v14[6];
  v24 = &v12[v23];
  v25 = &v13[v23];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v13[v23], 1, v17))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF08);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v24, v25, v17);
    __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v17);
  }
  v27 = v14[7];
  v28 = &v12[v27];
  v29 = &v13[v27];
  *v28 = *v29;
  v28[1] = v29[1];
  *(_QWORD *)&v12[v14[8]] = *(_QWORD *)&v13[v14[8]];
  v12[v14[9]] = v13[v14[9]];
  v12[v14[10]] = v13[v14[10]];
  *(_QWORD *)&v12[v14[11]] = *(_QWORD *)&v13[v14[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, (uint64_t)v14);
LABEL_26:
  v42 = a3[11];
  v43 = (_OWORD *)(a1 + v42);
  v44 = (__int128 *)(a2 + v42);
  v45 = *v44;
  *(_OWORD *)((char *)v43 + 10) = *(__int128 *)((char *)v44 + 10);
  *v43 = v45;
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B255DB50(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  uint64_t v24;

  v6 = sub_1B25CC6F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v9 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v10 = (char *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  v12 = (int *)type metadata accessor for Transcriber.ModelOptions(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, (uint64_t)v12))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6B20);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v14 = sub_1B25CC538();
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v14))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF08);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v10, v11, v14);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v14);
    }
    v10[v12[5]] = v11[v12[5]];
    v16 = v12[6];
    v17 = &v10[v16];
    v18 = &v11[v16];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v11[v16], 1, v14))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF08);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v17, v18, v14);
      __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v14);
    }
    *(_OWORD *)&v10[v12[7]] = *(_OWORD *)&v11[v12[7]];
    *(_QWORD *)&v10[v12[8]] = *(_QWORD *)&v11[v12[8]];
    v10[v12[9]] = v11[v12[9]];
    v10[v12[10]] = v11[v12[10]];
    *(_QWORD *)&v10[v12[11]] = *(_QWORD *)&v11[v12[11]];
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, (uint64_t)v12);
  }
  v20 = a3[11];
  v21 = a3[12];
  v22 = (_OWORD *)(a1 + v20);
  v23 = (_OWORD *)(a2 + v20);
  *v22 = *v23;
  *(_OWORD *)((char *)v22 + 10) = *(_OWORD *)((char *)v23 + 10);
  *(_QWORD *)(a1 + v21) = *(_QWORD *)(a2 + v21);
  v24 = a3[14];
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  *(_QWORD *)(a1 + v24) = *(_QWORD *)(a2 + v24);
  return a1;
}

uint64_t sub_1B255DDAC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  int *v13;
  int EnumTagSinglePayload;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD *v42;
  _OWORD *v43;

  v6 = sub_1B25CC6F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  v7 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v9 = *(void **)(a1 + v8);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);

  v10 = a3[10];
  v11 = (_BYTE *)(a1 + v10);
  v12 = (_BYTE *)(a2 + v10);
  v13 = (int *)type metadata accessor for Transcriber.ModelOptions(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, (uint64_t)v13);
  v15 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, (uint64_t)v13);
  if (!EnumTagSinglePayload)
  {
    if (v15)
    {
      sub_1B24EACC4((uint64_t)v11, type metadata accessor for Transcriber.ModelOptions);
      goto LABEL_7;
    }
    v19 = sub_1B25CC538();
    v20 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v19);
    v21 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v19);
    if (v20)
    {
      if (!v21)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v11, v12, v19);
        __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v19);
        goto LABEL_19;
      }
    }
    else
    {
      v26 = *(_QWORD *)(v19 - 8);
      if (!v21)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v26 + 40))(v11, v12, v19);
LABEL_19:
        v11[v13[5]] = v12[v13[5]];
        v28 = v13[6];
        v29 = &v11[v28];
        v30 = &v12[v28];
        v31 = __swift_getEnumTagSinglePayload((uint64_t)&v11[v28], 1, v19);
        v32 = __swift_getEnumTagSinglePayload((uint64_t)v30, 1, v19);
        if (v31)
        {
          if (!v32)
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v29, v30, v19);
            __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v19);
LABEL_25:
            v35 = v13[7];
            v36 = &v11[v35];
            v37 = (uint64_t *)&v12[v35];
            v39 = *v37;
            v38 = v37[1];
            *v36 = v39;
            v36[1] = v38;
            swift_bridgeObjectRelease();
            *(_QWORD *)&v11[v13[8]] = *(_QWORD *)&v12[v13[8]];
            swift_bridgeObjectRelease();
            v11[v13[9]] = v12[v13[9]];
            v11[v13[10]] = v12[v13[10]];
            *(_QWORD *)&v11[v13[11]] = *(_QWORD *)&v12[v13[11]];
            swift_bridgeObjectRelease();
            goto LABEL_26;
          }
        }
        else
        {
          v33 = *(_QWORD *)(v19 - 8);
          if (!v32)
          {
            (*(void (**)(char *, char *, uint64_t))(v33 + 40))(v29, v30, v19);
            goto LABEL_25;
          }
          (*(void (**)(char *, uint64_t))(v33 + 8))(v29, v19);
        }
        v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF08);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        goto LABEL_25;
      }
      (*(void (**)(_BYTE *, uint64_t))(v26 + 8))(v11, v19);
    }
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF08);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  if (v15)
  {
LABEL_7:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6B20);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_26;
  }
  v16 = sub_1B25CC538();
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v16))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF08);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v11, v12, v16);
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v16);
  }
  v11[v13[5]] = v12[v13[5]];
  v22 = v13[6];
  v23 = &v11[v22];
  v24 = &v12[v22];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v12[v22], 1, v16))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF08);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v23, v24, v16);
    __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v16);
  }
  *(_OWORD *)&v11[v13[7]] = *(_OWORD *)&v12[v13[7]];
  *(_QWORD *)&v11[v13[8]] = *(_QWORD *)&v12[v13[8]];
  v11[v13[9]] = v12[v13[9]];
  v11[v13[10]] = v12[v13[10]];
  *(_QWORD *)&v11[v13[11]] = *(_QWORD *)&v12[v13[11]];
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, (uint64_t)v13);
LABEL_26:
  v40 = a3[11];
  v41 = a3[12];
  v42 = (_OWORD *)(a1 + v40);
  v43 = (_OWORD *)(a2 + v40);
  *v42 = *v43;
  *(_OWORD *)((char *)v42 + 10) = *(_OWORD *)((char *)v43 + 10);
  *(_QWORD *)(a1 + v41) = *(_QWORD *)(a2 + v41);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B255E240()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B255E24C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v6 = OUTLINED_FUNCTION_23_0();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6B20);
    v8 = a1 + *(int *)(a3 + 40);
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1B255E2E8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1B255E2F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = OUTLINED_FUNCTION_23_0();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
      OUTLINED_FUNCTION_262();
      return;
    }
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6B20);
    v10 = a1 + *(int *)(a4 + 40);
  }
  __swift_storeEnumTagSinglePayload(v10, a2, a2, v9);
}

uint64_t type metadata accessor for SpeechRecognizerSupportedFeatures()
{
  uint64_t result;

  result = qword_1EEFD76C0;
  if (!qword_1EEFD76C0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1B255E3BC()
{
  unint64_t v0;
  unint64_t v1;

  sub_1B25CC6F4();
  if (v0 <= 0x3F)
  {
    sub_1B255E474();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_1B255E474()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEFD6B28)
  {
    type metadata accessor for Transcriber.ModelOptions(255);
    v0 = sub_1B25CD108();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEFD6B28);
  }
}

id sub_1B255E4C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  unsigned int v23;
  uint64_t v24;
  int *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  id v39;
  CMTimeValue v40;
  unint64_t v41;
  CMTimeEpoch v42;
  unint64_t v43;
  id v44;
  id v45;
  uint64_t v47;
  char *v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  unsigned int v56;
  unsigned int v57;
  CMTime time;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF08);
  OUTLINED_FUNCTION_30_0();
  v4 = MEMORY[0x1E0C80A78](v2, v3);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4, v7);
  OUTLINED_FUNCTION_752();
  v9 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6B20);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v10, v11);
  OUTLINED_FUNCTION_41_1();
  v14 = v13 - v12;
  v15 = (int *)OUTLINED_FUNCTION_32_4();
  v16 = *(_BYTE *)(a1 + v15[8]);
  v17 = *(_QWORD *)(a1 + v15[13]);
  v18 = *(_QWORD *)(a1 + v15[14]);
  v19 = *(_QWORD *)(a1 + v15[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20 = sub_1B255FF94(v16, v17, v18, v19);
  v21 = (void *)sub_1B25CC670();
  v22 = (void *)sub_1B25CCE2C();
  v23 = *(unsigned __int8 *)(a1 + v15[7]);
  v56 = *(unsigned __int8 *)(a1 + v15[6]);
  v57 = v23;
  v24 = v15[10];
  v55 = *(_QWORD *)(a1 + v15[9]);
  sub_1B24AD25C(a1 + v24, v14, &qword_1EEFD6B20);
  v25 = (int *)OUTLINED_FUNCTION_140_2();
  OUTLINED_FUNCTION_118_0(v14, 1, (uint64_t)v25);
  if (v26)
  {
    sub_1B24EBD4C(v14, &qword_1EEFD6B20);
    v37 = 0;
  }
  else
  {
    v52 = *(unsigned __int8 *)(v14 + v25[5]);
    v54 = v22;
    v51 = v9;
    sub_1B24AD25C(v14, v9, &qword_1ED36CF08);
    sub_1B24AD25C(v14 + v25[6], (uint64_t)v6, &qword_1ED36CF08);
    v27 = v25[7];
    v28 = *(_QWORD *)(v14 + v25[8]);
    v29 = v25[11];
    v53 = v20;
    v30 = *(_QWORD *)(v14 + v29);
    v31 = *(_QWORD *)(v14 + v27 + 8);
    v50 = *(_QWORD *)(v14 + v27);
    v32 = v25[10];
    v49 = *(unsigned __int8 *)(v14 + v25[9]);
    v48 = v6;
    v33 = *(_BYTE *)(v14 + v32);
    v34 = objc_allocWithZone((Class)_SFSpeechRecognizerModelOptions);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v35 = v28;
    v36 = v30;
    v20 = v53;
    v22 = v54;
    v37 = sub_1B25600D8(v52, v51, (uint64_t)v48, v35, v36, v50, v31, v49, v33);
    sub_1B24EACC4(v14, type metadata accessor for Transcriber.ModelOptions);
  }
  v38 = a1 + v15[11];
  if ((*(_BYTE *)(v38 + 25) & 1) != 0)
  {
    v39 = 0;
  }
  else
  {
    if ((*(_BYTE *)(v38 + 24) & 1) != 0)
    {
      v40 = *MEMORY[0x1E0CA2E68];
      LODWORD(v41) = *(_DWORD *)(MEMORY[0x1E0CA2E68] + 8);
      LODWORD(v43) = *(_DWORD *)(MEMORY[0x1E0CA2E68] + 12);
      v42 = *(_QWORD *)(MEMORY[0x1E0CA2E68] + 16);
    }
    else
    {
      v40 = *(_QWORD *)v38;
      v41 = *(_QWORD *)(v38 + 8);
      v42 = *(_QWORD *)(v38 + 16);
      v43 = HIDWORD(v41);
    }
    time.value = v40;
    time.timescale = v41;
    time.flags = v43;
    time.epoch = v42;
    v39 = objc_msgSend(objc_allocWithZone((Class)_SFSpeechRecognizerDetectorOptions), sel_initWithDetectAfterTime_, CMTimeGetSeconds(&time));
  }
  v44 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v45 = objc_msgSend(v44, sel_initWithLocale_taskNames_singleUtterance_concatenateUtterances_voiceCommandActiveSet_modelOptions_detectionOptions_flags_, v21, v22, v56, v57, v55, v37, v39, v20);

  sub_1B24EACC4(a1, (uint64_t (*)(_QWORD))type metadata accessor for SpeechRecognizerSupportedFeatures);
  return v45;
}

void sub_1B255E824(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  void (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v85 = sub_1B25CC538();
  v82 = *(_QWORD *)(v85 - 8);
  MEMORY[0x1E0C80A78](v85, v4);
  OUTLINED_FUNCTION_767();
  v80 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF08);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v6, v7);
  OUTLINED_FUNCTION_29_7();
  v79 = v8;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v79 - v11;
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6980);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v13, v14);
  OUTLINED_FUNCTION_29_7();
  v81 = v15;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v16, v17);
  v19 = (char *)&v79 - v18;
  v20 = OUTLINED_FUNCTION_140_2();
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v21, v22);
  OUTLINED_FUNCTION_29_7();
  v83 = v23;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v24, v25);
  v84 = (uint64_t *)((char *)&v79 - v26);
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v27, v28);
  OUTLINED_FUNCTION_89_4();
  v87 = v29;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v30, v31);
  v86 = (uint64_t)&v79 - v32;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v33, v34);
  OUTLINED_FUNCTION_89_4();
  v36 = v35;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v37, v38);
  OUTLINED_FUNCTION_752();
  v40 = v39;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6B30);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v41, v42);
  OUTLINED_FUNCTION_41_1();
  v45 = v44 - v43;
  v47 = v44 - v43 + *(int *)(v46 + 48);
  OUTLINED_FUNCTION_11_9(a1, v44 - v43);
  OUTLINED_FUNCTION_11_9(a2, v47);
  LODWORD(a1) = OUTLINED_FUNCTION_52_10(v45);
  v48 = OUTLINED_FUNCTION_52_10(v47);
  if ((_DWORD)a1 == 1)
  {
    if (v48 != 1)
      sub_1B24EBD4C(v47, &qword_1EEFD6B20);
    goto LABEL_30;
  }
  if (v48 == 1)
  {
    v49 = v45;
LABEL_29:
    sub_1B24EACC4(v49, type metadata accessor for Transcriber.ModelOptions);
    goto LABEL_30;
  }
  sub_1B25606F4(v45, v40);
  v50 = v36;
  OUTLINED_FUNCTION_30_7(v47);
  v51 = (uint64_t)&v19[*(int *)(v88 + 48)];
  OUTLINED_FUNCTION_11_9(v40, (uint64_t)v19);
  OUTLINED_FUNCTION_11_9(v36, v51);
  v52 = v85;
  OUTLINED_FUNCTION_118_0((uint64_t)v19, 1, v85);
  if (v54)
  {
    v53 = OUTLINED_FUNCTION_118_0(v51, 1, v52);
    if (v54)
    {
      OUTLINED_FUNCTION_45_9(v53, &qword_1ED36CF08);
      OUTLINED_FUNCTION_12_10();
      OUTLINED_FUNCTION_10_14();
      goto LABEL_18;
    }
    goto LABEL_15;
  }
  sub_1B24AD25C((uint64_t)v19, (uint64_t)v12, &qword_1ED36CF08);
  OUTLINED_FUNCTION_118_0(v51, 1, v52);
  if (v54)
  {
    v53 = (*(uint64_t (**)(char *, uint64_t))(v82 + 8))(v12, v52);
LABEL_15:
    OUTLINED_FUNCTION_45_9(v53, &qword_1EEFD6980);
    OUTLINED_FUNCTION_12_10();
    OUTLINED_FUNCTION_10_14();
LABEL_16:
    OUTLINED_FUNCTION_70_5((uint64_t)v19);
    OUTLINED_FUNCTION_70_5((uint64_t)v12);
LABEL_27:
    v62 = v83;
    v64 = v84;
    sub_1B2560774(v40, (uint64_t)v84);
    sub_1B2560774(v50, v62);
LABEL_28:
    OUTLINED_FUNCTION_70_5(v62);
    OUTLINED_FUNCTION_70_5((uint64_t)v64);
    OUTLINED_FUNCTION_70_5(v50);
    v49 = v40;
    goto LABEL_29;
  }
  v55 = v82;
  v56 = v80;
  OUTLINED_FUNCTION_42_12(v80, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v82 + 32));
  sub_1B24FFD30(&qword_1EEFD99E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
  v57 = OUTLINED_FUNCTION_38_8();
  v58 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
  v58(v56, v52);
  v59 = ((uint64_t (*)(char *, uint64_t))v58)(v12, v52);
  OUTLINED_FUNCTION_45_9(v59, &qword_1ED36CF08);
  OUTLINED_FUNCTION_12_10();
  OUTLINED_FUNCTION_10_14();
  if ((v57 & 1) == 0)
    goto LABEL_16;
LABEL_18:
  v60 = *(int *)(v20 + 24);
  v61 = (uint64_t)&v19[v60];
  v62 = v81;
  v63 = v81 + *(int *)(v88 + 48);
  v64 = &qword_1ED36CF08;
  sub_1B24AD25C((uint64_t)&v12[v60], v81, &qword_1ED36CF08);
  sub_1B24AD25C(v61, v63, &qword_1ED36CF08);
  OUTLINED_FUNCTION_118_0(v62, 1, v52);
  if (v54)
  {
    OUTLINED_FUNCTION_216_0((uint64_t)v19);
    OUTLINED_FUNCTION_216_0((uint64_t)v12);
    v66 = OUTLINED_FUNCTION_118_0(v63, 1, v52);
    if (v54)
    {
      OUTLINED_FUNCTION_758(v66, &qword_1ED36CF08);
      OUTLINED_FUNCTION_35_12();
      OUTLINED_FUNCTION_34_6();
      goto LABEL_32;
    }
    goto LABEL_26;
  }
  v67 = v79;
  OUTLINED_FUNCTION_44_8(v62, v65, &qword_1ED36CF08);
  OUTLINED_FUNCTION_118_0(v63, 1, v52);
  if (v68)
  {
    OUTLINED_FUNCTION_70_5(v87);
    OUTLINED_FUNCTION_70_5((uint64_t)v12);
    v66 = (*(uint64_t (**)(uint64_t, uint64_t))(v82 + 8))(v67, v52);
LABEL_26:
    OUTLINED_FUNCTION_758(v66, &qword_1EEFD6980);
    goto LABEL_27;
  }
  v69 = v82;
  v70 = v80;
  OUTLINED_FUNCTION_42_12(v80, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v82 + 32));
  sub_1B24FFD30(&qword_1EEFD99E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
  v71 = OUTLINED_FUNCTION_38_8();
  v64 = *(uint64_t **)(v69 + 8);
  ((void (*)(uint64_t, uint64_t))v64)(v70, v52);
  OUTLINED_FUNCTION_216_0(v87);
  OUTLINED_FUNCTION_216_0(v86);
  v72 = ((uint64_t (*)(uint64_t, uint64_t))v64)(v67, v52);
  OUTLINED_FUNCTION_758(v72, &qword_1ED36CF08);
  OUTLINED_FUNCTION_35_12();
  OUTLINED_FUNCTION_34_6();
  if ((v71 & 1) == 0)
    goto LABEL_28;
LABEL_32:
  v73 = *(int *)(v20 + 28);
  v74 = (uint64_t *)((char *)v64 + v73);
  v75 = *(uint64_t *)((char *)v64 + v73 + 8);
  v76 = (_QWORD *)(v62 + v73);
  v77 = v76[1];
  if (!v75)
  {
    OUTLINED_FUNCTION_47_0();
    OUTLINED_FUNCTION_70_5(v62);
    OUTLINED_FUNCTION_70_5((uint64_t)v64);
    OUTLINED_FUNCTION_70_5(v50);
    OUTLINED_FUNCTION_70_5(v40);
    if (!v77)
      goto LABEL_30;
    goto LABEL_42;
  }
  if (!v77)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_216_0(v62);
    OUTLINED_FUNCTION_216_0((uint64_t)v64);
    OUTLINED_FUNCTION_216_0(v50);
    OUTLINED_FUNCTION_216_0(v40);
LABEL_42:
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
  if (*v74 != *v76 || v75 != v77)
    OUTLINED_FUNCTION_47_11();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_17_10(v62);
  OUTLINED_FUNCTION_17_10((uint64_t)v64);
  OUTLINED_FUNCTION_17_10(v50);
  OUTLINED_FUNCTION_17_10(v40);
  swift_bridgeObjectRelease();
LABEL_30:
  OUTLINED_FUNCTION_7_1();
}

void sub_1B255EE94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t);
  uint64_t (*v54)(uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t EnumTagSinglePayload;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t);
  char v84;
  uint64_t v85;
  void (*v86)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v87;
  int v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  uint64_t (*v105)(uint64_t);
  void (*v106)(uint64_t);
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  char v115;
  uint64_t v116;
  char v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t (*v122)(uint64_t);
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;

  v129 = sub_1B25CC538();
  v125 = *(_QWORD *)(v129 - 8);
  MEMORY[0x1E0C80A78](v129, v4);
  OUTLINED_FUNCTION_767();
  v122 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF08);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v6, v7);
  OUTLINED_FUNCTION_29_7();
  v121 = v8;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v9, v10);
  OUTLINED_FUNCTION_752();
  v124 = v11;
  v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6980);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v12, v13);
  OUTLINED_FUNCTION_29_7();
  v123 = v14;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v15, v16);
  v18 = (char *)&v119 - v17;
  v19 = OUTLINED_FUNCTION_140_2();
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v20, v21);
  OUTLINED_FUNCTION_29_7();
  v128 = v22;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v23, v24);
  OUTLINED_FUNCTION_89_4();
  v131 = v25;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v26, v27);
  OUTLINED_FUNCTION_89_4();
  v130 = v28;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v29, v30);
  OUTLINED_FUNCTION_89_4();
  v136 = v31;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v32, v33);
  v132 = (uint64_t)&v119 - v34;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v35, v36);
  OUTLINED_FUNCTION_89_4();
  v127 = v37;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v38, v39);
  v134 = (uint64_t)&v119 - v40;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v41, v42);
  OUTLINED_FUNCTION_89_4();
  v133 = v43;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v44, v45);
  OUTLINED_FUNCTION_89_4();
  v126 = v46;
  OUTLINED_FUNCTION_42_8();
  v49 = MEMORY[0x1E0C80A78](v47, v48);
  v51 = (char *)&v119 - v50;
  MEMORY[0x1E0C80A78](v49, v52);
  OUTLINED_FUNCTION_89_4();
  v54 = v53;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v55, v56);
  OUTLINED_FUNCTION_752();
  v58 = v57;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6B30);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v59, v60);
  OUTLINED_FUNCTION_41_1();
  v63 = v62 - v61;
  v65 = v62 - v61 + *(int *)(v64 + 48);
  sub_1B24AD25C(a1, v62 - v61, &qword_1EEFD6B20);
  sub_1B24AD25C(a2, v65, &qword_1EEFD6B20);
  LODWORD(a1) = __swift_getEnumTagSinglePayload(v63, 1, v19);
  v66 = v19;
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v65, 1, v19);
  if ((_DWORD)a1 != 1)
  {
    if ((_DWORD)EnumTagSinglePayload == 1)
    {
      v68 = v63;
LABEL_25:
      sub_1B24EACC4(v68, type metadata accessor for Transcriber.ModelOptions);
      goto LABEL_26;
    }
    v69 = v58;
    sub_1B25606F4(v63, v58);
    v70 = (uint64_t)v54;
    sub_1B25606F4(v65, (uint64_t)v54);
    v71 = (uint64_t)&v18[*(int *)(v135 + 48)];
    sub_1B24AD25C(v58, (uint64_t)v18, &qword_1ED36CF08);
    v72 = OUTLINED_FUNCTION_28_11();
    sub_1B24AD25C(v72, v73, &qword_1ED36CF08);
    v74 = v129;
    OUTLINED_FUNCTION_118_0((uint64_t)v18, 1, v129);
    if (v80)
    {
      v75 = OUTLINED_FUNCTION_118_0(v71, 1, v74);
      v76 = v128;
      v77 = v66;
      v78 = v133;
      if (v80)
      {
        OUTLINED_FUNCTION_21_10(v75, &qword_1ED36CF08);
        OUTLINED_FUNCTION_16_9(v69);
        OUTLINED_FUNCTION_9_10();
        goto LABEL_18;
      }
    }
    else
    {
      v79 = v124;
      sub_1B24AD25C((uint64_t)v18, v124, &qword_1ED36CF08);
      OUTLINED_FUNCTION_118_0(v71, 1, v74);
      if (!v80)
      {
        v120 = v66;
        v81 = v125;
        v54 = v122;
        v82 = OUTLINED_FUNCTION_28_11();
        v83(v82);
        sub_1B24FFD30(&qword_1EEFD99E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
        v84 = sub_1B25CC994();
        v85 = v79;
        v86 = *(void (**)(uint64_t (*)(uint64_t), uint64_t))(v81 + 8);
        v77 = v120;
        v86(v54, v74);
        v87 = ((uint64_t (*)(uint64_t, uint64_t))v86)(v85, v74);
        OUTLINED_FUNCTION_21_10(v87, &qword_1ED36CF08);
        OUTLINED_FUNCTION_16_9(v69);
        OUTLINED_FUNCTION_9_10();
        v76 = v128;
        v78 = v133;
        if ((v84 & 1) != 0)
        {
LABEL_18:
          v88 = v51[*(int *)(v77 + 20)];
          v54 = type metadata accessor for Transcriber.ModelOptions;
          sub_1B24EACC4((uint64_t)v51, type metadata accessor for Transcriber.ModelOptions);
          v89 = (uint64_t)v18;
          v90 = v18[*(int *)(v77 + 20)];
          sub_1B24EACC4(v89, type metadata accessor for Transcriber.ModelOptions);
          OUTLINED_FUNCTION_51_6();
          OUTLINED_FUNCTION_25_12();
          if (v88 != v90)
            goto LABEL_19;
          v120 = v77;
          v95 = *(int *)(v77 + 24);
          v96 = (char *)type metadata accessor for Transcriber.ModelOptions + v95;
          v97 = v123;
          v98 = v123 + *(int *)(v135 + 48);
          sub_1B24AD25C(v78 + v95, v123, &qword_1ED36CF08);
          v99 = v97;
          sub_1B24AD25C((uint64_t)v96, v98, &qword_1ED36CF08);
          OUTLINED_FUNCTION_118_0(v97, 1, v74);
          v94 = v74;
          v92 = v130;
          v91 = v131;
          if (v80)
          {
            OUTLINED_FUNCTION_17_10((uint64_t)type metadata accessor for Transcriber.ModelOptions);
            sub_1B24EACC4(v78, type metadata accessor for Transcriber.ModelOptions);
            v101 = OUTLINED_FUNCTION_118_0(v98, 1, v94);
            if (v80)
            {
              OUTLINED_FUNCTION_21_10(v101, &qword_1ED36CF08);
              v93 = v127;
              OUTLINED_FUNCTION_14_7(v69);
              OUTLINED_FUNCTION_24_12();
              goto LABEL_37;
            }
          }
          else
          {
            v102 = v121;
            OUTLINED_FUNCTION_44_8(v99, v100, &qword_1ED36CF08);
            OUTLINED_FUNCTION_118_0(v98, 1, v94);
            if (!v103)
            {
              (*(void (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t))(v125 + 32))(v122, v98, v94);
              sub_1B24FFD30(&qword_1EEFD99E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
              LODWORD(v135) = sub_1B25CC994();
              v106 = *(void (**)(uint64_t))(v125 + 8);
              v107 = OUTLINED_FUNCTION_28_11();
              v106(v107);
              OUTLINED_FUNCTION_70_5(v134);
              OUTLINED_FUNCTION_70_5(v133);
              ((void (*)(uint64_t, uint64_t))v106)(v102, v94);
              sub_1B24EBD4C(v123, &qword_1ED36CF08);
              v93 = v127;
              OUTLINED_FUNCTION_14_7(v69);
              OUTLINED_FUNCTION_24_12();
              if ((v135 & 1) == 0)
                goto LABEL_21;
LABEL_37:
              v108 = *(int *)(v120 + 28);
              v109 = (_QWORD *)(v93 + v108);
              v110 = *(_QWORD *)(v93 + v108 + 8);
              v111 = (_QWORD *)(v94 + v108);
              v112 = v94;
              v113 = v111[1];
              if (v110)
              {
                if (v113)
                {
                  if (*v109 != *v111 || v110 != v113)
                  {
                    v115 = OUTLINED_FUNCTION_47_11();
                    OUTLINED_FUNCTION_776();
                    OUTLINED_FUNCTION_216_0(v132);
                    OUTLINED_FUNCTION_216_0(v93);
                    swift_bridgeObjectRelease();
                    OUTLINED_FUNCTION_20_10();
                    OUTLINED_FUNCTION_16_9(v70);
                    if ((v115 & 1) == 0)
                      goto LABEL_23;
LABEL_51:
                    v116 = v136;
                    sub_1B2523874();
                    v118 = v117;
                    OUTLINED_FUNCTION_216_0(v116);
                    OUTLINED_FUNCTION_216_0(v92);
                    OUTLINED_FUNCTION_50_8();
                    OUTLINED_FUNCTION_30_7(v70);
                    if ((v118 & 1) != 0)
                    {
                      OUTLINED_FUNCTION_70_5(v91);
                      OUTLINED_FUNCTION_70_5(v76);
                      goto LABEL_26;
                    }
                    goto LABEL_24;
                  }
                  OUTLINED_FUNCTION_776();
                  OUTLINED_FUNCTION_216_0(v132);
                  OUTLINED_FUNCTION_216_0(v93);
                  swift_bridgeObjectRelease();
LABEL_50:
                  OUTLINED_FUNCTION_20_10();
                  OUTLINED_FUNCTION_16_9(v70);
                  goto LABEL_51;
                }
                OUTLINED_FUNCTION_776();
                OUTLINED_FUNCTION_216_0(v132);
                OUTLINED_FUNCTION_216_0(v93);
              }
              else
              {
                OUTLINED_FUNCTION_47_0();
                sub_1B24EACC4(v112, type metadata accessor for Transcriber.ModelOptions);
                sub_1B24EACC4(v93, type metadata accessor for Transcriber.ModelOptions);
                if (!v113)
                  goto LABEL_50;
              }
              swift_bridgeObjectRelease();
              goto LABEL_22;
            }
            OUTLINED_FUNCTION_70_5(v134);
            OUTLINED_FUNCTION_70_5(v78);
            v104 = OUTLINED_FUNCTION_28_11();
            v101 = v105(v104);
          }
          OUTLINED_FUNCTION_21_10(v101, &qword_1EEFD6980);
          goto LABEL_20;
        }
LABEL_16:
        OUTLINED_FUNCTION_70_5((uint64_t)v18);
        OUTLINED_FUNCTION_70_5((uint64_t)v51);
        OUTLINED_FUNCTION_51_6();
        OUTLINED_FUNCTION_25_12();
LABEL_19:
        OUTLINED_FUNCTION_70_5((uint64_t)v54);
        OUTLINED_FUNCTION_70_5(v78);
        v92 = v130;
        v91 = v131;
LABEL_20:
        v93 = v127;
        v94 = v132;
        OUTLINED_FUNCTION_14_7(v69);
        sub_1B2560774(v70, v94);
LABEL_21:
        OUTLINED_FUNCTION_70_5(v94);
        OUTLINED_FUNCTION_70_5(v93);
LABEL_22:
        OUTLINED_FUNCTION_20_10();
        OUTLINED_FUNCTION_16_9(v70);
LABEL_23:
        OUTLINED_FUNCTION_70_5(v136);
        OUTLINED_FUNCTION_70_5(v92);
        OUTLINED_FUNCTION_50_8();
        OUTLINED_FUNCTION_30_7(v70);
LABEL_24:
        OUTLINED_FUNCTION_70_5(v76);
        v68 = v91;
        goto LABEL_25;
      }
      v75 = (*(uint64_t (**)(uint64_t, uint64_t))(v125 + 8))(v79, v74);
      v76 = v128;
      v78 = v133;
    }
    OUTLINED_FUNCTION_21_10(v75, &qword_1EEFD6980);
    OUTLINED_FUNCTION_16_9(v69);
    OUTLINED_FUNCTION_9_10();
    goto LABEL_16;
  }
  if ((_DWORD)EnumTagSinglePayload != 1)
    OUTLINED_FUNCTION_758(EnumTagSinglePayload, &qword_1EEFD6B20);
LABEL_26:
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_1B255F76C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, char a5@<W4>, void *a6@<X5>, uint64_t a7@<X6>, __int128 *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v32;
  char v33;
  uint64_t v34;
  __int128 v35;

  v35 = *a8;
  v34 = *((_QWORD *)a8 + 2);
  v32 = *((_BYTE *)a8 + 25);
  v33 = *((_BYTE *)a8 + 24);
  v15 = (int *)OUTLINED_FUNCTION_32_4();
  v16 = v15[9];
  v17 = a9 + v15[11];
  v18 = MEMORY[0x1E0DEE9E8];
  v19 = v15[13];
  *(_QWORD *)(a9 + v19) = MEMORY[0x1E0DEE9E8];
  v20 = v15[14];
  *(_QWORD *)(a9 + v20) = v18;
  v21 = OUTLINED_FUNCTION_23_0();
  v22 = *(_QWORD *)(v21 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(a9, a1, v21);
  *(_QWORD *)(a9 + v15[5]) = a2;
  *(_BYTE *)(a9 + v15[6]) = a3;
  *(_BYTE *)(a9 + v15[7]) = a4;
  *(_BYTE *)(a9 + v15[8]) = a5;
  *(_QWORD *)(a9 + v16) = a6;
  sub_1B24AD25C(a7, a9 + v15[10], &qword_1EEFD6B20);
  *(_OWORD *)v17 = v35;
  *(_QWORD *)(v17 + 16) = v34;
  *(_BYTE *)(v17 + 24) = v33;
  *(_BYTE *)(v17 + 25) = v32;
  *(_QWORD *)(a9 + v15[12]) = a12;
  v23 = a6;
  sub_1B252E3A8();
  *(_QWORD *)(a9 + v19) = v24;
  sub_1B252E3F0();
  v26 = v25;

  *(_QWORD *)(a9 + v20) = v26;
  sub_1B24EBD4C(a7, &qword_1EEFD6B20);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(a1, v21);
}

void sub_1B255F918()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1B252E3F0();
  v2 = v1;
  v3 = *(int *)(OUTLINED_FUNCTION_32_4() + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + v3) = v2;
  OUTLINED_FUNCTION_262();
}

uint64_t sub_1B255F958(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  void *v13;
  id v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;

  v4 = v1;
  v6 = OUTLINED_FUNCTION_140_2();
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v7, v8);
  OUTLINED_FUNCTION_52_6();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6B20);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v9, v10);
  OUTLINED_FUNCTION_228();
  OUTLINED_FUNCTION_23_0();
  sub_1B24FFD30(&qword_1EEFD69B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], MEMORY[0x1E0CB0E58]);
  sub_1B25CC91C();
  v11 = (int *)OUTLINED_FUNCTION_32_4();
  v12 = *(_QWORD *)(v1 + v11[5]);
  OUTLINED_FUNCTION_47_0();
  sub_1B256055C(a1, v12);
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_92_4();
  sub_1B25CD6C0();
  sub_1B25CD6C0();
  v13 = *(void **)(v4 + v11[9]);
  OUTLINED_FUNCTION_92_4();
  if (v13)
  {
    v14 = v13;
    sub_1B25CD0E4();

  }
  sub_1B24AD25C(v4 + v11[10], v3, &qword_1EEFD6B20);
  OUTLINED_FUNCTION_118_0(v3, 1, v6);
  if (v15)
  {
    OUTLINED_FUNCTION_92_4();
  }
  else
  {
    OUTLINED_FUNCTION_30_7(v3);
    OUTLINED_FUNCTION_92_4();
    Transcriber.ModelOptions.hash(into:)();
    sub_1B24EACC4(v2, type metadata accessor for Transcriber.ModelOptions);
  }
  v16 = v4 + v11[11];
  if (*(_BYTE *)(v16 + 25) == 1 || (v17 = *(_BYTE *)(v16 + 24), OUTLINED_FUNCTION_92_4(), (v17 & 1) != 0))
  {
    OUTLINED_FUNCTION_92_4();
  }
  else
  {
    OUTLINED_FUNCTION_92_4();
    sub_1B25CD084();
  }
  v18 = *(_QWORD *)(v4 + v11[12]);
  OUTLINED_FUNCTION_47_0();
  sub_1B25603F0(a1, v18);
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_41_10();
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_41_10();
  return OUTLINED_FUNCTION_173();
}

void sub_1B255FB7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  void *v29;
  char v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  char v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  unint64_t v51;
  int *v52;

  v6 = OUTLINED_FUNCTION_140_2();
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v7, v8);
  OUTLINED_FUNCTION_228();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6B30);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v10, v11);
  OUTLINED_FUNCTION_52_6();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6B20);
  OUTLINED_FUNCTION_30_0();
  v14 = MEMORY[0x1E0C80A78](v12, v13);
  v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v14, v17);
  v20 = (char *)&v49 - v19;
  MEMORY[0x1E0C80A78](v18, v21);
  v23 = (char *)&v49 - v22;
  if ((MEMORY[0x1B5E24628](a1, a2) & 1) == 0)
    goto LABEL_8;
  v24 = OUTLINED_FUNCTION_32_4();
  v25 = OUTLINED_FUNCTION_39_4(*(int *)(v24 + 20));
  sub_1B257FF18(v25, v26);
  if ((v27 & 1) == 0)
    goto LABEL_8;
  OUTLINED_FUNCTION_26_9();
  if (!v35)
    goto LABEL_8;
  OUTLINED_FUNCTION_26_9();
  if (!v35)
    goto LABEL_8;
  OUTLINED_FUNCTION_26_9();
  if (!v35)
    goto LABEL_8;
  v52 = (int *)v24;
  v28 = *(int *)(v24 + 36);
  v29 = *(void **)(a2 + v28);
  if (*(_QWORD *)(a1 + v28))
  {
    if (!v29)
      goto LABEL_8;
    v50 = *(id *)(a1 + v28);
    v51 = sub_1B2560738();
    v49 = v29;
    v50 = v50;
    v30 = sub_1B25CD0D8();

    if ((v30 & 1) == 0)
      goto LABEL_8;
  }
  else if (v29)
  {
    goto LABEL_8;
  }
  v31 = v52;
  sub_1B24AD25C(a1 + v52[10], (uint64_t)v23, &qword_1EEFD6B20);
  OUTLINED_FUNCTION_11_9(a2 + v31[10], (uint64_t)v20);
  v32 = v2 + *(int *)(v9 + 48);
  OUTLINED_FUNCTION_11_9((uint64_t)v23, v2);
  OUTLINED_FUNCTION_11_9((uint64_t)v20, v32);
  OUTLINED_FUNCTION_118_0(v2, 1, v6);
  if (!v35)
  {
    OUTLINED_FUNCTION_44_8(v2, v33, &qword_1EEFD6B20);
    OUTLINED_FUNCTION_118_0(v32, 1, v6);
    if (!v35)
    {
      sub_1B25606F4(v32, v3);
      static Transcriber.ModelOptions.== infix(_:_:)();
      v37 = v36;
      sub_1B24EACC4(v3, type metadata accessor for Transcriber.ModelOptions);
      OUTLINED_FUNCTION_53_8((uint64_t)v20);
      OUTLINED_FUNCTION_53_8((uint64_t)v23);
      sub_1B24EACC4((uint64_t)v16, type metadata accessor for Transcriber.ModelOptions);
      OUTLINED_FUNCTION_53_8(v2);
      if ((v37 & 1) == 0)
        goto LABEL_8;
      goto LABEL_24;
    }
    sub_1B24EBD4C((uint64_t)v20, &qword_1EEFD6B20);
    sub_1B24EBD4C((uint64_t)v23, &qword_1EEFD6B20);
    sub_1B24EACC4((uint64_t)v16, type metadata accessor for Transcriber.ModelOptions);
LABEL_22:
    OUTLINED_FUNCTION_758(v34, &qword_1EEFD6B30);
    goto LABEL_8;
  }
  sub_1B24EBD4C((uint64_t)v20, &qword_1EEFD6B20);
  sub_1B24EBD4C((uint64_t)v23, &qword_1EEFD6B20);
  v34 = OUTLINED_FUNCTION_118_0(v32, 1, v6);
  if (!v35)
    goto LABEL_22;
  OUTLINED_FUNCTION_758(v34, &qword_1EEFD6B20);
LABEL_24:
  v38 = v52;
  v39 = v52[11];
  v40 = a1 + v39;
  v41 = *(_BYTE *)(a1 + v39 + 25);
  v42 = a2 + v39;
  v43 = *(_BYTE *)(v42 + 25);
  if ((v41 & 1) != 0)
    goto LABEL_30;
  if ((*(_BYTE *)(v42 + 25) & 1) != 0)
    goto LABEL_8;
  v43 = *(_BYTE *)(v42 + 24);
  if ((*(_BYTE *)(v40 + 24) & 1) != 0)
  {
LABEL_30:
    if ((v43 & 1) == 0)
      goto LABEL_8;
  }
  else if ((*(_BYTE *)(v42 + 24) & 1) != 0 || (sub_1B25CD060() & 1) == 0)
  {
    goto LABEL_8;
  }
  v44 = OUTLINED_FUNCTION_39_4(v38[12]);
  sub_1B2580180(v44, v45);
  if ((v46 & 1) != 0)
  {
    v47 = OUTLINED_FUNCTION_39_4(v38[13]);
    if ((sub_1B25802B8(v47) & 1) != 0)
    {
      v48 = OUTLINED_FUNCTION_39_4(v38[14]);
      sub_1B25802B8(v48);
    }
  }
LABEL_8:
  OUTLINED_FUNCTION_7_1();
}

void sub_1B255FF00()
{
  _BYTE v0[72];

  sub_1B25CD6A8();
  sub_1B255F958((uint64_t)v0);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1();
}

void sub_1B255FF38()
{
  _BYTE v0[72];

  sub_1B25CD6A8();
  sub_1B255F958((uint64_t)v0);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1();
}

void sub_1B255FF68()
{
  sub_1B24FFD30(&qword_1EEFD76B8, (uint64_t (*)(uint64_t))type metadata accessor for SpeechRecognizerSupportedFeatures, (uint64_t)&unk_1B25DF3B0);
}

uint64_t sub_1B255FF94(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  unsigned __int8 v16;
  unsigned __int8 v17;

  if ((a1 & 1) != 0)
    v6 = 512;
  else
    v6 = 0;
  v7 = v6 & 0xFFFFFFFFFFFFFFFELL | sub_1B251CDC4(4, a2) & 1;
  if ((OUTLINED_FUNCTION_27_8(1) & 1) != 0)
    v7 |= 0x20uLL;
  if ((OUTLINED_FUNCTION_27_8(2) & 1) != 0)
    v7 |= 0x40uLL;
  if ((OUTLINED_FUNCTION_27_8(3) & 1) != 0)
    v8 = v7 | 2;
  else
    v8 = v7;
  v9 = OUTLINED_FUNCTION_27_8(5);
  swift_bridgeObjectRelease();
  if ((v9 & ((v8 & 0x80) == 0)) != 0)
    v10 = v8 | 0x80;
  else
    v10 = v8;
  if ((sub_1B251CDC4(0, a3) & ((v10 & 4) == 0)) != 0)
    v11 = v10 | 4;
  else
    v11 = v10;
  v12 = sub_1B251CDC4(2, a3);
  OUTLINED_FUNCTION_173();
  if ((v12 & ((v11 & 0x100) == 0)) != 0)
    v13 = v11 | 0x100;
  else
    v13 = v11;
  sub_1B251CE50(0, a4);
  if ((v14 & ((v13 & 8) == 0)) != 0)
    v15 = v13 | 8;
  else
    v15 = v13;
  sub_1B251CE50(1, a4);
  v17 = v16;
  swift_bridgeObjectRelease();
  if ((v17 & ((v15 & 0x10) == 0)) != 0)
    return v15 | 0x10;
  else
    return v15;
}

id sub_1B25600D8(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, char a9)
{
  void *v9;
  void *v10;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v25;

  v10 = v9;
  v17 = sub_1B25CC538();
  v18 = 0;
  if (__swift_getEnumTagSinglePayload(a2, 1, v17) != 1)
  {
    v18 = (void *)sub_1B25CC4F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a2, v17);
  }
  if (__swift_getEnumTagSinglePayload(a3, 1, v17) == 1)
  {
    v19 = 0;
  }
  else
  {
    v19 = (void *)sub_1B25CC4F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a3, v17);
  }
  v20 = (void *)sub_1B25CCB98();
  swift_bridgeObjectRelease();
  if (a5)
  {
    v21 = (void *)sub_1B25CC8EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v21 = 0;
  }
  if (a7)
  {
    v22 = (void *)sub_1B25CCA0C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v22 = 0;
  }
  BYTE1(v25) = a9 & 1;
  LOBYTE(v25) = a8 & 1;
  v23 = objc_msgSend(v10, sel_initWithFarField_supplementalModelURL_modelOverrideURL_speechProfileURLs_userIdMask_taskForMemoryLock_atypicalSpeech_enableParallelLoading_, a1 & 1, v18, v19, v20, v21, v22, v25);

  return v23;
}

uint64_t sub_1B2560288(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v12;
  int64_t v13;

  result = sub_1B25CD6CC();
  v4 = 0;
  v5 = 0;
  v6 = a2 + 56;
  v7 = 1 << *(_BYTE *)(a2 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  if (!v9)
    goto LABEL_5;
LABEL_4:
  for (v9 &= v9 - 1; ; v9 = (v12 - 1) & v12)
  {
    sub_1B25CD6A8();
    sub_1B25CD6B4();
    result = OUTLINED_FUNCTION_2();
    v4 ^= result;
    if (v9)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v5++, 1))
      goto LABEL_19;
    if (v5 >= v10)
      return sub_1B25CD6B4();
    v12 = *(_QWORD *)(v6 + 8 * v5);
    if (!v12)
      break;
LABEL_14:
    ;
  }
  v13 = v5 + 1;
  if (v5 + 1 >= v10)
    return sub_1B25CD6B4();
  v12 = *(_QWORD *)(v6 + 8 * v13);
  if (v12)
  {
    ++v5;
    goto LABEL_14;
  }
  while (1)
  {
    v5 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v5 >= v10)
      return sub_1B25CD6B4();
    v12 = *(_QWORD *)(v6 + 8 * v5);
    ++v13;
    if (v12)
      goto LABEL_14;
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_1B25603F0(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v12;
  int64_t v13;

  result = sub_1B25CD6CC();
  v4 = 0;
  v5 = 0;
  v6 = a2 + 56;
  v7 = 1 << *(_BYTE *)(a2 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  if (!v9)
    goto LABEL_5;
LABEL_4:
  for (v9 &= v9 - 1; ; v9 = (v12 - 1) & v12)
  {
    sub_1B25CD6A8();
    sub_1B25CD6B4();
    result = sub_1B25CD6CC();
    v4 ^= result;
    if (v9)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v5++, 1))
      goto LABEL_19;
    if (v5 >= v10)
      return sub_1B25CD6B4();
    v12 = *(_QWORD *)(v6 + 8 * v5);
    if (!v12)
      break;
LABEL_14:
    ;
  }
  v13 = v5 + 1;
  if (v5 + 1 >= v10)
    return sub_1B25CD6B4();
  v12 = *(_QWORD *)(v6 + 8 * v13);
  if (v12)
  {
    ++v5;
    goto LABEL_14;
  }
  while (1)
  {
    v5 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v5 >= v10)
      return sub_1B25CD6B4();
    v12 = *(_QWORD *)(v6 + 8 * v5);
    ++v13;
    if (v12)
      goto LABEL_14;
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_1B256055C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t result;
  uint64_t v9;
  int64_t v10;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;

  sub_1B25CD6CC();
  v3 = a2 + 56;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  v10 = 0;
  if (!v6)
    goto LABEL_5;
LABEL_4:
  for (v6 &= v6 - 1; ; v6 = (v12 - 1) & v12)
  {
    sub_1B25CD6A8();
    swift_bridgeObjectRetain();
    sub_1B25CCAB4();
    v14 = sub_1B25CD6CC();
    result = swift_bridgeObjectRelease();
    v9 ^= v14;
    if (v6)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v10++, 1))
      goto LABEL_19;
    if (v10 >= v7)
    {
LABEL_17:
      swift_release();
      return sub_1B25CD6B4();
    }
    v12 = *(_QWORD *)(v3 + 8 * v10);
    if (!v12)
      break;
LABEL_14:
    ;
  }
  v13 = v10 + 1;
  if (v10 + 1 >= v7)
    goto LABEL_17;
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
  {
    ++v10;
    goto LABEL_14;
  }
  while (1)
  {
    v10 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v10 >= v7)
      goto LABEL_17;
    v12 = *(_QWORD *)(v3 + 8 * v10);
    ++v13;
    if (v12)
      goto LABEL_14;
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_1B25606F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Transcriber.ModelOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B2560738()
{
  unint64_t result;

  result = qword_1EEFD7420;
  if (!qword_1EEFD7420)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EEFD7420);
  }
  return result;
}

uint64_t sub_1B2560774(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Transcriber.ModelOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_9_10()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1B2560774(v0, *(_QWORD *)(v1 - 168));
}

uint64_t OUTLINED_FUNCTION_10_14()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1B2560774(v0, *(_QWORD *)(v1 - 96));
}

void OUTLINED_FUNCTION_11_9(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1B24AD25C(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_12_10()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1B2560774(v0, *(_QWORD *)(v1 - 104));
}

uint64_t OUTLINED_FUNCTION_14_7(uint64_t a1)
{
  uint64_t v1;

  return sub_1B2560774(a1, v1);
}

uint64_t OUTLINED_FUNCTION_16_9(uint64_t a1)
{
  uint64_t v1;

  return sub_1B2560774(a1, v1);
}

void OUTLINED_FUNCTION_17_10(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_1B24EACC4(a1, v1);
}

uint64_t OUTLINED_FUNCTION_20_10()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1B2560774(v0, *(_QWORD *)(v1 - 88));
}

void OUTLINED_FUNCTION_21_10(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_1B24EBD4C(v2, a2);
}

uint64_t OUTLINED_FUNCTION_24_12()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1B2560774(v0, *(_QWORD *)(v1 - 120));
}

uint64_t OUTLINED_FUNCTION_25_12()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1B2560774(v0, *(_QWORD *)(v1 - 104));
}

uint64_t OUTLINED_FUNCTION_27_8(uint64_t a1)
{
  uint64_t v1;

  return sub_1B251CDC4(a1, v1);
}

uint64_t OUTLINED_FUNCTION_28_11()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_30_7(uint64_t a1)
{
  uint64_t v1;

  return sub_1B25606F4(a1, v1);
}

uint64_t OUTLINED_FUNCTION_34_6()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1B2560774(v0, *(_QWORD *)(v1 - 128));
}

uint64_t OUTLINED_FUNCTION_35_12()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1B2560774(v0, *(_QWORD *)(v1 - 120));
}

uint64_t OUTLINED_FUNCTION_38_8()
{
  return sub_1B25CC994();
}

uint64_t OUTLINED_FUNCTION_39_4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + a1);
}

uint64_t OUTLINED_FUNCTION_41_10()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1B2560288(v0, v1);
}

uint64_t OUTLINED_FUNCTION_42_12@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v2, v3);
}

void OUTLINED_FUNCTION_44_8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_1B24AD25C(a1, v3, a3);
}

void OUTLINED_FUNCTION_45_9(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_1B24EBD4C(v2, a2);
}

uint64_t OUTLINED_FUNCTION_47_11()
{
  return sub_1B25CD5D0();
}

uint64_t OUTLINED_FUNCTION_50_8()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1B25606F4(v1, v0);
}

uint64_t OUTLINED_FUNCTION_51_6()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1B2560774(v1, v0);
}

uint64_t OUTLINED_FUNCTION_52_10(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

void OUTLINED_FUNCTION_53_8(uint64_t a1)
{
  uint64_t *v1;

  sub_1B24EBD4C(a1, v1);
}

uint64_t sub_1B2560900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_1B25CD5D0();
}

uint64_t sub_1B256091C(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];

  sub_1B2599AA0(v19);
  v3 = v19[0];
  v4 = v19[1];
  v5 = v19[3];
  v6 = v19[4];
  v7 = (unint64_t)(v19[2] + 64) >> 6;
  result = swift_bridgeObjectRetain();
  if (!v6)
    goto LABEL_3;
LABEL_2:
  v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  v10 = v9 | (v5 << 6);
  while (1)
  {
    v15 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v10);
    v16 = *v15;
    v17 = v15[1];
    v18 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2(v16, v17, v18);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_2;
LABEL_3:
    v11 = v5 + 1;
    if (__OFADD__(v5, 1))
      break;
    if (v11 >= v7)
      return swift_release();
    v12 = *(_QWORD *)(v4 + 8 * v11);
    v13 = v5 + 1;
    if (!v12)
    {
      v13 = v5 + 2;
      if (v5 + 2 >= v7)
        return swift_release();
      v12 = *(_QWORD *)(v4 + 8 * v13);
      if (!v12)
      {
        v13 = v5 + 3;
        if (v5 + 3 >= v7)
          return swift_release();
        v12 = *(_QWORD *)(v4 + 8 * v13);
        if (!v12)
        {
          v13 = v5 + 4;
          if (v5 + 4 >= v7)
            return swift_release();
          v12 = *(_QWORD *)(v4 + 8 * v13);
          if (!v12)
          {
            v13 = v5 + 5;
            if (v5 + 5 >= v7)
              return swift_release();
            v12 = *(_QWORD *)(v4 + 8 * v13);
            if (!v12)
            {
              v14 = v5 + 6;
              while (v14 < v7)
              {
                v12 = *(_QWORD *)(v4 + 8 * v14++);
                if (v12)
                {
                  v13 = v14 - 1;
                  goto LABEL_18;
                }
              }
              return swift_release();
            }
          }
        }
      }
    }
LABEL_18:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    v5 = v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B2560A9C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v2[3] = a1;
  v2[4] = a2;
  v3 = (_QWORD *)swift_task_alloc();
  v2[5] = v3;
  *v3 = v2;
  v3[1] = sub_1B2560AE8;
  return AudioBufferSequence.next()();
}

uint64_t sub_1B2560AE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 48) = v1;
  swift_task_dealloc();
  if (!v1)
    return OUTLINED_FUNCTION_35_0(a1, *(uint64_t (**)(void))(v4 + 8));
  if (*(_QWORD *)(v4 + 24))
  {
    swift_getObjectType();
    sub_1B25CCC40();
  }
  return OUTLINED_FUNCTION_88_4();
}

uint64_t sub_1B2560B84()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36D060);
  swift_willThrowTypedImpl();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B2560BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[3] = a1;
  v3[4] = v2;
  if (a2)
  {
    swift_getObjectType();
    v4 = sub_1B25CCC40();
    v6 = v5;
  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  v3[5] = v4;
  v3[6] = v6;
  return swift_task_switch();
}

uint64_t sub_1B2560C50()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(_QWORD);

  v1 = (_QWORD *)OUTLINED_FUNCTION_39();
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_1B2560CA8;
  return v3(*(_QWORD *)(v0 + 24));
}

uint64_t sub_1B2560CA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_176();
  v3 = *v2;
  *v4 = v3;
  *(_QWORD *)(v0 + 64) = v1;
  swift_task_dealloc();
  if (v1)
    return OUTLINED_FUNCTION_0_0();
  else
    return OUTLINED_FUNCTION_68(*(uint64_t (**)(void))(v3 + 8));
}

uint64_t sub_1B2560CFC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 64);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36D060);
  swift_willThrowTypedImpl();
  return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1B2560D4C()
{
  sub_1B2560D70();
}

void sub_1B2560D70()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  void (*v4)(_QWORD);
  void (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_123_2();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  __swift_instantiateConcreteTypeFromMangledName(v8);
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v9, v10);
  OUTLINED_FUNCTION_229();
  v11 = *v0;
  if (!*(_QWORD *)(*v0 + 16))
  {
    __break(1u);
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v5(*v0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(v3);
  if (__swift_getEnumTagSinglePayload(v1, 1, v12) != 1)
  {
    sub_1B24EBCE4(v1, v7, v3);
    if (*(_QWORD *)(v11 + 16))
    {
      sub_1B2569BA0();
      OUTLINED_FUNCTION_462();
      return;
    }
    goto LABEL_6;
  }
LABEL_7:
  __break(1u);
}

void SFCustomLanguageModelData.PhraseCount.phrase.getter()
{
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_0();
}

uint64_t SFCustomLanguageModelData.PhraseCount.count.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t SFCustomLanguageModelData.PhraseCount.description.getter()
{
  uint64_t v1;

  v1 = sub_1B25CD570();
  OUTLINED_FUNCTION_79_4();
  OUTLINED_FUNCTION_331_0();
  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_61_6();
  OUTLINED_FUNCTION_71_9();
  sub_1B25CCAE4();
  OUTLINED_FUNCTION_101_1();
  return v1;
}

void SFCustomLanguageModelData.PhraseCount.insert(data:)()
{
  __int128 *v0;
  uint64_t v1;
  __int128 v2;
  uint64_t v3;

  v1 = *((_QWORD *)v0 + 2);
  v2 = *v0;
  v3 = v1;
  sub_1B25647D0((uint64_t *)&v2);
  OUTLINED_FUNCTION_714();
}

uint64_t sub_1B2560F24(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x657361726870 && a2 == 0xE600000000000000;
  if (v2 || (sub_1B25CD5D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E756F63 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1B25CD5D0();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1B2561000()
{
  return 2;
}

uint64_t sub_1B2561008(char a1)
{
  if ((a1 & 1) != 0)
    return 0x746E756F63;
  else
    return 0x657361726870;
}

void sub_1B2561038()
{
  sub_1B2562054();
}

uint64_t sub_1B2561054()
{
  char *v0;

  return sub_1B2561008(*v0);
}

uint64_t sub_1B256105C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B2560F24(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2561080()
{
  return sub_1B25558B0();
}

uint64_t sub_1B256109C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B2561000();
  *a1 = result;
  return result;
}

uint64_t sub_1B25610C0()
{
  sub_1B2564858();
  return sub_1B25CD720();
}

uint64_t sub_1B25610E8()
{
  sub_1B2564858();
  return sub_1B25CD72C();
}

void SFCustomLanguageModelData.PhraseCount.encode(to:)()
{
  sub_1B256218C();
}

void SFCustomLanguageModelData.PhraseCount.init(from:)()
{
  sub_1B25622EC();
}

void sub_1B256117C()
{
  SFCustomLanguageModelData.PhraseCount.init(from:)();
}

void sub_1B2561190()
{
  SFCustomLanguageModelData.PhraseCount.encode(to:)();
}

uint64_t SFCustomLanguageModelData.CustomPronunciation.phonemes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SFCustomLanguageModelData.CustomPronunciation.description.getter()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_bridgeObjectRetain();
  sub_1B25CCAE4();
  OUTLINED_FUNCTION_79_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CFD0);
  sub_1B24BFF74();
  sub_1B25CC940();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_133();
  OUTLINED_FUNCTION_119_2();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_267();
  return v2;
}

void SFCustomLanguageModelData.CustomPronunciation.insert(data:)()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;

  v1 = *(_QWORD *)v0;
  v2 = *(_OWORD *)(v0 + 8);
  sub_1B25648F8(&v1);
  OUTLINED_FUNCTION_714();
}

uint64_t SFCustomLanguageModelData.CustomPronunciation.hash(into:)()
{
  OUTLINED_FUNCTION_61_6();
  OUTLINED_FUNCTION_39_5();
  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_38_0();
  sub_1B253122C();
  return swift_bridgeObjectRelease();
}

void static SFCustomLanguageModelData.CustomPronunciation.== infix(_:_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  _QWORD *v4;
  _QWORD *v5;

  OUTLINED_FUNCTION_75_10(a1);
  v3 = v3 && v1 == v2;
  if (v3 || (OUTLINED_FUNCTION_303_0() & 1) != 0)
  {
    v4 = (_QWORD *)OUTLINED_FUNCTION_38_0();
    sub_1B2522954(v4, v5);
  }
}

uint64_t sub_1B2561328(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x656D656870617267 && a2 == 0xE800000000000000;
  if (v2 || (sub_1B25CD5D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73656D656E6F6870 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1B25CD5D0();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1B256141C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x73656D656E6F6870;
  else
    return 0x656D656870617267;
}

uint64_t sub_1B256144C()
{
  char *v0;

  return sub_1B256141C(*v0);
}

uint64_t sub_1B2561454@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B2561328(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2561478()
{
  sub_1B2569E2C();
  return sub_1B25CD720();
}

uint64_t sub_1B25614A0()
{
  sub_1B2569E2C();
  return sub_1B25CD72C();
}

void SFCustomLanguageModelData.CustomPronunciation.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_326_0();
  v2 = v1;
  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDA598) - 8);
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v3, v4);
  OUTLINED_FUNCTION_42_3();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1B2569E2C();
  sub_1B25CD708();
  sub_1B25CD528();
  if (!v0)
  {
    OUTLINED_FUNCTION_192_2();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CFD0);
    sub_1B2569E68((uint64_t)&unk_1EEFDA5A8);
    sub_1B25CD540();
  }
  OUTLINED_FUNCTION_96_6(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  OUTLINED_FUNCTION_49_4();
}

void SFCustomLanguageModelData.CustomPronunciation.hashValue.getter()
{
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_133();
  OUTLINED_FUNCTION_57_5();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_47_0();
  sub_1B253122C();
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_286_2();
}

void SFCustomLanguageModelData.CustomPronunciation.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_326_0();
  v2 = v1;
  v4 = v3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDA5B0);
  MEMORY[0x1E0C80A78](v5, v6);
  OUTLINED_FUNCTION_228();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1B2569E2C();
  sub_1B25CD6FC();
  if (v0)
  {
    OUTLINED_FUNCTION_105_4();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_179_3();
    v9 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CFD0);
    OUTLINED_FUNCTION_192_2();
    sub_1B2569E68((uint64_t)&unk_1EEFDA5B8);
    OUTLINED_FUNCTION_224_0();
    sub_1B25CD510();
    OUTLINED_FUNCTION_66_3();
    *v4 = v7;
    v4[1] = v9;
    v4[2] = v10;
    OUTLINED_FUNCTION_47_0();
    OUTLINED_FUNCTION_105_4();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_365();
  }
  OUTLINED_FUNCTION_49_4();
}

uint64_t sub_1B25617B4()
{
  sub_1B25CD6A8();
  swift_bridgeObjectRetain();
  sub_1B25CCAB4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B253122C();
  swift_bridgeObjectRelease();
  return sub_1B25CD6CC();
}

void sub_1B2561834()
{
  SFCustomLanguageModelData.CustomPronunciation.init(from:)();
}

void sub_1B2561848()
{
  SFCustomLanguageModelData.CustomPronunciation.encode(to:)();
}

void sub_1B2561864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_123_2();
  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v2 = v0 + 32;
    OUTLINED_FUNCTION_79_4();
    do
    {
      OUTLINED_FUNCTION_55_9();
      v2 += 40;
      --v1;
    }
    while (v1);
    OUTLINED_FUNCTION_53_9();
  }
  else
  {
    OUTLINED_FUNCTION_462();
  }
}

void sub_1B25618B4()
{
  sub_1B2561864();
}

void static SFCustomLanguageModelData.DataInsertableBuilder.buildEither(first:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B256A020(a1, a2);
}

void static SFCustomLanguageModelData.DataInsertableBuilder.buildOptional(_:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  sub_1B24EBCB8(a1, (uint64_t)&v12, (uint64_t *)&unk_1EEFDA5C0);
  if (v13)
  {
    OUTLINED_FUNCTION_156_1(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
  }
  else
  {
    a2[3] = &unk_1E647E628;
    a2[4] = &off_1E647E608;
    *a2 = MEMORY[0x1E0DEE9D8];
    sub_1B24EBD4C((uint64_t)&v12, (uint64_t *)&unk_1EEFDA5C0);
  }
  OUTLINED_FUNCTION_167_2();
}

uint64_t static SFCustomLanguageModelData.DataInsertableBuilder.buildArray(_:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return OUTLINED_FUNCTION_82_7(a1, a2);
}

uint64_t sub_1B2561954()
{
  type metadata accessor for SFCustomLanguageModelData.PhraseCountGenerator.Iterator();
  return swift_allocObject();
}

uint64_t SFCustomLanguageModelData.PhraseCountGenerator.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t sub_1B2561984()
{
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B2561990()
{
  return sub_1B25CD45C();
}

uint64_t SFCustomLanguageModelData.PhraseCountGenerator.Iterator.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1B2561A10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(**(_QWORD **)v1 + 80) + *(_QWORD *)(**(_QWORD **)v1 + 80));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1B2508AAC;
  return v6(a1);
}

uint64_t sub_1B2561A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v4 + 16) = a4;
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EEFDA8A0 + dword_1EEFDA8A0);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v8;
  *v8 = v4;
  v8[1] = sub_1B2561B00;
  return v10(a1, a2, a3);
}

uint64_t sub_1B2561B00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_176();
  v3 = *v2;
  OUTLINED_FUNCTION_19_0(v4);
  if (v1)
    **(_QWORD **)(v0 + 16) = v1;
  return OUTLINED_FUNCTION_68(*(uint64_t (**)(void))(v3 + 8));
}

uint64_t static SFCustomLanguageModelData.PhraseCountGenerator.== infix(_:_:)()
{
  return 0;
}

void sub_1B2561B54()
{
  sub_1B2564894();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1B2561B78()
{
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1B2561B94()
{
  return 0;
}

uint64_t sub_1B2561BA4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B2561B78();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1B2561BCC()
{
  return sub_1B25558B0();
}

uint64_t sub_1B2561BE4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_94_3();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1B2561C0C()
{
  sub_1B2569ED8();
  return sub_1B25CD720();
}

uint64_t sub_1B2561C34()
{
  sub_1B2569ED8();
  return sub_1B25CD72C();
}

uint64_t sub_1B2561C60(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDA5D0);
  MEMORY[0x1E0C80A78](v2, v3);
  OUTLINED_FUNCTION_52_6();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B2569ED8();
  sub_1B25CD708();
  v4 = OUTLINED_FUNCTION_431();
  return v5(v4);
}

void sub_1B2561D10()
{
  uint64_t v0;
  _BYTE v1[72];

  OUTLINED_FUNCTION_4();
  (*(void (**)(_BYTE *))(*(_QWORD *)v0 + 96))(v1);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1();
}

void SFCustomLanguageModelData.PhraseCountGenerator.__allocating_init(from:)(uint64_t a1)
{
  swift_allocObject();
  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  OUTLINED_FUNCTION_90_7();
}

uint64_t SFCustomLanguageModelData.PhraseCountGenerator.init(from:)(uint64_t a1)
{
  uint64_t v1;

  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  return v1;
}

void sub_1B2561DAC()
{
  sub_1B2561D10();
}

void sub_1B2561DCC()
{
  uint64_t v0;

  (*(void (**)(void))(**(_QWORD **)v0 + 96))();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1B2561DF0()
{
  uint64_t v0;
  _BYTE v2[72];

  sub_1B25CD6A8();
  (*(void (**)(_BYTE *))(**(_QWORD **)v0 + 96))(v2);
  return sub_1B25CD6CC();
}

uint64_t sub_1B2561E34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 128))();
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t sub_1B2561E60(_QWORD *a1)
{
  return sub_1B2561C60(a1);
}

uint64_t sub_1B2561E74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = (*(uint64_t (**)(void))(**(_QWORD **)v1 + 80))();
  result = swift_release();
  *a1 = v3;
  return result;
}

void sub_1B2561EB8()
{
  sub_1B2561B54();
}

void SFCustomLanguageModelData.TemplatePhraseCountGenerator.Template.insert(generator:)()
{
  uint64_t *v0;

  sub_1B2562AFC(*v0, v0[1], v0[2]);
  OUTLINED_FUNCTION_0();
}

void _s6Speech25SFCustomLanguageModelDataC11PhraseCountV4hash4intoys6HasherVz_tF_0()
{
  OUTLINED_FUNCTION_61_6();
  OUTLINED_FUNCTION_39_5();
  OUTLINED_FUNCTION_101_1();
  sub_1B25CD6B4();
  OUTLINED_FUNCTION_262();
}

BOOL _s6Speech25SFCustomLanguageModelDataC11PhraseCountV2eeoiySbAE_AEtFZ_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char v6;
  _BOOL8 result;

  OUTLINED_FUNCTION_75_10(a1);
  v5 = v5 && v3 == v4;
  if (v5)
    return v1 == v2;
  v6 = OUTLINED_FUNCTION_303_0();
  result = 0;
  if ((v6 & 1) != 0)
    return v1 == v2;
  return result;
}

uint64_t sub_1B2561F80(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 2036625250 && a2 == 0xE400000000000000;
  if (v2 || (sub_1B25CD5D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E756F63 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1B25CD5D0();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_1B2562054()
{
  OUTLINED_FUNCTION_4();
  sub_1B25CD6B4();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1B2562084(char a1)
{
  if ((a1 & 1) != 0)
    return 0x746E756F63;
  else
    return 2036625250;
}

void sub_1B25620B0()
{
  sub_1B25CD6A8();
  sub_1B25CD6B4();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1B25620E4()
{
  char *v0;

  return sub_1B2562084(*v0);
}

uint64_t sub_1B25620EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B2561F80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B2562110()
{
  sub_1B2569F14();
  return sub_1B25CD720();
}

uint64_t sub_1B2562138()
{
  sub_1B2569F14();
  return sub_1B25CD72C();
}

void SFCustomLanguageModelData.TemplatePhraseCountGenerator.Template.encode(to:)()
{
  sub_1B256218C();
}

void sub_1B256218C()
{
  uint64_t v0;
  void (*v1)(void);
  _QWORD *v2;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void);
  uint64_t v8;

  OUTLINED_FUNCTION_326_0();
  v7 = v1;
  v3 = v2;
  v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(v4) - 8);
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v5, v6);
  OUTLINED_FUNCTION_42_3();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  v7();
  sub_1B25CD708();
  sub_1B25CD528();
  if (!v0)
  {
    OUTLINED_FUNCTION_192_2();
    sub_1B25CD534();
  }
  OUTLINED_FUNCTION_96_6(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  OUTLINED_FUNCTION_49_4();
}

void _s6Speech25SFCustomLanguageModelDataC11PhraseCountV9hashValueSivg_0()
{
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_133();
  OUTLINED_FUNCTION_57_5();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_39_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_286_2();
}

void SFCustomLanguageModelData.TemplatePhraseCountGenerator.Template.init(from:)()
{
  sub_1B25622EC();
}

void sub_1B25622EC()
{
  uint64_t v0;
  void (*v1)(void);
  void (*v2)(void);
  _QWORD *v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;

  OUTLINED_FUNCTION_326_0();
  v2 = v1;
  v4 = v3;
  v12 = v5;
  v13 = __swift_instantiateConcreteTypeFromMangledName(v6);
  MEMORY[0x1E0C80A78](v13, v7);
  OUTLINED_FUNCTION_228();
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  v2();
  sub_1B25CD6FC();
  if (v0)
  {
    OUTLINED_FUNCTION_105_4();
  }
  else
  {
    v8 = OUTLINED_FUNCTION_179_3();
    v10 = v9;
    OUTLINED_FUNCTION_192_2();
    OUTLINED_FUNCTION_79_4();
    v11 = sub_1B25CD504();
    OUTLINED_FUNCTION_67_8();
    *v12 = v8;
    v12[1] = v10;
    v12[2] = v11;
    OUTLINED_FUNCTION_105_4();
    OUTLINED_FUNCTION_365();
  }
  OUTLINED_FUNCTION_49_4();
}

void sub_1B256240C()
{
  sub_1B25CD6A8();
  OUTLINED_FUNCTION_133();
  OUTLINED_FUNCTION_57_5();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_39_3();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_286_2();
}

void sub_1B256244C()
{
  SFCustomLanguageModelData.TemplatePhraseCountGenerator.Template.init(from:)();
}

void sub_1B2562460()
{
  SFCustomLanguageModelData.TemplatePhraseCountGenerator.Template.encode(to:)();
}

void SFCustomLanguageModelData.TemplatePhraseCountGenerator.Iterator.__allocating_init(templates:templateClasses:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_8_4();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  OUTLINED_FUNCTION_262();
}

uint64_t SFCustomLanguageModelData.TemplatePhraseCountGenerator.Iterator.init(templates:templateClasses:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return OUTLINED_FUNCTION_143_4();
}

uint64_t sub_1B25624B0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[15] = a1;
  v2[16] = v1;
  OUTLINED_FUNCTION_23_0();
  v2[17] = OUTLINED_FUNCTION_7_0();
  sub_1B25CCA00();
  v2[18] = OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B2562500()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t (*v22)(void);
  uint64_t result;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  _QWORD *v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v1 = v0[16] + 16;
  OUTLINED_FUNCTION_15_3();
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
  {
    v4 = (_QWORD *)v0[15];
    *v4 = 0;
    v4[1] = 0;
    v4[2] = 0;
LABEL_25:
    swift_task_dealloc();
    OUTLINED_FUNCTION_36();
    v22 = (uint64_t (*)(void))OUTLINED_FUNCTION_66();
    return v22();
  }
  OUTLINED_FUNCTION_25_3();
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
  {
    result = swift_endAccess();
    __break(1u);
    return result;
  }
  sub_1B2569F50((uint64_t)&v63);
  v2 = v64;
  v62 = v0;
  if (v64)
  {
    v57 = v65;
    v3 = v63;
  }
  else
  {
    v5 = *(_QWORD *)v1;
    v6 = *(_QWORD *)(*(_QWORD *)v1 + 16);
    v2 = v6 - 1;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
LABEL_41:
      sub_1B25306C0();
      v5 = v56;
    }
    v7 = *(_QWORD *)(v5 + 16);
    if (v2 >= v7)
    {
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      swift_once();
      goto LABEL_39;
    }
    v8 = v7 - 1;
    v9 = v7 - 1 - v2;
    v10 = v5 + 32 + 24 * v2;
    v2 = *(_QWORD *)(v10 + 8);
    v57 = *(_QWORD *)(v10 + 16);
    v11 = *(_QWORD *)v10;
    sub_1B2569058((char *)(v5 + 32 + 24 * v6), v9, (char *)v10);
    *(_QWORD *)(v5 + 16) = v8;
    v3 = v11;
    *(_QWORD *)v1 = v5;
  }
  swift_endAccess();
  v12 = HIBYTE(v2) & 0xF;
  v63 = v3;
  v64 = v2;
  if ((v2 & 0x2000000000000000) == 0)
    v12 = v3 & 0xFFFFFFFFFFFFLL;
  v65 = 0;
  v66 = v12;
  OUTLINED_FUNCTION_133();
  v13 = sub_1B25CCAF0();
  if (!v14)
  {
LABEL_24:
    v21 = (uint64_t *)v62[15];
    swift_bridgeObjectRelease();
    *v21 = v3;
    v21[1] = v2;
    v21[2] = v57;
    goto LABEL_25;
  }
  v15 = v13;
  v16 = v14;
  v17 = 0;
  v18 = 0;
  v0 = v62 + 8;
  v6 = 1;
  while (1)
  {
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v16 == 0xE100000000000000 && v15 == 60 || (OUTLINED_FUNCTION_303_0() & 1) != 0)
    {
      v6 = 0;
      v18 = v17;
    }
    if (v16 != 0xE100000000000000 || v15 != 62)
      break;
    OUTLINED_FUNCTION_173();
    if ((v6 & 1) == 0)
      goto LABEL_27;
    v6 = 1;
LABEL_23:
    v15 = sub_1B25CCAF0();
    v16 = v20;
    ++v17;
    if (!v20)
      goto LABEL_24;
  }
  v19 = OUTLINED_FUNCTION_303_0();
  OUTLINED_FUNCTION_173();
  if (v6 & 1 | ((v19 & 1) == 0))
    goto LABEL_23;
LABEL_27:
  swift_bridgeObjectRelease();
  if (__OFADD__(v18, 1))
    goto LABEL_43;
  swift_bridgeObjectRetain_n();
  v24 = OUTLINED_FUNCTION_177_3();
  OUTLINED_FUNCTION_107();
  swift_bridgeObjectRetain();
  v25 = OUTLINED_FUNCTION_177_3();
  OUTLINED_FUNCTION_107();
  if (v25 >> 14 < v24 >> 14)
    goto LABEL_44;
  v0 = v62;
  v26 = v62[16];
  v60 = sub_1B25CCB2C();
  v28 = v27;
  v30 = v29;
  v32 = v31;
  OUTLINED_FUNCTION_107();
  v33 = MEMORY[0x1B5E24A3C](v60, v28, v30, v32);
  v35 = v34;
  OUTLINED_FUNCTION_173();
  v36 = *(_QWORD *)(v26 + 24);
  OUTLINED_FUNCTION_47_0();
  sub_1B254910C(v33, v35, v36);
  v38 = v37;
  OUTLINED_FUNCTION_601();
  OUTLINED_FUNCTION_173();
  if (!v38)
  {
    OUTLINED_FUNCTION_107();
    OUTLINED_FUNCTION_477();
    sub_1B25CC9AC();
    if (qword_1EEFD8028 != -1)
      goto LABEL_46;
LABEL_39:
    v53 = (id)qword_1EEFDB360;
    sub_1B25CC6AC();
    OUTLINED_FUNCTION_17();
    v54 = OUTLINED_FUNCTION_95_6();
    OUTLINED_FUNCTION_709(7, v55, v54, v55);
    swift_willThrow();
    swift_task_dealloc();
    OUTLINED_FUNCTION_48();
    v22 = (uint64_t (*)(void))v0[1];
    return v22();
  }
  v61 = (uint64_t *)v1;
  v39 = *(_QWORD *)(v38 + 16);
  if (!v39)
    goto LABEL_45;
  v40 = (uint64_t *)(v38 + 40);
  v58 = v57 / v39;
  v59 = v3;
  do
  {
    v41 = *(v40 - 1);
    v42 = *v40;
    v62[11] = v3;
    v62[12] = v2;
    OUTLINED_FUNCTION_178();
    swift_bridgeObjectRetain();
    v63 = sub_1B25CCB20();
    v64 = v43;
    OUTLINED_FUNCTION_178();
    OUTLINED_FUNCTION_176_2();
    OUTLINED_FUNCTION_176_2();
    OUTLINED_FUNCTION_345();
    v62[13] = v41;
    v62[14] = v42;
    sub_1B2569FC4();
    sub_1B25CCA9C();
    OUTLINED_FUNCTION_601();
    v44 = v63;
    v45 = v64;
    OUTLINED_FUNCTION_25_3();
    v46 = *v61;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v61 = v46;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      OUTLINED_FUNCTION_164_1();
      v46 = v50;
      *v61 = v50;
    }
    v48 = *(_QWORD *)(v46 + 16);
    if (v48 >= *(_QWORD *)(v46 + 24) >> 1)
    {
      OUTLINED_FUNCTION_164_1();
      v46 = v51;
      *v61 = v51;
    }
    *(_QWORD *)(v46 + 16) = v48 + 1;
    v49 = (_QWORD *)(v46 + 24 * v48);
    v49[4] = v44;
    v49[5] = v45;
    v49[6] = v58;
    swift_endAccess();
    v40 += 2;
    --v39;
    v3 = v59;
  }
  while (v39);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_160_3();
  v52 = (_QWORD *)swift_task_alloc();
  v62[19] = v52;
  *v52 = v62;
  v52[1] = sub_1B2562A9C;
  return sub_1B25624B0(v62[15]);
}

uint64_t sub_1B2562A9C()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_176();
  v1 = *v0;
  OUTLINED_FUNCTION_19_0(v2);
  swift_task_dealloc();
  OUTLINED_FUNCTION_48();
  return OUTLINED_FUNCTION_68(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t SFCustomLanguageModelData.TemplatePhraseCountGenerator.Iterator.__deallocating_deinit()
{
  SFCustomLanguageModelData.TemplatePhraseCountGenerator.Iterator.deinit();
  OUTLINED_FUNCTION_456();
  return swift_deallocClassInstance();
}

void sub_1B2562AFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  OUTLINED_FUNCTION_25_3();
  OUTLINED_FUNCTION_61_6();
  sub_1B2568D10((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B252BD74);
  v7 = *(_QWORD *)(*(_QWORD *)(v3 + 16) + 16);
  sub_1B2568E40(v7, (uint64_t (*)(BOOL))sub_1B252BD74);
  v8 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(v8 + 16) = v7 + 1;
  v9 = (_QWORD *)(v8 + 24 * v7);
  v9[4] = a1;
  v9[5] = a2;
  v9[6] = a3;
  OUTLINED_FUNCTION_93_7();
  OUTLINED_FUNCTION_438();
}

void sub_1B2562B8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_133_3();
  OUTLINED_FUNCTION_25_3();
  OUTLINED_FUNCTION_133();
  v2 = OUTLINED_FUNCTION_79_0();
  sub_1B2569600(v2, v1, v0);
  OUTLINED_FUNCTION_93_7();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_223();
}

uint64_t sub_1B2562BDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_15_3();
  v1 = *(_QWORD *)(v0 + 16);
  OUTLINED_FUNCTION_15_3();
  v2 = *(_QWORD *)(v0 + 24);
  type metadata accessor for SFCustomLanguageModelData.TemplatePhraseCountGenerator.Iterator();
  v3 = OUTLINED_FUNCTION_8_4();
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_47_0();
  return v3;
}

uint64_t static SFCustomLanguageModelData.TemplatePhraseCountGenerator.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  _QWORD *v5;
  char v6;
  char v7;
  uint64_t v8;
  char v9;

  OUTLINED_FUNCTION_15_3();
  v4 = *(_QWORD **)(a1 + 24);
  OUTLINED_FUNCTION_15_3();
  v5 = *(_QWORD **)(a2 + 24);
  OUTLINED_FUNCTION_133();
  OUTLINED_FUNCTION_61_6();
  sub_1B252B2F0(v4, v5);
  v7 = v6;
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_101_1();
  if ((v7 & 1) != 0)
  {
    OUTLINED_FUNCTION_15_3();
    v8 = *(_QWORD *)(a1 + 16);
    OUTLINED_FUNCTION_15_3();
    sub_1B2522804(v8, *(_QWORD *)(a2 + 16));
  }
  else
  {
    v9 = 0;
  }
  return v9 & 1;
}

uint64_t sub_1B2562CF4()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_15_3();
  OUTLINED_FUNCTION_133();
  v0 = OUTLINED_FUNCTION_71_9();
  sub_1B253144C(v0, v1);
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_15_3();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_38_0();
  sub_1B2531170();
  return OUTLINED_FUNCTION_173();
}

void SFCustomLanguageModelData.TemplatePhraseCountGenerator.__allocating_init()()
{
  OUTLINED_FUNCTION_8_4();
  SFCustomLanguageModelData.TemplatePhraseCountGenerator.init()();
  OUTLINED_FUNCTION_0();
}

void SFCustomLanguageModelData.TemplatePhraseCountGenerator.init()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = MEMORY[0x1E0DEE9D8];
  OUTLINED_FUNCTION_289();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CFD0);
  *(_QWORD *)(v0 + 24) = sub_1B25CC904();
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_0();
}

void SFCustomLanguageModelData.TemplatePhraseCountGenerator.__allocating_init(from:)(uint64_t a1)
{
  OUTLINED_FUNCTION_456();
  swift_allocObject();
  SFCustomLanguageModelData.TemplatePhraseCountGenerator.init(from:)(a1);
  OUTLINED_FUNCTION_90_7();
}

uint64_t SFCustomLanguageModelData.TemplatePhraseCountGenerator.init(from:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = MEMORY[0x1E0DEE9D8];
  OUTLINED_FUNCTION_289();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CFD0);
  *(_QWORD *)(v1 + 24) = sub_1B25CC904();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  return v1;
}

uint64_t sub_1B2562E9C()
{
  OUTLINED_FUNCTION_98_6();
  return swift_bridgeObjectRelease();
}

uint64_t _s6Speech25SFCustomLanguageModelDataC28TemplatePhraseCountGeneratorC8IteratorCfd_0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_98_6();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SFCustomLanguageModelData.CompoundTemplate.init(_:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void SFCustomLanguageModelData.CompoundTemplate.insert(generator:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_123_2();
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (v1)
  {
    v2 = *(_QWORD *)v0 + 32;
    OUTLINED_FUNCTION_79_0();
    do
    {
      OUTLINED_FUNCTION_55_9();
      v2 += 40;
      --v1;
    }
    while (v1);
    OUTLINED_FUNCTION_53_9();
  }
  else
  {
    OUTLINED_FUNCTION_462();
  }
}

void static SFCustomLanguageModelData.TemplateInsertableBuilder.buildOptional(_:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  sub_1B24EBCB8(a1, (uint64_t)&v12, (uint64_t *)&unk_1EEFDA608);
  if (v13)
  {
    OUTLINED_FUNCTION_156_1(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
  }
  else
  {
    a2[3] = &type metadata for SFCustomLanguageModelData.CompoundTemplate;
    a2[4] = &protocol witness table for SFCustomLanguageModelData.CompoundTemplate;
    *a2 = MEMORY[0x1E0DEE9D8];
    sub_1B24EBD4C((uint64_t)&v12, (uint64_t *)&unk_1EEFDA608);
  }
  OUTLINED_FUNCTION_167_2();
}

uint64_t _s6Speech25SFCustomLanguageModelDataC25TemplateInsertableBuilderV10buildBlockyAA0fG0_pAaG_pd_tFZ_0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return OUTLINED_FUNCTION_82_7(a1, a2);
}

uint64_t SFCustomLanguageModelData.PhraseCountsFromTemplates.init(classes:builder:)()
{
  void (*v0)(_QWORD *__return_ptr, uint64_t);
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t result;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_629();
  v3 = v2;
  type metadata accessor for SFCustomLanguageModelData.TemplatePhraseCountGenerator();
  v4 = OUTLINED_FUNCTION_8_4();
  SFCustomLanguageModelData.TemplatePhraseCountGenerator.init()();
  v14 = v4;
  sub_1B256091C(v1, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B256A080);
  v5 = OUTLINED_FUNCTION_107();
  v0(v11, v5);
  v6 = v12;
  v7 = v13;
  __swift_project_boxed_opaque_existential_1(v11, v12);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 8);
  v9 = swift_retain();
  v8(v9, v6, v7);
  swift_release();
  result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v11);
  *v3 = v14;
  return result;
}

uint64_t sub_1B2563084()
{
  swift_retain();
  sub_1B2562B8C();
  return swift_release();
}

void SFCustomLanguageModelData.PhraseCountsFromTemplates.insert(data:)()
{
  sub_1B2564894();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1B25630FC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[25] = a1;
  v2[26] = v1;
  v3 = sub_1B25CCA54();
  v2[27] = v3;
  v2[28] = *(_QWORD *)(v3 - 8);
  v2[29] = OUTLINED_FUNCTION_7_0();
  v4 = OUTLINED_FUNCTION_70_3();
  v2[30] = v4;
  v2[31] = *(_QWORD *)(v4 - 8);
  v2[32] = OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B2563188()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t (*v5)(void);
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  void *v24;
  _QWORD *v25;
  uint64_t (*v26)(void);
  id v27;
  uint64_t v28;

  OUTLINED_FUNCTION_17();
  v1 = sub_1B25CC5A4();
  v2 = *(_QWORD *)(v0 + 256);
  OUTLINED_FUNCTION_73_4(v1, &qword_1EEFDA8C8);
  v3 = OUTLINED_FUNCTION_189_2();
  v4(v3);
  *(_QWORD *)(v0 + 264) = sub_1B25639D4(v2);
  v7 = *(_QWORD *)(v0 + 208);
  OUTLINED_FUNCTION_15_3();
  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 16) + 16);
  if (v8)
  {
    v28 = *(_QWORD *)(v0 + 224);
    v9 = (_QWORD *)(swift_bridgeObjectRetain() + 48);
    do
    {
      v10 = *(_QWORD *)(v0 + 232);
      v11 = *(_QWORD *)(v0 + 216);
      *(_QWORD *)(v0 + 184) = *v9;
      OUTLINED_FUNCTION_224_0();
      sub_1B25CD570();
      OUTLINED_FUNCTION_79_4();
      OUTLINED_FUNCTION_331_0();
      OUTLINED_FUNCTION_345();
      OUTLINED_FUNCTION_178();
      sub_1B25CCAE4();
      OUTLINED_FUNCTION_345();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_224_0();
      OUTLINED_FUNCTION_331_0();
      swift_bridgeObjectRelease();
      sub_1B25CCA48();
      v12 = sub_1B25CCA24();
      v14 = v13;
      OUTLINED_FUNCTION_345();
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v10, v11);
      if (v14 >> 60 == 15)
        __break(1u);
      *(_QWORD *)(v0 + 88) = v12;
      *(_QWORD *)(v0 + 96) = v14;
      sub_1B256B6C0();
      sub_1B25CCFAC();
      v9 += 3;
      OUTLINED_FUNCTION_154_3();
      --v8;
    }
    while (v8);
    OUTLINED_FUNCTION_160_3();
  }
  v15 = *(_QWORD *)(v0 + 208);
  OUTLINED_FUNCTION_15_3();
  v16 = *(_QWORD *)(v15 + 32);
  *(_QWORD *)(v0 + 272) = v16;
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    v17 = sub_1B25CD474();
  }
  else
  {
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)(v0 + 280) = v17;
  v18 = *(_QWORD *)(v0 + 272);
  if (v17)
  {
    v19 = v18 & 0xC000000000000001;
    sub_1B24B1AF4(0, (v18 & 0xC000000000000001) == 0, v18);
    v20 = *(_QWORD *)(v0 + 272);
    if (v19)
    {
      v21 = MEMORY[0x1B5E252C4](0, v20);
    }
    else
    {
      v21 = *(_QWORD *)(v20 + 32);
      OUTLINED_FUNCTION_289();
    }
    *(_QWORD *)(v0 + 288) = v21;
    *(_QWORD *)(v0 + 296) = 1;
    *(_QWORD *)(v0 + 168) = (*(uint64_t (**)(void))(*(_QWORD *)v21 + 80))();
    v25 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 304) = v25;
    *v25 = v0;
    v25[1] = sub_1B2563588;
    OUTLINED_FUNCTION_17();
    return v26();
  }
  else
  {
    v22 = swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 192) = 0;
    v23 = OUTLINED_FUNCTION_256(v22, sel_closeAndReturnError_);
    v24 = *(void **)(v0 + 264);
    if (v23)
    {
      OUTLINED_FUNCTION_159_2();

      OUTLINED_FUNCTION_48();
      OUTLINED_FUNCTION_95();
      v5 = *(uint64_t (**)(void))(v0 + 8);
    }
    else
    {
      v27 = *(id *)(v0 + 192);
      OUTLINED_FUNCTION_190_3();

      swift_willThrow();
      swift_task_dealloc();
      OUTLINED_FUNCTION_36();
      v5 = *(uint64_t (**)(void))(v0 + 8);
    }
    return v5();
  }
}

uint64_t sub_1B2563588()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_176();
  *v3 = *v2;
  *(_QWORD *)(v0 + 312) = v1;
  swift_task_dealloc();
  if (v1)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_88_4();
}

uint64_t sub_1B256362C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  void *v12;
  uint64_t (*v13)(void);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  void *v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  _QWORD *v24;
  uint64_t (*v25)(void);

  if (!*(_QWORD *)(v0 + 48))
  {
    v14 = *(_QWORD *)(v0 + 296);
    v15 = *(_QWORD *)(v0 + 280);
    OUTLINED_FUNCTION_148_2();
    OUTLINED_FUNCTION_38_2();
    if (v14 == v15)
    {
      v16 = swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 192) = 0;
      v17 = OUTLINED_FUNCTION_256(v16, sel_closeAndReturnError_);
      v18 = *(void **)(v0 + 264);
      if (v17)
      {
        OUTLINED_FUNCTION_159_2();

        OUTLINED_FUNCTION_48();
        OUTLINED_FUNCTION_95();
        v13 = *(uint64_t (**)(void))(v0 + 8);
        return v13();
      }
      v23 = *(id *)(v0 + 192);
      OUTLINED_FUNCTION_190_3();

      OUTLINED_FUNCTION_109_6();
LABEL_5:
      OUTLINED_FUNCTION_175_3();
      OUTLINED_FUNCTION_48();
      v13 = *(uint64_t (**)(void))(v0 + 8);
      return v13();
    }
    v19 = *(_QWORD *)(v0 + 296);
    v20 = *(_QWORD *)(v0 + 272);
    v21 = v20 & 0xC000000000000001;
    sub_1B24B1AF4(v19, (v20 & 0xC000000000000001) == 0, v20);
    if (v21)
      v22 = MEMORY[0x1B5E252C4](v19, *(_QWORD *)(v0 + 272));
    else
      v22 = swift_retain();
    *(_QWORD *)(v0 + 288) = v22;
    *(_QWORD *)(v0 + 296) = v19 + 1;
    if (__OFADD__(v19, 1))
      __break(1u);
    *(_QWORD *)(v0 + 168) = (*(uint64_t (**)(void))(*(_QWORD *)v22 + 80))();
    goto LABEL_17;
  }
  v2 = *(_QWORD *)(v0 + 224);
  v1 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 216);
  *(_QWORD *)(v0 + 176) = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 104) = sub_1B25CD570();
  *(_QWORD *)(v0 + 112) = v4;
  OUTLINED_FUNCTION_79_4();
  OUTLINED_FUNCTION_331_0();
  OUTLINED_FUNCTION_601();
  v5 = *(_QWORD *)(v0 + 112);
  *(_QWORD *)(v0 + 152) = *(_QWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 160) = v5;
  swift_bridgeObjectRetain();
  sub_1B25CCAE4();
  OUTLINED_FUNCTION_601();
  OUTLINED_FUNCTION_44_1();
  v6 = *(_QWORD *)(v0 + 160);
  *(_QWORD *)(v0 + 120) = *(_QWORD *)(v0 + 152);
  *(_QWORD *)(v0 + 128) = v6;
  OUTLINED_FUNCTION_776();
  OUTLINED_FUNCTION_331_0();
  OUTLINED_FUNCTION_44_1();
  sub_1B25CCA48();
  v7 = sub_1B25CCA24();
  v9 = v8;
  OUTLINED_FUNCTION_173();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (v9 >> 60 != 15)
  {
    v11 = *(_QWORD *)(v0 + 312);
    *(_QWORD *)(v0 + 136) = v7;
    *(_QWORD *)(v0 + 144) = v9;
    sub_1B256B6C0();
    sub_1B25CCFAC();
    if (v11)
    {
      v12 = *(void **)(v0 + 264);
      swift_release();

      OUTLINED_FUNCTION_178_2();
      OUTLINED_FUNCTION_148_2();
      OUTLINED_FUNCTION_10_0();
      goto LABEL_5;
    }
    OUTLINED_FUNCTION_178_2();
LABEL_17:
    v24 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 304) = v24;
    *v24 = v0;
    v24[1] = sub_1B2563588;
    OUTLINED_FUNCTION_17();
    return v25();
  }
  __break(1u);
  return result;
}

uint64_t sub_1B2563958()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 264);
  swift_release();

  OUTLINED_FUNCTION_148_2();
  OUTLINED_FUNCTION_175_3();
  OUTLINED_FUNCTION_48();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1B25639D4(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  id v7;
  id v8;
  uint64_t v9;
  id v11[2];

  v11[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = (void *)sub_1B25CC4F0();
  v11[0] = 0;
  v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fileHandleForWritingToURL_error_, v2, v11);

  v4 = v11[0];
  if (v3)
  {
    v5 = sub_1B25CC538();
    v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
    v7 = v4;
    v6(a1, v5);
  }
  else
  {
    v8 = v11[0];
    sub_1B25CC4D8();

    swift_willThrow();
    v9 = sub_1B25CC538();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
  }
  return v3;
}

void sub_1B2563AE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;

  OUTLINED_FUNCTION_326_0();
  v2 = sub_1B25CCA54();
  OUTLINED_FUNCTION_89_6();
  MEMORY[0x1E0C80A78](v3, v4);
  OUTLINED_FUNCTION_767();
  v20 = v5;
  sub_1B25CD2DC();
  v27 = 0;
  v28 = 0xE000000000000000;
  OUTLINED_FUNCTION_477();
  sub_1B25CCAE4();
  v23 = sub_1B25CC634();
  v24 = v6;
  v21 = 45;
  *(_QWORD *)&v22 = 0xE100000000000000;
  v25 = 95;
  v26 = 0xE100000000000000;
  sub_1B24BFEF8();
  sub_1B25CD15C();
  OUTLINED_FUNCTION_365();
  sub_1B25CCAE4();
  swift_bridgeObjectRelease();
  sub_1B25CCAE4();
  OUTLINED_FUNCTION_15_3();
  v7 = *(_QWORD *)(v0 + 24);
  v8 = *(_QWORD *)(v7 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v18 = v1;
    v19 = v2;
    v29 = MEMORY[0x1E0DEE9D8];
    OUTLINED_FUNCTION_224_0();
    sub_1B2505328();
    v9 = v29;
    v10 = (_OWORD *)(v7 + 40);
    do
    {
      v21 = *((_QWORD *)v10 - 1);
      v22 = *v10;
      sub_1B2563DE4((uint64_t)&v21, &v25);
      v11 = v25;
      v12 = v26;
      v13 = *(_QWORD *)(v29 + 16);
      if (v13 >= *(_QWORD *)(v29 + 24) >> 1)
        sub_1B2505328();
      v10 = (_OWORD *)((char *)v10 + 24);
      *(_QWORD *)(v29 + 16) = v13 + 1;
      v14 = v29 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v11;
      *(_QWORD *)(v14 + 40) = v12;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    v2 = v19;
    v1 = v18;
  }
  v21 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CFD0);
  sub_1B24BFF74();
  sub_1B25CC940();
  swift_bridgeObjectRelease();
  sub_1B25CCAE4();
  swift_bridgeObjectRelease();
  sub_1B25CCAE4();
  sub_1B25CCA48();
  v15 = sub_1B25CCA24();
  v17 = v16;
  OUTLINED_FUNCTION_365();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v20, v2);
  if (v17 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    sub_1B25CC5A4();
    sub_1B24B890C(v15, v17);
    OUTLINED_FUNCTION_49_4();
  }
}

uint64_t sub_1B2563DE4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  sub_1B25CD2DC();
  swift_bridgeObjectRelease();
  sub_1B24BFEF8();
  sub_1B25CD15C();
  sub_1B25CD15C();
  swift_bridgeObjectRelease();
  sub_1B25CD15C();
  swift_bridgeObjectRelease();
  sub_1B25CD15C();
  swift_bridgeObjectRelease();
  sub_1B25CD15C();
  swift_bridgeObjectRelease();
  sub_1B25CCAE4();
  swift_bridgeObjectRelease();
  sub_1B25CCAE4();
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v10 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1B2505328();
    v4 = v2 + 40;
    do
    {
      v9 = v3;
      swift_bridgeObjectRetain();
      sub_1B25CD2DC();
      swift_bridgeObjectRelease();
      sub_1B25CD15C();
      sub_1B25CD15C();
      swift_bridgeObjectRelease();
      sub_1B25CD15C();
      swift_bridgeObjectRelease();
      sub_1B25CD15C();
      swift_bridgeObjectRelease();
      sub_1B25CD15C();
      swift_bridgeObjectRelease();
      sub_1B25CCAE4();
      swift_bridgeObjectRelease();
      sub_1B25CCAE4();
      swift_bridgeObjectRelease();
      v5 = *(_QWORD *)(v10 + 16);
      if (v5 >= *(_QWORD *)(v10 + 24) >> 1)
        sub_1B2505328();
      v4 += 16;
      *(_QWORD *)(v10 + 16) = v5 + 1;
      v6 = v10 + 16 * v5;
      *(_QWORD *)(v6 + 32) = 0x656E6F68703C0909;
      *(_QWORD *)(v6 + 40) = 0xEB000000003E656DLL;
      --v3;
    }
    while (v9 != 1);
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CFD0);
  sub_1B24BFF74();
  sub_1B25CC940();
  swift_bridgeObjectRelease();
  sub_1B25CCAE4();
  swift_bridgeObjectRelease();
  result = sub_1B25CCAE4();
  *a2 = 0xD000000000000016;
  a2[1] = 0x80000001B25D58E0;
  return result;
}

uint64_t SFCustomLanguageModelData.locale.getter()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  OUTLINED_FUNCTION_23_0();
  v0 = OUTLINED_FUNCTION_38_0();
  return v1(v0);
}

void SFCustomLanguageModelData.identifier.getter()
{
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_0();
}

void SFCustomLanguageModelData.version.getter()
{
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_0();
}

void static SFCustomLanguageModelData.supportedPhonemes(locale:)()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  SEL *v3;
  void *v4;

  sub_1B25CC634();
  sub_1B24BFEF8();
  sub_1B25CD15C();
  OUTLINED_FUNCTION_10_0();
  v0 = objc_allocWithZone(MEMORY[0x1E0D1F158]);
  v1 = OUTLINED_FUNCTION_189_2();
  sub_1B2568C08(v1, v2, v3);
  if (v4)
  {
    if (sub_1B2569C9C(v4))
    {
      OUTLINED_FUNCTION_286_2();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void SFCustomLanguageModelData.__allocating_init(locale:identifier:version:)()
{
  OUTLINED_FUNCTION_629();
  swift_allocObject();
  SFCustomLanguageModelData.init(locale:identifier:version:)();
  OUTLINED_FUNCTION_233();
}

void SFCustomLanguageModelData.init(locale:identifier:version:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_59_0();
  v16 = v2;
  v17 = v3;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = OUTLINED_FUNCTION_23_0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v12);
  OUTLINED_FUNCTION_56_0();
  v13 = MEMORY[0x1E0DEE9D8];
  v0[2] = MEMORY[0x1E0DEE9D8];
  v0[3] = v13;
  v0[4] = v13;
  sub_1B25CC634();
  OUTLINED_FUNCTION_146_1();
  sub_1B24BFEF8();
  OUTLINED_FUNCTION_51_7();
  sub_1B25CD15C();
  OUTLINED_FUNCTION_345();
  OUTLINED_FUNCTION_189_2();
  sub_1B25CC628();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))((uint64_t)v0 + OBJC_IVAR____TtC6Speech25SFCustomLanguageModelData_locale, v1, v10);
  v14 = (_QWORD *)((char *)v0 + OBJC_IVAR____TtC6Speech25SFCustomLanguageModelData_identifier);
  *v14 = v7;
  v14[1] = v5;
  v15 = (_QWORD *)((char *)v0 + OBJC_IVAR____TtC6Speech25SFCustomLanguageModelData_version);
  *v15 = v16;
  v15[1] = v17;
  OUTLINED_FUNCTION_7_1();
}

void SFCustomLanguageModelData.__allocating_init(locale:identifier:version:builder:)()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(_QWORD *__return_ptr, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(_QWORD *__return_ptr, uint64_t);
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_59_0();
  v12 = v2;
  v4 = v3;
  v5 = OUTLINED_FUNCTION_23_0();
  OUTLINED_FUNCTION_89_6();
  MEMORY[0x1E0C80A78](v6, v7);
  OUTLINED_FUNCTION_56_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 16))(v1, v4, v5);
  type metadata accessor for SFCustomLanguageModelData(0);
  v8 = swift_allocObject();
  SFCustomLanguageModelData.init(locale:identifier:version:)();
  v9 = swift_retain();
  v12(v13, v9);
  v10 = v14;
  v11 = v15;
  __swift_project_boxed_opaque_existential_1(v13, v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 8))(v8, v10, v11);
  swift_release();
  OUTLINED_FUNCTION_249_0(v4, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v13);
  OUTLINED_FUNCTION_7_1();
}

void sub_1B25647D0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(BOOL);
  uint64_t v8;
  _QWORD *v9;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  OUTLINED_FUNCTION_25_3();
  OUTLINED_FUNCTION_133();
  sub_1B2568D10((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B252C2A0);
  v5 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 16);
  v6 = OUTLINED_FUNCTION_431();
  sub_1B2568E40(v6, v7);
  v8 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v8 + 16) = v5 + 1;
  v9 = (_QWORD *)(v8 + 24 * v5);
  v9[4] = v3;
  v9[5] = v2;
  v9[6] = v4;
  OUTLINED_FUNCTION_93_7();
  OUTLINED_FUNCTION_438();
}

unint64_t sub_1B2564858()
{
  unint64_t result;

  result = qword_1EEFDA588;
  if (!qword_1EEFDA588)
  {
    result = MEMORY[0x1B5E261DC](&unk_1B25E0108, &type metadata for SFCustomLanguageModelData.PhraseCount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEFDA588);
  }
  return result;
}

void sub_1B2564894()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_25_3();
  v1 = OUTLINED_FUNCTION_122_0();
  MEMORY[0x1B5E24B38](v1);
  sub_1B2568E14(*(_QWORD *)((*(_QWORD *)(v0 + 32) & 0xFFFFFFFFFFFFF8) + 0x10));
  OUTLINED_FUNCTION_71_9();
  sub_1B25CCC04();
  sub_1B25CCBBC();
  OUTLINED_FUNCTION_93_7();
  OUTLINED_FUNCTION_223();
}

void sub_1B25648F8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  OUTLINED_FUNCTION_25_3();
  OUTLINED_FUNCTION_133();
  OUTLINED_FUNCTION_61_6();
  sub_1B2568D10((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B252C350);
  v5 = *(_QWORD *)(*(_QWORD *)(v1 + 24) + 16);
  sub_1B2568E40(v5, (uint64_t (*)(BOOL))sub_1B252C350);
  v6 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v6 + 16) = v5 + 1;
  v7 = (_QWORD *)(v6 + 24 * v5);
  v7[4] = v3;
  v7[5] = v2;
  v7[6] = v4;
  OUTLINED_FUNCTION_93_7();
  OUTLINED_FUNCTION_438();
}

uint64_t sub_1B2564988(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[5] = a1;
  v2[6] = v1;
  v3 = OUTLINED_FUNCTION_70_3();
  v2[7] = v3;
  v2[8] = *(_QWORD *)(v3 - 8);
  v2[9] = OUTLINED_FUNCTION_92();
  v2[10] = OUTLINED_FUNCTION_92();
  v2[11] = OUTLINED_FUNCTION_92();
  v2[12] = OUTLINED_FUNCTION_92();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B2564A1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  void (*v6)(uint64_t, uint64_t);
  void *v7;
  void *v8;
  SEL v9;
  void *v10;
  id v11;
  _QWORD *v12;
  id v14;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  *(_QWORD *)(v0 + 104) = v4;
  v5 = objc_msgSend(v4, sel_temporaryDirectory);
  sub_1B25CC508();

  OUTLINED_FUNCTION_477();
  sub_1B25CC4FC();
  v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(_QWORD *)(v0 + 112) = v6;
  v6(v1, v2);
  v7 = (void *)sub_1B25CC4F0();
  *(_QWORD *)(v0 + 16) = 0;
  v8 = (void *)OUTLINED_FUNCTION_184_1();
  LODWORD(v2) = objc_msgSend(v8, v9);

  v10 = *(void **)(v0 + 16);
  if ((_DWORD)v2)
  {
    *(_QWORD *)(v0 + 120) = OBJC_IVAR____TtC6Speech25SFCustomLanguageModelData_locale;
    v11 = v10;
    sub_1B25CC634();
    sub_1B25CCAE4();
    OUTLINED_FUNCTION_267();
    sub_1B25CC4FC();
    OUTLINED_FUNCTION_267();
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v12;
    *v12 = v0;
    v12[1] = sub_1B2564C4C;
    return sub_1B25630FC(*(_QWORD *)(v0 + 80));
  }
  else
  {
    v14 = v10;
    sub_1B25CC4D8();
    OUTLINED_FUNCTION_196_0();
    OUTLINED_FUNCTION_109_6();

    OUTLINED_FUNCTION_34_7();
    OUTLINED_FUNCTION_48();
    OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_114();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1B2564C4C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_105();
  *v2 = *v1;
  *(_QWORD *)(v3 + 136) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B2564CE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  SEL v24;
  unsigned int v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  unsigned int v30;
  void *v31;
  void (*v32)(uint64_t, uint64_t);
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t (*v38)(void);
  void (*v39)(uint64_t, uint64_t);
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;

  v1 = *(_QWORD *)(v0 + 136);
  sub_1B25CC634();
  sub_1B25CCAE4();
  OUTLINED_FUNCTION_44_1();
  sub_1B25CC4FC();
  OUTLINED_FUNCTION_44_1();
  sub_1B2563AE8();
  v2 = v1;
  v4 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  if (v2)
  {
    v5 = *(void (**)(uint64_t, uint64_t))(v0 + 112);
    v6 = *(_QWORD *)(v0 + 56);

    v5(v4, v6);
    v5(v3, v6);
LABEL_9:
    OUTLINED_FUNCTION_34_7();
    OUTLINED_FUNCTION_48();
    OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_72();
    OUTLINED_FUNCTION_114();
    v38 = *(uint64_t (**)(void))(v0 + 8);
    return v38();
  }
  v7 = *(_QWORD *)(v0 + 48);
  v8 = objc_opt_self();
  v9 = *(_QWORD *)(v7 + OBJC_IVAR____TtC6Speech25SFCustomLanguageModelData_identifier + 8);
  v53 = (void *)v8;
  v54 = *(_QWORD *)(v7 + OBJC_IVAR____TtC6Speech25SFCustomLanguageModelData_identifier);
  v10 = *(_QWORD *)(v7 + OBJC_IVAR____TtC6Speech25SFCustomLanguageModelData_version);
  v11 = *(_QWORD *)(v7 + OBJC_IVAR____TtC6Speech25SFCustomLanguageModelData_version + 8);
  v52 = v10;
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_776();
  v12 = sub_1B25CC634();
  v50 = v13;
  v51 = v12;
  v14 = sub_1B25CC514();
  v16 = v15;
  v17 = sub_1B25CC514();
  v19 = v18;
  v20 = sub_1B25CC514();
  sub_1B2569CFC(v54, v9, v52, v11, v51, v50, v14, v16, v17, v19, v20, v21, v53);
  OUTLINED_FUNCTION_44_1();
  OUTLINED_FUNCTION_267();
  v22 = (void *)sub_1B25CC4F0();
  *(_QWORD *)(v0 + 24) = 0;
  v23 = (void *)OUTLINED_FUNCTION_184_1();
  v25 = objc_msgSend(v23, v24);

  v26 = *(void **)(v0 + 24);
  if (!v25)
  {
    v40 = *(void **)(v0 + 104);
    v39 = *(void (**)(uint64_t, uint64_t))(v0 + 112);
    v42 = *(_QWORD *)(v0 + 72);
    v41 = *(_QWORD *)(v0 + 80);
    v43 = *(_QWORD *)(v0 + 56);
    v44 = v26;
    sub_1B25CC4D8();
    OUTLINED_FUNCTION_196_0();
    OUTLINED_FUNCTION_109_6();

    OUTLINED_FUNCTION_54_3(v42);
    v39(v41, v43);
    goto LABEL_9;
  }
  v27 = *(void **)(v0 + 104);
  v28 = v26;
  v29 = (void *)sub_1B25CC4F0();
  *(_QWORD *)(v0 + 32) = 0;
  v30 = objc_msgSend(v27, sel_removeItemAtURL_error_, v29, v0 + 32);

  v31 = *(void **)(v0 + 32);
  v33 = *(void **)(v0 + 104);
  v32 = *(void (**)(uint64_t, uint64_t))(v0 + 112);
  if (!v30)
  {
    v46 = *(_QWORD *)(v0 + 72);
    v45 = *(_QWORD *)(v0 + 80);
    v47 = *(_QWORD *)(v0 + 56);
    v48 = v31;
    OUTLINED_FUNCTION_190_3();
    OUTLINED_FUNCTION_196_0();
    OUTLINED_FUNCTION_109_6();

    v32(v46, v47);
    v32(v45, v47);
    goto LABEL_9;
  }
  v34 = *(_QWORD *)(v0 + 96);
  v36 = *(_QWORD *)(v0 + 72);
  v35 = *(_QWORD *)(v0 + 80);
  v37 = v31;

  OUTLINED_FUNCTION_54_3(v36);
  OUTLINED_FUNCTION_54_3(v35);
  OUTLINED_FUNCTION_54_3(v34);
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_114();
  v38 = *(uint64_t (**)(void))(v0 + 8);
  return v38();
}

uint64_t sub_1B2565014()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 112);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 56);

  v1(v2, v3);
  OUTLINED_FUNCTION_34_7();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_95();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_114();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static SFCustomLanguageModelData.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  OUTLINED_FUNCTION_15_3();
  OUTLINED_FUNCTION_15_3();
  if ((sub_1B25226E0() & 1) == 0)
    goto LABEL_15;
  OUTLINED_FUNCTION_15_3();
  v4 = *(_QWORD *)(a1 + 16);
  OUTLINED_FUNCTION_15_3();
  sub_1B2522804(v4, *(_QWORD *)(a2 + 16));
  if ((v5 & 1) == 0)
    goto LABEL_15;
  OUTLINED_FUNCTION_123_4(OBJC_IVAR____TtC6Speech25SFCustomLanguageModelData_identifier);
  v8 = v8 && v6 == v7;
  if (v8 || (v9 = 0, (OUTLINED_FUNCTION_303_0() & 1) != 0))
  {
    if ((MEMORY[0x1B5E24628](a1 + OBJC_IVAR____TtC6Speech25SFCustomLanguageModelData_locale, a2 + OBJC_IVAR____TtC6Speech25SFCustomLanguageModelData_locale) & 1) != 0)
    {
      OUTLINED_FUNCTION_123_4(OBJC_IVAR____TtC6Speech25SFCustomLanguageModelData_version);
      v12 = v8 && v10 == v11;
      if (v12 || (v9 = 0, (OUTLINED_FUNCTION_303_0() & 1) != 0))
      {
        OUTLINED_FUNCTION_15_3();
        v13 = *(_QWORD *)(a1 + 32);
        OUTLINED_FUNCTION_15_3();
        v14 = *(_QWORD *)(a2 + 32);
        OUTLINED_FUNCTION_47_0();
        OUTLINED_FUNCTION_79_0();
        sub_1B2522808(v13, v14);
        v9 = v15;
        OUTLINED_FUNCTION_173();
        OUTLINED_FUNCTION_10_0();
      }
      return v9 & 1;
    }
LABEL_15:
    v9 = 0;
  }
  return v9 & 1;
}

uint64_t sub_1B25651D8()
{
  uint64_t v0;
  unint64_t v1;

  OUTLINED_FUNCTION_15_3();
  OUTLINED_FUNCTION_133();
  OUTLINED_FUNCTION_71_9();
  sub_1B2531174();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_15_3();
  OUTLINED_FUNCTION_133();
  OUTLINED_FUNCTION_71_9();
  sub_1B2531170();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_15_3();
  OUTLINED_FUNCTION_133();
  v0 = OUTLINED_FUNCTION_71_9();
  sub_1B2531088(v0, v1);
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_61_6();
  OUTLINED_FUNCTION_39_5();
  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_61_6();
  OUTLINED_FUNCTION_39_5();
  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_23_0();
  sub_1B256A150((uint64_t)&qword_1EEFD69B0);
  OUTLINED_FUNCTION_71_9();
  return sub_1B25CC91C();
}

uint64_t sub_1B25652DC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  v2 = a1 == 0x706D615361746164 && a2 == 0xEB0000000073656CLL;
  if (v2 || (sub_1B25CD5D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x72506D6F74737563 && a2 == 0xEB00000000736E6FLL;
    if (v6 || (sub_1B25CD5D0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000014 && a2 == 0x80000001B25D54D0 || (sub_1B25CD5D0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000;
      if (v7 || (sub_1B25CD5D0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
        if (v8 || (sub_1B25CD5D0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          v10 = sub_1B25CD5D0();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0)
            return 5;
          else
            return 6;
        }
      }
    }
  }
}

uint64_t sub_1B2565564()
{
  return 6;
}

uint64_t sub_1B256556C()
{
  sub_1B25CD6A8();
  sub_1B25CD6B4();
  return sub_1B25CD6CC();
}

uint64_t sub_1B25655B0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B25655EC + 4 * byte_1B25DF420[a1]))(0x706D615361746164, 0xEB0000000073656CLL);
}

uint64_t sub_1B25655EC()
{
  return 0x72506D6F74737563;
}

unint64_t sub_1B2565604()
{
  return 0xD000000000000014;
}

uint64_t sub_1B2565620()
{
  return 0x656C61636F6CLL;
}

uint64_t sub_1B2565634()
{
  return 0x696669746E656469;
}

uint64_t sub_1B2565650()
{
  return 0x6E6F6973726576;
}

uint64_t sub_1B2565668()
{
  return sub_1B256556C();
}

uint64_t sub_1B2565670()
{
  unsigned __int8 *v0;

  return sub_1B25655B0(*v0);
}

uint64_t sub_1B2565678@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B25652DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B256569C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B2565564();
  *a1 = result;
  return result;
}

uint64_t sub_1B25656C0()
{
  sub_1B256A09C();
  return sub_1B25CD720();
}

uint64_t sub_1B25656E8()
{
  sub_1B256A09C();
  return sub_1B25CD72C();
}

void SFCustomLanguageModelData.deinit()
{
  uint64_t v0;

  OUTLINED_FUNCTION_98_6();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v0 = OUTLINED_FUNCTION_23_0();
  OUTLINED_FUNCTION_278_0(v0);
  OUTLINED_FUNCTION_62_8();
  OUTLINED_FUNCTION_62_8();
  OUTLINED_FUNCTION_0();
}

uint64_t SFCustomLanguageModelData.__deallocating_deinit()
{
  return sub_1B2568B38(SFCustomLanguageModelData.deinit);
}

uint64_t sub_1B256577C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDA620);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  OUTLINED_FUNCTION_42_3();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B256A09C();
  sub_1B25CD708();
  OUTLINED_FUNCTION_15_3();
  OUTLINED_FUNCTION_404_0();
  OUTLINED_FUNCTION_122_4((uint64_t)&unk_1EEFDA638);
  OUTLINED_FUNCTION_44_9();
  if (!v1)
  {
    OUTLINED_FUNCTION_15_3();
    OUTLINED_FUNCTION_404_0();
    OUTLINED_FUNCTION_122_4((uint64_t)&unk_1EEFDA650);
    OUTLINED_FUNCTION_44_9();
    OUTLINED_FUNCTION_15_3();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDA660);
    sub_1B256A274((uint64_t)&unk_1EEFDA668);
    sub_1B25CD540();
    OUTLINED_FUNCTION_23_0();
    sub_1B256A150((uint64_t)&unk_1EEFDA678);
    OUTLINED_FUNCTION_44_9();
    OUTLINED_FUNCTION_78_3(4);
    OUTLINED_FUNCTION_78_3(5);
  }
  return OUTLINED_FUNCTION_96_6(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
}

void sub_1B25659F4()
{
  OUTLINED_FUNCTION_4();
  sub_1B25651D8();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_1();
}

void SFCustomLanguageModelData.__allocating_init(from:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_628();
  SFCustomLanguageModelData.init(from:)(a1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  OUTLINED_FUNCTION_90_7();
}

void SFCustomLanguageModelData.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;

  OUTLINED_FUNCTION_326_0();
  v13 = v10;
  v15 = v14;
  v16 = OUTLINED_FUNCTION_23_0();
  v29 = *(_QWORD *)(v16 - 8);
  v30 = v16;
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v17, v18);
  OUTLINED_FUNCTION_622();
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDA680);
  MEMORY[0x1E0C80A78](v31, v19);
  OUTLINED_FUNCTION_52_6();
  v20 = MEMORY[0x1E0DEE9D8];
  v13[2] = MEMORY[0x1E0DEE9D8];
  v13[3] = v20;
  v32 = v15;
  v13[4] = v20;
  __swift_project_boxed_opaque_existential_1(v15, v15[3]);
  sub_1B256A09C();
  sub_1B25CD6FC();
  if (v11)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for SFCustomLanguageModelData(0);
    OUTLINED_FUNCTION_85_6();
    v28 = (uint64_t)v15;
  }
  else
  {
    OUTLINED_FUNCTION_404_0();
    OUTLINED_FUNCTION_122_4((uint64_t)&unk_1EEFDA688);
    OUTLINED_FUNCTION_58_8();
    OUTLINED_FUNCTION_25_3();
    v13[2] = v34;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_404_0();
    OUTLINED_FUNCTION_122_4((uint64_t)&unk_1EEFDA698);
    OUTLINED_FUNCTION_58_8();
    OUTLINED_FUNCTION_25_3();
    v13[3] = v33;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDA660);
    sub_1B256A274((uint64_t)&unk_1EEFDA6A8);
    OUTLINED_FUNCTION_58_8();
    OUTLINED_FUNCTION_25_3();
    v13[4] = a10;
    swift_bridgeObjectRelease();
    sub_1B256A150((uint64_t)&unk_1EEFDA6B8);
    OUTLINED_FUNCTION_58_8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))((uint64_t)v13 + OBJC_IVAR____TtC6Speech25SFCustomLanguageModelData_locale, v12, v30);
    v21 = OUTLINED_FUNCTION_87_7(4);
    v22 = (_QWORD *)((char *)v13 + OBJC_IVAR____TtC6Speech25SFCustomLanguageModelData_identifier);
    *v22 = v21;
    v22[1] = v23;
    v24 = OUTLINED_FUNCTION_87_7(5);
    v26 = v25;
    OUTLINED_FUNCTION_9_11();
    v27 = (_QWORD *)((char *)v13 + OBJC_IVAR____TtC6Speech25SFCustomLanguageModelData_version);
    *v27 = v24;
    v27[1] = v26;
    v28 = (uint64_t)v32;
  }
  __swift_destroy_boxed_opaque_existential_0Tm(v28);
  OUTLINED_FUNCTION_49_4();
}

void sub_1B2565E5C()
{
  sub_1B25659F4();
}

uint64_t sub_1B2565E7C()
{
  return sub_1B25651D8();
}

uint64_t sub_1B2565E9C()
{
  sub_1B25CD6A8();
  sub_1B25651D8();
  return sub_1B25CD6CC();
}

void sub_1B2565ED8(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  SFCustomLanguageModelData.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = v4;
}

uint64_t sub_1B2565F00(_QWORD *a1)
{
  return sub_1B256577C(a1);
}

uint64_t sub_1B2565F20(uint64_t *a1, uint64_t *a2)
{
  return static SFCustomLanguageModelData.== infix(_:_:)(*a1, *a2) & 1;
}

uint64_t sub_1B2565F40()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_70_3();
  v2 = *(void (**)(uint64_t))(*(_QWORD *)(v1 - 8) + 8);
  v3 = OUTLINED_FUNCTION_71_9();
  v2(v3);
  ((void (*)(uint64_t, uint64_t))v2)(v0 + OBJC_IVAR____TtC6Speech34CustomLanguageModelArtifactManager_configURL, v1);
  OUTLINED_FUNCTION_180_1();
  return swift_deallocClassInstance();
}

void sub_1B2565F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3[4] = MEMORY[0x1E0DEE9D8];
  v4 = v3 + 4;
  v3[2] = a1;
  v3[3] = a2;
  if (a1 < 0)
    goto LABEL_17;
  if (a1)
  {
    if (a2 < 0)
    {
LABEL_18:
      __break(1u);
      return;
    }
    swift_beginAccess();
    v8 = 0;
    while (v8 != a1)
    {
      if (a2)
      {
        v9 = *v4;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v4 = v9;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1B252C024(0, *(_QWORD *)(v9 + 16) + 1, 1, v9);
          v9 = v15;
        }
        v11 = a2;
        do
        {
          *v4 = v9;
          v13 = *(_QWORD *)(v9 + 16);
          v12 = *(_QWORD *)(v9 + 24);
          if (v13 >= v12 >> 1)
          {
            sub_1B252C024(v12 > 1, v13 + 1, 1, v9);
            v9 = v14;
            *v4 = v14;
          }
          *(_QWORD *)(v9 + 16) = v13 + 1;
          *(_QWORD *)(v9 + 8 * v13 + 32) = a3;
          v9 = *v4;
          --v11;
        }
        while (v11);
      }
      if (++v8 == a1)
      {
        swift_endAccess();
        return;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
}

uint64_t sub_1B25660E0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(v2 + 24);
  v4 = result * v3;
  if ((unsigned __int128)(result * (__int128)v3) >> 64 != (result * v3) >> 63)
  {
    __break(1u);
    goto LABEL_7;
  }
  v5 = v4 + a2;
  if (__OFADD__(v4, a2))
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  result = swift_beginAccess();
  if ((v5 & 0x8000000000000000) != 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v6 = *(_QWORD *)(v2 + 32);
  if (v5 < *(_QWORD *)(v6 + 16))
    return *(_QWORD *)(v6 + 8 * v5 + 32);
LABEL_9:
  __break(1u);
  return result;
}

void sub_1B256615C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;

  v7 = *(_QWORD *)(v4 + 24);
  v8 = a2 * v7;
  if ((unsigned __int128)(a2 * (__int128)v7) >> 64 != (a2 * v7) >> 63)
  {
    __break(1u);
    goto LABEL_8;
  }
  v6 = v8 + a3;
  if (__OFADD__(v8, a3))
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v3 = a1;
  v5 = (_QWORD *)(v4 + 32);
  swift_beginAccess();
  v9 = *(_QWORD *)(v4 + 32);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v4 + 32) = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
  {
    if ((v6 & 0x8000000000000000) == 0)
      goto LABEL_5;
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
LABEL_9:
  sub_1B2530804();
  v9 = v11;
  *v5 = v11;
  if ((v6 & 0x8000000000000000) != 0)
    goto LABEL_10;
LABEL_5:
  if (v6 < *(_QWORD *)(v9 + 16))
  {
    *(_QWORD *)(v9 + 8 * v6 + 32) = v3;
    swift_endAccess();
    return;
  }
LABEL_11:
  __break(1u);
}

uint64_t sub_1B256621C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1B2566238()
{
  sub_1B256621C();
  return swift_deallocClassInstance();
}

void static WordErrorRateCalculator.splitString(value:locale:)()
{
  CFIndex v0;
  const __CFLocale *v1;
  const __CFAllocator *v2;
  __CFString *v3;
  __CFStringTokenizer *v4;
  CFStringTokenizerTokenType Token;
  uint64_t v6;
  CFRange CurrentTokenRange;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  CFRange v17;

  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_79_4();
  v0 = sub_1B25CCB08();
  OUTLINED_FUNCTION_10_0();
  v1 = (const __CFLocale *)sub_1B25CC670();
  v2 = (const __CFAllocator *)*MEMORY[0x1E0C9AE00];
  v3 = (__CFString *)OUTLINED_FUNCTION_150_1();
  v17.location = 0;
  v17.length = v0;
  v4 = CFStringTokenizerCreate(v2, v3, v17, 0, v1);

  Token = CFStringTokenizerAdvanceToNextToken(v4);
  v6 = MEMORY[0x1E0DEE9D8];
  if (Token)
  {
    do
    {
      CurrentTokenRange = CFStringTokenizerGetCurrentTokenRange(v4);
      v8 = (void *)OUTLINED_FUNCTION_150_1();
      v9 = objc_msgSend(v8, sel_substringWithRange_, CurrentTokenRange.location, CurrentTokenRange.length);

      v10 = sub_1B25CCA18();
      v12 = v11;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_163_1();
        v6 = v15;
      }
      v13 = *(_QWORD *)(v6 + 16);
      if (v13 >= *(_QWORD *)(v6 + 24) >> 1)
      {
        OUTLINED_FUNCTION_163_1();
        v6 = v16;
      }
      *(_QWORD *)(v6 + 16) = v13 + 1;
      v14 = v6 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v10;
      *(_QWORD *)(v14 + 40) = v12;
    }
    while (CFStringTokenizerAdvanceToNextToken(v4));
  }

  OUTLINED_FUNCTION_7_1();
}

void sub_1B25663B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = v2 - 1;
  if (__OFSUB__(v2, 1))
  {
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 24);
    if (!__OFSUB__(v4, 1))
    {
      sub_1B25660E0(v3, v4 - 1);
      OUTLINED_FUNCTION_0();
      return;
    }
  }
  __break(1u);
}

void sub_1B25663EC()
{
  uint64_t v0;

  sub_1B25663B0();
  if (__OFSUB__(*(_QWORD *)(*(_QWORD *)(v0 + 16) + 16), 1))
    __break(1u);
}

void sub_1B2566420()
{
  _QWORD *p_i;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *i;

  v1 = p_i[2];
  v2 = *(_QWORD *)(v1 + 16);
  v3 = v2 - 1;
  if (__OFSUB__(v2, 1))
    goto LABEL_45;
  v4 = *(_QWORD *)(v1 + 24);
  v5 = v4 - 1;
  if (!__OFSUB__(v4, 1))
  {
    for (i = (_QWORD *)MEMORY[0x1E0DEE9D8]; ; i = p_i)
    {
LABEL_4:
      v6 = __OFSUB__(v5, 1);
      v7 = v3;
      v8 = v3;
LABEL_8:
      if (v7)
      {
        while (v5)
        {
          v3 = v8 - 1;
          if (__OFSUB__(v8, 1))
          {
            __break(1u);
LABEL_41:
            __break(1u);
            return;
          }
          if (v6)
            goto LABEL_41;
          v9 = OUTLINED_FUNCTION_112_6(v8 - 1, v5 - 1);
          v10 = OUTLINED_FUNCTION_116_4();
          v12 = sub_1B25660E0(v10, v11);
          v13 = sub_1B25660E0(v8, v5 - 1);
          if (v12 >= v9)
            v14 = v9;
          else
            v14 = v12;
          if (v13 >= v14)
            v15 = v14;
          else
            v15 = v13;
          if (sub_1B25660E0(v8 - 1, v5 - 1) == v15)
          {
            p_i = &i;
            if (v15 == OUTLINED_FUNCTION_112_6(v8, v5))
            {
              v25 = OUTLINED_FUNCTION_125_3();
              v27 = 67;
            }
            else
            {
              v25 = OUTLINED_FUNCTION_125_3();
              v27 = 83;
            }
            OUTLINED_FUNCTION_181_1(v25, v26, v27);
            --v5;
            goto LABEL_4;
          }
          v16 = OUTLINED_FUNCTION_116_4();
          if (OUTLINED_FUNCTION_112_6(v16, v17) != v15)
          {
            v7 = v8;
            if (OUTLINED_FUNCTION_112_6(v8, v5 - 1) != v15)
              goto LABEL_8;
            p_i = &i;
            v20 = OUTLINED_FUNCTION_125_3();
            OUTLINED_FUNCTION_181_1(v20, v21, 73);
            --v5;
            v3 = v8;
            goto LABEL_4;
          }
          p_i = &i;
          v18 = OUTLINED_FUNCTION_125_3();
          OUTLINED_FUNCTION_181_1(v18, v19, 68);
          --v8;
          if (!v3)
            goto LABEL_34;
        }
        v3 = v7 - 1;
        if (__OFSUB__(v7, 1))
          goto LABEL_44;
        if (!OUTLINED_FUNCTION_138_1() || v7 >= p_i[3] >> 1)
        {
          OUTLINED_FUNCTION_137_2();
          p_i = v22;
        }
        swift_arrayDestroy();
        v23 = p_i[2];
        memmove(p_i + 6, p_i + 4, 16 * v23);
        v5 = 0;
        p_i[2] = v23 + 1;
        v24 = 68;
      }
      else
      {
        if (!v5)
          return;
LABEL_34:
        if (__OFSUB__(v5--, 1))
        {
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          break;
        }
        if (!OUTLINED_FUNCTION_138_1() || v7 >= p_i[3] >> 1)
        {
          OUTLINED_FUNCTION_137_2();
          p_i = v29;
        }
        swift_arrayDestroy();
        v30 = p_i[2];
        memmove(p_i + 6, p_i + 4, 16 * v30);
        v3 = 0;
        p_i[2] = v30 + 1;
        v24 = 73;
      }
      p_i[4] = v24;
      p_i[5] = 0xE100000000000000;
    }
  }
  __break(1u);
}

void WordErrorRateCalculator.__allocating_init(reference:hypothesis:locale:substitutionCost:insertionCost:deletionCost:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_59_0();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;
  OUTLINED_FUNCTION_8_4();
  WordErrorRateCalculator.init(reference:hypothesis:locale:substitutionCost:insertionCost:deletionCost:)(v15, v13, v11, v9, v7, v5, v3, v1);
  OUTLINED_FUNCTION_7_1();
}

void WordErrorRateCalculator.init(reference:hypothesis:locale:substitutionCost:insertionCost:deletionCost:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;

  v9 = v8;
  static WordErrorRateCalculator.splitString(value:locale:)();
  v12 = v11;
  OUTLINED_FUNCTION_69();
  static WordErrorRateCalculator.splitString(value:locale:)();
  v14 = v13;
  OUTLINED_FUNCTION_10_0();
  v42 = v12;
  v45 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDA6C0);
  OUTLINED_FUNCTION_8_4();
  v15 = OUTLINED_FUNCTION_38_0();
  sub_1B2565F9C(v15, v16, 0);
  *(_QWORD *)(v9 + 16) = v17;
  v18 = *(_QWORD *)(v17 + 16);
  if (v18 < 1)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v19 = v17;
  if (v18 != 1)
  {
    v20 = 1;
    while ((unsigned __int128)(v20 * (__int128)a8) >> 64 == (v20 * a8) >> 63)
    {
      v21 = v20 + 1;
      sub_1B256615C(v20 * a8, v20, 0);
      v20 = v21;
      if (v18 == v21)
        goto LABEL_6;
    }
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
LABEL_6:
  v22 = *(_QWORD *)(v19 + 24);
  if (v22 >= 1)
  {
    v41 = a5;
    if (v22 == 1)
    {
LABEL_11:
      if (v18 == 1)
      {
LABEL_37:
        v40 = OUTLINED_FUNCTION_23_0();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v41, v40);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }
      v25 = 1;
      v43 = v18;
      while (v25 < v18)
      {
        if (v22 != 1)
        {
          if ((unint64_t)(v25 - 1) >= *(_QWORD *)(v42 + 16))
            goto LABEL_45;
          v26 = (_QWORD *)(v45 + 40);
          v27 = (_QWORD *)(v42 + 32 + 16 * (v25 - 1));
          v28 = 1;
          while ((unint64_t)(v28 - 1) < *(_QWORD *)(v45 + 16))
          {
            if (*v27 == *(v26 - 1) && v27[1] == *v26)
            {
              v30 = 0;
            }
            else if ((OUTLINED_FUNCTION_303_0() & 1) != 0)
            {
              v30 = 0;
            }
            else
            {
              v30 = a6;
            }
            v31 = sub_1B25660E0(v25 - 1, v28 - 1);
            v32 = __OFADD__(v31, v30);
            v33 = v31 + v30;
            if (v32)
              goto LABEL_39;
            v34 = sub_1B25660E0(v25 - 1, v28);
            v35 = v34 + a8;
            if (__OFADD__(v34, a8))
              goto LABEL_40;
            v36 = sub_1B25660E0(v25, v28 - 1);
            if (__OFADD__(v36, a7))
              goto LABEL_41;
            v37 = v28 + 1;
            if (v35 >= v33)
              v38 = v33;
            else
              v38 = v35;
            if (v36 + a7 >= v38)
              v39 = v38;
            else
              v39 = v36 + a7;
            sub_1B256615C(v39, v25, v28);
            v26 += 2;
            ++v28;
            if (v22 == v37)
              goto LABEL_36;
          }
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          goto LABEL_42;
        }
LABEL_36:
        ++v25;
        v18 = v43;
        if (v25 == v43)
          goto LABEL_37;
      }
      goto LABEL_44;
    }
    v23 = 1;
    while ((unsigned __int128)(v23 * (__int128)a7) >> 64 == (v23 * a7) >> 63)
    {
      v24 = v23 + 1;
      sub_1B256615C(v23 * a7, 0, v23);
      v23 = v24;
      if (v22 == v24)
        goto LABEL_11;
    }
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
LABEL_47:
  __break(1u);
}

uint64_t WordErrorRateCalculator.deinit()
{
  uint64_t v0;

  OUTLINED_FUNCTION_162_2();
  return v0;
}

uint64_t WordErrorRateCalculator.__deallocating_deinit()
{
  OUTLINED_FUNCTION_162_2();
  return swift_deallocClassInstance();
}

double CustomLanguageModelEvaluator.AudioSampleEvaluationResult.baselineWordErrorRate.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void CustomLanguageModelEvaluator.AudioSampleEvaluationResult.baselineTranscription.getter()
{
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_0();
}

double CustomLanguageModelEvaluator.AudioSampleEvaluationResult.customizedWordErrorRate.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void CustomLanguageModelEvaluator.AudioSampleEvaluationResult.customizedTranscription.getter()
{
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_0();
}

double CustomLanguageModelEvaluator.AudioSampleEvaluationResult.wordErrorRateReduction.getter()
{
  double *v0;
  double result;

  result = 0.0;
  if (*v0 != 0.0)
    return (*v0 - v0[3]) / *v0;
  return result;
}

uint64_t CustomLanguageModelEvaluator.AudioSampleEvaluationResult.description.getter()
{
  sub_1B25CD2DC();
  OUTLINED_FUNCTION_477();
  OUTLINED_FUNCTION_118_4();
  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_119_2();
  OUTLINED_FUNCTION_267();
  OUTLINED_FUNCTION_65_7();
  OUTLINED_FUNCTION_79_0();
  sub_1B25CCAE4();
  OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_65_7();
  OUTLINED_FUNCTION_131_1();
  OUTLINED_FUNCTION_118_4();
  OUTLINED_FUNCTION_131_1();
  OUTLINED_FUNCTION_65_7();
  sub_1B25CCE08();
  return 0;
}

uint64_t CustomLanguageModelEvaluator.AudioSampleEvaluationResult.json.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  id v29[57];

  v29[55] = *(id *)MEMORY[0x1E0C80C00];
  sub_1B25CCA54();
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v1, v2);
  OUTLINED_FUNCTION_767();
  v3 = *(double *)v0;
  v5 = *(_QWORD *)(v0 + 8);
  v4 = *(_QWORD *)(v0 + 16);
  v6 = *(double *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 40);
  v28 = *(_QWORD *)(v0 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD9608);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B25E0160;
  v9 = MEMORY[0x1E0DEB070];
  strcpy((char *)(inited + 32), "wordErrorRate");
  *(_WORD *)(inited + 46) = -4864;
  *(double *)(inited + 48) = v3;
  *(_QWORD *)(inited + 72) = v9;
  *(_QWORD *)(inited + 80) = 0x697263736E617274;
  v10 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 120) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 88) = 0xEA00000000007470;
  *(_QWORD *)(inited + 96) = v5;
  *(_QWORD *)(inited + 104) = v4;
  OUTLINED_FUNCTION_133();
  v11 = OUTLINED_FUNCTION_136_2();
  v12 = swift_initStackObject();
  *(_OWORD *)(v12 + 16) = xmmword_1B25E0160;
  strcpy((char *)(v12 + 32), "wordErrorRate");
  *(_WORD *)(v12 + 46) = -4864;
  *(double *)(v12 + 48) = v6;
  *(_QWORD *)(v12 + 72) = v9;
  *(_QWORD *)(v12 + 80) = 0x697263736E617274;
  *(_QWORD *)(v12 + 120) = v10;
  *(_QWORD *)(v12 + 88) = 0xEA00000000007470;
  *(_QWORD *)(v12 + 96) = v28;
  *(_QWORD *)(v12 + 104) = v7;
  OUTLINED_FUNCTION_95_1();
  v13 = OUTLINED_FUNCTION_136_2();
  v14 = swift_initStackObject();
  *(_OWORD *)(v14 + 16) = xmmword_1B25DBD60;
  *(_QWORD *)(v14 + 32) = 0x656E696C65736162;
  *(_QWORD *)(v14 + 40) = 0xE800000000000000;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDA6C8);
  *(_QWORD *)(v14 + 48) = v11;
  *(_QWORD *)(v14 + 72) = v15;
  *(_QWORD *)(v14 + 80) = 0x6D6F74737563;
  *(_QWORD *)(v14 + 88) = 0xE600000000000000;
  *(_QWORD *)(v14 + 96) = v13;
  *(_QWORD *)(v14 + 120) = v15;
  *(_QWORD *)(v14 + 128) = 0xD000000000000016;
  *(_QWORD *)(v14 + 136) = 0x80000001B25D53E0;
  if (v3 == 0.0)
    v16 = 0.0;
  else
    v16 = (v3 - v6) / v3;
  v17 = (void *)objc_opt_self();
  *(_QWORD *)(v14 + 168) = v9;
  *(double *)(v14 + 144) = v16;
  OUTLINED_FUNCTION_116_4();
  sub_1B25CC904();
  v18 = (void *)sub_1B25CC8EC();
  OUTLINED_FUNCTION_101_1();
  v29[0] = 0;
  v19 = objc_msgSend(v17, sel_dataWithJSONObject_options_error_, v18, 0, v29);

  v20 = v29[0];
  if (!v19)
  {
    v26 = v20;
    v27 = (void *)sub_1B25CC4D8();

    OUTLINED_FUNCTION_109_6();
    return 32123;
  }
  sub_1B25CC58C();

  sub_1B25CCA48();
  OUTLINED_FUNCTION_116_4();
  result = sub_1B25CCA30();
  if (v22)
  {
    v23 = result;
    v24 = OUTLINED_FUNCTION_116_4();
    sub_1B24AB6DC(v24, v25);
    return v23;
  }
  __break(1u);
  return result;
}

void sub_1B2566F10()
{
  sub_1B2566F30();
}

void sub_1B2566F1C()
{
  sub_1B2566F30();
}

void sub_1B2566F30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;

  OUTLINED_FUNCTION_59_0();
  v3 = sub_1B25CC4E4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  OUTLINED_FUNCTION_42_3();
  OUTLINED_FUNCTION_70_3();
  OUTLINED_FUNCTION_89_6();
  MEMORY[0x1E0C80A78](v6, v7);
  OUTLINED_FUNCTION_52_6();
  v8 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v9 = objc_msgSend(v8, sel_temporaryDirectory);

  sub_1B25CC508();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v0, *MEMORY[0x1E0CAFD78], v3);
  sub_1B24BFEF8();
  sub_1B25CC520();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0, v3);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_249_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_7_1();
}

uint64_t CustomLanguageModelEvaluator.__allocating_init(languageModel:clientIdentifier:skipDownload:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_174_1();
  v0 = OUTLINED_FUNCTION_628();
  OUTLINED_FUNCTION_195_2();
  CustomLanguageModelEvaluator.init(languageModel:clientIdentifier:skipDownload:)();
  return v0;
}

void CustomLanguageModelEvaluator.init(languageModel:clientIdentifier:skipDownload:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  _QWORD *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;

  OUTLINED_FUNCTION_326_0();
  v38 = v2;
  v39 = v1;
  v3 = v0;
  v44 = v4;
  v6 = v5;
  v8 = v7;
  v9 = OUTLINED_FUNCTION_23_0();
  v36 = *(_QWORD *)(v9 - 8);
  v37 = v9;
  OUTLINED_FUNCTION_43_3();
  v12 = MEMORY[0x1E0C80A78](v10, v11);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12, v15);
  sub_1B25CCA00();
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v16, v17);
  OUTLINED_FUNCTION_52_6();
  v18 = v3 + OBJC_IVAR____TtC6Speech28CustomLanguageModelEvaluator_languageModel;
  v19 = sub_1B25CC538();
  v40 = *(_QWORD *)(v19 - 8);
  v41 = v8;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v18, v8, v19);
  v20 = sub_1B25CC514();
  v22 = v21;
  objc_allocWithZone(MEMORY[0x1E0D1F118]);
  sub_1B2568C08(v20, v22, (SEL *)&selRef_initWithPath_);
  if (!v23)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_477();
    sub_1B25CC9AC();
    if (qword_1EEFD8028 != -1)
      swift_once();
    v32 = (id)qword_1EEFDB360;
    sub_1B25CC6AC();
    v33 = sub_1B25CCA60();
    related decl 'e' for SFSpeechErrorCode.init(_:description:)(8, v33, v34);
    swift_willThrow();
    v35 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
    v35(v41, v19);
    v35(v18, v19);
    type metadata accessor for CustomLanguageModelEvaluator(0);
    OUTLINED_FUNCTION_85_6();
    goto LABEL_7;
  }
  v24 = v23;
  v25 = objc_msgSend(v23, sel_getLocale);
  if (v25)
  {
    v26 = v25;
    v27 = sub_1B25CCA18();
    v29 = v28;

    v42 = v27;
    v43 = v29;
    OUTLINED_FUNCTION_146_1();
    sub_1B24BFEF8();
    OUTLINED_FUNCTION_51_7();
    sub_1B25CD15C();
    swift_bridgeObjectRelease();
    sub_1B25CC628();

    (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))(v3 + OBJC_IVAR____TtC6Speech28CustomLanguageModelEvaluator_locale, v14, v37);
    v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3828]), sel_init);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v41, v19);
    *(_QWORD *)(v3 + OBJC_IVAR____TtC6Speech28CustomLanguageModelEvaluator_queue) = v30;
    v31 = (_QWORD *)(v3 + OBJC_IVAR____TtC6Speech28CustomLanguageModelEvaluator_clientIdentifier);
    *v31 = v38;
    v31[1] = v6;
    *(_BYTE *)(v3 + OBJC_IVAR____TtC6Speech28CustomLanguageModelEvaluator_skipDownload) = v44 & 1;
LABEL_7:
    OUTLINED_FUNCTION_49_4();
    return;
  }
  __break(1u);
}

uint64_t sub_1B256738C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = v0;
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B256739C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _QWORD *v11;

  v1 = v0[9];
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC6Speech28CustomLanguageModelEvaluator_skipDownload) & 1) != 0)
  {
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_66();
    return OUTLINED_FUNCTION_68(v2);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDA8B8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B25DB5B0;
    *(_QWORD *)(inited + 32) = sub_1B25CC634();
    *(_QWORD *)(inited + 40) = v5;
    sub_1B25065A0();
    *(_QWORD *)(inited + 48) = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDA8C0);
    v7 = sub_1B25CC904();
    v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6Speech28CustomLanguageModelEvaluator_clientIdentifier);
    v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6Speech28CustomLanguageModelEvaluator_clientIdentifier + 8);
    v10 = objc_allocWithZone((Class)type metadata accessor for ModelDownloadRequest());
    OUTLINED_FUNCTION_133();
    v0[10] = sub_1B255829C(v7, v8, v9);
    v11 = (_QWORD *)swift_task_alloc();
    v0[11] = v11;
    *v11 = v0;
    v11[1] = sub_1B25674CC;
    return ModelDownloadRequest.download()();
  }
}

uint64_t sub_1B25674CC()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_105();
  *v2 = *v1;
  *(_QWORD *)(v3 + 96) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B256751C()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_66();
  return OUTLINED_FUNCTION_21(v1);
}

uint64_t sub_1B2567544()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1B2567570()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  id v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  void *v31;
  void *v32;
  SEL v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  void (*v45)(uint64_t);
  uint64_t v46;
  _QWORD v47[7];

  OUTLINED_FUNCTION_59_0();
  v45 = v4;
  v46 = v5;
  v44 = v6;
  v43 = v7;
  sub_1B25CCA00();
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v8, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF08);
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v10, v11);
  OUTLINED_FUNCTION_52_6();
  v12 = OUTLINED_FUNCTION_70_3();
  OUTLINED_FUNCTION_89_6();
  MEMORY[0x1E0C80A78](v13, v14);
  OUTLINED_FUNCTION_622();
  v15 = OUTLINED_FUNCTION_23_0();
  v17 = MEMORY[0x1E0C80A78](v15, v16);
  v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_73_4(v17, &qword_1EEFDA890);
  v20 = OUTLINED_FUNCTION_184_1();
  v21(v20);
  v22 = sub_1B2567898((uint64_t)v19);
  if (v22)
  {
    v23 = v22;
    OUTLINED_FUNCTION_73_4((uint64_t)objc_msgSend(v22, sel_setQueue_, *(_QWORD *)(v0 + OBJC_IVAR____TtC6Speech28CustomLanguageModelEvaluator_queue)), &qword_1EEFDA898);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v3, v43, v12);
    v24 = sub_1B2567914(v3);
    objc_msgSend(v24, sel_setRequiresOnDeviceRecognition_, 1);
    if ((v44 & 1) != 0)
    {
      v25 = v24;
      v26 = OUTLINED_FUNCTION_155_3();
      __swift_storeEnumTagSinglePayload(v26, v27, v28, v12);
      v29 = objc_allocWithZone((Class)SFSpeechLanguageModelConfiguration);
      sub_1B2568B5C(v3, v1);
      v31 = v30;
      v32 = (void *)OUTLINED_FUNCTION_184_1();
      objc_msgSend(v32, v33);

    }
    objc_msgSend(v24, sel_setShouldReportPartialResults_, 0);
    v34 = OUTLINED_FUNCTION_8_4();
    v35 = v46;
    *(_QWORD *)(v34 + 16) = v45;
    *(_QWORD *)(v34 + 24) = v35;
    v47[4] = sub_1B256B5FC;
    v47[5] = v34;
    v47[0] = MEMORY[0x1E0C809B0];
    v47[1] = 1107296256;
    v47[2] = sub_1B2567A30;
    v47[3] = &block_descriptor_26;
    v36 = _Block_copy(v47);
    OUTLINED_FUNCTION_122_0();
    swift_release();
    v37 = objc_msgSend(v23, sel_recognitionTaskWithRequest_resultHandler_, v24, v36);
    _Block_release(v36);

  }
  else
  {
    OUTLINED_FUNCTION_477();
    sub_1B25CC9AC();
    if (qword_1EEFD8028 != -1)
      swift_once();
    v38 = (id)qword_1EEFDB360;
    sub_1B25CC6AC();
    v39 = OUTLINED_FUNCTION_95_6();
    v37 = (id)OUTLINED_FUNCTION_709(4, v40, v39, v40);
    v41 = OUTLINED_FUNCTION_125_3();
    v45(v41);
  }

  OUTLINED_FUNCTION_7_1();
}

id sub_1B2567898(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;

  v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v3 = (void *)sub_1B25CC670();
  v4 = objc_msgSend(v2, sel_initWithLocale_, v3);

  v5 = sub_1B25CC6F4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return v4;
}

id sub_1B2567914(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;

  v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v3 = (void *)sub_1B25CC4F0();
  v4 = objc_msgSend(v2, sel_initWithURL_, v3);

  v5 = sub_1B25CC538();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return v4;
}

uint64_t sub_1B2567990(void *a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t))
{
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1)
  {
    v5 = objc_msgSend(a1, sel_bestTranscription);
    v6 = objc_msgSend(v5, sel_formattedString);

    v7 = sub_1B25CCA18();
    v9 = v8;

  }
  else
  {
    v7 = 0;
    v9 = 0;
  }
  a3(v7, v9, a2);
  return swift_bridgeObjectRelease();
}

void sub_1B2567A30(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

double sub_1B2567AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  double v14;

  v8 = OUTLINED_FUNCTION_23_0();
  MEMORY[0x1E0C80A78](v8, v9);
  OUTLINED_FUNCTION_229();
  (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v5, v4 + OBJC_IVAR____TtC6Speech28CustomLanguageModelEvaluator_locale);
  type metadata accessor for WordErrorRateCalculator();
  swift_initStackObject();
  OUTLINED_FUNCTION_61_6();
  OUTLINED_FUNCTION_79_0();
  v11 = OUTLINED_FUNCTION_431();
  WordErrorRateCalculator.init(reference:hypothesis:locale:substitutionCost:insertionCost:deletionCost:)(v11, v12, a3, a4, v5, 1, 1, 1);
  sub_1B25663EC();
  v14 = v13;
  OUTLINED_FUNCTION_38_2();
  return v14;
}

uint64_t sub_1B2567B70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B2567B88()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;

  v2 = v0[4];
  v1 = v0[5];
  v3 = v0[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD9A80);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD9A88);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject();
  v0[7] = v7;
  *(_OWORD *)(v7 + 16) = xmmword_1B25DB5B0;
  v8 = v7 + v6;
  v9 = (_QWORD *)(v8 + *(int *)(v4 + 48));
  v10 = OUTLINED_FUNCTION_70_3();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v3, v10);
  *v9 = v2;
  v9[1] = v1;
  OUTLINED_FUNCTION_47_0();
  v11 = (_QWORD *)swift_task_alloc();
  v0[8] = v11;
  *v11 = v0;
  v11[1] = sub_1B2567C78;
  return sub_1B2568478(v7);
}

uint64_t sub_1B2567C78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_176();
  *(_QWORD *)(v0 + 72) = v2;
  *(_QWORD *)(v0 + 80) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_0_0();
}

void sub_1B2567CD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t (*v10)(void);

  v1 = *(_QWORD *)(v0 + 72);
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = *(_QWORD *)(v0 + 16);
    v3 = *(void **)(v1 + 32);
    v4 = *(_QWORD *)(v1 + 40);
    v5 = *(_QWORD *)(v1 + 48);
    v6 = *(_QWORD *)(v1 + 56);
    v7 = *(_QWORD *)(v1 + 64);
    v8 = *(_QWORD *)(v1 + 72);
    v9 = *(_BYTE *)(v1 + 80);
    *(_QWORD *)v2 = v3;
    *(_QWORD *)(v2 + 8) = v4;
    *(_QWORD *)(v2 + 16) = v5;
    *(_QWORD *)(v2 + 24) = v6;
    *(_QWORD *)(v2 + 32) = v7;
    *(_QWORD *)(v2 + 40) = v8;
    *(_BYTE *)(v2 + 48) = v9;
    sub_1B256A328(v3, v4, v5, v6, v7, v8, v9);
    OUTLINED_FUNCTION_173();
    v10 = (uint64_t (*)(void))OUTLINED_FUNCTION_66();
    OUTLINED_FUNCTION_21(v10);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1B2567D34()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1B2567D60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(_QWORD);
  void (*v4)(_QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  void (*v28)(_QWORD);
  uint64_t v29;
  void (*v30)(_QWORD);
  uint64_t v31;
  uint64_t v32;

  OUTLINED_FUNCTION_59_0();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD9A88);
  v10 = *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64);
  v12 = MEMORY[0x1E0C80A78](v9, v11);
  v13 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12, v14);
  v17 = (char *)&v29 - v16;
  if (*(_QWORD *)(v8 + 16))
  {
    v18 = *(int *)(v9 + 48);
    v31 = v6;
    v32 = v2;
    v19 = &v17[v18];
    v20 = *(unsigned __int8 *)(v15 + 80);
    sub_1B24EBCB8(v8 + ((v20 + 32) & ~v20), (uint64_t)&v29 - v16, &qword_1EEFD9A88);
    v21 = OUTLINED_FUNCTION_8_4();
    v30 = v4;
    v22 = v0;
    *(_QWORD *)(v21 + 16) = v8;
    OUTLINED_FUNCTION_776();
    sub_1B2560D70();
    OUTLINED_FUNCTION_62_8();
    v23 = OUTLINED_FUNCTION_70_3();
    v24 = *(_QWORD *)(v23 - 8);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v23);
    v25 = &v13[*(int *)(v9 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v13, v17, v23);
    v26 = *((_QWORD *)v19 + 1);
    *(_QWORD *)v25 = *(_QWORD *)v19;
    *((_QWORD *)v25 + 1) = v26;
    v27 = (_QWORD *)swift_allocObject();
    v28 = v30;
    v27[2] = v31;
    v27[3] = v22;
    v27[4] = v21;
    v27[5] = v28;
    v27[6] = v32;
    sub_1B24EBCE4((uint64_t)v13, (uint64_t)v27 + ((v20 + 56) & ~v20), &qword_1EEFD9A88);
    OUTLINED_FUNCTION_776();
    swift_retain();
    swift_retain();
    OUTLINED_FUNCTION_122_0();
    OUTLINED_FUNCTION_47_0();
    sub_1B2567570();
    swift_release();
    swift_release();
    sub_1B24EBD4C((uint64_t)v17, &qword_1EEFD9A88);
  }
  else
  {
    v4(v6);
  }
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_1B2567F6C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v47 = a7;
  v48 = a8;
  v45 = a5;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD9A88);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x1E0C80A78](v14, v17);
  v18 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = swift_allocObject();
  v46 = result;
  *(_QWORD *)(result + 16) = a4;
  v20 = result + 16;
  if (a3)
  {
    swift_bridgeObjectRetain();
    v21 = a3;
    sub_1B2568D10((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B252C4AC);
    v22 = *(_QWORD *)(*(_QWORD *)v20 + 16);
    sub_1B2568E40(v22, (uint64_t (*)(BOOL))sub_1B252C4AC);
    v23 = *(_QWORD *)v20;
    *(_QWORD *)(v23 + 16) = v22 + 1;
    v24 = v23 + 56 * v22;
    *(_QWORD *)(v24 + 32) = a3;
    *(_OWORD *)(v24 + 40) = 0u;
    *(_OWORD *)(v24 + 56) = 0u;
    *(_QWORD *)(v24 + 72) = 0;
    *(_BYTE *)(v24 + 80) = 1;
    v25 = *(_QWORD *)v20;
    swift_beginAccess();
    v26 = *(_QWORD *)(a6 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B2567D60(v26, v25, v47, v48);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  v43 = a6;
  v44 = a1;
  if (a2)
  {
    v27 = (uint64_t *)(a9 + *(int *)(v14 + 48));
    v42 = a9;
    v29 = *v27;
    v28 = v27[1];
    swift_bridgeObjectRetain();
    v30 = v45;
    v41 = a2;
    v31 = sub_1B2567AA4(v29, v28, v44, a2);
    v32 = (uint64_t *)&v18[*(int *)(v14 + 48)];
    v33 = sub_1B25CC538();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16))((char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), a9, v33);
    *v32 = v29;
    v32[1] = v28;
    v34 = (*(unsigned __int8 *)(v15 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v35 = (v16 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
    v36 = (_QWORD *)swift_allocObject();
    v37 = v47;
    v36[2] = v46;
    v36[3] = v30;
    v36[4] = v43;
    v36[5] = v37;
    v36[6] = v48;
    sub_1B24EBCE4((uint64_t)v18, (uint64_t)v36 + v34, &qword_1EEFD9A88);
    *(double *)((char *)v36 + v35) = v31;
    v38 = (_QWORD *)((char *)v36 + ((v35 + 15) & 0xFFFFFFFFFFFFFFF8));
    v39 = v41;
    *v38 = v44;
    v38[1] = v39;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B2567570();
    swift_release();
    return swift_release();
  }
  __break(1u);
  return result;
}

void sub_1B2568234(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, double a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t *v14;
  uint64_t *v15;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v14 = (uint64_t *)(a4 + 16);
  v15 = (uint64_t *)(a7 + 16);
  if (a3)
  {
    swift_beginAccess();
    v17 = a3;
    sub_1B2568D10((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B252C4AC);
    v18 = *(_QWORD *)(*v14 + 16);
    sub_1B2568E40(v18, (uint64_t (*)(BOOL))sub_1B252C4AC);
    v19 = *v14;
    *(_QWORD *)(v19 + 16) = v18 + 1;
    v20 = v19 + 56 * v18;
    *(_QWORD *)(v20 + 32) = a3;
    *(_OWORD *)(v20 + 40) = 0u;
    *(_OWORD *)(v20 + 56) = 0u;
    *(_QWORD *)(v20 + 72) = 0;
    *(_BYTE *)(v20 + 80) = 1;
    v21 = *v14;
    swift_endAccess();
    swift_beginAccess();
    v22 = *v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23 = v22;
    v24 = v21;
    v25 = a8;
    v26 = a9;
LABEL_6:
    sub_1B2567D60(v23, v24, v25, v26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  if (a2)
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD9A88);
    v31 = sub_1B2567AA4(*(_QWORD *)(a10 + *(int *)(v30 + 48)), *(_QWORD *)(a10 + *(int *)(v30 + 48) + 8), a1, a2);
    if (a12)
    {
      v32 = v31;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B2568D10((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B252C4AC);
      v33 = *(_QWORD *)(*v14 + 16);
      sub_1B2568E40(v33, (uint64_t (*)(BOOL))sub_1B252C4AC);
      v34 = *v14;
      *(_QWORD *)(v34 + 16) = v33 + 1;
      v35 = v34 + 56 * v33;
      *(double *)(v35 + 32) = a5;
      *(_QWORD *)(v35 + 40) = a11;
      *(_QWORD *)(v35 + 48) = a12;
      *(double *)(v35 + 56) = v32;
      *(_QWORD *)(v35 + 64) = a1;
      *(_QWORD *)(v35 + 72) = a2;
      *(_BYTE *)(v35 + 80) = 0;
      v36 = *v14;
      swift_endAccess();
      swift_beginAccess();
      v37 = *v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v23 = v37;
      v24 = v36;
      v25 = a8;
      v26 = a9;
      goto LABEL_6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1B2568478(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[16] = a1;
  v2[17] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CF08);
  v2[18] = OUTLINED_FUNCTION_7_0();
  v2[19] = OUTLINED_FUNCTION_70_3();
  v2[20] = OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B25684D0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v0 + 168) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7628);
  v1 = OUTLINED_FUNCTION_8_4();
  *(_OWORD *)(v1 + 16) = xmmword_1B25DB5B0;
  *(_QWORD *)(v1 + 56) = MEMORY[0x1E0DEA968];
  OUTLINED_FUNCTION_32_11(v1, 0xD000000000000011);
  OUTLINED_FUNCTION_173();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v2;
  *v2 = v0;
  v2[1] = sub_1B256856C;
  return sub_1B256738C();
}

uint64_t sub_1B256856C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_176();
  v2 = *v1;
  OUTLINED_FUNCTION_19_0(v3);
  if (v0)
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_48();
    return (*(uint64_t (**)(void))(v2 + 8))();
  }
  else
  {
    OUTLINED_FUNCTION_17();
    return OUTLINED_FUNCTION_0_0();
  }
}

uint64_t sub_1B25685CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = v0[20];
  v2 = v0[18];
  v3 = v0[19];
  v4 = OUTLINED_FUNCTION_8_4();
  v5 = MEMORY[0x1E0DEA968];
  *(_OWORD *)(v4 + 16) = xmmword_1B25DB5B0;
  *(_QWORD *)(v4 + 56) = v5;
  OUTLINED_FUNCTION_32_11(v4, 0x474E49444C495542);
  OUTLINED_FUNCTION_173();
  v6 = (void *)objc_opt_self();
  v7 = sub_1B25CC4F0();
  v0[23] = v7;
  v8 = sub_1B25CCA0C();
  v0[24] = v8;
  v9 = OUTLINED_FUNCTION_155_3();
  __swift_storeEnumTagSinglePayload(v9, v10, v11, v3);
  v12 = objc_allocWithZone((Class)SFSpeechLanguageModelConfiguration);
  sub_1B2568B5C(v1, v2);
  v14 = v13;
  v0[25] = v13;
  v0[2] = v0;
  v0[3] = sub_1B256874C;
  v15 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v0[11] = 0x40000000;
  v0[12] = sub_1B250D364;
  v0[13] = &block_descriptor_8;
  v0[14] = v15;
  objc_msgSend(v6, sel_prepareCustomLanguageModelForUrl_clientIdentifier_configuration_ignoresCache_completion_, v7, v8, v14, 1, v0 + 10);
  return swift_continuation_await();
}

uint64_t sub_1B256874C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_105();
  *v1 = *v0;
  *(_QWORD *)(v2 + 208) = *(_QWORD *)(v2 + 48);
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B2568798()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  int8x16_t *v4;
  _QWORD *v5;
  int8x16_t v7;

  v2 = *(void **)(v0 + 192);
  v1 = *(void **)(v0 + 200);
  v7 = *(int8x16_t *)(v0 + 128);

  v3 = OUTLINED_FUNCTION_8_4();
  *(_OWORD *)(v3 + 16) = xmmword_1B25DB5B0;
  *(_QWORD *)(v3 + 56) = MEMORY[0x1E0DEA968];
  OUTLINED_FUNCTION_32_11(v3, 0xD000000000000013);
  OUTLINED_FUNCTION_10_0();
  v4 = (int8x16_t *)swift_task_alloc();
  *(_QWORD *)(v0 + 216) = v4;
  v4[1] = vextq_s8(v7, v7, 8uLL);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 224) = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDA6F0);
  *v5 = v0;
  v5[1] = sub_1B25688BC;
  OUTLINED_FUNCTION_17();
  return sub_1B25CD588();
}

uint64_t sub_1B25688BC()
{
  uint64_t v1;

  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_19_0(&v1);
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B25688FC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc();
  OUTLINED_FUNCTION_36();
  return OUTLINED_FUNCTION_14_0(v1, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B2568938()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 200);
  v3 = *(void **)(v0 + 184);
  v2 = *(void **)(v0 + 192);
  swift_willThrow();

  swift_task_dealloc();
  OUTLINED_FUNCTION_48();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B256899C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDA8B0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2, v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v7 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7 + v6, (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_1B2567D60();
  return swift_release();
}

uint64_t sub_1B2568A88()
{
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDA8B0);
  return sub_1B25CCC58();
}

void CustomLanguageModelEvaluator.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_70_3();
  OUTLINED_FUNCTION_278_0(v1);
  v2 = OUTLINED_FUNCTION_23_0();
  OUTLINED_FUNCTION_278_0(v2);

  OUTLINED_FUNCTION_62_8();
  OUTLINED_FUNCTION_0();
}

uint64_t CustomLanguageModelEvaluator.__deallocating_deinit()
{
  return sub_1B2568B38(CustomLanguageModelEvaluator.deinit);
}

uint64_t sub_1B2568B38(void (*a1)(void))
{
  a1();
  OUTLINED_FUNCTION_180_1();
  return swift_deallocClassInstance();
}

void sub_1B2568B50(uint64_t a1, uint64_t a2)
{
  sub_1B2568C08(a1, a2, (SEL *)&selRef_initWithPath_);
}

void sub_1B2568B5C(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  void *v6;
  uint64_t v7;
  void *v8;

  v3 = v2;
  v6 = (void *)sub_1B25CC4F0();
  v7 = OUTLINED_FUNCTION_70_3();
  v8 = 0;
  if (__swift_getEnumTagSinglePayload(a2, 1, v7) != 1)
  {
    v8 = (void *)sub_1B25CC4F0();
    OUTLINED_FUNCTION_249_0(a2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8));
  }
  objc_msgSend(v3, sel_initWithLanguageModel_vocabulary_, v6, v8);

  OUTLINED_FUNCTION_249_0(a1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8));
  OUTLINED_FUNCTION_233();
}

void sub_1B2568C08(uint64_t a1, uint64_t a2, SEL *a3)
{
  void *v3;
  void *v5;

  if (a2)
  {
    v5 = (void *)sub_1B25CCA0C();
    OUTLINED_FUNCTION_101_1();
  }
  else
  {
    v5 = 0;
  }
  objc_msgSend(v3, *a3, v5);

  OUTLINED_FUNCTION_262();
}

void sub_1B2568C5C()
{
  sub_1B2568D10((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B252B940);
}

void sub_1B2568C68()
{
  sub_1B2568D10((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B252B9F8);
}

void sub_1B2568C74()
{
  sub_1B2568D10((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B252BBC8);
}

void sub_1B2568C80()
{
  sub_1B2568D10((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B252BCC8);
}

void sub_1B2568C8C()
{
  sub_1B2568D10((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B252BBAC);
}

void sub_1B2568C98()
{
  sub_1B2568D10((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B252BBE4);
}

void sub_1B2568CA4()
{
  sub_1B2568D10((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B252BD90);
}

void sub_1B2568CB0()
{
  sub_1B2568D10((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B252BE3C);
}

void sub_1B2568CBC()
{
  sub_1B2568D10((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B252BE58);
}

void sub_1B2568CC8()
{
  sub_1B2568D10((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B252BF28);
}

void sub_1B2568CD4()
{
  sub_1B2568D10((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B252BFD0);
}

void sub_1B2568CE0()
{
  sub_1B2568D10((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B252C024);
}

void sub_1B2568CEC()
{
  sub_1B2568D10((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B252C0F0);
}

void sub_1B2568CF8()
{
  sub_1B2568D10((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B252C254);
}

void sub_1B2568D04()
{
  sub_1B2568D10((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B252C284);
}

void sub_1B2568D10(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t isUniquelyReferenced_nonNull_native;

  v3 = *v1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native)
    *v1 = a1(isUniquelyReferenced_nonNull_native, *(_QWORD *)(v3 + 16) + 1, 1, v3);
  OUTLINED_FUNCTION_262();
}

uint64_t sub_1B2568D5C(uint64_t a1)
{
  return sub_1B2568E40(a1, (uint64_t (*)(BOOL))sub_1B252B940);
}

uint64_t sub_1B2568D68(uint64_t a1)
{
  return sub_1B2568E40(a1, (uint64_t (*)(BOOL))sub_1B252B9F8);
}

uint64_t sub_1B2568D78(uint64_t a1)
{
  return sub_1B2568E40(a1, (uint64_t (*)(BOOL))sub_1B252BBC8);
}

uint64_t sub_1B2568D84(uint64_t a1)
{
  return sub_1B2568E40(a1, (uint64_t (*)(BOOL))sub_1B252BCC8);
}

uint64_t sub_1B2568D90(uint64_t a1)
{
  return sub_1B2568E40(a1, (uint64_t (*)(BOOL))sub_1B252BBAC);
}

uint64_t sub_1B2568D9C(uint64_t a1)
{
  return sub_1B2568E40(a1, (uint64_t (*)(BOOL))sub_1B252BBE4);
}

uint64_t sub_1B2568DA8(uint64_t a1)
{
  return sub_1B2568E40(a1, (uint64_t (*)(BOOL))sub_1B252BD90);
}

uint64_t sub_1B2568DB4(uint64_t a1)
{
  return sub_1B2568E40(a1, (uint64_t (*)(BOOL))sub_1B252BE3C);
}

uint64_t sub_1B2568DC0(uint64_t a1)
{
  return sub_1B2568E40(a1, (uint64_t (*)(BOOL))sub_1B252BE58);
}

uint64_t sub_1B2568DCC(uint64_t a1)
{
  return sub_1B2568E40(a1, (uint64_t (*)(BOOL))sub_1B252BF28);
}

uint64_t sub_1B2568DD8(uint64_t a1)
{
  return sub_1B2568E40(a1, (uint64_t (*)(BOOL))sub_1B252BFD0);
}

uint64_t sub_1B2568DE4(uint64_t a1)
{
  return sub_1B2568E40(a1, (uint64_t (*)(BOOL))sub_1B252C024);
}

uint64_t sub_1B2568DF0(uint64_t a1)
{
  return sub_1B2568E40(a1, (uint64_t (*)(BOOL))sub_1B252C0F0);
}

uint64_t sub_1B2568DFC(uint64_t a1)
{
  return sub_1B2568E40(a1, (uint64_t (*)(BOOL))sub_1B252C254);
}

uint64_t sub_1B2568E08(uint64_t a1)
{
  return sub_1B2568E40(a1, (uint64_t (*)(BOOL))sub_1B252C284);
}

uint64_t sub_1B2568E14(uint64_t result)
{
  _QWORD *v1;

  if (result + 1 > *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
    return sub_1B25CCBD4();
  return result;
}

uint64_t sub_1B2568E40(uint64_t result, uint64_t (*a2)(BOOL))
{
  uint64_t v2;
  unint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
  {
    result = a2(v3 > 1);
    *(_QWORD *)v2 = result;
  }
  return result;
}

char *sub_1B2568E80(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_9();
    result = (char *)OUTLINED_FUNCTION_0_7();
    __break(1u);
  }
  else if (a3 != result || &result[64 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_7(a3, result);
  }
  return result;
}

void sub_1B2568ED8(uint64_t a1, uint64_t a2)
{
  sub_1B25693CC(a1, a2);
}

void sub_1B2568EE4(uint64_t a1, uint64_t a2)
{
  sub_1B25693CC(a1, a2);
}

char *sub_1B2568EF0(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_9();
    result = (char *)OUTLINED_FUNCTION_0_7();
    __break(1u);
  }
  else if (a3 != result || &result[32 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_7(a3, result);
  }
  return result;
}

char *sub_1B2568F44(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_9();
    result = (char *)OUTLINED_FUNCTION_0_7();
    __break(1u);
  }
  else if (a3 != result || &result[16 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_7(a3, result);
  }
  return result;
}

char *sub_1B2568F98(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_9();
    result = (char *)OUTLINED_FUNCTION_0_7();
    __break(1u);
  }
  else if (a3 != result || &result[8 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_7(a3, result);
  }
  return result;
}

char *sub_1B2568FF0(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_9();
    result = (char *)OUTLINED_FUNCTION_0_7();
    __break(1u);
  }
  else if (a3 != result || &result[72 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_7(a3, result);
  }
  return result;
}

void sub_1B256904C(uint64_t a1, uint64_t a2)
{
  sub_1B25693CC(a1, a2);
}

char *sub_1B2569058(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_9();
    result = (char *)OUTLINED_FUNCTION_0_7();
    __break(1u);
  }
  else if (a3 != result || &result[24 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_7(a3, result);
  }
  return result;
}

char *sub_1B25690B4(char *result, size_t a2, char *a3)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    OUTLINED_FUNCTION_2_9();
    result = (char *)OUTLINED_FUNCTION_0_7();
    __break(1u);
  }
  else if (a3 != result || &result[a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_94_8(a3, result, a2);
  }
  return result;
}

char *sub_1B256910C(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_9();
    result = (char *)OUTLINED_FUNCTION_0_7();
    __break(1u);
  }
  else if (a3 != result || &result[40 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_7(a3, result);
  }
  return result;
}

void sub_1B2569168(uint64_t a1, uint64_t a2)
{
  sub_1B25692DC(a1, a2);
}

char *sub_1B2569174(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_9();
    result = (char *)OUTLINED_FUNCTION_0_7();
    __break(1u);
  }
  else if (a3 != result || &result[48 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_7(a3, result);
  }
  return result;
}

char *sub_1B25691D4(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_9();
    result = (char *)OUTLINED_FUNCTION_0_7();
    __break(1u);
  }
  else if (a3 != result || &result[24 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_7(a3, result);
  }
  return result;
}

void sub_1B256922C(uint64_t a1, uint64_t a2)
{
  sub_1B25693CC(a1, a2);
}

void sub_1B2569238(uint64_t a1, uint64_t a2)
{
  sub_1B25693CC(a1, a2);
}

void sub_1B2569244(uint64_t a1, uint64_t a2)
{
  sub_1B25693CC(a1, a2);
}

char *sub_1B2569250(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_9();
    result = (char *)OUTLINED_FUNCTION_0_7();
    __break(1u);
  }
  else if (a3 != result || &result[160 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_7(a3, result);
  }
  return result;
}

void sub_1B25692AC(uint64_t a1, uint64_t a2)
{
  sub_1B25693CC(a1, a2);
}

void sub_1B25692B8(uint64_t a1, uint64_t a2)
{
  sub_1B25693CC(a1, a2);
}

void sub_1B25692C4(uint64_t a1, uint64_t a2)
{
  sub_1B25693CC(a1, a2);
}

void sub_1B25692D0(uint64_t a1, uint64_t a2)
{
  sub_1B25692DC(a1, a2);
}

void sub_1B25692DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char v5;
  char v6;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_9();
    OUTLINED_FUNCTION_0_7();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_117_4();
    if (v5 && (__swift_instantiateConcreteTypeFromMangledName(v4), OUTLINED_FUNCTION_173_1(), !v6 & v5))
    {
      if (v3 == v2)
      {
        OUTLINED_FUNCTION_223();
      }
      else
      {
        OUTLINED_FUNCTION_50_9();
        OUTLINED_FUNCTION_63_8();
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(v4);
      OUTLINED_FUNCTION_50_9();
      OUTLINED_FUNCTION_64_10();
    }
  }
}

char *sub_1B2569360(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_9();
    result = (char *)OUTLINED_FUNCTION_0_7();
    __break(1u);
  }
  else if (a3 != result || &result[56 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_94_8(a3, result, 56 * a2);
  }
  return result;
}

void sub_1B25693C0(uint64_t a1, uint64_t a2)
{
  sub_1B25693CC(a1, a2);
}

void sub_1B25693CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(_QWORD);
  char v5;
  char v6;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_9();
    OUTLINED_FUNCTION_0_7();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_117_4();
    if (v5 && (v4(0), OUTLINED_FUNCTION_173_1(), !v6 & v5))
    {
      if (v3 == v2)
      {
        OUTLINED_FUNCTION_223();
      }
      else
      {
        OUTLINED_FUNCTION_50_9();
        OUTLINED_FUNCTION_63_8();
      }
    }
    else
    {
      v4(0);
      OUTLINED_FUNCTION_50_9();
      OUTLINED_FUNCTION_64_10();
    }
  }
}

uint64_t sub_1B2569450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B25694C8(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B254CBB0);
}

uint64_t sub_1B256945C(uint64_t a1, uint64_t a2)
{
  return sub_1B2569474(a1, a2, (uint64_t (*)(uint64_t))sub_1B254CC60);
}

uint64_t sub_1B2569468(uint64_t a1, uint64_t a2)
{
  return sub_1B2569474(a1, a2, (uint64_t (*)(uint64_t))sub_1B254CD04);
}

uint64_t sub_1B2569474(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_140_3();
  OUTLINED_FUNCTION_26_10();
  v4 = OUTLINED_FUNCTION_431();
  v5 = a3(v4);
  OUTLINED_FUNCTION_77_7(v5, v6, v7, v8, v9, v10, v11, v12, v14, v15);
  return OUTLINED_FUNCTION_27_6();
}

uint64_t sub_1B25694BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B25694C8(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1B254CDA8);
}

uint64_t sub_1B25694C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_629();
  OUTLINED_FUNCTION_140_3();
  OUTLINED_FUNCTION_26_10();
  v8 = a4(v6, v5, v4);
  OUTLINED_FUNCTION_77_7(v8, v9, v10, v11, v12, v13, v14, v15, v17, v18);
  return OUTLINED_FUNCTION_27_6();
}

uint64_t sub_1B2569514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B2569598(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B254CE58);
}

uint64_t sub_1B2569520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B2569544(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1B254E004);
}

uint64_t sub_1B256952C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B2569544(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1B254E010);
}

uint64_t sub_1B2569538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B2569544(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1B254E0F4);
}

uint64_t sub_1B2569544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_174_1();
  OUTLINED_FUNCTION_140_3();
  OUTLINED_FUNCTION_26_10();
  v6 = OUTLINED_FUNCTION_195_2();
  v7 = a5(v6);
  OUTLINED_FUNCTION_77_7(v7, v8, v9, v10, v11, v12, v13, v14, v16, v17);
  return OUTLINED_FUNCTION_49_9();
}

uint64_t sub_1B256958C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B2569598(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B254E100);
}

uint64_t sub_1B2569598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_140_3();
  OUTLINED_FUNCTION_26_10();
  v12 = a6(a1, a2, a3, a4, a5);
  OUTLINED_FUNCTION_77_7(v12, v13, v14, v15, v16, v17, v18, v19, v21, v22);
  return OUTLINED_FUNCTION_49_9();
}

uint64_t sub_1B2569600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v9;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  *v3 = 0x8000000000000000;
  sub_1B254E208(a1, a2, a3, isUniquelyReferenced_nonNull_native);
  *v3 = v9;
  return swift_bridgeObjectRelease();
}

void sub_1B256967C()
{
  sub_1B2569BA0();
}

void sub_1B2569690()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_123_2();
  if (v6 < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_41_11();
  if (v7 != v8)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  OUTLINED_FUNCTION_197_1();
  if (v8)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (__OFSUB__(0, v4))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (__OFADD__(v5, -v4))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!OUTLINED_FUNCTION_106_5() || (OUTLINED_FUNCTION_152_1(), !(v7 ^ v8 | v9)))
  {
    OUTLINED_FUNCTION_120_4();
    sub_1B252BBE4();
    v0 = v10;
  }
  v11 = (char *)(v0 + 32 + 40 * v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7470);
  OUTLINED_FUNCTION_61_9();
  if (!v4)
    goto LABEL_13;
  OUTLINED_FUNCTION_166_2();
  if (v8)
    goto LABEL_19;
  sub_1B256910C((char *)(v0 + 32 + 40 * v2), v12, v11);
  OUTLINED_FUNCTION_165_3();
  if (!v8)
  {
    *(_QWORD *)(v0 + 16) = v13;
LABEL_13:
    *v1 = v0;
    OUTLINED_FUNCTION_462();
    return;
  }
LABEL_20:
  __break(1u);
}

void sub_1B256975C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_123_2();
  if (v6 < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_41_11();
  if (v7 != v8)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  OUTLINED_FUNCTION_197_1();
  if (v8)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (__OFSUB__(0, v4))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (__OFADD__(v5, -v4))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!OUTLINED_FUNCTION_106_5() || (OUTLINED_FUNCTION_152_1(), !(v7 ^ v8 | v9)))
  {
    OUTLINED_FUNCTION_120_4();
    sub_1B252BCC8();
    v0 = v10;
  }
  v11 = (char *)(v0 + 32 + 48 * v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7468);
  OUTLINED_FUNCTION_61_9();
  if (!v4)
    goto LABEL_13;
  OUTLINED_FUNCTION_166_2();
  if (v8)
    goto LABEL_19;
  sub_1B2569174((char *)(v0 + 32 + 48 * v2), v12, v11);
  OUTLINED_FUNCTION_165_3();
  if (!v8)
  {
    *(_QWORD *)(v0 + 16) = v13;
LABEL_13:
    *v1 = v0;
    OUTLINED_FUNCTION_462();
    return;
  }
LABEL_20:
  __break(1u);
}

void sub_1B2569828()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  OUTLINED_FUNCTION_123_2();
  if (v1 < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  v3 = v2;
  v4 = *v0;
  v5 = *(_QWORD *)(*v0 + 16);
  if (v5 < v2)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v6 = v1;
  v7 = v2 - v1;
  if (__OFSUB__(v2, v1))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v8 = v1 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (OUTLINED_FUNCTION_106_5() && v9 <= *(_QWORD *)(v4 + 24) >> 1)
  {
    if (!v8)
      goto LABEL_14;
  }
  else
  {
    OUTLINED_FUNCTION_120_4();
    sub_1B252BE3C();
    v4 = v10;
    if (!v8)
    {
LABEL_14:
      *v0 = v4;
      OUTLINED_FUNCTION_462();
      return;
    }
  }
  v11 = *(_QWORD *)(v4 + 16);
  if (__OFSUB__(v11, v3))
    goto LABEL_20;
  sub_1B2569058((char *)(v4 + 32 + 24 * v3), v11 - v3, (char *)(v4 + 32 + 24 * v6));
  v12 = *(_QWORD *)(v4 + 16);
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    *(_QWORD *)(v4 + 16) = v14;
    goto LABEL_14;
  }
LABEL_21:
  __break(1u);
}

void sub_1B25698FC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_123_2();
  if (v5 < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_41_11();
  if (v6 != v7)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  OUTLINED_FUNCTION_197_1();
  if (v7)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (__OFSUB__(0, v3))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (__OFADD__(v4, -v3))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!OUTLINED_FUNCTION_106_5() || (OUTLINED_FUNCTION_152_1(), !(v6 ^ v7 | v8)))
  {
    OUTLINED_FUNCTION_120_4();
    sub_1B252C10C();
    v0 = v9;
  }
  type metadata accessor for LanguageDetector.LocaleAlternative(0);
  OUTLINED_FUNCTION_127_3();
  v11 = v0 + v10;
  v13 = *(_QWORD *)(v12 + 72);
  OUTLINED_FUNCTION_61_9();
  if (!v3)
    goto LABEL_13;
  OUTLINED_FUNCTION_166_2();
  if (v7)
    goto LABEL_19;
  sub_1B25693CC(v11 + v13 * v2, v14);
  OUTLINED_FUNCTION_165_3();
  if (!v7)
  {
    *(_QWORD *)(v0 + 16) = v15;
LABEL_13:
    *v1 = v0;
    OUTLINED_FUNCTION_462();
    return;
  }
LABEL_20:
  __break(1u);
}

void sub_1B25699C8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_123_2();
  if (v6 < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_41_11();
  if (v7 != v8)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  OUTLINED_FUNCTION_197_1();
  if (v8)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (__OFSUB__(0, v4))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (__OFADD__(v5, -v4))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!OUTLINED_FUNCTION_106_5() || (OUTLINED_FUNCTION_152_1(), !(v7 ^ v8 | v9)))
  {
    OUTLINED_FUNCTION_120_4();
    sub_1B252C254();
    v0 = v10;
  }
  v11 = (char *)(v0 + 32 + 16 * v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7668);
  OUTLINED_FUNCTION_61_9();
  if (!v4)
    goto LABEL_13;
  OUTLINED_FUNCTION_166_2();
  if (v8)
    goto LABEL_19;
  sub_1B2568F44((char *)(v0 + 32 + 16 * v2), v12, v11);
  OUTLINED_FUNCTION_165_3();
  if (!v8)
  {
    *(_QWORD *)(v0 + 16) = v13;
LABEL_13:
    *v1 = v0;
    OUTLINED_FUNCTION_462();
    return;
  }
LABEL_20:
  __break(1u);
}

uint64_t sub_1B2569A8C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  v6 = *v4;
  v7 = *(_QWORD *)(*v4 + 16);
  if (v7 < a2)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v8 = result;
  v9 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (__OFADD__(v7, v10))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v7 + v10 > *(_QWORD *)(v6 + 24) >> 1)
  {
    sub_1B252BA14();
    v6 = v13;
  }
  v14 = v6 + 32 + 16 * v8;
  result = swift_arrayDestroy();
  if (!v10)
    goto LABEL_13;
  v15 = *(_QWORD *)(v6 + 16);
  if (__OFSUB__(v15, a2))
    goto LABEL_19;
  result = (uint64_t)sub_1B2568F44((char *)(v6 + 32 + 16 * a2), v15 - a2, (char *)(v14 + 16));
  v16 = *(_QWORD *)(v6 + 16);
  v17 = __OFADD__(v16, v10);
  v18 = v16 + v10;
  if (!v17)
  {
    *(_QWORD *)(v6 + 16) = v18;
LABEL_13:
    *(_QWORD *)v14 = a3;
    *(_QWORD *)(v14 + 8) = a4;
    *v4 = v6;
    return result;
  }
LABEL_20:
  __break(1u);
  return result;
}

void sub_1B2569BA0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t (*v11)(void);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  OUTLINED_FUNCTION_59_0();
  if (v1 < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  v5 = v2;
  v6 = *v0;
  v7 = *(_QWORD *)(*v0 + 16);
  if (v7 < v2)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v8 = v2 - v1;
  if (__OFSUB__(v2, v1))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v9 = v1 - v2;
  if (__OFSUB__(0, v8))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (__OFADD__(v7, v9))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v10 = v4;
  v11 = v3;
  if (!swift_isUniquelyReferenced_nonNull_native() || v7 - v8 > *(_QWORD *)(v6 + 24) >> 1)
    v6 = v11();
  __swift_instantiateConcreteTypeFromMangledName(v10);
  OUTLINED_FUNCTION_127_3();
  v13 = v6 + v12;
  v15 = *(_QWORD *)(v14 + 72);
  swift_arrayDestroy();
  if (!v8)
    goto LABEL_13;
  v16 = *(_QWORD *)(v6 + 16);
  if (__OFSUB__(v16, v5))
    goto LABEL_19;
  sub_1B25692DC(v13 + v15 * v5, v16 - v5);
  v17 = *(_QWORD *)(v6 + 16);
  v18 = __OFADD__(v17, v9);
  v19 = v17 - v8;
  if (!v18)
  {
    *(_QWORD *)(v6 + 16) = v19;
LABEL_13:
    *v0 = v6;
    OUTLINED_FUNCTION_7_1();
    return;
  }
LABEL_20:
  __break(1u);
}

uint64_t sub_1B2569C9C(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_supportedXsampaProns);

  if (!v2)
    return 0;
  v3 = sub_1B25CCBA4();

  return v3;
}

id sub_1B2569CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;

  v13 = (void *)sub_1B25CCA0C();
  v14 = (void *)sub_1B25CCA0C();
  v15 = (void *)sub_1B25CCA0C();
  swift_bridgeObjectRelease();
  v16 = (void *)sub_1B25CCA0C();
  swift_bridgeObjectRelease();
  v17 = (void *)sub_1B25CCA0C();
  swift_bridgeObjectRelease();
  v18 = (void *)sub_1B25CCA0C();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(a13, sel_createPhraseCountsArtifact_version_locale_rawPhraseCountsPath_customPronunciationsPath_saveTo_, v13, v14, v15, v16, v17, v18);

  return v19;
}

unint64_t sub_1B2569E2C()
{
  unint64_t result;

  result = qword_1EEFDA5A0;
  if (!qword_1EEFDA5A0)
  {
    result = MEMORY[0x1B5E261DC](&unk_1B25E00B8, &type metadata for SFCustomLanguageModelData.CustomPronunciation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEFDA5A0);
  }
  return result;
}

void sub_1B2569E68(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (!OUTLINED_FUNCTION_194_1(a1))
  {
    v4 = v3;
    v5 = v2;
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED36CFD0);
    v7 = v5;
    atomic_store(MEMORY[0x1B5E261DC](v4, v6, &v7), v1);
  }
  OUTLINED_FUNCTION_28_0();
}

uint64_t type metadata accessor for SFCustomLanguageModelData.PhraseCountGenerator.Iterator()
{
  return objc_opt_self();
}

unint64_t sub_1B2569ED8()
{
  unint64_t result;

  result = qword_1EEFDA5D8;
  if (!qword_1EEFDA5D8)
  {
    result = MEMORY[0x1B5E261DC](&unk_1B25E0058, &type metadata for SFCustomLanguageModelData.PhraseCountGenerator.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEFDA5D8);
  }
  return result;
}

unint64_t sub_1B2569F14()
{
  unint64_t result;

  result = qword_1EEFDA5E8;
  if (!qword_1EEFDA5E8)
  {
    result = MEMORY[0x1B5E261DC](&unk_1B25E0008, &type metadata for SFCustomLanguageModelData.TemplatePhraseCountGenerator.Template.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEFDA5E8);
  }
  return result;
}

void sub_1B2569F50(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1B25306C0();
    v3 = v9;
  }
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v5 = v4 - 1;
    v6 = v3 + 24 * v5;
    v7 = *(_OWORD *)(v6 + 32);
    v8 = *(_QWORD *)(v6 + 48);
    *(_OWORD *)a1 = v7;
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(v3 + 16) = v5;
    *v1 = v3;
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_1B2569FC4()
{
  unint64_t result;

  result = qword_1EEFDA600;
  if (!qword_1EEFDA600)
  {
    result = MEMORY[0x1B5E261DC](MEMORY[0x1E0DEA9A8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EEFDA600);
  }
  return result;
}

uint64_t type metadata accessor for SFCustomLanguageModelData.TemplatePhraseCountGenerator.Iterator()
{
  return objc_opt_self();
}

void sub_1B256A020(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v2;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v2 - 8))(a2, a1);
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for SFCustomLanguageModelData.TemplatePhraseCountGenerator()
{
  return objc_opt_self();
}

uint64_t sub_1B256A080()
{
  return sub_1B2563084();
}

uint64_t type metadata accessor for SFCustomLanguageModelData(uint64_t a1)
{
  return sub_1B24B1B88(a1, (uint64_t *)&unk_1EEFDA738);
}

unint64_t sub_1B256A09C()
{
  unint64_t result;

  result = qword_1EEFDA628;
  if (!qword_1EEFDA628)
  {
    result = MEMORY[0x1B5E261DC](&unk_1B25DFFB8, &type metadata for SFCustomLanguageModelData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEFDA628);
  }
  return result;
}

unint64_t sub_1B256A0D8()
{
  unint64_t result;

  result = qword_1EEFDA640;
  if (!qword_1EEFDA640)
  {
    result = MEMORY[0x1B5E261DC](&protocol conformance descriptor for SFCustomLanguageModelData.PhraseCount, &type metadata for SFCustomLanguageModelData.PhraseCount);
    atomic_store(result, (unint64_t *)&qword_1EEFDA640);
  }
  return result;
}

unint64_t sub_1B256A114()
{
  unint64_t result;

  result = qword_1EEFDA658;
  if (!qword_1EEFDA658)
  {
    result = MEMORY[0x1B5E261DC](&protocol conformance descriptor for SFCustomLanguageModelData.CustomPronunciation, &type metadata for SFCustomLanguageModelData.CustomPronunciation);
    atomic_store(result, (unint64_t *)&qword_1EEFDA658);
  }
  return result;
}

void sub_1B256A150(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (!OUTLINED_FUNCTION_194_1(a1))
  {
    v5 = v4;
    v6 = v3(v2);
    atomic_store(MEMORY[0x1B5E261DC](v5, v6), v1);
  }
  OUTLINED_FUNCTION_0();
}

uint64_t type metadata accessor for SFCustomLanguageModelData.PhraseCountGenerator()
{
  return objc_opt_self();
}

unint64_t sub_1B256A1A8()
{
  unint64_t result;

  result = qword_1EEFDA690;
  if (!qword_1EEFDA690)
  {
    result = MEMORY[0x1B5E261DC](&protocol conformance descriptor for SFCustomLanguageModelData.PhraseCount, &type metadata for SFCustomLanguageModelData.PhraseCount);
    atomic_store(result, (unint64_t *)&qword_1EEFDA690);
  }
  return result;
}

void sub_1B256A1E4(uint64_t a1)
{
  unint64_t *v1;
  uint64_t *v2;
  uint64_t (*v3)(void);
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  uint64_t v7;
  uint64_t v8;

  if (!OUTLINED_FUNCTION_194_1(a1))
  {
    v5 = v4;
    v6 = v3;
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(v2);
    v8 = v6();
    atomic_store(MEMORY[0x1B5E261DC](v5, v7, &v8), v1);
  }
  OUTLINED_FUNCTION_28_0();
}

unint64_t sub_1B256A238()
{
  unint64_t result;

  result = qword_1EEFDA6A0;
  if (!qword_1EEFDA6A0)
  {
    result = MEMORY[0x1B5E261DC](&protocol conformance descriptor for SFCustomLanguageModelData.CustomPronunciation, &type metadata for SFCustomLanguageModelData.CustomPronunciation);
    atomic_store(result, (unint64_t *)&qword_1EEFDA6A0);
  }
  return result;
}

unint64_t sub_1B256A274(uint64_t a1)
{
  unint64_t *v1;
  unint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = OUTLINED_FUNCTION_194_1(a1);
  if (!result)
  {
    v5 = v4;
    v6 = v3;
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEFDA660);
    sub_1B256A150(v6);
    v9 = v8;
    result = MEMORY[0x1B5E261DC](v5, v7, &v9);
    atomic_store(result, v1);
  }
  return result;
}

uint64_t type metadata accessor for CustomLanguageModelEvaluator(uint64_t a1)
{
  return sub_1B24B1B88(a1, (uint64_t *)&unk_1EEFDA7F8);
}

uint64_t type metadata accessor for WordErrorRateCalculator()
{
  return objc_opt_self();
}

id sub_1B256A328(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if ((a7 & 1) != 0)
    return a1;
  swift_bridgeObjectRetain();
  return (id)swift_bridgeObjectRetain();
}

uint64_t sub_1B256A358(uint64_t a1)
{
  return sub_1B256899C(a1);
}

unint64_t sub_1B256A364()
{
  unint64_t result;

  result = qword_1EEFDA6F8;
  if (!qword_1EEFDA6F8)
  {
    result = MEMORY[0x1B5E261DC](&protocol conformance descriptor for SFCustomLanguageModelData.PhraseCount, &type metadata for SFCustomLanguageModelData.PhraseCount);
    atomic_store(result, (unint64_t *)&qword_1EEFDA6F8);
  }
  return result;
}

unint64_t sub_1B256A3A4()
{
  unint64_t result;

  result = qword_1EEFDA700[0];
  if (!qword_1EEFDA700[0])
  {
    result = MEMORY[0x1B5E261DC](&protocol conformance descriptor for SFCustomLanguageModelData.CustomPronunciation, &type metadata for SFCustomLanguageModelData.CustomPronunciation);
    atomic_store(result, qword_1EEFDA700);
  }
  return result;
}

void sub_1B256A3E0()
{
  sub_1B256A150((uint64_t)&unk_1EEFDA718);
}

void sub_1B256A40C()
{
  sub_1B256A150((uint64_t)&unk_1EEFDA720);
}

unint64_t sub_1B256A43C()
{
  unint64_t result;

  result = qword_1EEFDA728;
  if (!qword_1EEFDA728)
  {
    result = MEMORY[0x1B5E261DC](&protocol conformance descriptor for SFCustomLanguageModelData.TemplatePhraseCountGenerator.Template, &type metadata for SFCustomLanguageModelData.TemplatePhraseCountGenerator.Template);
    atomic_store(result, (unint64_t *)&qword_1EEFDA728);
  }
  return result;
}

void sub_1B256A478()
{
  sub_1B256A150((uint64_t)&unk_1EEFDA730);
}

uint64_t dispatch thunk of DataInsertable.insert(data:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1B256A4B0()
{
  return type metadata accessor for SFCustomLanguageModelData(0);
}

uint64_t sub_1B256A4B8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B25CC6F4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for SFCustomLanguageModelData()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SFCustomLanguageModelData.__allocating_init(locale:identifier:version:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of SFCustomLanguageModelData.insert(phraseCount:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of SFCustomLanguageModelData.insert(phraseCountGenerator:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of SFCustomLanguageModelData.insert(term:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of SFCustomLanguageModelData.export(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_25();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_198_2(v1, (uint64_t)sub_1B256B70C);
  return OUTLINED_FUNCTION_35_0(v2, v3);
}

uint64_t dispatch thunk of SFCustomLanguageModelData.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of SFCustomLanguageModelData.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of SFCustomLanguageModelData.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of SFCustomLanguageModelData.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 280))();
}

void type metadata accessor for SFCustomLanguageModelData.PhraseCount()
{
  OUTLINED_FUNCTION_239_0();
}

uint64_t destroy for SFCustomLanguageModelData.CustomPronunciation()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void _s6Speech25SFCustomLanguageModelDataC19CustomPronunciationVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_0();
}

_QWORD *assignWithCopy for SFCustomLanguageModelData.CustomPronunciation(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SFCustomLanguageModelData.CustomPronunciation(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for SFCustomLanguageModelData.CustomPronunciation()
{
  OUTLINED_FUNCTION_239_0();
}

void type metadata accessor for SFCustomLanguageModelData.DataInsertableBuilder()
{
  OUTLINED_FUNCTION_239_0();
}

uint64_t method lookup function for SFCustomLanguageModelData.PhraseCountGenerator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SFCustomLanguageModelData.PhraseCountGenerator.makeAsyncIterator()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 80))();
}

uint64_t dispatch thunk of SFCustomLanguageModelData.PhraseCountGenerator.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of SFCustomLanguageModelData.PhraseCountGenerator.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of SFCustomLanguageModelData.PhraseCountGenerator.insert(data:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of SFCustomLanguageModelData.PhraseCountGenerator.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of SFCustomLanguageModelData.PhraseCountGenerator.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of SFCustomLanguageModelData.PhraseCountGenerator.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t method lookup function for SFCustomLanguageModelData.PhraseCountGenerator.Iterator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SFCustomLanguageModelData.PhraseCountGenerator.Iterator.next()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v3 = (_QWORD *)OUTLINED_FUNCTION_25();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1B2508AAC;
  return v5(a1);
}

uint64_t method lookup function for SFCustomLanguageModelData.TemplatePhraseCountGenerator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SFCustomLanguageModelData.TemplatePhraseCountGenerator.insert(template:count:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of SFCustomLanguageModelData.TemplatePhraseCountGenerator.define(className:values:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

void _s6Speech25SFCustomLanguageModelDataC11PhraseCountVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_0();
}

void _s6Speech25SFCustomLanguageModelDataC11PhraseCountVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_69();
  a1[2] = a2[2];
  OUTLINED_FUNCTION_262();
}

void _s6Speech25SFCustomLanguageModelDataC11PhraseCountVwta_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  OUTLINED_FUNCTION_0();
}

uint64_t _s6Speech25SFCustomLanguageModelDataC11PhraseCountVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1B256A938(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for SFCustomLanguageModelData.TemplatePhraseCountGenerator.Template()
{
  OUTLINED_FUNCTION_239_0();
}

uint64_t method lookup function for SFCustomLanguageModelData.TemplatePhraseCountGenerator.Iterator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SFCustomLanguageModelData.TemplatePhraseCountGenerator.Iterator.__allocating_init(templates:templateClasses:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

void type metadata accessor for SFCustomLanguageModelData.CompoundTemplate()
{
  OUTLINED_FUNCTION_239_0();
}

void type metadata accessor for SFCustomLanguageModelData.TemplateInsertableBuilder()
{
  OUTLINED_FUNCTION_239_0();
}

void type metadata accessor for SFCustomLanguageModelData.PhraseCountsFromTemplates()
{
  OUTLINED_FUNCTION_239_0();
}

uint64_t sub_1B256A9BC()
{
  return type metadata accessor for CustomLanguageModelArtifactManager(0);
}

uint64_t type metadata accessor for CustomLanguageModelArtifactManager(uint64_t a1)
{
  return sub_1B24B1B88(a1, qword_1EEFDA768);
}

uint64_t sub_1B256A9D8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B25CC538();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for WordErrorRateCalculator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WordErrorRateCalculator.minEditDistance.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of WordErrorRateCalculator.wordErrorRate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of WordErrorRateCalculator.editCommands.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of WordErrorRateCalculator.__allocating_init(reference:hypothesis:locale:substitutionCost:insertionCost:deletionCost:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1B256AA7C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for WordErrorRateCalculator.Matrix(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WordErrorRateCalculator.Matrix);
}

uint64_t sub_1B256AADC()
{
  return type metadata accessor for CustomLanguageModelEvaluator(0);
}

uint64_t sub_1B256AAE4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1B25CC538();
  if (v1 <= 0x3F)
  {
    result = sub_1B25CC6F4();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for CustomLanguageModelEvaluator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CustomLanguageModelEvaluator.__allocating_init(languageModel:clientIdentifier:skipDownload:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of CustomLanguageModelEvaluator.computeWordErrorRate(reference:hypothesis:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of CustomLanguageModelEvaluator.evaluate(audioSample:referenceTranscription:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v9 = (_QWORD *)OUTLINED_FUNCTION_39();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1B256B70C;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of CustomLanguageModelEvaluator.evaluate(testSet:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_25();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_198_2(v1, (uint64_t)sub_1B256AC78);
  return OUTLINED_FUNCTION_35_0(v2, v3);
}

uint64_t sub_1B256AC78(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_4_2();
  return OUTLINED_FUNCTION_14_0(a1, *(uint64_t (**)(void))(v1 + 8));
}

uint64_t destroy for CustomLanguageModelEvaluator.AudioSampleEvaluationResult()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CustomLanguageModelEvaluator.AudioSampleEvaluationResult(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for CustomLanguageModelEvaluator.AudioSampleEvaluationResult(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for CustomLanguageModelEvaluator.AudioSampleEvaluationResult(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *a2;
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CustomLanguageModelEvaluator.AudioSampleEvaluationResult(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CustomLanguageModelEvaluator.AudioSampleEvaluationResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for CustomLanguageModelEvaluator.AudioSampleEvaluationResult()
{
  OUTLINED_FUNCTION_239_0();
}

uint64_t storeEnumTagSinglePayload for SFCustomLanguageModelData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1B256AECC + 4 * byte_1B25DF42B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1B256AF00 + 4 * byte_1B25DF426[v4]))();
}

uint64_t sub_1B256AF00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B256AF08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B256AF10);
  return result;
}

uint64_t sub_1B256AF1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B256AF24);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1B256AF28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B256AF30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SFCustomLanguageModelData.CodingKeys()
{
  return &type metadata for SFCustomLanguageModelData.CodingKeys;
}

ValueMetadata *type metadata accessor for SFCustomLanguageModelData.TemplatePhraseCountGenerator.Template.CodingKeys()
{
  return &type metadata for SFCustomLanguageModelData.TemplatePhraseCountGenerator.Template.CodingKeys;
}

ValueMetadata *type metadata accessor for SFCustomLanguageModelData.PhraseCountGenerator.CodingKeys()
{
  return &type metadata for SFCustomLanguageModelData.PhraseCountGenerator.CodingKeys;
}

void type metadata accessor for SFCustomLanguageModelData.CompoundDataInsertable()
{
  OUTLINED_FUNCTION_239_0();
}

ValueMetadata *type metadata accessor for SFCustomLanguageModelData.CustomPronunciation.CodingKeys()
{
  return &type metadata for SFCustomLanguageModelData.CustomPronunciation.CodingKeys;
}

uint64_t _s6Speech25SFCustomLanguageModelDataC28TemplatePhraseCountGeneratorC8TemplateV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B256AFDC + 4 * byte_1B25DF435[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B256B010 + 4 * byte_1B25DF430[v4]))();
}

uint64_t sub_1B256B010(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B256B018(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B256B020);
  return result;
}

uint64_t sub_1B256B02C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B256B034);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B256B038(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B256B040(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SFCustomLanguageModelData.PhraseCount.CodingKeys()
{
  return &type metadata for SFCustomLanguageModelData.PhraseCount.CodingKeys;
}

unint64_t sub_1B256B060()
{
  unint64_t result;

  result = qword_1EEFDA818;
  if (!qword_1EEFDA818)
  {
    result = MEMORY[0x1B5E261DC](&unk_1B25DFD18, &type metadata for SFCustomLanguageModelData.PhraseCount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEFDA818);
  }
  return result;
}

unint64_t sub_1B256B0A0()
{
  unint64_t result;

  result = qword_1EEFDA820;
  if (!qword_1EEFDA820)
  {
    result = MEMORY[0x1B5E261DC](&unk_1B25DFDD0, &type metadata for SFCustomLanguageModelData.CustomPronunciation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEFDA820);
  }
  return result;
}

unint64_t sub_1B256B0E0()
{
  unint64_t result;

  result = qword_1EEFDA828;
  if (!qword_1EEFDA828)
  {
    result = MEMORY[0x1B5E261DC](&unk_1B25DFED8, &type metadata for SFCustomLanguageModelData.TemplatePhraseCountGenerator.Template.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEFDA828);
  }
  return result;
}

unint64_t sub_1B256B120()
{
  unint64_t result;

  result = qword_1EEFDA830;
  if (!qword_1EEFDA830)
  {
    result = MEMORY[0x1B5E261DC](&unk_1B25DFF90, &type metadata for SFCustomLanguageModelData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEFDA830);
  }
  return result;
}

unint64_t sub_1B256B160()
{
  unint64_t result;

  result = qword_1EEFDA838;
  if (!qword_1EEFDA838)
  {
    result = MEMORY[0x1B5E261DC](&unk_1B25DFF00, &type metadata for SFCustomLanguageModelData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEFDA838);
  }
  return result;
}

unint64_t sub_1B256B1A0()
{
  unint64_t result;

  result = qword_1EEFDA840;
  if (!qword_1EEFDA840)
  {
    result = MEMORY[0x1B5E261DC](&unk_1B25DFF28, &type metadata for SFCustomLanguageModelData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEFDA840);
  }
  return result;
}

unint64_t sub_1B256B1E0()
{
  unint64_t result;

  result = qword_1EEFDA848;
  if (!qword_1EEFDA848)
  {
    result = MEMORY[0x1B5E261DC](&unk_1B25DFE48, &type metadata for SFCustomLanguageModelData.TemplatePhraseCountGenerator.Template.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEFDA848);
  }
  return result;
}

unint64_t sub_1B256B220()
{
  unint64_t result;

  result = qword_1EEFDA850;
  if (!qword_1EEFDA850)
  {
    result = MEMORY[0x1B5E261DC](&unk_1B25DFE70, &type metadata for SFCustomLanguageModelData.TemplatePhraseCountGenerator.Template.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEFDA850);
  }
  return result;
}

unint64_t sub_1B256B260()
{
  unint64_t result;

  result = qword_1EEFDA858;
  if (!qword_1EEFDA858)
  {
    result = MEMORY[0x1B5E261DC](&unk_1B25DFDF8, &type metadata for SFCustomLanguageModelData.PhraseCountGenerator.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEFDA858);
  }
  return result;
}

unint64_t sub_1B256B2A0()
{
  unint64_t result;

  result = qword_1EEFDA860;
  if (!qword_1EEFDA860)
  {
    result = MEMORY[0x1B5E261DC](&unk_1B25DFE20, &type metadata for SFCustomLanguageModelData.PhraseCountGenerator.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEFDA860);
  }
  return result;
}

unint64_t sub_1B256B2E0()
{
  unint64_t result;

  result = qword_1EEFDA868;
  if (!qword_1EEFDA868)
  {
    result = MEMORY[0x1B5E261DC](&unk_1B25DFD40, &type metadata for SFCustomLanguageModelData.CustomPronunciation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEFDA868);
  }
  return result;
}

unint64_t sub_1B256B320()
{
  unint64_t result;

  result = qword_1EEFDA870;
  if (!qword_1EEFDA870)
  {
    result = MEMORY[0x1B5E261DC](&unk_1B25DFD68, &type metadata for SFCustomLanguageModelData.CustomPronunciation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEFDA870);
  }
  return result;
}

unint64_t sub_1B256B360()
{
  unint64_t result;

  result = qword_1EEFDA878;
  if (!qword_1EEFDA878)
  {
    result = MEMORY[0x1B5E261DC](&unk_1B25DFC88, &type metadata for SFCustomLanguageModelData.PhraseCount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEFDA878);
  }
  return result;
}

unint64_t sub_1B256B3A0()
{
  unint64_t result;

  result = qword_1EEFDA880;
  if (!qword_1EEFDA880)
  {
    result = MEMORY[0x1B5E261DC](&unk_1B25DFCB0, &type metadata for SFCustomLanguageModelData.PhraseCount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEFDA880);
  }
  return result;
}

uint64_t sub_1B256B3DC()
{
  OUTLINED_FUNCTION_98_6();
  return swift_deallocObject();
}

uint64_t sub_1B256B3FC()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD9A88);
  OUTLINED_FUNCTION_107_4();
  OUTLINED_FUNCTION_98_6();
  OUTLINED_FUNCTION_193_2();
  swift_release();
  swift_release();
  v0 = OUTLINED_FUNCTION_70_3();
  OUTLINED_FUNCTION_104_5(v0);
  OUTLINED_FUNCTION_62_8();
  OUTLINED_FUNCTION_189_2();
  return OUTLINED_FUNCTION_32_3();
}

void sub_1B256B468()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_133_3();
  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD9A88) - 8) + 80);
  sub_1B2567F6C(v3, v2, v0, v1[2], v1[3], v1[4], v1[5], v1[6], (uint64_t)v1 + ((v4 + 56) & ~v4));
  OUTLINED_FUNCTION_714();
}

uint64_t sub_1B256B4D0()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD9A88);
  OUTLINED_FUNCTION_107_4();
  OUTLINED_FUNCTION_162_2();
  OUTLINED_FUNCTION_193_2();
  swift_release();
  swift_release();
  v0 = OUTLINED_FUNCTION_70_3();
  OUTLINED_FUNCTION_104_5(v0);
  OUTLINED_FUNCTION_62_8();
  OUTLINED_FUNCTION_62_8();
  return OUTLINED_FUNCTION_32_3();
}

void sub_1B256B55C()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  OUTLINED_FUNCTION_133_3();
  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD9A88) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1B2568234(v3, v2, v0, v1[2], *(double *)((char *)v1 + v6), v1[3], v1[4], v1[5], v1[6], (uint64_t)v1 + v5, *(uint64_t *)((char *)v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)), *(uint64_t *)((char *)v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
  OUTLINED_FUNCTION_223();
}

uint64_t sub_1B256B5E4()
{
  OUTLINED_FUNCTION_193_2();
  OUTLINED_FUNCTION_456();
  return swift_deallocObject();
}

uint64_t sub_1B256B5FC(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1B2567990(a1, a2, *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t sub_1B256B61C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDA8B0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1B256B680()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDA8B0);
  return sub_1B2568A88();
}

unint64_t sub_1B256B6C0()
{
  unint64_t result;

  result = qword_1EEFDA8D0[0];
  if (!qword_1EEFDA8D0[0])
  {
    result = MEMORY[0x1B5E261DC](MEMORY[0x1E0CB0310], MEMORY[0x1E0CB0338]);
    atomic_store(result, qword_1EEFDA8D0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_7()
{
  return sub_1B25CD4A4();
}

void *OUTLINED_FUNCTION_1_7@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  size_t v2;

  return memmove(__dst, a2, v2);
}

uint64_t OUTLINED_FUNCTION_9_11()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 208) + 8))(v0, *(_QWORD *)(v1 - 184));
}

void OUTLINED_FUNCTION_26_10()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_32_11@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 32) = a2;
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1B25CD690();
}

uint64_t OUTLINED_FUNCTION_34_7()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 112))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 56));
}

uint64_t OUTLINED_FUNCTION_39_5()
{
  return sub_1B25CCAB4();
}

uint64_t OUTLINED_FUNCTION_44_9()
{
  return sub_1B25CD540();
}

uint64_t OUTLINED_FUNCTION_49_9()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_50_9()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_51_7()
{
  uint64_t v0;

  return v0 - 112;
}

uint64_t OUTLINED_FUNCTION_53_9()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_55_9()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 8))(v0, v2, v3);
}

uint64_t OUTLINED_FUNCTION_57_5()
{
  return sub_1B25CCAB4();
}

uint64_t OUTLINED_FUNCTION_58_8()
{
  return sub_1B25CD510();
}

uint64_t OUTLINED_FUNCTION_61_9()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_62_8()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_63_8()
{
  return swift_arrayInitWithTakeBackToFront();
}

uint64_t OUTLINED_FUNCTION_64_10()
{
  return swift_arrayInitWithTakeFrontToBack();
}

uint64_t OUTLINED_FUNCTION_65_7()
{
  return sub_1B25CCAE4();
}

uint64_t OUTLINED_FUNCTION_66_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_67_8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_71_9()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_75_10(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t OUTLINED_FUNCTION_77_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t *v10;
  uint64_t result;

  result = *v10;
  *v10 = a10;
  return result;
}

uint64_t OUTLINED_FUNCTION_78_3@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 144) = a1;
  return sub_1B25CD528();
}

uint64_t OUTLINED_FUNCTION_79_4()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_82_7@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  a2[3] = v2;
  a2[4] = v3;
  *a2 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_85_6()
{
  return swift_deallocPartialClassInstance();
}

uint64_t OUTLINED_FUNCTION_87_7@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 72) = a1;
  return sub_1B25CD4F8();
}

uint64_t OUTLINED_FUNCTION_88_4()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_93_7()
{
  return swift_endAccess();
}

void *OUTLINED_FUNCTION_94_8@<X0>(void *a1@<X0>, const void *a2@<X1>, size_t a3@<X8>)
{
  return memmove(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_95_6()
{
  return sub_1B25CCA60();
}

uint64_t OUTLINED_FUNCTION_96_6@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_98_6()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_104_5(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t OUTLINED_FUNCTION_105_4()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_0Tm(v0);
}

uint64_t OUTLINED_FUNCTION_106_5()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_109_6()
{
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_112_6(uint64_t result, uint64_t a2)
{
  return sub_1B25660E0(result, a2);
}

uint64_t OUTLINED_FUNCTION_116_4()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_118_4()
{
  return sub_1B25CCAE4();
}

uint64_t OUTLINED_FUNCTION_119_2()
{
  return sub_1B25CCAE4();
}

void OUTLINED_FUNCTION_122_4(uint64_t a1)
{
  sub_1B256A1E4(a1);
}

uint64_t OUTLINED_FUNCTION_123_4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + a1);
}

uint64_t OUTLINED_FUNCTION_125_3()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_136_2()
{
  return sub_1B25CC904();
}

void OUTLINED_FUNCTION_137_2()
{
  sub_1B252BA14();
}

uint64_t OUTLINED_FUNCTION_138_1()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_140_3()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_143_4()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_146_1()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 112) = 45;
  *(_QWORD *)(v0 - 104) = 0xE100000000000000;
  *(_QWORD *)(v0 - 128) = 95;
  *(_QWORD *)(v0 - 120) = 0xE100000000000000;
}

uint64_t OUTLINED_FUNCTION_148_2()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_150_1()
{
  return sub_1B25CCA0C();
}

uint64_t OUTLINED_FUNCTION_154_3()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1B24B890C(v1, v0);
}

uint64_t OUTLINED_FUNCTION_155_3()
{
  uint64_t v0;

  sub_1B2566F10();
  sub_1B2566F1C();
  return v0;
}

uint64_t OUTLINED_FUNCTION_156_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int128 a10)
{
  uint64_t v10;

  return sub_1B24AD190(&a10, v10);
}

id OUTLINED_FUNCTION_159_2()
{
  void *v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_160_3()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_161_1@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t OUTLINED_FUNCTION_162_2()
{
  return swift_release();
}

void OUTLINED_FUNCTION_163_1()
{
  sub_1B252BA14();
}

void OUTLINED_FUNCTION_164_1()
{
  sub_1B252BD74();
}

uint64_t OUTLINED_FUNCTION_175_3()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_176_2()
{
  return sub_1B25CCACC();
}

uint64_t OUTLINED_FUNCTION_177_3()
{
  return sub_1B25CCACC();
}

uint64_t OUTLINED_FUNCTION_178_2()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1B24B890C(v1, v0);
}

uint64_t OUTLINED_FUNCTION_179_3()
{
  return sub_1B25CD4F8();
}

uint64_t OUTLINED_FUNCTION_180_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_181_1(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B2569A8C(a1, a2, a3, 0xE100000000000000);
}

uint64_t OUTLINED_FUNCTION_184_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_189_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_190_3()
{
  return sub_1B25CC4D8();
}

void OUTLINED_FUNCTION_192_2()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
}

uint64_t OUTLINED_FUNCTION_193_2()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_194_1(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t OUTLINED_FUNCTION_195_2()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_196_0()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_198_2@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

void *sub_1B256BD40()
{
  void *result;

  sub_1B25CC838();
  result = (void *)sub_1B25CC904();
  off_1EEFD6E00 = result;
  return result;
}

_DWORD *sub_1B256BD80()
{
  uint64_t v0;
  _DWORD *result;

  _s6Speech5_LockCMa_0();
  v0 = swift_allocObject();
  result = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v0 + 16) = result;
  *result = 0;
  qword_1EEFD6E10 = v0;
  return result;
}

uint64_t sub_1B256BDCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v1 = OUTLINED_FUNCTION_147();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1, v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1B25CC85C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED36CF48 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v1, (uint64_t)qword_1ED36D980);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v11, v1);
  sub_1B25CC844();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v0 + OBJC_IVAR____TtC6Speech14SignpostHelper_signposter, v10, v6);
  return v0;
}

void sub_1B256BEE4(const char *a1, uint64_t a2, int a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  os_signpost_id_t v43;
  _QWORD v44[2];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  unint64_t v50;
  const char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;

  v50 = a5;
  LODWORD(v51) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6808);
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v10, v11);
  OUTLINED_FUNCTION_767();
  v47 = v12;
  v13 = OUTLINED_FUNCTION_16_10();
  v52 = *(_QWORD *)(v13 - 8);
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v14, v15);
  OUTLINED_FUNCTION_6_12();
  MEMORY[0x1E0C80A78](v16, v17);
  v19 = ((char *)v44 - v18);
  if (qword_1ED36CF48 != -1)
    swift_once();
  v49 = v19;
  v20 = OUTLINED_FUNCTION_147();
  OUTLINED_FUNCTION_6_3(v20, (uint64_t)qword_1ED36D980);
  v21 = OUTLINED_FUNCTION_34_1();
  v22 = os_log_type_enabled(v19, v21);
  v45 = a4;
  v46 = v6;
  if (v22)
  {
    v23 = OUTLINED_FUNCTION_246();
    v44[1] = v13;
    v24 = (uint8_t *)v23;
    v25 = OUTLINED_FUNCTION_246();
    v44[0] = a6;
    v54 = v25;
    *(_DWORD *)v24 = 136315138;
    v26 = sub_1B25CD300();
    v53 = sub_1B2504AB0(v26, v27, &v54);
    sub_1B25CD12C();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_91_1(&dword_1B2494000, v19, v21, "Logging signpost begin event: %s", v24);
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_174();
  }

  v28 = sub_1B25CD300();
  v30 = v29;
  sub_1B25CC850();
  v31 = v49;
  v32 = sub_1B25CC820();
  if (qword_1EEFD6E20 != -1)
    v32 = swift_once();
  MEMORY[0x1E0C80A78](v32, v33);
  v44[-4] = v31;
  v44[-3] = v28;
  v44[-2] = v30;
  v34 = v47;
  sub_1B2556C8C((void (*)(void))sub_1B256D268);
  sub_1B256D1E0(v34);
  swift_bridgeObjectRelease();
  sub_1B256D15C();
  v35 = sub_1B256C480();
  OUTLINED_FUNCTION_5_11(v35, v36, v37);
  OUTLINED_FUNCTION_444();
  v38 = sub_1B25CC850();
  v39 = sub_1B25CD018();
  if ((sub_1B25CD0FC() & 1) == 0)
  {
    OUTLINED_FUNCTION_36_2();

    OUTLINED_FUNCTION_9_12();
    sub_1B25CC898();
    OUTLINED_FUNCTION_24_13();
    sub_1B25CC88C();
    swift_release();
    (*(void (**)(NSObject *, uint64_t))(v52 + 8))(v31, v13);
    OUTLINED_FUNCTION_7_1();
    return;
  }
  LODWORD(v48) = v39;
  if ((v51 & 1) == 0)
  {
    if (a1)
    {
      v51 = a1;
      goto LABEL_16;
    }
    goto LABEL_20;
  }
  if ((unint64_t)a1 >> 32)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (a1 >> 11 != 27)
  {
    if (a1 >> 16 <= 0x10)
    {
      v51 = &v55;
LABEL_16:
      OUTLINED_FUNCTION_9_12();
      v40 = OUTLINED_FUNCTION_246();
      v41 = OUTLINED_FUNCTION_246();
      v53 = a6;
      v54 = v41;
      *(_DWORD *)v40 = 134349314;
      sub_1B25CD12C();
      *(_WORD *)(v40 + 12) = 2080;
      v42 = v50;
      swift_bridgeObjectRetain();
      v53 = sub_1B2504AB0(v45, v42, &v54);
      OUTLINED_FUNCTION_23_12();
      OUTLINED_FUNCTION_39_1();
      v43 = sub_1B25CC82C();
      OUTLINED_FUNCTION_13_8(&dword_1B2494000, v38, (os_signpost_type_t)v48, v43, v51, "%{signpost.description:begin_time,public}llu %s", (uint8_t *)v40);
      OUTLINED_FUNCTION_13_1();
      OUTLINED_FUNCTION_174();
    }
    goto LABEL_18;
  }
LABEL_19:
  __break(1u);
LABEL_20:
  OUTLINED_FUNCTION_36_2();
  __break(1u);
}

uint64_t sub_1B256C380@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v8 = sub_1B25CC838();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EEFD6E08 != -1)
    swift_once();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
  swift_beginAccess();
  sub_1B256D284((uint64_t)v12, a2, a3, a4);
  return swift_endAccess();
}

uint64_t sub_1B256C480()
{
  return sub_1B25CC874();
}

void sub_1B256C4EC(const char *a1, uint64_t a2, int a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  NSObject *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  os_log_type_t v32;
  _BOOL4 v33;
  uint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  int v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  os_signpost_id_t v60;
  _QWORD v61[2];
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  const char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;

  v72 = a5;
  LODWORD(v73) = a3;
  v10 = sub_1B25CC868();
  v65 = *(_QWORD *)(v10 - 8);
  v66 = v10;
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v11, v12);
  OUTLINED_FUNCTION_767();
  v62 = v13;
  v14 = OUTLINED_FUNCTION_16_10();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14, v16);
  OUTLINED_FUNCTION_29_7();
  v71 = (char *)v17;
  v20 = MEMORY[0x1E0C80A78](v18, v19);
  v69 = (char *)v61 - v21;
  MEMORY[0x1E0C80A78](v20, v22);
  v24 = (char *)v61 - v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6808);
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v25, v26);
  OUTLINED_FUNCTION_29_7();
  v70 = v27;
  MEMORY[0x1E0C80A78](v28, v29);
  v74 = (uint64_t)v61 - v30;
  if (qword_1ED36CF48 != -1)
    swift_once();
  v31 = OUTLINED_FUNCTION_147();
  OUTLINED_FUNCTION_6_3(v31, (uint64_t)qword_1ED36D980);
  v32 = OUTLINED_FUNCTION_34_1();
  v33 = os_log_type_enabled(v6, v32);
  v63 = a6;
  v64 = a4;
  if (v33)
  {
    v34 = OUTLINED_FUNCTION_246();
    v61[1] = v15;
    v35 = (uint8_t *)v34;
    v76 = OUTLINED_FUNCTION_246();
    v61[0] = v14;
    *(_DWORD *)v35 = 136315138;
    v67 = v24;
    v36 = sub_1B25CD300();
    v75 = sub_1B2504AB0(v36, v37, &v76);
    sub_1B25CD12C();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_91_1(&dword_1B2494000, v6, v32, "Logging signpost end event: %s", v35);
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_174();
  }

  v38 = (char *)a1;
  v39 = sub_1B25CD300();
  v41 = v40;
  __swift_storeEnumTagSinglePayload(v74, 1, 1, v14);
  if (qword_1EEFD6E20 != -1)
    swift_once();
  v42 = qword_1EEFD6E10;
  swift_bridgeObjectRetain();
  v43 = v74;
  sub_1B256CF94(v42, v74, v39, v41);
  swift_bridgeObjectRelease();
  v44 = v70;
  sub_1B256D198(v43, v70);
  if (__swift_getEnumTagSinglePayload(v44, 1, v14) == 1)
  {
    sub_1B256D1E0(v44);
LABEL_22:
    sub_1B256D1E0(v74);
    OUTLINED_FUNCTION_7_1();
    return;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(v24, v44, v14);
  v45 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  v45(v69, v24, v14);
  sub_1B25CC898();
  OUTLINED_FUNCTION_24_13();
  sub_1B25CC88C();
  sub_1B256D15C();
  v46 = sub_1B256C480();
  OUTLINED_FUNCTION_5_11(v46, v47, v48);
  OUTLINED_FUNCTION_444();
  v49 = sub_1B25CC850();
  sub_1B25CC880();
  v50 = sub_1B25CD00C();
  if ((sub_1B25CD0FC() & 1) == 0)
  {
    OUTLINED_FUNCTION_36_2();

    OUTLINED_FUNCTION_281((uint64_t)v71);
    OUTLINED_FUNCTION_281((uint64_t)v24);
    OUTLINED_FUNCTION_75_3();
    goto LABEL_22;
  }
  LODWORD(v70) = v50;
  if ((v73 & 1) != 0)
  {
    if ((unint64_t)v38 >> 32)
    {
      __break(1u);
    }
    else
    {
      v52 = v65;
      v51 = v66;
      if (v38 >> 11 == 27)
      {
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
      if (v38 >> 16 <= 0x10)
      {
        v38 = &v77;
LABEL_18:
        swift_retain();
        v53 = v62;
        sub_1B25CC8A4();
        OUTLINED_FUNCTION_75_3();
        v54 = (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 88))(v53, v51);
        v55 = *MEMORY[0x1E0DF2190];
        v67 = v24;
        v73 = v38;
        if (v54 == v55)
        {
          v56 = 0;
          v68 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v53, v51);
          v68 = "%{signpost.description:end_time,public}llu %s";
          v56 = 2;
        }
        v45(v69, v71, v14);
        v57 = OUTLINED_FUNCTION_246();
        v58 = OUTLINED_FUNCTION_246();
        *(_BYTE *)v57 = v56;
        *(_BYTE *)(v57 + 1) = v56;
        *(_WORD *)(v57 + 2) = 2050;
        v75 = v63;
        v76 = v58;
        sub_1B25CD12C();
        *(_WORD *)(v57 + 12) = 2080;
        v59 = v72;
        swift_bridgeObjectRetain();
        v75 = sub_1B2504AB0(v64, v59, &v76);
        sub_1B25CD12C();
        OUTLINED_FUNCTION_39_1();
        v60 = sub_1B25CC82C();
        OUTLINED_FUNCTION_13_8(&dword_1B2494000, v49, (os_signpost_type_t)v70, v60, v73, v68, (uint8_t *)v57);
        OUTLINED_FUNCTION_13_1();
        OUTLINED_FUNCTION_174();
      }
    }
    __break(1u);
    goto LABEL_25;
  }
  if (v38)
  {
    v52 = v65;
    v51 = v66;
    goto LABEL_18;
  }
LABEL_26:
  OUTLINED_FUNCTION_36_2();
  __break(1u);
}

void sub_1B256CAD4(const char *a1, uint64_t a2, int a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v6;
  NSObject *v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  os_signpost_id_t v33;
  _QWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;

  v38 = a3;
  v39 = (char *)a1;
  v11 = sub_1B25CC838();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v13);
  OUTLINED_FUNCTION_6_12();
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (char *)v34 - v16;
  if (qword_1ED36CF48 != -1)
    swift_once();
  v18 = OUTLINED_FUNCTION_147();
  OUTLINED_FUNCTION_6_3(v18, (uint64_t)qword_1ED36D980);
  v19 = OUTLINED_FUNCTION_34_1();
  v20 = os_log_type_enabled(v7, v19);
  v35 = a6;
  v36 = a4;
  if (v20)
  {
    v21 = OUTLINED_FUNCTION_246();
    v34[1] = v11;
    v22 = (uint8_t *)v21;
    v23 = OUTLINED_FUNCTION_246();
    v34[0] = v12;
    v41 = v23;
    *(_DWORD *)v22 = 136315138;
    v24 = sub_1B25CD300();
    v40 = sub_1B2504AB0(v24, v25, &v41);
    sub_1B25CD12C();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_91_1(&dword_1B2494000, v7, v19, "Logging signpost event: %s", v22);
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_174();
  }

  sub_1B25CC850();
  sub_1B25CC820();
  sub_1B256D15C();
  v26 = sub_1B256C480();
  OUTLINED_FUNCTION_5_11(v26, v27, v28);
  OUTLINED_FUNCTION_444();
  v29 = sub_1B25CC850();
  v30 = sub_1B25CD024();
  if ((sub_1B25CD0FC() & 1) == 0)
    goto LABEL_9;
  LODWORD(v37) = v30;
  if ((v38 & 1) == 0)
  {
    if (!v39)
    {
      OUTLINED_FUNCTION_36_2();
      __break(1u);
LABEL_9:

      OUTLINED_FUNCTION_36_2();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
      OUTLINED_FUNCTION_7_1();
      return;
    }
LABEL_14:
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 16))(v6, v17, v11);
    v31 = OUTLINED_FUNCTION_246();
    v32 = OUTLINED_FUNCTION_246();
    *(_DWORD *)v31 = 134349314;
    v40 = v35;
    v41 = v32;
    sub_1B25CD12C();
    *(_WORD *)(v31 + 12) = 2080;
    swift_bridgeObjectRetain();
    v40 = sub_1B2504AB0(v36, a5, &v41);
    OUTLINED_FUNCTION_23_12();
    OUTLINED_FUNCTION_39_1();
    v33 = sub_1B25CC82C();
    OUTLINED_FUNCTION_13_8(&dword_1B2494000, v29, (os_signpost_type_t)v37, v33, v39, "%{signpost.description:event_time,public}llu %s", (uint8_t *)v31);
    OUTLINED_FUNCTION_13_1();
    OUTLINED_FUNCTION_174();
  }
  if ((unint64_t)v39 >> 32)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v39 >> 11 != 27)
  {
    if (v39 >> 16 <= 0x10)
    {
      v39 = &v42;
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
}

uint64_t SignpostHelper.deinit()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_12_11();
  OUTLINED_FUNCTION_278_0(v1);
  return v0;
}

uint64_t SignpostHelper.__deallocating_deinit()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_12_11();
  OUTLINED_FUNCTION_278_0(v0);
  return swift_deallocClassInstance();
}

uint64_t sub_1B256CEDC()
{
  return type metadata accessor for SignpostHelper();
}

uint64_t type metadata accessor for SignpostHelper()
{
  uint64_t result;

  result = qword_1EEFD6E28;
  if (!qword_1EEFD6E28)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1B256CF1C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B25CC85C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for SignpostHelper()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1B256CF94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  os_unfair_lock_s *v12;
  _QWORD *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6808);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(os_unfair_lock_s **)(a1 + 16);
  os_unfair_lock_lock(v12);
  if (qword_1EEFD6E08 != -1)
    swift_once();
  swift_beginAccess();
  v13 = off_1EEFD6E00;
  if (*((_QWORD *)off_1EEFD6E00 + 2))
  {
    swift_bridgeObjectRetain();
    v14 = sub_1B24E113C(a3, a4);
    if ((v15 & 1) != 0)
    {
      v16 = v14;
      v17 = v13[7];
      v18 = sub_1B25CC838();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v11, v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v18);
      v19 = (uint64_t)v11;
      v20 = 0;
      v21 = v18;
    }
    else
    {
      v21 = sub_1B25CC838();
      v19 = (uint64_t)v11;
      v20 = 1;
    }
    __swift_storeEnumTagSinglePayload(v19, v20, 1, v21);
    swift_bridgeObjectRelease();
  }
  else
  {
    v22 = sub_1B25CC838();
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 1, 1, v22);
  }
  swift_endAccess();
  sub_1B256D220((uint64_t)v11, a2);
  os_unfair_lock_unlock(v12);
  return swift_bridgeObjectRelease();
}

uint64_t _s6Speech5_LockCMa_0()
{
  return objc_opt_self();
}

unint64_t sub_1B256D15C()
{
  unint64_t result;

  result = qword_1EEFD7638;
  if (!qword_1EEFD7638)
  {
    result = MEMORY[0x1B5E261DC](MEMORY[0x1E0DEE1D0], MEMORY[0x1E0DEE190]);
    atomic_store(result, (unint64_t *)&qword_1EEFD7638);
  }
  return result;
}

uint64_t sub_1B256D198(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6808);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B256D1E0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6808);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B256D220(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6808);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B256D268@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1B256C380(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_1B256D284@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t v10;

  swift_isUniquelyReferenced_nonNull_native();
  v10 = *v4;
  *v4 = 0x8000000000000000;
  sub_1B256D308(a1, a2, a3, a4);
  *v4 = v10;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B256D308@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v11 = sub_1B24E113C(a2, a3);
  if (__OFADD__(*(_QWORD *)(v10 + 16), (v12 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v13 = v11;
  v14 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD7508);
  if ((sub_1B25CD408() & 1) == 0)
    goto LABEL_5;
  v15 = sub_1B24E113C(a2, a3);
  if ((v14 & 1) != (v16 & 1))
  {
LABEL_9:
    result = sub_1B25CD630();
    __break(1u);
    return result;
  }
  v13 = v15;
LABEL_5:
  v17 = *v5;
  if ((v14 & 1) != 0)
  {
    v18 = *(_QWORD *)(v17 + 56);
    v19 = sub_1B25CC838();
    v20 = *(_QWORD *)(v19 - 8);
    v21 = *(_QWORD *)(v20 + 72) * v13;
    v22 = v18 + v21;
    v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32);
    v23(a4, v22, v19);
    v23(*(_QWORD *)(v17 + 56) + v21, a1, v19);
    return __swift_storeEnumTagSinglePayload(a4, 0, 1, v19);
  }
  else
  {
    sub_1B254C268(v13, a2, a3, a1, *v5);
    v25 = sub_1B25CC838();
    __swift_storeEnumTagSinglePayload(a4, 1, 1, v25);
    return swift_bridgeObjectRetain();
  }
}

uint64_t OUTLINED_FUNCTION_5_11(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B24C4564(a3);
}

uint64_t OUTLINED_FUNCTION_9_12()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(v3, v0, v2);
}

uint64_t OUTLINED_FUNCTION_12_11()
{
  return sub_1B25CC85C();
}

void OUTLINED_FUNCTION_13_8(void *a1, NSObject *a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5, const char *a6, uint8_t *a7)
{
  _os_signpost_emit_with_name_impl(a1, a2, a3, a4, a5, a6, a7, 0x16u);
}

uint64_t OUTLINED_FUNCTION_16_10()
{
  return sub_1B25CC838();
}

uint64_t OUTLINED_FUNCTION_23_12()
{
  return sub_1B25CD12C();
}

uint64_t OUTLINED_FUNCTION_24_13()
{
  return swift_allocObject();
}

void sub_1B256D500()
{
  JUMPOUT(0x1B5E261DCLL);
}

uint64_t sub_1B256D510@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = a5 + *(int *)(type metadata accessor for AdjacentPairsSequence.Iterator(0, a2, a3, a4) + 36);
  v8 = OUTLINED_FUNCTION_14_8();
  __swift_storeEnumTagSinglePayload(v7, 1, 1, v8);
  v9 = OUTLINED_FUNCTION_14_8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a5, a1, v9);
}

void sub_1B256D5A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  int EnumTagSinglePayload;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  OUTLINED_FUNCTION_59_0();
  v2 = v1;
  v50 = v3;
  v4 = *(_QWORD *)(v1 + 16);
  v49 = *(_QWORD *)(v1 + 24);
  v47 = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v44 = *(_QWORD *)(AssociatedTypeWitness - 8);
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v6, v7);
  OUTLINED_FUNCTION_29_7();
  v42 = v8;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v9, v10);
  v45 = (uint64_t)&v41 - v11;
  v12 = OUTLINED_FUNCTION_39_6();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v14);
  v43 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_42_8();
  v18 = MEMORY[0x1E0C80A78](v16, v17);
  v20 = (char *)&v41 - v19;
  v22 = MEMORY[0x1E0C80A78](v18, v21);
  v24 = (char *)&v41 - v23;
  MEMORY[0x1E0C80A78](v22, v25);
  v27 = (char *)&v41 - v26;
  v28 = *(int *)(v2 + 36);
  v48 = v0;
  v29 = v0 + v28;
  OUTLINED_FUNCTION_36_8((uint64_t)&v41 - v26);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v27, 1, AssociatedTypeWitness);
  v46 = *(void (**)(char *, uint64_t))(v13 + 8);
  v46(v27, v12);
  if (EnumTagSinglePayload == 1)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    sub_1B25CD114();
    OUTLINED_FUNCTION_817(v29, (uint64_t)v24, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 40));
  }
  OUTLINED_FUNCTION_36_8((uint64_t)v20);
  OUTLINED_FUNCTION_25_13((uint64_t)v20);
  if (v31)
    goto LABEL_7;
  v32 = v44;
  v33 = v45;
  OUTLINED_FUNCTION_23_13(v45, (uint64_t)v20);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v20 = v43;
  sub_1B25CD114();
  OUTLINED_FUNCTION_25_13((uint64_t)v20);
  if (v31)
  {
    OUTLINED_FUNCTION_249_0(v33, *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8));
LABEL_7:
    OUTLINED_FUNCTION_30_8((uint64_t)v20);
    v40 = OUTLINED_FUNCTION_4_13();
    v38 = v50;
    v39 = 1;
    goto LABEL_8;
  }
  v34 = v42;
  OUTLINED_FUNCTION_23_13(v42, (uint64_t)v20);
  OUTLINED_FUNCTION_30_8(v29);
  OUTLINED_FUNCTION_286_0(v29, v34, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 16));
  __swift_storeEnumTagSinglePayload(v29, 0, 1, AssociatedTypeWitness);
  v35 = OUTLINED_FUNCTION_4_13();
  v36 = v50;
  v37 = v50 + *(int *)(v35 + 48);
  OUTLINED_FUNCTION_23_13(v50, v33);
  OUTLINED_FUNCTION_23_13(v37, v34);
  v38 = v36;
  v39 = 0;
  v40 = v35;
LABEL_8:
  __swift_storeEnumTagSinglePayload(v38, v39, 1, v40);
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_1B256D8B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](a1, a2);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v7 + 24);
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_18_8();
  MEMORY[0x1E0C80A78](v11, v12);
  v14 = (char *)&v17 - v13;
  OUTLINED_FUNCTION_286_0((uint64_t)v9, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
  sub_1B25CCB38();
  return sub_1B256D510((uint64_t)v14, v5, v10, v15, a3);
}

uint64_t sub_1B256D9A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  sub_1B256D8B8(a1, a2, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v3, a1);
}

uint64_t sub_1B256D9D0(uint64_t a1)
{
  return sub_1B256EA68(a1, MEMORY[0x1E0DEAA68]);
}

uint64_t sub_1B256D9F4()
{
  return sub_1B25CCB74();
}

uint64_t sub_1B256DA18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  OUTLINED_FUNCTION_5_12();
  v5 = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32);
  v10(v5, v3, AssociatedTypeWitness);
  v8 = v5 + *(int *)(type metadata accessor for AdjacentPairsCollection.Index(0, v1, v0, v7) + 36);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v10)(v8, v2, AssociatedTypeWitness);
}

void sub_1B256DAB4()
{
  OUTLINED_FUNCTION_5_12();
  OUTLINED_FUNCTION_26_11();
  OUTLINED_FUNCTION_12_12();
  OUTLINED_FUNCTION_32_12();
  sub_1B25CC994();
  OUTLINED_FUNCTION_233();
}

void sub_1B256DB08()
{
  OUTLINED_FUNCTION_5_12();
  OUTLINED_FUNCTION_26_11();
  OUTLINED_FUNCTION_12_12();
  OUTLINED_FUNCTION_32_12();
  sub_1B25CC94C();
  OUTLINED_FUNCTION_233();
}

void sub_1B256DB5C()
{
  sub_1B256DB08();
}

void sub_1B256DB74()
{
  sub_1B256DAB4();
}

void sub_1B256DB80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_59_0();
  v1 = v0;
  v3 = v2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v6);
  OUTLINED_FUNCTION_434();
  v9 = v7 - v8;
  MEMORY[0x1E0C80A78](v10, v11);
  v12 = v1 + *(int *)(v3 + 36);
  OUTLINED_FUNCTION_16_11();
  swift_getAssociatedConformanceWitness();
  LOBYTE(v3) = sub_1B25CC994();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, AssociatedTypeWitness);
  if ((v3 & 1) != 0)
    OUTLINED_FUNCTION_16_11();
  else
    sub_1B25CCE8C();
  OUTLINED_FUNCTION_817(v9, v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
  OUTLINED_FUNCTION_33_8();
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_1B256DCBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_10_15();
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_18_11();
  MEMORY[0x1E0C80A78](v2, v3);
  OUTLINED_FUNCTION_11_10();
  OUTLINED_FUNCTION_11_10();
  return OUTLINED_FUNCTION_15_7();
}

void sub_1B256DD58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(_BYTE *, _QWORD);
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  void (*v16)(_BYTE *, _QWORD);
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[32];

  OUTLINED_FUNCTION_59_0();
  v17 = v1;
  v18 = v2;
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v1, v2);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v8 + 24);
  v10 = (void (*)(_BYTE *, _QWORD))OUTLINED_FUNCTION_38_9();
  v12 = v11;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16);
  v14(v17, v12, AssociatedTypeWitness);
  v10(v19, 0);
  OUTLINED_FUNCTION_307((uint64_t)v7, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
  type metadata accessor for AdjacentPairsCollection.Index(0, v4, v9, v15);
  v16 = (void (*)(_BYTE *, _QWORD))OUTLINED_FUNCTION_38_9();
  ((void (*)(uint64_t))v14)(v18);
  v16(v19, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  OUTLINED_FUNCTION_7_1();
}

void sub_1B256DE74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t (*v36)(uint64_t, uint64_t, uint64_t);
  char v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  OUTLINED_FUNCTION_59_0();
  v52 = v0;
  v2 = v1;
  v4 = v3;
  v50 = v5;
  v49 = OUTLINED_FUNCTION_10_15();
  v51 = *(_QWORD *)(v49 - 8);
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v6, v7);
  OUTLINED_FUNCTION_29_7();
  v47 = v8;
  OUTLINED_FUNCTION_42_8();
  v11 = MEMORY[0x1E0C80A78](v9, v10);
  OUTLINED_FUNCTION_40_6(v11, v12, v13, v14, v15, v16, v17, v18, v45);
  v19 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v20, v21);
  v22 = OUTLINED_FUNCTION_17_11();
  v26 = OUTLINED_FUNCTION_28_12(v22, v23, v24, v25);
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26, v28);
  OUTLINED_FUNCTION_434();
  v31 = v29 - v30;
  MEMORY[0x1E0C80A78](v32, v33);
  v35 = (char *)&v45 - v34;
  v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 16);
  v46 = v4;
  OUTLINED_FUNCTION_307((uint64_t)&v45 - v34, v4, v36);
  OUTLINED_FUNCTION_817(v0, v52, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 16));
  sub_1B256DCBC();
  OUTLINED_FUNCTION_41_12();
  LOBYTE(v4) = v37;
  v38 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
  v38(v31, v26);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v0, v2);
  v38((uint64_t)v35, v26);
  if ((v4 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v39 = v46 + *(int *)(v26 + 36);
    v40 = v48;
    sub_1B25CCEA4();
    v41 = v47;
    OUTLINED_FUNCTION_11_10();
    v42 = v49;
    swift_getAssociatedConformanceWitness();
    v43 = sub_1B25CC994();
    v44 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
    v44(v41, v42);
    if ((v43 & 1) != 0)
    {
      sub_1B256DCBC();
      v44(v40, v42);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 16))(v41, v39, v42);
      OUTLINED_FUNCTION_15_7();
    }
    OUTLINED_FUNCTION_7_1();
  }
}

void sub_1B256E0AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_59_0();
  v24 = v0;
  v25 = v1;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = type metadata accessor for AdjacentPairsCollection.Index(0, *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), v1);
  v10 = *(_QWORD *)(v9 - 8);
  OUTLINED_FUNCTION_18_8();
  MEMORY[0x1E0C80A78](v11, v12);
  v14 = (char *)&v22 - v13;
  v15 = *(_QWORD *)(OUTLINED_FUNCTION_39_6() - 8);
  OUTLINED_FUNCTION_18_8();
  v18 = MEMORY[0x1E0C80A78](v16, v17);
  v20 = (char *)&v22 - v19;
  if (!v3)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v7, v5, v9);
    return;
  }
  v23 = v18;
  if (v3 < 1)
  {
    if (__OFSUB__(0, v3))
    {
      __break(1u);
      goto LABEL_10;
    }
    sub_1B256DB80();
    OUTLINED_FUNCTION_19_8();
    sub_1B256E540();
  }
  else
  {
    sub_1B256DCBC();
    OUTLINED_FUNCTION_19_8();
    sub_1B256E240();
  }
  OUTLINED_FUNCTION_249_0((uint64_t)v14, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
  OUTLINED_FUNCTION_25_13((uint64_t)v20);
  if (!v21)
  {
    OUTLINED_FUNCTION_286_0(v7, (uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 32));
    OUTLINED_FUNCTION_7_1();
    return;
  }
LABEL_10:
  (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v23);
  sub_1B25CD45C();
  __break(1u);
}

void sub_1B256E240()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(char *, char *, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  uint64_t v51;

  OUTLINED_FUNCTION_59_0();
  v50 = v2;
  v51 = v0;
  v4 = v3;
  v48 = v6;
  v49 = v5;
  v45 = *(_QWORD *)(v7 - 8);
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v8, v9);
  OUTLINED_FUNCTION_767();
  v43 = v10;
  v13 = *(_QWORD *)(v11 + 16);
  v12 = *(_QWORD *)(v11 + 24);
  v46 = v11;
  swift_getAssociatedTypeWitness();
  v14 = *(_QWORD *)(OUTLINED_FUNCTION_20_11() - 8);
  OUTLINED_FUNCTION_18_8();
  v17 = MEMORY[0x1E0C80A78](v15, v16);
  v19 = (char *)&v42 - v18;
  v20 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v17, v21);
  v44 = (char *)&v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_42_8();
  v25 = MEMORY[0x1E0C80A78](v23, v24);
  v27 = (char *)&v42 - v26;
  MEMORY[0x1E0C80A78](v25, v28);
  v30 = (char *)&v42 - v29;
  v32 = type metadata accessor for AdjacentPairsCollection.Index(0, v13, v12, v31);
  if (__OFSUB__(v4, 1))
  {
    __break(1u);
  }
  else
  {
    v47 = v32;
    sub_1B25CCEB0();
    if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v1) == 1)
    {
      OUTLINED_FUNCTION_249_0((uint64_t)v19, *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
LABEL_6:
      v36 = 1;
      v37 = v48;
LABEL_12:
      __swift_storeEnumTagSinglePayload(v37, v36, 1, v47);
      OUTLINED_FUNCTION_7_1();
      return;
    }
    v33 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    v33(v30, v19, v1);
    OUTLINED_FUNCTION_8_12();
    v34 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 8);
    OUTLINED_FUNCTION_24_14();
    v35 = sub_1B25CC994();
    OUTLINED_FUNCTION_3_13((uint64_t)v27);
    if ((v35 & 1) != 0)
    {
      OUTLINED_FUNCTION_3_13((uint64_t)v30);
      goto LABEL_6;
    }
    v49 = v33;
    v50 = v34;
    v38 = v51;
    sub_1B25CCEA4();
    v39 = v43;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16))(v43, v38, v46);
    sub_1B25CCED4();
    OUTLINED_FUNCTION_24_14();
    LOBYTE(v38) = sub_1B25CC964();
    OUTLINED_FUNCTION_3_13((uint64_t)v27);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v39, v46);
    if ((v38 & 1) != 0)
    {
      OUTLINED_FUNCTION_8_12();
      v40 = (uint64_t)v44;
      OUTLINED_FUNCTION_24_14();
      v41 = sub_1B25CC994();
      OUTLINED_FUNCTION_3_13((uint64_t)v27);
      if ((v41 & 1) != 0)
      {
        v37 = v48;
        sub_1B256DCBC();
        OUTLINED_FUNCTION_3_13(v40);
        OUTLINED_FUNCTION_3_13((uint64_t)v30);
      }
      else
      {
        v49(v27, v30, v1);
        v37 = v48;
        sub_1B256DA18();
      }
      v36 = 0;
      goto LABEL_12;
    }
  }
  __break(1u);
}

void sub_1B256E540()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(char *, char *, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char v33;
  char v34;
  _BOOL8 v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;

  OUTLINED_FUNCTION_59_0();
  v3 = v2;
  v56 = v5;
  v57 = v4;
  v55 = v6;
  v53 = *(_QWORD *)(v2 - 8);
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v7, v8);
  OUTLINED_FUNCTION_767();
  v52 = v9;
  OUTLINED_FUNCTION_10_15();
  v10 = OUTLINED_FUNCTION_20_11();
  v46 = *(_QWORD *)(v10 - 8);
  v47 = v10;
  OUTLINED_FUNCTION_18_8();
  MEMORY[0x1E0C80A78](v11, v12);
  v14 = (char *)&v46 - v13;
  v49 = *(_QWORD *)(v1 - 8);
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v15, v16);
  OUTLINED_FUNCTION_29_7();
  v51 = v17;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v18, v19);
  v50 = (char *)&v46 - v20;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v21, v22);
  v54 = (char *)&v46 - v23;
  v27 = OUTLINED_FUNCTION_28_12(0, v24, v25, v26);
  v28 = *(_QWORD *)(v27 - 8);
  OUTLINED_FUNCTION_18_8();
  MEMORY[0x1E0C80A78](v29, v30);
  v32 = (char *)&v46 - v31;
  v48 = v3;
  sub_1B256DCBC();
  OUTLINED_FUNCTION_41_12();
  v34 = v33;
  (*(void (**)(char *, uint64_t))(v28 + 8))(v32, v27);
  v35 = (v34 & 1) == 0;
  v36 = __OFSUB__(v57, v35);
  v37 = v57 - v35;
  if (v36)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (__OFSUB__(0, v37))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  sub_1B25CCEB0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v1) == 1)
  {
    (*(void (**)(char *, uint64_t))(v46 + 8))(v14, v47);
    v38 = 1;
    v39 = v55;
LABEL_7:
    __swift_storeEnumTagSinglePayload(v39, v38, 1, v27);
    OUTLINED_FUNCTION_7_1();
    return;
  }
  v57 = v27;
  v40 = v49;
  v56 = *(void (**)(char *, char *, uint64_t))(v49 + 32);
  v56(v54, v14, v1);
  sub_1B25CCEBC();
  v42 = v52;
  v41 = v53;
  v43 = v48;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v52, v0, v48);
  v44 = v51;
  sub_1B25CCE8C();
  swift_getAssociatedConformanceWitness();
  v45 = v44;
  LOBYTE(v44) = sub_1B25CC958();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v45, v1);
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v42, v43);
  if ((v44 & 1) != 0)
  {
    v56(v45, v54, v1);
    v39 = v55;
    OUTLINED_FUNCTION_15_7();
    v38 = 0;
    v27 = v57;
    goto LABEL_7;
  }
LABEL_10:
  __break(1u);
}

void sub_1B256E834()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  OUTLINED_FUNCTION_59_0();
  v30 = v0;
  v31 = v1;
  v29 = v2;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v11 = type metadata accessor for AdjacentPairsCollection.Index(0, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), v2);
  MEMORY[0x1E0C80A78](v11, v12);
  OUTLINED_FUNCTION_434();
  v15 = v13 - v14;
  MEMORY[0x1E0C80A78](v16, v17);
  v20 = (char *)&v27 - v19;
  if (!v6)
  {
    OUTLINED_FUNCTION_307(v10, v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 16));
    v24 = v10;
    v25 = 0;
    goto LABEL_5;
  }
  v21 = v6;
  v22 = v18;
  v28 = v10;
  OUTLINED_FUNCTION_29_12();
  sub_1B256DAB4();
  if ((v23 & 1) != 0)
  {
    v24 = v28;
    v25 = 1;
LABEL_5:
    __swift_storeEnumTagSinglePayload(v24, v25, 1, v11);
    return;
  }
  if (v21 >= 1)
  {
    MEMORY[0x1B5E261DC](&unk_1B25E0500, v11);
    if ((sub_1B25CC970() & 1) != 0)
      OUTLINED_FUNCTION_307((uint64_t)v20, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 16));
    else
      sub_1B256DCBC();
    sub_1B256E240();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v20, v11);
    goto LABEL_16;
  }
  OUTLINED_FUNCTION_29_12();
  sub_1B256DB08();
  if ((v26 & 1) != 0)
    OUTLINED_FUNCTION_307(v15, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 16));
  else
    sub_1B256DB80();
  if (!__OFSUB__(0, v21))
  {
    sub_1B256E540();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v15, v11);
LABEL_16:
    OUTLINED_FUNCTION_7_1();
    return;
  }
  __break(1u);
}

uint64_t sub_1B256EA10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for AdjacentPairsCollection.Index(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
  return sub_1B25CCEC8();
}

uint64_t sub_1B256EA68(uint64_t a1, uint64_t (*a2)(_QWORD, _QWORD))
{
  uint64_t result;

  result = a2(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  if (!__OFSUB__(result, 1))
    return (result - 1) & ~((result - 1) >> 63);
  __break(1u);
  return result;
}

void (*sub_1B256EAA0(uint64_t **a1))(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t AssociatedTypeWitness;
  uint64_t TupleTypeMetadata2;
  uint64_t v5;
  char *v6;
  void (*v7)(_QWORD *);
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *);

  v2 = (uint64_t *)malloc(0x40uLL);
  *a1 = v2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v2[4] = TupleTypeMetadata2;
  v5 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v2[5] = v5;
  v6 = (char *)malloc(*(_QWORD *)(v5 + 64));
  v2[6] = (uint64_t)v6;
  v7 = sub_1B256EBE8(v2);
  v9 = v8;
  v2[7] = (uint64_t)v7;
  v10 = *(void (**)(char *))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16);
  v10(v6);
  ((void (*)(char *, uint64_t, uint64_t))v10)(&v6[*(int *)(TupleTypeMetadata2 + 48)], v9, AssociatedTypeWitness);
  return sub_1B256EB94;
}

void sub_1B256EB94(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;

  v3 = *a1;
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(*a1 + 40) + 8))(*(_QWORD *)(*a1 + 48), *(_QWORD *)(*a1 + 32));
  v4 = *(void **)(v3 + 48);
  (*(void (**)(uint64_t, uint64_t))(v3 + 56))(v3, a2);
  free(v4);
  free((void *)v3);
}

void (*sub_1B256EBE8(uint64_t *a1))(_QWORD *a1)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v3;

  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *a1 = TupleTypeMetadata2;
  v3 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  a1[1] = v3;
  a1[2] = (uint64_t)malloc(*(_QWORD *)(v3 + 64));
  sub_1B256DD58();
  return sub_1B256EC9C;
}

void sub_1B256EC9C(_QWORD *a1)
{
  void *v1;

  v1 = (void *)a1[2];
  (*(void (**)(void *, _QWORD))(a1[1] + 8))(v1, *a1);
  free(v1);
}

uint64_t sub_1B256ECD8(uint64_t a1)
{
  return sub_1B256EA68(a1, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEB560]);
}

uint64_t sub_1B256ECF8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4;

  type metadata accessor for AdjacentPairsCollection.Index(255, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
  v4 = sub_1B25CD108();
  return __swift_storeEnumTagSinglePayload(a3, 1, 1, v4);
}

uint64_t sub_1B256ED5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v5 = type metadata accessor for AdjacentPairsCollection.Index(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v11 - v8;
  sub_1B256DE74();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v9, v5);
}

uint64_t sub_1B256EE00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v6 = type metadata accessor for AdjacentPairsCollection.Index(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)&v14 - v9;
  v11 = *(_QWORD *)(a1 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(a3, v3, a1);
  sub_1B256DB80();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v3, a1);
  MEMORY[0x1B5E261DC](&unk_1B25E0420, a1);
  v12 = sub_1B25CD3FC();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(a3 + *(int *)(v12 + 36), v10, v6);
}

uint64_t sub_1B256EEE0(uint64_t a1)
{
  MEMORY[0x1B5E261DC](&unk_1B25E0420, a1);
  return sub_1B25CCEEC();
}

uint64_t sub_1B256EF14(uint64_t a1)
{
  MEMORY[0x1B5E261DC](&unk_1B25E0420, a1);
  return sub_1B25CCF1C();
}

void sub_1B256EF48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, uint64_t, uint64_t);
  char v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t AssociatedTypeWitness;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  OUTLINED_FUNCTION_59_0();
  v47 = v1;
  v48 = v0;
  v3 = v2;
  v5 = v4;
  v46 = v6;
  v7 = *(_QWORD *)(v6 + 8);
  v8 = *(_QWORD *)(v2 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v41 = *(_QWORD *)(AssociatedTypeWitness - 8);
  OUTLINED_FUNCTION_43_3();
  MEMORY[0x1E0C80A78](v9, v10);
  OUTLINED_FUNCTION_29_7();
  v45 = v11;
  OUTLINED_FUNCTION_42_8();
  v14 = MEMORY[0x1E0C80A78](v12, v13);
  OUTLINED_FUNCTION_40_6(v14, v15, v16, v17, v18, v19, v20, v21, v41);
  v22 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v23, v24);
  v25 = OUTLINED_FUNCTION_17_11();
  v27 = type metadata accessor for AdjacentPairsCollection.Index(v25, v8, v7, v26);
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27, v29);
  OUTLINED_FUNCTION_18_11();
  MEMORY[0x1E0C80A78](v30, v31);
  v33 = (char *)&v41 - v32;
  v34 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
  v42 = v5;
  v34((char *)&v41 - v32, v5, v27);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v0, v48, v3);
  sub_1B256DB80();
  OUTLINED_FUNCTION_21_11();
  LOBYTE(v5) = v35;
  v36 = *(void (**)(char *, uint64_t))(v28 + 8);
  OUTLINED_FUNCTION_37_8();
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v0, v3);
  v36(v33, v27);
  if ((v5 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_1B256DCBC();
    v37 = v42;
    OUTLINED_FUNCTION_21_11();
    v39 = v38;
    OUTLINED_FUNCTION_37_8();
    if ((v39 & 1) != 0)
    {
      v40 = v45;
      OUTLINED_FUNCTION_16_11();
      sub_1B25CC928();
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, AssociatedTypeWitness);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v44, v37, AssociatedTypeWitness);
    }
    sub_1B25CC928();
    OUTLINED_FUNCTION_33_8();
    OUTLINED_FUNCTION_7_1();
  }
}

void sub_1B256F154()
{
  sub_1B256EF48();
}

uint64_t sub_1B256F15C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v5 = type metadata accessor for AdjacentPairsCollection.Index(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8), a4);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v11 - v8;
  sub_1B256EF48();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v9, v5);
}

uint64_t sub_1B256F210()
{
  swift_getAssociatedTypeWitness();
  return sub_1B25CC91C();
}

uint64_t sub_1B256F264()
{
  sub_1B25CD6A8();
  sub_1B256F210();
  return sub_1B25CD6CC();
}

uint64_t sub_1B256F2B8()
{
  return sub_1B256F264();
}

uint64_t sub_1B256F2C0()
{
  return sub_1B256F210();
}

uint64_t sub_1B256F2C8()
{
  sub_1B25CD6A8();
  sub_1B256F210();
  return sub_1B25CD6CC();
}

void sub_1B256F318()
{
  JUMPOUT(0x1B5E261DCLL);
}

uint64_t sub_1B256F328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a3 - 8);
  return MEMORY[0x1B5E261DC](&unk_1B25E02A4, a1, &v4);
}

void sub_1B256F35C()
{
  JUMPOUT(0x1B5E261DCLL);
}

uint64_t sub_1B256F36C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x1B5E261DC](&unk_1B25E034C, a1, &v4);
}

uint64_t sub_1B256F3A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B256F3F4(a1, a2, a3, (uint64_t)&unk_1B25E02F0, MEMORY[0x1E0DEA220]);
}

uint64_t sub_1B256F3B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B256F3F4(a1, a2, a3, (uint64_t)&unk_1B25E02F0, MEMORY[0x1E0DEDE40]);
}

uint64_t sub_1B256F3CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B256F3F4(a1, a2, a3, (uint64_t)&unk_1B25E034C, MEMORY[0x1E0DEA210]);
}

uint64_t sub_1B256F3E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B256F3F4(a1, a2, a3, (uint64_t)&unk_1B25E034C, MEMORY[0x1E0DEDE28]);
}

uint64_t sub_1B256F3F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;

  v9 = *(_QWORD *)(a3 - 8);
  v8 = MEMORY[0x1B5E261DC](a4, a2, &v9);
  return MEMORY[0x1B5E261DC](a5, a1, &v8);
}

void sub_1B256F444()
{
  JUMPOUT(0x1B5E261DCLL);
}

void sub_1B256F454()
{
  JUMPOUT(0x1B5E261DCLL);
}

void sub_1B256F464()
{
  JUMPOUT(0x1B5E261DCLL);
}

void sub_1B256F474()
{
  JUMPOUT(0x1B5E261DCLL);
}

void sub_1B256F484()
{
  JUMPOUT(0x1B5E261DCLL);
}

void sub_1B256F494()
{
  JUMPOUT(0x1B5E261DCLL);
}

uint64_t type metadata accessor for AdjacentPairsSequence.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AdjacentPairsSequence.Iterator);
}

uint64_t type metadata accessor for AdjacentPairsCollection.Index(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AdjacentPairsCollection.Index);
}

uint64_t sub_1B256F4BC()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1B256F4C4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    result = sub_1B25CD108();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1B256F590(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  const void *v21;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = v9;
  v11 = v6 + v9;
  if (*(_DWORD *)(v8 + 84))
    v12 = *(_QWORD *)(v8 + 64);
  else
    v12 = *(_QWORD *)(v8 + 64) + 1;
  v13 = *(_DWORD *)(v5 + 80) | v9;
  v14 = (*(_BYTE *)(v5 + 80) | v9);
  v15 = v13 & 0x100000;
  if (v14 > 7 || v15 != 0 || (v11 & ~v10) + v12 > 0x18)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v14 + 16) & ~v14));
    swift_retain();
  }
  else
  {
    v19 = v7;
    v20 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    v21 = (const void *)(((unint64_t)a2 + v11) & v20);
    if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v19))
    {
      memcpy((void *)(((unint64_t)a1 + v11) & v20), v21, v12);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v8 + 16))(((unint64_t)a1 + v11) & v20, v21, v19);
      __swift_storeEnumTagSinglePayload(((unint64_t)a1 + v11) & v20, 0, 1, v19);
    }
  }
  return a1;
}

uint64_t sub_1B256F700(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  v4 = *(_QWORD *)(v3 + 64) + a1;
  v5 = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  result = __swift_getEnumTagSinglePayload(v7, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v6 + 8))(v7, v5);
  return result;
}

uint64_t sub_1B256F7D4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  size_t v12;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (void *)((v6 + v9 + a1) & ~v9);
  v11 = (const void *)((v6 + v9 + a2) & ~v9);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v7))
  {
    if (*(_DWORD *)(v8 + 84))
      v12 = *(_QWORD *)(v8 + 64);
    else
      v12 = *(_QWORD *)(v8 + 64) + 1;
    memcpy(v10, v11, v12);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v10, v11, v7);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_1B256F8E4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  int EnumTagSinglePayload;
  int v13;
  size_t v14;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (void *)((v6 + v9 + a1) & ~v9);
  v11 = (const void *)((v6 + v9 + a2) & ~v9);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v7);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v7);
  if (EnumTagSinglePayload)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v10, v11, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v7);
      return a1;
    }
  }
  else
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 24))(v10, v11, v7);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  }
  if (*(_DWORD *)(v8 + 84))
    v14 = *(_QWORD *)(v8 + 64);
  else
    v14 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(v10, v11, v14);
  return a1;
}

uint64_t sub_1B256FA40(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  size_t v12;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (void *)((v6 + v9 + a1) & ~v9);
  v11 = (const void *)((v6 + v9 + a2) & ~v9);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v7))
  {
    if (*(_DWORD *)(v8 + 84))
      v12 = *(_QWORD *)(v8 + 64);
    else
      v12 = *(_QWORD *)(v8 + 64) + 1;
    memcpy(v10, v11, v12);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v10, v11, v7);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_1B256FB50(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  int EnumTagSinglePayload;
  int v13;
  size_t v14;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (void *)((v6 + v9 + a1) & ~v9);
  v11 = (const void *)((v6 + v9 + a2) & ~v9);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v7);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v7);
  if (EnumTagSinglePayload)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v10, v11, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v7);
      return a1;
    }
  }
  else
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 40))(v10, v11, v7);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  }
  if (*(_DWORD *)(v8 + 84))
    v14 = *(_QWORD *)(v8 + 64);
  else
    v14 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(v10, v11, v14);
  return a1;
}

uint64_t sub_1B256FCAC(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;
  unsigned int EnumTagSinglePayload;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int *)(v8 + 84);
  if ((_DWORD)v9)
    v10 = v9 - 1;
  else
    v10 = 0;
  if (v10 <= v6)
    v11 = v6;
  else
    v11 = v10;
  if ((_DWORD)v9)
    v12 = *(_QWORD *)(v8 + 64);
  else
    v12 = *(_QWORD *)(v8 + 64) + 1;
  if (!a2)
    return 0;
  v13 = *(unsigned __int8 *)(v8 + 80);
  v14 = *(_QWORD *)(v5 + 64) + v13;
  if (a2 <= v11)
    goto LABEL_29;
  v15 = v12 + (v14 & ~v13);
  v16 = 8 * v15;
  if (v15 <= 3)
  {
    v18 = ((a2 - v11 + ~(-1 << v16)) >> v16) + 1;
    if (HIWORD(v18))
    {
      v17 = *(_DWORD *)(a1 + v15);
      if (!v17)
        goto LABEL_29;
      goto LABEL_20;
    }
    if (v18 > 0xFF)
    {
      v17 = *(unsigned __int16 *)(a1 + v15);
      if (!*(_WORD *)(a1 + v15))
        goto LABEL_29;
      goto LABEL_20;
    }
    if (v18 < 2)
    {
LABEL_29:
      if (v11)
      {
        if (v6 >= v10)
          return __swift_getEnumTagSinglePayload(a1, v6, AssociatedTypeWitness);
        EnumTagSinglePayload = __swift_getEnumTagSinglePayload((v14 + a1) & ~v13, v9, v7);
        if (EnumTagSinglePayload >= 2)
          return EnumTagSinglePayload - 1;
        else
          return 0;
      }
      return 0;
    }
  }
  v17 = *(unsigned __int8 *)(a1 + v15);
  if (!*(_BYTE *)(a1 + v15))
    goto LABEL_29;
LABEL_20:
  v19 = (v17 - 1) << v16;
  if (v15 > 3)
    v19 = 0;
  if ((_DWORD)v15)
  {
    if (v15 <= 3)
      v20 = v15;
    else
      v20 = 4;
    __asm { BR              X12 }
  }
  return v11 + v19 + 1;
}

void sub_1B256FEA4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  size_t v16;
  char v17;
  unsigned int v18;
  unsigned int v19;
  int v20;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = 0u;
  v9 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v10 = *(_DWORD *)(v9 + 84);
  v11 = v10 - 1;
  if (!v10)
    v11 = 0;
  if (v11 <= v7)
    v12 = v7;
  else
    v12 = v11;
  v13 = (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v14 = *(_QWORD *)(v9 + 64);
  if (v10)
    v15 = v14;
  else
    v15 = v14 + 1;
  v16 = v13 + v15;
  v17 = 8 * (v13 + v15);
  if (a3 > v12)
  {
    if (v16 <= 3)
    {
      v18 = ((a3 - v12 + ~(-1 << v17)) >> v17) + 1;
      if (HIWORD(v18))
      {
        v8 = 4u;
      }
      else if (v18 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v18 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  if (v12 < a2)
  {
    v19 = ~v12 + a2;
    if (v16 < 4)
    {
      if ((_DWORD)v16)
      {
        v20 = v19 & ~(-1 << v17);
        bzero(a1, v16);
        if ((_DWORD)v16 == 3)
        {
          *(_WORD *)a1 = v20;
          a1[2] = BYTE2(v20);
        }
        else if ((_DWORD)v16 == 2)
        {
          *(_WORD *)a1 = v20;
        }
        else
        {
          *a1 = v20;
        }
      }
    }
    else
    {
      bzero(a1, v16);
      *(_DWORD *)a1 = v19;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

void sub_1B257013C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
}

void sub_1B2570144()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
}

void sub_1B257016C()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_1B257017C()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_1B2570184()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t sub_1B2570190()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1B25701FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1B257026C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1B257027C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))();
  return a1;
}

uint64_t sub_1B25702AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_1B25702DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_1B257030C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_1B257033C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return __swift_getEnumTagSinglePayload(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1B25703EC + 4 * byte_1B25E01C2[(v8 - 1)]))();
}

void sub_1B2570438(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0u;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t type metadata accessor for AdjacentPairsSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AdjacentPairsSequence);
}

uint64_t sub_1B25705EC()
{
  uint64_t AssociatedTypeWitness;
  unint64_t v1;
  unint64_t v2;

  AssociatedTypeWitness = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return AssociatedTypeWitness;
}

uint64_t *sub_1B2570694(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10;
  v12 = v7 + v10;
  v13 = *(_DWORD *)(v6 + 80) | v10;
  v14 = (*(_BYTE *)(v6 + 80) | v10);
  v15 = v13 & 0x100000;
  if (v14 > 7 || v15 != 0 || (v12 & (unint64_t)~v11) + *(_QWORD *)(v9 + 64) > 0x18)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v14 + 16) & ~v14));
    swift_retain();
  }
  else
  {
    v19 = AssociatedTypeWitness;
    v20 = ~v11;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v12) & v20, ((unint64_t)a2 + v12) & v20, v19);
  }
  return a1;
}

uint64_t sub_1B2570788(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(uint64_t, _QWORD))(v3 + 8))(a1, *(_QWORD *)(a2 + 16));
  v4 = *(_QWORD *)(v3 + 64) + a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(unint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))((v4 + *(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80), AssociatedTypeWitness);
}

uint64_t sub_1B2570804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v5 + 16))(a1, a2, *(_QWORD *)(a3 + 16));
  v6 = *(_QWORD *)(v5 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1B257089C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v5 + 24))(a1, a2, *(_QWORD *)(a3 + 16));
  v6 = *(_QWORD *)(v5 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 24))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1B2570934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v5 + 32))(a1, a2, *(_QWORD *)(a3 + 16));
  v6 = *(_QWORD *)(v5 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1B25709CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v5 + 40))(a1, a2, *(_QWORD *)(a3 + 16));
  v6 = *(_QWORD *)(v5 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 40))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1B2570A64(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;
  uint64_t v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v7)
    v11 = v7;
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = AssociatedTypeWitness;
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = *(_QWORD *)(v6 + 64) + v13;
  if (a2 <= v11)
    goto LABEL_23;
  v15 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v16 = 8 * v15;
  if (v15 <= 3)
  {
    v18 = ((a2 - v11 + ~(-1 << v16)) >> v16) + 1;
    if (HIWORD(v18))
    {
      v17 = *(_DWORD *)(a1 + v15);
      if (!v17)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v18 > 0xFF)
    {
      v17 = *(unsigned __int16 *)(a1 + v15);
      if (!*(_WORD *)(a1 + v15))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v18 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v7 >= v10)
        {
          v21 = a1;
          v10 = v7;
          v12 = v5;
        }
        else
        {
          v21 = (v14 + a1) & ~v13;
        }
        return __swift_getEnumTagSinglePayload(v21, v10, v12);
      }
      return 0;
    }
  }
  v17 = *(unsigned __int8 *)(a1 + v15);
  if (!*(_BYTE *)(a1 + v15))
    goto LABEL_23;
LABEL_14:
  v19 = (v17 - 1) << v16;
  if (v15 > 3)
    v19 = 0;
  if ((_DWORD)v15)
  {
    if (v15 <= 3)
      v20 = v15;
    else
      v20 = 4;
    __asm { BR              X12 }
  }
  return v11 + v19 + 1;
}

void sub_1B2570C08(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  size_t v11;
  char v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v9 + 84) <= v8)
    v10 = v8;
  else
    v10 = *(_DWORD *)(v9 + 84);
  v11 = ((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
      + *(_QWORD *)(v9 + 64);
  v12 = 8 * v11;
  if (a3 <= v10)
  {
    v13 = 0u;
  }
  else if (v11 <= 3)
  {
    v15 = ((a3 - v10 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v15))
    {
      v13 = 4u;
    }
    else if (v15 >= 0x100)
    {
      v13 = 2;
    }
    else
    {
      v13 = v15 > 1;
    }
  }
  else
  {
    v13 = 1u;
  }
  if (v10 < a2)
  {
    v14 = ~v10 + a2;
    if (v11 < 4)
    {
      if ((_DWORD)v11)
      {
        v16 = v14 & ~(-1 << v12);
        bzero(a1, v11);
        if ((_DWORD)v11 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if ((_DWORD)v11 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v14;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

uint64_t type metadata accessor for AdjacentPairsCollection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AdjacentPairsCollection);
}

uint64_t sub_1B2570E2C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1B2570EA8(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t *, uint64_t *, uint64_t);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  v8 = v7;
  v9 = ~(unint64_t)v7;
  v10 = v6 + v7;
  v11 = (v10 & v9) + v6;
  v12 = v7 & 0x100000;
  if (v8 > 7 || v12 != 0 || v11 > 0x18)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v8 + 16) & v9));
    swift_retain();
  }
  else
  {
    v16 = AssociatedTypeWitness;
    v17 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16);
    v17(a1, a2, AssociatedTypeWitness);
    v17((uint64_t *)(((unint64_t)a1 + v10) & v9), (uint64_t *)(((unint64_t)a2 + v10) & v9), v16);
  }
  return a1;
}

uint64_t sub_1B2570F78(unint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t (*v5)(unint64_t, uint64_t);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5 = *(uint64_t (**)(unint64_t, uint64_t))(v3 + 8);
  v5(a1, AssociatedTypeWitness);
  return v5((*(_QWORD *)(v3 + 64) + a1 + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80), AssociatedTypeWitness);
}

unint64_t sub_1B2571000(unint64_t a1, unint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  void (*v6)(unint64_t, unint64_t, uint64_t);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16);
  v6(a1, a2, AssociatedTypeWitness);
  v6((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v5 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), (*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v5 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

unint64_t sub_1B2571090(unint64_t a1, unint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  void (*v6)(unint64_t, unint64_t, uint64_t);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 24);
  v6(a1, a2, AssociatedTypeWitness);
  v6((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v5 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), (*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v5 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

unint64_t sub_1B2571120(unint64_t a1, unint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  void (*v6)(unint64_t, unint64_t, uint64_t);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32);
  v6(a1, a2, AssociatedTypeWitness);
  v6((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v5 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), (*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v5 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

unint64_t sub_1B25711B0(unint64_t a1, unint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  void (*v6)(unint64_t, unint64_t, uint64_t);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 40);
  v6(a1, a2, AssociatedTypeWitness);
  v6((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v5 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), (*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v5 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1B2571240(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (!a2)
    return 0;
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (a2 <= v6)
    goto LABEL_18;
  v7 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((a2 - v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return __swift_getEnumTagSinglePayload(a1, v6, AssociatedTypeWitness);
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if ((_DWORD)v7)
  {
    if (v7 > 3)
      LODWORD(v7) = 4;
    __asm { BR              X11 }
  }
  return (v6 + v11 + 1);
}

void sub_1B257138C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 <= v7)
  {
    v10 = 0u;
  }
  else if (v8 <= 3)
  {
    v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v12))
    {
      v10 = 4u;
    }
    else if (v12 >= 0x100)
    {
      v10 = 2;
    }
    else
    {
      v10 = v12 > 1;
    }
  }
  else
  {
    v10 = 1u;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *(_WORD *)a1 = v13;
          a1[2] = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *(_WORD *)a1 = v13;
        }
        else
        {
          *a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t OUTLINED_FUNCTION_3_13(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_4_13()
{
  return swift_getTupleTypeMetadata2();
}

uint64_t OUTLINED_FUNCTION_8_12()
{
  return sub_1B25CCED4();
}

uint64_t OUTLINED_FUNCTION_10_15()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_11_10()
{
  return sub_1B25CCED4();
}

uint64_t OUTLINED_FUNCTION_12_12()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_14_8()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_15_7()
{
  return sub_1B256DA18();
}

uint64_t OUTLINED_FUNCTION_16_11()
{
  return sub_1B25CCED4();
}

uint64_t OUTLINED_FUNCTION_17_11()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_19_8()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_20_11()
{
  return sub_1B25CD108();
}

void OUTLINED_FUNCTION_21_11()
{
  sub_1B256DAB4();
}

uint64_t OUTLINED_FUNCTION_23_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_25_13(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_26_11()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_28_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  return type metadata accessor for AdjacentPairsCollection.Index(a1, v5, v4, a4);
}

uint64_t OUTLINED_FUNCTION_29_12()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_30_8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 120))(a1, v1);
}

uint64_t OUTLINED_FUNCTION_32_12()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_33_8()
{
  return sub_1B256DA18();
}

uint64_t OUTLINED_FUNCTION_36_8(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_37_8()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v0, v2);
}

uint64_t OUTLINED_FUNCTION_38_9()
{
  return sub_1B25CCF58();
}

uint64_t OUTLINED_FUNCTION_39_6()
{
  return sub_1B25CD108();
}

void OUTLINED_FUNCTION_40_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 120) = (char *)&a9 - v9;
}

void OUTLINED_FUNCTION_41_12()
{
  sub_1B256DAB4();
}

uint64_t sub_1B2571758()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1B25717D0(uint64_t a1, uint64_t a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  char v10;
  char v11;

  v4 = objc_msgSend((id)objc_opt_self(), sel_systemClientId);
  v5 = sub_1B25CCA18();
  v7 = v6;

  if (v5 == a1 && v7 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v9 = OUTLINED_FUNCTION_303_0();
  swift_bridgeObjectRelease();
  v10 = 0;
  if ((v9 & 1) == 0)
  {
    if (a1 == 0xD000000000000015 && a2 == 0x80000001B25D5A00)
      goto LABEL_13;
    OUTLINED_FUNCTION_1_8();
    v11 = OUTLINED_FUNCTION_303_0();
    v10 = 0;
    if ((v11 & 1) == 0)
    {
      if (a1 != 0xD000000000000013 || a2 != 0x80000001B25D5A20)
      {
        OUTLINED_FUNCTION_1_8();
        v10 = OUTLINED_FUNCTION_303_0() ^ 1;
        return v10 & 1;
      }
LABEL_13:
      v10 = 0;
    }
  }
  return v10 & 1;
}

uint64_t sub_1B25718EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CEF8);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B25DB5B0;
  v3 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v2 + 64) = v3;
  *(_QWORD *)(v2 + 32) = a1;
  return sub_1B25CCA3C();
}

uint64_t sub_1B2571950(uint64_t a1, unint64_t a2)
{
  return ((uint64_t (*)(void))((char *)&loc_1B2571960 + *((int *)qword_1B25719B8 + (a2 >> 62))))();
}

double sub_1B2571970(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return (double)BYTE6(a2) * 0.5 / (double)a3;
}

void sub_1B25719C8(double a1)
{
  double v1;

  v1 = sub_1B259B76C() * a1;
  if ((~*(_QWORD *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v1 <= -1.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v1 >= 1.84467441e19)
LABEL_7:
    __break(1u);
}

uint64_t sub_1B2571A28(uint64_t a1)
{
  mach_get_times();
  return a1;
}

void sub_1B2571AA8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = sub_1B25CC760();
  v23 = *(_QWORD *)(v2 - 8);
  v24 = v2;
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v27 = MEMORY[0x1E0DEE9D8];
    sub_1B2505544(0, v6, 0);
    v8 = 0;
    v9 = v27;
    v21 = v5;
    v22 = a1 + 32;
    v20 = v6;
    do
    {
      v10 = *(_QWORD *)(v22 + 8 * v8);
      if (v10 >> 62)
      {
        swift_bridgeObjectRetain();
        v11 = sub_1B25CD474();
        if (!v11)
        {
LABEL_15:
          v13 = v7;
          goto LABEL_16;
        }
      }
      else
      {
        v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v11)
          goto LABEL_15;
      }
      v26 = v7;
      sub_1B2505214();
      if (v11 < 0)
      {
        __break(1u);
        return;
      }
      v25 = v9;
      v12 = 0;
      v13 = v26;
      do
      {
        if ((v10 & 0xC000000000000001) != 0)
          v14 = (id)MEMORY[0x1B5E252C4](v12, v10);
        else
          v14 = *(id *)(v10 + 8 * v12 + 32);
        v15 = v14;
        v16 = objc_msgSend(v14, sel_integerValue, v20, v21);

        v26 = v13;
        v17 = *(_QWORD *)(v13 + 16);
        if (v17 >= *(_QWORD *)(v13 + 24) >> 1)
        {
          sub_1B2505214();
          v13 = v26;
        }
        ++v12;
        *(_QWORD *)(v13 + 16) = v17 + 1;
        *(_QWORD *)(v13 + 8 * v17 + 32) = v16;
      }
      while (v11 != v12);
      v6 = v20;
      v5 = v21;
      v7 = MEMORY[0x1E0DEE9D8];
      v9 = v25;
LABEL_16:
      MEMORY[0x1B5E24700](v13);
      swift_bridgeObjectRelease();
      v27 = v9;
      v19 = *(_QWORD *)(v9 + 16);
      v18 = *(_QWORD *)(v9 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1B2505544(v18 > 1, v19 + 1, 1);
        v9 = v27;
      }
      ++v8;
      *(_QWORD *)(v9 + 16) = v19 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v23 + 32))(v9+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(_QWORD *)(v23 + 72) * v19, v5, v24);
    }
    while (v8 != v6);
  }
}

uint64_t sub_1B2571D04()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88));
  return v0;
}

uint64_t sub_1B2571D30()
{
  sub_1B2571D04();
  OUTLINED_FUNCTION_180_1();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LockableValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LockableValue);
}

uint64_t sub_1B2571D54()
{
  return sub_1B2571E88();
}

uint64_t sub_1B2571D60()
{
  return sub_1B25CC994() & 1;
}

uint64_t sub_1B2571D84()
{
  return sub_1B25CC91C();
}

uint64_t sub_1B2571D8C()
{
  sub_1B25CD6A8();
  sub_1B2571D84();
  return sub_1B25CD6CC();
}

uint64_t sub_1B2571DE0()
{
  return sub_1B2571D60();
}

uint64_t sub_1B2571DEC()
{
  return sub_1B2571D8C();
}

uint64_t sub_1B2571DF4()
{
  return sub_1B2571D84();
}

uint64_t sub_1B2571DFC()
{
  sub_1B25CD6A8();
  sub_1B2571D84();
  return sub_1B25CD6CC();
}

uint64_t sub_1B2571E4C()
{
  return sub_1B2571E58();
}

uint64_t sub_1B2571E58()
{
  sub_1B2571F3C();
  OUTLINED_FUNCTION_180_1();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ActorEnqueue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActorEnqueue);
}

uint64_t sub_1B2571E7C()
{
  return sub_1B2571E88();
}

uint64_t sub_1B2571E88()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  OUTLINED_FUNCTION_2_10();
  result = sub_1B25CCD30();
  if (v1 <= 0x3F)
  {
    result = sub_1B25CCD0C();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_1B2571F3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0;
  v2 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 104);
  OUTLINED_FUNCTION_2_10();
  v3 = sub_1B25CCD0C();
  sub_1B25CCD00();
  v4 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 96);
  v5 = sub_1B25CCD30();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return v1;
}

uint64_t sub_1B2571FF8()
{
  return sub_1B2571E58();
}

uint64_t type metadata accessor for DistributedActorEnqueue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DistributedActorEnqueue);
}

uint64_t sub_1B2572010()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1B257207C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return __swift_getEnumTagSinglePayload(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1B257212C + 4 * byte_1B25E06C0[(v8 - 1)]))();
}

void sub_1B2572178(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0u;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t type metadata accessor for KnownSendable(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for KnownSendable);
}

uint64_t sub_1B257232C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x1B5E261DC](&unk_1B25E0824, a1, &v4);
}

uint64_t OUTLINED_FUNCTION_1_8()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_2_10()
{
  return swift_getFunctionTypeMetadata();
}

void sub_1B2572384(void *a1)
{
  id v2;
  double v3;
  double v4;

  objc_msgSend(a1, sel_frameLength);
  v2 = objc_msgSend(a1, sel_format);
  objc_msgSend(v2, sel_sampleRate);
  v4 = v3;

  if ((~*(_QWORD *)&v4 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v4 <= -2147483650.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v4 < 2147483650.0)
  {
    sub_1B25CD090();
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_1B257242C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1B25CC6F4();
  *(_QWORD *)(v0 + 144) = OUTLINED_FUNCTION_1_9(v1);
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B2572464()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  objc_opt_self();
  *(_QWORD *)(v0 + 56) = v0 + 120;
  v1 = OUTLINED_FUNCTION_7_11((uint64_t)sub_1B25724EC);
  *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
  v2 = (_QWORD *)(v0 + 80);
  v2[1] = 0x40000000;
  v2[2] = sub_1B257263C;
  v2[3] = &block_descriptor_1_0;
  v2[4] = v1;
  OUTLINED_FUNCTION_5_13(v1, sel_supportedLanguagesForTaskHint_completion_);
  return OUTLINED_FUNCTION_2_11();
}

uint64_t sub_1B25724EC()
{
  OUTLINED_FUNCTION_3_14();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B2572518()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 136);
    v11 = MEMORY[0x1E0DEE9D8];
    OUTLINED_FUNCTION_4_14();
    v4 = v11;
    v5 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1B25CC628();
      v7 = *(_QWORD *)(v11 + 16);
      v6 = *(_QWORD *)(v11 + 24);
      if (v7 >= v6 >> 1)
        sub_1B25053AC(v6 > 1, v7 + 1, 1);
      v8 = *(_QWORD *)(v0 + 144);
      v9 = *(_QWORD *)(v0 + 128);
      *(_QWORD *)(v11 + 16) = v7 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v11+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v7, v8, v9);
      v5 += 16;
      --v2;
    }
    while (v2);
    OUTLINED_FUNCTION_10_0();
  }
  else
  {
    OUTLINED_FUNCTION_10_0();
    v4 = MEMORY[0x1E0DEE9D8];
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
}

uint64_t sub_1B257263C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(a1 + 32);
  v2 = sub_1B25CCBA4();
  return sub_1B2572674(v1, v2);
}

uint64_t sub_1B2572674(uint64_t a1, uint64_t a2)
{
  **(_QWORD **)(*(_QWORD *)(a1 + 64) + 40) = a2;
  return swift_continuation_resume();
}

uint64_t sub_1B2572684()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1B25CC6F4();
  *(_QWORD *)(v0 + 144) = OUTLINED_FUNCTION_1_9(v1);
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B25726BC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  objc_opt_self();
  *(_QWORD *)(v0 + 56) = v0 + 120;
  v1 = OUTLINED_FUNCTION_7_11((uint64_t)sub_1B2572744);
  *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
  v2 = (_QWORD *)(v0 + 80);
  v2[1] = 0x40000000;
  v2[2] = sub_1B2572930;
  v2[3] = &block_descriptor_9;
  v2[4] = v1;
  OUTLINED_FUNCTION_5_13(v1, sel_installedLanguagesForTaskHint_completion_);
  return OUTLINED_FUNCTION_2_11();
}

uint64_t sub_1B2572744()
{
  OUTLINED_FUNCTION_3_14();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B2572770()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v16 = *(_QWORD *)(v0 + 136);
    v17 = MEMORY[0x1E0DEE9D8];
    OUTLINED_FUNCTION_4_14();
    v3 = v17;
    result = sub_1B2507C08(v1);
    v5 = result;
    v7 = v6;
    v9 = v8 & 1;
    while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(_BYTE *)(v1 + 32))
    {
      if (((*(_QWORD *)(v1 + 56 + (((unint64_t)v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
        goto LABEL_14;
      if (*(_DWORD *)(v1 + 36) != (_DWORD)v7)
        goto LABEL_15;
      swift_bridgeObjectRetain();
      sub_1B25CC628();
      v11 = *(_QWORD *)(v17 + 16);
      v10 = *(_QWORD *)(v17 + 24);
      if (v11 >= v10 >> 1)
        sub_1B25053AC(v10 > 1, v11 + 1, 1);
      v12 = *(_QWORD *)(v0 + 144);
      v13 = *(_QWORD *)(v0 + 128);
      *(_QWORD *)(v17 + 16) = v11 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v16 + 32))(v17+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(_QWORD *)(v16 + 72) * v11, v12, v13);
      result = sub_1B2507888(v5, v7, v9 & 1, v1);
      v5 = result;
      v7 = v14;
      v9 = v15 & 1;
      if (!--v2)
      {
        sub_1B2500EF0(result, v14, v15 & 1);
        OUTLINED_FUNCTION_10_0();
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_10_0();
    v3 = MEMORY[0x1E0DEE9D8];
LABEL_12:
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
  }
  return result;
}

uint64_t sub_1B2572930(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(a1 + 32);
  v2 = sub_1B25CCE38();
  return sub_1B2572674(v1, v2);
}

uint64_t type metadata accessor for AssetsInventory()
{
  return objc_opt_self();
}

uint64_t OUTLINED_FUNCTION_1_9(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 128) = a1;
  *(_QWORD *)(v1 + 136) = *(_QWORD *)(a1 - 8);
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_2_11()
{
  return swift_continuation_await();
}

void OUTLINED_FUNCTION_3_14()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  *(_QWORD *)(v1 - 8) = *v0;
}

void OUTLINED_FUNCTION_4_14()
{
  uint64_t v0;

  sub_1B25053AC(0, v0, 0);
}

id OUTLINED_FUNCTION_5_13(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, 0, v3);
}

uint64_t OUTLINED_FUNCTION_7_11@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v1;
  *(_QWORD *)(v1 + 24) = a1;
  return swift_continuation_init();
}

uint64_t sub_1B2572A0C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;

  if (*(_QWORD *)(result + 16) < *(_QWORD *)(a2 + 16))
    return 0;
  v4 = result;
  v5 = 0;
  v6 = a2 + 56;
  v7 = -1 << *(_BYTE *)(a2 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a2 + 56);
  v22 = (unint64_t)(63 - v7) >> 6;
  v10 = result + 56;
  while (1)
  {
LABEL_7:
    v11 = v5;
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v5 << 6);
      goto LABEL_22;
    }
    v14 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v14 >= v22)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v5;
    if (!v15)
    {
      v5 = v11 + 2;
      if (v11 + 2 >= v22)
        goto LABEL_32;
      v15 = *(_QWORD *)(v6 + 8 * v5);
      if (!v15)
      {
        v5 = v11 + 3;
        if (v11 + 3 >= v22)
          goto LABEL_32;
        v15 = *(_QWORD *)(v6 + 8 * v5);
        if (!v15)
        {
          v16 = v11 + 4;
          if (v11 + 4 >= v22)
          {
LABEL_32:
            swift_bridgeObjectRetain();
            v2 = 1;
            goto LABEL_30;
          }
          v15 = *(_QWORD *)(v6 + 8 * v16);
          v5 = v11 + 4;
          if (!v15)
            break;
        }
      }
    }
LABEL_21:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v5 << 6);
LABEL_22:
    if (!*(_QWORD *)(v4 + 16))
      goto LABEL_29;
    v17 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v13);
    sub_1B25CD6A8();
    sub_1B25CD6B4();
    result = sub_1B25CD6CC();
    v18 = -1 << *(_BYTE *)(v4 + 32);
    v19 = result & ~v18;
    if (((*(_QWORD *)(v10 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
      goto LABEL_29;
    v20 = *(_QWORD *)(v4 + 48);
    if (v17 != *(unsigned __int8 *)(v20 + v19))
    {
      v21 = ~v18;
      while (1)
      {
        v19 = (v19 + 1) & v21;
        if (((*(_QWORD *)(v10 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
          break;
        if (v17 == *(unsigned __int8 *)(v20 + v19))
          goto LABEL_7;
      }
LABEL_29:
      swift_bridgeObjectRetain();
      v2 = 0;
LABEL_30:
      sub_1B24EADD4();
      return v2;
    }
  }
  while (1)
  {
    v5 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v5 >= v22)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v5);
    ++v16;
    if (v15)
      goto LABEL_21;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1B2572C54(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;

  if (*(_QWORD *)(result + 16) < *(_QWORD *)(a2 + 16))
    return 0;
  v4 = result;
  v5 = 0;
  v6 = a2 + 56;
  v7 = -1 << *(_BYTE *)(a2 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a2 + 56);
  v22 = (unint64_t)(63 - v7) >> 6;
  v10 = result + 56;
  while (1)
  {
LABEL_7:
    v11 = v5;
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v5 << 6);
      goto LABEL_22;
    }
    v14 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v14 >= v22)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v5;
    if (!v15)
    {
      v5 = v11 + 2;
      if (v11 + 2 >= v22)
        goto LABEL_32;
      v15 = *(_QWORD *)(v6 + 8 * v5);
      if (!v15)
      {
        v5 = v11 + 3;
        if (v11 + 3 >= v22)
          goto LABEL_32;
        v15 = *(_QWORD *)(v6 + 8 * v5);
        if (!v15)
        {
          v16 = v11 + 4;
          if (v11 + 4 >= v22)
          {
LABEL_32:
            swift_bridgeObjectRetain();
            v2 = 1;
            goto LABEL_30;
          }
          v15 = *(_QWORD *)(v6 + 8 * v16);
          v5 = v11 + 4;
          if (!v15)
            break;
        }
      }
    }
LABEL_21:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v5 << 6);
LABEL_22:
    if (!*(_QWORD *)(v4 + 16))
      goto LABEL_29;
    v17 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v13);
    sub_1B25CD6A8();
    sub_1B25CD6B4();
    result = sub_1B25CD6CC();
    v18 = -1 << *(_BYTE *)(v4 + 32);
    v19 = result & ~v18;
    if (((*(_QWORD *)(v10 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
      goto LABEL_29;
    v20 = *(_QWORD *)(v4 + 48);
    if (*(unsigned __int8 *)(v20 + v19) != v17)
    {
      v21 = ~v18;
      while (1)
      {
        v19 = (v19 + 1) & v21;
        if (((*(_QWORD *)(v10 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
          break;
        if (*(unsigned __int8 *)(v20 + v19) == v17)
          goto LABEL_7;
      }
LABEL_29:
      swift_bridgeObjectRetain();
      v2 = 0;
LABEL_30:
      sub_1B24EADD4();
      return v2;
    }
  }
  while (1)
  {
    v5 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v5 >= v22)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v5);
    ++v16;
    if (v15)
      goto LABEL_21;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t PhoneticTranscriber.__allocating_init(transcriptionFormat:reportingOptions:attributeOptions:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = swift_allocObject();
  PhoneticTranscriber.init(transcriptionFormat:reportingOptions:attributeOptions:)(v5, a2, a3);
  return v5;
}

uint64_t PhoneticTranscriber.init(transcriptionFormat:reportingOptions:attributeOptions:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;

  v36 = a2;
  v37 = a3;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDAAE8);
  v4 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39, v5);
  OUTLINED_FUNCTION_41_1();
  v8 = v7 - v6;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDAAF0);
  v38 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40, v9);
  OUTLINED_FUNCTION_41_1();
  v12 = v11 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDAAF8);
  OUTLINED_FUNCTION_30_0();
  v15 = MEMORY[0x1E0C80A78](v13, v14);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15, v18);
  v20 = (char *)&v35 - v19;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEFD6730);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v21, v22);
  OUTLINED_FUNCTION_41_1();
  v25 = v24 - v23;
  v26 = OBJC_IVAR____TtC6Speech19PhoneticTranscriber_availableLocale;
  v27 = OUTLINED_FUNCTION_23_0();
  OUTLINED_FUNCTION_291_0(v25, v28, v29, v27);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD67D8);
  v30 = swift_allocObject();
  *(_DWORD *)(v30 + ((*(unsigned int *)(*(_QWORD *)v30 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_1B24AD25C(v25, v30 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v30 + 16), (uint64_t *)&unk_1EEFD6730);
  sub_1B24EBD4C(v25, (uint64_t *)&unk_1EEFD6730);
  *(_QWORD *)(v3 + v26) = v30;
  v31 = OBJC_IVAR____TtC6Speech19PhoneticTranscriber__worker;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EEFD6D68);
  v32 = swift_allocObject();
  *(_BYTE *)(v32 + 24) = 0;
  *(_QWORD *)(v32 + 16) = 0;
  *(_QWORD *)(v3 + v31) = v32;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC6Speech19PhoneticTranscriber_reportingOptions) = v36;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC6Speech19PhoneticTranscriber_attributeOptions) = v37;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDAB00);
  __swift_storeEnumTagSinglePayload((uint64_t)v20, 1, 1, v33);
  v41 = v20;
  type metadata accessor for PhoneticTranscriber.Result(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v8, *MEMORY[0x1E0DF0A50], v39);
  sub_1B25CCDE4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32))(v3 + OBJC_IVAR____TtC6Speech19PhoneticTranscriber__results, v12, v40);
  sub_1B24AD25C((uint64_t)v20, (uint64_t)v17, &qword_1EEFDAAF8);
  result = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v33);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v3 + OBJC_IVAR____TtC6Speech19PhoneticTranscriber_resultsBuilder, v17, v33);
    sub_1B24EBD4C((uint64_t)v20, &qword_1EEFDAAF8);
    return v3;
  }
  return result;
}

uint64_t sub_1B25731E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B24EBD4C(a2, &qword_1EEFDAAF8);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDAB00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return __swift_storeEnumTagSinglePayload(a2, 0, 1, v4);
}

uint64_t sub_1B2573254(uint64_t a1)
{
  uint64_t v1;

  return sub_1B25731E4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t type metadata accessor for PhoneticTranscriber.Result(uint64_t a1)
{
  return sub_1B24B1B88(a1, (uint64_t *)&unk_1EEFD6FA0);
}

uint64_t PhoneticTranscriber.compatibleAudioFormats.getter()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t PhoneticTranscriber.availableCompatibleAudioFormats.getter()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t PhoneticTranscriber.availableCompatibleAudioFormats(clientID:)()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t PhoneticTranscriber.results.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC6Speech19PhoneticTranscriber__results;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDAAF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

double PhoneticTranscriber.Result.range.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 16);
  result = *(double *)(v1 + 32);
  *(double *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 40) = v2;
  return result;
}

uint64_t PhoneticTranscriber.Result.resultsFinalToTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

void PhoneticTranscriber.Result.transcription.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for PhoneticTranscriber.Result(0);
  sub_1B24AD25C(v1 + *(int *)(v3 + 24), a1, &qword_1EEFD6FE0);
  OUTLINED_FUNCTION_0();
}

uint64_t static PhoneticTranscriber.TranscriptionFormat.== infix(_:_:)()
{
  return 1;
}

void PhoneticTranscriber.TranscriptionFormat.hash(into:)()
{
  sub_1B25CD6B4();
  OUTLINED_FUNCTION_0();
}

void PhoneticTranscriber.TranscriptionFormat.hashValue.getter()
{
  OUTLINED_FUNCTION_4();
  sub_1B25CD6B4();
  sub_1B25CD6CC();
  OUTLINED_FUNCTION_1();
}

void sub_1B25733AC()
{
  PhoneticTranscriber.TranscriptionFormat.hashValue.getter();
}

void sub_1B25733C0()
{
  PhoneticTranscriber.TranscriptionFormat.hash(into:)();
}

BOOL static PhoneticTranscriber.ReportingOption.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void PhoneticTranscriber.ReportingOption.hash(into:)()
{
  sub_1B25CD6B4();
  OUTLINED_FUNCTION_0();
}

void PhoneticTranscriber.ReportingOption.hashValue.getter()
{
  OUTLINED_FUNCTION_4();
  sub_1B25CD6B4();
  sub_1B25CD6CC();
  OUTLINED_FUNCTION_1();
}

void sub_1B2573450()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6Speech19PhoneticTranscriber_reportingOptions);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v15 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1B2505404(0, v2, 0);
    v3 = v15;
    v4 = sub_1B2507C08(v1);
    v6 = v5;
    v8 = v7 & 1;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(_BYTE *)(v1 + 32))
    {
      if (((*(_QWORD *)(v1 + 56 + (((unint64_t)v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) == 0)
        goto LABEL_13;
      if (*(_DWORD *)(v1 + 36) != (_DWORD)v6)
        goto LABEL_14;
      v9 = *(_BYTE *)(*(_QWORD *)(v1 + 48) + v4);
      v11 = *(_QWORD *)(v15 + 16);
      v10 = *(_QWORD *)(v15 + 24);
      if (v11 >= v10 >> 1)
        sub_1B2505404(v10 > 1, v11 + 1, 1);
      *(_QWORD *)(v15 + 16) = v11 + 1;
      *(_BYTE *)(v15 + v11 + 32) = v9;
      v12 = sub_1B2507888(v4, v6, v8 & 1, v1);
      v4 = v12;
      v6 = v13;
      v8 = v14 & 1;
      if (!--v2)
      {
        sub_1B2500EF0(v12, v13, v14 & 1);
        swift_bridgeObjectRelease();
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  else
  {
LABEL_11:
    sub_1B24AFCD0(v3);
  }
}

uint64_t sub_1B25735BC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;

  v1[2] = v0;
  sub_1B25CCA00();
  v1[3] = OUTLINED_FUNCTION_24_8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEFD6730);
  v1[4] = OUTLINED_FUNCTION_24_8();
  v2 = OUTLINED_FUNCTION_23_0();
  v1[5] = v2;
  v1[6] = *(_QWORD *)(v2 - 8);
  v1[7] = swift_task_alloc();
  v1[8] = swift_task_alloc();
  type metadata accessor for AssetsInventory();
  swift_initStaticObject();
  v3 = (_QWORD *)swift_task_alloc();
  v1[9] = v3;
  *v3 = v1;
  v3[1] = sub_1B2573678;
  return sub_1B2572684();
}

uint64_t sub_1B2573678(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B25736D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = v0[4];
  v1 = v0[5];
  sub_1B251BF20(v0[10], v2);
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload(v2, 1, v1) == 1)
  {
    sub_1B24EBD4C(v0[4], (uint64_t *)&unk_1EEFD6730);
    sub_1B25CC9AC();
    if (qword_1EEFD8028 != -1)
      swift_once();
    v3 = (id)qword_1EEFDB360;
    sub_1B25CC6AC();
    v4 = sub_1B25CCA60();
    related decl 'e' for SFSpeechErrorCode.init(_:description:)(4, v4, v5);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v6 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    v7 = v0[8];
    v8 = v0[2];
    (*(void (**)(uint64_t, _QWORD, _QWORD))(v0[6] + 32))(v7, v0[4], v0[5]);
    v9 = *(_QWORD *)(v8 + OBJC_IVAR____TtC6Speech19PhoneticTranscriber_availableLocale);
    v10 = swift_task_alloc();
    *(_QWORD *)(v10 + 16) = v7;
    v11 = v9 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v9 + 16);
    v12 = (os_unfair_lock_s *)(v9 + ((*(unsigned int *)(*(_QWORD *)v9 + 48) + 3) & 0x1FFFFFFFCLL));
    os_unfair_lock_lock(v12);
    sub_1B2573924(v11, *(_QWORD *)(v10 + 16));
    os_unfair_lock_unlock(v12);
    v13 = v0[8];
    v14 = v0[5];
    v15 = v0[6];
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v6 = (uint64_t (*)(void))v0[1];
  }
  return v6();
}

uint64_t sub_1B2573924(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B24EBD4C(a1, (uint64_t *)&unk_1EEFD6730);
  v4 = sub_1B25CC6F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v4);
}

uint64_t sub_1B2573998()
{
  return swift_retain();
}

uint64_t sub_1B25739AC(void *a1)
{
  char v3;

  if (object_getClass(a1) != (Class)_TtC6Speech22SpeechRecognizerWorker || a1 == 0)
    return 0;
  swift_unknownObjectRetain();
  v3 = sub_1B2573A20();
  swift_unknownObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B2573A20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;

  v2 = OUTLINED_FUNCTION_9_13();
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v3, v4);
  OUTLINED_FUNCTION_41_1();
  v7 = v6 - v5;
  v9 = *(_QWORD *)(v1 + *(int *)(v8 + 56));
  swift_bridgeObjectRetain();
  sub_1B2573450();
  v11 = sub_1B2572C54(v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B254E940(v1, v7);
  if ((v11 & 1) != 0)
    v12 = sub_1B2572A0C(*(_QWORD *)(v7 + *(int *)(v2 + 48)), *(_QWORD *)(v0 + OBJC_IVAR____TtC6Speech19PhoneticTranscriber_attributeOptions));
  else
    v12 = 0;
  sub_1B24EACC4(v7, (uint64_t (*)(_QWORD))type metadata accessor for SpeechRecognizerSupportedFeatures);
  return v12 & 1;
}

uint64_t sub_1B2573AF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  sub_1B254E940(a1, a2);
  sub_1B2573450();
  v4 = OUTLINED_FUNCTION_9_13();
  swift_bridgeObjectRetain();
  sub_1B2526524(v2);
  sub_1B255F918();
  v5 = swift_bridgeObjectRetain();
  sub_1B2526660(v5);
  return __swift_storeEnumTagSinglePayload(a2, 0, 1, v4);
}

uint64_t sub_1B2573B98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  os_unfair_lock_s *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  __int16 v32;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6B20);
  OUTLINED_FUNCTION_30_0();
  MEMORY[0x1E0C80A78](v3, v4);
  OUTLINED_FUNCTION_41_1();
  v7 = v6 - v5;
  v8 = OUTLINED_FUNCTION_23_0();
  v9 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x1E0C80A78](v8, v10);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11, v14);
  v16 = (char *)&v29 - v15;
  v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6Speech19PhoneticTranscriber_availableLocale);
  v18 = v17 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v17 + 16);
  v19 = (os_unfair_lock_s *)(v17 + ((*(unsigned int *)(*(_QWORD *)v17 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v19);
  sub_1B2573D68(v18, (uint64_t)v16);
  os_unfair_lock_unlock(v19);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v13, v16, v8);
  sub_1B2506144();
  v21 = v20;
  v22 = type metadata accessor for Transcriber.ModelOptions(0);
  OUTLINED_FUNCTION_291_0(v7, v23, v24, v22);
  v30 = 0uLL;
  v31 = 0;
  v32 = 256;
  sub_1B2573450();
  v26 = v25;
  v27 = swift_bridgeObjectRetain();
  sub_1B255F76C((uint64_t)v13, v21, 0, 0, 0, 0, v7, &v30, a1, MEMORY[0x1E0DEE9E8], v26, v27);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v16, v8);
}

uint64_t sub_1B2573D68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEFD6730);
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B24AD25C(a1, (uint64_t)v7, (uint64_t *)&unk_1EEFD6730);
  v8 = sub_1B25CC6F4();
  result = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a2, v7, v8);
  __break(1u);
  return result;
}

void sub_1B2573E30()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC6Speech19PhoneticTranscriber__worker) + 24) = 1;
}

void PhoneticTranscriber.recognizerObjectIdentifier.getter()
{
  if (sub_1B2573998())
    swift_release();
  OUTLINED_FUNCTION_0();
}

uint64_t sub_1B2573E78(void *a1)
{
  id v1;

  v1 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDAB00);
  return sub_1B25CCDCC();
}

void PhoneticTranscriber.deinit()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDAAF0);
  OUTLINED_FUNCTION_278_0(v0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFDAB00);
  OUTLINED_FUNCTION_278_0(v1);
  OUTLINED_FUNCTION_0();
}

uint64_t PhoneticTranscriber.__deallocating_deinit()
{
  PhoneticTranscriber.deinit();
  return swift_deallocClassInstance();
}

unint64_t sub_1B2573F7C()
{
  unint64_t result;

  result = qword_1EEFDAB08;
  if (!qword_1EEFDAB08)
  {
    result = MEMORY[0x1B5E261DC](&protocol conformance descriptor for PhoneticTranscriber.TranscriptionFormat, &type metadata for PhoneticTranscriber.TranscriptionFormat);
    atomic_store(result, (unint64_t *)&qword_1EEFDAB08);
  }
  return result;
}

unint64_t sub_1B2573FBC()
{
  unint64_t result;

  result = qword_1EEFDAB10;
  if (!qword_1EEFDAB10)
  {
    result = MEMORY[0x1B5E261DC](&protocol conformance descriptor for PhoneticTranscriber.ReportingOption, &type metadata for PhoneticTranscriber.ReportingOption);
    atomic_store(result, (unint64_t *)&qword_1EEFDAB10);
  }
  return result;
}

uint64_t sub_1B2573FF8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1B2508FD0;
  return sub_1B25735BC();
}

void sub_1B2574040(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_1B24FFD30(qword_1EEFDAB20, type metadata accessor for PhoneticTranscriber, (uint64_t)&protocol conformance descriptor for PhoneticTranscriber);
  *(_QWORD *)(a1 + 8) = v2;
  sub_1B24FFD30(&qword_1EEFD8DC0, type metadata accessor for PhoneticTranscriber, (uint64_t)&unk_1B25E09C8);
  *(_QWORD *)(a1 + 16) = v3;
}

uint64_t type metadata accessor for PhoneticTranscriber(uint64_t a1)
{
  return sub_1B24B1B88(a1, (uint64_t *)&unk_1EEFD6FC0);
}

void sub_1B25740B0(uint64_t a1)
{
  uint64_t v2;

  sub_1B24FFD30(&qword_1EEFD8DC0, type metadata accessor for PhoneticTranscriber, (uint64_t)&unk_1B25E09C8);
  *(_QWORD *)(a1 + 8) = v2;
}

_UNKNOWN **sub_1B25740EC()
{
  return &protocol witness table for PhoneticTranscriber.Result;
}

uint64_t sub_1B25740F8()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1B257410C()
{
  sub_1B24FFD30(&qword_1EEFD6AB0, (uint64_t (*)(uint64_t))type metadata accessor for SpeechRecognizerWorker, (uint64_t)&unk_1B25DC39C);
}

uint64_t sub_1B2574138()
{
  return sub_1B2573998();
}

uint64_t sub_1B2574158(void *a1)
{
  return sub_1B25739AC(a1) & 1;
}

void sub_1B257417C()
{
  sub_1B2573E30();
}

void sub_1B257419C()
{
  unint64_t v0;
  unint64_t v1;

  sub_1B2574278(319, &qword_1EEFD7318, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0DF0AD0]);
  if (v0 <= 0x3F)
  {
    sub_1B2574278(319, &qword_1EEFD72C0, MEMORY[0x1E0DF0A78]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for PhoneticTranscriber()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PhoneticTranscriber.__allocating_init(transcriptionFormat:reportingOptions:attributeOptions:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

void sub_1B2574278(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v6 = type metadata accessor for PhoneticTranscriber.Result(255);
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED36D060);
    v8 = a3(a1, v6, v7, MEMORY[0x1E0DEDB38]);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t assignWithCopy for PhoneticTranscriber.Result(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  int *v7;
  int EnumTagSinglePayload;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v4 = *(int *)(a3 + 24);
  v5 = (char *)(a1 + v4);
  v6 = (char *)(a2 + v4);
  v7 = (int *)type metadata accessor for TranscriptionSegment(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v5, 1, (uint64_t)v7);
  v9 = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, (uint64_t)v7);
  if (!EnumTagSinglePayload)
  {
    if (!v9)
    {
      v13 = sub_1B25CC3B8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v5, v6, v13);
      *(_QWORD *)&v5[v7[5]] = *(_QWORD *)&v6[v7[5]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v5[v7[6]] = *(_QWORD *)&v6[v7[6]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v5[v7[7]] = *(_QWORD *)&v6[v7[7]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1B24EACC4((uint64_t)v5, type metadata accessor for TranscriptionSegment);
    goto LABEL_6;
  }
  if (v9)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6FE0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    return a1;
  }
  v10 = sub_1B25CC3B8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v5, v6, v10);
  *(_QWORD *)&v5[v7[5]] = *(_QWORD *)&v6[v7[5]];
  *(_QWORD *)&v5[v7[6]] = *(_QWORD *)&v6[v7[6]];
  *(_QWORD *)&v5[v7[7]] = *(_QWORD *)&v6[v7[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, (uint64_t)v7);
  return a1;
}

uint64_t assignWithTake for PhoneticTranscriber.Result(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  int *v7;
  int EnumTagSinglePayload;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v4 = *(int *)(a3 + 24);
  v5 = (char *)(a2 + v4);
  v6 = (char *)(a1 + v4);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v7 = (int *)type metadata accessor for TranscriptionSegment(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, (uint64_t)v7);
  v9 = __swift_getEnumTagSinglePayload((uint64_t)v5, 1, (uint64_t)v7);
  if (!EnumTagSinglePayload)
  {
    if (!v9)
    {
      v13 = sub_1B25CC3B8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v6, v5, v13);
      *(_QWORD *)&v6[v7[5]] = *(_QWORD *)&v5[v7[5]];
      swift_bridgeObjectRelease();
      *(_QWORD *)&v6[v7[6]] = *(_QWORD *)&v5[v7[6]];
      swift_bridgeObjectRelease();
      *(_QWORD *)&v6[v7[7]] = *(_QWORD *)&v5[v7[7]];
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1B24EACC4((uint64_t)v6, type metadata accessor for TranscriptionSegment);
    goto LABEL_6;
  }
  if (v9)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6FE0);
    memcpy(v6, v5, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    return a1;
  }
  v10 = sub_1B25CC3B8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v6, v5, v10);
  *(_QWORD *)&v6[v7[5]] = *(_QWORD *)&v5[v7[5]];
  *(_QWORD *)&v6[v7[6]] = *(_QWORD *)&v5[v7[6]];
  *(_QWORD *)&v6[v7[7]] = *(_QWORD *)&v5[v7[7]];
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, (uint64_t)v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for PhoneticTranscriber.Result()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B2574684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 24);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6FE0);
  return __swift_getEnumTagSinglePayload(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for PhoneticTranscriber.Result()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B25746CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 24);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD6FE0);
  return __swift_storeEnumTagSinglePayload(v5, a2, a2, v6);
}

void sub_1B257470C()
{
  unint64_t v0;

  sub_1B2574788();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1B2574788()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEFD6FE8)
  {
    type metadata accessor for TranscriptionSegment(255);
    v0 = sub_1B25CD108();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEFD6FE8);
  }
}

uint64_t storeEnumTagSinglePayload for PhoneticTranscriber.TranscriptionFormat(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B257481C + 4 * asc_1B25E0880[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B257483C + 4 * byte_1B25E0885[v4]))();
}

_BYTE *sub_1B257481C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B257483C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B2574844(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B257484C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B2574854(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B257485C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PhoneticTranscriber.TranscriptionFormat()
{
  return &type metadata for PhoneticTranscriber.TranscriptionFormat;
}

uint64_t storeEnumTagSinglePayload for PhoneticTranscriber.ReportingOption(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B25748C4 + 4 * byte_1B25E088F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B25748F8 + 4 * byte_1B25E088A[v4]))();
}

uint64_t sub_1B25748F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B2574900(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B2574908);
  return result;
}

uint64_t sub_1B2574914(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B257491CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B2574920(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B2574928(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PhoneticTranscriber.ReportingOption()
{
  return &type metadata for PhoneticTranscriber.ReportingOption;
}

unint64_t sub_1B2574948()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEFDAB40;
  if (!qword_1EEFDAB40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEFDAAF0);
    result = MEMORY[0x1B5E261DC](MEMORY[0x1E0DF0AE0], v1);
    atomic_store(result, &qword_1EEFDAB40);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_9_13()
{
  return type metadata accessor for SpeechRecognizerSupportedFeatures();
}

BOOL sub_1B2574998(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  int EnumTagSinglePayload;
  BOOL v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t (*v29)(char *);

  v4 = v3;
  v28 = a2;
  v29 = a1;
  v6 = sub_1B25CC6F4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEFD6730);
  MEMORY[0x1E0C80A78](v11, v12);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a3 + 16);
  v25 = a3;
  if (v15)
  {
    v16 = a3 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v17 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v26 = *(_QWORD *)(v7 + 72);
    v27 = v17;
    swift_bridgeObjectRetain();
    while (1)
    {
      v27(v14, v16, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v6);
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v6);
      v19 = EnumTagSinglePayload != 1;
      if (EnumTagSinglePayload == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v14, v6);
      v20 = v29(v10);
      v21 = v7;
      if (v4)
      {
        (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
        swift_bridgeObjectRelease();
        return v19;
      }
      v22 = v20;
      v23 = v21;
      (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v6);
      if ((v22 & 1) != 0)
        break;
      v16 += v26;
      --v15;
      v7 = v23;
      v4 = 0;
      if (!v15)
        goto LABEL_9;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_9:
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 1, 1, v6);
    v19 = 0;
  }
  swift_bridgeObjectRelease();
  return v19;
}

Speech::PhoneticEmbedder::InputFormat_optional __swiftcall PhoneticEmbedder.InputFormat.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (Speech::PhoneticEmbedder::InputFormat_optional)rawValue;
}

uint64_t PhoneticEmbedder.InputFormat.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_1B2574BBC()
{
  unsigned __int8 *v0;

  return sub_1B2497190(*v0);
}

void sub_1B2574BC4()
{
  sub_1B2497244();
}

uint64_t sub_1B2574BCC(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1B24972EC(a1, *v1);
}

Speech::PhoneticEmbedder::InputFormat_optional sub_1B2574BD4(Swift::Int *a1)
{
  return PhoneticEmbedder.InputFormat.init(rawValue:)(*a1);
}

uint64_t sub_1B2574BDC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = PhoneticEmbedder.InputFormat.rawValue.getter();
  *a1 = result;
  return result;
}

BOOL sub_1B2574C00(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B256B73C(*a1, *a2);
}

uint64_t sub_1B2574C0C(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1B2497B88(a1, *v1);
}

uint64_t PhoneticEmbedder.__allocating_init(locale:clientID:inputFormat:loadingOption:)(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4, char *a5)
{
  uint64_t v10;

  v10 = OUTLINED_FUNCTION_628();
  PhoneticEmbedder.init(locale:clientID:inputFormat:loadingOption:)(a1, a2, a3, a4, a5);
  return v10;
}

void PhoneticEmbedder.init(locale:clientID:inputFormat:loadingOption:)(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4, char *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t *v18;
  char v19;
  char v20;

  v6 = v5;
  v11 = OUTLINED_FUNCTION_23_0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v13);
  OUTLINED_FUNCTION_41_1();
  v16 = v15 - v14;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC6Speech16PhoneticEmbedder__syncClient) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC6Speech16PhoneticEmbedder_embeddingDimensions) = 40;
  LOBYTE(a4) = *a4;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC6Speech16PhoneticEmbedder_maxWordLength) = 30;
  v17 = *a5;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC6Speech16PhoneticEmbedder_modelVersion) = 0;
  OUTLINED_FUNCTION_21_12(v15 - v14, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16));
  v20 = (char)a4;
  v19 = v17;
  type metadata accessor for EuclidActor(0);
  swift_allocObject();
  swift_bridgeObjectRetain();
  *(_QWORD *)(v6 + OBJC_IVAR____TtC6Speech16PhoneticEmbedder_euclidActor) = sub_1B2576A28(v16, a2, a3, &v20, &v19);
  OUTLINED_FUNCTION_21_12(v6 + OBJC_IVAR____TtC6Speech16PhoneticEmbedder_locale, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 32));
  v18 = (uint64_t *)(v6 + OBJC_IVAR____TtC6Speech16PhoneticEmbedder_clientID);
  *v18 = a2;
  v18[1] = a3;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC6Speech16PhoneticEmbedder_inputFormat) = (_BYTE)a4;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC6Speech16PhoneticEmbedder_loadingOption) = v17;
  OUTLINED_FUNCTION_7_1();
}

uint64_t type metadata accessor for EuclidActor(uint64_t a1)
{
  return sub_1B24B1B88(a1, (uint64_t *)&unk_1ED36CEC8);
}

void sub_1B2574DD0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;

  v1 = OBJC_IVAR____TtC6Speech16PhoneticEmbedder__syncClient;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC6Speech16PhoneticEmbedder__syncClient);
  if (v2)
    goto LABEL_2;
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = 0;
  swift_retain();
  v5 = sub_1B2574F3C((uint64_t)sub_1B2577EDC, v4);
  swift_release();
  swift_beginAccess();
  v6 = *(void **)(v4 + 16);
  if (v6)
  {
    v7 = v6;
    swift_willThrow();
    swift_release();

  }
  else
  {
    v8 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;
    v9 = v5;

    v10 = *(void **)(v0 + v1);
    if (v10)
    {
      v10;
      swift_release();

      v2 = 0;
LABEL_2:
      v3 = v2;
      return;
    }
    __break(1u);
  }
}

void sub_1B2574EE0(void *a1, uint64_t a2)
{
  void *v4;
  id v5;

  swift_beginAccess();
  v4 = *(void **)(a2 + 16);
  *(_QWORD *)(a2 + 16) = a1;
  v5 = a1;

}

id sub_1B2574F3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD v13[6];

  v5 = objc_msgSend(objc_allocWithZone((Class)SFLocalSpeechRecognitionClient), sel_init);
  sub_1B259B4A0();
  v6 = (void *)sub_1B25CCA0C();
  swift_bridgeObjectRelease();
  v7 = (void *)sub_1B25CCA0C();
  v8 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC6Speech16PhoneticEmbedder_inputFormat);
  v9 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC6Speech16PhoneticEmbedder_loadingOption);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  v13[4] = sub_1B2577EE4;
  v13[5] = v10;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1B25750E8;
  v13[3] = &block_descriptor_31;
  v11 = _Block_copy(v13);
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_synchronousCreateEuclidInstanceForLanguageStr_clientID_inputFormat_loadingOption_completion_, v6, v7, v8, v9, v11);
  _Block_release(v11);

  return v5;
}

void sub_1B2575094(void *a1, void (*a2)(void))
{
  id v4;

  if (a1)
  {
    v4 = a1;
    ((void (*)(void *))a2)(a1);

  }
  else
  {
    a2();
  }
}

void sub_1B25750E8(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

uint64_t PhoneticEmbedder.embeddingDimensions()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B257514C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  OUTLINED_FUNCTION_18_0(v1, (uint64_t)sub_1B257519C);
  return sub_1B25771A8();
}

uint64_t sub_1B257519C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_3_1();
  if (v1)
    return OUTLINED_FUNCTION_56(*(uint64_t (**)(void))(v3 + 8));
  *(_QWORD *)(v2 + 32) = v0;
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_31();
}

uint64_t PhoneticEmbedder.maxInputLength()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B25751F0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  OUTLINED_FUNCTION_18_0(v1, (uint64_t)sub_1B2575240);
  return sub_1B2577094();
}

uint64_t sub_1B2575240()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_3_1();
  if (v1)
    return OUTLINED_FUNCTION_56(*(uint64_t (**)(void))(v3 + 8));
  *(_QWORD *)(v2 + 32) = v0;
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_31();
}

uint64_t sub_1B2575284()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 32);
  v2 = objc_msgSend(v1, sel_integerValue);

  return (*(uint64_t (**)(id))(v0 + 8))(v2);
}

uint64_t PhoneticEmbedder.fullModelVersion()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B25752E0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  OUTLINED_FUNCTION_18_0(v1, (uint64_t)sub_1B2575330);
  return sub_1B2577310();
}

uint64_t sub_1B2575330(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *v3;
  v7 = swift_task_dealloc();
  if (!v2)
  {
    v7 = a1;
    v8 = a2;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
}

uint64_t PhoneticEmbedder.modelMajorVersion()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B25753A4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  OUTLINED_FUNCTION_18_0(v1, (uint64_t)sub_1B2577F0C);
  return sub_1B2577460();
}

uint64_t PhoneticEmbedder.modelMinorVersion()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B2575404()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  OUTLINED_FUNCTION_18_0(v1, (uint64_t)sub_1B2577F0C);
  return sub_1B257757C();
}

uint64_t PhoneticEmbedder.modelPatchVersion()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B2575464()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  OUTLINED_FUNCTION_18_0(v1, (uint64_t)sub_1B2577F0C);
  return sub_1B2577644();
}

uint64_t sub_1B25754B4()
{
  uint64_t v0;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD67F0);
  sub_1B25CC6F4();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B25DBD60;
  sub_1B25CC628();
  sub_1B25CC628();
  result = sub_1B25CC628();
  off_1EEFDAB50 = (_UNKNOWN *)v0;
  return result;
}

uint64_t static PhoneticEmbedder.allLocales()()
{
  if (qword_1EEFD8008 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

void static PhoneticEmbedder.allVersions(locale:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  BOOL v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD v18[2];
  uint64_t v19;

  v2 = OUTLINED_FUNCTION_23_0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  OUTLINED_FUNCTION_41_1();
  v9 = v8 - v7;
  if (qword_1EEFD8008 != -1)
    v5 = swift_once();
  v10 = off_1EEFDAB50;
  MEMORY[0x1E0C80A78](v5, v6);
  v18[-2] = a1;
  swift_bridgeObjectRetain();
  v11 = sub_1B2574998((uint64_t (*)(char *))sub_1B2577AC8, (uint64_t)&v18[-4], (uint64_t)v10);
  OUTLINED_FUNCTION_267();
  if (!v11)
  {
    if (qword_1ED36CF48 != -1)
      swift_once();
    v12 = sub_1B25CC8C8();
    __swift_project_value_buffer(v12, (uint64_t)qword_1ED36D980);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v9, a1, v2);
    v13 = sub_1B25CC8B0();
    v14 = sub_1B25CCFD0();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      *(_DWORD *)v15 = 136315138;
      v16 = sub_1B25CC634();
      v18[1] = sub_1B2504AB0(v16, v17, &v19);
      sub_1B25CD12C();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_30_9();
      _os_log_impl(&dword_1B2494000, v13, v14, "%s is not yet supported by PhoneticEmbedder", v15, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_174();
    }
    OUTLINED_FUNCTION_30_9();

  }
  OUTLINED_FUNCTION_7_1();
}

void static PhoneticEmbedder.availableLocales()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, unint64_t, uint64_t);
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  unint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEFD6730);
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_29_7();
  v50 = v2;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v3, v4);
  v53 = (char *)&v50 - v5;
  v6 = OUTLINED_FUNCTION_23_0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  OUTLINED_FUNCTION_29_7();
  v51 = v9;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v10, v11);
  v59 = (uint64_t)&v50 - v12;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v13, v14);
  v60 = (uint64_t)&v50 - v15;
  OUTLINED_FUNCTION_42_8();
  MEMORY[0x1E0C80A78](v16, v17);
  v19 = (char *)&v50 - v18;
  v20 = objc_msgSend((id)objc_opt_self(), sel_installedLanguagesForTaskHint_, 0);
  v21 = sub_1B25CCE38();

  v22 = *(_QWORD *)(v21 + 16);
  v23 = MEMORY[0x1E0DEE9D8];
  v57 = v7;
  if (v22)
  {
    v61 = MEMORY[0x1E0DEE9D8];
    sub_1B25053AC(0, v22, 0);
    v58 = v61;
    v24 = sub_1B2507C08(v21);
    v26 = v25;
    v28 = v27 & 1;
    v56 = v21 + 56;
    while ((v24 & 0x8000000000000000) == 0 && v24 < 1 << *(_BYTE *)(v21 + 32))
    {
      if (((*(_QWORD *)(v56 + (((unint64_t)v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
        goto LABEL_36;
      if (*(_DWORD *)(v21 + 36) != (_DWORD)v26)
        goto LABEL_37;
      swift_bridgeObjectRetain();
      sub_1B25CC628();
      v29 = v58;
      v61 = v58;
      v31 = *(_QWORD *)(v58 + 16);
      v30 = *(_QWORD *)(v58 + 24);
      if (v31 >= v30 >> 1)
      {
        OUTLINED_FUNCTION_34_8(v30 > 1, v31 + 1);
        v29 = v61;
      }
      *(_QWORD *)(v29 + 16) = v31 + 1;
      v32 = (*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
      v58 = v29;
      v33 = v29 + v32 + *(_QWORD *)(v57 + 72) * v31;
      v7 = v57;
      (*(void (**)(unint64_t, char *, uint64_t))(v57 + 32))(v33, v19, v6);
      v34 = sub_1B2507888(v24, v26, v28 & 1, v21);
      v24 = v34;
      v26 = v35;
      v28 = v36 & 1;
      if (!--v22)
      {
        sub_1B2500EF0(v34, v35, v36 & 1);
        swift_bridgeObjectRelease();
        v37 = v58;
        v23 = MEMORY[0x1E0DEE9D8];
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  swift_bridgeObjectRelease();
  v37 = MEMORY[0x1E0DEE9D8];
LABEL_12:
  v61 = v23;
  v38 = (uint64_t)v53;
  v52 = *(_QWORD *)(v37 + 16);
  v39 = v50;
  if (v52)
  {
    v40 = 0;
    v58 = v37;
    while (v40 < *(_QWORD *)(v37 + 16))
    {
      v54 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      v41 = *(_QWORD *)(v7 + 72);
      v42 = *(void (**)(uint64_t, unint64_t, uint64_t))(v7 + 16);
      v42(v38, v37 + v54 + v41 * v40, v6);
      OUTLINED_FUNCTION_17_12(v38, 0);
      if (__swift_getEnumTagSinglePayload(v38, 1, v6) == 1)
        goto LABEL_34;
      OUTLINED_FUNCTION_26_12(v60, v38);
      if (qword_1EEFD8008 != -1)
        swift_once();
      v43 = *((_QWORD *)off_1EEFDAB50 + 2);
      v55 = off_1EEFDAB50;
      v56 = v40;
      if (v43)
      {
        v44 = (char *)off_1EEFDAB50 + v54;
        swift_bridgeObjectRetain();
        while (1)
        {
          v42(v39, (unint64_t)v44, v6);
          OUTLINED_FUNCTION_17_12(v39, 0);
          if (__swift_getEnumTagSinglePayload(v39, 1, v6) == 1)
            break;
          v45 = v59;
          OUTLINED_FUNCTION_26_12(v59, v39);
          sub_1B2577B24();
          v46 = sub_1B25CC994();
          (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v45, v6);
          if ((v46 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_26_12(v51, v60);
            v47 = v61;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              OUTLINED_FUNCTION_34_8(0, *(_QWORD *)(v47 + 16) + 1);
              v47 = v61;
            }
            v49 = *(_QWORD *)(v47 + 16);
            v48 = *(_QWORD *)(v47 + 24);
            if (v49 >= v48 >> 1)
            {
              OUTLINED_FUNCTION_34_8(v48 > 1, v49 + 1);
              v47 = v61;
            }
            *(_QWORD *)(v47 + 16) = v49 + 1;
            OUTLINED_FUNCTION_26_12(v47 + v54 + v49 * v41, v51);
            v61 = v47;
            v7 = v57;
            goto LABEL_32;
          }
          v44 += v41;
          if (!--v43)
            goto LABEL_25;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_25:
        OUTLINED_FUNCTION_17_12(v39, 1);
      }
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v60, v6);
LABEL_32:
      v40 = v56 + 1;
      v38 = (uint64_t)v53;
      v37 = v58;
      if (v56 + 1 == v52)
        goto LABEL_33;
    }
LABEL_38:
    __break(1u);
    return;
  }
LABEL_33:
  OUTLINED_FUNCTION_17_12(v38, 1);
LABEL_34:
  swift_bridgeObjectRelease();
  sub_1B2577AE4(v38);
  OUTLINED_FUNCTION_7_1();
}

uint64_t PhoneticEmbedder.distanceBetween(source:and:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B2575D28()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_1B2575D84;
  v2 = OUTLINED_FUNCTION_327(*(_QWORD *)(v0 + 16));
  return sub_1B2576CF4(v2, v3, v4, v5);
}

uint64_t sub_1B2575D84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _QWORD *v5;

  OUTLINED_FUNCTION_70_0();
  v4 = *v3;
  *v5 = v4;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v4 + 8))();
  *(_QWORD *)(v2 + 64) = v0;
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_31();
}

uint64_t sub_1B2575DE4()
{
  uint64_t v0;
  void *v1;
  double v2;
  double v3;

  v1 = *(void **)(v0 + 64);
  sub_1B25CCDF0();
  v3 = v2;

  return (*(uint64_t (**)(double))(v0 + 8))(v3);
}

uint64_t PhoneticEmbedder.nearest(_:neighborsOf:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B2575E3C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_1B2575E98;
  v2 = OUTLINED_FUNCTION_327(*(_QWORD *)(v0 + 24));
  return sub_1B2576AD8(v2, v3, v4);
}

uint64_t sub_1B2575E98(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 56) = a1;
  OUTLINED_FUNCTION_237();
  if (v1)
    return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v3 + 8));
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B2575EF4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 56);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease();
    v16 = MEMORY[0x1E0DEE9D8];
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v16);
  }
  OUTLINED_FUNCTION_25_14();
  v2 = sub_1B25CD474();
  OUTLINED_FUNCTION_267();
  if (!v2)
    goto LABEL_11;
LABEL_3:
  v18 = MEMORY[0x1E0DEE9D8];
  result = sub_1B25CD384();
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = 0;
    v5 = v1 & 0xC000000000000001;
    v17 = *(_QWORD *)(v0 + 56) + 32;
    do
    {
      if (v5)
        v6 = (id)MEMORY[0x1B5E252C4](v4, *(_QWORD *)(v0 + 56));
      else
        v6 = *(id *)(v17 + 8 * v4);
      v7 = v6;
      ++v4;
      v8 = objc_msgSend(v6, sel_name, v17);
      v9 = sub_1B25CCA18();
      v11 = v10;

      v12 = objc_msgSend(v7, sel_distance);
      sub_1B25CCDF0();
      v14 = v13;

      type metadata accessor for PhoneticNeighbor();
      v15 = (_QWORD *)OUTLINED_FUNCTION_8_4();
      v15[2] = v9;
      v15[3] = v11;
      v15[4] = v14;

      sub_1B25CD36C();
      sub_1B25CD390();
      sub_1B25CD39C();
      sub_1B25CD378();
    }
    while (v2 != v4);
    v16 = v18;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v16);
  }
  __break(1u);
  return result;
}

uint64_t PhoneticNeighbor.__allocating_init(name:distance:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_8_4();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(double *)(result + 32) = a3;
  return result;
}

uint64_t PhoneticEmbedder.embeddings(of:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1B25760F8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_1B2576150;
  v2 = OUTLINED_FUNCTION_327(*(_QWORD *)(v0 + 16));
  return sub_1B2576EA8(v2);
}

uint64_t sub_1B2576150(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 40) = a1;
  OUTLINED_FUNCTION_237();
  if (v1)
    return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v3 + 8));
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

void sub_1B25761AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1B2505780();
    v3 = 0;
    v4 = v18;
    v16 = v2;
    v17 = v1 + 32;
    while (1)
    {
      v5 = *(_QWORD *)(v17 + 8 * v3);
      if (v5 >> 62)
      {
        OUTLINED_FUNCTION_25_14();
        v6 = sub_1B25CD474();
        if (!v6)
        {
LABEL_15:
          OUTLINED_FUNCTION_267();
          v8 = MEMORY[0x1E0DEE9D8];
          goto LABEL_16;
        }
      }
      else
      {
        v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v6)
          goto LABEL_15;
      }
      v19 = MEMORY[0x1E0DEE9D8];
      sub_1B250535C();
      if (v6 < 0)
      {
        __break(1u);
        return;
      }
      v7 = 0;
      v8 = v19;
      do
      {
        if ((v5 & 0xC000000000000001) != 0)
          v9 = (id)MEMORY[0x1B5E252C4](v7, v5);
        else
          v9 = *(id *)(v5 + 8 * v7 + 32);
        v10 = v9;
        sub_1B25CCDF0();
        v12 = v11;

        v13 = *(_QWORD *)(v19 + 16);
        if (v13 >= *(_QWORD *)(v19 + 24) >> 1)
          sub_1B250535C();
        ++v7;
        *(_QWORD *)(v19 + 16) = v13 + 1;
        *(_QWORD *)(v19 + 8 * v13 + 32) = v12;
      }
      while (v6 != v7);
      OUTLINED_FUNCTION_267();
      v2 = v16;
LABEL_16:
      v14 = *(_QWORD *)(v18 + 16);
      if (v14 >= *(_QWORD *)(v18 + 24) >> 1)
        sub_1B2505780();
      ++v3;
      *(_QWORD *)(v18 + 16) = v14 + 1;
      *(_QWORD *)(v18 + 8 * v14 + 32) = v8;
      if (v3 == v2)
      {
        v0 = v15;
        swift_bridgeObjectRelease();
        goto LABEL_21;
      }
    }
  }
  OUTLINED_FUNCTION_267();
  v4 = MEMORY[0x1E0DEE9D8];
LABEL_21:
  (*(void (**)(uint64_t))(v0 + 8))(v4);
}

void PhoneticEmbedder.embeddings(of:completion:)(uint64_t a1, void (*a2)(_QWORD, void *), uint64_t a3)
{
  void *v3;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  _QWORD v12[6];

  sub_1B2574DD0();
  if (v3)
  {
    v7 = v3;
    a2(0, v3);

    swift_willThrow();
  }
  else
  {
    v8 = v6;
    v9 = (void *)sub_1B25CCB98();
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = a2;
    *(_QWORD *)(v10 + 24) = a3;
    v12[4] = sub_1B2577BA8;
    v12[5] = v10;
    v12[0] = MEMORY[0x1E0C809B0];
    v12[1] = 1107296256;
    v12[2] = sub_1B2576718;
    v12[3] = &block_descriptor_10;
    v11 = _Block_copy(v12);
    swift_retain();
    swift_release();
    objc_msgSend(v8, sel_synchronousComputeEuclidEmbeddingsForSources_completion_, v9, v11);
    _Block_release(v11);

  }
}

void sub_1B25764DC(uint64_t a1, void (*a2)(uint64_t, _QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (a1)
  {
    v3 = *(_QWORD *)(a1 + 16);
    v4 = MEMORY[0x1E0DEE9D8];
    if (v3)
    {
      v19 = MEMORY[0x1E0DEE9D8];
      sub_1B2505780();
      v5 = 0;
      v17 = v3;
      v18 = a1 + 32;
      while (1)
      {
        v6 = *(_QWORD *)(v18 + 8 * v5);
        if (v6 >> 62)
        {
          swift_bridgeObjectRetain();
          v7 = sub_1B25CD474();
          if (!v7)
          {
LABEL_16:
            swift_bridgeObjectRelease();
            v9 = v4;
            goto LABEL_17;
          }
        }
        else
        {
          v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v7)
            goto LABEL_16;
        }
        sub_1B250535C();
        if (v7 < 0)
        {
          __break(1u);
          return;
        }
        v8 = 0;
        v9 = v4;
        do
        {
          if ((v6 & 0xC000000000000001) != 0)
            v10 = (id)MEMORY[0x1B5E252C4](v8, v6);
          else
            v10 = *(id *)(v6 + 8 * v8 + 32);
          v11 = v10;
          sub_1B25CCDF0();
          v13 = v12;

          v14 = *(_QWORD *)(v9 + 16);
          if (v14 >= *(_QWORD *)(v9 + 24) >> 1)
            sub_1B250535C();
          ++v8;
          *(_QWORD *)(v9 + 16) = v14 + 1;
          *(_QWORD *)(v9 + 8 * v14 + 32) = v13;
        }
        while (v7 != v8);
        swift_bridgeObjectRelease();
        v4 = MEMORY[0x1E0DEE9D8];
        v3 = v17;
LABEL_17:
        v15 = *(_QWORD *)(v19 + 16);
        if (v15 >= *(_QWORD *)(v19 + 24) >> 1)
          sub_1B2505780();
        ++v5;
        *(_QWORD *)(v19 + 16) = v15 + 1;
        *(_QWORD *)(v19 + 8 * v15 + 32) = v9;
        if (v5 == v3)
        {
          a2(v19, 0);
          goto LABEL_23;
        }
      }
    }
    a2(MEMORY[0x1E0DEE9D8], 0);
LABEL_23:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1B2576718(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(uint64_t);

  v2 = a2;
  v3 = *(void (**)(uint64_t))(a1 + 32);
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CFE0);
    v2 = sub_1B25CCBA4();
  }
  swift_retain();
  v3(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t PhoneticEmbedder.__allocating_init(locale:clientID:inputFormat:)(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  char v17;

  v8 = OUTLINED_FUNCTION_23_0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  OUTLINED_FUNCTION_41_1();
  v13 = v12 - v11;
  LOBYTE(a4) = *a4;
  OUTLINED_FUNCTION_21_12(v12 - v11, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
  v17 = (char)a4;
  v16 = 0;
  v14 = OUTLINED_FUNCTION_628();
  PhoneticEmbedder.init(locale:clientID:inputFormat:loadingOption:)(v13, a2, a3, &v17, &v16);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  return v14;
}

uint64_t PhoneticEmbedder.embeddingDimensions.getter()
{
  return 40;
}

uint64_t PhoneticEmbedder.maxWordLength.getter()
{
  return 30;
}

uint64_t PhoneticEmbedder.modelVersion.getter()
{
  return 0;
}

void *static PhoneticEmbedder.allVersions(locale:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  BOOL v4;
  _QWORD v6[6];

  v2 = a1;
  if (qword_1EEFD8008 != -1)
    a1 = swift_once();
  v3 = off_1EEFDAB50;
  MEMORY[0x1E0C80A78](a1, a2);
  v6[2] = v2;
  OUTLINED_FUNCTION_47_0();
  v4 = sub_1B2574998((uint64_t (*)(char *))sub_1B2577EEC, (uint64_t)v6, (uint64_t)v3);
  swift_bridgeObjectRelease();
  if (v4)
    return &unk_1E647C130;
  else
    return (void *)MEMORY[0x1E0DEE9D8];
}

uint64_t PhoneticEmbedder.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC6Speech16PhoneticEmbedder_locale;
  v2 = OUTLINED_FUNCTION_23_0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();

  return v0;
}

uint64_t PhoneticEmbedder.__deallocating_deinit()
{
  PhoneticEmbedder.deinit();
  return swift_deallocClassInstance();
}

uint64_t PhoneticNeighbor.init(name:distance:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  *(double *)(v3 + 32) = a3;
  return v3;
}

uint64_t PhoneticNeighbor.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  OUTLINED_FUNCTION_47_0();
  return v1;
}

double PhoneticNeighbor.distance.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

uint64_t PhoneticNeighbor.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PhoneticNeighbor.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1B2576A28(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, char *a5)
{
  uint64_t v5;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v9 = *a4;
  v10 = *a5;
  swift_defaultActor_initialize();
  *(_QWORD *)(v5 + OBJC_IVAR____TtC6SpeechP33_BB256D071C96542CEBFBAC43A1B470C111EuclidActor__euclidService) = 0;
  v11 = v5 + OBJC_IVAR____TtC6SpeechP33_BB256D071C96542CEBFBAC43A1B470C111EuclidActor_locale;
  v12 = sub_1B25CC6F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, a1, v12);
  v13 = (_QWORD *)(v5 + OBJC_IVAR____TtC6SpeechP33_BB256D071C96542CEBFBAC43A1B470C111EuclidActor_clientID);
  *v13 = a2;
  v13[1] = a3;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC6SpeechP33_BB256D071C96542CEBFBAC43A1B470C111EuclidActor_inputFormat) = v9;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC6SpeechP33_BB256D071C96542CEBFBAC43A1B470C111EuclidActor_loadingOption) = v10;
  return v5;
}

uint64_t sub_1B2576AD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v4[6] = v5;
  *v5 = v4;
  v5[1] = sub_1B2576B24;
  return sub_1B257770C();
}

uint64_t sub_1B2576B24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_176();
  v3 = *v2;
  *(_QWORD *)(v0 + 56) = v4;
  OUTLINED_FUNCTION_237();
  if (v1)
    return OUTLINED_FUNCTION_15_0(*(uint64_t (**)(void))(v3 + 8));
  else
    return OUTLINED_FUNCTION_2_0();
}

uint64_t sub_1B2576B80()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B2576BB0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v1;
  *v1 = v0;
  v1[1] = sub_1B2576C04;
  v2 = OUTLINED_FUNCTION_327(*(_QWORD *)(v0 + 16));
  return sub_1B259595C(v2, v3, v4);
}

uint64_t sub_1B2576C04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_70_0();
  OUTLINED_FUNCTION_177(v3);
  *(_QWORD *)(v2 + 72) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 80) = v0;
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_31();
}

uint64_t sub_1B2576C58()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_89(*(_QWORD *)(v0 + 80), *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B2576C90()
{
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B2576CC8()
{
  uint64_t v0;

  swift_release();
  return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B2576CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v6 = (_QWORD *)swift_task_alloc();
  v5[7] = v6;
  OUTLINED_FUNCTION_18_0(v6, (uint64_t)sub_1B2576D40);
  return sub_1B257770C();
}

uint64_t sub_1B2576D40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_176();
  v3 = *v2;
  *(_QWORD *)(v0 + 64) = v4;
  OUTLINED_FUNCTION_237();
  if (v1)
    return OUTLINED_FUNCTION_15_0(*(uint64_t (**)(void))(v3 + 8));
  else
    return OUTLINED_FUNCTION_2_0();
}

uint64_t sub_1B2576D9C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t);

  v4 = (uint64_t (*)(uint64_t))((char *)&dword_1EEFDA3A0 + dword_1EEFDA3A0);
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_47_0();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v1;
  *v1 = v0;
  v1[1] = sub_1B2576E18;
  v2 = OUTLINED_FUNCTION_327(*(_QWORD *)(v0 + 64));
  return v4(v2);
}

uint64_t sub_1B2576E18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_70_0();
  OUTLINED_FUNCTION_177(v4);
  *(_QWORD *)(v2 + 80) = v1;
  swift_task_dealloc();
  if (v1)
    return OUTLINED_FUNCTION_31();
  swift_release();
  return OUTLINED_FUNCTION_35_0(v0, *(uint64_t (**)(void))(v3 + 8));
}

uint64_t sub_1B2576E7C()
{
  uint64_t v0;

  swift_release();
  return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B2576EA8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v2[4] = v3;
  *v3 = v2;
  v3[1] = sub_1B2576EF0;
  return sub_1B257770C();
}

uint64_t sub_1B2576EF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 40) = a1;
  OUTLINED_FUNCTION_237();
  if (v1)
    return OUTLINED_FUNCTION_15_0(*(uint64_t (**)(void))(v3 + 8));
  else
    return OUTLINED_FUNCTION_2_0();
}

uint64_t sub_1B2576F54()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B2576F84()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_1B2576FD4;
  v2 = OUTLINED_FUNCTION_327(*(_QWORD *)(v0 + 16));
  return sub_1B2596304(v2);
}

uint64_t sub_1B2576FD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_70_0();
  OUTLINED_FUNCTION_177(v3);
  *(_QWORD *)(v2 + 56) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 64) = v0;
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_31();
}

uint64_t sub_1B2577028()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_89(*(_QWORD *)(v0 + 64), *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B2577060()
{
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B2577094()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = v0;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1B25770DC;
  return sub_1B257770C();
}

uint64_t sub_1B25770DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_10(a1);
  if (v1)
    return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v2 + 8));
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B2577118()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_20_12();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  OUTLINED_FUNCTION_18_0(v1, (uint64_t)sub_1B257715C);
  return sub_1B25965FC();
}

uint64_t sub_1B257715C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_15_8();
  if (!v1)
    *(_QWORD *)(v2 + 56) = v0;
  return OUTLINED_FUNCTION_31();
}

uint64_t sub_1B25771A8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = v0;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1B25771F0;
  return sub_1B257770C();
}

uint64_t sub_1B25771F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_10(a1);
  if (v1)
    return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v2 + 8));
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B257722C()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_20_12();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  OUTLINED_FUNCTION_18_0(v1, (uint64_t)sub_1B2577270);
  return sub_1B2596744();
}

uint64_t sub_1B2577270()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_15_8();
  if (!v1)
    *(_QWORD *)(v2 + 56) = v0;
  return OUTLINED_FUNCTION_31();
}

uint64_t sub_1B25772BC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_29_13();
  return OUTLINED_FUNCTION_89(*(_QWORD *)(v0 + 56), *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B25772E8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_29_13();
  return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B2577310()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = v0;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1B2577358;
  return sub_1B257770C();
}

uint64_t sub_1B2577358(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_10(a1);
  if (v1)
    return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v2 + 8));
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B2577394()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_20_12();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  OUTLINED_FUNCTION_18_0(v1, (uint64_t)sub_1B25773D8);
  return sub_1B25968F8();
}

uint64_t sub_1B25773D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_6_13();
  if (!v1)
  {
    *(_QWORD *)(v3 + 56) = v0;
    *(_QWORD *)(v3 + 64) = v2;
  }
  return OUTLINED_FUNCTION_2_0();
}

uint64_t sub_1B257742C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_29_13();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 56));
}

uint64_t sub_1B2577460()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = v0;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1B25774A8;
  return sub_1B257770C();
}

uint64_t sub_1B25774A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_10(a1);
  if (v1)
    return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v2 + 8));
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B25774E4()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_20_12();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  OUTLINED_FUNCTION_18_0(v1, (uint64_t)sub_1B2577528);
  return sub_1B2596A6C();
}

uint64_t sub_1B2577528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_6_13();
  if (!v1)
  {
    *(_QWORD *)(v3 + 56) = v0;
    *(_QWORD *)(v3 + 64) = v2;
  }
  return OUTLINED_FUNCTION_2_0();
}

uint64_t sub_1B257757C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = v0;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1B25775C4;
  return sub_1B257770C();
}

uint64_t sub_1B25775C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_10(a1);
  if (v1)
    return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v2 + 8));
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B2577600()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_20_12();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  OUTLINED_FUNCTION_18_0(v1, (uint64_t)sub_1B2577528);
  return sub_1B2596BAC();
}

uint64_t sub_1B2577644()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = v0;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1B257768C;
  return sub_1B257770C();
}

uint64_t sub_1B257768C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_10(a1);
  if (v1)
    return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v2 + 8));
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B25776C8()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_20_12();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  OUTLINED_FUNCTION_18_0(v1, (uint64_t)sub_1B2577528);
  return sub_1B2596CA4();
}

uint64_t sub_1B257770C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1B2577724()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v11)(uint64_t);

  v1 = v0[2];
  v2 = OBJC_IVAR____TtC6SpeechP33_BB256D071C96542CEBFBAC43A1B470C111EuclidActor__euclidService;
  v0[3] = OBJC_IVAR____TtC6SpeechP33_BB256D071C96542CEBFBAC43A1B470C111EuclidActor__euclidService;
  if (*(_QWORD *)(v1 + v2))
  {
    v3 = OUTLINED_FUNCTION_80_0();
    return v11(v3);
  }
  else
  {
    if (qword_1ED36D218 != -1)
    {
      swift_once();
      v1 = v0[2];
    }
    v5 = v1 + OBJC_IVAR____TtC6SpeechP33_BB256D071C96542CEBFBAC43A1B470C111EuclidActor_locale;
    v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6SpeechP33_BB256D071C96542CEBFBAC43A1B470C111EuclidActor_clientID);
    v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6SpeechP33_BB256D071C96542CEBFBAC43A1B470C111EuclidActor_clientID + 8);
    v8 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC6SpeechP33_BB256D071C96542CEBFBAC43A1B470C111EuclidActor_inputFormat);
    v9 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC6SpeechP33_BB256D071C96542CEBFBAC43A1B470C111EuclidActor_loadingOption);
    v10 = (_QWORD *)swift_task_alloc();
    v0[4] = v10;
    OUTLINED_FUNCTION_18_0(v10, (uint64_t)sub_1B2577834);
    return sub_1B24B6378(v5, v6, v7, v8, v9);
  }
}

uint64_t sub_1B2577834(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 40) = a1;
  OUTLINED_FUNCTION_237();
  if (v1)
    return OUTLINED_FUNCTION_15_0(*(uint64_t (**)(void))(v3 + 8));
  else
    return OUTLINED_FUNCTION_2_0();
}

uint64_t sub_1B2577898()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v1 = v0[5];
  v3 = v0[2];
  v2 = v0[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD68F8);
  v4 = OUTLINED_FUNCTION_8_4();
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v3 + v2) = v4;
  swift_retain();
  swift_release();
  result = *(_QWORD *)(v3 + v2);
  v0[6] = result;
  if (result)
  {
    swift_retain();
    OUTLINED_FUNCTION_17();
    return OUTLINED_FUNCTION_2_0();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B2577918()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  OUTLINED_FUNCTION_18_0(v1, (uint64_t)sub_1B2577960);
  return sub_1B2596D9C();
}

uint64_t sub_1B2577960()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_177(v2);
  *(_QWORD *)(v0 + 64) = v1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_2_0();
}

uint64_t sub_1B25779B8()
{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_38_2();
  return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B25779E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC6SpeechP33_BB256D071C96542CEBFBAC43A1B470C111EuclidActor_locale;
  v2 = sub_1B25CC6F4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_1B2577A58()
{
  sub_1B25779E8();
  return swift_defaultActor_deallocate();
}

uint64_t sub_1B2577A6C()
{
  sub_1B25CC6F4();
  sub_1B2577B24();
  return sub_1B25CC994() & 1;
}

uint64_t sub_1B2577AC8()
{
  return sub_1B2577A6C() & 1;
}

uint64_t sub_1B2577AE4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEFD6730);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1B2577B24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEFDABB8;
  if (!qword_1EEFDABB8)
  {
    v1 = sub_1B25CC6F4();
    result = MEMORY[0x1B5E261DC](MEMORY[0x1E0CB0E60], v1);
    atomic_store(result, (unint64_t *)&qword_1EEFDABB8);
  }
  return result;
}

uint64_t type metadata accessor for PhoneticNeighbor()
{
  return objc_opt_self();
}

uint64_t sub_1B2577B84()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1B2577BA8(uint64_t a1)
{
  uint64_t v1;

  sub_1B25764DC(a1, *(void (**)(uint64_t, _QWORD))(v1 + 16));
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

unint64_t sub_1B2577BCC()
{
  unint64_t result;

  result = qword_1EEFDABF0;
  if (!qword_1EEFDABF0)
  {
    result = MEMORY[0x1B5E261DC](&protocol conformance descriptor for PhoneticEmbedder.InputFormat, &type metadata for PhoneticEmbedder.InputFormat);
    atomic_store(result, (unint64_t *)&qword_1EEFDABF0);
  }
  return result;
}

unint64_t sub_1B2577C0C()
{
  unint64_t result;

  result = qword_1EEFDABF8;
  if (!qword_1EEFDABF8)
  {
    result = MEMORY[0x1B5E261DC](&protocol conformance descriptor for PhoneticEmbedder.LoadingOption, &type metadata for PhoneticEmbedder.LoadingOption);
    atomic_store(result, &qword_1EEFDABF8);
  }
  return result;
}

uint64_t sub_1B2577C48()
{
  return type metadata accessor for PhoneticEmbedder(0);
}

uint64_t type metadata accessor for PhoneticEmbedder(uint64_t a1)
{
  return sub_1B24B1B88(a1, (uint64_t *)&unk_1ED36D208);
}

uint64_t sub_1B2577C64()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B25CC6F4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for PhoneticEmbedder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PhoneticEmbedder.__allocating_init(locale:clientID:inputFormat:loadingOption:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

ValueMetadata *type metadata accessor for PhoneticEmbedder.InputFormat()
{
  return &type metadata for PhoneticEmbedder.InputFormat;
}

uint64_t _s6Speech16PhoneticEmbedderC11InputFormatOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B2577D84 + 4 * byte_1B25E0A95[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B2577DB8 + 4 * byte_1B25E0A90[v4]))();
}

uint64_t sub_1B2577DB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B2577DC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B2577DC8);
  return result;
}

uint64_t sub_1B2577DD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B2577DDCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B2577DE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B2577DE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PhoneticEmbedder.LoadingOption()
{
  return &type metadata for PhoneticEmbedder.LoadingOption;
}

uint64_t method lookup function for PhoneticNeighbor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PhoneticNeighbor.__allocating_init(name:distance:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1B2577E18()
{
  return type metadata accessor for EuclidActor(0);
}

uint64_t sub_1B2577E20()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B25CC6F4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1B2577EB8()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1B2577EDC(void *a1)
{
  uint64_t v1;

  sub_1B2574EE0(a1, v1);
}

void sub_1B2577EE4(void *a1)
{
  uint64_t v1;

  sub_1B2575094(a1, *(void (**)(void))(v1 + 16));
}

uint64_t sub_1B2577EEC()
{
  return sub_1B2577AC8() & 1;
}

uint64_t OUTLINED_FUNCTION_1_10(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 - 8) = *v1;
  *(_QWORD *)(v2 - 8) = *v1;
  *(_QWORD *)(v3 + 32) = a1;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_6_13()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 48) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_15_8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 48) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_17_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_21_12@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_25_14()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_26_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_29_13()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_30_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

void OUTLINED_FUNCTION_34_8(uint64_t a1, uint64_t a2)
{
  sub_1B25053AC(a1, a2, 1);
}

void SFAcousticFeature.acousticFeatureValuePerFrame.getter()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t i;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v1 = objc_msgSend(v0, sel_acousticFeatureValuePerFrame);
  sub_1B2578188();
  v2 = sub_1B25CCBA4();

  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
LABEL_11:
    OUTLINED_FUNCTION_10_0();
    return;
  }
  swift_bridgeObjectRetain();
  v3 = sub_1B25CD474();
  OUTLINED_FUNCTION_10_0();
  if (!v3)
    goto LABEL_11;
LABEL_3:
  v10 = MEMORY[0x1E0DEE9D8];
  sub_1B250535C();
  if ((v3 & 0x8000000000000000) == 0)
  {
    for (i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0)
        v5 = (id)MEMORY[0x1B5E252C4](i, v2);
      else
        v5 = *(id *)(v2 + 8 * i + 32);
      v6 = v5;
      sub_1B25CCDF0();
      v8 = v7;

      v9 = *(_QWORD *)(v10 + 16);
      if (v9 >= *(_QWORD *)(v10 + 24) >> 1)
        sub_1B250535C();
      *(_QWORD *)(v10 + 16) = v9 + 1;
      *(_QWORD *)(v10 + 8 * v9 + 32) = v8;
    }
    goto LABEL_11;
  }
  __break(1u);
}

unint64_t sub_1B2578188()
{
  unint64_t result;

  result = qword_1EEFD7478;
  if (!qword_1EEFD7478)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EEFD7478);
  }
  return result;
}

uint64_t sub_1B25781C4()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_28_13();
  v0[4] = v1;
  v0[5] = *(_QWORD *)(v1 - 8);
  v0[6] = OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B2578204()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  if ((OUTLINED_FUNCTION_122() & 1) == 0)
    return OUTLINED_FUNCTION_13_9();
  v2 = OUTLINED_FUNCTION_35_11();
  v3 = OUTLINED_FUNCTION_49_8(v2);
  nullsub_1(v3, v4);
  if (v0)
  {
    OUTLINED_FUNCTION_107();
    OUTLINED_FUNCTION_77();
    v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_22();
    return OUTLINED_FUNCTION_45(v5);
  }
  else
  {
    OUTLINED_FUNCTION_67();
    OUTLINED_FUNCTION_82();
    OUTLINED_FUNCTION_74();
    v7 = (_QWORD *)OUTLINED_FUNCTION_25();
    *(_QWORD *)(v1 + 64) = v7;
    v8 = OUTLINED_FUNCTION_19(v7, (uint64_t)sub_1B25782B0);
    return OUTLINED_FUNCTION_84_2(v8, v9, v10, v11);
  }
}

uint64_t sub_1B25782B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_11_11();
  swift_bridgeObjectRelease();
  if (!v1)
    *(_QWORD *)(v2 + 80) = v0;
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_31();
}

uint64_t sub_1B25782FC()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 32));
  swift_task_dealloc();
  return OUTLINED_FUNCTION_89(*(_QWORD *)(v0 + 80), *(uint64_t (**)(void))(v0 + 8));
}

void sub_1B2578340()
{
  sub_1B2578AA8();
}

uint64_t sub_1B2578358()
{
  uint64_t v0;

  OUTLINED_FUNCTION_6_14();
  OUTLINED_FUNCTION_77();
  return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B2578384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  *(_QWORD *)(v3 + 16) = a3;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v4;
  *v4 = v3;
  v4[1] = sub_1B25798BC;
  return sub_1B25781C4();
}

void sub_1B25783D0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v11;
  unint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  void *v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;

  if (a1 == 0xD000000000000022 && (OUTLINED_FUNCTION_29(), v11) || (sub_1B25CD5D0() & 1) != 0)
  {
    objc_msgSend(a3, sel_hello);
    return;
  }
  if (a1 == 0xD00000000000004FLL && (OUTLINED_FUNCTION_29(), v11) || (OUTLINED_FUNCTION_12() & 1) != 0)
  {
    v12 = *(_QWORD *)(a4 + 16);
    if (v12)
    {
      sub_1B251AC38(a4 + 32, (uint64_t)&v24);
      if (!v25)
      {
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      sub_1B24AB608(&v24, &v26);
      sub_1B2579838();
      swift_dynamicCast();
      if (v12 >= 2)
      {
        v13 = v23;
        sub_1B251AC38(a4 + 64, (uint64_t)&v20);
        if (v21)
        {
          sub_1B24AB608(&v20, &v22);
          swift_dynamicCast();
          v14 = OUTLINED_FUNCTION_79();
          *(_QWORD *)(v14 + 16) = a5;
          *(_QWORD *)(v14 + 24) = a6;
          v29 = sub_1B25798A0;
          v30 = v14;
          v27 = MEMORY[0x1E0C809B0];
          v28 = 1107296256;
          v15 = OUTLINED_FUNCTION_23_14((uint64_t)sub_1B24B4158);
          sub_1B24AB754(a5);
          swift_release();
          objc_msgSend(a3, sel_runLanguageDetectionWithResultStream_samplingRate_reply_, v13, v19, v15);

          v16 = v15;
LABEL_24:
          _Block_release(v16);
          return;
        }
        goto LABEL_29;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_28;
  }
  if (a1 == 0xD000000000000026 && (OUTLINED_FUNCTION_29(), v11) || (OUTLINED_FUNCTION_12() & 1) != 0)
  {
    if (!a5)
    {
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    v17 = OUTLINED_FUNCTION_79();
    *(_QWORD *)(v17 + 16) = a5;
    *(_QWORD *)(v17 + 24) = a6;
    v29 = sub_1B24AB6CC;
    v30 = v17;
    v27 = MEMORY[0x1E0C809B0];
    v28 = 1107296256;
    OUTLINED_FUNCTION_23_14((uint64_t)sub_1B24A174C);
    OUTLINED_FUNCTION_33_9();
    swift_release();
    objc_msgSend(a3, sel_modelInfoWithReply_, a5);
LABEL_23:
    v16 = (const void *)a5;
    goto LABEL_24;
  }
  if (a1 == 0xD00000000000002DLL && (OUTLINED_FUNCTION_29(), v11) || (OUTLINED_FUNCTION_12() & 1) != 0)
  {
    if (!a5)
    {
LABEL_31:
      __break(1u);
      return;
    }
    v18 = OUTLINED_FUNCTION_79();
    *(_QWORD *)(v18 + 16) = a5;
    *(_QWORD *)(v18 + 24) = a6;
    v29 = sub_1B25797B4;
    v30 = v18;
    v27 = MEMORY[0x1E0C809B0];
    v28 = 1107296256;
    OUTLINED_FUNCTION_23_14((uint64_t)sub_1B25797BC);
    OUTLINED_FUNCTION_33_9();
    swift_release();
    objc_msgSend(a3, sel_supportedLocalesWithReply_, a5);
    goto LABEL_23;
  }
}

uint64_t sub_1B2578708()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_28_13();
  v0[4] = v1;
  v0[5] = *(_QWORD *)(v1 - 8);
  v0[6] = OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B2578748()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  if ((OUTLINED_FUNCTION_122() & 1) == 0)
    return OUTLINED_FUNCTION_13_9();
  v2 = OUTLINED_FUNCTION_35_11();
  v3 = OUTLINED_FUNCTION_49_8(v2);
  nullsub_1(v3, v4);
  if (v0)
  {
    OUTLINED_FUNCTION_107();
    OUTLINED_FUNCTION_77();
    v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_22();
    return OUTLINED_FUNCTION_23(v5);
  }
  else
  {
    OUTLINED_FUNCTION_82();
    OUTLINED_FUNCTION_74();
    v7 = (_QWORD *)OUTLINED_FUNCTION_25();
    *(_QWORD *)(v1 + 64) = v7;
    v8 = OUTLINED_FUNCTION_19(v7, (uint64_t)sub_1B25787F4);
    return OUTLINED_FUNCTION_84_2(v8, v9, v10, v11);
  }
}

uint64_t sub_1B25787F4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_17();
  return swift_task_switch();
}

uint64_t sub_1B257885C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_6_14();
  OUTLINED_FUNCTION_77();
  return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B2578888()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_28_13();
  v0[4] = v1;
  v0[5] = *(_QWORD *)(v1 - 8);
  v0[6] = OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B25788C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);

  if ((OUTLINED_FUNCTION_122() & 1) != 0)
  {
    v2 = OUTLINED_FUNCTION_35_11();
    v3 = OUTLINED_FUNCTION_49_8(v2);
    nullsub_1(v3, v4);
    if (v0)
    {
      OUTLINED_FUNCTION_107();
      OUTLINED_FUNCTION_77();
      v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_22();
      return OUTLINED_FUNCTION_45(v5);
    }
    else
    {
      OUTLINED_FUNCTION_67();
      OUTLINED_FUNCTION_82();
      OUTLINED_FUNCTION_74();
      v8 = (_QWORD *)OUTLINED_FUNCTION_25();
      *(_QWORD *)(v1 + 64) = v8;
      v9 = OUTLINED_FUNCTION_19(v8, (uint64_t)sub_1B257899C);
      return OUTLINED_FUNCTION_84_2(v9, v10, v11, v12);
    }
  }
  else
  {
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v1 + 88) = v7;
    *v7 = v1;
    v7[1] = sub_1B2578A14;
    return sub_1B2578A5C();
  }
}

uint64_t sub_1B257899C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_11_11();
  swift_bridgeObjectRelease();
  if (!v1)
    *(_QWORD *)(v2 + 80) = v0;
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_31();
}

uint64_t sub_1B25789E8()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_6_14();
  OUTLINED_FUNCTION_77();
  v0 = OUTLINED_FUNCTION_58_0();
  return OUTLINED_FUNCTION_89(v0, v1);
}

uint64_t sub_1B2578A14()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  v4 = *v0;
  OUTLINED_FUNCTION_19_0(&v4);
  swift_task_dealloc();
  v1 = OUTLINED_FUNCTION_58_0();
  return OUTLINED_FUNCTION_185(v1, v2);
}

uint64_t sub_1B2578A5C()
{
  return OUTLINED_FUNCTION_10_3();
}

void sub_1B2578A6C()
{
  OUTLINED_FUNCTION_26();
  OUTLINED_FUNCTION_39_7();
}

void sub_1B2578AA8()
{
  OUTLINED_FUNCTION_26();
  __break(1u);
}

uint64_t sub_1B2578AD8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1B2578B20;
  return sub_1B2578708();
}

uint64_t sub_1B2578B20()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v3 = *v0;
  v1 = *v0;
  OUTLINED_FUNCTION_19_0(&v3);
  return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1B2578B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  *(_QWORD *)(v3 + 16) = a3;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v4;
  *v4 = v3;
  v4[1] = sub_1B2578BA8;
  return sub_1B2578888();
}

uint64_t sub_1B2578BA8(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_15_2(a1);
  return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1B2578BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v4 = sub_1B25CC7D8();
  v3[8] = v4;
  v3[9] = *(_QWORD *)(v4 - 8);
  v3[10] = OUTLINED_FUNCTION_7_0();
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEFD6A10);
  v3[11] = v5;
  v3[12] = *(_QWORD *)(v5 - 8);
  v3[13] = OUTLINED_FUNCTION_7_0();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD84A8);
  v3[14] = v6;
  v3[15] = *(_QWORD *)(v6 - 8);
  v3[16] = OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B2578C68()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(_QWORD, _QWORD, _QWORD *);

  if ((swift_distributed_actor_is_remote() & 1) != 0)
  {
    v1 = v0[16];
    v2 = v0[5];
    v3 = OUTLINED_FUNCTION_35_11();
    v0[3] = v2;
    v0[2] = v3;
    type metadata accessor for EARLanguageDetectorResultStream();
    swift_retain();
    sub_1B25CC7F0();
    sub_1B2498E14(v1);
    v5 = v0[13];
    v0[4] = v0[6];
    sub_1B25CC7F0();
    sub_1B2498658(v5);
    nullsub_1(v6, v7);
    OUTLINED_FUNCTION_67();
    OUTLINED_FUNCTION_82();
    sub_1B25CC7E4();
    v8 = (_QWORD *)OUTLINED_FUNCTION_25();
    v0[17] = v8;
    *v8 = v0;
    v8[1] = sub_1B2578EB8;
    return v10(v0[7], v0[10], v0 + 2);
  }
  else
  {
    v4 = (_QWORD *)swift_task_alloc();
    v0[20] = v4;
    *v4 = v0;
    v4[1] = sub_1B2578F90;
    return sub_1B2579260();
  }
}

uint64_t sub_1B2578EB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 144) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 152) = a1;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_31();
}

uint64_t sub_1B2578F2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_30(*(_QWORD *)(v0 + 72));
  OUTLINED_FUNCTION_30_10();
  OUTLINED_FUNCTION_29_14();
  OUTLINED_FUNCTION_32_13();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_95();
  v1 = OUTLINED_FUNCTION_58_0();
  return OUTLINED_FUNCTION_185(v1, v2);
}

uint64_t sub_1B2578F90()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v4;

  v4 = *v0;
  OUTLINED_FUNCTION_19_0(&v4);
  swift_task_dealloc();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_95();
  v1 = OUTLINED_FUNCTION_58_0();
  return v2(v1);
}

uint64_t sub_1B2578FF4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_30(*(_QWORD *)(v0 + 72));
  OUTLINED_FUNCTION_30_10();
  OUTLINED_FUNCTION_29_14();
  OUTLINED_FUNCTION_32_13();
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_95();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B257905C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  _QWORD *v12;

  v3[2] = a3;
  v5 = *a2;
  v3[3] = *a2;
  v3[4] = *(_QWORD *)(v5 - 8);
  v6 = (uint64_t *)swift_task_alloc();
  v3[5] = v6;
  result = swift_conformsToProtocol();
  if (result)
  {
    sub_1B2550EE0();
    v8 = *v6;
    v9 = a2[1];
    v3[6] = v9;
    v3[7] = *(_QWORD *)(v9 - 8);
    v10 = (uint64_t *)swift_task_alloc();
    v3[8] = v10;
    result = swift_conformsToProtocol();
    if (result)
    {
      sub_1B2550EE0();
      v11 = *v10;
      v12 = (_QWORD *)swift_task_alloc();
      v3[9] = v12;
      *v12 = v3;
      v12[1] = sub_1B25791DC;
      return sub_1B2578BDC(v8, v11);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1B25791DC(uint64_t a1)
{
  uint64_t (**v1)(void);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *((_QWORD *)*v1 + 8);
  v3 = *((_QWORD *)*v1 + 6);
  v4 = *((_QWORD *)*v1 + 7);
  v6 = *((_QWORD *)*v1 + 4);
  v5 = *((_QWORD *)*v1 + 5);
  v7 = *((_QWORD *)*v1 + 3);
  OUTLINED_FUNCTION_15_2(a1);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  OUTLINED_FUNCTION_48();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_23(v1[1]);
}

uint64_t sub_1B2579260()
{
  return OUTLINED_FUNCTION_10_3();
}

void sub_1B2579270()
{
  OUTLINED_FUNCTION_26();
  OUTLINED_FUNCTION_39_7();
}

uint64_t sub_1B25792AC(void *a1, void *a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;

  v9 = sub_1B24A1BD4(a1, a2, a3, a4);
  v10 = v9;
  if (!v4 && !v9)
  {
    type metadata accessor for EARLanguageDetector();
    v10 = swift_distributedActor_remote_initialize();
    *(_QWORD *)(v10 + 112) = a1;
    *(_QWORD *)(v10 + 120) = a2;
    *(_BYTE *)(v10 + 128) = a3;
    *(_QWORD *)(v10 + 136) = a4;
    sub_1B24A1AF4(a1, a2, a3);
    swift_retain();
  }
  return v10;
}

uint64_t type metadata accessor for EARLanguageDetector()
{
  return objc_opt_self();
}

uint64_t sub_1B2579350()
{
  uint64_t v0;

  sub_1B25CD6A8();
  type metadata accessor for EARLanguageDetector();
  sub_1B24B87C4(&qword_1EEFDAC60, v0, (uint64_t (*)(uint64_t))type metadata accessor for EARLanguageDetector, (uint64_t)&unk_1B25E0EFC);
  sub_1B25CC91C();
  return sub_1B25CD6CC();
}

uint64_t sub_1B25793C0()
{
  uint64_t v0;
  uint64_t v1;

  if ((sub_1B25CC7C0() & 1) == 0)
  {
    type metadata accessor for EARLanguageDetector();
    sub_1B24B87C4(&qword_1EEFD84A0, v1, (uint64_t (*)(uint64_t))type metadata accessor for EARLanguageDetector, (uint64_t)&unk_1B25E0F84);
    return sub_1B25CC76C();
  }
  return v0;
}

uint64_t sub_1B257942C(uint64_t a1, uint64_t *a2)
{
  return sub_1B25792AC(*(void **)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16), *a2);
}

uint64_t sub_1B2579454()
{
  return sub_1B2579350();
}

uint64_t sub_1B2579474()
{
  uint64_t v0;

  type metadata accessor for EARLanguageDetector();
  sub_1B24B87C4(&qword_1EEFD84A0, v0, (uint64_t (*)(uint64_t))type metadata accessor for EARLanguageDetector, (uint64_t)&unk_1B25E0F84);
  return sub_1B25CC79C();
}

uint64_t sub_1B25794D0()
{
  sub_1B25CD6A8();
  type metadata accessor for EARLanguageDetector();
  sub_1B25CC91C();
  return sub_1B25CD6CC();
}

uint64_t sub_1B2579524()
{
  uint64_t v0;

  type metadata accessor for EARLanguageDetector();
  sub_1B24B87C4(&qword_1EEFD84A0, v0, (uint64_t (*)(uint64_t))type metadata accessor for EARLanguageDetector, (uint64_t)&unk_1B25E0F84);
  return sub_1B25CC790();
}

uint64_t sub_1B2579580()
{
  uint64_t v0;

  type metadata accessor for EARLanguageDetector();
  sub_1B24B87C4(&qword_1EEFD84A0, v0, (uint64_t (*)(uint64_t))type metadata accessor for EARLanguageDetector, (uint64_t)&unk_1B25E0F84);
  sub_1B24A1DB8();
  return sub_1B25CC7A8();
}

uint64_t sub_1B25795F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  type metadata accessor for EARLanguageDetector();
  sub_1B24B87C4(&qword_1EEFD84A0, v3, (uint64_t (*)(uint64_t))type metadata accessor for EARLanguageDetector, (uint64_t)&unk_1B25E0F84);
  sub_1B24A1DF4();
  result = sub_1B25CC7B4();
  if (!v1)
    *a1 = result;
  return result;
}

uint64_t sub_1B2579678(uint64_t a1, uint64_t a2)
{
  return sub_1B24B87C4(&qword_1EEFDAC58, a2, (uint64_t (*)(uint64_t))type metadata accessor for EARLanguageDetector, (uint64_t)&unk_1B25E0ED4);
}

uint64_t sub_1B25796A4(uint64_t a1, uint64_t a2)
{
  return sub_1B24B87C4(&qword_1EEFDAC60, a2, (uint64_t (*)(uint64_t))type metadata accessor for EARLanguageDetector, (uint64_t)&unk_1B25E0EFC);
}

uint64_t sub_1B25796D0(uint64_t a1, uint64_t a2)
{
  return sub_1B24B87C4(qword_1EEFDAC68, a2, (uint64_t (*)(uint64_t))type metadata accessor for EARLanguageDetector, (uint64_t)&unk_1B25E0F3C);
}

id sub_1B25796FC()
{
  id result;

  result = xpcInterface_EARLanguageDetector();
  qword_1EEFE4260 = (uint64_t)result;
  return result;
}

uint64_t sub_1B2579720(uint64_t a1, void (*a2)(__int128 *))
{
  __int128 v5;
  __int128 v6;

  if (a1)
  {
    *((_QWORD *)&v6 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED36CFD0);
    *(_QWORD *)&v5 = a1;
  }
  else
  {
    v5 = 0u;
    v6 = 0u;
  }
  swift_bridgeObjectRetain();
  a2(&v5);
  return sub_1B24B8848((uint64_t)&v5);
}

uint64_t sub_1B2579790()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B25797B4(uint64_t a1)
{
  uint64_t v1;

  return sub_1B2579720(a1, *(void (**)(__int128 *))(v1 + 16));
}

uint64_t sub_1B25797BC(uint64_t a1, uint64_t a2)
{
  void (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(void (**)(uint64_t))(a1 + 32);
  if (a2)
    v3 = sub_1B25CCBA4();
  else
    v3 = 0;
  swift_retain();
  v2(v3);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

unint64_t sub_1B2579838()
{
  unint64_t result;

  result = qword_1ED36A530;
  if (!qword_1ED36A530)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED36A530);
  }
  return result;
}

uint64_t sub_1B2579874()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

void sub_1B25798A0(void *a1, void *a2)
{
  uint64_t v2;

  sub_1B24B8700(a1, a2, *(void (**)(id *))(v2 + 16));
}

uint64_t OUTLINED_FUNCTION_6_14()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[5] + 8))(v0[6], v0[4]);
}

uint64_t OUTLINED_FUNCTION_11_11()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 72) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_13_9()
{
  return swift_task_switch();
}

void *OUTLINED_FUNCTION_23_14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = a1;
  *(_QWORD *)(v2 - 88) = v1;
  return _Block_copy((const void *)(v2 - 112));
}

uint64_t OUTLINED_FUNCTION_28_13()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return sub_1B25CC7D8();
}

uint64_t OUTLINED_FUNCTION_29_14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_30_10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_32_13()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_33_9()
{
  return swift_retain();
}

uint64_t sub_1B257996C()
{
  return swift_initClassMetadata2();
}

void sub_1B25799B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_allocObject();
  sub_1B2579CC4(a1, a2, a3);
}

uint64_t sub_1B25799F0()
{
  uint64_t v0;

  return v0;
}

void sub_1B2579A04()
{
  OUTLINED_FUNCTION_84_7();
  OUTLINED_FUNCTION_32_14();
}

uint64_t sub_1B2579B64(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  OUTLINED_FUNCTION_17();
  return swift_task_switch();
}

uint64_t sub_1B2579B88()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  OUTLINED_FUNCTION_49_10();
  OUTLINED_FUNCTION_49_10();
  OUTLINED_FUNCTION_49_10();
  sub_1B25CD108();
  swift_getTupleTypeMetadata3();
  OUTLINED_FUNCTION_17_13();
  *v1 = v0;
  v1[1] = sub_1B2579C74;
  return sub_1B25CD5DC();
}

uint64_t sub_1B2579C74()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_105();
  v2 = *v1;
  *v3 = v2;
  *(_QWORD *)(v4 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
    return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v2 + 8));
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

void sub_1B2579CC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v24 = a3;
  v23 = a2;
  v25 = a1;
  v4 = *(_QWORD **)v3;
  v5 = *(_QWORD *)(*(_QWORD *)v3 + 96);
  v19 = v5;
  v22 = sub_1B25CD108();
  v16[0] = *(_QWORD *)(v22 - 8);
  v7 = MEMORY[0x1E0C80A78](v22, v6);
  v21 = (char *)v16 - v8;
  v9 = v4[11];
  v16[1] = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v7, v10);
  v12 = v4[10];
  v20 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v11, v13);
  v14 = v4[13];
  v17 = v4[14];
  v18 = v14;
  v15 = v4[15];
  v26 = v12;
  v27 = v9;
  v28 = v5;
  v29 = v14;
  v30 = v17;
  v31 = v15;
  OUTLINED_FUNCTION_32_14();
}

void sub_1B2579DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;

  *(_QWORD *)(v16 - 224) = a1;
  MEMORY[0x1E0C80A78](a1, a2);
  v18 = (char *)&a9 - v17;
  OUTLINED_FUNCTION_311(v9, *(_QWORD *)(v16 - 144), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16));
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v11 + 16))(v15, *(_QWORD *)(v16 - 168), v12);
  v19 = *(_QWORD *)(v16 - 184);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v10 + 16))(v19, *(_QWORD *)(v16 - 160), *(_QWORD *)(v16 - 176));
  sub_1B253EFA8(v9, v15, v19, v13, v12, (uint64_t)v18);
}

uint64_t sub_1B2579E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v11 = sub_1B250B1E4(v6, *(_QWORD *)(v10 - 224), a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 240) + 8))(v9, v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 232) + 8))(v5, v7);
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v10 - 192) + 8))(*(_QWORD *)(v10 - 144), v8);
  result = *(_QWORD *)(v10 - 152);
  *(_QWORD *)(result + 16) = v11;
  return result;
}

void sub_1B2579EDC()
{
  type metadata accessor for ZipStateMachine();
}

uint64_t sub_1B2579F18(uint64_t result, uint64_t a2)
{
  _QWORD *v2;

  *v2 = result;
  v2[1] = a2;
  return result;
}

uint64_t sub_1B2579F34(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = a2;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  sub_1B25CD108();
  swift_getTupleTypeMetadata3();
  sub_1B25CD108();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED36D060);
  v3 = sub_1B25CD6D8();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1B257A05C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EEFDAD08 + dword_1EEFDAD08);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_1B257A0CC;
  OUTLINED_FUNCTION_17();
  return v8(v2, v3, v4, v5, v6);
}

uint64_t sub_1B257A0CC()
{
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_8();
}

uint64_t sub_1B257A100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = MEMORY[0x1B5E261DC]("di", v3);
  sub_1B250AFEC(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  OUTLINED_FUNCTION_36();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1B257A18C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t TupleTypeMetadata3;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v14 = a2;
  v15 = a1;
  v2 = *(_QWORD **)a2;
  v13 = *(_QWORD *)(*(_QWORD *)a2 + 104);
  v3 = v2[10];
  swift_getAssociatedTypeWitness();
  v4 = v2[14];
  v5 = v2[11];
  swift_getAssociatedTypeWitness();
  v6 = v2[15];
  v7 = v2[12];
  swift_getAssociatedTypeWitness();
  sub_1B25CD108();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  sub_1B25CD108();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED36D060);
  v11 = sub_1B25CD6D8();
  MEMORY[0x1E0C80A78](v11, v8);
  v10 = (char *)&v10 - v9;
  v16 = v3;
  v17 = v5;
  v18 = v7;
  v19 = v13;
  v20 = v4;
  v21 = v6;
  type metadata accessor for ZipStateMachine.NextAction();
}

void sub_1B257A4E4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[22];

  v20[12] = a4;
  v20[21] = a2;
  v20[10] = a1;
  v20[7] = a3;
  v4 = *(_QWORD **)a3;
  v5 = *(_QWORD *)(*(_QWORD *)a3 + 96);
  v6 = sub_1B25CD108();
  v20[5] = *(_QWORD *)(v6 - 8);
  v20[6] = v6;
  v8 = MEMORY[0x1E0C80A78](v6, v7);
  v20[4] = (char *)v20 - v9;
  v10 = v4[11];
  v20[9] = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v8, v11);
  v20[3] = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v4[10];
  v20[8] = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v12, v15);
  v20[11] = (char *)v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = v4[13];
  v18 = v4[14];
  v19 = v4[15];
  v20[14] = v14;
  v20[15] = v10;
  v20[16] = v5;
  v20[17] = v17;
  v20[18] = v18;
  v20[19] = v19;
  type metadata accessor for ZipStateMachine.NextAction();
}

void sub_1B257A5E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = MEMORY[0x1E0C80A78](a1, a2);
  MEMORY[0x1E0C80A78](v9, v10);
  *(_QWORD *)(v8 - 128) = v2;
  *(_QWORD *)(v8 - 120) = v6;
  *(_QWORD *)(v8 - 112) = v3;
  *(_QWORD *)(v8 - 104) = v4;
  *(_QWORD *)(v8 - 96) = v5;
  *(_QWORD *)(v8 - 88) = v7;
  type metadata accessor for ZipStateMachine();
}

void sub_1B257A654()
{
  sub_1B2542DB4();
}

uint64_t sub_1B257A664()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t TupleTypeMetadata3;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v5, v4, v2);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v10 = *(_QWORD *)(v7 - 192);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    v12 = v5 + *(int *)(TupleTypeMetadata3 + 48);
    *(_QWORD *)(v7 - 232) = v5 + *(int *)(TupleTypeMetadata3 + 64);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 176) + 32))(*(_QWORD *)(v7 - 152), v5, v0);
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 168) + 32);
    *(_QWORD *)(v7 - 224) = v3;
    v14 = *(_QWORD *)(v7 - 216);
    v13(v14, v12, v6);
    v15 = *(_QWORD *)(v7 - 208);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v7 - 200) + 32))(v15, *(_QWORD *)(v7 - 232), v10);
    sub_1B257A7E8(v1, *(_QWORD *)(v7 - 152), v14, v15, *(_QWORD *)(v7 - 72));
  }
  if (EnumCaseMultiPayload == 1)
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, v2);
  v9 = *(_QWORD *)(v7 - 144);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v9, v4, v2);
  return __swift_storeEnumTagSinglePayload(v9, 0, 1, v2);
}

void sub_1B257A7E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v51 = a1;
  v52 = a5;
  v47 = a3;
  v48 = a4;
  v46 = a2;
  v6 = *(_QWORD **)v5;
  v56 = *(_QWORD *)(*(_QWORD *)v5 + 96);
  v7 = sub_1B25CD108();
  v54 = *(_QWORD *)(v7 - 8);
  v55 = v7;
  v9 = MEMORY[0x1E0C80A78](v7, v8);
  v11 = (char *)&v40 - v10;
  v45 = (char *)&v40 - v10;
  v12 = v6[11];
  v53 = *(_QWORD *)(v12 - 8);
  v41 = v12;
  v13 = *(_QWORD *)(v53 + 64);
  v15 = MEMORY[0x1E0C80A78](v9, v14);
  v44 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = v6[10];
  v16 = *(_QWORD *)(v42 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x1E0C80A78](v15, v18);
  v43 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEFD71C0);
  MEMORY[0x1E0C80A78](v19, v20);
  v22 = (char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = v22;
  v23 = sub_1B25CCCDC();
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 1, 1, v23);
  v24 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v46, v42);
  v25 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))((char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v47, v12);
  v26 = v54;
  (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v11, v48, v55);
  v27 = (*(unsigned __int8 *)(v16 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v28 = (v17 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = (*(unsigned __int8 *)(v25 + 80) + v28 + 8) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  v30 = (v13 + *(unsigned __int8 *)(v26 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  v31 = (char *)swift_allocObject();
  *((_QWORD *)v31 + 2) = 0;
  *((_QWORD *)v31 + 3) = 0;
  v32 = v24;
  *((_QWORD *)v31 + 4) = v24;
  v33 = v41;
  v34 = v56;
  *((_QWORD *)v31 + 5) = v41;
  *((_QWORD *)v31 + 6) = v34;
  v35 = v6[13];
  *((_QWORD *)v31 + 7) = v35;
  v36 = v6[14];
  *((_QWORD *)v31 + 8) = v36;
  v37 = v6[15];
  *((_QWORD *)v31 + 9) = v37;
  v38 = &v31[v27];
  v39 = v32;
  (*(void (**)(char *, char *))(v16 + 32))(v38, v43);
  *(_QWORD *)&v31[v28] = v50;
  (*(void (**)(char *, char *, uint64_t))(v53 + 32))(&v31[v29], v44, v33);
  (*(void (**)(char *, char *, uint64_t))(v54 + 32))(&v31[v30], v45, v55);
  swift_retain();
  sub_1B24C52C0((uint64_t)v49, (uint64_t)&unk_1EEFDAD18, (uint64_t)v31);
  v57 = v39;
  v58 = v33;
  v59 = v56;
  v60 = v35;
  v61 = v36;
  v62 = v37;
  type metadata accessor for ZipStateMachine();
}

void sub_1B257AA84()
{
  sub_1B253F6CC();
}

uint64_t sub_1B257AA94()
{
  return swift_release();
}

uint64_t sub_1B257AABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(*(_QWORD *)(*(_QWORD *)(a2 + 64) + 40), a1);
  return swift_continuation_resume();
}

uint64_t sub_1B257AAF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[11] = a4;
  v5[12] = a5;
  v5[10] = a1;
  if (a2)
  {
    swift_getObjectType();
    sub_1B25CCC40();
  }
  return swift_task_switch();
}

uint64_t sub_1B257AB5C()
{
  _QWORD *v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = (void (*)(uint64_t))v0[11];
  v0[7] = v0[10];
  v0[2] = v0;
  v0[3] = sub_1B257ABB8;
  v2 = swift_continuation_init();
  v1(v2);
  return swift_continuation_await();
}

uint64_t sub_1B257ABB8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_105();
  return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(*(_QWORD *)v0 + 8));
}

void sub_1B257ABE8()
{
  uint64_t v0;
  uint64_t v1;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  sub_1B25CD108();
  swift_getTupleTypeMetadata3();
  sub_1B25CD108();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED36D060);
  v1 = sub_1B25CD6D8();
  MEMORY[0x1E0C80A78](v1, v0);
  type metadata accessor for ZipStateMachine();
}

uint64_t sub_1B257AFFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1B257B01C()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  _QWORD *v3;

  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  v2 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v1 + 32) = v2;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v3;
  *v3 = v0;
  v3[1] = sub_1B257B0B4;
  return sub_1B25CD4E0();
}

uint64_t sub_1B257B0B4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_36();
  return OUTLINED_FUNCTION_21(*(uint64_t (**)(void))(v0 + 8));
}

