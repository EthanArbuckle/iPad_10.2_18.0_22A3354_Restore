@implementation SFPasswordSavingServiceViewController

+ (id)_exportedInterface
{
  return (id)objc_msgSend(MEMORY[0x1E0CB3B50], "interfaceWithProtocol:", &unk_1EE77EEF8);
}

- (SFPasswordSavingServiceViewController)initWithNibName:(id)a3 bundle:(id)a4
{
  SFPasswordSavingServiceViewController *v4;
  void *v5;
  uint64_t v6;
  WBSSavedAccountStore *savedAccountStore;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  WBSAutoFillQuirksManager *autoFillQuirksManager;
  SFPasswordSavingServiceViewController *v15;
  objc_super v17;

  v17.receiver = self;
  v17.super_class = (Class)SFPasswordSavingServiceViewController;
  v4 = -[SFPasswordSavingServiceViewController initWithNibName:bundle:](&v17, sel_initWithNibName_bundle_, a3, a4);
  if (v4)
  {
    objc_msgSend(MEMORY[0x1E0C925F8], "sharedManager");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "addChangeObserver:", v4);

    objc_msgSend(MEMORY[0x1E0D8AC08], "sharedStore");
    v6 = objc_claimAutoreleasedReturnValue();
    savedAccountStore = v4->_savedAccountStore;
    v4->_savedAccountStore = (WBSSavedAccountStore *)v6;

    v8 = objc_alloc(MEMORY[0x1E0D8A790]);
    objc_msgSend(MEMORY[0x1E0CB34D0], "safari_safariCoreBundle");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "URLForResource:withExtension:", CFSTR("WBSAutoFillQuirks"), CFSTR("plist"));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "safari_autoFillQuirksDownloadDirectoryURL");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_msgSend(v8, "initWithBuiltInQuirksURL:downloadsDirectoryURL:resourceName:resourceVersion:updateDateDefaultsKey:updateInterval:", v10, v12, CFSTR("AutoFillQuirks"), CFSTR("1"), *MEMORY[0x1E0D8B378], 0.0);
    autoFillQuirksManager = v4->_autoFillQuirksManager;
    v4->_autoFillQuirksManager = (WBSAutoFillQuirksManager *)v13;

    -[WBSAutoFillQuirksManager beginLoadingQuirksFromDisk](v4->_autoFillQuirksManager, "beginLoadingQuirksFromDisk");
    v15 = v4;
  }

  return v4;
}

- (void)credentialsSubmittedForWebsiteURL:(id)a3 user:(id)a4 password:(id)a5 passwordIsAutoGenerated:(BOOL)a6 completionHandler:(id)a7
{
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  NSString *v18;
  NSString *tokenForShowingPrompt;
  void *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  _QWORD v25[5];
  id v26;
  id v27;
  id v28;
  BOOL v29;

  v12 = a4;
  v13 = a5;
  v14 = a7;
  v15 = (void *)MEMORY[0x1E0CB3A28];
  v16 = a3;
  objc_msgSend(v15, "UUID");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "UUIDString");
  v18 = (NSString *)objc_claimAutoreleasedReturnValue();
  tokenForShowingPrompt = self->_tokenForShowingPrompt;
  self->_tokenForShowingPrompt = v18;

  v20 = (void *)MEMORY[0x1E0D8A060];
  -[SFPasswordServiceViewController applicationIdentifier](self, "applicationIdentifier");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v25[0] = MEMORY[0x1E0C809B0];
  v25[1] = 3221225472;
  v25[2] = __131__SFPasswordSavingServiceViewController_credentialsSubmittedForWebsiteURL_user_password_passwordIsAutoGenerated_completionHandler___block_invoke;
  v25[3] = &unk_1E4AC5B88;
  v25[4] = self;
  v26 = v12;
  v29 = a6;
  v27 = v13;
  v28 = v14;
  v22 = v14;
  v23 = v13;
  v24 = v12;
  objc_msgSend(v20, "getAllowedActionForAppCredentialsWithAppID:websiteURL:user:password:completionHandler:", v21, v16, v24, v23, v25);

}

void __131__SFPasswordSavingServiceViewController_credentialsSubmittedForWebsiteURL_user_password_passwordIsAutoGenerated_completionHandler___block_invoke(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  NSObject *v20;
  NSObject *v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  NSObject *v30;
  _QWORD v31[5];
  id v32;
  id v33;
  uint8_t buf[4];
  void *v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v10 = a3;
  v11 = a4;
  v12 = a5;
  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 976) = a2;
  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 992), a3);
  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 984), a4);
  objc_msgSend(MEMORY[0x1E0C92C60], "safari_credentialWithUser:password:persistence:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), 3);
  v13 = objc_claimAutoreleasedReturnValue();
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(void **)(v14 + 1000);
  *(_QWORD *)(v14 + 1000) = v13;

  if (!*(_BYTE *)(a1 + 64))
  {
    if (*(_QWORD *)(*(_QWORD *)(a1 + 32) + 976) != 3)
    {
      (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
      objc_msgSend(MEMORY[0x1E0C925F8], "sharedManager");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v22, "removeChangeObserver:", *(_QWORD *)(a1 + 32));

      goto LABEL_23;
    }
    v16 = objc_alloc(MEMORY[0x1E0CA5870]);
    objc_msgSend(*(id *)(a1 + 32), "_hostApplicationBundleIdentifier");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v33 = 0;
    v18 = (void *)objc_msgSend(v16, "initWithBundleIdentifier:allowPlaceholder:error:", v17, 0, &v33);
    v19 = v33;

    if (v19)
    {
      v20 = WBS_LOG_CHANNEL_PREFIXAccountAuthenticationModificationExtension();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
        __131__SFPasswordSavingServiceViewController_credentialsSubmittedForWebsiteURL_user_password_passwordIsAutoGenerated_completionHandler___block_invoke_cold_1(v20, v19);
    }
    else if ((objc_msgSend(v18, "shouldShowSecurityPromptsOnSignIn") & 1) != 0)
    {
      v23 = objc_alloc(MEMORY[0x1E0D8AAB8]);
      objc_msgSend(MEMORY[0x1E0D8AC08], "sharedStore");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      v25 = (void *)objc_msgSend(v23, "initWithSavedAccountStore:autoFillQuirksManager:userDefaults:highLevelDomainsProvider:", v24, *(_QWORD *)(*(_QWORD *)(a1 + 32) + 1024), 0, 0);

      v31[0] = MEMORY[0x1E0C809B0];
      v31[1] = 3221225472;
      v31[2] = __131__SFPasswordSavingServiceViewController_credentialsSubmittedForWebsiteURL_user_password_passwordIsAutoGenerated_completionHandler___block_invoke_65;
      v31[3] = &unk_1E4AC5B60;
      v31[4] = *(_QWORD *)(a1 + 32);
      v32 = *(id *)(a1 + 56);
      objc_msgSend(v25, "getWarningForSavedAccount:completionHandler:", v12, v31);

LABEL_22:
      goto LABEL_23;
    }
    if (v18 && (objc_msgSend(v18, "shouldShowSecurityPromptsOnSignIn") & 1) == 0)
    {
      v26 = (void *)MEMORY[0x1E0CA5860];
      objc_msgSend(*(id *)(a1 + 32), "_hostApplicationBundleIdentifier");
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v26, "applicationProxyForIdentifier:", v27);
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v28, "localizedNameForContext:", 0);
      v29 = (void *)objc_claimAutoreleasedReturnValue();

      v30 = WBS_LOG_CHANNEL_PREFIXAccountAuthenticationModificationExtension();
      if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v35 = v29;
        _os_log_impl(&dword_1A3B2D000, v30, OS_LOG_TYPE_INFO, "%@ has opted out of security recommendation prompts on sign in.", buf, 0xCu);
      }

    }
    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
    objc_msgSend(*(id *)(a1 + 32), "_dismiss");
    goto LABEL_22;
  }
  if (a2 == 2)
  {
    objc_msgSend(*(id *)(a1 + 32), "_updateCredential:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 1000));
  }
  else if (a2 == 1)
  {
    objc_msgSend(*(id *)(a1 + 32), "_saveCredential:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 1000));
  }
  else
  {
    v21 = WBS_LOG_CHANNEL_PREFIXAppPasswordAutoFill();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
      __131__SFPasswordSavingServiceViewController_credentialsSubmittedForWebsiteURL_user_password_passwordIsAutoGenerated_completionHandler___block_invoke_cold_2();
  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
  objc_msgSend(*(id *)(a1 + 32), "_dismiss");
LABEL_23:

}

void __131__SFPasswordSavingServiceViewController_credentialsSubmittedForWebsiteURL_user_password_passwordIsAutoGenerated_completionHandler___block_invoke_65(uint64_t a1, void *a2)
{
  uint64_t v4;
  id v5;

  v5 = a2;
  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 1032), a2);
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 1067) = (objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1032), "issueTypes") & 0xC) != 0;
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 1066) = (objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1032), "issueTypes") & 2) != 0;
  v4 = *(_QWORD *)(a1 + 32);
  if (*(_BYTE *)(v4 + 1067) || *(_BYTE *)(v4 + 1066))
  {
    objc_msgSend((id)v4, "_checkIfWarningStoreAlreadyContainsCredentialWithCompletionHandler:", *(_QWORD *)(a1 + 40));
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), 0, *(_QWORD *)(v4 + 1008));
    objc_msgSend(*(id *)(a1 + 32), "_dismiss");
  }

}

- (void)_checkIfWarningStoreAlreadyContainsCredentialWithCompletionHandler:(id)a3
{
  void (**v4)(id, _QWORD, NSString *);
  WBSSavedAccountStore *savedAccountStore;
  NSURLCredential *credential;
  void *v7;
  void *v8;
  WBSSavedAccountStore *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  _QWORD v15[4];
  void (**v16)(id, _QWORD, NSString *);
  id v17;
  id location;
  _QWORD v19[2];

  v19[1] = *MEMORY[0x1E0C80C00];
  v4 = (void (**)(id, _QWORD, NSString *))a3;
  savedAccountStore = self->_savedAccountStore;
  credential = self->_credential;
  -[NSArray firstObject](self->_protectionSpacesToUpdate, "firstObject");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  -[WBSSavedAccountStore persistentIdentifierForCredential:protectionSpace:](savedAccountStore, "persistentIdentifierForCredential:protectionSpace:", credential, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    v9 = self->_savedAccountStore;
    v19[0] = v8;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v19, 1);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    -[WBSSavedAccountStore savedAccountsForPersistentIdentifiers:](v9, "savedAccountsForPersistentIdentifiers:", v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "firstObject");
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    if ((objc_msgSend(v12, "credentialTypes") & 2) != 0)
    {
      v4[2](v4, 0, self->_tokenForShowingPrompt);
      -[SFPasswordSavingServiceViewController _dismiss](self, "_dismiss");
    }
    else
    {
      objc_initWeak(&location, self);
      objc_msgSend(MEMORY[0x1E0D8AAC0], "sharedStore");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v15[0] = MEMORY[0x1E0C809B0];
      v15[1] = 3221225472;
      v15[2] = __108__SFPasswordSavingServiceViewController__checkIfWarningStoreAlreadyContainsCredentialWithCompletionHandler___block_invoke;
      v15[3] = &unk_1E4AC1E40;
      objc_copyWeak(&v17, &location);
      v16 = v4;
      objc_msgSend(v13, "getContainsPersistentIdentifier:completionHandler:", v8, v15);

      objc_destroyWeak(&v17);
      objc_destroyWeak(&location);
    }

  }
  else
  {
    v14 = WBS_LOG_CHANNEL_PREFIXAccountAuthenticationModificationExtension();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      -[SFPasswordSavingServiceViewController _checkIfWarningStoreAlreadyContainsCredentialWithCompletionHandler:].cold.1();
    v4[2](v4, 0, self->_tokenForShowingPrompt);
    -[SFPasswordSavingServiceViewController _dismiss](self, "_dismiss");
  }

}

void __108__SFPasswordSavingServiceViewController__checkIfWarningStoreAlreadyContainsCredentialWithCompletionHandler___block_invoke(uint64_t a1, int a2)
{
  _QWORD *WeakRetained;
  uint64_t v5;
  id v6;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v5 = *(_QWORD *)(a1 + 32);
  v6 = WeakRetained;
  if (WeakRetained)
  {
    if (a2)
    {
      (*(void (**)(uint64_t, _QWORD, _QWORD))(v5 + 16))(v5, 0, WeakRetained[126]);
      objc_msgSend(v6, "_dismiss");
    }
    else
    {
      objc_msgSend(WeakRetained, "_configureSecurityPromptActionsWithCompletionHandler:", v5);
    }
  }
  else
  {
    (*(void (**)(uint64_t, _QWORD, _QWORD))(v5 + 16))(v5, 0, 0);
  }

}

- (void)_configureSecurityPromptActionsWithCompletionHandler:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  _QWORD v10[4];
  id v11;
  id v12;
  id location;

  v4 = a3;
  objc_initWeak(&location, self);
  objc_msgSend(MEMORY[0x1E0C925F8], "sharedManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[NSArray firstObject](self->_protectionSpacesToUpdate, "firstObject");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "host");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "safari_highLevelDomainFromHost");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 3221225472;
  v10[2] = __94__SFPasswordSavingServiceViewController__configureSecurityPromptActionsWithCompletionHandler___block_invoke;
  v10[3] = &unk_1E4AC5BD8;
  objc_copyWeak(&v12, &location);
  v9 = v4;
  v11 = v9;
  objc_msgSend(v5, "extensionForDomain:completionHandler:", v8, v10);

  objc_destroyWeak(&v12);
  objc_destroyWeak(&location);

}

void __94__SFPasswordSavingServiceViewController__configureSecurityPromptActionsWithCompletionHandler___block_invoke(uint64_t a1, void *a2)
{
  id v4;
  id WeakRetained;
  _BYTE *v6;
  void *v7;
  void *v8;
  void (*v9)(void);
  void *v10;
  int v11;
  void *v12;
  char v13;
  char v14;
  id v15;
  void *v16;
  _QWORD v17[4];
  id v18;
  id v19;

  v4 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v6 = WeakRetained;
  if (!WeakRetained)
  {
    v9 = *(void (**)(void))(*(_QWORD *)(a1 + 32) + 16);
LABEL_12:
    v9();
    goto LABEL_13;
  }
  if (!v4)
  {
LABEL_11:
    v9 = *(void (**)(void))(*(_QWORD *)(a1 + 32) + 16);
    goto LABEL_12;
  }
  objc_storeStrong((id *)WeakRetained + 130, a2);
  objc_msgSend(v4, "attributes");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v7, "safari_BOOLForKey:", *MEMORY[0x1E0D8A078]) & 1) != 0)
  {
    objc_msgSend(MEMORY[0x1E0D8A9E0], "sharedMonitor");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v6[1064] = objc_msgSend(v8, "isKeychainSyncEnabled");

  }
  else
  {
    v6[1064] = 0;
  }

  objc_msgSend(MEMORY[0x1E0C99EA0], "_pm_defaults");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend(v10, "_sf_passwordManagerIsInDemoMode");

  objc_msgSend(v4, "attributes");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = objc_msgSend(v12, "safari_BOOLForKey:", *MEMORY[0x1E0D8A080]);
  v14 = v13;
  if (v11)
  {
    v6[1065] = v13;

    goto LABEL_11;
  }

  if ((v14 & 1) == 0)
    goto LABEL_11;
  v15 = objc_alloc_init(MEMORY[0x1E0D00158]);
  objc_msgSend(v6, "_hostApplicationBundleIdentifier");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 3221225472;
  v17[2] = __94__SFPasswordSavingServiceViewController__configureSecurityPromptActionsWithCompletionHandler___block_invoke_2;
  v17[3] = &unk_1E4AC5BB0;
  objc_copyWeak(&v19, (id *)(a1 + 40));
  v18 = *(id *)(a1 + 32);
  objc_msgSend(v15, "getCredentialStateForClientID:completion:", v16, v17);

  objc_destroyWeak(&v19);
LABEL_13:

}

void __94__SFPasswordSavingServiceViewController__configureSecurityPromptActionsWithCompletionHandler___block_invoke_2(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *WeakRetained;
  NSObject *v7;
  void (*v8)(void);

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    if (a3)
    {
      v7 = WBS_LOG_CHANNEL_PREFIXAccountAuthenticationModificationExtension();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
        __94__SFPasswordSavingServiceViewController__configureSecurityPromptActionsWithCompletionHandler___block_invoke_2_cold_1((uint64_t)WeakRetained, v7);
    }
    WeakRetained[1065] = a2 == 2;
    v8 = *(void (**)(void))(*(_QWORD *)(a1 + 32) + 16);
  }
  else
  {
    v8 = *(void (**)(void))(*(_QWORD *)(a1 + 32) + 16);
  }
  v8();

}

- (void)_saveCredential:(id)a3
{
  NSString *domainForSavePasswordAction;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;

  domainForSavePasswordAction = self->_domainForSavePasswordAction;
  v4 = a3;
  -[NSString safari_bestURLForUserTypedString](domainForSavePasswordAction, "safari_bestURLForUserTypedString");
  v11 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C92C70], "safari_HTMLFormProtectionSpaceForURL:", v11);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D8AC08], "sharedStore");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "user");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "password");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v5, "host");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = (id)objc_msgSend(v6, "saveUser:password:forProtectionSpace:highLevelDomain:groupID:", v7, v8, v5, v9, *MEMORY[0x1E0D8B1A0]);

}

- (void)_updateCredential:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  NSArray *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  objc_msgSend(v4, "user");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "password");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v7 = self->_protectionSpacesToUpdate;
  v8 = -[NSArray countByEnumeratingWithState:objects:count:](v7, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v15;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v15 != v10)
          objc_enumerationMutation(v7);
        v12 = *(_QWORD *)(*((_QWORD *)&v14 + 1) + 8 * v11);
        objc_msgSend(MEMORY[0x1E0D8AC08], "sharedStore", (_QWORD)v14);
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "updateAllSavedAccountsWithPasswordsWithUser:protectionSpace:withNewPassword:", v5, v12, v6);

        ++v11;
      }
      while (v9 != v11);
      v9 = -[NSArray countByEnumeratingWithState:objects:count:](v7, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    }
    while (v9);
  }

}

- (void)_removeCredential:(id)a3
{
  NSString *domainForSavePasswordAction;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  int *v16;
  uint64_t v17;
  SFPasswordSavingServiceViewController *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  id v23;
  void *v24;
  int v25;
  uint64_t v26;
  id obj;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _BYTE v32[128];
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v23 = a3;
  domainForSavePasswordAction = self->_domainForSavePasswordAction;
  if (domainForSavePasswordAction)
  {
    -[NSString safari_simplifiedUserVisibleURLString](domainForSavePasswordAction, "safari_simplifiedUserVisibleURLString");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    -[NSArray firstObject](self->_protectionSpacesToUpdate, "firstObject");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "safari_addressString");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "safari_simplifiedUserVisibleURLString");
    v24 = (void *)objc_claimAutoreleasedReturnValue();

  }
  v30 = 0u;
  v31 = 0u;
  v28 = 0u;
  v29 = 0u;
  -[WBSSavedAccountStore savedAccountsWithPasswords](self->_savedAccountStore, "savedAccountsWithPasswords", 1056);
  obj = (id)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v28, v32, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v29;
    v10 = &OBJC_IVAR____SFLinkPreviewHeader__hairline;
    do
    {
      v11 = 0;
      v26 = v8;
      do
      {
        if (*(_QWORD *)v29 != v9)
          objc_enumerationMutation(obj);
        v12 = *(void **)(*((_QWORD *)&v28 + 1) + 8 * v11);
        v13 = v10[378];
        objc_msgSend(*(id *)((char *)&self->super.super.super.super.isa + v13), "user");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "user");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        if (!objc_msgSend(v14, "isEqualToString:", v15))
          goto LABEL_14;
        v16 = v10;
        v17 = v9;
        v18 = self;
        objc_msgSend(*(id *)((char *)&self->super.super.super.super.isa + v13), "password");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "password");
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        if (!objc_msgSend(v19, "isEqualToString:", v20))
        {

          v9 = v17;
          self = v18;
          v10 = v16;
          v8 = v26;
LABEL_14:

          goto LABEL_15;
        }
        objc_msgSend(v12, "highLevelDomain");
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        v25 = objc_msgSend(v24, "containsString:", v21);

        v9 = v17;
        self = v18;
        v10 = v16;
        v8 = v26;
        if (v25)
        {
          objc_msgSend(*(id *)((char *)&v18->super.super.super.super.isa + v22), "removeCredentialTypes:forSavedAccount:", 1, v12);
          goto LABEL_17;
        }
LABEL_15:
        ++v11;
      }
      while (v8 != v11);
      v8 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v28, v32, 16);
    }
    while (v8);
  }
LABEL_17:

}

- (void)showPromptWithToken:(id)a3 style:(int64_t)a4
{
  int64_t action;
  int v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  void *v14;
  int v15;
  uint64_t v16;
  void *v17;
  unint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  UIAlertController *v26;
  UIAlertController *prompt;
  UIAlertController *v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  void *v33;
  _QWORD v34[5];
  _QWORD v35[5];
  _QWORD v36[5];

  if (!objc_msgSend(a3, "isEqualToString:", self->_tokenForShowingPrompt))
    goto LABEL_4;
  action = self->_action;
  if (action == 3)
  {
    -[SFPasswordSavingServiceViewController _showAccountModificationPrompt](self, "_showAccountModificationPrompt");
    return;
  }
  if (!action)
  {
LABEL_4:
    -[SFPasswordSavingServiceViewController _dismiss](self, "_dismiss");
    return;
  }
  v7 = objc_msgSend(MEMORY[0x1E0DD9910], "keychainSyncEnabled");
  v8 = MEMORY[0x1E0C809B0];
  if (self->_action != 1)
  {
    v9 = (void *)MEMORY[0x1E0CA5860];
    -[SFPasswordSavingServiceViewController _hostApplicationBundleIdentifier](self, "_hostApplicationBundleIdentifier");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "applicationProxyForIdentifier:", v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "localizedNameForContext:", 0);
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    if (!objc_msgSend(v12, "length"))
    {
      v13 = WBS_LOG_CHANNEL_PREFIXAppPasswordAutoFill();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
        __127__SFPasswordPickerServiceViewController__authenticateAndSetPresentCredentialsHandlerWithSavedAccountContext_completionHandler___block_invoke_2_cold_3();
    }
    -[NSURLCredential user](self->_credential, "user");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = objc_msgSend(MEMORY[0x1E0D8A8F8], "isPasswordManagerAppEnabledAndInstalled");
    v16 = objc_msgSend(v14, "length");
    v17 = (void *)MEMORY[0x1E0CB3940];
    if (v15)
    {
      v18 = 0x1E0DC3000;
      if (v16)
      {
        _WBSLocalizedString();
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v17, "localizedStringWithFormat:", v19, v14, v12);
      }
      else
      {
        _WBSLocalizedString();
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v17, "localizedStringWithFormat:", v19, v12, v32);
      }
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      goto LABEL_23;
    }
    if (v7)
    {
      if (v16)
        goto LABEL_18;
    }
    else if (v16)
    {
LABEL_18:
      _WBSLocalizedString();
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v17, "localizedStringWithFormat:", v19, v14, v12);
LABEL_22:
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = 0x1E0DC3000uLL;
LABEL_23:

      v24 = *(void **)(v18 + 1096);
      _WBSLocalizedString();
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      v35[0] = v8;
      v35[1] = 3221225472;
      v35[2] = __67__SFPasswordSavingServiceViewController_showPromptWithToken_style___block_invoke_112;
      v35[3] = &unk_1E4AC0010;
      v35[4] = self;
      objc_msgSend(v24, "actionWithTitle:style:handler:", v25, 0, v35);
      v23 = (void *)objc_claimAutoreleasedReturnValue();

      v20 = 0;
      goto LABEL_24;
    }
    _WBSLocalizedString();
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "localizedStringWithFormat:", v19, v12, v32);
    goto LABEL_22;
  }
  objc_msgSend(MEMORY[0x1E0D8A8F8], "isPasswordManagerAppEnabledAndInstalled");
  _WBSLocalizedString();
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  _WBSLocalizedString();
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v21 = (void *)MEMORY[0x1E0DC3448];
  _WBSLocalizedString();
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v36[0] = v8;
  v36[1] = 3221225472;
  v36[2] = __67__SFPasswordSavingServiceViewController_showPromptWithToken_style___block_invoke;
  v36[3] = &unk_1E4AC0010;
  v36[4] = self;
  objc_msgSend(v21, "actionWithTitle:style:handler:", v22, 0, v36);
  v23 = (void *)objc_claimAutoreleasedReturnValue();

LABEL_24:
  objc_msgSend(MEMORY[0x1E0DC3450], "alertControllerWithTitle:message:imageNamed:preferredStyle:", v33, v20, CFSTR("alert-passwords"), a4);
  v26 = (UIAlertController *)objc_claimAutoreleasedReturnValue();
  prompt = self->_prompt;
  self->_prompt = v26;

  -[UIAlertController addAction:](self->_prompt, "addAction:", v23);
  v28 = self->_prompt;
  v29 = (void *)MEMORY[0x1E0DC3448];
  _WBSLocalizedString();
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  v34[0] = v8;
  v34[1] = 3221225472;
  v34[2] = __67__SFPasswordSavingServiceViewController_showPromptWithToken_style___block_invoke_2;
  v34[3] = &unk_1E4AC0010;
  v34[4] = self;
  objc_msgSend(v29, "actionWithTitle:style:handler:", v30, 1, v34);
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  -[UIAlertController addAction:](v28, "addAction:", v31);

  -[SFPasswordSavingServiceViewController presentViewController:animated:completion:](self, "presentViewController:animated:completion:", self->_prompt, 1, 0);
}

uint64_t __67__SFPasswordSavingServiceViewController_showPromptWithToken_style___block_invoke(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "_saveCredential:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 1000));
  return objc_msgSend(*(id *)(a1 + 32), "_dismiss");
}

uint64_t __67__SFPasswordSavingServiceViewController_showPromptWithToken_style___block_invoke_112(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "_updateCredential:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 1000));
  return objc_msgSend(*(id *)(a1 + 32), "_dismiss");
}

uint64_t __67__SFPasswordSavingServiceViewController_showPromptWithToken_style___block_invoke_2(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_dismiss");
}

- (void)_dismiss
{
  NSString *tokenForShowingPrompt;
  NSString *domainForSavePasswordAction;
  NSArray *protectionSpacesToUpdate;
  void *v6;
  id v7;

  tokenForShowingPrompt = self->_tokenForShowingPrompt;
  self->_tokenForShowingPrompt = 0;

  self->_action = 0;
  domainForSavePasswordAction = self->_domainForSavePasswordAction;
  self->_domainForSavePasswordAction = 0;

  protectionSpacesToUpdate = self->_protectionSpacesToUpdate;
  self->_protectionSpacesToUpdate = 0;

  -[SFPasswordSavingServiceViewController _remoteViewControllerProxy](self, "_remoteViewControllerProxy");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "willDismissServiceViewController");

  objc_msgSend(MEMORY[0x1E0C925F8], "sharedManager");
  v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "removeChangeObserver:", self);

}

- (void)_showAccountModificationPrompt
{
  WBSSavedAccountStore *savedAccountStore;
  NSURLCredential *credential;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  UIAlertController *v11;
  UIAlertController *prompt;
  UIAlertController *v13;
  void *v14;
  void *v15;
  void *v16;
  _QWORD v17[5];

  savedAccountStore = self->_savedAccountStore;
  credential = self->_credential;
  -[NSArray firstObject](self->_protectionSpacesToUpdate, "firstObject");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[WBSSavedAccountStore persistentIdentifierForCredential:protectionSpace:](savedAccountStore, "persistentIdentifierForCredential:protectionSpace:", credential, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0D8AAC0], "sharedStore");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "addPersistentIdentifier:", v6);

  v8 = (void *)MEMORY[0x1E0DC3450];
  -[SFPasswordSavingServiceViewController _titleStringForAccountModificationPrompt](self, "_titleStringForAccountModificationPrompt");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  -[SFPasswordSavingServiceViewController _messageStringForAccountModificationPrompt](self, "_messageStringForAccountModificationPrompt");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "alertControllerWithTitle:message:imageNamed:preferredStyle:", v9, v10, CFSTR("alert-passwords"), _SFDeviceAlertStyle());
  v11 = (UIAlertController *)objc_claimAutoreleasedReturnValue();
  prompt = self->_prompt;
  self->_prompt = v11;

  if (self->_supportsUpgradeToSignInWithApple)
    -[SFPasswordSavingServiceViewController _addUpgradeToSignInWithAppleActionToPrompt](self, "_addUpgradeToSignInWithAppleActionToPrompt");
  if (self->_supportsUpgradeToStrongPassword)
    -[SFPasswordSavingServiceViewController _addChangeToStrongPasswordActionToPrompt](self, "_addChangeToStrongPasswordActionToPrompt");
  else
    -[SFPasswordSavingServiceViewController _addChangePasswordOnWebsiteActionToPrompt](self, "_addChangePasswordOnWebsiteActionToPrompt");
  v13 = self->_prompt;
  v14 = (void *)MEMORY[0x1E0DC3448];
  _WBSLocalizedString();
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 3221225472;
  v17[2] = __71__SFPasswordSavingServiceViewController__showAccountModificationPrompt__block_invoke;
  v17[3] = &unk_1E4AC0010;
  v17[4] = self;
  objc_msgSend(v14, "actionWithTitle:style:handler:", v15, 1, v17);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  -[UIAlertController addAction:](v13, "addAction:", v16);

  -[SFPasswordSavingServiceViewController presentViewController:animated:completion:](self, "presentViewController:animated:completion:", self->_prompt, 1, 0);
}

uint64_t __71__SFPasswordSavingServiceViewController__showAccountModificationPrompt__block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_dismiss");
}

- (void)_addUpgradeToSignInWithAppleActionToPrompt
{
  UIAlertController *prompt;
  void *v4;
  void *v5;
  void *v6;
  _QWORD v7[5];

  prompt = self->_prompt;
  v4 = (void *)MEMORY[0x1E0DC3448];
  _WBSLocalizedString();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = __83__SFPasswordSavingServiceViewController__addUpgradeToSignInWithAppleActionToPrompt__block_invoke;
  v7[3] = &unk_1E4AC0010;
  v7[4] = self;
  objc_msgSend(v4, "actionWithTitle:style:handler:", v5, 0, v7);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  -[UIAlertController addAction:](prompt, "addAction:", v6);

}

uint64_t __83__SFPasswordSavingServiceViewController__addUpgradeToSignInWithAppleActionToPrompt__block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_initiateUpgradeToSignInWithApple");
}

- (void)_addChangeToStrongPasswordActionToPrompt
{
  UIAlertController *prompt;
  void *v4;
  void *v5;
  void *v6;
  _QWORD v7[5];

  prompt = self->_prompt;
  v4 = (void *)MEMORY[0x1E0DC3448];
  _WBSLocalizedString();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = __81__SFPasswordSavingServiceViewController__addChangeToStrongPasswordActionToPrompt__block_invoke;
  v7[3] = &unk_1E4AC0010;
  v7[4] = self;
  objc_msgSend(v4, "actionWithTitle:style:handler:", v5, 0, v7);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  -[UIAlertController addAction:](prompt, "addAction:", v6);

}

uint64_t __81__SFPasswordSavingServiceViewController__addChangeToStrongPasswordActionToPrompt__block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_initiateChangeToStrongPassword");
}

- (void)_addChangePasswordOnWebsiteActionToPrompt
{
  UIAlertController *prompt;
  void *v4;
  void *v5;
  void *v6;
  _QWORD v7[5];

  prompt = self->_prompt;
  v4 = (void *)MEMORY[0x1E0DC3448];
  _WBSLocalizedString();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = __82__SFPasswordSavingServiceViewController__addChangePasswordOnWebsiteActionToPrompt__block_invoke;
  v7[3] = &unk_1E4AC0010;
  v7[4] = self;
  objc_msgSend(v4, "actionWithTitle:style:handler:", v5, 0, v7);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  -[UIAlertController addAction:](prompt, "addAction:", v6);

}

uint64_t __82__SFPasswordSavingServiceViewController__addChangePasswordOnWebsiteActionToPrompt__block_invoke(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "_openPasswordManagerToChangePasswordOnWebsite");
  return objc_msgSend(*(id *)(a1 + 32), "_dismiss");
}

- (id)_titleStringForAccountModificationPrompt
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  if ((-[WBSPasswordWarning issueTypes](self->_passwordWarning, "issueTypes") & 8) != 0)
  {
    _WBSLocalizedString();
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    -[WBSPasswordWarning localizedLongDescriptionForClient:](self->_passwordWarning, "localizedLongDescriptionForClient:", 2);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR(" %@"), v4);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "stringByAppendingString:", v6);
    v3 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    -[WBSPasswordWarning localizedLongDescriptionForClient:](self->_passwordWarning, "localizedLongDescriptionForClient:", 2);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
  }
  return v3;
}

- (id)_messageStringForAccountModificationPrompt
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  v3 = (void *)MEMORY[0x1E0CA5860];
  -[SFPasswordSavingServiceViewController _hostApplicationBundleIdentifier](self, "_hostApplicationBundleIdentifier");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "applicationProxyForIdentifier:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "localizedNameForContext:", 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (self->_supportsUpgradeToSignInWithApple)
  {
    objc_msgSend(MEMORY[0x1E0D8A8F8], "isAppleAccountBrandingEnabled");
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0D8A8B8], "currentDevice");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "deviceClass");

  }
  v7 = (void *)MEMORY[0x1E0CB3940];
  _WBSLocalizedString();
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "stringWithFormat:", v9, v6);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  return v10;
}

- (void)_initiateUpgradeToSignInWithApple
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0(&dword_1A3B2D000, v0, v1, "Remote password saving view controller cannot perform upgrades.", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_1();
}

- (void)_initiateChangeToStrongPassword
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;

  v3 = objc_alloc(MEMORY[0x1E0C925B8]);
  -[NSArray firstObject](self->_protectionSpacesToUpdate, "firstObject");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "host");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "safari_highLevelDomainFromHost");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)objc_msgSend(v3, "initWithIdentifier:type:", v6, 0);

  -[SFPasswordSavingServiceViewController _remoteViewControllerProxy](self, "_remoteViewControllerProxy");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    -[SFPasswordSavingServiceViewController _remoteViewControllerProxy](self, "_remoteViewControllerProxy");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = objc_alloc(MEMORY[0x1E0C925D0]);
    -[NSURLCredential user](self->_credential, "user");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSURLCredential password](self->_credential, "password");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = (void *)objc_msgSend(v10, "initWithUser:password:", v11, v12);
    objc_msgSend(v9, "performUpgradeToStrongPasswordForCredential:serviceIdentifier:", v13, v7);

  }
  else
  {
    objc_msgSend(v8, "willDismissServiceViewController");
    v14 = WBS_LOG_CHANNEL_PREFIXAccountAuthenticationModificationExtension();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      -[SFPasswordSavingServiceViewController _initiateUpgradeToSignInWithApple].cold.1();
  }

}

- (void)_openPasswordManagerToChangePasswordOnWebsite
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  _QWORD v10[2];
  _QWORD v11[3];

  v11[2] = *MEMORY[0x1E0C80C00];
  v3 = (void *)MEMORY[0x1E0D8AAA0];
  v10[0] = *MEMORY[0x1E0D8B230];
  -[NSURLCredential user](self->_credential, "user");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v11[0] = v4;
  v10[1] = *MEMORY[0x1E0D8B228];
  -[NSArray firstObject](self->_protectionSpacesToUpdate, "firstObject");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "host");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v11[1] = v6;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v11, v10, 2);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "passwordManagerURLWithDictionary:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "openSensitiveURL:withOptions:", v8, 0);

}

- (void).cxx_destruct
{
  objc_storeStrong((id *)&self->_savedAccountStore, 0);
  objc_storeStrong((id *)&self->_accountModificationHostViewController, 0);
  objc_storeStrong((id *)&self->_accountModificationExtension, 0);
  objc_storeStrong((id *)&self->_passwordWarning, 0);
  objc_storeStrong((id *)&self->_autoFillQuirksManager, 0);
  objc_storeStrong((id *)&self->_prompt, 0);
  objc_storeStrong((id *)&self->_tokenForShowingPrompt, 0);
  objc_storeStrong((id *)&self->_credential, 0);
  objc_storeStrong((id *)&self->_domainForSavePasswordAction, 0);
  objc_storeStrong((id *)&self->_protectionSpacesToUpdate, 0);
}

void __131__SFPasswordSavingServiceViewController_credentialsSubmittedForWebsiteURL_user_password_passwordIsAutoGenerated_completionHandler___block_invoke_cold_1(void *a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = a1;
  objc_msgSend(a2, "safari_privacyPreservingDescription");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_2(&dword_1A3B2D000, v5, v6, "Failed to find application record with error: %{public}@. Skipping security recommendation prompt.", v7, v8, v9, v10, 2u);

}

void __131__SFPasswordSavingServiceViewController_credentialsSubmittedForWebsiteURL_user_password_passwordIsAutoGenerated_completionHandler___block_invoke_cold_2()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0(&dword_1A3B2D000, v0, v1, "Nothing to do for received autogenerated password.", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_1();
}

- (void)_checkIfWarningStoreAlreadyContainsCredentialWithCompletionHandler:.cold.1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_0(&dword_1A3B2D000, v0, v1, "Failed to find persistent identifier for credential. Skipping weak password warning.", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_1();
}

void __94__SFPasswordSavingServiceViewController__configureSecurityPromptActionsWithCompletionHandler___block_invoke_2_cold_1(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(void **)(a1 + 1040);
  v3 = a2;
  objc_msgSend(v2, "_plugIn");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "localizedContainingName");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_2(&dword_1A3B2D000, v6, v7, "Failed to get Sign in with Apple authorization credential state for %@", v8, v9, v10, v11, 2u);

}

@end
