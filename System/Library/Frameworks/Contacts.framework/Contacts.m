void __Block_byref_object_dispose_(uint64_t a1)
{

}

void __Block_byref_object_dispose__0(uint64_t a1)
{

}

void __Block_byref_object_dispose__1(uint64_t a1)
{

}

void __Block_byref_object_dispose__2(uint64_t a1)
{

}

void __Block_byref_object_dispose__3(uint64_t a1)
{

}

void __Block_byref_object_dispose__4(uint64_t a1)
{

}

void __Block_byref_object_dispose__5(uint64_t a1)
{

}

void __Block_byref_object_dispose__6(uint64_t a1)
{

}

void __Block_byref_object_dispose__7(uint64_t a1)
{

}

void __Block_byref_object_dispose__8(uint64_t a1)
{

}

void __Block_byref_object_dispose__9(uint64_t a1)
{

}

void __Block_byref_object_dispose__10(uint64_t a1)
{

}

void __Block_byref_object_dispose__11(uint64_t a1)
{

}

void __Block_byref_object_dispose__12(uint64_t a1)
{

}

void __Block_byref_object_dispose__13(uint64_t a1)
{

}

void __Block_byref_object_dispose__14(uint64_t a1)
{

}

void __Block_byref_object_dispose__15(uint64_t a1)
{

}

void __Block_byref_object_dispose__16(uint64_t a1)
{

}

void __Block_byref_object_dispose__17(uint64_t a1)
{

}

void __Block_byref_object_dispose__18(uint64_t a1)
{

}

void __Block_byref_object_dispose__19(uint64_t a1)
{

}

void __Block_byref_object_dispose__20(uint64_t a1)
{

}

void __Block_byref_object_dispose__21(uint64_t a1)
{

}

void __Block_byref_object_dispose__22(uint64_t a1)
{

}

void __Block_byref_object_dispose__23(uint64_t a1)
{

}

void __Block_byref_object_dispose__24(uint64_t a1)
{

}

void __Block_byref_object_dispose__25(uint64_t a1)
{

}

void __Block_byref_object_dispose__26(uint64_t a1)
{

}

void __Block_byref_object_dispose__27(uint64_t a1)
{

}

void __Block_byref_object_dispose__28(uint64_t a1)
{

}

void __Block_byref_object_dispose__29(uint64_t a1)
{

}

void __Block_byref_object_dispose__30(uint64_t a1)
{

}

void __Block_byref_object_dispose__31(uint64_t a1)
{

}

void __Block_byref_object_dispose__32(uint64_t a1)
{

}

void __Block_byref_object_dispose__33(uint64_t a1)
{

}

void __Block_byref_object_dispose__34(uint64_t a1)
{

}

void __Block_byref_object_dispose__35(uint64_t a1)
{

}

void __Block_byref_object_dispose__36(uint64_t a1)
{

}

uint64_t CNLabeledValueToValue_block_invoke_3(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "value");
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__1(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__2(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__3(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__5(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__6(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__7(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__9(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__10(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__11(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__12(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__13(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__14(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__15(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__16(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__17(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__18(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__19(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__20(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void *__Block_byref_object_copy__21(uint64_t a1, uint64_t a2)
{
  void *result;

  result = _Block_copy(*(const void **)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

uint64_t __Block_byref_object_copy__22(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__23(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__24(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__25(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__26(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__27(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__28(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__29(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__30(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__31(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__32(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__33(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__34(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__35(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__36(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_18F8C504C(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_18F8C53C0(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_18F8C5510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F8C5968(void *a1)
{
  objc_begin_catch(a1);
  JUMPOUT(0x18F8C5910);
}

void sub_18F8C6444(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

void sub_18F8C6CC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  _Block_object_dispose(&a35, 8);
  _Unwind_Resume(a1);
}

void sub_18F8C70C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sStringValue_block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "stringValue");
}

uint64_t CNSharedNamePhotoEnabled()
{
  return _os_feature_enabled_impl();
}

uint64_t canUnifyLabeledValuePairs(void *a1, void *a2, void *a3)
{
  unint64_t v5;
  unint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;

  v5 = a1;
  v6 = a2;
  v7 = a3;
  if (v5 | v6 && (objc_msgSend((id)v5, "isEqual:", v6) & 1) == 0)
  {
    objc_msgSend((id)v5, "value");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend((id)v6, "value");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "canUnifyValue:withValue:", v9, v10);

  }
  else
  {
    v8 = 1;
  }

  return v8;
}

void sub_18F8CD30C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F8CDD34(_Unwind_Exception *exc_buf, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
  if (a2)
  {
    objc_begin_catch(exc_buf);
    JUMPOUT(0x18F8CDC4CLL);
  }
  _Unwind_Resume(exc_buf);
}

uint64_t CNAPIQueryMetricsEnabled()
{
  return _os_feature_enabled_impl();
}

void sub_18F8CFD3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v12;
  va_list va;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v12 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_18F8CFFE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_18F8D02D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F8D0848(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v9;
  va_list va;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  va_list va1;

  va_start(va1, a8);
  va_start(va, a8);
  v9 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_18F8D0A7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F8D1598(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t CNSNaPWallpaperEnabled()
{
  return _os_feature_enabled_impl();
}

void OUTLINED_FUNCTION_2(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

int *OUTLINED_FUNCTION_2_1()
{
  return __error();
}

void OUTLINED_FUNCTION_2_2(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

void OUTLINED_FUNCTION_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 2u);
}

uint64_t OUTLINED_FUNCTION_2_3()
{
  void *v0;

  return objc_msgSend(v0, "serialNumber");
}

uint64_t comparePhoneNumberStrings(void *a1, id a2)
{
  id v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  int v18;
  void *v19;
  char v20;
  uint64_t v21;
  void *v22;
  char v23;
  uint64_t v24;
  unsigned int v25;
  int v26;
  int v28;
  int v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;

  v3 = a1;
  v34 = *MEMORY[0x1E0C80C00];
  if ((unint64_t)objc_msgSend(a1, "length") >> 5 >= 0xC35)
    v3 = (id)objc_msgSend(v3, "_cn_take:", 100000);
  if ((unint64_t)objc_msgSend(a2, "length") >= 0x186A0)
    a2 = (id)objc_msgSend(a2, "_cn_take:", 100000);
  if (comparePhoneNumberStrings_onceTokendecimalDigits != -1)
    dispatch_once(&comparePhoneNumberStrings_onceTokendecimalDigits, &__block_literal_global_509);
  if (comparePhoneNumberStrings_onceTokenextCharacters != -1)
    dispatch_once(&comparePhoneNumberStrings_onceTokenextCharacters, &__block_literal_global_513);
  v4 = objc_msgSend(v3, "length");
  v5 = objc_msgSend(a2, "length");
  if (v4 <= 0x64)
    objc_msgSend(v3, "length");
  MEMORY[0x1E0C80A78]();
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v5 <= 0x64)
    objc_msgSend(a2, "length");
  MEMORY[0x1E0C80A78]();
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v4 >= 0x65)
  {
    v7 = (char *)malloc_type_malloc(2 * objc_msgSend(v3, "length"), 0x1000040BDFB0063uLL);
    v10 = v7;
  }
  else
  {
    v10 = 0;
  }
  v32 = v10;
  if (v5 >= 0x65)
  {
    v9 = (char *)malloc_type_malloc(2 * objc_msgSend(a2, "length"), 0x1000040BDFB0063uLL);
    v33 = v9;
  }
  else
  {
    v33 = 0;
  }
  v11 = objc_msgSend(v3, "length") - 1;
  objc_msgSend(v3, "getCharacters:range:", v7, 0, objc_msgSend(v3, "length"));
  v12 = objc_msgSend(a2, "length") - 1;
  objc_msgSend(a2, "getCharacters:range:", v9, 0, objc_msgSend(a2, "length"));
  v13 = 0;
  v14 = &obfuscate__cn_once_object_16;
  while (2)
  {
    if (v14[63] != -1)
      dispatch_once(&nextValidChar_onceToken, &__block_literal_global_516);
    while ((v11 & 0x8000000000000000) == 0)
    {
      v15 = *(unsigned __int16 *)&v7[2 * v11--];
      if ((objc_msgSend((id)nextValidChar_charactersToSkip, "characterIsMember:", v15) & 1) == 0)
      {
        v16 = v15 | 0x10000;
        goto LABEL_26;
      }
    }
    v16 = 0;
LABEL_26:
    if (v14[63] != -1)
      dispatch_once(&nextValidChar_onceToken, &__block_literal_global_516);
    do
    {
      if (v12 < 0)
      {
        v18 = 0;
        if ((v16 & 0x10000) == 0)
          goto LABEL_45;
        goto LABEL_44;
      }
      v17 = *(unsigned __int16 *)&v9[2 * v12--];
    }
    while ((objc_msgSend((id)nextValidChar_charactersToSkip, "characterIsMember:", v17) & 1) != 0);
    if (v16 >= 0x10000 && v13 <= 6)
    {
      if ((v16 & 0x10000) == 0)
      {
        if ((objc_msgSend((id)comparePhoneNumberStrings_decimalDigits, "characterIsMember:", v17) & 1) != 0)
          goto LABEL_39;
LABEL_38:
        if (objc_msgSend((id)comparePhoneNumberStrings_extCharacters, "characterIsMember:", v17))
          goto LABEL_39;
LABEL_62:
        v25 = 0;
        v26 = 0;
        v30 = v32;
        goto LABEL_63;
      }
      if ((objc_msgSend((id)comparePhoneNumberStrings_decimalDigits, "characterIsMember:", (unsigned __int16)v16) & 1) == 0
        || (objc_msgSend((id)comparePhoneNumberStrings_decimalDigits, "characterIsMember:", v17) & 1) == 0)
      {
        if (objc_msgSend((id)comparePhoneNumberStrings_extCharacters, "characterIsMember:", (unsigned __int16)v16))goto LABEL_38;
        goto LABEL_62;
      }
LABEL_39:
      if ((_DWORD)v17 == (unsigned __int16)v16)
        ++v13;
      v14 = &obfuscate__cn_once_object_16;
      if ((_DWORD)v17 != (unsigned __int16)v16)
      {
        v29 = 1;
        v30 = v32;
LABEL_71:
        if (v13)
          v28 = v29;
        else
          v28 = 1;
        if (v13 > 6)
          v26 = 1;
        else
          v26 = v28;
        v25 = v29;
        goto LABEL_63;
      }
      continue;
    }
    break;
  }
  v18 = v17 | 0x10000;
  if ((v16 & 0x10000) == 0)
    goto LABEL_45;
LABEL_44:
  if (!objc_msgSend((id)comparePhoneNumberStrings_decimalDigits, "characterIsMember:", (unsigned __int16)v16))goto LABEL_62;
LABEL_45:
  v19 = (void *)comparePhoneNumberStrings_decimalDigits;
  v20 = 1;
LABEL_46:
  if (nextValidChar_onceToken != -1)
    dispatch_once(&nextValidChar_onceToken, &__block_literal_global_516);
  while ((v11 & 0x8000000000000000) == 0)
  {
    v21 = *(unsigned __int16 *)&v7[2 * v11--];
    if ((objc_msgSend((id)nextValidChar_charactersToSkip, "characterIsMember:", v21) & 1) == 0)
    {
      if ((v20 & 1) == 0)
        goto LABEL_62;
      v20 = objc_msgSend(v19, "characterIsMember:", v21);
      goto LABEL_46;
    }
  }
  if ((v20 & 1) == 0
    || (v18 & 0x10000) != 0
    && !objc_msgSend((id)comparePhoneNumberStrings_decimalDigits, "characterIsMember:", (unsigned __int16)v18))
  {
    goto LABEL_62;
  }
  v22 = (void *)comparePhoneNumberStrings_decimalDigits;
  v23 = 1;
LABEL_56:
  if (nextValidChar_onceToken != -1)
    dispatch_once(&nextValidChar_onceToken, &__block_literal_global_516);
  while ((v12 & 0x8000000000000000) == 0)
  {
    v24 = *(unsigned __int16 *)&v9[2 * v12--];
    if ((objc_msgSend((id)nextValidChar_charactersToSkip, "characterIsMember:", v24) & 1) == 0)
    {
      if ((v23 & 1) == 0)
        goto LABEL_62;
      v23 = objc_msgSend(v22, "characterIsMember:", v24);
      goto LABEL_56;
    }
  }
  v29 = 0;
  v25 = 0;
  v26 = 0;
  v30 = v32;
  if ((v23 & 1) != 0)
    goto LABEL_71;
LABEL_63:
  if (v30)
    free(v30);
  if (v33)
    free(v33);
  if (v26)
    return v25;
  else
    return 2;
}

void sub_18F8D5E90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F8D729C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F8D770C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_18F8D7FA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t initCPSharedResourcesDirectory()
{
  if (LoadAppSupport_loadPredicate_0 != -1)
    dispatch_once(&LoadAppSupport_loadPredicate_0, &__block_literal_global_135);
  softLinkCPSharedResourcesDirectory = (uint64_t (*)())dlsym((void *)LoadAppSupport_frameworkLibrary_0, "CPSharedResourcesDirectory");
  return softLinkCPSharedResourcesDirectory();
}

void sub_18F8D8908(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t CNIsErrorWithCode(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  uint64_t v5;

  v3 = a1;
  if (objc_msgSend(v3, "code") == a2)
  {
    objc_msgSend(v3, "domain");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v4, "isEqual:", CFSTR("CNErrorDomain"));

  }
  else
  {
    v5 = 0;
  }

  return v5;
}

void sub_18F8D94B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F8D9B08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v11;
  va_list va;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v11 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v9 - 128), 8);
  _Unwind_Resume(a1);
}

id sPostalAddressKeyForFormatPropertyKey_block_invoke(uint64_t a1, uint64_t a2)
{
  return +[CNPostalAddressFormatter postalAddressPropertyKeyForFormatPropertyKey:](CNPostalAddressFormatter, "postalAddressPropertyKeyForFormatPropertyKey:", a2);
}

uint64_t _CNIsObject_CNKeyDescriptorPrivate(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0
    || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)
    || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)
    || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    v2 = 1;
  }
  else
  {
    v2 = objc_msgSend(v1, "conformsToProtocol:", &unk_1EE191798);
  }

  return v2;
}

void sub_18F8DAEEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F8DC934(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18F8DCC68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id fetchContactMatchingLegacyIdentifier(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;
  CNContactFetchRequest *v7;
  void *v8;
  id v9;
  _QWORD v11[5];
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  void (*v16)(uint64_t);
  id v17;

  v5 = a1;
  v6 = a3;
  v7 = -[CNContactFetchRequest initWithKeysToFetch:]([CNContactFetchRequest alloc], "initWithKeysToFetch:", v6);
  -[CNContactFetchRequest setUnifyResults:](v7, "setUnifyResults:", 0);
  +[CNContact predicateForLegacyIdentifier:](CNContact, "predicateForLegacyIdentifier:", a2);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  -[CNContactFetchRequest setPredicate:](v7, "setPredicate:", v8);

  v12 = 0;
  v13 = &v12;
  v14 = 0x3032000000;
  v15 = __Block_byref_object_copy__29;
  v16 = __Block_byref_object_dispose__29;
  v17 = 0;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = __fetchContactMatchingLegacyIdentifier_block_invoke;
  v11[3] = &unk_1E29F80D0;
  v11[4] = &v12;
  objc_msgSend(v5, "enumerateContactsWithFetchRequest:error:usingBlock:", v7, 0, v11);
  v9 = (id)v13[5];
  _Block_object_dispose(&v12, 8);

  return v9;
}

void sub_18F8DD444(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F8DD6E0(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_18F8E00A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  _Block_object_dispose(&a20, 8);
  _Block_object_dispose(&a26, 8);
  _Unwind_Resume(a1);
}

uint64_t CNSharedNamePhotoC3Enabled()
{
  return _os_feature_enabled_impl();
}

void sub_18F8E485C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getCNDonationStoreClass_block_invoke(uint64_t a1)
{
  Class result;

  ContactsDonationLibrary();
  result = objc_getClass("CNDonationStore");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getCNDonationStoreClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    __getCNDonationStoreClass_block_invoke_cold_1();
    return (Class)ContactsDonationLibrary();
  }
  return result;
}

uint64_t ContactsDonationLibrary()
{
  uint64_t v0;
  void *v2;

  if (!ContactsDonationLibraryCore_frameworkLibrary)
    ContactsDonationLibraryCore_frameworkLibrary = _sl_dlopen();
  v0 = ContactsDonationLibraryCore_frameworkLibrary;
  if (!ContactsDonationLibraryCore_frameworkLibrary)
  {
    v2 = (void *)abort_report_np();
    free(v2);
  }
  return v0;
}

void sub_18F8E4DC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18F8E507C(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_18F8E50A8(void *a1)
{
  objc_begin_catch(a1);
  JUMPOUT(0x18F8E5028);
}

void sub_18F8E55A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F8E5FB8(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_18F8E62BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F8E6598(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_18F8E65B8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  objc_begin_catch(a1);
  JUMPOUT(0x18F8E6538);
}

void sub_18F8E6AB4(void *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 176), 8);
  objc_begin_catch(a1);
  JUMPOUT(0x18F8E6A48);
}

void sub_18F8E6DEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F8E8724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id CNBridgeABCFResultAndErrorFromBlock(_QWORD *a1, uint64_t a2)
{
  CFTypeRef *p_cf;
  void *v5;
  id v6;
  void *v7;
  CFTypeRef cf;

  cf = 0;
  if (a1)
    p_cf = &cf;
  else
    p_cf = 0;
  v5 = (void *)(*(uint64_t (**)(uint64_t, CFTypeRef *))(a2 + 16))(a2, p_cf);
  if (v5)
    v5 = (void *)CFAutorelease(v5);
  v6 = v5;
  v7 = v6;
  if (a1)
  {
    if (!v6)
    {
      +[CNErrorFactory errorForiOSABError:](CNErrorFactory, "errorForiOSABError:", cf);
      *a1 = (id)objc_claimAutoreleasedReturnValue();
      if (cf)
        CFRelease(cf);
    }
  }
  return v7;
}

uint64_t kCTFontAttributeNameFunction()
{
  return constantkCTFontAttributeName;
}

void sub_18F8EBDE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v8;
  va_list va;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  va_list va1;

  va_start(va1, a7);
  va_start(va, a7);
  v8 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_18F8ECA20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v12;
  va_list va;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v12 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_18F8ECC28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F8ED320(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id TUSenderIdentityFunction()
{
  return (id)classTUSenderIdentity;
}

id TUSenderIdentityFunction_0()
{
  return (id)classTUSenderIdentity_0;
}

Class initPABridgedTCCIdentity()
{
  Class result;

  if (LoadPrivacyAccounting_loadPredicate != -1)
    dispatch_once(&LoadPrivacyAccounting_loadPredicate, &__block_literal_global_452);
  result = objc_getClass("PABridgedTCCIdentity");
  classPABridgedTCCIdentity = (uint64_t)result;
  getPABridgedTCCIdentityClass = (uint64_t (*)())PABridgedTCCIdentityFunction;
  return result;
}

id PABridgedTCCIdentityFunction()
{
  return (id)classPABridgedTCCIdentity;
}

Class initTUSenderIdentity()
{
  Class result;

  if (LoadTelephonyUtilities_loadPredicate != -1)
    dispatch_once(&LoadTelephonyUtilities_loadPredicate, &__block_literal_global_299);
  result = objc_getClass("TUSenderIdentity");
  classTUSenderIdentity = (uint64_t)result;
  getTUSenderIdentityClass = (uint64_t (*)(void))TUSenderIdentityFunction;
  return result;
}

Class initTUSenderIdentity_0()
{
  Class result;

  if (LoadTelephonyUtilities_loadPredicate_0 != -1)
    dispatch_once(&LoadTelephonyUtilities_loadPredicate_0, &__block_literal_global_455);
  result = objc_getClass("TUSenderIdentity");
  classTUSenderIdentity_0 = (uint64_t)result;
  getTUSenderIdentityClass_0 = (uint64_t (*)())TUSenderIdentityFunction_0;
  return result;
}

void sub_18F8F9CC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  uint64_t v12;
  va_list va;

  va_start(va, a12);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v12 - 120), 8);
  _Unwind_Resume(a1);
}

void ensureFetchRequestHasKeyboardState(void *a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;

  v6 = a1;
  v3 = a2;
  objc_msgSend(v6, "keyboardState");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v4)
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v3, "keyboardState"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setKeyboardState:", v5);

  }
}

void sub_18F8FA0F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  uint64_t v36;

  _Block_object_dispose(&a32, 8);
  _Block_object_dispose(&a36, 8);
  _Block_object_dispose((const void *)(v36 - 216), 8);
  _Block_object_dispose((const void *)(v36 - 184), 8);
  _Block_object_dispose((const void *)(v36 - 136), 8);
  _Unwind_Resume(a1);
}

Class initCoreTelephonyClient()
{
  Class result;

  if (LoadCoreTelephony_loadPredicate != -1)
    dispatch_once(&LoadCoreTelephony_loadPredicate, &__block_literal_global_305);
  result = objc_getClass("CoreTelephonyClient");
  classCoreTelephonyClient = (uint64_t)result;
  getCoreTelephonyClientClass = (uint64_t (*)())CoreTelephonyClientFunction;
  return result;
}

void sub_18F8FA86C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18F8FAB5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

Class initTUCallProviderManager()
{
  Class result;

  if (LoadTelephonyUtilities_loadPredicate != -1)
    dispatch_once(&LoadTelephonyUtilities_loadPredicate, &__block_literal_global_299);
  result = objc_getClass("TUCallProviderManager");
  classTUCallProviderManager = (uint64_t)result;
  getTUCallProviderManagerClass = (uint64_t (*)())TUCallProviderManagerFunction;
  return result;
}

__CFData *CNImageUtilsCroppedImageDataFromFullSizeImageData(void *a1, _QWORD *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  const __CFData *v11;
  const __CFData *v12;
  CGImageSource *v13;
  CGImageSource *v14;
  CFDictionaryRef v15;
  void *v16;
  double v17;
  double v18;
  void *v19;
  double v20;
  double v21;
  __CFData *v22;
  void *v23;
  void *v24;
  NSObject *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  CGImage *ImageAtIndex;
  double v34;
  double v35;
  double v36;
  double v37;
  void *v38;
  void *v39;
  NSObject *v40;
  double v41;
  double v42;
  double v43;
  double v44;
  void *v45;
  void *v46;
  NSObject *v47;
  CGImage *v48;
  CGImageDestinationRef v49;
  CGImageDestination *v50;
  void *v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  int v66;
  CGFloat v67;
  __int16 v68;
  CGFloat v69;
  __int16 v70;
  CGFloat v71;
  __int16 v72;
  CGFloat v73;
  __int16 v74;
  double v75;
  __int16 v76;
  double v77;
  uint64_t v78;
  CGRect v79;
  CGRect v80;
  CGRect v81;
  CGRect v82;

  v78 = *MEMORY[0x1E0C80C00];
  v11 = a1;
  v12 = v11;
  if (!v11)
  {
LABEL_28:
    v22 = 0;
    goto LABEL_29;
  }
  v13 = CGImageSourceCreateWithData(v11, 0);
  if (!v13)
  {
    v80.origin.x = a3;
    v80.origin.y = a4;
    v80.size.width = a5;
    v80.size.height = a6;
    CGRectIsEmpty(v80);
    +[CNContactsLoggerProvider defaultProvider](CNContactsLoggerProvider, "defaultProvider");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v23, "imageUtilitiesLogger");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v24, "log");
    v25 = objc_claimAutoreleasedReturnValue();

    if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
      CNImageUtilsCroppedImageDataFromFullSizeImageData_cold_1(v25, v26, v27, v28, v29, v30, v31, v32);
    goto LABEL_25;
  }
  v14 = v13;
  v15 = CGImageSourceCopyPropertiesAtIndex(v13, 0, 0);
  -[__CFDictionary objectForKeyedSubscript:](v15, "objectForKeyedSubscript:", *MEMORY[0x1E0CBD048]);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "doubleValue");
  v18 = v17;

  -[__CFDictionary objectForKeyedSubscript:](v15, "objectForKeyedSubscript:", *MEMORY[0x1E0CBD040]);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "doubleValue");
  v21 = v20;

  v79.origin.x = a3;
  v79.origin.y = a4;
  v79.size.width = a5;
  v79.size.height = a6;
  if (CGRectIsEmpty(v79) && vabdd_f64(v18, v21) <= 1.0)
  {
    CFRelease(v14);
    v22 = v12;
    goto LABEL_29;
  }
  ImageAtIndex = CGImageSourceCreateImageAtIndex(v14, 0, 0);
  CFRelease(v14);
  if (!ImageAtIndex)
  {
    +[CNContactsLoggerProvider defaultProvider](CNContactsLoggerProvider, "defaultProvider");
    v52 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v52, "imageUtilitiesLogger");
    v53 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v53, "log");
    v25 = objc_claimAutoreleasedReturnValue();

    if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
      CNImageUtilsCroppedImageDataFromFullSizeImageData_cold_2(v25, v54, v55, v56, v57, v58, v59, v60);
    goto LABEL_25;
  }
  v81.origin.x = a3;
  v81.origin.y = a4;
  v81.size.width = a5;
  v81.size.height = a6;
  if (CGRectIsEmpty(v81))
  {
    objc_msgSend(MEMORY[0x1E0D13A80], "centeredSquareCropRectInRect:", 0.0, 0.0, v18, v21);
    a3 = v34;
    a4 = v35;
    a5 = v36;
    a6 = v37;
  }
  if ((objc_msgSend(MEMORY[0x1E0D13A80], "cropRect:fitsWithinSize:", a3, a4, a5, a6, v18, v21) & 1) == 0)
  {
    +[CNContactsLoggerProvider defaultProvider](CNContactsLoggerProvider, "defaultProvider");
    v38 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v38, "imageUtilitiesLogger");
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v39, "log");
    v40 = objc_claimAutoreleasedReturnValue();

    if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR))
    {
      v66 = 134219264;
      v67 = a3;
      v68 = 2048;
      v69 = a4;
      v70 = 2048;
      v71 = a5;
      v72 = 2048;
      v73 = a6;
      v74 = 2048;
      v75 = v18;
      v76 = 2048;
      v77 = v21;
      _os_log_error_impl(&dword_18F8BD000, v40, OS_LOG_TYPE_ERROR, "[LikenessResolver] Attempting to crop image with cropRect (%.2f, %.2f, %.2f, %.2f) extending beyond image of size (%.2f x %.2f). Displaying with a centered square cropRect instead.", (uint8_t *)&v66, 0x3Eu);
    }

    objc_msgSend(MEMORY[0x1E0D13A80], "centeredSquareCropRectInRect:", 0.0, 0.0, v18, v21);
    a3 = v41;
    a4 = v42;
    a5 = v43;
    a6 = v44;
  }
  +[CNContactsLoggerProvider defaultProvider](CNContactsLoggerProvider, "defaultProvider");
  v45 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v45, "imageUtilitiesLogger");
  v46 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v46, "log");
  v47 = objc_claimAutoreleasedReturnValue();

  if (os_log_type_enabled(v47, OS_LOG_TYPE_DEBUG))
  {
    v66 = 134219264;
    v67 = a3;
    v68 = 2048;
    v69 = a4;
    v70 = 2048;
    v71 = a5;
    v72 = 2048;
    v73 = a6;
    v74 = 2048;
    v75 = v18;
    v76 = 2048;
    v77 = v21;
    _os_log_debug_impl(&dword_18F8BD000, v47, OS_LOG_TYPE_DEBUG, "[LikenessResolver] Taking rect (%f, %f, %f, %f) within image of size %.2f x %.2f", (uint8_t *)&v66, 0x3Eu);
  }

  v82.origin.x = a3;
  v82.origin.y = a4;
  v82.size.width = a5;
  v82.size.height = a6;
  v48 = CGImageCreateWithImageInRect(ImageAtIndex, v82);
  CGImageRelease(ImageAtIndex);
  if (!v48)
  {
    +[CNContactsLoggerProvider defaultProvider](CNContactsLoggerProvider, "defaultProvider");
    v61 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v61, "imageUtilitiesLogger");
    v62 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v62, "log");
    v25 = objc_claimAutoreleasedReturnValue();

    if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
    {
      v66 = 134219264;
      v67 = a3;
      v68 = 2048;
      v69 = a4;
      v70 = 2048;
      v71 = a5;
      v72 = 2048;
      v73 = a6;
      v74 = 2048;
      v75 = v18;
      v76 = 2048;
      v77 = v21;
      _os_log_error_impl(&dword_18F8BD000, v25, OS_LOG_TYPE_ERROR, "[LikenessResolver] can't create CROPPED image! With cropRect (%.2f, %.2f, %.2f, %.2f) and image of size %.2f x %.2f)", (uint8_t *)&v66, 0x3Eu);
    }
LABEL_25:

    objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", CFSTR("CNErrorDomain"), 302, 0);
    v63 = (void *)objc_claimAutoreleasedReturnValue();
    v64 = v63;
    if (a2)
      *a2 = objc_retainAutorelease(v63);

    goto LABEL_28;
  }
  v22 = (__CFData *)objc_opt_new();
  v49 = CGImageDestinationCreateWithData(v22, CFSTR("public.jpeg"), 1uLL, 0);
  if (v49)
  {
    v50 = v49;
    objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
    v51 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v51, "setObject:forKeyedSubscript:", &unk_1E2A40380, *MEMORY[0x1E0CBC780]);
    CGImageDestinationAddImage(v50, v48, (CFDictionaryRef)v51);
    CGImageDestinationFinalize(v50);
    CFRelease(v50);

  }
  CGImageRelease(v48);
LABEL_29:

  return v22;
}

void __fetchContactMatchingLegacyIdentifier_block_invoke(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
}

Class initCSSearchableItemAttributeSet()
{
  Class result;

  if (LoadCoreSpotlight_loadPredicate_0 != -1)
    dispatch_once(&LoadCoreSpotlight_loadPredicate_0, &__block_literal_global_17);
  result = objc_getClass("CSSearchableItemAttributeSet");
  classCSSearchableItemAttributeSet = (uint64_t)result;
  getCSSearchableItemAttributeSetClass[0] = (uint64_t (*)())CSSearchableItemAttributeSetFunction;
  return result;
}

id CSSearchableItemAttributeSetFunction()
{
  return (id)classCSSearchableItemAttributeSet;
}

id getIMNicknameProviderClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getIMNicknameProviderClass_softClass;
  v7 = getIMNicknameProviderClass_softClass;
  if (!getIMNicknameProviderClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getIMNicknameProviderClass_block_invoke;
    v3[3] = &unk_1E29F98A8;
    v3[4] = &v4;
    __getIMNicknameProviderClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_18F8FCE40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getIMMeCardSharingStateControllerClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getIMMeCardSharingStateControllerClass_softClass;
  v7 = getIMMeCardSharingStateControllerClass_softClass;
  if (!getIMMeCardSharingStateControllerClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getIMMeCardSharingStateControllerClass_block_invoke;
    v3[3] = &unk_1E29F98A8;
    v3[4] = &v4;
    __getIMMeCardSharingStateControllerClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_18F8FCF88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getIMMeCardSharingStateControllerClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;

  if (!IMSharedUtilitiesLibraryCore_frameworkLibrary)
  {
    IMSharedUtilitiesLibraryCore_frameworkLibrary = _sl_dlopen();
    if (!IMSharedUtilitiesLibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_6;
    }
  }
  while (1)
  {
    result = objc_getClass("IMMeCardSharingStateController");
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
      break;
LABEL_6:
    v3 = (void *)__getIMMeCardSharingStateControllerClass_block_invoke_cold_1();
    free(v3);
  }
  getIMMeCardSharingStateControllerClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_18F8FD210(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

void *__getIMNicknameCurrentSymbolLoc_block_invoke(uint64_t a1)
{
  void *v2;
  void *result;
  void *v4;

  if (IMCoreLibraryCore_frameworkLibrary_1)
  {
    v2 = (void *)IMCoreLibraryCore_frameworkLibrary_1;
  }
  else
  {
    IMCoreLibraryCore_frameworkLibrary_1 = _sl_dlopen();
    v2 = (void *)IMCoreLibraryCore_frameworkLibrary_1;
    if (!IMCoreLibraryCore_frameworkLibrary_1)
    {
      v4 = (void *)abort_report_np();
      free(v4);
    }
  }
  result = dlsym(v2, "IMNicknameCurrent");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  getIMNicknameCurrentSymbolLoc_ptr = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_18F8FE778(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
  _Block_object_dispose(&a41, 8);
  _Block_object_dispose(&a45, 8);
  _Unwind_Resume(a1);
}

void sub_18F8FEAA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getCRRecentContactsLibraryClass_block_invoke(uint64_t a1)
{
  Class result;
  uint64_t v3;

  CoreRecentsLibrary();
  result = objc_getClass("CRRecentContactsLibrary");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getCRRecentContactsLibraryClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = __getCRRecentContactsLibraryClass_block_invoke_cold_1();
    return (Class)__getCRRecentContactsLibraryClass_block_invoke_0(v3);
  }
  return result;
}

Class __getCRRecentContactsLibraryClass_block_invoke_0(uint64_t a1)
{
  Class result;

  CoreRecentsLibrary_0();
  result = objc_getClass("CRRecentContactsLibrary");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getCRRecentContactsLibraryClass_softClass_0 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    __getCRRecentContactsLibraryClass_block_invoke_cold_1();
    return (Class)CoreRecentsLibrary();
  }
  return result;
}

uint64_t CoreRecentsLibrary()
{
  uint64_t v0;
  void *v2;

  if (!CoreRecentsLibraryCore_frameworkLibrary)
    CoreRecentsLibraryCore_frameworkLibrary = _sl_dlopen();
  v0 = CoreRecentsLibraryCore_frameworkLibrary;
  if (!CoreRecentsLibraryCore_frameworkLibrary)
  {
    v2 = (void *)abort_report_np();
    free(v2);
  }
  return v0;
}

uint64_t CoreRecentsLibrary_0()
{
  uint64_t v0;
  void *v2;

  if (!CoreRecentsLibraryCore_frameworkLibrary_0)
    CoreRecentsLibraryCore_frameworkLibrary_0 = _sl_dlopen();
  v0 = CoreRecentsLibraryCore_frameworkLibrary_0;
  if (!CoreRecentsLibraryCore_frameworkLibrary_0)
  {
    v2 = (void *)abort_report_np();
    free(v2);
  }
  return v0;
}

void sub_18F8FF4EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F900C04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F900E44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F901120(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F9012F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F9017AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F9018E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_18F901FD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_18F902234(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_18F9024E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_18F902648(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_18F902DC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F9035DC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v12;
  va_list va;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v12 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  objc_begin_catch(a1);
  JUMPOUT(0x18F903504);
}

void OUTLINED_FUNCTION_0_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 8u);
}

uint64_t OUTLINED_FUNCTION_1_0()
{
  return objc_opt_class();
}

void OUTLINED_FUNCTION_0_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 2u);
}

void OUTLINED_FUNCTION_0_2(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_1_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_1_2(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0xCu);
}

void OUTLINED_FUNCTION_1_3(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

id OUTLINED_FUNCTION_1_5(id a1)
{
  return a1;
}

uint64_t sIsPreferredForName_block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "isPreferredForName");
}

uint64_t initkCTFontAttributeName()
{
  uint64_t result;

  if (LoadCoreText_loadPredicate != -1)
    dispatch_once(&LoadCoreText_loadPredicate, &__block_literal_global_139_0);
  result = *(_QWORD *)dlsym((void *)LoadCoreText_frameworkLibrary, "kCTFontAttributeName");
  constantkCTFontAttributeName = result;
  getkCTFontAttributeName = kCTFontAttributeNameFunction;
  return result;
}

void __nextValidChar_block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3500], "characterSetWithCharactersInString:", CFSTR("+() - "));
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)nextValidChar_charactersToSkip;
  nextValidChar_charactersToSkip = v0;

}

void __comparePhoneNumberStrings_block_invoke_2()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3500], "characterSetWithCharactersInString:", CFSTR("ext"));
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)comparePhoneNumberStrings_extCharacters;
  comparePhoneNumberStrings_extCharacters = v0;

}

void __comparePhoneNumberStrings_block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3500], "characterSetWithCharactersInString:", CFSTR("0123456789"));
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)comparePhoneNumberStrings_decimalDigits;
  comparePhoneNumberStrings_decimalDigits = v0;

}

void sub_18F904164(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F90965C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  uint64_t v29;

  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_18F909988(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  uint64_t v33;

  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose((const void *)(v33 - 160), 8);
  _Block_object_dispose((const void *)(v33 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_18F90AB48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

Class initCSSearchableIndex()
{
  Class result;

  if (LoadCoreSpotlight_loadPredicate != -1)
    dispatch_once(&LoadCoreSpotlight_loadPredicate, &__block_literal_global_87);
  result = objc_getClass("CSSearchableIndex");
  classCSSearchableIndex = (uint64_t)result;
  getCSSearchableIndexClass[0] = (uint64_t (*)())CSSearchableIndexFunction;
  return result;
}

id CSSearchableIndexFunction()
{
  return (id)classCSSearchableIndex;
}

id initMDItemUniqueIdentifier()
{
  id *v0;

  if (LoadCoreSpotlight_loadPredicate != -1)
    dispatch_once(&LoadCoreSpotlight_loadPredicate, &__block_literal_global_87);
  v0 = (id *)dlsym((void *)LoadCoreSpotlight_frameworkLibrary, "MDItemUniqueIdentifier");
  objc_storeStrong((id *)&constantMDItemUniqueIdentifier, *v0);
  getMDItemUniqueIdentifier[0] = (uint64_t (*)())MDItemUniqueIdentifierFunction;
  return (id)constantMDItemUniqueIdentifier;
}

id MDItemUniqueIdentifierFunction()
{
  return (id)constantMDItemUniqueIdentifier;
}

id initMDItemIndexOID()
{
  id *v0;

  if (LoadCoreSpotlight_loadPredicate != -1)
    dispatch_once(&LoadCoreSpotlight_loadPredicate, &__block_literal_global_87);
  v0 = (id *)dlsym((void *)LoadCoreSpotlight_frameworkLibrary, "MDItemIndexOID");
  objc_storeStrong((id *)&constantMDItemIndexOID, *v0);
  getMDItemIndexOID[0] = (uint64_t (*)())MDItemIndexOIDFunction;
  return (id)constantMDItemIndexOID;
}

id MDItemIndexOIDFunction()
{
  return (id)constantMDItemIndexOID;
}

id initMDItemDisplayName()
{
  id *v0;

  if (LoadCoreSpotlight_loadPredicate != -1)
    dispatch_once(&LoadCoreSpotlight_loadPredicate, &__block_literal_global_87);
  v0 = (id *)dlsym((void *)LoadCoreSpotlight_frameworkLibrary, "MDItemDisplayName");
  objc_storeStrong((id *)&constantMDItemDisplayName, *v0);
  getMDItemDisplayName[0] = (uint64_t (*)())MDItemDisplayNameFunction;
  return (id)constantMDItemDisplayName;
}

id MDItemDisplayNameFunction()
{
  return (id)constantMDItemDisplayName;
}

void OUTLINED_FUNCTION_0_3(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_18F91184C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

id sMeIdentifiersEither_block_invoke(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  id v4;
  void *v5;
  _QWORD v7[4];
  id v8;

  v2 = a2;
  v3 = (void *)MEMORY[0x1E0D13A18];
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = sMeIdentifiersEither_block_invoke_2;
  v7[3] = &unk_1E29F8140;
  v8 = v2;
  v4 = v2;
  objc_msgSend(v3, "eitherWithBlock:", v7);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

uint64_t sMeIdentifiersEither_block_invoke_2(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "meContactIdentifiers:", a2);
}

void sub_18F9155B4(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
  {
    objc_begin_catch(exception_object);
    JUMPOUT(0x18F915524);
  }
  _Unwind_Resume(exception_object);
}

void sub_18F915AB4(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_18F918518(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v8;
  va_list va;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  va_list va1;

  va_start(va1, a7);
  va_start(va, a7);
  v8 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_18F919C1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id CoreTelephonyClientFunction()
{
  return (id)classCoreTelephonyClient;
}

id TUCallProviderManagerFunction()
{
  return (id)classTUCallProviderManager;
}

Class initCHManager()
{
  Class result;

  if (LoadCallHistory_loadPredicate != -1)
    dispatch_once(&LoadCallHistory_loadPredicate, &__block_literal_global_309);
  result = objc_getClass("CHManager");
  classCHManager = (uint64_t)result;
  getCHManagerClass = (uint64_t (*)())CHManagerFunction;
  return result;
}

id CHManagerFunction()
{
  return (id)classCHManager;
}

void *getIMSPIGetMostRecentIMEventForContactHandlesAndLocalLabelIDsSymbolLoc()
{
  void *v0;
  void *v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = 0;
  v4 = &v3;
  v5 = 0x2020000000;
  v0 = (void *)getIMSPIGetMostRecentIMEventForContactHandlesAndLocalLabelIDsSymbolLoc_ptr;
  v6 = getIMSPIGetMostRecentIMEventForContactHandlesAndLocalLabelIDsSymbolLoc_ptr;
  if (!getIMSPIGetMostRecentIMEventForContactHandlesAndLocalLabelIDsSymbolLoc_ptr)
  {
    v1 = (void *)IMCoreLibrary();
    v0 = dlsym(v1, "IMSPIGetMostRecentIMEventForContactHandlesAndLocalLabelIDs");
    v4[3] = (uint64_t)v0;
    getIMSPIGetMostRecentIMEventForContactHandlesAndLocalLabelIDsSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_18F91A22C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

uint64_t IMCoreLibrary()
{
  uint64_t v0;
  void *v2;

  if (!IMCoreLibraryCore_frameworkLibrary)
    IMCoreLibraryCore_frameworkLibrary = _sl_dlopen();
  v0 = IMCoreLibraryCore_frameworkLibrary;
  if (!IMCoreLibraryCore_frameworkLibrary)
  {
    v2 = (void *)abort_report_np();
    free(v2);
  }
  return v0;
}

Class initTUCallHistoryManager()
{
  Class result;

  if (LoadTelephonyUtilities_loadPredicate != -1)
    dispatch_once(&LoadTelephonyUtilities_loadPredicate, &__block_literal_global_299);
  result = objc_getClass("TUCallHistoryManager");
  classTUCallHistoryManager = (uint64_t)result;
  getTUCallHistoryManagerClass[0] = (uint64_t (*)())TUCallHistoryManagerFunction;
  return result;
}

id TUCallHistoryManagerFunction()
{
  return (id)classTUCallHistoryManager;
}

void *getIMSPIRemapChatsWithLastAddressedLabelIDToNewLabelIDSymbolLoc()
{
  void *v0;
  void *v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = 0;
  v4 = &v3;
  v5 = 0x2020000000;
  v0 = (void *)getIMSPIRemapChatsWithLastAddressedLabelIDToNewLabelIDSymbolLoc_ptr;
  v6 = getIMSPIRemapChatsWithLastAddressedLabelIDToNewLabelIDSymbolLoc_ptr;
  if (!getIMSPIRemapChatsWithLastAddressedLabelIDToNewLabelIDSymbolLoc_ptr)
  {
    v1 = (void *)IMCoreLibrary();
    v0 = dlsym(v1, "IMSPIRemapChatsWithLastAddressedLabelIDToNewLabelID");
    v4[3] = (uint64_t)v0;
    getIMSPIRemapChatsWithLastAddressedLabelIDToNewLabelIDSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_18F91A3D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

Class initTUHandle()
{
  Class result;

  if (LoadTelephonyUtilities_loadPredicate != -1)
    dispatch_once(&LoadTelephonyUtilities_loadPredicate, &__block_literal_global_299);
  result = objc_getClass("TUHandle");
  classTUHandle = (uint64_t)result;
  getTUHandleClass[0] = (uint64_t (*)())TUHandleFunction;
  return result;
}

id TUHandleFunction()
{
  return (id)classTUHandle;
}

CNMutableContact *CLSPersonToCNContactTransform_block_invoke(uint64_t a1, void *a2)
{
  id v2;
  CNMutableContact *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  _QWORD v14[2];

  v14[1] = *MEMORY[0x1E0C80C00];
  v2 = a2;
  v3 = objc_alloc_init(CNMutableContact);
  objc_msgSend(v2, "givenName");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[CNMutableContact setGivenName:](v3, "setGivenName:", v4);

  objc_msgSend(v2, "middleName");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[CNMutableContact setMiddleName:](v3, "setMiddleName:", v5);

  objc_msgSend(v2, "familyName");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  -[CNMutableContact setFamilyName:](v3, "setFamilyName:", v6);

  objc_msgSend(v2, "phoneticGivenName");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  -[CNMutableContact setPhoneticGivenName:](v3, "setPhoneticGivenName:", v7);

  objc_msgSend(v2, "phoneticMiddleName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  -[CNMutableContact setPhoneticMiddleName:](v3, "setPhoneticMiddleName:", v8);

  objc_msgSend(v2, "phoneticFamilyName");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  -[CNMutableContact setPhoneticFamilyName:](v3, "setPhoneticFamilyName:", v9);

  objc_msgSend(v2, "emailAddress");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  if ((*(unsigned int (**)(void))(*MEMORY[0x1E0D13850] + 16))())
  {
    +[CNLabeledValue labeledValueWithLabel:value:](CNLabeledValue, "labeledValueWithLabel:value:", CFSTR("_$!<Other>!$_"), v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v14[0] = v11;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v14, 1);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    -[CNMutableContact setEmailAddresses:](v3, "setEmailAddresses:", v12);

  }
  return v3;
}

uint64_t CLSObjectIsPerson_block_invoke_2(uint64_t a1, void *a2)
{
  id v2;
  char isKindOfClass;

  v2 = a2;
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();

  return isKindOfClass & 1;
}

uint64_t CNLabeledValueToIdentifier_block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "identifier");
}

void OUTLINED_FUNCTION_0_4(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_fault_impl(a1, v9, OS_LOG_TYPE_FAULT, a4, &a9, 0xCu);
}

Class initAVTAvatarPhysicalizedPose()
{
  Class result;

  if (LoadAvatarKit_loadPredicate != -1)
    dispatch_once(&LoadAvatarKit_loadPredicate, &__block_literal_global_52_0);
  result = objc_getClass("AVTAvatarPhysicalizedPose");
  classAVTAvatarPhysicalizedPose = (uint64_t)result;
  getAVTAvatarPhysicalizedPoseClass[0] = (uint64_t (*)())AVTAvatarPhysicalizedPoseFunction;
  return result;
}

id AVTAvatarPhysicalizedPoseFunction()
{
  return (id)classAVTAvatarPhysicalizedPose;
}

id sPostalAddressTransform_block_invoke(uint64_t a1, void *a2)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  CNMutablePostalAddress *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  v2 = a2;
  objc_opt_class();
  v3 = v2;
  if (v3 && ((objc_opt_isKindOfClass() & 1) == 0 ? (v4 = 0) : (v4 = v3), v5 = v4, v3, v5))
  {
    v6 = objc_alloc_init(CNMutablePostalAddress);
    objc_msgSend(v5, "objectForKey:", *MEMORY[0x1E0DDCA48]);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    -[CNPostalAddress setStreet:](v6, "setStreet:", v7);

    objc_msgSend(v5, "objectForKey:", *MEMORY[0x1E0DDCA58]);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[CNPostalAddress setSubLocality:](v6, "setSubLocality:", v8);

    objc_msgSend(v5, "objectForKey:", *MEMORY[0x1E0DDCA20]);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    -[CNPostalAddress setCity:](v6, "setCity:", v9);

    objc_msgSend(v5, "objectForKey:", *MEMORY[0x1E0DDCA50]);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    -[CNPostalAddress setSubAdministrativeArea:](v6, "setSubAdministrativeArea:", v10);

    objc_msgSend(v5, "objectForKey:", *MEMORY[0x1E0DDCA40]);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    -[CNPostalAddress setState:](v6, "setState:", v11);

    objc_msgSend(v5, "objectForKey:", *MEMORY[0x1E0DDCA38]);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    -[CNPostalAddress setPostalCode:](v6, "setPostalCode:", v12);

    objc_msgSend(v5, "objectForKey:", *MEMORY[0x1E0DDCA28]);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    -[CNPostalAddress setCountry:](v6, "setCountry:", v13);

    objc_msgSend(v5, "objectForKey:", *MEMORY[0x1E0DDCA30]);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    -[CNPostalAddress setISOCountryCode:](v6, "setISOCountryCode:", v14);

    v15 = (void *)-[CNMutablePostalAddress copy](v6, "copy");
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0C99E38], "null");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v15;
}

id sSocialProfileTransform_block_invoke_2(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void (**v6)(_QWORD, _QWORD);
  void *v7;

  v2 = (void *)objc_msgSend(a2, "mutableCopy");
  +[CNVCardConstantsMapping vCardToCNSocialProfileConstantsMapping](CNVCardConstantsMapping, "vCardToCNSocialProfileConstantsMapping");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKeyedSubscript:", CFSTR("service"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "mappedConstant:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (v5)
    objc_msgSend(v2, "setObject:forKeyedSubscript:", v5, CFSTR("service"));
  +[CN socialProfileFromDictionaryTransform](CN, "socialProfileFromDictionaryTransform");
  v6 = (void (**)(_QWORD, _QWORD))objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *))v6)[2](v6, v2);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

id sInstantMessageAddressTransform_block_invoke_3(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void (**v6)(_QWORD, _QWORD);
  void *v7;

  v2 = (void *)objc_msgSend(a2, "mutableCopy");
  +[CNVCardConstantsMapping vCardToCNInstantMessageConstantsMapping](CNVCardConstantsMapping, "vCardToCNInstantMessageConstantsMapping");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKeyedSubscript:", CFSTR("service"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "mappedConstant:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (v5)
    objc_msgSend(v2, "setObject:forKeyedSubscript:", v5, CFSTR("service"));
  +[CN instantMessageAddressFromDictionaryTransform](CN, "instantMessageAddressFromDictionaryTransform");
  v6 = (void (**)(_QWORD, _QWORD))objc_claimAutoreleasedReturnValue();
  ((void (**)(_QWORD, void *))v6)[2](v6, v2);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

Class initCSSearchableItem()
{
  Class result;

  if (LoadCoreSpotlight_loadPredicate_0 != -1)
    dispatch_once(&LoadCoreSpotlight_loadPredicate_0, &__block_literal_global_17);
  result = objc_getClass("CSSearchableItem");
  classCSSearchableItem = (uint64_t)result;
  getCSSearchableItemClass[0] = (uint64_t (*)())CSSearchableItemFunction;
  return result;
}

id CSSearchableItemFunction()
{
  return (id)classCSSearchableItem;
}

uint64_t CNLinkedOnOrAfter()
{
  if (__CNLinkedOnOrAfterSimulateLinkedBefore)
    return 0;
  else
    return _CFExecutableLinkedOnOrAfter();
}

uint64_t CNLinkedOnOrAfterSimulateLinkedBefore(uint64_t result)
{
  __CNLinkedOnOrAfterSimulateLinkedBefore = result;
  return result;
}

void sub_18F927FAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  _Block_object_dispose(&a30, 8);
  _Unwind_Resume(a1);
}

void sub_18F928614(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  _Block_object_dispose(&a32, 8);
  _Unwind_Resume(a1);
}

void sub_18F92A098(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v8;
  va_list va;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  va_list va1;

  va_start(va1, a7);
  va_start(va, a7);
  v8 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_18F92A2C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_18F92A6BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v11;
  va_list va;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v11 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v9 - 112), 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_18F92A9B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F92AE08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F92AF30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F931C9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F934688(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

Class initDADConnection()
{
  Class result;

  if (LoadDataAccessExpress_loadPredicate != -1)
    dispatch_once(&LoadDataAccessExpress_loadPredicate, &__block_literal_global_79);
  result = objc_getClass("DADConnection");
  classDADConnection = (uint64_t)result;
  getDADConnectionClass = (uint64_t (*)(void))DADConnectionFunction;
  return result;
}

id DADConnectionFunction()
{
  return (id)classDADConnection;
}

id meCardSharingLogger()
{
  if (meCardSharingLogger_cn_once_token_0 != -1)
    dispatch_once(&meCardSharingLogger_cn_once_token_0, &__block_literal_global_30);
  return (id)meCardSharingLogger_cn_once_object_0;
}

void __meCardSharingLogger_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create("com.apple.contacts", "contactimagesharing");
  v1 = (void *)meCardSharingLogger_cn_once_object_0;
  meCardSharingLogger_cn_once_object_0 = (uint64_t)v0;

}

void sub_18F93C88C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;

  _Block_object_dispose(&a14, 8);
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 128), 8);
  _Unwind_Resume(a1);
}

BOOL sIsCurated_block_invoke_2(uint64_t a1, void *a2)
{
  void *v2;
  _BOOL8 v3;

  objc_msgSend(a2, "storeIdentifier");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2 == 0;

  return v3;
}

void sub_18F93D4D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t ___contactTestMatchingLabeledValueID_block_invoke(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  _QWORD v6[4];
  id v7;

  objc_msgSend(*(id *)(a1 + 32), "CNValueForContact:", a2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = ___contactTestMatchingLabeledValueID_block_invoke_2;
  v6[3] = &unk_1E29F91C0;
  v7 = *(id *)(a1 + 40);
  v4 = objc_msgSend(v3, "_cn_any:", v6);

  return v4;
}

uint64_t ___contactTestMatchingLabeledValueID_block_invoke_2(uint64_t a1, void *a2)
{
  void *v3;
  uint64_t v4;

  objc_msgSend(a2, "identifier");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isEqual:", *(_QWORD *)(a1 + 32));

  return v4;
}

uint64_t ___contactTestMatchingValue_block_invoke(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;

  objc_msgSend(*(id *)(a1 + 32), "CNValueForContact:", a2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isEqual:", *(_QWORD *)(a1 + 40));

  return v4;
}

uint64_t CNBridgeBoolResultAndErrorFromBlock(_QWORD *a1, uint64_t a2)
{
  CFTypeRef *p_cf;
  uint64_t v5;
  uint64_t v6;
  CFTypeRef cf;

  cf = 0;
  if (a1)
    p_cf = &cf;
  else
    p_cf = 0;
  v5 = (*(uint64_t (**)(uint64_t, CFTypeRef *))(a2 + 16))(a2, p_cf);
  v6 = v5;
  if (a1)
  {
    if ((v5 & 1) == 0)
    {
      +[CNErrorFactory errorForiOSABError:](CNErrorFactory, "errorForiOSABError:", cf);
      *a1 = (id)objc_claimAutoreleasedReturnValue();
      if (cf)
        CFRelease(cf);
    }
  }
  return v6;
}

void sub_18F93F540(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F9400CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _block_invoke()
{
  _BOOL4 v0;
  int IntValue;
  int v2;
  uint64_t v3;

  v0 = ABRecordGetIntValue() != 0;
  IntValue = ABRecordGetIntValue();
  if (IntValue)
    v2 = v0;
  else
    v2 = 1;
  v3 = v2 ^ 1u;
  if (v0 && IntValue == 0)
    return -1;
  else
    return v3;
}

CFComparisonResult _block_invoke_2(int a1, ABRecordRef record, const void *a3)
{
  ABPropertyID v4;
  const __CFDate *v5;
  const __CFDate *v6;
  CFComparisonResult v7;

  v4 = *MEMORY[0x1E0CF5F50];
  v5 = (const __CFDate *)ABRecordCopyValue(record, *MEMORY[0x1E0CF5F50]);
  v6 = (const __CFDate *)ABRecordCopyValue(a3, v4);
  v7 = CFDateCompare(v5, v6, 0);
  if (v5)
    CFRelease(v5);
  if (v6)
    CFRelease(v6);
  return v7;
}

void __PreferencesChanged(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  const __CFString *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[128];
  _BYTE v26[128];
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v2 = a2;
  v21 = 0u;
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  objc_msgSend(v2, "observerCountPerKey");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "allKeys");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v21, v26, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v22;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v22 != v7)
          objc_enumerationMutation(v4);
        objc_msgSend(v2, "willChangeValueForKey:", *(_QWORD *)(*((_QWORD *)&v21 + 1) + 8 * v8++));
      }
      while (v6 != v8);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v21, v26, 16);
    }
    while (v6);
  }

  objc_msgSend(v2, "flushCache");
  v9 = (const __CFString *)ABPeoplePickerPrefs();
  CFPreferencesAppSynchronize(v9);
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  objc_msgSend(v2, "observerCountPerKey", 0);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "allKeys");
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v17, v25, 16);
  if (v12)
  {
    v13 = v12;
    v14 = *(_QWORD *)v18;
    do
    {
      v15 = 0;
      do
      {
        if (*(_QWORD *)v18 != v14)
          objc_enumerationMutation(v11);
        objc_msgSend(v2, "didChangeValueForKey:", *(_QWORD *)(*((_QWORD *)&v17 + 1) + 8 * v15++));
      }
      while (v13 != v15);
      v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v17, v25, 16);
    }
    while (v13);
  }

  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "postNotificationName:object:", CFSTR("CNContactsUserDefaultsDidChangeNotification"), v2);

}

Class initECEmailAddress()
{
  Class result;

  if (LoadEmailCore_loadPredicate != -1)
    dispatch_once(&LoadEmailCore_loadPredicate, &__block_literal_global_32);
  result = objc_getClass("ECEmailAddress");
  classECEmailAddress = (uint64_t)result;
  getECEmailAddressClass[0] = (uint64_t (*)())ECEmailAddressFunction;
  return result;
}

id ECEmailAddressFunction()
{
  return (id)classECEmailAddress;
}

void sub_18F948E14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_18F9496F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_18F949938(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_18F949B68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 80), 8);
  _Unwind_Resume(a1);
}

CNAccount *sABCDContainerToCNAccount_block_invoke(uint64_t a1, void *a2)
{
  id v2;
  CNAccount *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  CNAccount *v8;

  v2 = a2;
  v3 = [CNAccount alloc];
  objc_msgSend(v2, "identifier");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "identifier");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v5, "componentsSeparatedByString:", CFSTR(":"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "firstObject");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = -[CNAccount initWithIdentifier:externalIdentifier:](v3, "initWithIdentifier:externalIdentifier:", v4, v7);

  return v8;
}

void sub_18F94B39C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getABSPublicABCNCompatibilityClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getABSPublicABCNCompatibilityClass_softClass;
  v7 = getABSPublicABCNCompatibilityClass_softClass;
  if (!getABSPublicABCNCompatibilityClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getABSPublicABCNCompatibilityClass_block_invoke;
    v3[3] = &unk_1E29F98A8;
    v3[4] = &v4;
    __getABSPublicABCNCompatibilityClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_18F94BA88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getABSPublicABCNCompatibilityClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;

  if (!AddressBookLibraryCore_frameworkLibrary)
  {
    AddressBookLibraryCore_frameworkLibrary = _sl_dlopen();
    if (!AddressBookLibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_6;
    }
  }
  while (1)
  {
    result = objc_getClass("ABSPublicABCNCompatibility");
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
      break;
LABEL_6:
    v3 = (void *)__getABSPublicABCNCompatibilityClass_block_invoke_cold_1();
    free(v3);
  }
  getABSPublicABCNCompatibilityClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sUsername_block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "username");
}

void sub_18F951A40(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_18F951A60(void *a1)
{
  objc_begin_catch(a1);
  JUMPOUT(0x18F9519ECLL);
}

void sub_18F9524AC(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_18F9524D0(void *a1)
{
  objc_begin_catch(a1);
  JUMPOUT(0x18F952458);
}

void sub_18F952828(void *a1)
{
  objc_begin_catch(a1);
  JUMPOUT(0x18F9527B0);
}

void sub_18F952C80(void *a1)
{
  objc_begin_catch(a1);
  JUMPOUT(0x18F952C20);
}

void sub_18F956CD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F959310(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  uint64_t v33;

  _Block_object_dispose((const void *)(v33 - 160), 8);
  _Block_object_dispose(&a33, 8);
  _Unwind_Resume(a1);
}

void populateMatchInfoFromMap_block_invoke(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v6;
  id v7;
  _QWORD v8[4];
  id v9;
  id v10;

  v7 = a2;
  v6 = a3;
  if (v7)
  {
    v8[0] = MEMORY[0x1E0C809B0];
    v8[1] = 3221225472;
    v8[2] = populateMatchInfoFromMap_block_invoke_2;
    v8[3] = &unk_1E29F9D98;
    v9 = v6;
    v10 = v7;
    objc_msgSend(a4, "enumerateObjectsUsingBlock:", v8);

  }
}

void populateMatchInfoFromMap_block_invoke_2(uint64_t a1, void *a2)
{
  ABPropertyID v3;
  id v4;
  ABRecordID RecordID;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;

  v3 = *MEMORY[0x1E0CF6090];
  v4 = a2;
  v11 = (id)ABRecordCopyValue(v4, v3);
  RecordID = ABRecordGetRecordID(v4);
  NSMapGet(*(NSMapTable **)(a1 + 32), (const void *)RecordID);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(*(id *)(a1 + 40), "objectForKey:", v11);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v7)
  {
    objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 40), "setObject:forKey:", v7, v11);
  }
  v8 = *MEMORY[0x1E0CF5C60];
  objc_msgSend(v7, "objectForKey:", *MEMORY[0x1E0CF5C60]);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, "unionSet:", v6);
  }
  else
  {
    v10 = (void *)objc_msgSend(v6, "mutableCopy");
    objc_msgSend(v7, "setObject:forKey:", v10, v8);
  }

}

void sWarnIgnoredHandle_block_invoke_3(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  int v4;
  id v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v2 = a2;
  +[CNContact os_log](CNContact, "os_log");
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = 138412290;
    v5 = v2;
    _os_log_impl(&dword_18F8BD000, v3, OS_LOG_TYPE_INFO, "Ignoring handle for batch fetch: %@", (uint8_t *)&v4, 0xCu);
  }

}

void sub_18F95A690(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F95A794(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F95A910(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F95ACE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F95B050(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  uint64_t v13;
  va_list va;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v13 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  v19 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v11 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_18F95B2DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_18F95B568(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_18F95B8A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_18F95C218(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_18F95D368(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  uint64_t v31;

  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v31 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_18F95D65C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_18F95D950(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_18F95E864(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F961A60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_18F96371C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;

  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_18F963988(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;

  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_18F9644BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F9647B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F964A8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_18F964F84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_18F9656F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F965914(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F965A98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F965F80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_18F966F64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

BOOL sIsSourceEligible_block_invoke()
{
  int IntValue;

  IntValue = ABRecordGetIntValue();
  return (ABRecordGetIntValue() & 0x1000000) == 0 && IntValue == 1;
}

void sub_18F967710(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_18F96791C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F967B10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F967D4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F967FC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F968198(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F968344(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F9684E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F9686B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F9688A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F968AAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F968F9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F96912C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F96929C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F969548(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t initCTFontCreateCopyWithSymbolicTraits(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  if (LoadCoreText_loadPredicate != -1)
    dispatch_once(&LoadCoreText_loadPredicate, &__block_literal_global_139_0);
  softLinkCTFontCreateCopyWithSymbolicTraits[0] = (uint64_t (*)())dlsym((void *)LoadCoreText_frameworkLibrary, "CTFontCreateCopyWithSymbolicTraits");
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, double))softLinkCTFontCreateCopyWithSymbolicTraits[0])(a1, a2, a3, a4, a5);
}

uint64_t initCTFontCreateUIFontForLanguage(uint64_t a1, uint64_t a2, double a3)
{
  if (LoadCoreText_loadPredicate != -1)
    dispatch_once(&LoadCoreText_loadPredicate, &__block_literal_global_139_0);
  softLinkCTFontCreateUIFontForLanguage = (uint64_t (*)())dlsym((void *)LoadCoreText_frameworkLibrary, "CTFontCreateUIFontForLanguage");
  return ((uint64_t (*)(uint64_t, uint64_t, double))softLinkCTFontCreateUIFontForLanguage)(a1, a2, a3);
}

void sub_18F96CCF0(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_18F96CD14(void *a1)
{
  objc_begin_catch(a1);
  JUMPOUT(0x18F96CC90);
}

id sTrustIfNonEmptyArray_block_invoke()
{
  int v0;
  void *v1;
  void *v2;
  void *v3;

  v0 = (*(uint64_t (**)(void))(*MEMORY[0x1E0D137F8] + 16))();
  v1 = (void *)MEMORY[0x1E0D13A68];
  if (v0)
  {
    +[CNErrorFactory errorWithCode:userInfo:](CNErrorFactory, "errorWithCode:userInfo:", 200, 0);
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "futureWithError:", v2);
    v3 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    objc_msgSend(MEMORY[0x1E0D13A68], "futureWithResult:", &unk_1E2A40038);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
  }
  return v3;
}

uint64_t sContactHasData_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v2;
  id v3;
  int v4;

  v2 = sContactHasData_block_invoke_cn_once_token_3;
  v3 = a2;
  if (v2 != -1)
    dispatch_once(&sContactHasData_block_invoke_cn_once_token_3, &__block_literal_global_52_2);
  v4 = objc_msgSend(v3, "isEqualIgnoringIdentifiers:", sContactHasData_block_invoke_cn_once_object_3);

  return v4 ^ 1u;
}

void sContactHasData_block_invoke_2()
{
  CNContact *v0;
  void *v1;

  v0 = objc_alloc_init(CNContact);
  v1 = (void *)sContactHasData_block_invoke_cn_once_object_3;
  sContactHasData_block_invoke_cn_once_object_3 = (uint64_t)v0;

}

uint64_t sPairContactWithNoMatchInfo_block_invoke_3(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(MEMORY[0x1E0D13AF8], "pairWithFirst:second:", a2, 0);
}

void sub_18F96F38C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class initCSSearchQueryContext()
{
  Class result;

  if (LoadCoreSpotlight_loadPredicate_1 != -1)
    dispatch_once(&LoadCoreSpotlight_loadPredicate_1, &__block_literal_global_67);
  result = objc_getClass("CSSearchQueryContext");
  classCSSearchQueryContext = (uint64_t)result;
  getCSSearchQueryContextClass[0] = (uint64_t (*)())CSSearchQueryContextFunction;
  return result;
}

id CSSearchQueryContextFunction()
{
  return (id)classCSSearchQueryContext;
}

Class initCSSearchQuery()
{
  Class result;

  if (LoadCoreSpotlight_loadPredicate_1 != -1)
    dispatch_once(&LoadCoreSpotlight_loadPredicate_1, &__block_literal_global_67);
  result = objc_getClass("CSSearchQuery");
  classCSSearchQuery = (uint64_t)result;
  getCSSearchQueryClass[0] = (uint64_t (*)())CSSearchQueryFunction;
  return result;
}

id CSSearchQueryFunction()
{
  return (id)classCSSearchQuery;
}

uint64_t sEmailHandle_block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "value");
}

id sPhoneHandle_block_invoke_2(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;

  objc_msgSend(a2, "value");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "formattedStringValue");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

void sub_18F973C1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_18F973E70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_18F974278(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_18F974588(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_18F9748C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_18F974C14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_18F974E74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v12;
  va_list va;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v12 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_18F9753D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v12;
  va_list va;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v12 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_18F975780(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_18F9757A0(void *a1)
{
  objc_begin_catch(a1);
  JUMPOUT(0x18F97571CLL);
}

void sub_18F975C14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_18F975E2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_18F9761A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_18F976400(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_18F976620(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_18F976C14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  uint64_t v29;

  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_18F977028(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F9772E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F977758(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F9779F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_18F977C50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_18F978018(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_18F978260(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_18F978570(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_18F97ABC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v9;
  va_list va;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  va_list va1;

  va_start(va1, a8);
  va_start(va, a8);
  v9 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_18F97B544(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F97B9C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F97BDB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F97C2DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void CNChangesNotifierCFNotificationCenterCallback(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  id v8;

  v7 = (void *)MEMORY[0x19400675C]();
  v8 = a2;
  if ((objc_msgSend(v8, "forwardsSelfGeneratedDistributedSaveNotifications") & 1) != 0
    || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0)
    || (objc_msgSend((id)ABGetProcessDistributedNotificationIdentifier(), "isEqualToString:", a4) & 1) == 0)
  {
    objc_msgSend(v8, "receiveExternalNotificationName:", a3);
  }

  objc_autoreleasePoolPop(v7);
}

Class initAVTAvatarRecordRendering()
{
  Class result;

  if (LoadAvatarPersistence_loadPredicate != -1)
    dispatch_once(&LoadAvatarPersistence_loadPredicate, &__block_literal_global_107);
  result = objc_getClass("AVTAvatarRecordRendering");
  classAVTAvatarRecordRendering = (uint64_t)result;
  getAVTAvatarRecordRenderingClass[0] = (uint64_t (*)())AVTAvatarRecordRenderingFunction;
  return result;
}

id AVTAvatarRecordRenderingFunction()
{
  return (id)classAVTAvatarRecordRendering;
}

Class initAVTAvatarRecordSerializer()
{
  Class result;

  if (LoadAvatarPersistence_loadPredicate != -1)
    dispatch_once(&LoadAvatarPersistence_loadPredicate, &__block_literal_global_107);
  result = objc_getClass("AVTAvatarRecordSerializer");
  classAVTAvatarRecordSerializer = (uint64_t)result;
  getAVTAvatarRecordSerializerClass[0] = (uint64_t (*)())AVTAvatarRecordSerializerFunction;
  return result;
}

id AVTAvatarRecordSerializerFunction()
{
  return (id)classAVTAvatarRecordSerializer;
}

Class initAVTAvatarPhysicalizedPose_0()
{
  Class result;

  if (LoadAvatarKit_loadPredicate_0 != -1)
    dispatch_once(&LoadAvatarKit_loadPredicate_0, &__block_literal_global_111);
  result = objc_getClass("AVTAvatarPhysicalizedPose");
  classAVTAvatarPhysicalizedPose_0 = (uint64_t)result;
  getAVTAvatarPhysicalizedPoseClass_0[0] = (uint64_t (*)())AVTAvatarPhysicalizedPoseFunction_0;
  return result;
}

id AVTAvatarPhysicalizedPoseFunction_0()
{
  return (id)classAVTAvatarPhysicalizedPose_0;
}

id sPostalAddressTransform_block_invoke_0(uint64_t a1, void *a2)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  v2 = a2;
  objc_opt_class();
  v3 = v2;
  if (v3)
  {
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v4 = v3;
    else
      v4 = 0;
    v5 = v4;
  }
  else
  {
    v5 = 0;
  }

  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "street");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v7, *MEMORY[0x1E0DDCA48]);

  objc_msgSend(v5, "subLocality");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v8, *MEMORY[0x1E0DDCA58]);

  objc_msgSend(v5, "city");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v9, *MEMORY[0x1E0DDCA20]);

  objc_msgSend(v5, "subAdministrativeArea");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v10, *MEMORY[0x1E0DDCA50]);

  objc_msgSend(v5, "state");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v11, *MEMORY[0x1E0DDCA40]);

  objc_msgSend(v5, "postalCode");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v12, *MEMORY[0x1E0DDCA38]);

  objc_msgSend(v5, "country");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v13, *MEMORY[0x1E0DDCA28]);

  objc_msgSend(v5, "ISOCountryCode");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v14, *MEMORY[0x1E0DDCA30]);

  return v6;
}

id sActivityAlertKeyTransform_block_invoke_2(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  id v4;

  v2 = a2;
  if (objc_msgSend(CFSTR("callAlert"), "isEqualToString:", v2))
  {
    v3 = (void *)*MEMORY[0x1E0DDC868];
  }
  else if (objc_msgSend(CFSTR("textAlert"), "isEqualToString:", v2))
  {
    v3 = (void *)*MEMORY[0x1E0DDC880];
  }
  else
  {
    v3 = v2;
  }
  v4 = v3;

  return v4;
}

id sActivityAlertValueTransform_block_invoke_3(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v2 = a2;
  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "sound");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "_cn_setNonNilObject:forKey:", v4, *MEMORY[0x1E0DDC878]);

  objc_msgSend(v2, "vibration");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "_cn_setNonNilObject:forKey:", v5, *MEMORY[0x1E0DDC888]);

  if (objc_msgSend(v2, "ignoreMute"))
    objc_msgSend(v3, "_cn_setNonNilObject:forKey:", CFSTR("YES"), *MEMORY[0x1E0DDC870]);
  objc_msgSend(v2, "userInfo");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (v6)
    objc_msgSend(v3, "addEntriesFromDictionary:", v6);

  return v3;
}

void sub_18F984DDC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_18F985704(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v1);
  objc_destroyWeak(v2);
  objc_destroyWeak((id *)(v3 - 112));
  _Unwind_Resume(a1);
}

Class initAVTStickerConfiguration()
{
  Class result;

  if (LoadAvatarKit_loadPredicate_1 != -1)
    dispatch_once(&LoadAvatarKit_loadPredicate_1, &__block_literal_global_28);
  result = objc_getClass("AVTStickerConfiguration");
  classAVTStickerConfiguration = (uint64_t)result;
  getAVTStickerConfigurationClass = (uint64_t (*)())AVTStickerConfigurationFunction;
  return result;
}

id AVTStickerConfigurationFunction()
{
  return (id)classAVTStickerConfiguration;
}

id initkAVTStickerPackPoses()
{
  id *v0;

  if (LoadAvatarKit_loadPredicate_1 != -1)
    dispatch_once(&LoadAvatarKit_loadPredicate_1, &__block_literal_global_28);
  v0 = (id *)dlsym((void *)LoadAvatarKit_frameworkLibrary_1, "kAVTStickerPackPoses");
  objc_storeStrong((id *)&constantkAVTStickerPackPoses, *v0);
  getkAVTStickerPackPoses[0] = (uint64_t (*)())kAVTStickerPackPosesFunction;
  return (id)constantkAVTStickerPackPoses;
}

id kAVTStickerPackPosesFunction()
{
  return (id)constantkAVTStickerPackPoses;
}

uint64_t initAVTUIShowPrereleaseStickerPack_once()
{
  if (LoadAvatarPersistence_loadPredicate_0 != -1)
    dispatch_once(&LoadAvatarPersistence_loadPredicate_0, &__block_literal_global_32_0);
  softLinkAVTUIShowPrereleaseStickerPack_once[0] = (uint64_t (*)())dlsym((void *)LoadAvatarPersistence_frameworkLibrary_0, "AVTUIShowPrereleaseStickerPack_once");
  return softLinkAVTUIShowPrereleaseStickerPack_once[0]();
}

id initkAVTStickerPackPosesPrerelease()
{
  id *v0;

  if (LoadAvatarKit_loadPredicate_1 != -1)
    dispatch_once(&LoadAvatarKit_loadPredicate_1, &__block_literal_global_28);
  v0 = (id *)dlsym((void *)LoadAvatarKit_frameworkLibrary_1, "kAVTStickerPackPosesPrerelease");
  objc_storeStrong((id *)&constantkAVTStickerPackPosesPrerelease, *v0);
  getkAVTStickerPackPosesPrerelease[0] = (uint64_t (*)())kAVTStickerPackPosesPrereleaseFunction;
  return (id)constantkAVTStickerPackPosesPrerelease;
}

id kAVTStickerPackPosesPrereleaseFunction()
{
  return (id)constantkAVTStickerPackPosesPrerelease;
}

Class initAVTPAvatarStore()
{
  Class result;

  if (LoadAvatarPersistence_loadPredicate_0 != -1)
    dispatch_once(&LoadAvatarPersistence_loadPredicate_0, &__block_literal_global_32_0);
  result = objc_getClass("AVTPAvatarStore");
  classAVTPAvatarStore = (uint64_t)result;
  getAVTPAvatarStoreClass[0] = (uint64_t (*)())AVTPAvatarStoreFunction;
  return result;
}

id AVTPAvatarStoreFunction()
{
  return (id)classAVTPAvatarStore;
}

Class initAVTAvatarFetchRequest()
{
  Class result;

  if (LoadAvatarPersistence_loadPredicate_0 != -1)
    dispatch_once(&LoadAvatarPersistence_loadPredicate_0, &__block_literal_global_32_0);
  result = objc_getClass("AVTAvatarFetchRequest");
  classAVTAvatarFetchRequest = (uint64_t)result;
  getAVTAvatarFetchRequestClass[0] = (uint64_t (*)())AVTAvatarFetchRequestFunction;
  return result;
}

id AVTAvatarFetchRequestFunction()
{
  return (id)classAVTAvatarFetchRequest;
}

void sub_18F987470(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_18F987BE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_18F987E10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_18F98EF98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F9926EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sIsMultiValueContactProperty_block_invoke(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;

  v2 = a2;
  +[CN contactPropertiesByKey](CN, "contactPropertiesByKey");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKeyedSubscript:", v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v5 = objc_msgSend(v4, "isMultiValue");
  return v5;
}

void sub_18F997558(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_18F99883C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_18F999348(_Unwind_Exception *a1)
{
  _Block_object_dispose(&STACK[0x218], 8);
  _Unwind_Resume(a1);
}

uint64_t _block_invoke_0(uint64_t a1, void *a2, void *a3)
{
  id v4;
  _QWORD *v5;
  _QWORD *v6;
  void *v7;
  void *v8;
  char v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t v19;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[128];
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v4 = a2;
  v5 = a3;
  v6 = v5;
  if (v5)
    v5 = (_QWORD *)v5[4];
  objc_msgSend(v5, "identifier");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "identifier");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v7, "isEqual:", v8);

  if ((v9 & 1) != 0)
  {
    v10 = 1;
  }
  else if (v6 && *((_BYTE *)v6 + 8) || !objc_msgSend(v4, "isUnified"))
  {
    v10 = 0;
  }
  else
  {
    v23 = 0u;
    v24 = 0u;
    v21 = 0u;
    v22 = 0u;
    objc_msgSend(v4, "linkedContacts", 0);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
    if (v10)
    {
      v12 = *(_QWORD *)v22;
      do
      {
        v13 = 0;
        do
        {
          if (*(_QWORD *)v22 != v12)
            objc_enumerationMutation(v11);
          v14 = *(void **)(*((_QWORD *)&v21 + 1) + 8 * v13);
          if (v6)
            v15 = (void *)v6[4];
          else
            v15 = 0;
          v16 = v15;
          objc_msgSend(v16, "identifier");
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v14, "identifier");
          v18 = (void *)objc_claimAutoreleasedReturnValue();

          LOBYTE(v16) = objc_msgSend(v17, "isEqual:", v18);
          if ((v16 & 1) != 0)
          {
            v10 = 1;
            goto LABEL_24;
          }
          ++v13;
        }
        while (v10 != v13);
        v19 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
        v10 = v19;
      }
      while (v19);
    }
LABEL_24:

  }
  return v10;
}

void sub_18F9999A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F999AD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F99B868(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sPreferredForImage_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v4;
  int v5;
  int v6;

  v4 = a3;
  v5 = objc_msgSend(a2, "isPreferredForImage");
  v6 = objc_msgSend(v4, "isPreferredForImage");

  if (v6 | v5 ^ 1)
    return v6 & (v5 ^ 1u);
  else
    return -1;
}

uint64_t CNContactToIdentifier_block_invoke_3(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "identifier");
}

uint64_t CNContactIsUnified_block_invoke_4(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "isUnified");
}

void sub_18F99C310(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getLNSpotlightAppEntityMapperClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;

  if (!LinkServicesLibraryCore_frameworkLibrary)
  {
    LinkServicesLibraryCore_frameworkLibrary = _sl_dlopen();
    if (!LinkServicesLibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_6;
    }
  }
  while (1)
  {
    result = objc_getClass("LNSpotlightAppEntityMapper");
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
      break;
LABEL_6:
    v3 = (void *)__getLNSpotlightAppEntityMapperClass_block_invoke_cold_1();
    free(v3);
  }
  getLNSpotlightAppEntityMapperClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_18F99D288(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sUsername_block_invoke_0(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "username");
}

void sub_18F9A014C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F9A0570(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getIMNicknameProviderClass_block_invoke(uint64_t a1)
{
  Class result;

  if (!IMCoreLibraryCore_frameworkLibrary_0)
    IMCoreLibraryCore_frameworkLibrary_0 = _sl_dlopen();
  result = objc_getClass("IMNicknameProvider");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  getIMNicknameProviderClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getIMNicknameControllerClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;

  if (!IMCoreLibraryCore_frameworkLibrary_0)
  {
    IMCoreLibraryCore_frameworkLibrary_0 = _sl_dlopen();
    if (!IMCoreLibraryCore_frameworkLibrary_0)
    {
      abort_report_np();
      goto LABEL_6;
    }
  }
  while (1)
  {
    result = objc_getClass("IMNicknameController");
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
      break;
LABEL_6:
    v3 = (void *)__getIMNicknameControllerClass_block_invoke_cold_1();
    free(v3);
  }
  getIMNicknameControllerClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_18F9A1AEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18F9A2DDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getCRSearchQueryClass_block_invoke(uint64_t a1)
{
  Class result;
  uint64_t v3;

  CoreRecentsLibrary();
  result = objc_getClass("CRSearchQuery");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getCRSearchQueryClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = __getCRSearchQueryClass_block_invoke_cold_1();
    return (Class)__getCRSearchPredicateClass_block_invoke(v3);
  }
  return result;
}

CNiOSABContainersForAccountExternalIdentifierPredicate *__getCRSearchPredicateClass_block_invoke(uint64_t a1)
{
  CNiOSABContainersForAccountExternalIdentifierPredicate *result;
  CNiOSABContainersForAccountExternalIdentifierPredicate *v3;
  SEL v4;
  id v5;

  CoreRecentsLibrary();
  result = (CNiOSABContainersForAccountExternalIdentifierPredicate *)objc_getClass("CRSearchPredicate");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getCRSearchPredicateClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    __getCRSearchPredicateClass_block_invoke_cold_1();
    return -[CNiOSABContainersForAccountExternalIdentifierPredicate initWithPredicate:](v3, v4, v5);
  }
  return result;
}

id sOrganizationWithPerson_block_invoke(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  __CFString *v9;
  void *v10;

  v2 = a2;
  objc_msgSend(v2, "contact");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "contactType");

  if (v4 == 1)
  {
    objc_msgSend(v2, "contact");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "organizationName");
    v6 = (void *)objc_claimAutoreleasedReturnValue();

    +[CNContactVCardSummary defaultNameFormatter](CNContactVCardSummary, "defaultNameFormatter");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "contact");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "stringFromContact:", v8);
    v9 = (__CFString *)objc_claimAutoreleasedReturnValue();

    if (((*(uint64_t (**)(void))(*MEMORY[0x1E0D13848] + 16))() & 1) == 0
      && -[__CFString isEqualToString:](v9, "isEqualToString:", v6))
    {

      v9 = &stru_1E29FF900;
    }
    objc_msgSend(MEMORY[0x1E0D13AF8], "pairWithFirst:second:", v6, v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v10 = 0;
  }

  return v10;
}

id sPersonWithOrganization_block_invoke_2(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  __CFString *v7;
  void *v8;

  v2 = a2;
  +[CNContactVCardSummary defaultNameFormatter](CNContactVCardSummary, "defaultNameFormatter");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "contact");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "stringFromContact:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v2, "contact");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v6, "organizationName");
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue();

  if (((*(uint64_t (**)(void))(*MEMORY[0x1E0D13848] + 16))() & 1) == 0
    && -[__CFString isEqualToString:](v7, "isEqualToString:", v5))
  {

    v7 = &stru_1E29FF900;
  }
  objc_msgSend(MEMORY[0x1E0D13AF8], "pairWithFirst:second:", v5, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

void sub_18F9A7298(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F9A757C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id _block_invoke_1(uint64_t a1, void *a2)
{
  return a2;
}

id _block_invoke_2_0(uint64_t a1, void *a2)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;

  v2 = a2;
  objc_opt_class();
  v3 = v2;
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v4 = v3;
  else
    v4 = 0;
  v5 = v4;

  if (v5)
  {
    +[CNPhoneNumber phoneNumberWithStringValue:](CNPhoneNumber, "phoneNumberWithStringValue:", v5);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v6 = 0;
  }

  return v6;
}

id _block_invoke_3(uint64_t a1, void *a2)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;

  v2 = a2;
  objc_opt_class();
  v3 = v2;
  if (v3)
  {
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v4 = v3;
    else
      v4 = 0;
    v5 = v4;
  }
  else
  {
    v5 = 0;
  }

  objc_msgSend(v5, "stringValue");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

CNSocialProfile *_block_invoke_4(uint64_t a1, void *a2)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  CNSocialProfile *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  CNSocialProfile *v14;

  v2 = a2;
  objc_opt_class();
  v3 = v2;
  if (v3)
  {
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v4 = v3;
    else
      v4 = 0;
    v5 = v4;
  }
  else
  {
    v5 = 0;
  }

  v6 = [CNSocialProfile alloc];
  objc_msgSend(v5, "objectForKey:", CFSTR("urlString"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "objectForKey:", CFSTR("username"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "objectForKey:", CFSTR("userIdentifier"));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "objectForKey:", CFSTR("service"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "objectForKey:", CFSTR("displayname"));
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "objectForKey:", CFSTR("teamIdentifier"));
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "objectForKey:", CFSTR("bundleIdentifiers"));
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = -[CNSocialProfile initWithUrlString:username:userIdentifier:service:displayname:teamIdentifier:bundleIdentifiers:](v6, "initWithUrlString:username:userIdentifier:service:displayname:teamIdentifier:bundleIdentifiers:", v7, v8, v9, v10, v11, v12, v13);

  return v14;
}

id _block_invoke_5(uint64_t a1, void *a2)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  v2 = a2;
  objc_opt_class();
  v3 = v2;
  if (v3)
  {
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v4 = v3;
    else
      v4 = 0;
    v5 = v4;
  }
  else
  {
    v5 = 0;
  }

  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "urlString");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v7, CFSTR("urlString"));

  objc_msgSend(v5, "username");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v8, CFSTR("username"));

  objc_msgSend(v5, "userIdentifier");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v9, CFSTR("userIdentifier"));

  objc_msgSend(v5, "service");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v10, CFSTR("service"));

  objc_msgSend(v5, "displayname");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v11, CFSTR("displayname"));

  objc_msgSend(v5, "teamIdentifier");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v12, CFSTR("teamIdentifier"));

  objc_msgSend(v5, "bundleIdentifiers");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v13, CFSTR("bundleIdentifiers"));

  return v6;
}

id _block_invoke_6(uint64_t a1, void *a2)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  v2 = a2;
  objc_opt_class();
  v3 = v2;
  if (v3)
  {
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v4 = v3;
    else
      v4 = 0;
    v5 = v4;
  }
  else
  {
    v5 = 0;
  }

  v6 = objc_alloc(MEMORY[0x1E0D13A58]);
  objc_msgSend(v5, "urlString");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "username");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "userIdentifier");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "service");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "displayname");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = (void *)objc_msgSend(v6, "initWithUrlString:username:userIdentifier:service:displayName:", v7, v8, v9, v10, v11);

  return v12;
}

CNInstantMessageAddress *_block_invoke_7(uint64_t a1, void *a2)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  CNInstantMessageAddress *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  CNInstantMessageAddress *v12;

  v2 = a2;
  objc_opt_class();
  v3 = v2;
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v4 = v3;
  else
    v4 = 0;
  v5 = v4;

  if (v5)
  {
    v6 = [CNInstantMessageAddress alloc];
    objc_msgSend(v5, "objectForKey:", CFSTR("username"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "objectForKey:", CFSTR("userIdentifier"));
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "objectForKey:", CFSTR("service"));
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "objectForKey:", CFSTR("teamIdentifier"));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "objectForKey:", CFSTR("bundleIdentifiers"));
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = -[CNInstantMessageAddress initWithUsername:userIdentifier:service:teamIdentifier:bundleIdentifiers:](v6, "initWithUsername:userIdentifier:service:teamIdentifier:bundleIdentifiers:", v7, v8, v9, v10, v11);

  }
  else
  {
    objc_msgSend(MEMORY[0x1E0C99E38], "null");
    v12 = (CNInstantMessageAddress *)objc_claimAutoreleasedReturnValue();
  }

  return v12;
}

id _block_invoke_8(uint64_t a1, void *a2)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;

  v2 = a2;
  objc_opt_class();
  v3 = v2;
  if (v3)
  {
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v4 = v3;
    else
      v4 = 0;
    v5 = v4;
  }
  else
  {
    v5 = 0;
  }

  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "username");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v7, CFSTR("username"));

  objc_msgSend(v5, "userIdentifier");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v8, CFSTR("userIdentifier"));

  objc_msgSend(v5, "service");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v9, CFSTR("service"));

  objc_msgSend(v5, "teamIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v10, CFSTR("teamIdentifier"));

  objc_msgSend(v5, "bundleIdentifiers");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v11, CFSTR("bundleIdentifiers"));

  return v6;
}

id _block_invoke_9(uint64_t a1, void *a2)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  CNMutablePostalAddress *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  v2 = a2;
  objc_opt_class();
  v3 = v2;
  if (v3 && ((objc_opt_isKindOfClass() & 1) == 0 ? (v4 = 0) : (v4 = v3), v5 = v4, v3, v5))
  {
    v6 = objc_alloc_init(CNMutablePostalAddress);
    objc_msgSend(v5, "_cn_objectForKey:ofClass:", CFSTR("street"), objc_opt_class());
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    -[CNPostalAddress setStreet:](v6, "setStreet:", v7);

    objc_msgSend(v5, "_cn_objectForKey:ofClass:", CFSTR("subLocality"), objc_opt_class());
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[CNPostalAddress setSubLocality:](v6, "setSubLocality:", v8);

    objc_msgSend(v5, "_cn_objectForKey:ofClass:", CFSTR("city"), objc_opt_class());
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    -[CNPostalAddress setCity:](v6, "setCity:", v9);

    objc_msgSend(v5, "_cn_objectForKey:ofClass:", CFSTR("subAdministrativeArea"), objc_opt_class());
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    -[CNPostalAddress setSubAdministrativeArea:](v6, "setSubAdministrativeArea:", v10);

    objc_msgSend(v5, "_cn_objectForKey:ofClass:", CFSTR("state"), objc_opt_class());
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    -[CNPostalAddress setState:](v6, "setState:", v11);

    objc_msgSend(v5, "_cn_objectForKey:ofClass:", CFSTR("postalCode"), objc_opt_class());
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    -[CNPostalAddress setPostalCode:](v6, "setPostalCode:", v12);

    objc_msgSend(v5, "_cn_objectForKey:ofClass:", CFSTR("country"), objc_opt_class());
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    -[CNPostalAddress setCountry:](v6, "setCountry:", v13);

    objc_msgSend(v5, "_cn_objectForKey:ofClass:", CFSTR("ISOCountryCode"), objc_opt_class());
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    -[CNPostalAddress setISOCountryCode:](v6, "setISOCountryCode:", v14);

    objc_msgSend(v5, "_cn_objectForKey:ofClass:", CFSTR("formattedAddress"), objc_opt_class());
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    -[CNPostalAddress setFormattedAddress:](v6, "setFormattedAddress:", v15);

    v16 = (void *)-[CNMutablePostalAddress copy](v6, "copy");
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0C99E38], "null");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v16;
}

id _block_invoke_10(uint64_t a1, void *a2)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  v2 = a2;
  objc_opt_class();
  v3 = v2;
  if (v3)
  {
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v4 = v3;
    else
      v4 = 0;
    v5 = v4;
  }
  else
  {
    v5 = 0;
  }

  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "street");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v7, CFSTR("street"));

  objc_msgSend(v5, "subLocality");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v8, CFSTR("subLocality"));

  objc_msgSend(v5, "city");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v9, CFSTR("city"));

  objc_msgSend(v5, "subAdministrativeArea");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v10, CFSTR("subAdministrativeArea"));

  objc_msgSend(v5, "state");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v11, CFSTR("state"));

  objc_msgSend(v5, "postalCode");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v12, CFSTR("postalCode"));

  objc_msgSend(v5, "country");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v13, CFSTR("country"));

  objc_msgSend(v5, "ISOCountryCode");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v14, CFSTR("ISOCountryCode"));

  objc_msgSend(v5, "formattedAddress");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v15, CFSTR("formattedAddress"));

  return v6;
}

id _block_invoke_11(uint64_t a1, void *a2)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;

  v2 = a2;
  objc_opt_class();
  v3 = v2;
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v4 = v3;
  else
    v4 = 0;
  v5 = v4;

  if (v5)
  {
    +[CNContactRelation contactRelationWithName:](CNContactRelation, "contactRelationWithName:", v5);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v6 = 0;
  }

  return v6;
}

id _block_invoke_12(uint64_t a1, void *a2)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;

  v2 = a2;
  objc_opt_class();
  v3 = v2;
  if (v3)
  {
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v4 = v3;
    else
      v4 = 0;
    v5 = v4;
  }
  else
  {
    v5 = 0;
  }

  objc_msgSend(v5, "name");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id _block_invoke_13(uint64_t a1, void *a2)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  _QWORD v9[4];
  id v10;

  v2 = a2;
  objc_opt_class();
  v3 = v2;
  if (v3 && ((objc_opt_isKindOfClass() & 1) == 0 ? (v4 = 0) : (v4 = v3), v5 = v4, v3, v5))
  {
    v6 = objc_alloc_init(MEMORY[0x1E0C99D78]);
    v9[0] = MEMORY[0x1E0C809B0];
    v9[1] = 3221225472;
    v9[2] = _block_invoke_14;
    v9[3] = &unk_1E29FD4E0;
    v7 = v6;
    v10 = v7;
    objc_msgSend(v5, "enumerateKeysAndObjectsUsingBlock:", v9);

  }
  else
  {
    objc_msgSend(MEMORY[0x1E0C99E38], "null");
    v7 = (id)objc_claimAutoreleasedReturnValue();
  }

  return v7;
}

uint64_t _block_invoke_14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return objc_msgSend(*(id *)(a1 + 32), "setValue:forKey:", a3, a2);
}

id _block_invoke_15(uint64_t a1, void *a2)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;

  v2 = a2;
  objc_opt_class();
  v3 = v2;
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v4 = v3;
  else
    v4 = 0;
  v5 = v4;

  objc_msgSend(MEMORY[0x1E0CB3960], "termOfAddressFromStringRepresentation:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v6)
  {
    objc_msgSend(MEMORY[0x1E0D13A28], "decryptAddressingGrammarString:", v5);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v6;
}

id _block_invoke_16(uint64_t a1, void *a2)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;

  v2 = a2;
  objc_opt_class();
  v3 = v2;
  if (v3)
  {
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v4 = v3;
    else
      v4 = 0;
    v5 = v4;
  }
  else
  {
    v5 = 0;
  }

  objc_msgSend(v5, "stringRepresentation");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id _block_invoke_17(uint64_t a1, void *a2)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;

  v2 = a2;
  objc_opt_class();
  v3 = v2;
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v4 = v3;
  else
    v4 = 0;
  v5 = v4;

  objc_msgSend(MEMORY[0x1E0D13A28], "decryptAddressingGrammarString:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id _block_invoke_18(uint64_t a1, void *a2)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;

  v2 = a2;
  objc_opt_class();
  v3 = v2;
  if (v3)
  {
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v4 = v3;
    else
      v4 = 0;
    v5 = v4;
  }
  else
  {
    v5 = 0;
  }

  objc_msgSend(MEMORY[0x1E0D13A28], "encryptAddressingGrammarAsString:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

CNWallpaper *_block_invoke_19(uint64_t a1, void *a2)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  CNWallpaper *v6;

  v2 = a2;
  objc_opt_class();
  v3 = v2;
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v4 = v3;
  else
    v4 = 0;
  v5 = v4;

  v6 = -[CNWallpaper initWithDataRepresentation:]([CNWallpaper alloc], "initWithDataRepresentation:", v5);
  return v6;
}

CNSensitiveContentConfiguration *_block_invoke_20(uint64_t a1, void *a2)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  CNSensitiveContentConfiguration *v6;

  v2 = a2;
  objc_opt_class();
  v3 = v2;
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v4 = v3;
  else
    v4 = 0;
  v5 = v4;

  v6 = -[CNSensitiveContentConfiguration initWithDataRepresentation:]([CNSensitiveContentConfiguration alloc], "initWithDataRepresentation:", v5);
  return v6;
}

uint64_t ABMultiValueGetIndexForGUID(const void *a1, const void *a2)
{
  uint64_t v4;
  const void *v5;
  const void *v6;

  if (ABMultiValueGetCount(a1) < 1)
    return -1;
  v4 = 0;
  while (1)
  {
    v5 = (const void *)ABMultiValueCopyUUIDAtIndex();
    v6 = v5;
    if (v5)
      CFAutorelease(v5);
    if (CFEqual(v6, a2))
      break;
    if (++v4 >= ABMultiValueGetCount(a1))
      return -1;
  }
  return v4;
}

void sub_18F9B2098(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F9B2404(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getCRSearchQueryClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getCRSearchQueryClass_softClass_0;
  v7 = getCRSearchQueryClass_softClass_0;
  if (!getCRSearchQueryClass_softClass_0)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getCRSearchQueryClass_block_invoke_0;
    v3[3] = &unk_1E29F98A8;
    v3[4] = &v4;
    __getCRSearchQueryClass_block_invoke_0((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_18F9B24D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getCRSearchPredicateClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getCRSearchPredicateClass_softClass_0;
  v7 = getCRSearchPredicateClass_softClass_0;
  if (!getCRSearchPredicateClass_softClass_0)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getCRSearchPredicateClass_block_invoke_0;
    v3[3] = &unk_1E29F98A8;
    v3[4] = &v4;
    __getCRSearchPredicateClass_block_invoke_0((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_18F9B2588(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class initECEmailAddress_0()
{
  Class result;

  if (LoadEmailCore_loadPredicate_0 != -1)
    dispatch_once(&LoadEmailCore_loadPredicate_0, &__block_literal_global_48_1);
  result = objc_getClass("ECEmailAddress");
  classECEmailAddress_0 = (uint64_t)result;
  getECEmailAddressClass_0[0] = (uint64_t (*)())ECEmailAddressFunction_0;
  return result;
}

id ECEmailAddressFunction_0()
{
  return (id)classECEmailAddress_0;
}

Class __getCRSearchQueryClass_block_invoke_0(uint64_t a1)
{
  Class result;
  uint64_t v3;

  CoreRecentsLibrary_0();
  result = objc_getClass("CRSearchQuery");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getCRSearchQueryClass_softClass_0 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = __getCRSearchQueryClass_block_invoke_cold_1();
    return (Class)__getCRSearchPredicateClass_block_invoke_0(v3);
  }
  return result;
}

NSString *__getCRSearchPredicateClass_block_invoke_0(uint64_t a1)
{
  NSString *result;
  id v3;
  SEL v4;
  NSString *v5;

  CoreRecentsLibrary_0();
  result = (NSString *)objc_getClass("CRSearchPredicate");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getCRSearchPredicateClass_softClass_0 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    __getCRSearchPredicateClass_block_invoke_cold_1();
    return +[CNPostalAddress localizedStringForKey:](v3, v4, v5);
  }
  return result;
}

_QWORD *CNSetError(_QWORD *result, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  if (result)
  {
    v3 = result;
    +[CNErrorFactory errorWithCode:userInfo:](CNErrorFactory, "errorWithCode:userInfo:", a2, a3);
    result = (id)objc_claimAutoreleasedReturnValue();
    *v3 = result;
  }
  return result;
}

uint64_t CNSuggestionsReloadForSelectedRecipientsEnabled()
{
  return _os_feature_enabled_impl();
}

uint64_t CNDSDSUnknownNumberSIMLinePickerEnabled()
{
  return _os_feature_enabled_impl();
}

uint64_t CNBackgroundColorsCachingEnabled()
{
  return _os_feature_enabled_impl();
}

uint64_t CNLimitedAccessEnabled()
{
  return _os_feature_enabled_impl();
}

uint64_t CNFavoritesPhoneNumbersEqual(void *a1, void *a2)
{
  uint64_t (__cdecl *v3)();
  id v4;
  id v5;
  const void *v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;

  v3 = softLinkCPPhoneNumberCopyHomeCountryCode[0];
  v4 = a2;
  v5 = a1;
  v6 = (const void *)v3();
  v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))softLinkCPPhoneNumbersEqual[0];
  v8 = objc_retainAutorelease(v5);
  v9 = objc_msgSend(v8, "UTF8String");

  v10 = objc_retainAutorelease(v4);
  v11 = objc_msgSend(v10, "UTF8String");

  v12 = v7(v9, v11, (uint64_t)v6);
  if (v6)
    CFRelease(v6);
  return v12;
}

void sub_18F9B5B58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,char a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,char a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a66;

  _Block_object_dispose(&a48, 8);
  _Block_object_dispose(&a54, 8);
  _Block_object_dispose(&a60, 8);
  _Block_object_dispose(&a66, 8);
  _Unwind_Resume(a1);
}

uint64_t initCPPhoneNumberCopyHomeCountryCode()
{
  if (LoadAppSupport_loadPredicate != -1)
    dispatch_once(&LoadAppSupport_loadPredicate, &__block_literal_global_179);
  softLinkCPPhoneNumberCopyHomeCountryCode[0] = (uint64_t (*)())dlsym((void *)LoadAppSupport_frameworkLibrary, "CPPhoneNumberCopyHomeCountryCode");
  return softLinkCPPhoneNumberCopyHomeCountryCode[0]();
}

uint64_t initCPPhoneNumbersEqual(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (LoadAppSupport_loadPredicate != -1)
    dispatch_once(&LoadAppSupport_loadPredicate, &__block_literal_global_179);
  softLinkCPPhoneNumbersEqual[0] = (uint64_t (*)())dlsym((void *)LoadAppSupport_frameworkLibrary, "CPPhoneNumbersEqual");
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))softLinkCPPhoneNumbersEqual[0])(a1, a2, a3);
}

void ___findBestCandidateForFavorite_block_invoke(uint64_t a1, void *a2, _BYTE *a3)
{
  id v5;
  uint64_t v6;
  id *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  int v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  void *v62;
  void *v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  void *v69;
  id v70;
  void *v71;
  void *v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  void *v83;
  void *v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  void *v90;
  id v91;
  void *v92;
  void *v93;
  int v94;
  uint64_t v95;
  void *v96;
  id v97;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  _BYTE v115[128];
  _BYTE v116[128];
  _BYTE v117[128];
  _BYTE v118[128];
  uint64_t v119;

  v119 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v8 = *(_QWORD *)(v6 + 40);
  v7 = (id *)(v6 + 40);
  if (!v8)
    objc_storeStrong(v7, a2);
  +[CNContactFormatter stringFromContact:style:](CNContactFormatter, "stringFromContact:style:", v5, 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if (v9)
  {
    objc_msgSend(*(id *)(a1 + 32), "name");
    v10 = objc_claimAutoreleasedReturnValue();
    if (v10)
    {
      v11 = (void *)v10;
      objc_msgSend(*(id *)(a1 + 32), "name");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_msgSend(v9, "localizedCaseInsensitiveCompare:", v12);

      if (!v13)
      {
        objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), a2);
        *a3 = 1;
      }
    }
  }
  v14 = *(_QWORD *)(a1 + 32);
  if (v14)
    v15 = *(void **)(v14 + 80);
  else
    v15 = 0;
  if (objc_msgSend(v15, "isEqualToString:", CFSTR("phoneNumbers")))
  {
    v113 = 0u;
    v114 = 0u;
    v111 = 0u;
    v112 = 0u;
    objc_msgSend(v5, "phoneNumbers");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v111, v118, 16);
    if (v17)
    {
      v18 = v17;
      v96 = v9;
      v97 = v5;
      v19 = *(_QWORD *)v112;
      while (1)
      {
        v20 = 0;
        do
        {
          if (*(_QWORD *)v112 != v19)
            objc_enumerationMutation(v16);
          v21 = *(void **)(*((_QWORD *)&v111 + 1) + 8 * v20);
          objc_msgSend(v21, "label");
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          if (!objc_msgSend(v22, "length"))
            goto LABEL_21;
          objc_msgSend(v21, "label");
          v23 = (void *)objc_claimAutoreleasedReturnValue();
          v24 = v23;
          v25 = *(_QWORD *)(a1 + 32);
          if (v25)
            v26 = *(_QWORD *)(v25 + 72);
          else
            v26 = 0;
          v27 = objc_msgSend(v23, "localizedCaseInsensitiveCompare:", v26);

          if (!v27)
          {
            objc_msgSend(v21, "value");
            v28 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v28, "stringValue");
            v29 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(*(id *)(a1 + 32), "value");
            v30 = (void *)objc_claimAutoreleasedReturnValue();
            v31 = CNFavoritesPhoneNumbersEqual(v29, v30);

            if (v31)
            {
              objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), a2);
              v32 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
              v33 = v21;
              v22 = *(void **)(v32 + 40);
              *(_QWORD *)(v32 + 40) = v33;
LABEL_21:

            }
          }
          ++v20;
        }
        while (v18 != v20);
        v34 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v111, v118, 16);
        v18 = v34;
        if (!v34)
          goto LABEL_95;
      }
    }
    goto LABEL_96;
  }
  v35 = *(_QWORD *)(a1 + 32);
  if (v35)
    v36 = *(void **)(v35 + 80);
  else
    v36 = 0;
  if (objc_msgSend(v36, "isEqualToString:", CFSTR("emailAddresses")))
  {
    v109 = 0u;
    v110 = 0u;
    v107 = 0u;
    v108 = 0u;
    objc_msgSend(v5, "emailAddresses");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v37 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v107, v117, 16);
    if (v37)
    {
      v38 = v37;
      v96 = v9;
      v97 = v5;
      v39 = *(_QWORD *)v108;
      while (1)
      {
        v40 = 0;
        do
        {
          if (*(_QWORD *)v108 != v39)
            objc_enumerationMutation(v16);
          v41 = *(void **)(*((_QWORD *)&v107 + 1) + 8 * v40);
          objc_msgSend(v41, "label");
          v42 = (void *)objc_claimAutoreleasedReturnValue();
          if (!objc_msgSend(v42, "length"))
            goto LABEL_42;
          objc_msgSend(v41, "label");
          v43 = (void *)objc_claimAutoreleasedReturnValue();
          v44 = v43;
          v45 = *(_QWORD *)(a1 + 32);
          if (v45)
            v46 = *(_QWORD *)(v45 + 72);
          else
            v46 = 0;
          v47 = objc_msgSend(v43, "localizedCaseInsensitiveCompare:", v46);

          if (!v47)
          {
            objc_msgSend(v41, "value");
            v42 = (void *)objc_claimAutoreleasedReturnValue();
            if (objc_msgSend(v42, "length"))
            {
              objc_msgSend(v41, "value");
              v48 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(*(id *)(a1 + 32), "value");
              v49 = (void *)objc_claimAutoreleasedReturnValue();
              v50 = objc_msgSend(v48, "localizedCaseInsensitiveCompare:", v49);

              if (v50)
                goto LABEL_43;
              objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), a2);
              v51 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
              v52 = v41;
              v42 = *(void **)(v51 + 40);
              *(_QWORD *)(v51 + 40) = v52;
            }
LABEL_42:

          }
LABEL_43:
          ++v40;
        }
        while (v38 != v40);
        v53 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v107, v117, 16);
        v38 = v53;
        if (!v53)
          goto LABEL_95;
      }
    }
LABEL_96:

    goto LABEL_97;
  }
  v54 = *(_QWORD *)(a1 + 32);
  if (v54)
    v55 = *(void **)(v54 + 80);
  else
    v55 = 0;
  if (objc_msgSend(v55, "isEqualToString:", CFSTR("socialProfiles")))
  {
    v105 = 0u;
    v106 = 0u;
    v103 = 0u;
    v104 = 0u;
    objc_msgSend(v5, "socialProfiles");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v56 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v103, v116, 16);
    if (!v56)
      goto LABEL_96;
    v57 = v56;
    v96 = v9;
    v97 = v5;
    v58 = *(_QWORD *)v104;
    do
    {
      v59 = 0;
      do
      {
        if (*(_QWORD *)v104 != v58)
          objc_enumerationMutation(v16);
        v60 = *(void **)(*((_QWORD *)&v103 + 1) + 8 * v59);
        objc_msgSend(v60, "label");
        v61 = objc_claimAutoreleasedReturnValue();
        if (!v61)
          goto LABEL_60;
        v62 = (void *)v61;
        objc_msgSend(v60, "label");
        v63 = (void *)objc_claimAutoreleasedReturnValue();
        v64 = v63;
        v65 = *(_QWORD *)(a1 + 32);
        v66 = v65 ? *(_QWORD *)(v65 + 72) : 0;
        v67 = objc_msgSend(v63, "localizedCaseInsensitiveCompare:", v66);

        if (!v67)
        {
LABEL_60:
          objc_opt_class();
          objc_msgSend(v60, "value");
          v68 = (void *)objc_claimAutoreleasedReturnValue();
          if ((objc_opt_isKindOfClass() & 1) != 0)
            v69 = v68;
          else
            v69 = 0;
          v70 = v69;
          +[CNFavoritesEntry valueStringFromSocialProfile:]((uint64_t)CNFavoritesEntry, v70);
          v71 = (void *)objc_claimAutoreleasedReturnValue();

          if (objc_msgSend(v71, "length"))
          {
            objc_msgSend(*(id *)(a1 + 32), "value");
            v72 = (void *)objc_claimAutoreleasedReturnValue();
            v73 = objc_msgSend(v71, "isEqualToString:", v72);

            if (v73)
            {
              objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), a2);
              objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), v60);
            }
          }

        }
        ++v59;
      }
      while (v57 != v59);
      v74 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v103, v116, 16);
      v57 = v74;
    }
    while (v74);
LABEL_95:
    v9 = v96;
    v5 = v97;
    goto LABEL_96;
  }
  v75 = *(_QWORD *)(a1 + 32);
  if (v75)
    v76 = *(void **)(v75 + 80);
  else
    v76 = 0;
  if (objc_msgSend(v76, "isEqualToString:", CFSTR("instantMessageAddresses")))
  {
    v101 = 0u;
    v102 = 0u;
    v99 = 0u;
    v100 = 0u;
    objc_msgSend(v5, "instantMessageAddresses");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v77 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v99, v115, 16);
    if (!v77)
      goto LABEL_96;
    v78 = v77;
    v96 = v9;
    v97 = v5;
    v79 = *(_QWORD *)v100;
    do
    {
      v80 = 0;
      do
      {
        if (*(_QWORD *)v100 != v79)
          objc_enumerationMutation(v16);
        v81 = *(void **)(*((_QWORD *)&v99 + 1) + 8 * v80);
        objc_msgSend(v81, "label");
        v82 = objc_claimAutoreleasedReturnValue();
        if (!v82)
          goto LABEL_84;
        v83 = (void *)v82;
        objc_msgSend(v81, "label");
        v84 = (void *)objc_claimAutoreleasedReturnValue();
        v85 = v84;
        v86 = *(_QWORD *)(a1 + 32);
        v87 = v86 ? *(_QWORD *)(v86 + 72) : 0;
        v88 = objc_msgSend(v84, "localizedCaseInsensitiveCompare:", v87);

        if (!v88)
        {
LABEL_84:
          objc_opt_class();
          objc_msgSend(v81, "value");
          v89 = (void *)objc_claimAutoreleasedReturnValue();
          if ((objc_opt_isKindOfClass() & 1) != 0)
            v90 = v89;
          else
            v90 = 0;
          v91 = v90;
          +[CNFavoritesEntry valueStringFromSocialProfile:]((uint64_t)CNFavoritesEntry, v91);
          v92 = (void *)objc_claimAutoreleasedReturnValue();

          if (objc_msgSend(v92, "length"))
          {
            objc_msgSend(*(id *)(a1 + 32), "value");
            v93 = (void *)objc_claimAutoreleasedReturnValue();
            v94 = objc_msgSend(v92, "isEqualToString:", v93);

            if (v94)
            {
              objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), a2);
              objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), v81);
            }
          }

        }
        ++v80;
      }
      while (v78 != v80);
      v95 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v99, v115, 16);
      v78 = v95;
    }
    while (v95);
    goto LABEL_95;
  }
LABEL_97:

}

void sub_18F9B7810(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

void sub_18F9B796C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7;
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_18F9B7C78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 80), 8);
  _Unwind_Resume(a1);
}

BOOL sIsChangeDelete_block_invoke(uint64_t a1, void *a2)
{
  id v2;
  _BOOL8 v3;

  v2 = a2;
  v3 = objc_msgSend(v2, "changeType") == 2 || objc_msgSend(v2, "changeType") == 5;

  return v3;
}

uint64_t sChangeContactIdentifier_block_invoke_2(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "contactIdentifier");
}

BOOL sIsGroupInsertOrUpdate_block_invoke_3(uint64_t a1, void *a2)
{
  id v2;
  _BOOL8 v3;

  v2 = a2;
  v3 = objc_msgSend(v2, "changeType") != 2 && objc_msgSend(v2, "changeType") != 5;

  return v3;
}

uint64_t sGroupChangeIdentifier_block_invoke_4(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "groupIdentifier");
}

uint64_t sGroupIdentifier_block_invoke_5(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "identifier");
}

uint64_t sContactHasData_block_invoke_0(uint64_t a1, void *a2)
{
  uint64_t v2;
  id v3;
  int v4;

  v2 = sContactHasData_block_invoke_cn_once_token_2;
  v3 = a2;
  if (v2 != -1)
    dispatch_once(&sContactHasData_block_invoke_cn_once_token_2, &__block_literal_global_52_4);
  v4 = objc_msgSend(v3, "isEqualIgnoringIdentifiers:", sContactHasData_block_invoke_cn_once_object_2);

  return v4 ^ 1u;
}

void sContactHasData_block_invoke_2_0()
{
  CNContact *v0;
  void *v1;

  v0 = objc_alloc_init(CNContact);
  v1 = (void *)sContactHasData_block_invoke_cn_once_object_2;
  sContactHasData_block_invoke_cn_once_object_2 = (uint64_t)v0;

}

uint64_t sPairContactWithNoMatchInfo_block_invoke_3_0(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(MEMORY[0x1E0D13AF8], "pairWithFirst:second:", a2, 0);
}

uint64_t CNCountryInformationISOCountryCodeAscendingComparator_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;

  v4 = a3;
  objc_msgSend(a2, "isoCountryCode");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "isoCountryCode");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = objc_msgSend(v5, "compare:", v6);
  return v7;
}

id getABSPublicABCNCompatibilityClass_0()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getABSPublicABCNCompatibilityClass_softClass_0;
  v7 = getABSPublicABCNCompatibilityClass_softClass_0;
  if (!getABSPublicABCNCompatibilityClass_softClass_0)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getABSPublicABCNCompatibilityClass_block_invoke_0;
    v3[3] = &unk_1E29F98A8;
    v3[4] = &v4;
    __getABSPublicABCNCompatibilityClass_block_invoke_0((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_18F9BCD00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getABSPublicABCNCompatibilityClass_block_invoke_0(uint64_t a1)
{
  Class result;
  void *v3;

  if (!AddressBookLibraryCore_frameworkLibrary_0)
  {
    AddressBookLibraryCore_frameworkLibrary_0 = _sl_dlopen();
    if (!AddressBookLibraryCore_frameworkLibrary_0)
    {
      abort_report_np();
      goto LABEL_6;
    }
  }
  while (1)
  {
    result = objc_getClass("ABSPublicABCNCompatibility");
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
      break;
LABEL_6:
    v3 = (void *)__getABSPublicABCNCompatibilityClass_block_invoke_cold_1();
    free(v3);
  }
  getABSPublicABCNCompatibilityClass_softClass_0 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_18F9C0834(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F9C1260(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  uint64_t v16;
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v16 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_18F9C3C78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F9C56DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0_5(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

id OUTLINED_FUNCTION_4_1(id a1)
{
  return a1;
}

uint64_t CNiOSABEKParticipantMatchingCopyPersonByURL(uint64_t a1, void *a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;

  v3 = (void *)MEMORY[0x1E0C99D80];
  v4 = *MEMORY[0x1E0CF6210];
  v5 = *MEMORY[0x1E0CF6228];
  objc_msgSend(a2, "absoluteString");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "dictionaryWithObjectsAndKeys:", v4, v5, v6, *MEMORY[0x1E0CF6250], 0);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CF5D90], "personPredicateWithValue:comparison:forProperty:addressBook:", v7, 0, *MEMORY[0x1E0CF6208], a1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = CNiOSABEKParticipantMatchingCopyPersonWithABPredicate(a1, v8);

  return v9;
}

uint64_t CNiOSABEKParticipantMatchingCopyPersonByName(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;

  objc_msgSend(MEMORY[0x1E0CF5D80], "personPredicateWithNameOnly:account:addressBook:", a2, 0, a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = CNiOSABEKParticipantMatchingCopyPersonWithABPredicate(a1, v3);

  return v4;
}

uint64_t CNiOSABEKParticipantMatchingCopyPersonWithABPredicate(uint64_t a1, void *a2)
{
  id v3;
  CNiOSABEKParticipantMatchingSearchOperationDelegate *v4;
  uint64_t v5;
  _QWORD v7[5];
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = a2;
  v8 = 0;
  v9 = &v8;
  v10 = 0x2020000000;
  v11 = 0;
  v4 = objc_alloc_init(CNiOSABEKParticipantMatchingSearchOperationDelegate);
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = __CNiOSABEKParticipantMatchingCopyPersonWithABPredicate_block_invoke;
  v7[3] = &unk_1E29F9DE0;
  v7[4] = &v8;
  -[CNiOSABEKParticipantMatchingSearchOperationDelegate setCompletionHandler:](v4, "setCompletionHandler:", v7);
  objc_msgSend(MEMORY[0x1E0CF5D80], "searchPeopleWithPredicate:sortOrder:inAddressBook:withDelegate:", v3, 0xFFFFFFFFLL, a1, v4);
  v5 = v9[3];

  _Block_object_dispose(&v8, 8);
  return v5;
}

void sub_18F9C7710(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F9CA1A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F9CB4B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F9CDA88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getIMNicknameClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;

  if (!IMSharedUtilitiesLibraryCore_frameworkLibrary_0)
  {
    IMSharedUtilitiesLibraryCore_frameworkLibrary_0 = _sl_dlopen();
    if (!IMSharedUtilitiesLibraryCore_frameworkLibrary_0)
    {
      abort_report_np();
      goto LABEL_6;
    }
  }
  while (1)
  {
    result = objc_getClass("IMNickname");
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
      break;
LABEL_6:
    v3 = (void *)__getIMNicknameClass_block_invoke_cold_1();
    free(v3);
  }
  getIMNicknameClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

id sNilStringIfEmpty_block_invoke(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  id v4;

  v2 = a2;
  v3 = v2;
  if (v2 && objc_msgSend(v2, "length"))
    v4 = v3;
  else
    v4 = 0;

  return v4;
}

id sContactServerUUID_block_invoke_2(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  id v4;

  objc_msgSend(a2, "externalUUID");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if ((*(unsigned int (**)(void))(*MEMORY[0x1E0D13848] + 16))())
    v3 = 0;
  else
    v3 = v2;
  v4 = v3;

  return v4;
}

CNCountryInformation *sCountryInformationFromCountryCode_block_invoke(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  CNCountryInformation *v4;
  void *v5;
  void *v6;
  CNCountryInformation *v7;

  v2 = a2;
  +[CNAddressFormats addressFormatForCountryCode:](CNAddressFormats, "addressFormatForCountryCode:", v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = [CNCountryInformation alloc];
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("COUNTRY"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("PHONETIC_COUNTRY"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = -[CNCountryInformation initWithISOCountryCode:name:phoneticName:](v4, "initWithISOCountryCode:name:phoneticName:", v2, v5, v6);

  return v7;
}

void sub_18F9CF894(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sIsContactWhitelisted_block_invoke(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v3;

  objc_msgSend(a2, "downtimeWhitelist");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isEqualToString:", *MEMORY[0x1E0D13738]);

  return v3;
}

uint64_t sLabeledValueStringValue_block_invoke_2(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "value");
}

id sLabeledValuePhoneNumberStringValue_block_invoke_3(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;

  objc_msgSend(a2, "value");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "stringValue");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id sAllHandleStringsForContact_block_invoke_4(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  _QWORD v10[3];

  v10[2] = *MEMORY[0x1E0C80C00];
  v2 = a2;
  objc_msgSend(v2, "emailAddresses");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "_cn_map:", &__block_literal_global_23_1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v10[0] = v4;
  objc_msgSend(v2, "phoneNumbers");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v5, "_cn_map:", &__block_literal_global_24_0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v10[1] = v6;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v10, 2);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "_cn_flatten");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

void sub_18F9D0B98(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18F9D0C70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_18F9D0D70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_18F9D0DF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_18F9D0ED4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18F9D1428(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18F9D16B0(_Unwind_Exception *a1)
{
  void *v1;
  uint64_t v2;

  objc_sync_exit(v1);
  _Block_object_dispose((const void *)(v2 - 80), 8);
  _Unwind_Resume(a1);
}

void _handleFavoritesChangedExternally(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;

  objc_opt_class();
  v3 = a2;
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v4 = v3;
  else
    v4 = 0;
  v6 = v4;

  v5 = v6;
  if (v6)
  {
    objc_msgSend(v6, "_entriesChangedExternally");
    v5 = v6;
  }

}

void sub_18F9D1A4C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id CNContactFromSGContact(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  CNMutableContact *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  _QWORD v32[2];

  v32[1] = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  objc_msgSend(v3, "recordId");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  CNSuggestedContactFoundInBundle_block_invoke((uint64_t)v5, (uint64_t)v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = -[CNContact initWithIdentifier:]([CNMutableContact alloc], "initWithIdentifier:", v6);
  objc_msgSend(v3, "name");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "prefix");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  -[CNMutableContact setNamePrefix:](v7, "setNamePrefix:", v9);

  objc_msgSend(v8, "firstName");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  -[CNMutableContact setGivenName:](v7, "setGivenName:", v10);

  objc_msgSend(v8, "middleName");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  -[CNMutableContact setMiddleName:](v7, "setMiddleName:", v11);

  objc_msgSend(v8, "lastName");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  -[CNMutableContact setFamilyName:](v7, "setFamilyName:", v12);

  objc_msgSend(v8, "suffix");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  -[CNMutableContact setNameSuffix:](v7, "setNameSuffix:", v13);

  -[CNMutableContact setPreferredForName:](v7, "setPreferredForName:", 0);
  objc_msgSend(v3, "emailAddresses");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  CNLabeledValuesFromSGLabeledValues(v14, CFSTR("emailAddress"), 0);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  -[CNMutableContact setEmailAddresses:](v7, "setEmailAddresses:", v15);

  objc_msgSend(v3, "phones");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  +[CN phoneNumberFromStringTransform](CN, "phoneNumberFromStringTransform");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  CNLabeledValuesFromSGLabeledValues(v16, CFSTR("phoneNumber"), v17);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  -[CNMutableContact setPhoneNumbers:](v7, "setPhoneNumbers:", v18);

  objc_msgSend(v3, "postalAddresses");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  CNLabeledValuesFromSGLabeledValues(v19, CFSTR("self"), &__block_literal_global_104_0);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  -[CNMutableContact setPostalAddresses:](v7, "setPostalAddresses:", v20);

  objc_msgSend(v3, "socialProfiles");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  CNLabeledValuesFromSGLabeledValues(v21, CFSTR("self"), &__block_literal_global_106);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  -[CNMutableContact setSocialProfiles:](v7, "setSocialProfiles:", v22);

  objc_msgSend(v3, "birthday");
  v23 = (void *)objc_claimAutoreleasedReturnValue();

  if (v23)
  {
    objc_msgSend(v3, "birthday");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    v32[0] = v24;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v32, 1);
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    CNLabeledValuesFromSGLabeledValues(v25, CFSTR("dateComponents"), 0);
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    -[CNMutableContact setDates:](v7, "setDates:", v26);

  }
  +[CNSuggestedContactStore storeIdentifier](CNSuggestedContactStore, "storeIdentifier");
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  -[CNMutableContact setStoreIdentifier:](v7, "setStoreIdentifier:", v27);

  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "recordId");
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v28, "setObject:forKeyedSubscript:", v29, CNSuggestedContactRecordIdKey);

  if (v4)
    objc_msgSend(v28, "addEntriesFromDictionary:", v4);
  -[CNMutableContact setStoreInfo:](v7, "setStoreInfo:", v28);
  v30 = (void *)-[CNMutableContact copy](v7, "copy");

  return v30;
}

void *SGRecordIDFromIdentifier()
{
  return &__block_literal_global_92_0;
}

id CNSuggestedContactFoundInBundle_block_invoke(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0D13968], "encodeObject:error:", a2, 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "base64EncodedStringWithOptions:", 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id CNSuggestedContactFoundInBundle_block_invoke_2(uint64_t a1, void *a2)
{
  objc_class *v2;
  id v3;
  void *v4;
  void *v5;

  v2 = (objc_class *)MEMORY[0x1E0C99D50];
  v3 = a2;
  v4 = (void *)objc_msgSend([v2 alloc], "initWithBase64EncodedString:options:", v3, 0);

  if (v4)
  {
    objc_msgSend(MEMORY[0x1E0D13968], "decodeObjectOfClass:data:error:", objc_opt_class(), v4, 0);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v5 = 0;
  }

  return v5;
}

id CNLabeledValuesFromSGLabeledValues(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void (**v7)(id, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  char v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  void *v21;
  void *v22;
  CNLabeledValue *v23;
  void *v24;
  CNLabeledValue *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v35;
  id v36;
  uint64_t v37;
  void (**v38)(id, uint64_t);
  uint64_t v39;
  id obj;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  _BYTE v45[128];
  uint64_t v46;

  v46 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v7 = a3;
  if (!v5)
  {
    v36 = 0;
    goto LABEL_23;
  }
  objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", objc_msgSend(v5, "count"));
  v35 = v5;
  v36 = (id)objc_claimAutoreleasedReturnValue();
  v41 = 0u;
  v42 = 0u;
  v43 = 0u;
  v44 = 0u;
  obj = v5;
  v8 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v41, v45, 16);
  if (!v8)
    goto LABEL_21;
  v9 = v8;
  v10 = *(_QWORD *)v42;
  v37 = *(_QWORD *)v42;
  v38 = v7;
  do
  {
    v11 = 0;
    v39 = v9;
    do
    {
      if (*(_QWORD *)v42 != v10)
        objc_enumerationMutation(obj);
      v12 = *(void **)(*((_QWORD *)&v41 + 1) + 8 * v11);
      objc_msgSend(v12, "extractionInfo", v35);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v13, "extractionType") == 16)
      {
        objc_msgSend(v12, "origin");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "bundleId");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        v16 = objc_msgSend(v15, "_cn_hasPrefix:options:", CFSTR("com.apple."), 129);

        if ((v16 & 1) != 0)
          goto LABEL_19;
      }
      else
      {

      }
      objc_msgSend(v12, "valueForKey:", v6);
      v17 = objc_claimAutoreleasedReturnValue();
      if (v17)
      {
        v18 = (void *)v17;
        if (!v7
          || (v7[2](v7, v17), v19 = objc_claimAutoreleasedReturnValue(), v18, (v18 = (void *)v19) != 0))
        {
          v20 = v6;
          objc_msgSend(v12, "recordId");
          v21 = (void *)objc_claimAutoreleasedReturnValue();
          CNSuggestedContactFoundInBundle_block_invoke((uint64_t)v21, (uint64_t)v21);
          v22 = (void *)objc_claimAutoreleasedReturnValue();

          v23 = [CNLabeledValue alloc];
          objc_msgSend(v12, "label");
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          v25 = -[CNLabeledValue initWithIdentifier:label:value:](v23, "initWithIdentifier:label:value:", v22, v24, v18);

          +[CNSuggestedContactStore storeIdentifier](CNSuggestedContactStore, "storeIdentifier");
          v26 = (void *)objc_claimAutoreleasedReturnValue();
          -[CNLabeledValue setStoreIdentifier:](v25, "setStoreIdentifier:", v26);

          objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
          v27 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v12, "recordId");
          v28 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v27, "setObject:forKey:", v28, CNSuggestedContactRecordIdKey);

          objc_msgSend(v12, "origin");
          v29 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v29, "bundleId");
          v30 = (void *)objc_claimAutoreleasedReturnValue();
          v31 = objc_msgSend(v30, "length");

          if (v31)
          {
            objc_msgSend(v12, "origin");
            v32 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v32, "bundleId");
            v33 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v27, "setObject:forKey:", v33, CNSuggestedContactFoundInBundle);

          }
          -[CNLabeledValue setStoreInfo:](v25, "setStoreInfo:", v27);
          if (v25)
            objc_msgSend(v36, "addObject:", v25);

          v6 = v20;
          v7 = v38;
          v9 = v39;
          v10 = v37;
        }
      }
LABEL_19:
      ++v11;
    }
    while (v9 != v11);
    v9 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v41, v45, 16);
  }
  while (v9);
LABEL_21:

  v5 = v35;
LABEL_23:

  return v36;
}

void OUTLINED_FUNCTION_0_6(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 8u);
}

__CFData *CNImageUtilsImageDataByScalingImageData(const __CFData *a1, int a2, unint64_t a3, double *a4, double a5, double a6, double a7)
{
  double v9;
  double v12;
  double v13;
  double v14;
  CGImageSource *v15;
  CGImageSource *v16;
  CFDictionaryRef v17;
  CGImageRef ImageAtIndex;
  void *v19;
  BOOL v20;
  uint64_t v21;
  __CFData *v22;
  __CFData *v23;
  const __CFString *v24;
  CGImageDestinationRef v25;
  CGImageDestination *v26;
  void *v27;
  void *v28;

  if (a5 >= a6)
    v9 = a5;
  else
    v9 = a6;
  if (v9 <= (double)a3)
  {
    v23 = 0;
  }
  else
  {
    if (a5 >= a6)
      a5 = a6;
    v12 = (double)(unint64_t)(a5 / v9 * (double)a3);
    if (v9 == a6)
      v13 = v12;
    else
      v13 = (double)a3;
    if (v9 == a6)
      v14 = (double)a3;
    else
      v14 = v12;
    v15 = CGImageSourceCreateWithData(a1, 0);
    if (!v15)
    {
      v23 = 0;
      if (!a4)
        return v23;
      goto LABEL_34;
    }
    v16 = v15;
    if (CGImageSourceGetCount(v15))
    {
      v17 = CGImageSourceCopyPropertiesAtIndex(v16, 0, 0);
      ImageAtIndex = CGImageSourceCreateImageAtIndex(v16, 0, 0);
      if (ImageAtIndex)
      {
        v19 = ImageAtIndex;
        if ((unint64_t)v13)
          v20 = (unint64_t)v14 == 0;
        else
          v20 = 1;
        if (!v20)
        {
          v21 = CGImageCreateByScaling();
          CFRelease(v19);
          v19 = (void *)v21;
        }
        v22 = (__CFData *)objc_opt_new();
        v23 = v22;
        if (a2)
          v24 = CFSTR("public.png");
        else
          v24 = CFSTR("public.jpeg");
        v25 = CGImageDestinationCreateWithData(v22, v24, 1uLL, 0);
        if (v25)
        {
          v26 = v25;
          objc_msgSend(MEMORY[0x1E0C99E08], "dictionaryWithDictionary:", v17);
          v27 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", a7);
          v28 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v27, "setObject:forKeyedSubscript:", v28, *MEMORY[0x1E0CBC780]);

          CGImageDestinationAddImage(v26, (CGImageRef)v19, (CFDictionaryRef)v27);
          CGImageDestinationFinalize(v26);
          CFRelease(v26);

        }
        CGImageRelease((CGImageRef)v19);
      }
      else
      {
        v23 = 0;
      }

    }
    else
    {
      v23 = 0;
    }
    CFRelease(v16);
    if (a4)
LABEL_34:
      *a4 = v14 / a6;
  }
  return v23;
}

BOOL CNImageUtilsCopyImageSourceAndGetSizeFromData(void *a1, CGImageSource **a2, _QWORD *a3, _QWORD *a4)
{
  const __CFData *v7;
  const __CFData *v8;
  CGImageSource *v9;
  CGImageSource *v10;
  const __CFDictionary *v11;
  const __CFDictionary *v12;
  const __CFNumber *Value;
  _BOOL4 v14;
  _BOOL8 v15;
  int v16;
  const __CFNumber *v17;
  _QWORD *v18;
  const __CFNumber *v19;
  int valuePtr;

  v7 = a1;
  v8 = v7;
  if (a3)
    *a3 = 0;
  if (a4)
    *a4 = 0;
  if (v7)
  {
    v9 = CGImageSourceCreateWithData(v7, 0);
    if (!v9)
    {
      v16 = 0;
LABEL_32:
      v15 = v16 != 0;
      goto LABEL_33;
    }
    v10 = v9;
    v11 = CGImageSourceCopyPropertiesAtIndex(v9, 0, 0);
    if (!v11)
    {
      v16 = 0;
      goto LABEL_31;
    }
    v12 = v11;
    valuePtr = 0;
    Value = (const __CFNumber *)CFDictionaryGetValue(v11, (const void *)*MEMORY[0x1E0CBCFF0]);
    if (Value)
    {
      CFNumberGetValue(Value, kCFNumberIntType, &valuePtr);
      v14 = valuePtr > 4;
    }
    else
    {
      v14 = 0;
    }
    v17 = (const __CFNumber *)CFDictionaryGetValue(v12, (const void *)*MEMORY[0x1E0CBD048]);
    if (v17 && CFNumberGetValue(v17, kCFNumberIntType, &valuePtr))
    {
      if (v14)
      {
        v18 = a4;
        if (!a4)
          goto LABEL_21;
        goto LABEL_20;
      }
      v18 = a3;
      if (a3)
LABEL_20:
        *v18 = valuePtr;
    }
LABEL_21:
    v19 = (const __CFNumber *)CFDictionaryGetValue(v12, (const void *)*MEMORY[0x1E0CBD040]);
    if (!v19 || !CFNumberGetValue(v19, kCFNumberIntType, &valuePtr))
      goto LABEL_28;
    if (v14)
    {
      if (!a3)
        goto LABEL_28;
    }
    else
    {
      a3 = a4;
      if (!a4)
      {
LABEL_28:
        CFRelease(v12);
        if (a2)
        {
          *a2 = v10;
          v16 = 1;
          goto LABEL_32;
        }
        v16 = 1;
LABEL_31:
        CFRelease(v10);
        goto LABEL_32;
      }
    }
    *a3 = valuePtr;
    goto LABEL_28;
  }
  v15 = 0;
LABEL_33:

  return v15;
}

CGContextRef CNImageUtilsCreateMmappedBitmapContext(unsigned int a1, double a2, double a3)
{
  CGColorSpace *DeviceRGB;
  size_t AlignedBytesPerRow;
  void *v8;
  uint32_t v9;
  CGContextRef v10;

  if (a1 != 5 && a1 != 8)
    CNImageUtilsCreateMmappedBitmapContext_cold_1();
  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  CGColorSpaceGetNumberOfComponents(DeviceRGB);
  AlignedBytesPerRow = CGBitmapGetAlignedBytesPerRow();
  v8 = mmap(0, (*MEMORY[0x1E0C85AD8] + AlignedBytesPerRow * (int)a3 - 1) & -*MEMORY[0x1E0C85AD8], 3, 4097, -1, 0);
  if (a1 == 5)
    v9 = 4102;
  else
    v9 = 8198;
  v10 = CGBitmapContextCreate(v8, (unint64_t)a2, (unint64_t)a3, a1, AlignedBytesPerRow, DeviceRGB, v9);
  CGColorSpaceRelease(DeviceRGB);
  return v10;
}

void sub_18F9D6A64()
{
  qword_1EE1809E8 = 0x3030303030303030;
  unk_1EE1809F0 = 0xEA00000000003030;
}

uint64_t _AppExtensionIdentity.appBundleIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  void *v4;
  void *v5;
  id v6;

  v0 = 0xD000000000000016;
  if (_s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0() == 0xD00000000000002BLL
    && v1 == 0x800000018FA4F7A0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = sub_18FA2896C();
    swift_bridgeObjectRelease();
    if ((v2 & 1) == 0)
    {
      v0 = 0x6E776F6E6B6E75;
      v4 = (void *)sub_18FA281C8();
      if (v4)
      {
        v5 = v4;
        v6 = objc_msgSend(v4, sel_bundleIdentifier);

        if (v6)
        {
          v0 = sub_18FA2833C();

        }
      }
    }
  }
  return v0;
}

uint64_t _AppExtensionIdentity.appDisplayName.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  void *v3;
  void *v4;
  id v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v0 = 0x73746361746E6F63;
  if (_s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0() == 0xD00000000000002BLL
    && v1 == 0x800000018FA4F7A0)
  {
    swift_bridgeObjectRelease();
    return v0;
  }
  v2 = sub_18FA2896C();
  swift_bridgeObjectRelease();
  if ((v2 & 1) != 0)
    return v0;
  v3 = (void *)sub_18FA281C8();
  if (!v3)
    return sub_18FA281B0();
  v4 = v3;
  v5 = objc_msgSend(v3, sel_localizedName);

  v0 = sub_18FA2833C();
  v7 = v6;

  v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v8 = v0 & 0xFFFFFFFFFFFFLL;
  if (!v8)
  {
    swift_bridgeObjectRelease();
    return sub_18FA281B0();
  }
  return v0;
}

uint64_t _AppExtensionIdentity.containerProviderIdentifier.getter()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  char v9;
  void *v11;
  void *v12;
  id v13;

  v0 = (void *)sub_18FA281C8();
  if (!v0)
    return _s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0();
  v1 = v0;
  v2 = objc_msgSend(v0, sel_teamIdentifier);
  if (v2)
  {
    v3 = v2;
    v4 = sub_18FA2833C();
    v6 = v5;

    if (qword_1EE1809E0 != -1)
      swift_once();
    v7 = v4 == qword_1EE1809E8 && v6 == unk_1EE1809F0;
    if (!v7 && (sub_18FA2896C() & 1) == 0)
    {

      return v4;
    }
    swift_bridgeObjectRelease();
  }
  if (_s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0() == 0xD00000000000002BLL
    && v8 == 0x800000018FA4F7A0)
  {
    swift_bridgeObjectRelease();
LABEL_16:

    return 0xD000000000000016;
  }
  v9 = sub_18FA2896C();
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    goto LABEL_16;
  v11 = (void *)sub_18FA281C8();
  if (v11
    && (v12 = v11,
        v13 = objc_msgSend(v11, sel_bundleIdentifier),
        v12,
        v13))
  {
    v4 = sub_18FA2833C();

  }
  else
  {

    return 0x6E776F6E6B6E75;
  }
  return v4;
}

uint64_t initializeBufferWithCopyOfBuffer for ManagedDuplicate.SelectedImageData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_18F9D6E94(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_18F9D6EB4(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_18F9D74F0(a1, &qword_1EE180A90);
}

void type metadata accessor for CNError(uint64_t a1)
{
  sub_18F9D74F0(a1, &qword_1EE180A98);
}

id sub_18F9D6F08()
{
  id *v0;

  return *v0;
}

uint64_t sub_18F9D6F10@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_18F9D6F18()
{
  sub_18F9D727C(&qword_1EE180AB0, (uint64_t (*)(uint64_t))type metadata accessor for CNError, (uint64_t)&unk_18FA40C9C);
  return sub_18FA289C0();
}

uint64_t sub_18F9D6F58()
{
  sub_18F9D727C(&qword_1EE180AB0, (uint64_t (*)(uint64_t))type metadata accessor for CNError, (uint64_t)&unk_18FA40C9C);
  return sub_18FA289B4();
}

uint64_t sub_18F9D6F9C()
{
  sub_18F9D727C((unint64_t *)&qword_1EE180AE8, (uint64_t (*)(uint64_t))type metadata accessor for CNError, (uint64_t)&unk_18FA40CE0);
  return sub_18FA27FC4();
}

uint64_t sub_18F9D6FDC()
{
  return sub_18FA2833C();
}

uint64_t sub_18F9D6FEC()
{
  sub_18F9D727C((unint64_t *)&qword_1EE180AE8, (uint64_t (*)(uint64_t))type metadata accessor for CNError, (uint64_t)&unk_18FA40CE0);
  return sub_18FA2800C();
}

uint64_t sub_18F9D702C()
{
  sub_18F9D727C((unint64_t *)&qword_1EE180AE8, (uint64_t (*)(uint64_t))type metadata accessor for CNError, (uint64_t)&unk_18FA40CE0);
  return sub_18FA27FDC();
}

uint64_t sub_18F9D706C(void *a1)
{
  id v2;

  sub_18F9D727C((unint64_t *)&qword_1EE180AE8, (uint64_t (*)(uint64_t))type metadata accessor for CNError, (uint64_t)&unk_18FA40CE0);
  v2 = a1;
  return sub_18FA27FD0();
}

uint64_t sub_18F9D70D0()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = *v0;
  v2 = sub_18FA286C0();

  return v2;
}

uint64_t sub_18F9D7104()
{
  sub_18F9D727C((unint64_t *)&qword_1EE180AE8, (uint64_t (*)(uint64_t))type metadata accessor for CNError, (uint64_t)&unk_18FA40CE0);
  return sub_18FA27FF4();
}

uint64_t sub_18F9D7154()
{
  sub_18FA28A08();
  sub_18FA282B8();
  return sub_18FA28A14();
}

_QWORD *sub_18F9D71B0@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_18F9D71C0(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_18F9D71CC()
{
  sub_18F9D727C((unint64_t *)&qword_1EE180AE8, (uint64_t (*)(uint64_t))type metadata accessor for CNError, (uint64_t)&unk_18FA40CE0);
  return sub_18FA27FE8();
}

uint64_t sub_18F9D7224()
{
  return sub_18F9D727C(&qword_1EE180AA0, (uint64_t (*)(uint64_t))type metadata accessor for CNError, (uint64_t)&unk_18FA40BB4);
}

uint64_t sub_18F9D7250()
{
  return sub_18F9D727C(&qword_1EE180AA8, (uint64_t (*)(uint64_t))type metadata accessor for CNError, (uint64_t)&unk_18FA40BE0);
}

uint64_t sub_18F9D727C(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x194006D14](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_18F9D72BC()
{
  return sub_18F9D727C(&qword_1EE180AB0, (uint64_t (*)(uint64_t))type metadata accessor for CNError, (uint64_t)&unk_18FA40C9C);
}

uint64_t sub_18F9D72E8()
{
  return sub_18F9D727C(&qword_1EE180AB8, (uint64_t (*)(uint64_t))type metadata accessor for CNError, (uint64_t)&unk_18FA40C68);
}

uint64_t sub_18F9D7314()
{
  return sub_18F9D727C(&qword_1EE180AC0, (uint64_t (*)(uint64_t))type metadata accessor for CNError, (uint64_t)&unk_18FA40C24);
}

uint64_t sub_18F9D7340()
{
  return sub_18F9D727C(&qword_1EE180AC8, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_18FA40D88);
}

void type metadata accessor for Code(uint64_t a1)
{
  sub_18F9D74F0(a1, &qword_1EE180B58);
}

uint64_t sub_18F9D7380()
{
  return sub_18F9D727C(&qword_1EE180AD0, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_18FA40D4C);
}

unint64_t sub_18F9D73B0()
{
  unint64_t result;

  result = qword_1EE180AD8;
  if (!qword_1EE180AD8)
  {
    result = MEMORY[0x194006D14](MEMORY[0x1E0DEB470], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1EE180AD8);
  }
  return result;
}

uint64_t sub_18F9D73F4()
{
  return sub_18F9D727C(&qword_1EE180AE0, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_18FA40DC4);
}

uint64_t sub_18F9D7420()
{
  return sub_18F9D727C((unint64_t *)&qword_1EE180AE8, (uint64_t (*)(uint64_t))type metadata accessor for CNError, (uint64_t)&unk_18FA40CE0);
}

BOOL sub_18F9D744C(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_18F9D74F0(a1, &qword_1EE17E820);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_18F9D7480(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_18F9D74A0(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_18F9D74F0(a1, &qword_1EE180B60);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_18F9D74F0(a1, &qword_1EE180B68);
}

void sub_18F9D74F0(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

id CNContactPosterNameComponents.emphasizedNameComponentIndex.getter()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(v0, sel_emphasizedNameComponentIndex);
  if (v1 == (id)sub_18FA27E74())
    return 0;
  else
    return v1;
}

id sub_18F9D757C(id result, id a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      result = (id)swift_bridgeObjectRetain();
      break;
    case 7:
      result = result;
      break;
    default:
      return result;
  }
  return result;
}

void destroy for ManagedDuplicateError(uint64_t a1)
{
  sub_18F9D75C4(*(void **)a1, *(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_18F9D75C4(void *a1, id a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      swift_bridgeObjectRelease();
      break;
    case 7:

      break;
    default:
      return;
  }
}

uint64_t _s8Contacts21ManagedDuplicateErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_18F9D757C(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ManagedDuplicateError(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;
  void *v6;
  void *v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_18F9D757C(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_18F9D75C4(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ManagedDuplicateError(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_18F9D75C4(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ManagedDuplicateError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xF8 && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 248);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 8)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ManagedDuplicateError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF7)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 248;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xF8)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xF8)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_18F9D777C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 7u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 8);
}

uint64_t sub_18F9D7798(uint64_t result, unsigned int a2)
{
  if (a2 >= 8)
  {
    *(_QWORD *)result = a2 - 8;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 8;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ManagedDuplicateError()
{
  return &type metadata for ManagedDuplicateError;
}

unint64_t sub_18F9D77C4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EE180C90;
  if (!qword_1EE180C90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE17EBB8);
    v2 = MEMORY[0x1E0DEA978];
    result = MEMORY[0x194006D14](MEMORY[0x1E0DEE990], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE180C90);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x194006D08](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

void sub_18F9D7870(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

unint64_t sub_18F9D78A8()
{
  sub_18FA287D4();
  swift_bridgeObjectRelease();
  sub_18FA283A8();
  return 0xD000000000000030;
}

void sub_18F9D7A44(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  void *v14;
  void *v15;
  id v16;

  v16 = v14;
  sub_18FA287D4();
  swift_bridgeObjectRelease();
  swift_getErrorValue();
  sub_18FA289CC();
  sub_18FA283A8();
  swift_bridgeObjectRelease();
  sub_18F9D75C4(v14, v15, 7);
  JUMPOUT(0x18F9D7A2CLL);
}

uint64_t sub_18F9D7ACC()
{
  uint64_t v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)&loc_18F9D7A30 + 4 * byte_18FA40E59[v0]))(0xD000000000000028, 0x800000018FA4FBA0);
}

void sub_18F9D7B00()
{
  JUMPOUT(0x18F9D7A30);
}

void sub_18F9D7B38()
{
  uint64_t v0;

  sub_18F9D7870(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

void sub_18F9D7B50(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_18F9D7870(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16));
  *a1 = v3;
  a1[1] = v4;
}

unint64_t sub_18F9D7B80()
{
  unint64_t result;

  result = qword_1EE1812E0;
  if (!qword_1EE1812E0)
  {
    result = MEMORY[0x194006D14](&unk_18FA40EF8, &type metadata for ManagedDuplicateError);
    atomic_store(result, (unint64_t *)&qword_1EE1812E0);
  }
  return result;
}

void sub_18F9D7BC4()
{
  strcpy((char *)&qword_1EE17E938, "ContactEntity");
  unk_1EE17E946 = -4864;
}

uint64_t static CNContactEntityIdentifierProvider.EntityTypeIdentifier.getter()
{
  uint64_t v0;

  if (qword_1EE17E858 != -1)
    swift_once();
  v0 = qword_1EE17E938;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static CNContactEntityIdentifierProvider.entityIdentifier(for:)(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(a1, sel_identifier);
  v2 = sub_18FA2833C();

  return v2;
}

id CNContactEntityIdentifierProvider.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id CNContactEntityIdentifierProvider.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CNContactEntityIdentifierProvider();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for CNContactEntityIdentifierProvider()
{
  return objc_opt_self();
}

id CNContactEntityIdentifierProvider.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CNContactEntityIdentifierProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_18F9D7DF0()
{
  uint64_t v0;

  v0 = sub_18FA28204();
  __swift_allocate_value_buffer(v0, qword_1EE1835A0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EE1835A0);
  return sub_18FA281F8();
}

void sub_18F9D7E70()
{
  strcpy((char *)&qword_1EE183578, "CNDuplication/");
  unk_1EE183587 = -18;
}

uint64_t sub_18F9D7EA0()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for ManagedDuplicateStore();
  v0 = swift_allocObject();
  result = ManagedDuplicateStore.init(inMemory:)(0);
  qword_1EE17EA98 = v0;
  return result;
}

uint64_t ManagedDuplicateStore.__allocating_init(inMemory:)(char a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  ManagedDuplicateStore.init(inMemory:)(a1);
  return v2;
}

uint64_t static ManagedDuplicateStore.shared.getter()
{
  if (qword_1EE17E9D0 != -1)
    swift_once();
  return swift_retain();
}

uint64_t ManagedDuplicateStore.init(inMemory:)(char a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 32) = 0;
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3740]), sel_init);
  *(_QWORD *)(v1 + 48) = 0;
  *(_QWORD *)(v1 + 56) = 0;
  *(_QWORD *)(v1 + 40) = v3;
  v4 = v1 + OBJC_IVAR____TtC8Contacts21ManagedDuplicateStore____lazy_storage___persistentStoreURL;
  v5 = sub_18FA28084();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(_BYTE *)(v1 + 16) = a1;
  return v1;
}

uint64_t ManagedDuplicateStore.deinit()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1)
  {
    v2 = (void *)objc_opt_self();
    swift_unknownObjectRetain();
    v3 = objc_msgSend(v2, sel_defaultCenter);
    objc_msgSend(v3, sel_removeObserver_, v1);
    swift_unknownObjectRelease();

  }
  swift_unknownObjectRelease();

  sub_18F9DFD58(v0 + OBJC_IVAR____TtC8Contacts21ManagedDuplicateStore____lazy_storage___persistentStoreURL, &qword_1EE17EA20);
  return v0;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x194006CFC]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t ManagedDuplicateStore.__deallocating_deinit()
{
  ManagedDuplicateStore.deinit();
  return swift_deallocClassInstance();
}

id sub_18F9D8104()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 40);
  objc_msgSend(v1, sel_lock);
  v2 = *(id *)(v0 + 48);
  if (v2)
  {
    v3 = v2;
  }
  else
  {
    v2 = sub_18F9D8A60();
    v4 = *(void **)(v0 + 48);
    *(_QWORD *)(v0 + 48) = v2;
    v5 = v2;

  }
  objc_msgSend(v1, sel_unlock);
  return v2;
}

id sub_18F9D8248()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 56);
  if (v1)
  {
    v2 = *(id *)(v0 + 56);
  }
  else
  {
    sub_18F9D82A0();
    v3 = *(void **)(v0 + 56);
    *(_QWORD *)(v0 + 56) = v4;
    v2 = v4;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

void sub_18F9D82A0()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t ObjCClassFromMetadata;
  id v10;
  void *v11;
  void *v12;
  id v13;
  void (*v14)(char *, char *, uint64_t);
  id v15;
  void *v16;
  id v17;
  uint64_t v18;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EA20);
  ((void (*)(void))MEMORY[0x1E0C80A78])();
  v1 = (char *)&v18 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_18FA28084();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v18 - v7;
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v10 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v11 = (void *)sub_18FA28330();
  v12 = (void *)sub_18FA28330();
  v13 = objc_msgSend(v10, sel_URLForResource_withExtension_, v11, v12);

  if (!v13)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v1, 1, 1, v2);
    goto LABEL_6;
  }
  sub_18FA28078();

  v14 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v14(v1, v6, v2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v1, 0, 1, v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v14(v8, v1, v2);
  v15 = objc_allocWithZone(MEMORY[0x1E0C97B98]);
  v16 = (void *)sub_18FA28054();
  v17 = objc_msgSend(v15, sel_initWithContentsOfURL_, v16);

  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);

    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_18F9D84DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EA20);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v13[-v7];
  v9 = v1 + OBJC_IVAR____TtC8Contacts21ManagedDuplicateStore____lazy_storage___persistentStoreURL;
  swift_beginAccess();
  sub_18F9DEBB8(v9, (uint64_t)v8);
  v10 = sub_18FA28084();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_18F9DFD58((uint64_t)v8, &qword_1EE17EA20);
  sub_18F9D864C(v1);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v6, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess();
  sub_18F9DEC00((uint64_t)v6, v9);
  return swift_endAccess();
}

uint64_t sub_18F9D864C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint8_t *v24;
  void *v25;
  void (*v26)(char *, uint64_t);
  _QWORD v27[2];
  uint8_t *v28;
  void *v29;
  uint64_t v30;
  id v31[2];

  v31[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = sub_18FA28084();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v27 - v7;
  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
    return sub_18FA28048();
  sub_18FA28048();
  v10 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v31[0] = 0;
  v11 = objc_msgSend(v10, sel_URLForDirectory_inDomain_appropriateForURL_create_error_, 14, 1, 0, 1, v31);

  v12 = v31[0];
  if (v11)
  {
    sub_18FA28078();
    v13 = v12;

    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v6, v2);
  }
  else
  {
    v14 = v31[0];
    v15 = (void *)sub_18FA28030();

    swift_willThrow();
    if (qword_1EE17EA90 != -1)
      swift_once();
    v16 = sub_18FA28204();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EE1835A0);
    v17 = v15;
    v18 = v15;
    v19 = sub_18FA281EC();
    v20 = sub_18FA28648();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v29 = (void *)swift_slowAlloc();
      v31[0] = v29;
      v28 = v21;
      *(_DWORD *)v21 = 136315138;
      v27[1] = v21 + 4;
      swift_getErrorValue();
      v22 = sub_18FA289CC();
      v30 = sub_18F9DE1F0(v22, v23, (uint64_t *)v31);
      sub_18FA286E4();
      swift_bridgeObjectRelease();

      v24 = v28;
      _os_log_impl(&dword_18F8BD000, v19, v20, "Could not get URL for ManagedDuplicateStore %s", v28, 0xCu);
      v25 = v29;
      swift_arrayDestroy();
      MEMORY[0x194006DBC](v25, -1, -1);
      MEMORY[0x194006DBC](v24, -1, -1);

    }
    else
    {

    }
  }
  if (qword_1EE17EA88 != -1)
    swift_once();
  sub_18FA28060();
  sub_18FA2806C();
  v26 = *(void (**)(char *, uint64_t))(v3 + 8);
  v26(v6, v2);
  return ((uint64_t (*)(char *, uint64_t))v26)(v8, v2);
}

id sub_18F9D8A60()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  unint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  id *v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v41[2];
  uint64_t v42;
  void *v43;
  id v44;
  uint64_t aBlock[8];

  v0 = (void *)0xD00000000000001ALL;
  v1 = sub_18FA28084();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_18F9D8248();
  v6 = objc_allocWithZone(MEMORY[0x1E0C97BC8]);
  v7 = (void *)sub_18FA28330();
  v8 = objc_msgSend(v6, sel_initWithName_managedObjectModel_, v7, v5);

  v9 = objc_msgSend(v8, sel_persistentStoreDescriptions);
  sub_18F9E000C(0, &qword_1EE17EAF0);
  v10 = sub_18FA28444();

  if (!(v10 >> 62))
  {
    if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    sub_18F9D7B80();
    swift_allocError();
    *(_QWORD *)v39 = 0xD000000000000032;
    *(_QWORD *)(v39 + 8) = 0x800000018FA50270;
    *(_BYTE *)(v39 + 16) = 0;
    swift_willThrow();

    return v8;
  }
  swift_bridgeObjectRetain();
  v38 = sub_18FA288B8();
  swift_bridgeObjectRelease();
  if (!v38)
    goto LABEL_14;
LABEL_3:
  if ((v10 & 0xC000000000000001) != 0)
  {
    v11 = (id)MEMORY[0x194005370](0, v10);
  }
  else
  {
    if (!*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_18;
    }
    v11 = *(id *)(v10 + 32);
  }
  v0 = v11;
  swift_bridgeObjectRelease();
  sub_18F9D84DC((uint64_t)v4);
  v12 = (void *)sub_18FA28054();
  v6 = *(id *)(v2 + 8);
  v2 = v1;
  ((void (*)(char *, uint64_t))v6)(v4, v1);
  objc_msgSend(v0, sel_setURL_, v12);

  if (qword_1EE17EA90 != -1)
LABEL_18:
    swift_once();
  v13 = sub_18FA28204();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EE1835A0);
  swift_retain_n();
  v14 = sub_18FA281EC();
  v15 = sub_18FA2863C();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v41[0] = v6;
    v17 = (uint8_t *)v16;
    v42 = swift_slowAlloc();
    aBlock[0] = v42;
    v44 = v8;
    *(_DWORD *)v17 = 136315138;
    v41[1] = v17 + 4;
    sub_18F9D84DC((uint64_t)v4);
    sub_18F9D727C(&qword_1EE180CD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v18 = sub_18FA28948();
    v43 = v0;
    v20 = v19;
    ((void (*)(char *, uint64_t))v41[0])(v4, v2);
    aBlock[7] = sub_18F9DE1F0(v18, v20, aBlock);
    v8 = v44;
    sub_18FA286E4();
    swift_release_n();
    v0 = v43;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_18F8BD000, v14, v15, "Will attempt to use ManagedDuplicateStore at %s", v17, 0xCu);
    v21 = v42;
    swift_arrayDestroy();
    MEMORY[0x194006DBC](v21, -1, -1);
    MEMORY[0x194006DBC](v17, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  sub_18F9E000C(0, &qword_1EE17EAF8);
  v22 = (void *)sub_18FA28690();
  objc_msgSend(v0, sel_setOption_forKey_, v22, *MEMORY[0x1E0C97978]);

  v23 = (void *)sub_18FA28690();
  objc_msgSend(v0, sel_setOption_forKey_, v23, *MEMORY[0x1E0C97900]);

  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = 0;
  v25 = (id *)(v24 + 16);
  aBlock[4] = (uint64_t)sub_18F9E0068;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_18F9D91A0;
  aBlock[3] = (uint64_t)&block_descriptor_46;
  v26 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_loadPersistentStoresWithCompletionHandler_, v26);
  _Block_release(v26);
  swift_beginAccess();
  if (*v25)
  {
    v27 = objc_msgSend(*v25, sel_localizedDescription);
    v28 = sub_18FA2833C();
    v30 = v29;

    sub_18F9D7B80();
    swift_allocError();
    *(_QWORD *)v31 = v28;
    *(_QWORD *)(v31 + 8) = v30;
    *(_BYTE *)(v31 + 16) = 0;
    swift_willThrow();

    swift_release();
  }
  else
  {
    v32 = objc_msgSend(v8, sel_viewContext);
    objc_msgSend(v32, sel_setAutomaticallyMergesChangesFromParent_, 1);

    v33 = objc_msgSend(v8, sel_viewContext);
    v34 = (void *)sub_18FA28330();
    objc_msgSend(v33, sel_setName_, v34);

    v35 = objc_msgSend(v8, sel_viewContext);
    objc_msgSend(v35, sel_setMergePolicy_, *MEMORY[0x1E0C978C0]);

    v36 = objc_msgSend(v8, sel_viewContext);
    objc_msgSend(v36, sel_setUndoManager_, 0);

    v37 = objc_msgSend(v8, sel_viewContext);
    objc_msgSend(v37, sel_setShouldDeleteInaccessibleFaults_, 1);

    swift_release();
  }
  return v8;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

void sub_18F9D9140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;

  if (a2)
  {
    v4 = sub_18FA28024();
    swift_beginAccess();
    v5 = *(void **)(a3 + 16);
    *(_QWORD *)(a3 + 16) = v4;

  }
}

void sub_18F9D91A0(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(id, void *);
  id v6;
  id v7;

  v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(v7, a3);
  swift_release();

}

id sub_18F9D9214()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  v0 = sub_18F9D8104();
  if (v0)
  {
    v1 = v0;
    v2 = objc_msgSend(v0, sel_newBackgroundContext);
    objc_msgSend(v2, sel_setMergePolicy_, *MEMORY[0x1E0C978C0]);
    objc_msgSend(v2, sel_setUndoManager_, 0);

  }
  else
  {
    if (qword_1EE17EA90 != -1)
      swift_once();
    v3 = sub_18FA28204();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EE1835A0);
    v4 = sub_18FA281EC();
    v5 = sub_18FA28648();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_18F8BD000, v4, v5, "Could not make task context ManagedDuplicateStore", v6, 2u);
      MEMORY[0x194006DBC](v6, -1, -1);
    }

    return 0;
  }
  return v2;
}

void sub_18F9D9338()
{
  void *v0;
  id v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;

  v1 = sub_18F9D9214();
  if (v1)
  {
    v2 = v1;
    v3 = (void *)sub_18FA28330();
    objc_msgSend(v2, sel_setName_, v3);

    v4 = (void *)sub_18FA28330();
    objc_msgSend(v2, sel_setTransactionAuthor_, v4);

    MEMORY[0x1E0C80A78](v5);
    sub_18FA28660();
    if (v0)
    {
      swift_getErrorValue();
      v6 = sub_18FA289CC();
      v8 = v7;
      sub_18F9D7B80();
      swift_allocError();
      *(_QWORD *)v9 = v6;
      *(_QWORD *)(v9 + 8) = v8;
      *(_BYTE *)(v9 + 16) = 3;
      swift_willThrow();

    }
  }
  else
  {
    if (qword_1EE17EA90 != -1)
      swift_once();
    v10 = sub_18FA28204();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EE1835A0);
    v11 = sub_18FA281EC();
    v12 = sub_18FA28648();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_18F8BD000, v11, v12, "Could not save duplicates", v13, 2u);
      MEMORY[0x194006DBC](v13, -1, -1);
    }

  }
}

uint64_t sub_18F9D9574()
{
  return sub_18FA28660();
}

void sub_18F9D95B8(unint64_t a1, void *a2)
{
  uint8_t *v2;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t ObjCClassFromMetadata;
  objc_class *v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34[2];

  v34[1] = *(id *)MEMORY[0x1E0C80C00];
  if (qword_1EE17EA90 != -1)
    swift_once();
  v5 = sub_18FA28204();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EE1835A0);
  swift_bridgeObjectRetain_n();
  v6 = sub_18FA281EC();
  LOBYTE(v7) = sub_18FA2863C();
  v8 = a1 >> 62;
  if (!os_log_type_enabled(v6, (os_log_type_t)v7))
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_8;
  }
  v2 = (uint8_t *)swift_slowAlloc();
  *(_DWORD *)v2 = 134217984;
  if (v8)
    goto LABEL_26;
  v9 = *(void **)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease();
    v34[0] = v9;
    sub_18FA286E4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_18F8BD000, v6, (os_log_type_t)v7, "Will save %ld managed duplicates", v2, 0xCu);
    MEMORY[0x194006DBC](v2, -1, -1);

LABEL_8:
    if (v8)
    {
      swift_bridgeObjectRetain();
      v7 = sub_18FA288B8();
      if (!v7)
        goto LABEL_17;
    }
    else
    {
      v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v7)
        goto LABEL_17;
    }
    type metadata accessor for CNDuplicateSet();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    if (v7 >= 1)
      break;
    __break(1u);
LABEL_26:
    swift_bridgeObjectRetain();
    v9 = (void *)sub_18FA288B8();
    swift_bridgeObjectRelease();
  }
  v11 = (objc_class *)ObjCClassFromMetadata;
  v12 = 0;
  do
  {
    if ((a1 & 0xC000000000000001) != 0)
      v13 = (id)MEMORY[0x194005370](v12, a1);
    else
      v13 = *(id *)(a1 + 8 * v12 + 32);
    v14 = v13;
    ++v12;
    v15 = objc_msgSend(objc_allocWithZone(v11), sel_initWithContext_, a2);
    sub_18FA03208((uint64_t)v14, a2);

  }
  while (v7 != v12);
LABEL_17:
  swift_bridgeObjectRelease();
  v34[0] = 0;
  if ((objc_msgSend(a2, sel_save_, v34) & 1) != 0)
  {
    v16 = v34[0];
    v17 = sub_18FA281EC();
    v18 = sub_18FA2863C();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_18F8BD000, v17, v18, "Did save managed duplicates", v19, 2u);
      MEMORY[0x194006DBC](v19, -1, -1);
    }

  }
  else
  {
    v20 = v34[0];
    v21 = (void *)sub_18FA28030();

    swift_willThrow();
    v22 = v21;
    v23 = v21;
    v24 = sub_18FA281EC();
    v25 = sub_18FA28648();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = (void *)swift_slowAlloc();
      v34[0] = v27;
      *(_DWORD *)v26 = 136315138;
      swift_getErrorValue();
      v28 = sub_18FA289CC();
      sub_18F9DE1F0(v28, v29, (uint64_t *)v34);
      sub_18FA286E4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_18F8BD000, v24, v25, "Could not save managed duplicates %s", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x194006DBC](v27, -1, -1);
      MEMORY[0x194006DBC](v26, -1, -1);
    }
    else
    {

    }
    swift_getErrorValue();
    v30 = sub_18FA289CC();
    v32 = v31;
    sub_18F9D7B80();
    swift_allocError();
    *(_QWORD *)v33 = v30;
    *(_QWORD *)(v33 + 8) = v32;
    *(_BYTE *)(v33 + 16) = 3;
    swift_willThrow();

  }
}

void sub_18F9D9AA0(uint64_t a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;

  if (*(_QWORD *)(a1 + 16))
  {
    v1 = sub_18F9D9214();
    if (v1)
    {
      v2 = v1;
      v3 = (void *)sub_18FA28330();
      objc_msgSend(v2, sel_setName_, v3);

      v4 = (void *)sub_18FA28330();
      objc_msgSend(v2, sel_setTransactionAuthor_, v4);

      MEMORY[0x1E0C80A78](v5);
      sub_18FA28660();

    }
    else
    {
      if (qword_1EE17EA90 != -1)
        swift_once();
      v6 = sub_18FA28204();
      __swift_project_value_buffer(v6, (uint64_t)qword_1EE1835A0);
      v7 = sub_18FA281EC();
      v8 = sub_18FA28648();
      if (os_log_type_enabled(v7, v8))
      {
        v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v9 = 0;
        _os_log_impl(&dword_18F8BD000, v7, v8, "Could not batch insert duplicates", v9, 2u);
        MEMORY[0x194006DBC](v9, -1, -1);
      }

    }
  }
}

void sub_18F9D9C6C(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  char v28;
  _OWORD v29[2];
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v5 = sub_18F9DFBB0(a2);
  if (qword_1EE17EA90 != -1)
    swift_once();
  v6 = sub_18FA28204();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EE1835A0);
  v7 = sub_18FA281EC();
  v8 = sub_18FA2863C();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_18F8BD000, v7, v8, "Will batch insert duplicates", v9, 2u);
    MEMORY[0x194006DBC](v9, -1, -1);
  }

  v30 = 0;
  v10 = objc_msgSend(a3, sel_executeRequest_error_, v5, &v30);
  v11 = v30;
  if (!v10)
  {
    v17 = v30;
    v18 = (void *)sub_18FA28030();

    swift_willThrow();
    swift_getErrorValue();
    v30 = (id)sub_18FA289CC();
    v31 = v19;
    sub_18FA283A8();
    MEMORY[0x194004FBC](a2, &type metadata for DuplicateSetProperties);
    sub_18FA283A8();
    swift_bridgeObjectRelease();
    v20 = v30;
    v21 = v31;
    sub_18F9D7B80();
    swift_allocError();
    *(_QWORD *)v22 = v20;
    *(_QWORD *)(v22 + 8) = v21;
    *(_BYTE *)(v22 + 16) = 4;
    swift_willThrow();

LABEL_20:
    return;
  }
  v12 = v10;
  objc_opt_self();
  v13 = swift_dynamicCastObjCClass();
  if (!v13)
  {
    v23 = v11;

LABEL_19:
    sub_18F9D7B80();
    swift_allocError();
    *(_QWORD *)v27 = 0xD000000000000023;
    *(_QWORD *)(v27 + 8) = 0x800000018FA501B0;
    *(_BYTE *)(v27 + 16) = 4;
    swift_willThrow();
    goto LABEL_20;
  }
  v14 = (void *)v13;
  v15 = v11;
  v16 = v12;
  if (objc_msgSend(v14, sel_result))
  {
    sub_18FA28720();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v29, 0, sizeof(v29));
  }
  sub_18F9DFF34((uint64_t)v29, (uint64_t)&v30);
  if (!v32)
  {

    sub_18F9DFD58((uint64_t)&v30, &qword_1EE17EB58);
    goto LABEL_19;
  }
  if ((swift_dynamicCast() & 1) == 0 || v28 != 1)
  {

    goto LABEL_19;
  }
  v24 = sub_18FA281EC();
  v25 = sub_18FA2863C();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v26 = 0;
    _os_log_impl(&dword_18F8BD000, v24, v25, "Successfully insert duplicates", v26, 2u);
    MEMORY[0x194006DBC](v26, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_18F9DA03C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  void *v12;

  v8 = (_QWORD *)(a2 + 16);
  result = swift_beginAccess();
  v10 = *(_QWORD *)(a2 + 16);
  if (v10 >= a3)
    return v10 >= a3;
  if (v10 < 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if ((unint64_t)v10 >= *(_QWORD *)(a4 + 16))
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v11 = DuplicateSetProperties.dictionaryValue.getter();
  sub_18F9DA17C(v11);
  swift_bridgeObjectRelease();
  v12 = (void *)sub_18FA28264();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_addEntriesFromDictionary_, v12);

  result = swift_beginAccess();
  if (!__OFADD__(*v8, 1))
  {
    ++*v8;
    return v10 >= a3;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_18F9DA17C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[3];
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EB18);
    v2 = sub_18FA288E8();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_18F9DFCEC(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(_QWORD *)&v39 = v19;
    *((_QWORD *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(_QWORD *)&v37[0] = v19;
    *((_QWORD *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_18F9DFD48(v38, v32);
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_18F9DFD48(v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_18F9DFD48(v36, v37);
    sub_18F9DFD48(v37, &v33);
    result = sub_18FA28780();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_18F9DFD48(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_18F9DFFC4();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_18F9DA540()
{
  void *v0;
  NSObject *v1;
  NSObject *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;

  v1 = sub_18F9D9214();
  if (v1)
  {
    v2 = v1;
    v3 = (void *)sub_18FA28330();
    -[NSObject setName:](v2, sel_setName_, v3);

    v4 = (void *)sub_18FA28330();
    -[NSObject setTransactionAuthor:](v2, sel_setTransactionAuthor_, v4);

    MEMORY[0x1E0C80A78](v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EB60);
    sub_18FA28660();
    if (v0)

  }
  else
  {
    if (qword_1EE17EA90 != -1)
      swift_once();
    v6 = sub_18FA28204();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EE1835A0);
    v2 = sub_18FA281EC();
    v7 = sub_18FA28648();
    if (os_log_type_enabled(v2, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_18F8BD000, v2, v7, "Could not update duplicate availability", v8, 2u);
      MEMORY[0x194006DBC](v8, -1, -1);
    }
  }

}

void sub_18F9DA71C(uint64_t a1@<X0>, void *a2@<X1>, _BYTE *a3@<X8>)
{
  id v6;
  NSObject *v7;
  uint64_t inited;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  NSObject *v33;
  char v34;
  _OWORD v35[2];
  id v36[19];

  v36[17] = *(id *)MEMORY[0x1E0C80C00];
  type metadata accessor for CNDuplicateSet();
  v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_entity);
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97AB0]), sel_initWithEntity_, v6);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE17EB30);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FA40F90;
  v36[0] = (id)0x616C696176417369;
  v36[1] = (id)0xEB00000000656C62;
  sub_18FA28798();
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, 0);
  *(_QWORD *)(inited + 96) = sub_18F9E000C(0, &qword_1EE17EAF8);
  *(_QWORD *)(inited + 72) = v9;
  sub_18FA13E3C(inited);
  v10 = (void *)sub_18FA28264();
  swift_bridgeObjectRelease();
  -[NSObject setPropertiesToUpdate:](v7, sel_setPropertiesToUpdate_, v10);

  sub_18F9E000C(0, &qword_1EE17EAD8);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE17EB40);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_18FA40F90;
  *(_QWORD *)(v11 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EAB8);
  *(_QWORD *)(v11 + 64) = sub_18F9DE888();
  *(_QWORD *)(v11 + 32) = a1;
  swift_bridgeObjectRetain();
  v12 = (void *)sub_18FA28624();
  -[NSObject setPredicate:](v7, sel_setPredicate_, v12);

  if (qword_1EE17EA90 != -1)
    swift_once();
  v13 = sub_18FA28204();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EE1835A0);
  v14 = sub_18FA281EC();
  v15 = sub_18FA2863C();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_18F8BD000, v14, v15, "Will batch update duplicate availability", v16, 2u);
    MEMORY[0x194006DBC](v16, -1, -1);
  }

  v36[0] = 0;
  v17 = objc_msgSend(a2, sel_executeRequest_error_, v7, v36);
  v18 = v36[0];
  if (!v17)
  {
    v23 = v36[0];
    v24 = (void *)sub_18FA28030();

    swift_willThrow();
    swift_getErrorValue();
    v25 = sub_18FA289CC();
    v27 = v26;
    sub_18F9D7B80();
    swift_allocError();
    *(_QWORD *)v28 = v25;
    *(_QWORD *)(v28 + 8) = v27;
    *(_BYTE *)(v28 + 16) = 5;
    swift_willThrow();

    return;
  }
  v19 = v17;
  objc_opt_self();
  v20 = swift_dynamicCastObjCClass();
  if (!v20)
  {
    v29 = v18;

LABEL_22:
    goto LABEL_23;
  }
  v21 = (void *)v20;
  v22 = v18;
  v19 = v19;
  if (objc_msgSend(v21, sel_result))
  {
    sub_18FA28720();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v35, 0, sizeof(v35));
  }
  sub_18F9DFF34((uint64_t)v35, (uint64_t)v36);
  if (v36[3])
  {
    if ((swift_dynamicCast() & 1) != 0 && v34 == 1)
    {
      v30 = sub_18FA281EC();
      v31 = sub_18FA2863C();
      if (os_log_type_enabled(v30, v31))
      {
        v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v32 = 0;
        _os_log_impl(&dword_18F8BD000, v30, v31, "Successfully updated duplicate availability", v32, 2u);
        MEMORY[0x194006DBC](v32, -1, -1);
        v33 = v7;
      }
      else
      {
        v33 = v30;
        v30 = v7;
      }

    }
    else
    {

    }
    goto LABEL_22;
  }

  sub_18F9DFD58((uint64_t)v36, &qword_1EE17EB58);
LABEL_23:
  *a3 = 0;
}

void sub_18F9DAC48()
{
  id v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;

  v0 = sub_18F9D9214();
  if (v0)
  {
    v1 = v0;
    v2 = (void *)sub_18FA28330();
    objc_msgSend(v1, sel_setName_, v2);

    v3 = (void *)sub_18FA28330();
    objc_msgSend(v1, sel_setTransactionAuthor_, v3);

    MEMORY[0x1E0C80A78](v4);
    sub_18FA28660();

  }
  else
  {
    if (qword_1EE17EA90 != -1)
      swift_once();
    v5 = sub_18FA28204();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EE1835A0);
    v6 = sub_18FA281EC();
    v7 = sub_18FA28648();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_18F8BD000, v6, v7, "Could not update cohort availability", v8, 2u);
      MEMORY[0x194006DBC](v8, -1, -1);
    }

  }
}

void sub_18F9DADFC(uint64_t a1, void *a2)
{
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  void *v34;
  _OWORD v35[2];
  id v36[5];

  v36[4] = *(id *)MEMORY[0x1E0C80C00];
  if (qword_1EE17EA80 != -1)
    swift_once();
  v4 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  swift_bridgeObjectRetain();
  v5 = (void *)sub_18FA28330();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, sel_initWithEntityName_, v5);

  sub_18F9E000C(0, &qword_1EE17EAD8);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE17EB40);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_18FA40F90;
  *(_QWORD *)(v7 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EAB8);
  *(_QWORD *)(v7 + 64) = sub_18F9DE888();
  *(_QWORD *)(v7 + 32) = a1;
  swift_bridgeObjectRetain();
  v8 = (void *)sub_18FA28624();
  objc_msgSend(v6, sel_setPredicate_, v8);

  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97A90]), sel_initWithFetchRequest_, v6);
  objc_msgSend(v9, sel_setResultType_, 2);
  if (qword_1EE17EA90 != -1)
    swift_once();
  v10 = sub_18FA28204();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EE1835A0);
  v11 = sub_18FA281EC();
  v12 = sub_18FA2863C();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_18F8BD000, v11, v12, "Will batch update duplicate cohort availability", v13, 2u);
    MEMORY[0x194006DBC](v13, -1, -1);
  }

  v36[0] = 0;
  v14 = objc_msgSend(a2, sel_executeRequest_error_, v9, v36);
  v15 = v36[0];
  if (!v14)
  {
    v21 = v36[0];
    v22 = (void *)sub_18FA28030();

    swift_willThrow();
    swift_getErrorValue();
    v23 = sub_18FA289CC();
    v25 = v24;
    sub_18F9D7B80();
    swift_allocError();
    *(_QWORD *)v26 = v23;
    *(_QWORD *)(v26 + 8) = v25;
    *(_BYTE *)(v26 + 16) = 6;
    swift_willThrow();

    return;
  }
  v16 = v14;
  objc_opt_self();
  v17 = swift_dynamicCastObjCClass();
  if (v17)
  {
    v18 = (void *)v17;
    v19 = v15;
    v20 = v16;
    if (objc_msgSend(v18, sel_result))
    {
      sub_18FA28720();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v35, 0, sizeof(v35));
    }
    sub_18F9DFF34((uint64_t)v35, (uint64_t)v36);
    if (v36[3])
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        v28 = sub_18FA281EC();
        v29 = sub_18FA2863C();
        if (os_log_type_enabled(v28, v29))
        {
          v30 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)v30 = 134217984;
          v36[0] = v34;
          sub_18FA286E4();
          _os_log_impl(&dword_18F8BD000, v28, v29, "Removed %ld unavailable cohorts.", v30, 0xCu);
          MEMORY[0x194006DBC](v30, -1, -1);

          return;
        }

        goto LABEL_23;
      }

    }
    else
    {

      sub_18F9DFD58((uint64_t)v36, &qword_1EE17EB58);
    }
  }
  else
  {
    v27 = v15;
  }
  v31 = sub_18FA281EC();
  v32 = sub_18FA28648();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v33 = 0;
    _os_log_impl(&dword_18F8BD000, v31, v32, "There was an unknown problem updating cohort availability.", v33, 2u);
    MEMORY[0x194006DBC](v33, -1, -1);

    return;
  }

LABEL_23:
}

uint64_t sub_18F9DB34C(uint64_t a1)
{
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  void (*v16)();
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  _QWORD v22[6];

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = MEMORY[0x1E0DEE9D8];
  v3 = sub_18F9D9214();
  if (v3)
  {
    v4 = v3;
    v5 = (void *)sub_18FA28330();
    objc_msgSend(v4, sel_setName_, v5);

    v6 = (void *)sub_18FA28330();
    objc_msgSend(v4, sel_setTransactionAuthor_, v6);

    v7 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
    v8 = (void *)sub_18FA28330();
    v9 = objc_msgSend(v7, sel_initWithEntityName_, v8);

    objc_msgSend(v9, sel_setPredicate_, a1);
    v10 = (_QWORD *)swift_allocObject();
    v10[2] = v4;
    v10[3] = v9;
    v10[4] = v2;
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = sub_18F9DE0C0;
    *(_QWORD *)(v11 + 24) = v10;
    v22[4] = sub_18F9DE0DC;
    v22[5] = v11;
    v22[0] = MEMORY[0x1E0C809B0];
    v22[1] = 1107296256;
    v22[2] = sub_18F9DBB7C;
    v22[3] = &block_descriptor;
    v12 = _Block_copy(v22);
    v13 = v4;
    v14 = v9;
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v13, sel_performBlockAndWait_, v12);

    _Block_release(v12);
    LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v13 & 1) == 0)
    {
      swift_beginAccess();
      v15 = *(_QWORD *)(v2 + 16);
      swift_bridgeObjectRetain();
      swift_release();
      v16 = sub_18F9DE0C0;
      goto LABEL_8;
    }
    __break(1u);
    goto LABEL_10;
  }
  if (qword_1EE17EA90 != -1)
LABEL_10:
    swift_once();
  v17 = sub_18FA28204();
  __swift_project_value_buffer(v17, (uint64_t)qword_1EE1835A0);
  v18 = sub_18FA281EC();
  v19 = sub_18FA28648();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v20 = 0;
    _os_log_impl(&dword_18F8BD000, v18, v19, "Could not load managed duplicates", v20, 2u);
    MEMORY[0x194006DBC](v20, -1, -1);
  }

  v15 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  v16 = 0;
LABEL_8:
  sub_18F9DE0AC((uint64_t)v16);
  return v15;
}

void sub_18F9DB6AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint8_t *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  unint64_t v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;

  if (qword_1EE17EA90 != -1)
    swift_once();
  v4 = sub_18FA28204();
  v5 = (uint8_t *)__swift_project_value_buffer(v4, (uint64_t)qword_1EE1835A0);
  v6 = sub_18FA281EC();
  v7 = sub_18FA2863C();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_18F8BD000, v6, v7, "Will fetch managed duplicates from store", v8, 2u);
    MEMORY[0x194006DBC](v8, -1, -1);
  }

  type metadata accessor for CNDuplicateSet();
  v9 = sub_18FA28678();
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_18FA288B8();
    swift_bridgeObjectRelease();
    if (v10)
      goto LABEL_7;
LABEL_15:
    swift_bridgeObjectRelease();
    v16 = MEMORY[0x1E0DEE9D8];
    goto LABEL_16;
  }
  v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v10)
    goto LABEL_15;
LABEL_7:
  v17 = MEMORY[0x1E0DEE9D8];
  v11 = &v17;
  sub_18FA28858();
  if (v10 < 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  v12 = 0;
  do
  {
    if ((v9 & 0xC000000000000001) != 0)
      v13 = (id)MEMORY[0x194005370](v12, v9);
    else
      v13 = *(id *)(v9 + 8 * v12 + 32);
    v14 = v13;
    ++v12;
    v15 = objc_allocWithZone((Class)type metadata accessor for ManagedDuplicate());
    sub_18F9FF5A0(v14);

    sub_18FA28834();
    sub_18FA28864();
    sub_18FA28870();
    sub_18FA28840();
  }
  while (v10 != v12);
  v16 = v17;
  swift_bridgeObjectRelease();
LABEL_16:
  swift_beginAccess();
  *(_QWORD *)(a3 + 16) = v16;
  swift_bridgeObjectRelease();
  swift_retain();
  v11 = sub_18FA281EC();
  LOBYTE(v10) = sub_18FA2863C();
  if (os_log_type_enabled(v11, (os_log_type_t)v10))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v5 = 134217984;
    swift_beginAccess();
    if (!(*(_QWORD *)(a3 + 16) >> 62))
    {
LABEL_18:
      sub_18FA286E4();
      swift_release();
      _os_log_impl(&dword_18F8BD000, v11, (os_log_type_t)v10, "Did fetch %ld managed duplicates from store", v5, 0xCu);
      MEMORY[0x194006DBC](v5, -1, -1);

      return;
    }
LABEL_21:
    swift_bridgeObjectRetain();
    sub_18FA288B8();
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }

  swift_release();
}

uint64_t sub_18F9DBB7C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_18F9DBB9C(uint64_t a1)
{
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  void (*v16)();
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  _QWORD v22[6];

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = MEMORY[0x1E0DEE9D8];
  v3 = sub_18F9D9214();
  if (v3)
  {
    v4 = v3;
    v5 = (void *)sub_18FA28330();
    objc_msgSend(v4, sel_setName_, v5);

    v6 = (void *)sub_18FA28330();
    objc_msgSend(v4, sel_setTransactionAuthor_, v6);

    if (qword_1EE17EA80 != -1)
      swift_once();
    v7 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
    swift_bridgeObjectRetain();
    v8 = (void *)sub_18FA28330();
    swift_bridgeObjectRelease();
    v9 = objc_msgSend(v7, sel_initWithEntityName_, v8);

    objc_msgSend(v9, sel_setPredicate_, a1);
    v10 = (_QWORD *)swift_allocObject();
    v10[2] = v4;
    v10[3] = v9;
    v10[4] = v2;
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = sub_18F9DE14C;
    *(_QWORD *)(v11 + 24) = v10;
    v22[4] = sub_18F9E0070;
    v22[5] = v11;
    v22[0] = MEMORY[0x1E0C809B0];
    v22[1] = 1107296256;
    v22[2] = sub_18F9DBB7C;
    v22[3] = &block_descriptor_20;
    v12 = _Block_copy(v22);
    v13 = v4;
    v14 = v9;
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v13, sel_performBlockAndWait_, v12);

    _Block_release(v12);
    LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v13 & 1) == 0)
    {
      swift_beginAccess();
      v15 = *(_QWORD *)(v2 + 16);
      swift_bridgeObjectRetain();
      swift_release();
      v16 = sub_18F9DE14C;
      goto LABEL_10;
    }
    __break(1u);
    goto LABEL_12;
  }
  if (qword_1EE17EA90 != -1)
LABEL_12:
    swift_once();
  v17 = sub_18FA28204();
  __swift_project_value_buffer(v17, (uint64_t)qword_1EE1835A0);
  v18 = sub_18FA281EC();
  v19 = sub_18FA28648();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v20 = 0;
    _os_log_impl(&dword_18F8BD000, v18, v19, "Could not load managed cohorts", v20, 2u);
    MEMORY[0x194006DBC](v20, -1, -1);
  }

  v15 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  v16 = 0;
LABEL_10:
  sub_18F9DE0AC((uint64_t)v16);
  return v15;
}

void sub_18F9DBF28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint8_t *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  unint64_t v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;

  if (qword_1EE17EA90 != -1)
    swift_once();
  v4 = sub_18FA28204();
  v5 = (uint8_t *)__swift_project_value_buffer(v4, (uint64_t)qword_1EE1835A0);
  v6 = sub_18FA281EC();
  v7 = sub_18FA2863C();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_18F8BD000, v6, v7, "Will fetch managed cohorts from store", v8, 2u);
    MEMORY[0x194006DBC](v8, -1, -1);
  }

  type metadata accessor for CNDuplicateCohort();
  v9 = sub_18FA28678();
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_18FA288B8();
    swift_bridgeObjectRelease();
    if (v10)
      goto LABEL_7;
LABEL_15:
    swift_bridgeObjectRelease();
    v16 = MEMORY[0x1E0DEE9D8];
    goto LABEL_16;
  }
  v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v10)
    goto LABEL_15;
LABEL_7:
  v17 = MEMORY[0x1E0DEE9D8];
  v11 = &v17;
  sub_18FA28858();
  if (v10 < 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  v12 = 0;
  do
  {
    if ((v9 & 0xC000000000000001) != 0)
      v13 = (id)MEMORY[0x194005370](v12, v9);
    else
      v13 = *(id *)(v9 + 8 * v12 + 32);
    v14 = v13;
    ++v12;
    v15 = objc_allocWithZone((Class)type metadata accessor for ManagedCohort());
    sub_18FA06918(v14);

    sub_18FA28834();
    sub_18FA28864();
    sub_18FA28870();
    sub_18FA28840();
  }
  while (v10 != v12);
  v16 = v17;
  swift_bridgeObjectRelease();
LABEL_16:
  swift_beginAccess();
  *(_QWORD *)(a3 + 16) = v16;
  swift_bridgeObjectRelease();
  swift_retain();
  v11 = sub_18FA281EC();
  LOBYTE(v10) = sub_18FA2863C();
  if (os_log_type_enabled(v11, (os_log_type_t)v10))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v5 = 134217984;
    swift_beginAccess();
    if (!(*(_QWORD *)(a3 + 16) >> 62))
    {
LABEL_18:
      sub_18FA286E4();
      swift_release();
      _os_log_impl(&dword_18F8BD000, v11, (os_log_type_t)v10, "Did fetch %ld managed cohorts from store", v5, 0xCu);
      MEMORY[0x194006DBC](v5, -1, -1);

      return;
    }
LABEL_21:
    swift_bridgeObjectRetain();
    sub_18FA288B8();
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }

  swift_release();
}

uint64_t sub_18F9DC3F8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EB50);
    v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_18FA40FA0;
    *(_QWORD *)(v2 + 32) = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EB50);
    v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_18FA40FA0;
    *(_QWORD *)(v3 + 32) = objc_msgSend((id)objc_opt_self(), sel_predicateWithValue_, 1);
  }
  sub_18FA2845C();
  v4 = a1;
  sub_18F9DC518();
  v6 = v5;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v6 + 16))
  {
    v7 = *(_QWORD *)(v6 + 32);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v7;
}

void sub_18F9DC518()
{
  id v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;

  v0 = sub_18F9D9214();
  if (v0)
  {
    v1 = v0;
    v2 = (void *)sub_18FA28330();
    objc_msgSend(v1, sel_setName_, v2);

    v3 = (void *)sub_18FA28330();
    objc_msgSend(v1, sel_setTransactionAuthor_, v3);

    v5 = MEMORY[0x1E0C80A78](v4);
    MEMORY[0x1E0C80A78](v5);
    v6 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EAC0);
    sub_18FA28660();

  }
  else
  {
    if (qword_1EE17EA90 != -1)
      swift_once();
    v7 = sub_18FA28204();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EE1835A0);
    v8 = sub_18FA281EC();
    v9 = sub_18FA28648();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_18F8BD000, v8, v9, "Could not count managed duplicates", v10, 2u);
      MEMORY[0x194006DBC](v10, -1, -1);
    }

  }
}

uint64_t sub_18F9DC730(unint64_t a1, void *a2)
{
  void *v2;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v32;
  uint64_t v33;

  if (qword_1EE17EA90 != -1)
    swift_once();
  v5 = sub_18FA28204();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EE1835A0);
  v6 = sub_18FA281EC();
  v7 = sub_18FA2863C();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_18F8BD000, v6, v7, "Will count managed duplicates in store", v8, 2u);
    MEMORY[0x194006DBC](v8, -1, -1);
  }

  v9 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v10 = (void *)sub_18FA28330();
  v11 = objc_msgSend(v9, sel_initWithEntityName_, v10);

  v12 = v11;
  v13 = a2;
  v14 = sub_18F9DFD94(a1, v12);
  if (v2)
  {

    v15 = v2;
    v16 = v2;
    v17 = sub_18FA281EC();
    v18 = sub_18FA2863C();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      v33 = v20;
      *(_DWORD *)v19 = 136315138;
      swift_getErrorValue();
      v21 = sub_18FA289CC();
      sub_18F9DE1F0(v21, v22, &v33);
      sub_18FA286E4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_18F8BD000, v17, v18, "Failed to count managed duplicates. %s", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x194006DBC](v20, -1, -1);
      MEMORY[0x194006DBC](v19, -1, -1);
    }
    else
    {

    }
    return MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v23 = v14;

    swift_bridgeObjectRetain_n();
    v24 = sub_18FA281EC();
    v25 = sub_18FA2863C();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      v33 = v32;
      *(_DWORD *)v26 = 136315138;
      v27 = swift_bridgeObjectRetain();
      v28 = MEMORY[0x194004FBC](v27, MEMORY[0x1E0DEB418]);
      v30 = v29;
      swift_bridgeObjectRelease();
      sub_18F9DE1F0(v28, v30, &v33);
      sub_18FA286E4();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_18F8BD000, v24, v25, "Counted %s managed duplicates in store", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x194006DBC](v32, -1, -1);
      MEMORY[0x194006DBC](v26, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  return v23;
}

uint64_t sub_18F9DCB68(void *a1)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t isEscapingClosureAtFileLocation;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  void (*v24)();
  uint64_t v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v38;
  uint64_t aBlock[7];

  v38 = swift_allocObject();
  *(_QWORD *)(v38 + 16) = MEMORY[0x1E0DEE9D8];
  if (qword_1EE17EA80 != -1)
    swift_once();
  v2 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  swift_bridgeObjectRetain();
  v3 = (void *)sub_18FA28330();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_initWithEntityName_, v3);

  sub_18F9E000C(0, &qword_1EE17EAD8);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE17EB40);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_18FA40F90;
  isEscapingClosureAtFileLocation = (uint64_t)&selRef_ensureImageQuotasForImages_adddedImagesCount_inContext_;
  v7 = objc_msgSend(a1, sel_identifier);
  v8 = sub_18FA2833C();
  v10 = v9;

  *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v5 + 64) = sub_18F9DE1AC();
  *(_QWORD *)(v5 + 32) = v8;
  *(_QWORD *)(v5 + 40) = v10;
  v11 = v4;
  v12 = (void *)sub_18FA28624();
  objc_msgSend(v4, sel_setPredicate_, v12);

  v13 = sub_18F9D9214();
  if (v13)
  {
    v14 = v13;
    v15 = (void *)sub_18FA28330();
    objc_msgSend(v14, sel_setName_, v15);

    v16 = (void *)sub_18FA28330();
    objc_msgSend(v14, sel_setTransactionAuthor_, v16);

    v17 = (_QWORD *)swift_allocObject();
    v17[2] = v14;
    v17[3] = v4;
    v17[4] = v38;
    v17[5] = a1;
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = sub_18F9DE86C;
    *(_QWORD *)(v18 + 24) = v17;
    aBlock[4] = (uint64_t)sub_18F9E0070;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_18F9DBB7C;
    aBlock[3] = (uint64_t)&block_descriptor_31;
    v19 = _Block_copy(aBlock);
    v20 = v14;
    v21 = v4;
    swift_retain();
    v22 = a1;
    swift_retain();
    swift_release();
    objc_msgSend(v20, sel_performBlockAndWait_, v19);

    _Block_release(v19);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      swift_beginAccess();
      v23 = *(_QWORD *)(v38 + 16);
      swift_bridgeObjectRetain();
      swift_release();
      v24 = sub_18F9DE86C;
      goto LABEL_11;
    }
    __break(1u);
    goto LABEL_13;
  }
  if (qword_1EE17EA90 != -1)
LABEL_13:
    swift_once();
  v25 = sub_18FA28204();
  __swift_project_value_buffer(v25, (uint64_t)qword_1EE1835A0);
  v26 = a1;
  v27 = sub_18FA281EC();
  v28 = sub_18FA28648();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = (uint8_t *)swift_slowAlloc();
    v30 = swift_slowAlloc();
    aBlock[0] = v30;
    *(_DWORD *)v29 = 136315138;
    v31 = objc_msgSend(v26, *(SEL *)(isEscapingClosureAtFileLocation + 2440));
    v32 = v11;
    v33 = v31;
    v34 = sub_18FA2833C();
    v36 = v35;

    aBlock[6] = sub_18F9DE1F0(v34, v36, aBlock);
    sub_18FA286E4();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_18F8BD000, v27, v28, "Could not load managed duplicates for contact (%s", v29, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194006DBC](v30, -1, -1);
    MEMORY[0x194006DBC](v29, -1, -1);

  }
  else
  {

  }
  v23 = *(_QWORD *)(v38 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  v24 = 0;
LABEL_11:
  sub_18F9DE0AC((uint64_t)v24);
  return v23;
}

void sub_18F9DD0B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  void *v30;
  uint64_t v31[4];
  _QWORD v32[4];
  uint64_t v33;

  if (qword_1EE17EA90 != -1)
LABEL_18:
    swift_once();
  v4 = sub_18FA28204();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EE1835A0);
  v5 = sub_18FA281EC();
  v6 = sub_18FA2863C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_18F8BD000, v5, v6, "Will fetch duplicates for contact from store", v7, 2u);
    MEMORY[0x194006DBC](v7, -1, -1);
  }
  v8 = (_QWORD *)(a3 + 16);

  type metadata accessor for CNDuplicateCohort();
  v9 = sub_18FA28678();
  v10 = v9;
  v11 = MEMORY[0x1E0DEE9D8];
  v32[0] = MEMORY[0x1E0DEE9D8];
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    v12 = sub_18FA288B8();
    v28 = a3;
    if (v12)
    {
LABEL_6:
      v29 = (_QWORD *)(a3 + 16);
      v13 = 4;
      do
      {
        if ((v10 & 0xC000000000000001) != 0)
          v14 = (id)MEMORY[0x194005370](v13 - 4, v10);
        else
          v14 = *(id *)(v10 + 8 * v13);
        v15 = v14;
        a3 = v13 - 3;
        if (__OFADD__(v13 - 4, 1))
        {
          __break(1u);
          goto LABEL_18;
        }
        v16 = objc_msgSend(v14, sel_duplicates);
        if (!v16)
        {
          __break(1u);
          return;
        }
        v17 = v16;
        sub_18F9DF8C4(v16);
        v19 = v18;

        sub_18FA0E13C(v19);
        ++v13;
      }
      while (a3 != v12);
      swift_bridgeObjectRelease_n();
      v20 = v32[0];
      a3 = v28;
      v8 = v29;
      v11 = MEMORY[0x1E0DEE9D8];
      v21 = *(_QWORD *)(v32[0] + 16);
      if (!v21)
        goto LABEL_21;
      goto LABEL_14;
    }
  }
  else
  {
    v12 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v28 = a3;
    if (v12)
      goto LABEL_6;
  }
  swift_bridgeObjectRelease_n();
  v20 = MEMORY[0x1E0DEE9D8];
  v21 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
  if (!v21)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
LABEL_14:
  v33 = v11;
  sub_18FA28858();
  v22 = v20 + 32;
  do
  {
    sub_18F9DFCEC(v22, (uint64_t)v32);
    sub_18F9DFCEC((uint64_t)v32, (uint64_t)v31);
    type metadata accessor for CNDuplicateSet();
    swift_dynamicCast();
    v23 = objc_allocWithZone((Class)type metadata accessor for ManagedDuplicate());
    sub_18F9FF5A0(v30);

    __swift_destroy_boxed_opaque_existential_0((uint64_t)v32);
    sub_18FA28834();
    sub_18FA28864();
    sub_18FA28870();
    sub_18FA28840();
    v22 += 32;
    --v21;
  }
  while (v21);
  v11 = v33;
  swift_bridgeObjectRelease();
  a3 = v28;
LABEL_22:
  swift_beginAccess();
  *(_QWORD *)(a3 + 16) = v11;
  swift_bridgeObjectRelease();
  swift_retain();
  v24 = sub_18FA281EC();
  v25 = sub_18FA2863C();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v26 = 134217984;
    swift_beginAccess();
    if (*v8 >> 62)
    {
      swift_bridgeObjectRetain();
      v27 = sub_18FA288B8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v27 = *(_QWORD *)((*v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v33 = v27;
    sub_18FA286E4();
    swift_release();
    _os_log_impl(&dword_18F8BD000, v24, v25, "Did fetch %ld duplicates for contact from store", v26, 0xCu);
    MEMORY[0x194006DBC](v26, -1, -1);

  }
  else
  {

    swift_release();
  }
}

uint64_t sub_18F9DD704(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  sub_18F9E000C(0, &qword_1EE17EAD8);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE17EB40);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_18FA40F90;
  *(_QWORD *)(v2 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EAB8);
  *(_QWORD *)(v2 + 64) = sub_18F9DE888();
  *(_QWORD *)(v2 + 32) = a1;
  swift_bridgeObjectRetain();
  v3 = (void *)sub_18FA28624();
  v4 = sub_18F9DB34C((uint64_t)v3);

  return v4;
}

uint64_t sub_18F9DD7D0()
{
  return sub_18F9DDB8C();
}

uint64_t static ManagedDuplicateStore.predicateForAvailableDuplicates.getter()
{
  sub_18F9E000C(0, &qword_1EE17EAD8);
  return sub_18FA28624();
}

uint64_t sub_18F9DD844()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EB50);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FA40FB0;
  sub_18F9E000C(0, &qword_1EE17EAD8);
  *(_QWORD *)(inited + 32) = sub_18FA28624();
  *(_QWORD *)(inited + 40) = sub_18FA28624();
  sub_18FA2845C();
  sub_18F9DC518();
  v2 = v1;
  result = swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v2 + 16);
  if (v4)
  {
    if (v4 != 1)
    {
      v5 = *(_QWORD *)(v2 + 32);
      swift_bridgeObjectRelease();
      return v5;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t static ManagedDuplicateStore.predicateForAnnouncedDuplicates.getter()
{
  sub_18F9E000C(0, &qword_1EE17EAD8);
  return sub_18FA28624();
}

uint64_t sub_18F9DDB54()
{
  return sub_18F9DDC90();
}

uint64_t sub_18F9DDB70()
{
  return sub_18F9DDB8C();
}

uint64_t sub_18F9DDB8C()
{
  void *v0;
  uint64_t v1;

  sub_18F9E000C(0, &qword_1EE17EAD8);
  v0 = (void *)sub_18FA28624();
  v1 = sub_18F9DB34C((uint64_t)v0);

  return v1;
}

uint64_t static ManagedDuplicateStore.predicateForIgnoredDuplicates.getter()
{
  sub_18F9E000C(0, &qword_1EE17EAD8);
  return sub_18FA28624();
}

uint64_t sub_18F9DDC58()
{
  return sub_18F9DDB8C();
}

uint64_t sub_18F9DDC74()
{
  return sub_18F9DDC90();
}

uint64_t sub_18F9DDC90()
{
  void *v0;
  uint64_t inited;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_18F9E000C(0, &qword_1EE17EAD8);
  v0 = (void *)sub_18FA28624();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EB50);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FA40FA0;
  *(_QWORD *)(inited + 32) = v0;
  sub_18FA2845C();
  v2 = v0;
  sub_18F9DC518();
  v4 = v3;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v4 + 16))
  {
    v5 = *(_QWORD *)(v4 + 32);

    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease();
    return 0;
  }
  return v5;
}

uint64_t sub_18F9DDDA4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;

  sub_18F9E000C(0, &qword_1EE17EAD8);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE17EB40);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_18FA40F90;
  *(_QWORD *)(v2 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EAB8);
  *(_QWORD *)(v2 + 64) = sub_18F9DE888();
  *(_QWORD *)(v2 + 32) = a1;
  swift_bridgeObjectRetain();
  v3 = sub_18FA28624();
  v4 = sub_18F9DB34C(v3);
  if (v4 >> 62)
    goto LABEL_15;
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      v17 = MEMORY[0x1E0DEE9D8];
      result = sub_18F9DE90C(0, v5 & ~(v5 >> 63), 0);
      if (v5 < 0)
        break;
      v16 = (void *)v3;
      v7 = 0;
      v8 = v17;
      while (v5 != v7)
      {
        if ((v4 & 0xC000000000000001) != 0)
          v9 = (char *)MEMORY[0x194005370](v7, v4);
        else
          v9 = (char *)*(id *)(v4 + 8 * v7 + 32);
        v10 = v9;
        v11 = &v9[OBJC_IVAR___CNManagedDuplicate_signature];
        result = swift_beginAccess();
        v12 = *((_QWORD *)v11 + 1);
        if (!v12)
          goto LABEL_19;
        v13 = *(_QWORD *)v11;
        swift_bridgeObjectRetain();

        v3 = *(_QWORD *)(v17 + 16);
        v14 = *(_QWORD *)(v17 + 24);
        if (v3 >= v14 >> 1)
          sub_18F9DE90C(v14 > 1, v3 + 1, 1);
        ++v7;
        *(_QWORD *)(v17 + 16) = v3 + 1;
        v15 = v17 + 16 * v3;
        *(_QWORD *)(v15 + 32) = v13;
        *(_QWORD *)(v15 + 40) = v12;
        if (v5 == v7)
        {
          swift_bridgeObjectRelease();

          return v8;
        }
      }
      __break(1u);
LABEL_15:
      v5 = sub_18FA288B8();
      if (!v5)
        goto LABEL_16;
    }
    __break(1u);
LABEL_19:
    __break(1u);
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease();

    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_18F9DDFD4(uint64_t a1, void *a2)
{
  uint64_t (*v3)(void);
  id v4;

  v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  LOBYTE(v3) = v3();
  swift_release();

  return v3 & 1;
}

void sub_18F9DE024()
{
  uint64_t v0;

  sub_18F9D95B8(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_18F9DE03C()
{
  uint64_t v0;

  sub_18F9D9C6C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

void sub_18F9DE058(_BYTE *a1@<X8>)
{
  uint64_t v1;

  sub_18F9DA71C(*(_QWORD *)(v1 + 16), *(void **)(v1 + 24), a1);
}

void sub_18F9DE070()
{
  uint64_t v0;

  sub_18F9DADFC(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_18F9DE088()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_18F9DE0AC(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

void sub_18F9DE0C0()
{
  uint64_t *v0;

  sub_18F9DB6AC(v0[2], v0[3], v0[4]);
}

uint64_t sub_18F9DE0CC()
{
  return swift_deallocObject();
}

uint64_t sub_18F9DE0DC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t objectdestroy_3Tm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_18F9DE14C()
{
  uint64_t *v0;

  sub_18F9DBF28(v0[2], v0[3], v0[4]);
}

uint64_t sub_18F9DE158()
{
  return swift_deallocObject();
}

uint64_t sub_18F9DE168()
{
  uint64_t v0;

  return sub_18F9DC730(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_18F9DE180@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2)
    *a1 = result;
  return result;
}

unint64_t sub_18F9DE1AC()
{
  unint64_t result;

  result = qword_1EE180C98;
  if (!qword_1EE180C98)
  {
    result = MEMORY[0x194006D14](MEMORY[0x1E0CB1A70], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EE180C98);
  }
  return result;
}

uint64_t sub_18F9DE1F0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_18F9DE2C0(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_18F9DFCEC((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_18F9DFCEC((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_18F9DE2C0(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_18FA286F0();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_18F9DE478(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_18FA2881C();
  if (!v8)
  {
    sub_18FA288A0();
    __break(1u);
LABEL_17:
    result = sub_18FA288F4();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_18F9DE478(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_18F9DE50C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_18F9DE6E4(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_18F9DE6E4(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_18F9DE50C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_18F9DE680(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_18FA287E0();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_18FA288A0();
      __break(1u);
LABEL_10:
      v2 = sub_18FA283B4();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_18FA288F4();
    __break(1u);
LABEL_14:
    result = sub_18FA288A0();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

_QWORD *sub_18F9DE680(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17E7F8);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_18F9DE6E4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17E7F8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_18FA288F4();
  __break(1u);
  return result;
}

uint64_t sub_18F9DE830()
{
  id *v0;

  swift_release();
  return swift_deallocObject();
}

void sub_18F9DE86C()
{
  uint64_t *v0;

  sub_18F9DD0B0(v0[2], v0[3], v0[4]);
}

uint64_t sub_18F9DE878()
{
  return swift_deallocObject();
}

unint64_t sub_18F9DE888()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE17E9E0;
  if (!qword_1EE17E9E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE17EAB8);
    result = MEMORY[0x194006D14](MEMORY[0x1E0CB1B18], v1);
    atomic_store(result, (unint64_t *)&qword_1EE17E9E0);
  }
  return result;
}

uint64_t sub_18F9DE8D4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_18F9DECD4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_18F9DE8F0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_18F9DEE40(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_18F9DE90C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_18F9DEF9C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_18F9DE928()
{
  return type metadata accessor for ManagedDuplicateStore();
}

uint64_t type metadata accessor for ManagedDuplicateStore()
{
  uint64_t result;

  result = qword_1EE17EE78;
  if (!qword_1EE17EE78)
    return swift_getSingletonMetadata();
  return result;
}

void sub_18F9DE96C()
{
  unint64_t v0;

  sub_18F9DEB64();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for ManagedDuplicateStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ManagedDuplicateStore.__allocating_init(inMemory:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of ManagedDuplicateStore.container.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of ManagedDuplicateStore.newTaskContext()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of ManagedDuplicateStore.saveDuplicates(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of ManagedDuplicateStore.saveDuplicates(_:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of ManagedDuplicateStore.batchInsert(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of ManagedDuplicateStore.updateAvailability(availableSignatures:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of ManagedDuplicateStore.updateCohortAvailability(availableContactIdentifiers:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of ManagedDuplicateStore.managedDuplicates(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t dispatch thunk of ManagedDuplicateStore.managedCohorts(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of ManagedDuplicateStore.countOfManagedDuplicates(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of ManagedDuplicateStore.managedDuplicates(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of ManagedDuplicateStore.availableDuplicates()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t dispatch thunk of ManagedDuplicateStore.countNewAndAvailableDuplicates()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of ManagedDuplicateStore.countOfAvailableDuplicates()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of ManagedDuplicateStore.ignoredDuplicates()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t dispatch thunk of ManagedDuplicateStore.newDuplicatesToAnnounce()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t dispatch thunk of ManagedDuplicateStore.countOfNewDuplicatesToAnnounce()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t dispatch thunk of ManagedDuplicateStore.ignoredSignatures(in:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 464))();
}

void sub_18F9DEB64()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EE17EEB8)
  {
    sub_18FA28084();
    v0 = sub_18FA286CC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EE17EEB8);
  }
}

uint64_t sub_18F9DEBB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EA20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_18F9DEC00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EA20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_18F9DEC48(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_18F9DF104(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_18F9DEC64(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_18F9DF28C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_18F9DEC80(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_18F9DF418(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_18F9DEC9C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_18F9DF59C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_18F9DECB8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_18F9DF73C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_18F9DECD4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE180CB0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_18FA288F4();
  __break(1u);
  return result;
}

uint64_t sub_18F9DEE40(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EB28);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_18FA288F4();
  __break(1u);
  return result;
}

uint64_t sub_18F9DEF9C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17E850);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_18FA288F4();
  __break(1u);
  return result;
}

uint64_t sub_18F9DF104(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_1EE17EBE8);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EBB8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_18FA288F4();
  __break(1u);
  return result;
}

uint64_t sub_18F9DF28C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE180F80);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EAC8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_18FA288F4();
  __break(1u);
  return result;
}

uint64_t sub_18F9DF418(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE180CB8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8])
      memmove(v12, v13, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_18FA288F4();
  __break(1u);
  return result;
}

uint64_t sub_18F9DF59C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE180CC0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 136);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 136 * v8)
      memmove(v10 + 4, a4 + 4, 136 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 136 * v8 || v12 >= v13 + 136 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE180CC8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_18FA288F4();
  __break(1u);
  return result;
}

uint64_t sub_18F9DF73C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE180FA0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE180CA8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_18FA288F4();
  __break(1u);
  return result;
}

void sub_18F9DF8C4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  unint64_t v12;
  _OWORD *v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  BOOL v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;

  v2 = sub_18FA2803C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t)objc_msgSend(a1, sel_count);
  if (v6 <= 0)
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v10 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 24);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE180CB0);
    v7 = (_QWORD *)swift_allocObject();
    v8 = _swift_stdlib_malloc_size(v7);
    v9 = v8 - 32;
    if (v8 < 32)
      v9 = v8 - 1;
    v10 = 2 * (v9 >> 5);
    v7[2] = v6;
    v7[3] = v10;
  }
  v11 = a1;
  sub_18FA28684();

  if (v6 < 0)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v12 = v10 >> 1;
  v13 = v7 + 4;
  if (v6)
  {
    v12 -= v6;
    sub_18F9D727C((unint64_t *)&unk_1EE181010, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58], MEMORY[0x1E0CAFB80]);
    do
    {
      sub_18FA286D8();
      if (!v33)
        goto LABEL_38;
      sub_18F9DFD48(&v32, v13);
      v13 += 2;
    }
    while (--v6);
  }
  v29 = v3;
  sub_18F9D727C((unint64_t *)&unk_1EE181010, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58], MEMORY[0x1E0CAFB80]);
  sub_18FA286D8();
  if (v31)
  {
    while (1)
    {
      sub_18F9DFD48(&v30, &v32);
      if (!v12)
      {
        v14 = v7[3];
        if ((uint64_t)((v14 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_35;
        v15 = v14 & 0xFFFFFFFFFFFFFFFELL;
        if (v15 <= 1)
          v16 = 1;
        else
          v16 = v15;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE180CB0);
        v17 = (_QWORD *)swift_allocObject();
        v18 = _swift_stdlib_malloc_size(v17);
        v19 = v18 - 32;
        if (v18 < 32)
          v19 = v18 - 1;
        v20 = v19 >> 5;
        v17[2] = v16;
        v17[3] = 2 * (v19 >> 5);
        v21 = (unint64_t)(v17 + 4);
        v22 = v7[3] >> 1;
        if (v7[2])
        {
          if (v17 != v7 || v21 >= (unint64_t)&v7[4 * v22 + 4])
            memmove(v17 + 4, v7 + 4, 32 * v22);
          v7[2] = 0;
        }
        v13 = (_OWORD *)(v21 + 32 * v22);
        v12 = (v20 & 0x7FFFFFFFFFFFFFFFLL) - v22;
        swift_release();
        v7 = v17;
      }
      v24 = __OFSUB__(v12--, 1);
      if (v24)
        break;
      sub_18F9DFD48(&v32, v13);
      v13 += 2;
      sub_18FA286D8();
      if (!v31)
        goto LABEL_30;
    }
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
LABEL_30:
  (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v2);
  sub_18F9DFD58((uint64_t)&v30, &qword_1EE17EB58);
  v25 = v7[3];
  if (v25 >= 2)
  {
    v26 = v25 >> 1;
    v24 = __OFSUB__(v26, v12);
    v27 = v26 - v12;
    if (v24)
    {
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
      return;
    }
    v7[2] = v27;
  }
}

id sub_18F9DFBB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  _QWORD *v5;
  id v6;
  void *v7;
  id v8;
  _QWORD v10[6];

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = 0;
  v3 = *(_QWORD *)(a1 + 16);
  type metadata accessor for CNDuplicateSet();
  v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_entity);
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = v2;
  v5[3] = v3;
  v5[4] = a1;
  v6 = objc_allocWithZone(MEMORY[0x1E0C97AA0]);
  v10[4] = sub_18F9DFFB8;
  v10[5] = v5;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 1107296256;
  v10[2] = sub_18F9DDFD4;
  v10[3] = &block_descriptor_40;
  v7 = _Block_copy(v10);
  swift_retain();
  swift_bridgeObjectRetain();
  v8 = objc_msgSend(v6, sel_initWithEntity_dictionaryHandler_, v4, v7);

  _Block_release(v7);
  swift_release();
  swift_release();
  return v8;
}

uint64_t sub_18F9DFCEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

_OWORD *sub_18F9DFD48(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_18F9DFD58(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_18F9DFD94(unint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;

  if (a1 >> 62)
    goto LABEL_18;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v5 = MEMORY[0x1E0DEE9D8];
    if (!v4)
      return v5;
    v15 = MEMORY[0x1E0DEE9D8];
    result = sub_18F9DE8F0(0, v4 & ~(v4 >> 63), 0);
    if (v4 < 0)
      break;
    v7 = 0;
    v5 = v15;
    while (v4 != v7)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x194005370](v7, a1);
      else
        v8 = *(id *)(a1 + 8 * v7 + 32);
      v9 = v8;
      objc_msgSend(a2, sel_setPredicate_, v8);
      type metadata accessor for CNDuplicateSet();
      v10 = sub_18FA2866C();
      if (v2)
      {
        swift_release();

        return v5;
      }
      v11 = v10;

      v13 = *(_QWORD *)(v15 + 16);
      v12 = *(_QWORD *)(v15 + 24);
      if (v13 >= v12 >> 1)
        sub_18F9DE8F0(v12 > 1, v13 + 1, 1);
      ++v7;
      *(_QWORD *)(v15 + 16) = v13 + 1;
      *(_QWORD *)(v15 + 8 * v13 + 32) = v11;
      if (v4 == v7)
        return v5;
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    v4 = sub_18FA288B8();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_18F9DFF34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EB58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_18F9DFF7C()
{
  return swift_deallocObject();
}

uint64_t sub_18F9DFF8C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_18F9DFFB8(void *a1)
{
  uint64_t *v1;

  return sub_18F9DA03C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_18F9DFFC4()
{
  return swift_release();
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_18F9E000C(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_18F9E0044()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_18F9E0068(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_18F9D9140(a1, a2, v2);
}

void sub_18F9E0098()
{
  sub_18F9DE024();
}

uint64_t related decl 'e' for CNErrorCode.affectedRecords.getter(uint64_t a1)
{
  return sub_18F9E00D4(a1, (uint64_t)&CNErrorUserInfoAffectedRecordsKey, &qword_1EE180CD8);
}

uint64_t related decl 'e' for CNErrorCode.affectedRecordIdentifiers.getter(uint64_t a1)
{
  return sub_18F9E00D4(a1, (uint64_t)&CNErrorUserInfoAffectedRecordIdentifiersKey, &qword_1EE17EAB8);
}

uint64_t sub_18F9E00D4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v10;
  __int128 v11;
  __int128 v12;

  *(_QWORD *)&v11 = a1;
  type metadata accessor for CNError(0);
  sub_18F9D727C((unint64_t *)&qword_1EE180AE8, (uint64_t (*)(uint64_t))type metadata accessor for CNError, (uint64_t)&unk_18FA40CE0);
  v4 = sub_18FA28000();
  v5 = sub_18FA2833C();
  if (*(_QWORD *)(v4 + 16) && (v7 = sub_18F9E01F0(v5, v6), (v8 & 1) != 0))
  {
    sub_18F9DFCEC(*(_QWORD *)(v4 + 56) + 32 * v7, (uint64_t)&v11);
  }
  else
  {
    v11 = 0u;
    v12 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v12 + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    if (swift_dynamicCast())
      return v10;
    else
      return 0;
  }
  else
  {
    sub_18F9E0254((uint64_t)&v11);
    return 0;
  }
}

uint64_t related decl 'e' for CNErrorCode.keyPaths.getter(uint64_t a1)
{
  return sub_18F9E00D4(a1, (uint64_t)&CNErrorUserInfoKeyPathsKey, &qword_1EE17EAB8);
}

unint64_t sub_18F9E01F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_18FA28A08();
  sub_18FA28390();
  v4 = sub_18FA28A14();
  return sub_18F9E0330(a1, a2, v4);
}

uint64_t sub_18F9E0254(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EB58);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_18F9E0294(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_18FA28780();
  return sub_18F9E0410(a1, v2);
}

unint64_t sub_18F9E02C4(uint64_t a1)
{
  uint64_t v2;

  sub_18FA27FB8();
  sub_18F9D727C((unint64_t *)&qword_1EE17EB90, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF790], MEMORY[0x1E0CAF7A8]);
  v2 = sub_18FA282AC();
  return sub_18F9E0544(a1, v2);
}

unint64_t sub_18F9E0330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_18FA2896C() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_18FA2896C() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_18F9E0410(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_18F9E04D4(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x1940052F8](v9, a1);
      sub_18F9E0510((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_18F9E04D4(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_18F9E0510(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

unint64_t sub_18F9E0544(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_18FA27FB8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      sub_18F9D727C(&qword_1EE17EB98, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF790], MEMORY[0x1E0CAF7B0]);
      v14 = sub_18FA282D0();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

uint64_t sub_18F9E0684(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  int64_t i;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int128 v21;
  _OWORD v22[7];
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  _OWORD v27[2];
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v35 = MEMORY[0x1E0DEE9D8];
    sub_18F9DEC80(0, v1, 0);
    v4 = a1 + 32;
    v2 = v35;
    for (i = v1 - 1; ; --i)
    {
      v6 = *(_OWORD *)(v4 + 80);
      v7 = *(_OWORD *)(v4 + 112);
      v32 = *(_OWORD *)(v4 + 96);
      v33 = v7;
      v8 = *(_OWORD *)(v4 + 16);
      v9 = *(_OWORD *)(v4 + 48);
      v28 = *(_OWORD *)(v4 + 32);
      v29 = v9;
      v10 = *(_OWORD *)(v4 + 48);
      v11 = *(_OWORD *)(v4 + 80);
      v30 = *(_OWORD *)(v4 + 64);
      v31 = v11;
      v12 = *(_OWORD *)(v4 + 16);
      v27[0] = *(_OWORD *)v4;
      v27[1] = v12;
      v13 = *(_OWORD *)(v4 + 112);
      v22[6] = v32;
      v23 = v13;
      v22[2] = v28;
      v22[3] = v10;
      v22[4] = v30;
      v22[5] = v6;
      v34 = *(_QWORD *)(v4 + 128);
      v14 = *(_QWORD *)&v27[0];
      v24 = *(_QWORD *)(v4 + 128);
      *((_QWORD *)&v22[0] + 1) = *((_QWORD *)&v27[0] + 1);
      v22[1] = v8;
      sub_18F9EA534((uint64_t)v27);
      sub_18F9E3E98(v14, (uint64_t *)v22 + 1, (uint64_t)&v23 + 8, &v25);
      sub_18F9EA718((uint64_t)v27);
      v15 = v25;
      v16 = v26;
      v35 = v2;
      v18 = *(_QWORD *)(v2 + 16);
      v17 = *(_QWORD *)(v2 + 24);
      if (v18 >= v17 >> 1)
      {
        v21 = v25;
        sub_18F9DEC80(v17 > 1, v18 + 1, 1);
        v15 = v21;
        v2 = v35;
      }
      *(_QWORD *)(v2 + 16) = v18 + 1;
      v19 = v2 + 24 * v18;
      *(_OWORD *)(v19 + 32) = v15;
      *(_QWORD *)(v19 + 48) = v16;
      if (!i)
        break;
      v4 += 136;
    }
  }
  return v2;
}

uint64_t sub_18F9E07F8(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  void (*v24)(char *, _QWORD);
  void (*v25)(char *);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char v43[32];
  uint64_t v44;

  v30 = a5;
  v31 = a8;
  v38 = a1;
  v39 = a2;
  v29 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v40 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v14 = (char *)&v29 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_getAssociatedTypeWitness();
  v32 = *(_QWORD *)(v17 - 8);
  v33 = v17;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v29 - v18;
  v20 = sub_18FA285E8();
  if (!v20)
    return sub_18FA284A4();
  v36 = AssociatedTypeWitness;
  v21 = v20;
  v44 = sub_18FA2824C();
  v34 = sub_18FA28894();
  sub_18FA2884C();
  v37 = v8;
  result = sub_18FA285DC();
  if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21;
    v35 = v16;
    while (v23)
    {
      v41 = v23;
      v24 = (void (*)(char *, _QWORD))sub_18FA28618();
      v25 = *(void (**)(char *))(v11 + 16);
      v26 = v11;
      v27 = v36;
      v25(v14);
      v24(v43, 0);
      v28 = v42;
      v38(v14, v40);
      if (v28)
      {
        (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v27);
        (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v33);
        swift_release();
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v29 + 32))(v31, v40, v30);
      }
      v42 = 0;
      (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v27);
      sub_18FA2887C();
      result = sub_18FA285F4();
      v23 = v41 - 1;
      v11 = v26;
      if (v41 == 1)
      {
        (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v33);
        return v44;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_18F9E0AE8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t result;

  if (qword_1EE17EA30 != -1)
    swift_once();
  v0 = qword_1EE17EA28;
  if (qword_1EE17EA60 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  v1 = swift_bridgeObjectRetain();
  result = sub_18FA0E290(v1);
  qword_1EE17EA38 = v0;
  return result;
}

uint64_t static DuplicateContacts.descriptorForRequiredKeys.getter()
{
  return sub_18F9E1234(&qword_1EE17E9B8);
}

uint64_t sub_18F9E0BB4()
{
  uint64_t v0;
  uint64_t v1;
  __CFString *v2;
  __CFString *v3;
  __CFString *v4;
  __CFString *v5;
  __CFString *v6;
  __CFString *v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  __CFString *v11;
  __CFString *v12;
  __CFString *v13;
  __CFString *v14;
  __CFString *v15;
  __CFString *v16;
  __CFString *v17;
  __CFString *v18;
  __CFString *v19;
  __CFString *v20;
  __CFString *v21;
  __CFString *v22;
  __CFString *v23;
  __CFString *v24;
  __CFString *v25;
  __CFString *v26;
  __CFString *v27;
  __CFString *v28;
  __CFString *v29;
  __CFString *v30;
  __CFString *v31;
  __CFString *v32;
  __CFString *v33;
  __CFString *v34;
  __CFString *v35;
  __CFString *v36;
  __CFString *v37;
  __CFString *v38;
  __CFString *v39;
  unint64_t v40;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EB50);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_18FA41070;
  *(_QWORD *)(v0 + 32) = objc_msgSend((id)objc_opt_self(), sel_descriptorForRequiredKeysForStyle_, 0);
  *(_QWORD *)(v0 + 40) = CFSTR("nickname");
  *(_QWORD *)(v0 + 48) = CFSTR("imageData");
  *(_QWORD *)(v0 + 56) = CFSTR("imageType");
  *(_QWORD *)(v0 + 64) = CFSTR("cropRect");
  *(_QWORD *)(v0 + 72) = CFSTR("memojiMetadata");
  *(_QWORD *)(v0 + 80) = CFSTR("wallpaper");
  *(_QWORD *)(v0 + 88) = CFSTR("imageDataAvailable");
  *(_QWORD *)(v0 + 96) = CFSTR("organizationName");
  *(_QWORD *)(v0 + 104) = CFSTR("departmentName");
  *(_QWORD *)(v0 + 112) = CFSTR("jobTitle");
  *(_QWORD *)(v0 + 120) = CFSTR("previousFamilyName");
  *(_QWORD *)(v0 + 128) = CFSTR("phoneticGivenName");
  *(_QWORD *)(v0 + 136) = CFSTR("phoneticMiddleName");
  *(_QWORD *)(v0 + 144) = CFSTR("phoneticFamilyName");
  *(_QWORD *)(v0 + 152) = CFSTR("phoneticOrganizationName");
  *(_QWORD *)(v0 + 160) = CFSTR("note");
  *(_QWORD *)(v0 + 168) = CFSTR("birthday");
  *(_QWORD *)(v0 + 176) = CFSTR("nonGregorianBirthday");
  *(_QWORD *)(v0 + 184) = CFSTR("callAlert");
  *(_QWORD *)(v0 + 192) = CFSTR("textAlert");
  *(_QWORD *)(v0 + 200) = CFSTR("phoneNumbers");
  *(_QWORD *)(v0 + 208) = CFSTR("emailAddresses");
  *(_QWORD *)(v0 + 216) = CFSTR("urlAddresses");
  *(_QWORD *)(v0 + 224) = CFSTR("dates");
  *(_QWORD *)(v0 + 232) = CFSTR("instantMessageAddresses");
  *(_QWORD *)(v0 + 240) = CFSTR("contactRelations");
  *(_QWORD *)(v0 + 248) = CFSTR("socialProfiles");
  *(_QWORD *)(v0 + 256) = CFSTR("postalAddresses");
  *(_QWORD *)(v0 + 264) = CFSTR("phonemeData");
  *(_QWORD *)(v0 + 272) = CFSTR("explicitDisplayName");
  *(_QWORD *)(v0 + 280) = CFSTR("mapsData");
  *(_QWORD *)(v0 + 288) = CFSTR("sortingGivenName");
  *(_QWORD *)(v0 + 296) = CFSTR("sortingFamilyName");
  *(_QWORD *)(v0 + 304) = CFSTR("externalIdentifier");
  *(_QWORD *)(v0 + 312) = CFSTR("externalUUID");
  *(_QWORD *)(v0 + 320) = CFSTR("identifier");
  *(_QWORD *)(v0 + 328) = CFSTR("linkIdentifier");
  *(_QWORD *)(v0 + 336) = CFSTR("downtimeWhitelist");
  sub_18FA2845C();
  v1 = qword_1EE17EA48;
  v2 = CFSTR("nickname");
  v3 = CFSTR("imageData");
  v4 = CFSTR("imageType");
  v5 = CFSTR("cropRect");
  v6 = CFSTR("memojiMetadata");
  v7 = CFSTR("wallpaper");
  v8 = CFSTR("imageDataAvailable");
  v9 = CFSTR("organizationName");
  v10 = CFSTR("departmentName");
  v11 = CFSTR("jobTitle");
  v12 = CFSTR("previousFamilyName");
  v13 = CFSTR("phoneticGivenName");
  v14 = CFSTR("phoneticMiddleName");
  v15 = CFSTR("phoneticFamilyName");
  v16 = CFSTR("phoneticOrganizationName");
  v17 = CFSTR("note");
  v18 = CFSTR("birthday");
  v19 = CFSTR("nonGregorianBirthday");
  v20 = CFSTR("callAlert");
  v21 = CFSTR("textAlert");
  v22 = CFSTR("phoneNumbers");
  v23 = CFSTR("emailAddresses");
  v24 = CFSTR("urlAddresses");
  v25 = CFSTR("dates");
  v26 = CFSTR("instantMessageAddresses");
  v27 = CFSTR("contactRelations");
  v28 = CFSTR("socialProfiles");
  v29 = CFSTR("postalAddresses");
  v30 = CFSTR("phonemeData");
  v31 = CFSTR("explicitDisplayName");
  v32 = CFSTR("mapsData");
  v33 = CFSTR("sortingGivenName");
  v34 = CFSTR("sortingFamilyName");
  v35 = CFSTR("externalIdentifier");
  v36 = CFSTR("externalUUID");
  v37 = CFSTR("identifier");
  v38 = CFSTR("linkIdentifier");
  v39 = CFSTR("downtimeWhitelist");
  if (v1 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  v40 = swift_bridgeObjectRetain();
  sub_18FA0E290(v40);
  result = swift_bridgeObjectRelease();
  qword_1EE17EA28 = v0;
  return result;
}

uint64_t static DuplicateContacts.descriptorForRequiredKeysForListView.getter()
{
  return sub_18F9E1234(&qword_1EE17EA30);
}

__CFString *sub_18F9E106C()
{
  uint64_t v0;
  __CFString *v1;
  __CFString *v2;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EB50);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_18FA41080;
  *(_QWORD *)(v0 + 32) = CFSTR("pronunciationGivenName");
  *(_QWORD *)(v0 + 40) = CFSTR("pronunciationFamilyName");
  v4 = v0;
  *(_QWORD *)(v0 + 48) = CFSTR("preferredChannel");
  sub_18FA2845C();
  qword_1EE17EA40 = v4;
  v1 = CFSTR("pronunciationGivenName");
  v2 = CFSTR("pronunciationFamilyName");
  return CFSTR("preferredChannel");
}

uint64_t static DuplicateContacts.descriptorForRequiredPlatformKeys.getter()
{
  return sub_18F9E1234(&qword_1EE17EA48);
}

__CFString *sub_18F9E1124()
{
  uint64_t v0;
  __CFString *v1;
  __CFString *v2;
  __CFString *v3;
  __CFString *v4;
  __CFString *v5;
  __CFString *v6;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EB50);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_18FA41090;
  *(_QWORD *)(v0 + 32) = CFSTR("imageHash");
  *(_QWORD *)(v0 + 40) = CFSTR("thumbnailImageData");
  *(_QWORD *)(v0 + 48) = CFSTR("fullscreenImageData");
  *(_QWORD *)(v0 + 56) = CFSTR("preferredLikenessSource");
  *(_QWORD *)(v0 + 64) = CFSTR("preferredApplePersonaIdentifier");
  *(_QWORD *)(v0 + 72) = CFSTR("contactType");
  v8 = v0;
  *(_QWORD *)(v0 + 80) = CFSTR("wallpaper");
  sub_18FA2845C();
  qword_1EE17EA50 = v8;
  v1 = CFSTR("imageHash");
  v2 = CFSTR("thumbnailImageData");
  v3 = CFSTR("fullscreenImageData");
  v4 = CFSTR("preferredLikenessSource");
  v5 = CFSTR("preferredApplePersonaIdentifier");
  v6 = CFSTR("contactType");
  return CFSTR("wallpaper");
}

uint64_t static DuplicateContacts.descriptorForRequiredPlatformImageEditingKeys.getter()
{
  return sub_18F9E1234(&qword_1EE17EA60);
}

uint64_t sub_18F9E1234(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t static DuplicateContacts.minimumNamesToMatch.getter()
{
  return 1;
}

uint64_t DuplicateContacts.FindResult.duplicates.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DuplicateContacts.FindResult.debugDescription.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *v0;
  v2 = sub_18FA284EC();
  MEMORY[0x194005034](v1, v2);
  v4 = sub_18FA28948();
  sub_18FA283A8();
  return v4;
}

uint64_t sub_18F9E1300@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v16;
  _BYTE v17[16];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void *);
  uint64_t v22;
  _BYTE v23[16];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t (*v28)(void *);
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)();
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v2;
  v30 = a1;
  v31 = sub_18F9E1698;
  v32 = v4;
  v5 = sub_18FA284EC();
  swift_bridgeObjectRetain();
  MEMORY[0x194006D14](MEMORY[0x1E0DEAF60], v5);
  sub_18FA28828();
  swift_release();
  v27 = a1;
  v28 = sub_18F9E22B8;
  v29 = 0;
  sub_18FA27FB8();
  sub_18F9E2480();
  MEMORY[0x194006D14](MEMORY[0x1E0DEAF38], v5);
  sub_18FA282A0();
  v26 = a1;
  sub_18FA28294();
  v25 = a1;
  swift_bridgeObjectRetain();
  v35 = sub_18FA28294();
  v24 = a1;
  v6 = sub_18FA28288();
  v14 = MEMORY[0x194006D14](MEMORY[0x1E0DE9FA0], v6);
  sub_18F9E07F8((void (*)(char *, char *))sub_18F9EA024, (uint64_t)v23, v6, v5, MEMORY[0x1E0DEDCE8], v14, MEMORY[0x1E0DEDD18], v7);
  swift_bridgeObjectRelease();
  type metadata accessor for DuplicateContactsModerator();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v16;
  v20 = a1;
  v21 = sub_18F9EA050;
  v22 = v8;
  static DuplicateContactsModerator.combinePotentialDuplicatesWithCommonHandles<A>(potentialDuplicates:groupedBy:)();
  swift_release();
  swift_bridgeObjectRelease();
  v19 = a1;
  v35 = sub_18FA28294();
  v18 = a1;
  v10 = sub_18F9E07F8((void (*)(char *, char *))sub_18F9EC53C, (uint64_t)v17, v6, v5, MEMORY[0x1E0DEDCE8], v14, MEMORY[0x1E0DEDD18], v9);
  swift_bridgeObjectRelease();
  v34 = v10;
  v33 = sub_18FA2824C();
  v11 = sub_18FA284EC();
  MEMORY[0x194006D14](MEMORY[0x1E0DEAF38], v11);
  sub_18FA283FC();
  swift_bridgeObjectRelease();
  v12 = sub_18FA2848C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v35 = v12;
  MEMORY[0x194006D14](MEMORY[0x1E0DEAF60], v11);
  result = sub_18FA28828();
  *a2 = result;
  return result;
}

uint64_t sub_18F9E1688()
{
  return swift_deallocObject();
}

uint64_t sub_18F9E169C(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 24))(*a1) & 1;
}

BOOL sub_18F9E16CC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t TupleTypeMetadata2;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v21 = a3;
  v5 = sub_18FA27FB8();
  sub_18FA284EC();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v7 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v8 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v20 - v11;
  v13 = *a2;
  v14 = *(_QWORD *)(v5 - 8);
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v15((char *)&v20 - v11, a1, v5);
  *(_QWORD *)&v12[*(int *)(TupleTypeMetadata2 + 48)] = v13;
  v16 = *(int *)(TupleTypeMetadata2 + 48);
  v15(v10, (uint64_t)v12, v5);
  *(_QWORD *)&v10[v16] = v13;
  v17 = swift_bridgeObjectRetain();
  v18 = MEMORY[0x194005034](v17, v21);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, TupleTypeMetadata2);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v5);
  return v18 > 1;
}

BOOL sub_18F9E1820(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t TupleTypeMetadata2;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  int64_t v16;
  uint64_t v18;

  v4 = sub_18FA27FB8();
  sub_18FA284EC();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v6 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v7 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v18 - v10;
  v12 = *a2;
  v13 = *(_QWORD *)(v4 - 8);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v14((char *)&v18 - v10, a1, v4);
  *(_QWORD *)&v11[*(int *)(TupleTypeMetadata2 + 48)] = v12;
  v15 = *(int *)(TupleTypeMetadata2 + 48);
  v14(v9, (uint64_t)v11, v4);
  *(_QWORD *)&v9[v15] = v12;
  swift_bridgeObjectRetain();
  v16 = sub_18F9E1964();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, TupleTypeMetadata2);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v4);
  return v16 > 1;
}

unint64_t sub_18F9E1964()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  __int128 v8;
  unint64_t result;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  _BYTE v13[32];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v14 = sub_18FA27F34();
  v15 = v0;
  v16 = sub_18FA27F64();
  v17 = v1;
  v18 = sub_18FA27F4C();
  v19 = v2;
  v20 = sub_18FA27F94();
  v21 = v3;
  v4 = MEMORY[0x1E0DEE9D8];
  v5 = 32;
  while (1)
  {
    result = *(_QWORD *)&v13[v5 + 8];
    if (!result)
      break;
    v10 = HIBYTE(result) & 0xF;
    if ((result & 0x2000000000000000) == 0)
      v10 = *(_QWORD *)&v13[v5] & 0xFFFFFFFFFFFFLL;
    if (v10)
    {
      v12 = *(_OWORD *)&v13[v5];
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_18F9DEC48(0, *(_QWORD *)(v4 + 16) + 1, 1);
      v7 = *(_QWORD *)(v4 + 16);
      v6 = *(_QWORD *)(v4 + 24);
      v8 = v12;
      if (v7 >= v6 >> 1)
      {
        sub_18F9DEC48(v6 > 1, v7 + 1, 1);
        v8 = v12;
      }
      *(_QWORD *)(v4 + 16) = v7 + 1;
      *(_OWORD *)(v4 + 16 * v7 + 32) = v8;
    }
    v5 += 16;
    if (v5 == 96)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EBB8);
      swift_arrayDestroy();
      v11 = *(_QWORD *)(v4 + 16);
      swift_release();
      return v11;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_18F9E1AA8(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_18FA27FAC();
  v2 = objc_msgSend(a1, sel_namePrefix);
  v3 = sub_18FA2833C();
  v5 = v4;

  sub_18F9E2500(257, v3, v5);
  swift_bridgeObjectRelease();
  sub_18FA27F88();
  v6 = objc_msgSend(a1, sel_givenName);
  v7 = sub_18FA2833C();
  v9 = v8;

  sub_18F9E2500(257, v7, v9);
  swift_bridgeObjectRelease();
  sub_18FA27F40();
  v10 = objc_msgSend(a1, sel_middleName);
  v11 = sub_18FA2833C();
  v13 = v12;

  sub_18F9E2500(257, v11, v13);
  swift_bridgeObjectRelease();
  sub_18FA27F70();
  v14 = objc_msgSend(a1, sel_familyName);
  v15 = sub_18FA2833C();
  v17 = v16;

  sub_18F9E2500(257, v15, v17);
  swift_bridgeObjectRelease();
  sub_18FA27F58();
  v18 = objc_msgSend(a1, sel_nameSuffix);
  v19 = sub_18FA2833C();
  v21 = v20;

  sub_18F9E2500(257, v19, v21);
  swift_bridgeObjectRelease();
  return sub_18FA27FA0();
}

uint64_t static DuplicateContacts.prefixAndDiacriticsComparator(_:)(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_18FA27FAC();
  v2 = objc_msgSend(a1, sel_namePrefix);
  v3 = sub_18FA2833C();
  v5 = v4;

  sub_18F9E2500(257, v3, v5);
  swift_bridgeObjectRelease();
  sub_18FA27F88();
  v6 = objc_msgSend(a1, sel_givenName);
  v7 = sub_18FA2833C();
  v9 = v8;

  sub_18F9E2500(257, v7, v9);
  swift_bridgeObjectRelease();
  sub_18FA27F40();
  v10 = objc_msgSend(a1, sel_middleName);
  v11 = sub_18FA2833C();
  v13 = v12;

  sub_18F9E2500(257, v11, v13);
  swift_bridgeObjectRelease();
  sub_18FA27F70();
  v14 = objc_msgSend(a1, sel_familyName);
  v15 = sub_18FA2833C();
  v17 = v16;

  sub_18F9E2500(257, v15, v17);
  swift_bridgeObjectRelease();
  sub_18FA27F58();
  v18 = objc_msgSend(a1, sel_nameSuffix);
  v19 = sub_18FA2833C();
  v21 = v20;

  sub_18F9E2500(257, v19, v21);
  swift_bridgeObjectRelease();
  return sub_18FA27FA0();
}

uint64_t sub_18F9E1E80(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v4 = sub_18FA27FB8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v12 - v9;
  a2(a1);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  sub_18F9E2480();
  sub_18FA28798();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
}

BOOL sub_18F9E1F60(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t TupleTypeMetadata2;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;

  v4 = sub_18FA27FB8();
  sub_18FA284EC();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v6 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v7 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v18 - v10;
  v12 = *a2;
  v13 = *(_QWORD *)(v4 - 8);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v14((char *)&v18 - v10, a1, v4);
  *(_QWORD *)&v11[*(int *)(TupleTypeMetadata2 + 48)] = v12;
  v15 = *(int *)(TupleTypeMetadata2 + 48);
  v14(v9, (uint64_t)v11, v4);
  *(_QWORD *)&v9[v15] = v12;
  swift_bridgeObjectRetain();
  v16 = sub_18F9E1964();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, TupleTypeMetadata2);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v4);
  return v16 == 1;
}

uint64_t sub_18F9E20A4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a2;
  type metadata accessor for DuplicateContactsModerator();
  static DuplicateContactsModerator.groupByCommonHandles<A>(contacts:)(v4, a3);
  sub_18FA284EC();
  v5 = sub_18FA284EC();
  MEMORY[0x194006D14](MEMORY[0x1E0DEAF38], v5);
  return sub_18FA284D4();
}

void sub_18F9E2144()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  void *v3;
  char v4;
  uint64_t v5;
  void *v6;

  v0 = sub_18FA284EC();
  MEMORY[0x194006D14](MEMORY[0x1E0DEAF50], v0);
  sub_18FA2860C();
  if (v6)
  {
    v1 = objc_msgSend(v6, sel_linkIdentifier);

    if (v1)
    {
      sub_18FA2833C();

      v2 = *MEMORY[0x1E0D13850];
      if (*MEMORY[0x1E0D13850])
      {
        v3 = (void *)sub_18FA28330();
        v4 = (*(uint64_t (**)(uint64_t, void *))(v2 + 16))(v2, v3);

        if ((v4 & 1) != 0)
        {
          MEMORY[0x1E0C80A78](v5);
          MEMORY[0x194006D14](MEMORY[0x1E0DEAF38], v0);
          sub_18FA28414();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        __break(1u);
      }
    }
  }
}

int64_t sub_18F9E22B8(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t result;

  sub_18FA27FAC();
  v2 = objc_msgSend(a1, sel_givenName);
  v3 = sub_18FA2833C();
  v5 = v4;

  sub_18F9E2500(385, v3, v5);
  swift_bridgeObjectRelease();
  sub_18FA27F40();
  v6 = objc_msgSend(a1, sel_middleName);
  v7 = sub_18FA2833C();
  v9 = v8;

  sub_18F9E2500(385, v7, v9);
  swift_bridgeObjectRelease();
  sub_18FA27F70();
  v10 = objc_msgSend(a1, sel_familyName);
  v11 = sub_18FA2833C();
  v13 = v12;

  sub_18F9E2500(385, v11, v13);
  swift_bridgeObjectRelease();
  sub_18FA27F58();
  v14 = objc_msgSend(a1, sel_nameSuffix);
  v15 = sub_18FA2833C();
  v17 = v16;

  sub_18F9E2500(385, v15, v17);
  swift_bridgeObjectRelease();
  sub_18FA27FA0();
  result = sub_18F9E1964();
  if (result <= 0)
    return sub_18F9E8104();
  return result;
}

uint64_t sub_18F9E245C(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 24))(*a1);
}

unint64_t sub_18F9E2480()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE17EB90;
  if (!qword_1EE17EB90)
  {
    v1 = sub_18FA27FB8();
    result = MEMORY[0x194006D14](MEMORY[0x1E0CAF7A8], v1);
    atomic_store(result, (unint64_t *)&qword_1EE17EB90);
  }
  return result;
}

BOOL sub_18F9E24C8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_18F9E16CC(a1, a2, *(_QWORD *)(v2 + 16));
}

BOOL sub_18F9E24E4(uint64_t a1, uint64_t *a2)
{
  return sub_18F9E1820(a1, a2);
}

uint64_t sub_18F9E2500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[4];
  uint64_t v22;
  uint64_t v23;

  v5 = sub_18FA27E8C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE17EBA0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a2;
  v23 = a3;
  sub_18FA28114();
  v12 = sub_18FA28120();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 0, 1, v12);
  sub_18F9EC3D0();
  v13 = sub_18FA28714();
  v15 = v14;
  sub_18F9DFD58((uint64_t)v11, (uint64_t *)&unk_1EE17EBA0);
  v22 = v13;
  v23 = v15;
  v21[2] = 0x2B5D0A735C5BLL;
  v21[3] = 0xE600000000000000;
  v21[0] = 32;
  v21[1] = 0xE100000000000000;
  v16 = sub_18FA28708();
  v18 = v17;
  swift_bridgeObjectRelease();
  v22 = v16;
  v23 = v18;
  sub_18FA27E80();
  v19 = sub_18FA286FC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_18F9E26E0(id *a1, uint64_t a2, uint64_t a3)
{
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  char v12;

  v5 = objc_msgSend(*a1, sel_linkIdentifier);
  if (v5)
  {
    v6 = v5;
    v7 = sub_18FA2833C();
    v9 = v8;

    if (v7 == a2 && v9 == a3)
    {
      swift_bridgeObjectRelease();
      v12 = 0;
    }
    else
    {
      v11 = sub_18FA2896C();
      swift_bridgeObjectRelease();
      v12 = v11 ^ 1;
    }
  }
  else
  {
    v12 = 1;
  }
  return v12 & 1;
}

void sub_18F9E2798()
{
  qword_1EE180CE0 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)algn_1EE180CE8 = MEMORY[0x1E0DEE9D8];
  qword_1EE180CF0 = MEMORY[0x1E0DEE9D8];
}

uint64_t sub_18F9E27B4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;

  v5 = *a1;
  v4 = a1[1];
  v6 = a1[2];
  v7 = *a2;
  v19 = a2[1];
  v20 = a2[2];
  v8 = *(_QWORD *)(*a2 + 16);
  if (!v8)
  {
    v16 = MEMORY[0x1E0DEE9D8];
    v10 = MEMORY[0x1E0DEE9D8];
    goto LABEL_16;
  }
  v18 = a1[2];
  swift_bridgeObjectRetain();
  v9 = 0;
  v10 = MEMORY[0x1E0DEE9D8];
  do
  {
    v11 = *(_QWORD *)(v7 + 8 * v9 + 32);
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v15 = sub_18FA288B8();
      swift_bridgeObjectRelease();
      if (v15 < 1)
      {
LABEL_3:
        swift_bridgeObjectRelease();
        goto LABEL_4;
      }
    }
    else
    {
      v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v12 < 1)
        goto LABEL_3;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_18F9DEC64(0, *(_QWORD *)(v10 + 16) + 1, 1);
    v14 = *(_QWORD *)(v10 + 16);
    v13 = *(_QWORD *)(v10 + 24);
    if (v14 >= v13 >> 1)
      sub_18F9DEC64(v13 > 1, v14 + 1, 1);
    *(_QWORD *)(v10 + 16) = v14 + 1;
    *(_QWORD *)(v10 + 8 * v14 + 32) = v11;
LABEL_4:
    ++v9;
  }
  while (v8 != v9);
  swift_bridgeObjectRelease();
  v6 = v18;
  v16 = MEMORY[0x1E0DEE9D8];
LABEL_16:
  swift_bridgeObjectRetain();
  sub_18FA0E448(v10);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_18FA0E5B4(v4);
  sub_18FA0E5B4(v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_18FA0E5B4(v6);
  sub_18FA0E5B4(v20);
  result = swift_bridgeObjectRelease();
  *a3 = v5;
  a3[1] = v16;
  a3[2] = v16;
  return result;
}

Contacts::DuplicateContacts::MergeResult::UndoResult __swiftcall DuplicateContacts.MergeResult.undo(for:)(Swift::OpaquePointer a1)
{
  _QWORD *v1;
  uint64_t *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  Contacts::DuplicateContacts::MergeResult::UndoResult result;

  v4 = v1;
  v5 = *v2;
  v6 = v2[2];
  swift_bridgeObjectRetain();
  v7 = swift_bridgeObjectRetain();
  v8 = sub_18F9EA1A4(v7, (unint64_t)a1._rawValue);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v4 = v5;
  v4[1] = v8;
  v4[2] = v6;
  swift_bridgeObjectRetain();
  v9 = (void *)swift_bridgeObjectRetain();
  result.needAdded._rawValue = v11;
  result.wereModified._rawValue = v10;
  result.needUnlinked._rawValue = v9;
  return result;
}

uint64_t DuplicateContacts.MergeResult.UndoResult.needUnlinked.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DuplicateContacts.MergeResult.UndoResult.wereModified.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DuplicateContacts.MergeResult.UndoResult.needAdded.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_18F9E2A74@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  int64_t v4;
  uint64_t v5;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void *v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v13 = a2;
    v14 = MEMORY[0x1E0DEE9D8];
    sub_18F9DEC9C(0, v4, 0);
    v5 = v14;
    v7 = (uint64_t *)(a1 + 32);
    do
    {
      v8 = *v7;
      v10 = *(_QWORD *)(v14 + 16);
      v9 = *(_QWORD *)(v14 + 24);
      swift_bridgeObjectRetain();
      if (v10 >= v9 >> 1)
        sub_18F9DEC9C(v9 > 1, v10 + 1, 1);
      *(_QWORD *)(v14 + 16) = v10 + 1;
      v11 = v14 + 136 * v10;
      *(_QWORD *)(v11 + 32) = v8;
      *(_OWORD *)(v11 + 40) = xmmword_18FA410A0;
      *(_OWORD *)(v11 + 56) = 0u;
      *(_OWORD *)(v11 + 72) = 0u;
      *(_OWORD *)(v11 + 88) = 0u;
      *(_OWORD *)(v11 + 104) = 0u;
      *(_OWORD *)(v11 + 120) = 0u;
      *(_OWORD *)(v11 + 136) = 0u;
      *(_QWORD *)(v11 + 152) = 0;
      *(_QWORD *)(v11 + 160) = 0xB000000000000000;
      ++v7;
      --v4;
    }
    while (v4);
    a2 = v13;
  }
  sub_18F9E2B9C(v5, a2, a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_18F9E2B9C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;
  int64_t v4;
  _QWORD *v5;
  uint64_t i;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  unint64_t v13;
  __int128 v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t result;
  __int128 v30;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  _BYTE v42[136];
  _QWORD *v43;

  v3 = a3;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v43 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    sub_18F9DEC80(0, v4, 0);
    v5 = v43;
    for (i = a1 + 32; ; i += 136)
    {
      --v4;
      v9 = *(_OWORD *)(i + 112);
      *(_OWORD *)&v42[96] = *(_OWORD *)(i + 96);
      *(_OWORD *)&v42[112] = v9;
      *(_QWORD *)&v42[128] = *(_QWORD *)(i + 128);
      v10 = *(_OWORD *)(i + 48);
      *(_OWORD *)&v42[32] = *(_OWORD *)(i + 32);
      *(_OWORD *)&v42[48] = v10;
      v11 = *(_OWORD *)(i + 80);
      *(_OWORD *)&v42[64] = *(_OWORD *)(i + 64);
      *(_OWORD *)&v42[80] = v11;
      v12 = *(_OWORD *)(i + 16);
      *(_OWORD *)v42 = *(_OWORD *)i;
      *(_OWORD *)&v42[16] = v12;
      v13 = *(_QWORD *)v42;
      v33 = *(_OWORD *)&v42[8];
      v34 = *(_OWORD *)&v42[24];
      v35 = *(_OWORD *)&v42[40];
      v36 = *(_OWORD *)&v42[56];
      v37 = *(_OWORD *)&v42[72];
      v38 = *(_OWORD *)&v42[88];
      v39 = *(_OWORD *)&v42[104];
      v32 = *(_OWORD *)&v42[120];
      sub_18F9EA534((uint64_t)v42);
      sub_18F9E2E44(v13, (uint64_t)&v33, (uint64_t *)&v32, a2, &v40);
      sub_18F9EA718((uint64_t)v42);
      v14 = v40;
      v15 = v41;
      v43 = v5;
      v17 = v5[2];
      v16 = v5[3];
      if (v17 >= v16 >> 1)
      {
        v30 = v40;
        sub_18F9DEC80(v16 > 1, v17 + 1, 1);
        v14 = v30;
        v5 = v43;
      }
      v5[2] = v17 + 1;
      v18 = &v5[3 * v17];
      *((_OWORD *)v18 + 2) = v14;
      v18[6] = v15;
      if (!v4)
        break;
    }
    v3 = a3;
  }
  if (qword_1EE1809F8 != -1)
    swift_once();
  v19 = qword_1EE180CE0;
  v20 = *(_QWORD *)algn_1EE180CE8;
  v21 = qword_1EE180CF0;
  v22 = v5[2];
  if (v22)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v23 = v5 + 6;
    v24 = v19;
    v25 = v20;
    v26 = v21;
    do
    {
      v27 = *v23;
      v28 = *((_OWORD *)v23 - 1);
      *(_QWORD *)&v33 = v24;
      *((_QWORD *)&v33 + 1) = v25;
      *(_QWORD *)&v34 = v26;
      v40 = v28;
      v41 = v27;
      sub_18F9E27B4((uint64_t *)&v33, &v40, v42);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v25 = *(_QWORD *)&v42[8];
      v24 = *(_QWORD *)v42;
      v23 += 3;
      v26 = *(_QWORD *)&v42[16];
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v19 = v24;
    v20 = v25;
    v21 = v26;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  result = swift_bridgeObjectRelease();
  *v3 = v19;
  v3[1] = v20;
  v3[2] = v21;
  return result;
}

uint64_t sub_18F9E2E44@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, void *a4@<X3>, _QWORD *a5@<X8>)
{
  _QWORD *v5;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  id v57;
  void *v58;
  id v59;
  unint64_t v60;
  uint64_t v61;
  void *v62;
  int v63;
  uint64_t v64;
  id v65;
  void *v66;
  uint64_t v67;
  id v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v74;
  uint64_t v75;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  id v81;
  id v82;
  void *v83;
  id v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t result;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v92;
  unint64_t v93;
  _QWORD *v94;
  _QWORD *v96;
  unint64_t v97;
  _QWORD *v98;
  __int128 v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  _QWORD v108[14];
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;

  sub_18F9EC4C0(a2, (uint64_t)v108, &qword_1EE180DA0);
  v92 = *a3;
  v93 = a3[1];
  *(_QWORD *)&v109 = MEMORY[0x1E0DEE9E0];
  if (a1 >> 62)
    goto LABEL_22;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v8; v8 = sub_18FA288B8())
  {
    v9 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v10 = 4;
    while (1)
    {
      v13 = (a1 & 0xC000000000000001) != 0
          ? (_QWORD *)MEMORY[0x194005370](v10 - 4, a1)
          : *(id *)(a1 + 8 * v10);
      v5 = v13;
      v14 = v10 - 3;
      if (__OFADD__(v10 - 4, 1))
        break;
      v15 = v8;
      v16 = sub_18F9EAD04(v13, a4);
      v18 = v17;
      v20 = sub_18F9E01F0(v16, v17);
      v21 = v9;
      v22 = v9[2];
      v23 = (v19 & 1) == 0;
      v24 = v22 + v23;
      if (__OFADD__(v22, v23))
        goto LABEL_20;
      v25 = v19;
      v96 = v5;
      v5 = v21;
      if (v21[3] < v24)
      {
        sub_18FA0A1C0(v24, 1);
        v5 = (_QWORD *)v109;
        v26 = sub_18F9E01F0(v16, v18);
        if ((v25 & 1) != (v27 & 1))
          goto LABEL_118;
        v20 = v26;
      }
      if ((v25 & 1) != 0)
      {
        v11 = swift_bridgeObjectRelease();
        v9 = v5;
        v12 = (_QWORD *)(v5[7] + 8 * v20);
        MEMORY[0x194004F98](v11);
        v8 = v15;
        if (*(_QWORD *)((*v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_18FA28474();
        sub_18FA284BC();
        sub_18FA2845C();
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EB50);
        v28 = swift_allocObject();
        *(_OWORD *)(v28 + 16) = xmmword_18FA40FA0;
        *(_QWORD *)(v28 + 32) = v96;
        *(_QWORD *)&v101 = v28;
        sub_18FA2845C();
        v29 = v101;
        v5[(v20 >> 6) + 8] |= 1 << v20;
        v30 = (uint64_t *)(v5[6] + 16 * v20);
        *v30 = v16;
        v30[1] = v18;
        *(_QWORD *)(v5[7] + 8 * v20) = v29;
        v31 = v5[2];
        v32 = __OFADD__(v31, 1);
        v33 = v31 + 1;
        if (v32)
          goto LABEL_21;
        v9 = v5;
        v5[2] = v33;
        v8 = v15;
      }
      ++v10;
      if (v14 == v8)
        goto LABEL_23;
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    swift_bridgeObjectRetain();
  }
LABEL_23:
  swift_bridgeObjectRelease();
  v34 = swift_retain();
  v35 = sub_18F9E3A30(v34);
  *(_QWORD *)&v109 = MEMORY[0x1E0DEE9D8];
  v36 = *(_QWORD *)(v35 + 16);
  if (v36)
  {
    swift_bridgeObjectRetain();
    v37 = 0;
    while (1)
    {
      v38 = *(_QWORD *)(v35 + 8 * v37 + 32);
      if (v38 >> 62)
      {
        swift_bridgeObjectRetain();
        if (!sub_18FA288B8())
        {
LABEL_25:
          swift_bridgeObjectRelease();
          goto LABEL_26;
        }
      }
      else
      {
        v39 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v39)
          goto LABEL_25;
      }
      if ((v38 & 0xC000000000000001) != 0)
      {
        MEMORY[0x194005370](0, v38);
      }
      else
      {
        if (!*(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_79:
          __break(1u);
          goto LABEL_80;
        }
        v40 = *(id *)(v38 + 32);
      }
      v41 = swift_bridgeObjectRelease();
      MEMORY[0x194004F98](v41);
      if (*(_QWORD *)((v109 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v109 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_18FA28474();
      sub_18FA284BC();
      sub_18FA2845C();
LABEL_26:
      if (v36 == ++v37)
      {
        swift_bridgeObjectRelease();
        v36 = v109;
        goto LABEL_40;
      }
    }
  }
  v36 = MEMORY[0x1E0DEE9D8];
LABEL_40:
  swift_bridgeObjectRelease();
  v42 = swift_retain();
  v43 = sub_18F9E3C64(v42);
  sub_18F9EC46C(v108, sub_18F9EA5F0);
  sub_18F9EA704(v92, v93);
  v44 = sub_18F9E9D40(v43, v108, v92, v93);
  sub_18F9EA8E8(v92, v93);
  sub_18F9EC46C(v108, sub_18F9EA7D4);
  swift_bridgeObjectRelease();
  v35 = sub_18F9E0684(v44);
  swift_bridgeObjectRelease();
  if (qword_1EE1809F8 != -1)
LABEL_80:
    swift_once();
  v45 = qword_1EE180CE0;
  v46 = *(_QWORD *)algn_1EE180CE8;
  v47 = qword_1EE180CF0;
  v48 = *(_QWORD *)(v35 + 16);
  if (v48)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v49 = (_QWORD *)(v35 + 48);
    v5 = (_QWORD *)v46;
    v50 = v46;
    do
    {
      v51 = *v49;
      *(_QWORD *)&v101 = v45;
      *((_QWORD *)&v101 + 1) = v50;
      *(_QWORD *)&v102 = v47;
      v99 = *((_OWORD *)v49 - 1);
      v100 = v51;
      sub_18F9E27B4((uint64_t *)&v101, &v99, &v109);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v50 = *((_QWORD *)&v109 + 1);
      v45 = v109;
      v49 += 3;
      v47 = v110;
      --v48;
    }
    while (v48);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v46 = v50;
    v90 = v47;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v90 = v47;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  v52 = v36 >> 62;
  if (v36 >> 62)
  {
    swift_bridgeObjectRetain();
    v35 = sub_18FA288B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v35 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!(v46 >> 62))
  {
    v53 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10);
    v54 = v35 + v53;
    if (!__OFADD__(v35, v53))
      goto LABEL_50;
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  swift_bridgeObjectRetain();
  v75 = sub_18FA288B8();
  swift_bridgeObjectRelease();
  v54 = v35 + v75;
  if (__OFADD__(v35, v75))
    goto LABEL_84;
LABEL_50:
  v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v55 = MEMORY[0x1E0DEE9D8];
  if (v54 > 1)
  {
    swift_bridgeObjectRetain();
    v55 = v46;
  }
  *(_QWORD *)&v109 = v36;
  swift_bridgeObjectRetain();
  sub_18FA0E5B4(v55);
  v35 = v109;
  if ((unint64_t)v109 >> 62)
  {
LABEL_85:
    swift_bridgeObjectRetain_n();
    v56 = sub_18FA288B8();
    v97 = v46;
    if (v56)
      goto LABEL_54;
LABEL_86:
    swift_bridgeObjectRelease();
    goto LABEL_87;
  }
  v56 = *(_QWORD *)((v109 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  v97 = v46;
  if (!v56)
    goto LABEL_86;
LABEL_54:
  if ((v35 & 0xC000000000000001) != 0)
  {
    v57 = (id)MEMORY[0x194005370](0, v35);
  }
  else
  {
    if (!*(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_116:
      __break(1u);
      goto LABEL_117;
    }
    v57 = *(id *)(v35 + 32);
  }
  v58 = v57;
  swift_bridgeObjectRelease();
  v59 = objc_msgSend(v58, sel_linkIdentifier);

  if (v59)
  {
    v88 = v36 >> 62;
    v89 = v36;
    v5 = (_QWORD *)sub_18FA2833C();
    v36 = v60;

    v61 = *MEMORY[0x1E0D13850];
    if (*MEMORY[0x1E0D13850])
    {
      v62 = (void *)sub_18FA28330();
      v63 = (*(uint64_t (**)(uint64_t, void *))(v61 + 16))(v61, v62);

      if (v63)
      {
        swift_bridgeObjectRetain();
        v64 = 4;
        while (1)
        {
          if ((v35 & 0xC000000000000001) != 0)
            v65 = (id)MEMORY[0x194005370](v64 - 4, v35);
          else
            v65 = *(id *)(v35 + 8 * v64);
          v66 = v65;
          v67 = v64 - 3;
          if (__OFADD__(v64 - 4, 1))
            goto LABEL_79;
          v68 = objc_msgSend(v65, sel_linkIdentifier);
          if (!v68)
            break;
          v69 = v68;
          v70 = sub_18FA2833C();
          v72 = v71;

          if ((_QWORD *)v70 == v5 && v72 == v36)
          {

            swift_bridgeObjectRelease();
            v46 = v97;
          }
          else
          {
            v74 = sub_18FA2896C();

            swift_bridgeObjectRelease();
            v46 = v97;
            if ((v74 & 1) == 0)
            {
              swift_bridgeObjectRelease();
              goto LABEL_74;
            }
          }
          ++v64;
          if (v67 == v56)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            v94 = (_QWORD *)MEMORY[0x1E0DEE9D8];
            v52 = v88;
            v36 = v89;
            v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
            goto LABEL_91;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

      }
      else
      {
LABEL_74:
        swift_bridgeObjectRelease();
      }
      v52 = v88;
      v36 = v89;
      v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      goto LABEL_87;
    }
LABEL_117:
    __break(1u);
LABEL_118:
    result = sub_18FA289A8();
    __break(1u);
    return result;
  }
LABEL_87:
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v109 = v5;
  v77 = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_18F9DEC64(0, v5[2] + 1, 1);
    v77 = (_QWORD *)v109;
  }
  v79 = v77[2];
  v78 = v77[3];
  v66 = (void *)(v79 + 1);
  if (v79 >= v78 >> 1)
    goto LABEL_113;
  while (1)
  {
    v77[2] = v66;
    v94 = v77;
    v77[v79 + 4] = v35;
LABEL_91:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EAC8);
    swift_arrayDestroy();
    *(_QWORD *)&v99 = v46;
    sub_18F9EC4C0((uint64_t)v108, (uint64_t)&v109, &qword_1EE180DA0);
    if (*((_QWORD *)&v109 + 1) == 1)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      v105 = v113;
      v106 = v114;
      v107 = v115;
      v101 = v109;
      v102 = v110;
      v103 = v111;
      v104 = v112;
      sub_18F9EC46C(v108, sub_18F9EA5F0);
      swift_bridgeObjectRetain();
      v80 = sub_18F9E9ECC(v36);
      sub_18F9EC46C(v108, sub_18F9EA7D4);
      sub_18FA0E5B4(v80);
    }
    if (v93 >> 60 == 11)
    {
      swift_bridgeObjectRelease();
      goto LABEL_111;
    }
    if (v52)
      break;
    v35 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_18F9EA704(v92, v93);
    if (!v35)
      goto LABEL_109;
LABEL_98:
    v98 = v5;
    sub_18FA28858();
    if (v35 < 0)
      goto LABEL_116;
    v79 = 0;
    v46 = v36 & 0xC000000000000001;
    v52 = v93;
    while (v35 != v79)
    {
      if (v46)
        v81 = (id)MEMORY[0x194005370](v79, v36);
      else
        v81 = *(id *)(v36 + 8 * v79 + 32);
      v66 = v81;
      if (v93 >> 60 != 15)
      {
        v82 = objc_allocWithZone((Class)CNWallpaper);
        v5 = (_QWORD *)v36;
        sub_18F9EA6C0(v92, v93);
        v83 = (void *)sub_18FA28090();
        v84 = objc_msgSend(v82, sel_initWithPosterArchiveData_, v83);

        objc_msgSend(v66, sel_setWallpaper_, v84);
        sub_18F9EA8E8(v92, v93);
      }
      ++v79;
      sub_18FA28834();
      sub_18FA28864();
      sub_18FA28870();
      sub_18FA28840();
      if (v35 == v79)
      {
        v85 = (unint64_t)v98;
        sub_18F9EA8E8(v92, v93);
        swift_bridgeObjectRelease();
        goto LABEL_110;
      }
    }
    __break(1u);
LABEL_113:
    sub_18F9DEC64(v78 > 1, (int64_t)v66, 1);
    v77 = (_QWORD *)v109;
  }
  sub_18F9EA704(v92, v93);
  swift_bridgeObjectRetain();
  v35 = sub_18FA288B8();
  swift_bridgeObjectRelease();
  if (v35)
    goto LABEL_98;
LABEL_109:
  sub_18F9EA8E8(v92, v93);
  swift_bridgeObjectRelease();
  v85 = MEMORY[0x1E0DEE9D8];
LABEL_110:
  sub_18FA0E5B4(v85);
LABEL_111:
  swift_release();
  v86 = v99;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a5 = v94;
  a5[1] = v86;
  a5[2] = v90;
  return result;
}

uint64_t sub_18F9E3A30(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v1 = result;
  v2 = 0;
  v3 = result + 64;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  v8 = MEMORY[0x1E0DEE9D8];
  if (v6)
    goto LABEL_6;
LABEL_7:
  v11 = v2 + 1;
  if (!__OFADD__(v2, 1))
  {
    if (v11 < v7)
    {
      v12 = *(_QWORD *)(v3 + 8 * v11);
      ++v2;
      if (v12)
        goto LABEL_22;
      v2 = v11 + 1;
      if (v11 + 1 >= v7)
        goto LABEL_33;
      v12 = *(_QWORD *)(v3 + 8 * v2);
      if (v12)
        goto LABEL_22;
      v2 = v11 + 2;
      if (v11 + 2 >= v7)
        goto LABEL_33;
      v12 = *(_QWORD *)(v3 + 8 * v2);
      if (v12)
        goto LABEL_22;
      v2 = v11 + 3;
      if (v11 + 3 >= v7)
        goto LABEL_33;
      v12 = *(_QWORD *)(v3 + 8 * v2);
      if (v12)
      {
LABEL_22:
        v6 = (v12 - 1) & v12;
        for (i = __clz(__rbit64(v12)) + (v2 << 6); ; i = v9 | (v2 << 6))
        {
          v14 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * i);
          if (v14 >> 62)
          {
            swift_bridgeObjectRetain_n();
            v18 = sub_18FA288B8();
            swift_bridgeObjectRelease();
            if (v18 != 1)
            {
LABEL_5:
              result = swift_bridgeObjectRelease();
              if (!v6)
                goto LABEL_7;
              goto LABEL_6;
            }
          }
          else
          {
            v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (v15 != 1)
              goto LABEL_5;
          }
          result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
            result = sub_18F9DEC64(0, *(_QWORD *)(v8 + 16) + 1, 1);
          v17 = *(_QWORD *)(v8 + 16);
          v16 = *(_QWORD *)(v8 + 24);
          if (v17 >= v16 >> 1)
            result = sub_18F9DEC64(v16 > 1, v17 + 1, 1);
          *(_QWORD *)(v8 + 16) = v17 + 1;
          *(_QWORD *)(v8 + 8 * v17 + 32) = v14;
          if (!v6)
            goto LABEL_7;
LABEL_6:
          v9 = __clz(__rbit64(v6));
          v6 &= v6 - 1;
        }
      }
      v13 = v11 + 4;
      if (v13 < v7)
      {
        v12 = *(_QWORD *)(v3 + 8 * v13);
        if (v12)
        {
          v2 = v13;
          goto LABEL_22;
        }
        while (1)
        {
          v2 = v13 + 1;
          if (__OFADD__(v13, 1))
            goto LABEL_35;
          if (v2 >= v7)
            break;
          v12 = *(_QWORD *)(v3 + 8 * v2);
          ++v13;
          if (v12)
            goto LABEL_22;
        }
      }
    }
LABEL_33:
    swift_release();
    return v8;
  }
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_18F9E3C64(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v1 = result;
  v2 = 0;
  v3 = result + 64;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  v8 = MEMORY[0x1E0DEE9D8];
  if (v6)
    goto LABEL_6;
LABEL_7:
  v11 = v2 + 1;
  if (!__OFADD__(v2, 1))
  {
    if (v11 < v7)
    {
      v12 = *(_QWORD *)(v3 + 8 * v11);
      ++v2;
      if (v12)
        goto LABEL_22;
      v2 = v11 + 1;
      if (v11 + 1 >= v7)
        goto LABEL_33;
      v12 = *(_QWORD *)(v3 + 8 * v2);
      if (v12)
        goto LABEL_22;
      v2 = v11 + 2;
      if (v11 + 2 >= v7)
        goto LABEL_33;
      v12 = *(_QWORD *)(v3 + 8 * v2);
      if (v12)
        goto LABEL_22;
      v2 = v11 + 3;
      if (v11 + 3 >= v7)
        goto LABEL_33;
      v12 = *(_QWORD *)(v3 + 8 * v2);
      if (v12)
      {
LABEL_22:
        v6 = (v12 - 1) & v12;
        for (i = __clz(__rbit64(v12)) + (v2 << 6); ; i = v9 | (v2 << 6))
        {
          v14 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * i);
          if (v14 >> 62)
          {
            swift_bridgeObjectRetain_n();
            v18 = sub_18FA288B8();
            swift_bridgeObjectRelease();
            if (v18 < 2)
            {
LABEL_5:
              result = swift_bridgeObjectRelease();
              if (!v6)
                goto LABEL_7;
              goto LABEL_6;
            }
          }
          else
          {
            v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (v15 < 2)
              goto LABEL_5;
          }
          result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
            result = sub_18F9DEC64(0, *(_QWORD *)(v8 + 16) + 1, 1);
          v17 = *(_QWORD *)(v8 + 16);
          v16 = *(_QWORD *)(v8 + 24);
          if (v17 >= v16 >> 1)
            result = sub_18F9DEC64(v16 > 1, v17 + 1, 1);
          *(_QWORD *)(v8 + 16) = v17 + 1;
          *(_QWORD *)(v8 + 8 * v17 + 32) = v14;
          if (!v6)
            goto LABEL_7;
LABEL_6:
          v9 = __clz(__rbit64(v6));
          v6 &= v6 - 1;
        }
      }
      v13 = v11 + 4;
      if (v13 < v7)
      {
        v12 = *(_QWORD *)(v3 + 8 * v13);
        if (v12)
        {
          v2 = v13;
          goto LABEL_22;
        }
        while (1)
        {
          v2 = v13 + 1;
          if (__OFADD__(v13, 1))
            goto LABEL_35;
          if (v2 >= v7)
            break;
          v12 = *(_QWORD *)(v3 + 8 * v2);
          ++v13;
          if (v12)
            goto LABEL_22;
        }
      }
    }
LABEL_33:
    swift_release();
    return v8;
  }
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_18F9E3E98@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  int64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t i;
  id v26;
  void *v27;
  uint64_t result;
  uint64_t v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;

  v7 = *a2;
  v8 = a2[2];
  v47 = a2[3];
  v48 = a2[1];
  v45 = a2[5];
  v46 = a2[4];
  v9 = a2[7];
  v10 = a2[8];
  v43 = a2[9];
  v44 = a2[6];
  v41 = a2[11];
  v42 = a2[10];
  v39 = a2[13];
  v40 = a2[12];
  v11 = (unint64_t)a1 >> 62;
  v12 = *(void **)a3;
  v49 = *(_QWORD *)(a3 + 8);
  if (!((unint64_t)a1 >> 62))
  {
    v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_3;
LABEL_41:
    result = swift_bridgeObjectRelease();
    v29 = MEMORY[0x1E0DEE9D8];
    v13 = MEMORY[0x1E0DEE9D8];
    goto LABEL_54;
  }
  swift_bridgeObjectRetain();
  v13 = sub_18FA288B8();
  if (!v13)
    goto LABEL_41;
LABEL_3:
  v38 = v8;
  v14 = a1 & 0xC000000000000001;
  v35 = (uint64_t)v12;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v15 = (id)MEMORY[0x194005370](0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_44;
    }
    v15 = *(id *)(a1 + 32);
  }
  v12 = v15;
  swift_bridgeObjectRelease();
  if (v13 < 1)
  {
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  v37 = v7;
  if (v11)
  {
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    if (sub_18FA288B8() < 1)
      goto LABEL_57;
    swift_bridgeObjectRetain();
    v16 = sub_18FA288B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v16)
      goto LABEL_56;
    swift_bridgeObjectRetain();
  }
  if (v16 < v13)
    goto LABEL_45;
  if (v14 && v13 != 1)
  {
    sub_18F9E000C(0, (unint64_t *)&qword_1EE17EBD0);
    v17 = 1;
    do
    {
      v18 = v17 + 1;
      sub_18FA287F8();
      v17 = v18;
    }
    while (v13 != v18);
  }
  if (v11)
  {
    swift_bridgeObjectRetain();
    v16 = sub_18FA288C4();
    v11 = v19;
    v14 = v20;
    v13 = v21;
    swift_bridgeObjectRelease_n();
    if ((v13 & 1) == 0)
      goto LABEL_24;
  }
  else
  {
    v16 = a1 & 0xFFFFFFFFFFFFFF8;
    v11 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
    v14 = 1;
    v13 = (2 * v13) | 1;
    if ((v13 & 1) == 0)
      goto LABEL_24;
  }
  v4 = v10;
  v10 = v9;
  v9 = (unint64_t)a4;
  sub_18FA28984();
  swift_unknownObjectRetain_n();
  v22 = swift_dynamicCastClass();
  if (!v22)
  {
    swift_unknownObjectRelease();
    v22 = MEMORY[0x1E0DEE9D8];
  }
  v23 = *(_QWORD *)(v22 + 16);
  swift_release();
  if (__OFSUB__((unint64_t)v13 >> 1, v14))
    goto LABEL_58;
  if (v23 != ((unint64_t)v13 >> 1) - v14)
    goto LABEL_59;
  v13 = swift_dynamicCastClass();
  a4 = (_QWORD *)v9;
  v9 = v10;
  v10 = v4;
  if (!v13)
  {
    swift_unknownObjectRelease();
    v13 = MEMORY[0x1E0DEE9D8];
  }
  while (1)
  {
    v36 = a4;
    swift_unknownObjectRelease();
    if (v13 < 0 || (v13 & 0x4000000000000000) != 0)
    {
LABEL_46:
      v30 = v12;
      swift_retain();
      v16 = sub_18FA288B8();
      if (!v16)
        goto LABEL_47;
    }
    else
    {
      v16 = *(_QWORD *)(v13 + 16);
      v24 = v12;
      swift_retain();
      if (!v16)
        goto LABEL_47;
    }
    if (v16 >= 1)
      break;
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    swift_unknownObjectRelease();
    a4 = (_QWORD *)v9;
    v9 = v10;
    v10 = v4;
LABEL_24:
    v13 = sub_18F9E82A8(v16, v11, v14, v13);
  }
  for (i = 0; i != v16; ++i)
  {
    if ((v13 & 0xC000000000000001) != 0)
      v26 = (id)MEMORY[0x194005370](i, v13);
    else
      v26 = *(id *)(v13 + 8 * i + 32);
    v27 = v26;
    sub_18F9E43F8(v26);

  }
LABEL_47:
  swift_release();

  if (v48 != 1)
  {
    sub_18F9EA5F0(v37, v48, v38, v47, v46, v45, v44, v9, v10, v43, v42, v41, v40, v39);
    sub_18F9FFB58(v12);
    sub_18F9EA7D4(v37, v48, v38, v47, v46, v45, v44, v9, v10, v43, v42, v41, v40, v39);
  }
  a4 = v36;
  if (v49 >> 60 != 11)
  {
    if (v49 >> 60 != 15)
    {
      v31 = objc_allocWithZone((Class)CNWallpaper);
      sub_18F9EA6AC(v35, v49);
      sub_18F9EA6C0(v35, v49);
      v32 = (void *)sub_18FA28090();
      v33 = objc_msgSend(v31, sel_initWithPosterArchiveData_, v32);

      objc_msgSend(v12, sel_setWallpaper_, v33);
      sub_18F9EA8E8(v35, v49);
    }
    sub_18F9EA8E8(v35, v49);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EB50);
  v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_18FA40FA0;
  *(_QWORD *)(v34 + 32) = v12;
  v50 = v34;
  result = sub_18FA2845C();
  v29 = v50;
LABEL_54:
  *a4 = MEMORY[0x1E0DEE9D8];
  a4[1] = v29;
  a4[2] = v13;
  return result;
}

void sub_18F9E43F8(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  id v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  id v80;
  id v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  id v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  id v93;
  id v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  id v99;
  id v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  void *v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  id v116;
  id v117;
  void *v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  id v123;
  id v124;
  void *v125;
  uint64_t v126;
  unint64_t v127;
  unint64_t v128;
  uint64_t v129;
  id v130;
  id v131;
  void *v132;
  char *v133;
  void (*v134)(char *, uint64_t, uint64_t, uint64_t);
  id v135;
  char *v136;
  char *v137;
  id v138;
  void *v139;
  char *v140;
  void (*v141)(char *, char *, uint64_t);
  unsigned int (*v142)(char *, uint64_t, uint64_t);
  id v143;
  void *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  id v149;
  void *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  id v154;
  char *v155;
  char *v156;
  id v157;
  uint64_t v158;
  unint64_t v159;
  unint64_t v160;
  uint64_t v161;
  id v162;
  void *v163;
  uint64_t v164;
  unint64_t v165;
  unint64_t v166;
  uint64_t v167;
  id v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  id v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char v176;
  id v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  id v181;
  void *v182;
  id v183;
  uint64_t v184;
  unint64_t v185;
  unint64_t v186;
  id v187;
  id v188;
  uint64_t v189;
  unint64_t v190;
  unint64_t v191;
  id v192;
  id v193;
  id v194;
  id v195;
  void *v196;
  uint64_t v197;
  unint64_t v198;
  unint64_t v199;
  uint64_t v200;
  id v201;
  id v202;
  void *v203;
  uint64_t v204;
  unint64_t v205;
  unint64_t v206;
  uint64_t v207;
  id v208;
  id v209;
  void *v210;
  uint64_t v211;
  unint64_t v212;
  unint64_t v213;
  uint64_t v214;
  id v215;
  id v216;
  unint64_t v217;
  id v218;
  unint64_t v219;
  void *v220;
  id v221;
  unint64_t v222;
  id v223;
  unint64_t v224;
  void *v225;
  id v226;
  unint64_t v227;
  id v228;
  unint64_t v229;
  void *v230;
  id v231;
  unint64_t v232;
  id v233;
  unint64_t v234;
  void *v235;
  id v236;
  unint64_t v237;
  id v238;
  unint64_t v239;
  void *v240;
  id v241;
  unint64_t v242;
  id v243;
  unint64_t v244;
  void *v245;
  id v246;
  unint64_t v247;
  id v248;
  unint64_t v249;
  void *v250;
  id v251;
  unint64_t v252;
  id v253;
  unint64_t v254;
  void *v255;
  char v256;
  char v257;
  void (*v258)(uint64_t, uint64_t);
  id v259;
  void *v260;
  char *v261;
  uint64_t v262;
  id v263;
  void *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  char v270;
  id v271;
  void *v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  char v276;
  char v277;
  id v278;
  void *v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  char v285;
  id v286;
  void *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  char v291;
  char v292;
  id v293;
  void *v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  id v298;
  void *v299;
  char *v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  void *v304;
  uint64_t v305;
  char *v306;
  char *v307;
  char *v308;
  char *v309;
  char *v310;
  char *v311;
  char *v312;
  uint64_t v313;
  char *v314;
  char *v315;
  char *v316;
  uint64_t v317;
  char *v318;
  char *v319;
  char *v320;
  char *v321;
  char *v322;
  char *v323;
  uint64_t v324;
  char *v325;
  uint64_t v326;
  uint64_t v327;

  v2 = v1;
  v4 = sub_18FA27F04();
  v324 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v325 = (char *)&v305 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE180DA8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v321 = (char *)&v305 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v323 = (char *)&v305 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v308 = (char *)&v305 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v309 = (char *)&v305 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v306 = (char *)&v305 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v307 = (char *)&v305 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v312 = (char *)&v305 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v313 = (uint64_t)&v305 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v310 = (char *)&v305 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v311 = (char *)&v305 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v316 = (char *)&v305 - v28;
  v29 = MEMORY[0x1E0C80A78](v27);
  v317 = (uint64_t)&v305 - v30;
  v31 = MEMORY[0x1E0C80A78](v29);
  v314 = (char *)&v305 - v32;
  v33 = MEMORY[0x1E0C80A78](v31);
  v315 = (char *)&v305 - v34;
  v35 = MEMORY[0x1E0C80A78](v33);
  v318 = (char *)&v305 - v36;
  v37 = MEMORY[0x1E0C80A78](v35);
  v319 = (char *)&v305 - v38;
  v39 = MEMORY[0x1E0C80A78](v37);
  v320 = (char *)&v305 - v40;
  v41 = MEMORY[0x1E0C80A78](v39);
  v43 = (char *)&v305 - v42;
  v44 = MEMORY[0x1E0C80A78](v41);
  v322 = (char *)&v305 - v45;
  MEMORY[0x1E0C80A78](v44);
  v47 = (char *)&v305 - v46;
  sub_18F9E6C8C(a1);
  v48 = objc_msgSend(v1, sel_organizationName);
  v49 = sub_18FA2833C();
  v51 = v50;

  v52 = objc_msgSend(a1, sel_organizationName);
  v53 = sub_18FA2833C();
  v55 = v54;

  sub_18F9E7D18(v53, v55, v49, v51);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v56 = (void *)sub_18FA28330();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setOrganizationName_, v56);

  v57 = objc_msgSend(v2, sel_departmentName);
  v58 = sub_18FA2833C();
  v60 = v59;

  v61 = objc_msgSend(a1, sel_departmentName);
  v62 = sub_18FA2833C();
  v64 = v63;

  sub_18F9E7D18(v62, v64, v58, v60);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v65 = (void *)sub_18FA28330();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setDepartmentName_, v65);

  v66 = objc_msgSend(v2, sel_jobTitle);
  v67 = sub_18FA2833C();
  v69 = v68;

  v70 = objc_msgSend(a1, sel_jobTitle);
  v71 = sub_18FA2833C();
  v73 = v72;

  sub_18F9E7D18(v71, v73, v67, v69);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v74 = (void *)sub_18FA28330();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setJobTitle_, v74);

  v75 = objc_msgSend(v2, sel_previousFamilyName);
  v76 = sub_18FA2833C();
  v78 = v77;

  swift_bridgeObjectRelease();
  v79 = HIBYTE(v78) & 0xF;
  if ((v78 & 0x2000000000000000) == 0)
    v79 = v76 & 0xFFFFFFFFFFFFLL;
  if (!v79)
  {
    v80 = objc_msgSend(a1, sel_previousFamilyName);
    if (!v80)
    {
      sub_18FA2833C();
      v80 = (id)sub_18FA28330();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v2, sel_setPreviousFamilyName_, v80);

  }
  v81 = objc_msgSend(v2, sel_phoneticGivenName);
  v82 = sub_18FA2833C();
  v84 = v83;

  swift_bridgeObjectRelease();
  v85 = HIBYTE(v84) & 0xF;
  if ((v84 & 0x2000000000000000) == 0)
    v85 = v82 & 0xFFFFFFFFFFFFLL;
  v86 = v324;
  if (!v85)
  {
    v87 = objc_msgSend(a1, sel_phoneticGivenName);
    if (!v87)
    {
      sub_18FA2833C();
      v87 = (id)sub_18FA28330();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v2, sel_setPhoneticGivenName_, v87);

  }
  v88 = objc_msgSend(v2, sel_phoneticMiddleName);
  v89 = sub_18FA2833C();
  v91 = v90;

  swift_bridgeObjectRelease();
  v92 = HIBYTE(v91) & 0xF;
  if ((v91 & 0x2000000000000000) == 0)
    v92 = v89 & 0xFFFFFFFFFFFFLL;
  if (!v92)
  {
    v93 = objc_msgSend(a1, sel_phoneticMiddleName);
    if (!v93)
    {
      sub_18FA2833C();
      v93 = (id)sub_18FA28330();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v2, sel_setPhoneticMiddleName_, v93);

  }
  v94 = objc_msgSend(v2, sel_phoneticFamilyName);
  v95 = sub_18FA2833C();
  v97 = v96;

  swift_bridgeObjectRelease();
  v98 = HIBYTE(v97) & 0xF;
  if ((v97 & 0x2000000000000000) == 0)
    v98 = v95 & 0xFFFFFFFFFFFFLL;
  if (!v98)
  {
    v99 = objc_msgSend(a1, sel_phoneticFamilyName);
    if (!v99)
    {
      sub_18FA2833C();
      v99 = (id)sub_18FA28330();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v2, sel_setPhoneticFamilyName_, v99);

  }
  v100 = objc_msgSend(v2, sel_phoneticOrganizationName);
  v101 = sub_18FA2833C();
  v103 = v102;

  swift_bridgeObjectRelease();
  v104 = HIBYTE(v103) & 0xF;
  if ((v103 & 0x2000000000000000) == 0)
    v104 = v101 & 0xFFFFFFFFFFFFLL;
  if (!v104)
  {
    v105 = objc_msgSend(a1, sel_phoneticOrganizationName);
    if (!v105)
    {
      sub_18FA2833C();
      v105 = (id)sub_18FA28330();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v2, sel_setPhoneticOrganizationName_, v105);

  }
  v106 = objc_msgSend(v2, sel_callAlert);

  if (!v106)
  {
    v107 = objc_msgSend(a1, sel_callAlert);
    objc_msgSend(v2, sel_setCallAlert_, v107);

  }
  v108 = objc_msgSend(v2, sel_textAlert);

  if (!v108)
  {
    v109 = objc_msgSend(a1, sel_textAlert);
    objc_msgSend(v2, sel_setTextAlert_, v109);

  }
  v110 = objc_msgSend(v2, sel_phonemeData);
  if (!v110)
    goto LABEL_39;
  v111 = v110;
  v112 = sub_18FA2833C();
  v114 = v113;

  swift_bridgeObjectRelease();
  v115 = HIBYTE(v114) & 0xF;
  if ((v114 & 0x2000000000000000) == 0)
    v115 = v112 & 0xFFFFFFFFFFFFLL;
  if (!v115)
  {
LABEL_39:
    v116 = objc_msgSend(a1, sel_phonemeData);
    objc_msgSend(v2, sel_setPhonemeData_, v116);

  }
  v117 = objc_msgSend(v2, sel_explicitDisplayName);
  if (!v117)
    goto LABEL_44;
  v118 = v117;
  v119 = sub_18FA2833C();
  v121 = v120;

  swift_bridgeObjectRelease();
  v122 = HIBYTE(v121) & 0xF;
  if ((v121 & 0x2000000000000000) == 0)
    v122 = v119 & 0xFFFFFFFFFFFFLL;
  if (!v122)
  {
LABEL_44:
    v123 = objc_msgSend(a1, sel_explicitDisplayName);
    objc_msgSend(v2, sel_setExplicitDisplayName_, v123);

  }
  v124 = objc_msgSend(v2, sel_mapsData);
  if (!v124)
    goto LABEL_49;
  v125 = v124;
  v126 = sub_18FA2833C();
  v128 = v127;

  swift_bridgeObjectRelease();
  v129 = HIBYTE(v128) & 0xF;
  if ((v128 & 0x2000000000000000) == 0)
    v129 = v126 & 0xFFFFFFFFFFFFLL;
  if (!v129)
  {
LABEL_49:
    v130 = objc_msgSend(a1, sel_mapsData);
    objc_msgSend(v2, sel_setMapsData_, v130);

  }
  v131 = objc_msgSend(v2, sel_birthday);
  if (v131)
  {
    v132 = v131;
    v133 = v325;
    sub_18FA27EC8();

    (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v47, v133, v4);
    v134 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v86 + 56);
    v134(v47, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48))(v47, 1, v4) != 1)
    {
      sub_18F9DFD58((uint64_t)v47, &qword_1EE180DA8);
      goto LABEL_60;
    }
  }
  else
  {
    v134 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v86 + 56);
    v134(v47, 1, 1, v4);
  }
  sub_18F9DFD58((uint64_t)v47, &qword_1EE180DA8);
  v135 = objc_msgSend(a1, sel_birthday);
  if (v135)
  {
    v136 = v325;
    sub_18FA27EC8();

    v137 = v322;
    (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v322, v136, v4);
    v134(v137, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48))(v137, 1, v4) == 1)
    {
      v135 = 0;
    }
    else
    {
      v135 = (id)sub_18FA27EBC();
      (*(void (**)(char *, uint64_t))(v86 + 8))(v137, v4);
    }
  }
  else
  {
    v134(v322, 1, 1, v4);
  }
  objc_msgSend(v2, sel_setBirthday_, v135);

LABEL_60:
  v138 = objc_msgSend(v2, sel_birthday);
  if (!v138)
  {
    v134(v43, 1, 1, v4);
    goto LABEL_65;
  }
  v139 = v138;
  v140 = v325;
  sub_18FA27EC8();

  v141 = *(void (**)(char *, char *, uint64_t))(v86 + 32);
  v141(v43, v140, v4);
  v134(v43, 0, 1, v4);
  v142 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48);
  if (v142(v43, 1, v4) == 1)
  {
LABEL_65:
    v148 = (uint64_t)v43;
LABEL_66:
    sub_18F9DFD58(v148, &qword_1EE180DA8);
    goto LABEL_67;
  }
  sub_18F9DFD58((uint64_t)v43, &qword_1EE180DA8);
  v143 = objc_msgSend(v2, sel_birthday);
  if (v143)
  {
    v144 = v143;
    v145 = (uint64_t)v319;
    sub_18FA27EC8();

    v146 = 0;
  }
  else
  {
    v146 = 1;
    v145 = (uint64_t)v319;
  }
  v147 = (uint64_t)v320;
  v134((char *)v145, v146, 1, v4);
  sub_18F9EC4C0(v145, v147, &qword_1EE180DA8);
  if (v142((char *)v147, 1, v4) == 1)
  {
    __break(1u);
    goto LABEL_174;
  }
  sub_18FA27EE0();
  v257 = v256;
  v258 = *(void (**)(uint64_t, uint64_t))(v324 + 8);
  v258(v147, v4);
  if ((v257 & 1) == 0)
    goto LABEL_67;
  v259 = objc_msgSend(a1, sel_birthday);
  if (!v259)
  {
    v262 = (uint64_t)v318;
    v134(v318, 1, 1, v4);
    goto LABEL_126;
  }
  v260 = v259;
  v261 = v325;
  sub_18FA27EC8();

  v262 = (uint64_t)v318;
  v141(v318, v261, v4);
  v134((char *)v262, 0, 1, v4);
  if (v142((char *)v262, 1, v4) == 1)
  {
LABEL_126:
    v148 = v262;
    goto LABEL_66;
  }
  sub_18F9DFD58(v262, &qword_1EE180DA8);
  v263 = objc_msgSend(v2, sel_birthday);
  if (v263)
  {
    v264 = v263;
    v265 = (uint64_t)v314;
    sub_18FA27EC8();

    v266 = 0;
    v267 = (uint64_t)v315;
    v268 = (uint64_t)v316;
  }
  else
  {
    v266 = 1;
    v267 = (uint64_t)v315;
    v268 = (uint64_t)v316;
    v265 = (uint64_t)v314;
  }
  LODWORD(v322) = 1;
  v134((char *)v265, v266, 1, v4);
  sub_18F9EC4C0(v265, v267, &qword_1EE180DA8);
  if (v142((char *)v267, 1, v4))
  {
    v269 = 0;
  }
  else
  {
    v269 = sub_18FA27EF8();
    LODWORD(v322) = v270 & 1;
  }
  sub_18F9DFD58(v267, &qword_1EE180DA8);
  v271 = objc_msgSend(a1, sel_birthday);
  if (v271)
  {
    v272 = v271;
    sub_18FA27EC8();

    v273 = 0;
  }
  else
  {
    v273 = 1;
  }
  v134((char *)v268, v273, 1, v4);
  v274 = v317;
  sub_18F9EC4C0(v268, v317, &qword_1EE180DA8);
  if (v142((char *)v274, 1, v4) == 1)
  {
    sub_18F9DFD58(v274, &qword_1EE180DA8);
    if ((v322 & 1) == 0)
      goto LABEL_67;
  }
  else
  {
    v320 = (char *)v269;
    v275 = sub_18FA27EF8();
    v277 = v276;
    v258(v274, v4);
    if ((v322 & 1) != 0)
    {
      if ((v277 & 1) == 0)
        goto LABEL_67;
    }
    else if ((v277 & 1) != 0 || v320 != (char *)v275)
    {
      goto LABEL_67;
    }
  }
  v278 = objc_msgSend(v2, sel_birthday);
  if (v278)
  {
    v279 = v278;
    v280 = (uint64_t)v310;
    sub_18FA27EC8();

    v281 = 0;
    v282 = (uint64_t)v311;
    v283 = (uint64_t)v312;
  }
  else
  {
    v281 = 1;
    v282 = (uint64_t)v311;
    v283 = (uint64_t)v312;
    v280 = (uint64_t)v310;
  }
  LODWORD(v322) = 1;
  v134((char *)v280, v281, 1, v4);
  sub_18F9EC4C0(v280, v282, &qword_1EE180DA8);
  if (v142((char *)v282, 1, v4))
  {
    v284 = 0;
  }
  else
  {
    v284 = sub_18FA27ED4();
    LODWORD(v322) = v285 & 1;
  }
  sub_18F9DFD58(v282, &qword_1EE180DA8);
  v286 = objc_msgSend(a1, sel_birthday);
  if (v286)
  {
    v287 = v286;
    sub_18FA27EC8();

    v288 = 0;
  }
  else
  {
    v288 = 1;
  }
  v134((char *)v283, v288, 1, v4);
  v289 = v313;
  sub_18F9EC4C0(v283, v313, &qword_1EE180DA8);
  if (v142((char *)v289, 1, v4) == 1)
  {
    sub_18F9DFD58(v289, &qword_1EE180DA8);
    if ((v322 & 1) == 0)
      goto LABEL_67;
  }
  else
  {
    v320 = (char *)v284;
    v290 = sub_18FA27ED4();
    v292 = v291;
    v258(v289, v4);
    if ((v322 & 1) != 0)
    {
      if ((v292 & 1) == 0)
        goto LABEL_67;
    }
    else if ((v292 & 1) != 0 || v320 != (char *)v290)
    {
      goto LABEL_67;
    }
  }
  v293 = objc_msgSend(a1, sel_birthday);
  if (v293)
  {
    v294 = v293;
    v295 = (uint64_t)v306;
    sub_18FA27EC8();

    v296 = 0;
    v297 = (uint64_t)v307;
  }
  else
  {
    v296 = 1;
    v297 = (uint64_t)v307;
    v295 = (uint64_t)v306;
  }
  v134((char *)v295, v296, 1, v4);
  sub_18F9EC4C0(v295, v297, &qword_1EE180DA8);
  if (v142((char *)v297, 1, v4) == 1)
  {
    sub_18F9DFD58(v297, &qword_1EE180DA8);
  }
  else
  {
    sub_18FA27EE0();
    v258(v297, v4);
  }
  v298 = objc_msgSend(v2, sel_birthday);
  if (v298)
  {
    v299 = v298;
    v300 = v308;
    sub_18FA27EC8();

    v301 = (uint64_t)v300;
    v302 = 0;
  }
  else
  {
    v302 = 1;
    v301 = (uint64_t)v308;
  }
  v303 = (uint64_t)v309;
  v134((char *)v301, v302, 1, v4);
  sub_18F9EC4C0(v301, v303, &qword_1EE180DA8);
  if (v142((char *)v303, 1, v4) == 1)
  {
LABEL_174:
    __break(1u);
    return;
  }
  sub_18FA27EEC();
  if (v142((char *)v303, 1, v4) == 1)
  {
    v304 = 0;
  }
  else
  {
    v304 = (void *)sub_18FA27EBC();
    v258(v303, v4);
  }
  objc_msgSend(v2, sel_setBirthday_, v304);

LABEL_67:
  v149 = objc_msgSend(v2, sel_nonGregorianBirthday);
  if (!v149)
  {
    v152 = (uint64_t)v323;
    v134(v323, 1, 1, v4);
    v153 = v324;
    goto LABEL_71;
  }
  v150 = v149;
  v151 = v325;
  sub_18FA27EC8();

  v152 = (uint64_t)v323;
  v153 = v324;
  (*(void (**)(char *, char *, uint64_t))(v324 + 32))(v323, v151, v4);
  v134((char *)v152, 0, 1, v4);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v153 + 48))(v152, 1, v4) == 1)
  {
LABEL_71:
    sub_18F9DFD58(v152, &qword_1EE180DA8);
    v154 = objc_msgSend(a1, sel_nonGregorianBirthday);
    if (v154)
    {
      v155 = v325;
      sub_18FA27EC8();

      v156 = v321;
      (*(void (**)(char *, char *, uint64_t))(v153 + 32))(v321, v155, v4);
      v134(v156, 0, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v153 + 48))(v156, 1, v4) == 1)
      {
        v154 = 0;
      }
      else
      {
        v154 = (id)sub_18FA27EBC();
        (*(void (**)(char *, uint64_t))(v153 + 8))(v156, v4);
      }
    }
    else
    {
      v134(v321, 1, 1, v4);
    }
    objc_msgSend(v2, sel_setNonGregorianBirthday_, v154);

    goto LABEL_77;
  }
  sub_18F9DFD58(v152, &qword_1EE180DA8);
LABEL_77:
  v157 = objc_msgSend(v2, sel_note);
  v158 = sub_18FA2833C();
  v160 = v159;

  swift_bridgeObjectRelease();
  if ((v160 & 0x2000000000000000) != 0)
    v161 = HIBYTE(v160) & 0xF;
  else
    v161 = v158 & 0xFFFFFFFFFFFFLL;
  v162 = objc_msgSend(a1, sel_note);
  v163 = v162;
  if (v161)
  {
    v164 = sub_18FA2833C();
    v166 = v165;

    swift_bridgeObjectRelease();
    v167 = HIBYTE(v166) & 0xF;
    if ((v166 & 0x2000000000000000) == 0)
      v167 = v164 & 0xFFFFFFFFFFFFLL;
    if (v167)
    {
      v168 = objc_msgSend(v2, sel_note);
      v169 = sub_18FA2833C();
      v171 = v170;

      v172 = objc_msgSend(a1, sel_note);
      v173 = sub_18FA2833C();
      v175 = v174;

      if (v169 == v173 && v171 == v175)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v176 = sub_18FA2896C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v176 & 1) == 0)
        {
          v177 = objc_msgSend(v2, sel_note);
          v178 = sub_18FA2833C();
          v180 = v179;

          v326 = v178;
          v327 = v180;
          sub_18FA283A8();
          v181 = objc_msgSend(a1, sel_note);
          sub_18FA2833C();

          sub_18FA283A8();
          swift_bridgeObjectRelease();
          v182 = (void *)sub_18FA28330();
          swift_bridgeObjectRelease();
          objc_msgSend(v2, sel_setNote_, v182);

        }
      }
    }
  }
  else
  {
    if (!v162)
    {
      sub_18FA2833C();
      v163 = (void *)sub_18FA28330();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v2, sel_setNote_, v163);

  }
  if ((objc_msgSend(v2, sel_imageDataAvailable) & 1) == 0
    && objc_msgSend(a1, sel_imageDataAvailable))
  {
    v183 = objc_msgSend(a1, sel_imageData);
    if (v183)
    {
      v184 = sub_18FA280A8();
      v186 = v185;

      v183 = (id)sub_18FA28090();
      sub_18F9EA8A4(v184, v186);
    }
    objc_msgSend(v2, sel_setImageData_, v183);

    objc_msgSend(a1, sel_cropRect);
    objc_msgSend(v2, sel_setCropRect_);
    v187 = objc_msgSend(a1, sel_imageType);
    objc_msgSend(v2, sel_setImageType_, v187);

    v188 = objc_msgSend(a1, sel_memojiMetadata);
    if (v188)
    {
      v189 = sub_18FA280A8();
      v191 = v190;

      v188 = (id)sub_18FA28090();
      sub_18F9EA8A4(v189, v191);
    }
    objc_msgSend(v2, sel_setMemojiMetadata_, v188);

  }
  v192 = objc_msgSend(v2, sel_wallpaper);

  if (!v192)
  {
    v193 = objc_msgSend(a1, sel_wallpaper);

    if (v193)
    {
      v194 = objc_msgSend(a1, sel_wallpaper);
      objc_msgSend(v2, sel_setWallpaper_, v194);

    }
  }
  v195 = objc_msgSend(v2, sel_pronunciationGivenName);
  if (!v195)
    goto LABEL_106;
  v196 = v195;
  v197 = sub_18FA2833C();
  v199 = v198;

  swift_bridgeObjectRelease();
  v200 = HIBYTE(v199) & 0xF;
  if ((v199 & 0x2000000000000000) == 0)
    v200 = v197 & 0xFFFFFFFFFFFFLL;
  if (!v200)
  {
LABEL_106:
    v201 = objc_msgSend(a1, sel_pronunciationGivenName);
    objc_msgSend(v2, sel_setPronunciationGivenName_, v201);

  }
  v202 = objc_msgSend(v2, sel_pronunciationFamilyName);
  if (!v202)
    goto LABEL_111;
  v203 = v202;
  v204 = sub_18FA2833C();
  v206 = v205;

  swift_bridgeObjectRelease();
  v207 = HIBYTE(v206) & 0xF;
  if ((v206 & 0x2000000000000000) == 0)
    v207 = v204 & 0xFFFFFFFFFFFFLL;
  if (!v207)
  {
LABEL_111:
    v208 = objc_msgSend(a1, sel_pronunciationFamilyName);
    objc_msgSend(v2, sel_setPronunciationFamilyName_, v208);

  }
  v209 = objc_msgSend(v2, sel_preferredChannel);
  if (!v209)
    goto LABEL_116;
  v210 = v209;
  v211 = sub_18FA2833C();
  v213 = v212;

  swift_bridgeObjectRelease();
  v214 = HIBYTE(v213) & 0xF;
  if ((v213 & 0x2000000000000000) == 0)
    v214 = v211 & 0xFFFFFFFFFFFFLL;
  if (!v214)
  {
LABEL_116:
    v215 = objc_msgSend(a1, sel_preferredChannel);
    objc_msgSend(v2, sel_setPreferredChannel_, v215);

  }
  v216 = objc_msgSend(v2, sel_emailAddresses);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE180CF8);
  v217 = sub_18FA28444();

  v218 = objc_msgSend(a1, sel_emailAddresses);
  v219 = sub_18FA28444();

  sub_18F9E992C(v217, v219, (uint64_t (*)(uint64_t))sub_18FA1C10C, (unint64_t *)&unk_1EE181310, 0x1E0CB3940, (void (*)(id *, id))sub_18FA1A824);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v220 = (void *)sub_18FA28438();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setEmailAddresses_, v220);

  v221 = objc_msgSend(v2, sel_phoneNumbers);
  v222 = sub_18FA28444();

  v223 = objc_msgSend(a1, sel_phoneNumbers);
  v224 = sub_18FA28444();

  sub_18F9E907C(v222, v224);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v225 = (void *)sub_18FA28438();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setPhoneNumbers_, v225);

  v226 = objc_msgSend(v2, sel_urlAddresses);
  v227 = sub_18FA28444();

  v228 = objc_msgSend(a1, sel_urlAddresses);
  v229 = sub_18FA28444();

  sub_18F9E992C(v227, v229, (uint64_t (*)(uint64_t))sub_18FA1C10C, (unint64_t *)&unk_1EE181310, 0x1E0CB3940, (void (*)(id *, id))sub_18FA1A824);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v230 = (void *)sub_18FA28438();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setUrlAddresses_, v230);

  v231 = objc_msgSend(v2, sel_dates);
  v232 = sub_18FA28444();

  v233 = objc_msgSend(a1, sel_dates);
  v234 = sub_18FA28444();

  sub_18F9E992C(v232, v234, (uint64_t (*)(uint64_t))sub_18FA1C2E8, &qword_1EE181380, 0x1E0C99D78, (void (*)(id *, id))sub_18FA1A7EC);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v235 = (void *)sub_18FA28438();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setDates_, v235);

  v236 = objc_msgSend(v2, sel_instantMessageAddresses);
  v237 = sub_18FA28444();

  v238 = objc_msgSend(a1, sel_instantMessageAddresses);
  v239 = sub_18FA28444();

  sub_18F9E992C(v237, v239, (uint64_t (*)(uint64_t))sub_18FA1C30C, &qword_1EE180DB8, (uint64_t)off_1E29F1F58, (void (*)(id *, id))sub_18FA1A7D0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v240 = (void *)sub_18FA28438();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setInstantMessageAddresses_, v240);

  v241 = objc_msgSend(v2, sel_contactRelations);
  v242 = sub_18FA28444();

  v243 = objc_msgSend(a1, sel_contactRelations);
  v244 = sub_18FA28444();

  sub_18F9E992C(v242, v244, (uint64_t (*)(uint64_t))sub_18FA1C330, &qword_1EE181350, (uint64_t)off_1E29F1D18, (void (*)(id *, id))sub_18FA1A7B4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v245 = (void *)sub_18FA28438();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setContactRelations_, v245);

  v246 = objc_msgSend(v2, sel_socialProfiles);
  v247 = sub_18FA28444();

  v248 = objc_msgSend(a1, sel_socialProfiles);
  v249 = sub_18FA28444();

  sub_18F9E992C(v247, v249, (uint64_t (*)(uint64_t))sub_18FA1C354, &qword_1EE180DB0, (uint64_t)off_1E29F2228, (void (*)(id *, id))sub_18FA1A798);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v250 = (void *)sub_18FA28438();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setSocialProfiles_, v250);

  v251 = objc_msgSend(v2, sel_postalAddresses);
  v252 = sub_18FA28444();

  v253 = objc_msgSend(a1, sel_postalAddresses);
  v254 = sub_18FA28444();

  sub_18F9E992C(v252, v254, (uint64_t (*)(uint64_t))sub_18FA1C378, &qword_1EE181320, (uint64_t)&off_1E29F2100, (void (*)(id *, id))sub_18FA1A77C);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v255 = (void *)sub_18FA28438();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setPostalAddresses_, v255);

}

uint64_t sub_18F9E6318(unint64_t a1)
{
  return sub_18F9E63A4(a1, (SEL *)&selRef_emailAddresses, (uint64_t (*)(uint64_t))sub_18F9E70E8, (SEL *)&selRef_setEmailAddresses_);
}

BOOL sub_18F9E6334(void *a1)
{
  return sub_18F9E6640(a1, (SEL *)&selRef_emailAddresses, (uint64_t (*)(uint64_t))sub_18F9E70E8, (SEL *)&selRef_setEmailAddresses_);
}

uint64_t sub_18F9E6350(unint64_t a1)
{
  return sub_18F9E63A4(a1, (SEL *)&selRef_phoneNumbers, (uint64_t (*)(uint64_t))sub_18F9E7454, (SEL *)&selRef_setPhoneNumbers_);
}

BOOL sub_18F9E636C(void *a1)
{
  return sub_18F9E6640(a1, (SEL *)&selRef_phoneNumbers, (uint64_t (*)(uint64_t))sub_18F9E7454, (SEL *)&selRef_setPhoneNumbers_);
}

uint64_t sub_18F9E6388(unint64_t a1)
{
  return sub_18F9E63A4(a1, (SEL *)&selRef_urlAddresses, (uint64_t (*)(uint64_t))sub_18F9E70E8, (SEL *)&selRef_setUrlAddresses_);
}

uint64_t sub_18F9E63A4(unint64_t a1, SEL *a2, uint64_t (*a3)(uint64_t), SEL *a4)
{
  uint64_t v6;
  uint64_t result;
  uint64_t i;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  SEL *v19;
  uint64_t v21;

  v19 = a4;
  v21 = MEMORY[0x1E0DEE9D8];
  if (!(a1 >> 62))
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v6)
      goto LABEL_3;
LABEL_20:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRetain();
  result = sub_18FA288B8();
  v6 = result;
  if (!result)
    goto LABEL_20;
LABEL_3:
  if (v6 < 1)
  {
    __break(1u);
  }
  else
  {
    for (i = 0; i != v6; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v9 = (id)MEMORY[0x194005370](i, a1);
      else
        v9 = *(id *)(a1 + 8 * i + 32);
      v10 = v9;
      v11 = objc_msgSend(v9, *a2, v19);
      __swift_instantiateConcreteTypeFromMangledName(qword_1EE180CF8);
      v12 = sub_18FA28444();

      v13 = a3(v12);
      swift_bridgeObjectRelease();
      if (v13 >> 62)
      {
        swift_bridgeObjectRetain();
        v14 = sub_18FA288B8();
        swift_bridgeObjectRelease();
      }
      else
      {
        v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v15 = objc_msgSend(v10, *a2);
      v16 = sub_18FA28444();

      if (v16 >> 62)
      {
        swift_bridgeObjectRetain();
        v17 = sub_18FA288B8();
        swift_bridgeObjectRelease();
      }
      else
      {
        v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v14 >= v17)
      {

        swift_bridgeObjectRelease();
      }
      else
      {
        v18 = (void *)sub_18FA28438();
        swift_bridgeObjectRelease();
        objc_msgSend(v10, *v19, v18);

        sub_18FA28834();
        sub_18FA28864();
        sub_18FA28870();
        sub_18FA28840();
      }
    }
    swift_bridgeObjectRelease();
    return v21;
  }
  return result;
}

BOOL sub_18F9E6624(void *a1)
{
  return sub_18F9E6640(a1, (SEL *)&selRef_urlAddresses, (uint64_t (*)(uint64_t))sub_18F9E70E8, (SEL *)&selRef_setUrlAddresses_);
}

BOOL sub_18F9E6640(void *a1, SEL *a2, uint64_t (*a3)(uint64_t), SEL *a4)
{
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;

  v8 = objc_msgSend(a1, *a2);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE180CF8);
  v9 = sub_18FA28444();

  v10 = a3(v9);
  swift_bridgeObjectRelease();
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    v11 = sub_18FA288B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v12 = objc_msgSend(a1, *a2);
  v13 = sub_18FA28444();

  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    v14 = sub_18FA288B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v11 >= v14)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = (void *)sub_18FA28438();
    swift_bridgeObjectRelease();
    objc_msgSend(a1, *a4, v15);

  }
  return v11 < v14;
}

void sub_18F9E67BC(unint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  _QWORD v37[6];

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE180F90);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1 >> 62;
  if (!(a1 >> 62))
  {
    v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_3;
LABEL_38:
    swift_bridgeObjectRelease();
    sub_18FA27FAC();
    return;
  }
  swift_bridgeObjectRetain();
  v9 = sub_18FA288B8();
  if (!v9)
    goto LABEL_38;
LABEL_3:
  v10 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v11 = (id)MEMORY[0x194005370](0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_41;
    }
    v11 = *(id *)(a1 + 32);
  }
  v1 = v11;
  swift_bridgeObjectRelease();
  if (v9 < 1)
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  if (v8)
  {
    swift_bridgeObjectRetain();
    if (sub_18FA288B8() < 1)
      goto LABEL_47;
    swift_bridgeObjectRetain();
    v12 = sub_18FA288B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v12)
      goto LABEL_46;
    swift_bridgeObjectRetain();
  }
  if (v12 < v9)
    goto LABEL_42;
  if (v10 && v9 != 1)
  {
    sub_18F9E000C(0, (unint64_t *)&qword_1EE17EBD0);
    v13 = 1;
    do
    {
      v14 = v13 + 1;
      sub_18FA287F8();
      v13 = v14;
    }
    while (v9 != v14);
  }
  if (v8)
  {
    swift_bridgeObjectRetain();
    v10 = sub_18FA288C4();
    v2 = v15;
    v3 = v16;
    v9 = v17;
    swift_bridgeObjectRelease_n();
    if ((v9 & 1) == 0)
      goto LABEL_21;
  }
  else
  {
    v10 = a1 & 0xFFFFFFFFFFFFFF8;
    v2 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
    v3 = 1;
    v9 = (2 * v9) | 1;
    if ((v9 & 1) == 0)
      goto LABEL_21;
  }
  sub_18FA28984();
  swift_unknownObjectRetain_n();
  v18 = swift_dynamicCastClass();
  if (!v18)
  {
    swift_unknownObjectRelease();
    v18 = MEMORY[0x1E0DEE9D8];
  }
  v19 = *(_QWORD *)(v18 + 16);
  swift_release();
  if (__OFSUB__((unint64_t)v9 >> 1, v3))
    goto LABEL_48;
  if (v19 != ((unint64_t)v9 >> 1) - v3)
    goto LABEL_49;
  a1 = swift_dynamicCastClass();
  if (!a1)
  {
    swift_unknownObjectRelease();
    a1 = MEMORY[0x1E0DEE9D8];
  }
  while (1)
  {
    swift_unknownObjectRelease();
    if ((a1 & 0x8000000000000000) != 0 || (a1 & 0x4000000000000000) != 0)
    {
LABEL_43:
      swift_bridgeObjectRetain();
      v20 = sub_18FA288B8();
      if (!v20)
        goto LABEL_44;
    }
    else
    {
      v20 = *(_QWORD *)(a1 + 16);
      swift_bridgeObjectRetain();
      if (!v20)
        goto LABEL_44;
    }
    if (v20 >= 1)
      break;
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    swift_unknownObjectRelease();
LABEL_21:
    a1 = sub_18F9E82A8(v10, v2, v3, v9);
  }
  for (i = 0; i != v20; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
      v22 = (id)MEMORY[0x194005370](i, a1);
    else
      v22 = *(id *)(a1 + 8 * i + 32);
    v23 = v22;
    sub_18F9E6C8C(v22);

  }
LABEL_44:
  swift_release_n();
  v24 = objc_msgSend(v1, sel_namePrefix);
  v25 = sub_18FA2833C();
  v37[4] = v26;
  v37[5] = v25;

  v27 = objc_msgSend(v1, sel_givenName);
  v28 = sub_18FA2833C();
  v37[2] = v29;
  v37[3] = v28;

  v30 = objc_msgSend(v1, sel_middleName);
  v31 = sub_18FA2833C();
  v37[0] = v32;
  v37[1] = v31;

  v33 = objc_msgSend(v1, sel_familyName);
  sub_18FA2833C();

  v34 = objc_msgSend(v1, sel_nameSuffix);
  sub_18FA2833C();

  v35 = objc_msgSend(v1, sel_nickname);
  sub_18FA2833C();

  v36 = sub_18FA27FB8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v7, 1, 1, v36);
  sub_18FA27F7C();

}

void sub_18F9E6C8C(void *a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;

  v3 = objc_msgSend(v1, sel_namePrefix);
  v4 = sub_18FA2833C();
  v6 = v5;

  v7 = objc_msgSend(a1, sel_namePrefix);
  v8 = sub_18FA2833C();
  v10 = v9;

  sub_18F9E7D18(v8, v10, v4, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = (void *)sub_18FA28330();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setNamePrefix_, v11);

  v12 = objc_msgSend(v1, sel_givenName);
  v13 = sub_18FA2833C();
  v15 = v14;

  v16 = objc_msgSend(a1, sel_givenName);
  v17 = sub_18FA2833C();
  v19 = v18;

  sub_18F9E7D18(v17, v19, v13, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v20 = (void *)sub_18FA28330();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setGivenName_, v20);

  v21 = objc_msgSend(v1, sel_middleName);
  v22 = sub_18FA2833C();
  v24 = v23;

  v25 = objc_msgSend(a1, sel_middleName);
  v26 = sub_18FA2833C();
  v28 = v27;

  sub_18F9E7D18(v26, v28, v22, v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v29 = (void *)sub_18FA28330();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setMiddleName_, v29);

  v30 = objc_msgSend(v1, sel_familyName);
  v31 = sub_18FA2833C();
  v33 = v32;

  v34 = objc_msgSend(a1, sel_familyName);
  v35 = sub_18FA2833C();
  v37 = v36;

  sub_18F9E7D18(v35, v37, v31, v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v38 = (void *)sub_18FA28330();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setFamilyName_, v38);

  v39 = objc_msgSend(v1, sel_nameSuffix);
  v40 = sub_18FA2833C();
  v42 = v41;

  v43 = objc_msgSend(a1, sel_nameSuffix);
  v44 = sub_18FA2833C();
  v46 = v45;

  sub_18F9E7D18(v44, v46, v40, v42);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v47 = (void *)sub_18FA28330();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setNameSuffix_, v47);

  v48 = objc_msgSend(v1, sel_nickname);
  v49 = sub_18FA2833C();
  v51 = v50;

  v52 = objc_msgSend(a1, sel_nickname);
  v53 = sub_18FA2833C();
  v55 = v54;

  sub_18F9E7D18(v53, v55, v49, v51);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v56 = (id)sub_18FA28330();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setNickname_, v56);

}

uint64_t sub_18F9E70E8(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char **v6;
  id v7;
  void *v8;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  char v19;
  uint64_t v20;
  id v21;
  char v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;

  v30 = MEMORY[0x1E0DEE9D8];
  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0)
    goto LABEL_32;
LABEL_2:
  v2 = MEMORY[0x1E0DEE9E8];
LABEL_3:
  v29 = v2;
  if (!(a1 >> 62))
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v3)
      goto LABEL_35;
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  v3 = sub_18FA288B8();
  if (v3)
  {
LABEL_5:
    v4 = 0;
    v5 = a1 & 0xC000000000000001;
    sub_18F9E000C(0, (unint64_t *)&unk_1EE181310);
    v27 = v3;
    v6 = &selRef_smartDialerString;
    while (1)
    {
      if (v5)
      {
        v7 = (id)MEMORY[0x194005370](v4, a1);
      }
      else
      {
        if (v4 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_31;
        v7 = *(id *)(a1 + 32 + 8 * v4);
      }
      v8 = v7;
      if (__OFADD__(v4++, 1))
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        if (!sub_18FA288B8())
          goto LABEL_2;
        sub_18F9EAF3C(MEMORY[0x1E0DEE9D8]);
        v2 = v25;
        goto LABEL_3;
      }
      v10 = v29;
      swift_bridgeObjectRetain();
      v11 = objc_msgSend(v8, v6[278]);
      v12 = v11;
      if ((v10 & 0xC000000000000001) == 0)
        break;
      v13 = v11;
      v14 = sub_18FA28774();
      swift_bridgeObjectRelease();

      if ((v14 & 1) == 0)
        goto LABEL_26;

LABEL_7:
      if (v4 == v3)
      {
        swift_bridgeObjectRelease();
        v24 = v30;
        goto LABEL_36;
      }
    }
    if (*(_QWORD *)(v10 + 16))
    {
      v15 = sub_18FA286A8();
      v16 = -1 << *(_BYTE *)(v10 + 32);
      v17 = v15 & ~v16;
      if (((*(_QWORD *)(v10 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0)
      {
        v18 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * v17);
        v19 = sub_18FA286B4();

        if ((v19 & 1) != 0)
        {

          swift_bridgeObjectRelease();
LABEL_24:
          v5 = a1 & 0xC000000000000001;
          v3 = v27;
          v6 = &selRef_smartDialerString;
          goto LABEL_7;
        }
        v20 = ~v16;
        while (1)
        {
          v17 = (v17 + 1) & v20;
          if (((*(_QWORD *)(v10 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
            break;
          v21 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * v17);
          v22 = sub_18FA286B4();

          if ((v22 & 1) != 0)
          {

            swift_bridgeObjectRelease();
            goto LABEL_24;
          }
        }
      }
    }

    swift_bridgeObjectRelease();
    v5 = a1 & 0xC000000000000001;
    v3 = v27;
    v6 = &selRef_smartDialerString;
LABEL_26:
    v23 = v8;
    MEMORY[0x194004F98]();
    if (*(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_18FA28474();
    sub_18FA284BC();
    sub_18FA2845C();
    sub_18FA1A824(&v28, objc_msgSend(v23, v6[278]));

    goto LABEL_7;
  }
LABEL_35:
  swift_bridgeObjectRelease();
  v24 = MEMORY[0x1E0DEE9D8];
LABEL_36:
  swift_bridgeObjectRelease();
  return v24;
}

unint64_t sub_18F9E7454(unint64_t a1)
{
  void *v2;
  uint64_t v3;
  unint64_t v4;
  char **v5;
  char **v6;
  id v7;
  BOOL v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  unsigned int v14;
  unsigned int v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  unint64_t v22;
  char v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v42;
  unsigned __int8 v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  id v47;
  uint64_t v48;
  id v49;
  id v50;
  void *v51;
  unint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  void *v56;
  id v57;
  uint64_t v58;
  unint64_t v59;
  void *v60;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  void *v67;
  unint64_t v68;
  unint64_t v69;
  void *v70;
  unint64_t v71;
  id v72;
  unint64_t v73;
  id v74[3];
  unint64_t v75;

  v75 = MEMORY[0x1E0DEE9D8];
  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0)
    goto LABEL_97;
LABEL_2:
  v2 = (void *)MEMORY[0x1E0DEE9E8];
LABEL_3:
  v74[2] = v2;
  if (!(a1 >> 62))
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v3)
      goto LABEL_100;
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  v3 = sub_18FA288B8();
  if (v3)
  {
LABEL_5:
    v4 = 0;
    v68 = a1 & 0xC000000000000001;
    v65 = a1 + 32;
    v66 = a1 & 0xFFFFFFFFFFFFFF8;
    v5 = &selRef_smartDialerString;
    v6 = &selRef_removeEntryAtIndex_;
    v63 = v3;
    v64 = a1;
    while (1)
    {
      while (1)
      {
        if (v68)
        {
          v7 = (id)MEMORY[0x194005370](v4, a1);
          v8 = __OFADD__(v4++, 1);
          if (v8)
            goto LABEL_86;
        }
        else
        {
          if (v4 >= *(_QWORD *)(v66 + 16))
            goto LABEL_87;
          v7 = *(id *)(v65 + 8 * v4);
          v8 = __OFADD__(v4++, 1);
          if (v8)
            goto LABEL_86;
        }
        v9 = v7;
        v10 = swift_bridgeObjectRetain();
        sub_18F9EA8FC(v10, v9);
        v12 = v11;
        swift_bridgeObjectRelease();

        if (v12)
          break;
LABEL_74:
        v57 = v9;
        MEMORY[0x194004F98]();
        if (*(_QWORD *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_18FA28474();
        sub_18FA284BC();
        sub_18FA2845C();
        sub_18FA1A808(v74, objc_msgSend(v57, v5[278]));

        if (v4 == v3)
        {
LABEL_82:
          swift_bridgeObjectRelease();
          v59 = v75;
          goto LABEL_101;
        }
      }
      v70 = v9;
      v13 = objc_msgSend(v9, v5[278]);
      v14 = objc_msgSend(v12, v6[116]);
      if (v14 == objc_msgSend(v13, v6[116]))
      {
        v16 = objc_msgSend(v12, sel_stringValue);
        sub_18FA2833C();

        v17 = sub_18FA2839C();
        swift_bridgeObjectRelease();
        v18 = objc_msgSend(v13, sel_stringValue);
        sub_18FA2833C();

        v6 = &selRef_removeEntryAtIndex_;
        v19 = sub_18FA2839C();

        v5 = &selRef_smartDialerString;
        swift_bridgeObjectRelease();
        if (v17 < v19)
        {
LABEL_18:
          v67 = v12;
          v20 = v75;
          v21 = v70;
          v22 = swift_bridgeObjectRetain();
          a1 = sub_18F9EB5F4(v22, v21);
          v24 = v23;
          swift_bridgeObjectRelease();
          v72 = v21;

          if ((v24 & 1) != 0)
          {
            if (v20 >> 62)
            {
              swift_bridgeObjectRetain();
              v26 = sub_18FA288B8();
              swift_bridgeObjectRelease();
            }
            else
            {
              v26 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
            }
            goto LABEL_70;
          }
          v25 = a1 + 1;
          if (__OFADD__(a1, 1))
            goto LABEL_89;
          v26 = a1;
          if (!(v20 >> 62))
          {
            if (v25 != *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_22;
            goto LABEL_70;
          }
          swift_bridgeObjectRetain();
          v58 = sub_18FA288B8();
          swift_bridgeObjectRelease();
          if (v25 == v58)
          {
LABEL_70:
            if (v20 >> 62)
            {
              swift_bridgeObjectRetain();
              v55 = sub_18FA288B8();
              swift_bridgeObjectRelease();
            }
            else
            {
              v55 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
            }
            v3 = v63;
            a1 = v64;
            if (v55 < v26)
              goto LABEL_88;
            sub_18FA10BAC(v26, v55);
            v56 = (void *)sub_18F9E88F0(v67);

            v9 = v70;
            goto LABEL_74;
          }
LABEL_22:
          v62 = v4;
          a1 = sub_18F9E000C(0, &qword_1EE180D80);
          v27 = v26 + 5;
          v69 = a1;
          while (2)
          {
            v28 = v27 - 4;
            v73 = v27 - 4;
            if ((v20 & 0xC000000000000001) != 0)
            {
              v29 = (id)MEMORY[0x194005370]();
            }
            else
            {
              if ((v28 & 0x8000000000000000) != 0)
              {
                __break(1u);
LABEL_84:
                __break(1u);
LABEL_85:
                __break(1u);
LABEL_86:
                __break(1u);
LABEL_87:
                __break(1u);
LABEL_88:
                __break(1u);
LABEL_89:
                __break(1u);
LABEL_90:
                __break(1u);
LABEL_91:
                __break(1u);
LABEL_92:
                __break(1u);
LABEL_93:
                __break(1u);
LABEL_94:
                __break(1u);
LABEL_95:
                __break(1u);
LABEL_96:
                __break(1u);
LABEL_97:
                if (!sub_18FA288B8())
                  goto LABEL_2;
                sub_18F9EB298(MEMORY[0x1E0DEE9D8]);
                v2 = v60;
                goto LABEL_3;
              }
              if (v28 >= *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_84;
              v29 = *(id *)(v20 + 8 * v27);
            }
            v30 = v29;
            v31 = objc_msgSend(v29, v5[278], v62);
            v32 = objc_msgSend(v72, v5[278]);
            if ((sub_18FA286B4() & 1) != 0)
            {

              goto LABEL_38;
            }
            v71 = v26;
            v33 = objc_msgSend(v31, sel_stringValue);
            v34 = sub_18FA2833C();
            v36 = v35;

            v37 = objc_msgSend(v32, sel_stringValue);
            v38 = sub_18FA2833C();
            v40 = v39;

            if (v34 != v38 || v36 != v40)
            {
              v42 = sub_18FA2896C();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              a1 = v69;
              if ((v42 & 1) != 0)
              {

                v5 = &selRef_smartDialerString;
                v6 = &selRef_removeEntryAtIndex_;
                goto LABEL_37;
              }
              v43 = objc_msgSend(v31, sel_isLikePhoneNumber_, v32);

              v5 = &selRef_smartDialerString;
              v6 = &selRef_removeEntryAtIndex_;
              if ((v43 & 1) != 0)
              {
LABEL_37:
                v26 = v71;
LABEL_38:
                v44 = v27 - 4;
              }
              else
              {
                v44 = v27 - 4;
                if (v73 != v71)
                {
                  if ((v20 & 0xC000000000000001) != 0)
                  {
                    v48 = MEMORY[0x194005370](v71, v20);
                    v49 = (id)MEMORY[0x194005370](v73, v20);
                  }
                  else
                  {
                    if ((v71 & 0x8000000000000000) != 0)
                      goto LABEL_91;
                    v46 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
                    if (v71 >= v46)
                      goto LABEL_92;
                    v47 = *(id *)(v20 + 8 * v71 + 32);
                    if ((v73 & 0x8000000000000000) != 0)
                      goto LABEL_93;
                    if (v73 >= v46)
                      goto LABEL_94;
                    v48 = (uint64_t)v47;
                    v49 = *(id *)(v20 + 8 * v27);
                  }
                  v50 = v49;
                  if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
                    || (v20 & 0x8000000000000000) != 0
                    || (v20 & 0x4000000000000000) != 0)
                  {
                    sub_18FA0C3CC(v20);
                  }
                  v51 = *(void **)((v20 & 0xFFFFFFFFFFFFFF8) + 8 * v71 + 0x20);
                  *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 8 * v71 + 0x20) = v50;

                  sub_18FA2845C();
                  v52 = v75;
                  if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
                    || (v52 & 0x8000000000000000) != 0
                    || (v52 & 0x4000000000000000) != 0)
                  {
                    sub_18FA0C3CC(v52);
                  }
                  if ((v73 & 0x8000000000000000) != 0)
                    goto LABEL_95;
                  v53 = v52 & 0xFFFFFFFFFFFFFF8;
                  if (v73 >= *(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10))
                    goto LABEL_96;
                  v54 = *(void **)(v53 + 8 * v27);
                  *(_QWORD *)(v53 + 8 * v27) = v48;

                  sub_18FA2845C();
                }
                v26 = v71 + 1;
                if (__OFADD__(v71, 1))
                  goto LABEL_90;
              }
              if (__OFADD__(v44, 1))
                goto LABEL_85;
              v20 = v75;
              if (v75 >> 62)
              {
                swift_bridgeObjectRetain();
                v45 = sub_18FA288B8();
                swift_bridgeObjectRelease();
              }
              else
              {
                v45 = *(_QWORD *)((v75 & 0xFFFFFFFFFFFFF8) + 0x10);
              }
              ++v27;
              if (v44 + 1 == v45)
              {
                v4 = v62;
                goto LABEL_70;
              }
              continue;
            }
            break;
          }

          swift_bridgeObjectRelease_n();
          v5 = &selRef_smartDialerString;
          v6 = &selRef_removeEntryAtIndex_;
          v26 = v71;
          a1 = v69;
          goto LABEL_38;
        }
      }
      else
      {
        v15 = objc_msgSend(v12, v6[116]);

        if (!v15)
          goto LABEL_18;
      }

      if (v4 == v3)
        goto LABEL_82;
    }
  }
LABEL_100:
  swift_bridgeObjectRelease();
  v59 = MEMORY[0x1E0DEE9D8];
LABEL_101:
  swift_bridgeObjectRelease();
  return v59;
}

id DuplicateContacts.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id DuplicateContacts.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DuplicateContacts();
  return objc_msgSendSuper2(&v2, sel_init);
}

id DuplicateContacts.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DuplicateContacts();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_18F9E7D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE17EBA0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
    goto LABEL_33;
  swift_bridgeObjectRetain();
  sub_18F9E2500(385, a1, a2);
  v11 = sub_18FA2839C();
  swift_bridgeObjectRelease();
  sub_18F9E2500(385, a3, a4);
  v12 = sub_18FA2839C();
  swift_bridgeObjectRelease();
  if (v11 != v12)
  {
    if (v12 >= v11)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a3;
    }
    return a1;
  }
  v39 = a1;
  v40 = a2;
  sub_18FA28114();
  v13 = sub_18FA28120();
  v14 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v14(v10, 0, 1, v13);
  sub_18F9EC3D0();
  v15 = sub_18FA28714();
  v17 = v16;
  sub_18F9DFD58((uint64_t)v10, (uint64_t *)&unk_1EE17EBA0);
  if (v15 == a1 && v17 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  v19 = sub_18FA2896C();
  swift_bridgeObjectRelease();
  if ((v19 & 1) != 0)
  {
LABEL_12:
    v38 = 0;
    goto LABEL_13;
  }
  v38 = 3;
LABEL_13:
  v39 = a1;
  v40 = a2;
  sub_18FA28114();
  v14(v10, 0, 1, v13);
  v20 = sub_18FA28714();
  v22 = v21;
  sub_18F9DFD58((uint64_t)v10, (uint64_t *)&unk_1EE17EBA0);
  if (v20 == a1 && v22 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v23 = sub_18FA2896C();
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      v36 = 1;
      goto LABEL_19;
    }
  }
  v36 = 0;
LABEL_19:
  v39 = a3;
  v40 = a4;
  sub_18FA28114();
  v14(v10, 0, 1, v13);
  v24 = sub_18FA28714();
  v26 = v25;
  sub_18F9DFD58((uint64_t)v10, (uint64_t *)&unk_1EE17EBA0);
  if (v24 == a3 && v26 == a4)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v27 = sub_18FA2896C();
    swift_bridgeObjectRelease();
    if ((v27 & 1) == 0)
    {
      v37 = 3;
      goto LABEL_25;
    }
  }
  v37 = 0;
LABEL_25:
  v28 = v36 + v38;
  v39 = a3;
  v40 = a4;
  sub_18FA28114();
  v14(v10, 0, 1, v13);
  v29 = sub_18FA28714();
  v31 = v30;
  sub_18F9DFD58((uint64_t)v10, (uint64_t *)&unk_1EE17EBA0);
  if (v29 == a3 && v31 == a4)
  {
    swift_bridgeObjectRelease();
LABEL_29:
    v33 = 0;
    goto LABEL_31;
  }
  v32 = sub_18FA2896C();
  swift_bridgeObjectRelease();
  if ((v32 & 1) != 0)
    goto LABEL_29;
  v33 = 1;
LABEL_31:
  if (v33 + v37 >= v28)
  {
    swift_bridgeObjectRelease();
LABEL_33:
    swift_bridgeObjectRetain();
    return a3;
  }
  return a1;
}

uint64_t sub_18F9E8104()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v0 = sub_18FA28108();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18FA280FC();
  sub_18FA280D8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v4 = sub_18FA27F34();
  if (!v5)
    return sub_18FA27F40();
  v6 = v4;
  v7 = v5;
  swift_bridgeObjectRelease();
  v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v8 = v6 & 0xFFFFFFFFFFFFLL;
  if (!v8)
    return sub_18FA27F40();
  v9 = sub_18FA27F64();
  if (!v10)
    return sub_18FA27F70();
  v11 = v9;
  v12 = v10;
  swift_bridgeObjectRelease();
  v13 = HIBYTE(v12) & 0xF;
  if ((v12 & 0x2000000000000000) == 0)
    v13 = v11 & 0xFFFFFFFFFFFFLL;
  if (!v13)
    return sub_18FA27F70();
  v14 = sub_18FA27F4C();
  if (!v15)
    return sub_18FA27F58();
  v16 = v14;
  v17 = v15;
  swift_bridgeObjectRelease();
  v18 = HIBYTE(v17) & 0xF;
  if ((v17 & 0x2000000000000000) == 0)
    v18 = v16 & 0xFFFFFFFFFFFFLL;
  if (!v18)
    return sub_18FA27F58();
  v19 = sub_18FA27F94();
  if (!v20)
    return sub_18FA27FA0();
  v21 = v19;
  v22 = v20;
  swift_bridgeObjectRelease();
  v23 = HIBYTE(v22) & 0xF;
  if ((v22 & 0x2000000000000000) == 0)
    v23 = v21 & 0xFFFFFFFFFFFFLL;
  if (v23)
    return swift_bridgeObjectRelease();
  else
    return sub_18FA27FA0();
}

uint64_t sub_18F9E82A8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x1E0DEE9D8];
    v8 = v5;
    if (v5 <= 0)
    {
      v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0)
          goto LABEL_19;
        v12 = a2 + 8 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8)
          goto LABEL_19;
        sub_18F9E000C(0, (unint64_t *)&qword_1EE17EBD0);
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EB50);
      v9 = (_QWORD *)swift_allocObject();
      v10 = _swift_stdlib_malloc_size(v9);
      v11 = v10 - 32;
      if (v10 < 32)
        v11 = v10 - 25;
      v9[2] = v5;
      v9[3] = (2 * (v11 >> 3)) | 1;
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_18FA288F4();
  __break(1u);
  return result;
}

_QWORD *sub_18F9E8438(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_10;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v2 <= 0)
    {
      v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EB50);
      v3 = (_QWORD *)swift_allocObject();
      v4 = _swift_stdlib_malloc_size(v3);
      v5 = v4 - 32;
      if (v4 < 32)
        v5 = v4 - 25;
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_18FA10124((unint64_t)(v3 + 4), v2, v1);
    v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v2 = sub_18FA288B8();
    swift_bridgeObjectRelease();
    if (!v2)
      return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_18F9E852C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x1E0DEE9D8];
    v8 = 4 * v5;
    if (v5 <= 0)
    {
      v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0)
          goto LABEL_19;
        v12 = a2 + 32 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8)
          goto LABEL_19;
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE180FD0);
      v9 = (_QWORD *)swift_allocObject();
      v10 = _swift_stdlib_malloc_size(v9);
      v11 = v10 - 32;
      if (v10 < 32)
        v11 = v10 - 1;
      v9[2] = v5;
      v9[3] = 2 * (v11 >> 5);
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_18FA288F4();
  __break(1u);
  return result;
}

uint64_t sub_18F9E869C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x1E0DEE9D8];
    v8 = 2 * v5;
    if (v5 <= 0)
    {
      v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0)
          goto LABEL_19;
        v12 = a2 + 16 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8)
          goto LABEL_19;
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1812D0);
      v9 = (_QWORD *)swift_allocObject();
      v10 = _swift_stdlib_malloc_size(v9);
      v11 = v10 - 32;
      if (v10 < 32)
        v11 = v10 - 17;
      v9[2] = v5;
      v9[3] = 2 * (v11 >> 4);
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_18FA288F4();
  __break(1u);
  return result;
}

_QWORD *sub_18F9E880C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17E850);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_18FA0F804((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_18F9DFFC4();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_18F9E88F0(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  id v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  id v13;
  char v14;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v18;

  v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v4 = a1;
    v5 = sub_18FA28774();

    if ((v5 & 1) != 0)
    {
      v6 = sub_18F9E8AC4();
      swift_bridgeObjectRelease();
      return v6;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v7 = sub_18FA286A8();
  v8 = -1 << *(_BYTE *)(v3 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
    goto LABEL_12;
  sub_18F9E000C(0, &qword_1EE180D88);
  v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v9);
  v11 = sub_18FA286B4();

  if ((v11 & 1) == 0)
  {
    v12 = ~v8;
    do
    {
      v9 = (v9 + 1) & v12;
      if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_12;
      v13 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v9);
      v14 = sub_18FA286B4();

    }
    while ((v14 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v16 = *v1;
  v18 = *v1;
  *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_18FA1B808();
    v16 = v18;
  }
  v6 = *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * v9);
  sub_18F9E8C5C(v9);
  *v1 = v18;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_18F9E8AC4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  char v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v1 = v0;
  swift_bridgeObjectRelease();
  v2 = sub_18FA28750();
  v3 = swift_unknownObjectRetain();
  v4 = sub_18FA1AED0(v3, v2);
  v15 = v4;
  swift_retain();
  v5 = sub_18FA286A8();
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    sub_18F9E000C(0, &qword_1EE180D88);
    v8 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v7);
    v9 = sub_18FA286B4();

    if ((v9 & 1) != 0)
    {
LABEL_6:
      swift_release();
      v13 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v7);
      sub_18F9E8C5C(v7);
      if ((sub_18FA286B4() & 1) != 0)
      {
        *v1 = v15;
        return v13;
      }
      __break(1u);
    }
    else
    {
      v10 = ~v6;
      while (1)
      {
        v7 = (v7 + 1) & v10;
        if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          break;
        v11 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v7);
        v12 = sub_18FA286B4();

        if ((v12 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release();
    __break(1u);
  }
  result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_18F9E8C5C(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_18FA2872C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v6);
        v11 = sub_18FA286A8();

        v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(v3 + 48);
            v16 = (_QWORD *)(v15 + 8 * v2);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v2 != v6 || (v2 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t (*sub_18F9E8DFC(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_18F9E8F28(v6, a2, a3);
  return sub_18F9E8E50;
}

uint64_t (*sub_18F9E8E54(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_18F9E8F94(v6, a2, a3);
  return sub_18F9E8E50;
}

uint64_t (*sub_18F9E8EA8(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_18F9E9008(v6, a2, a3);
  return sub_18F9E8E50;
}

void sub_18F9E8EFC(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_18F9E8F28(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v3)();
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x194005370](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_18F9EC550;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_18F9E8F94(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x194005370](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_unknownObjectRetain();
LABEL_5:
    *v3 = v4;
    return sub_18F9E9000;
  }
  __break(1u);
  return result;
}

uint64_t sub_18F9E9000()
{
  return swift_unknownObjectRelease();
}

void (*sub_18F9E9008(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x194005370](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_18F9E9074;
  }
  __break(1u);
  return result;
}

void sub_18F9E9074(id *a1)
{

}

uint64_t sub_18F9E907C(unint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char **v6;
  uint64_t result;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  BOOL v17;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  unsigned int v23;
  unsigned int v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v49;
  uint64_t v50;
  unsigned __int8 v51;
  unint64_t v52;
  id v53;
  id v54;
  id v55;
  void *v56;
  unint64_t v57;
  uint64_t v58;
  void *v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  id v68;
  unint64_t v69;
  id v70;
  uint64_t v71;
  id v72;
  unint64_t v73;
  id v74[2];
  unint64_t v75;
  unint64_t v76;

  v3 = a1;
  v76 = a1;
  if (a1 >> 62)
    goto LABEL_107;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_3:
  v5 = MEMORY[0x1E0DEE9D8];
  v6 = &selRef_smartDialerString;
  v63 = a2;
  if (!v4)
  {
LABEL_11:
    v12 = sub_18FA1C130(v5);
    swift_bridgeObjectRelease();
    v75 = v12;
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      v13 = sub_18FA288B8();
      if (v13)
        goto LABEL_13;
    }
    else
    {
      v13 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v13)
      {
LABEL_13:
        v14 = 0;
        v15 = 0;
        v65 = a2 & 0xFFFFFFFFFFFFFF8;
        v66 = a2 & 0xC000000000000001;
        v64 = a2 + 32;
        v62 = v13;
        while (1)
        {
          if (v66)
          {
            v16 = (id)MEMORY[0x194005370](v14, a2);
            v17 = __OFADD__(v14++, 1);
            if (v17)
              goto LABEL_96;
          }
          else
          {
            if (v14 >= *(_QWORD *)(v65 + 16))
              goto LABEL_97;
            v16 = *(id *)(v64 + 8 * v14);
            v17 = __OFADD__(v14++, 1);
            if (v17)
              goto LABEL_96;
          }
          v18 = v16;
          v19 = swift_bridgeObjectRetain();
          sub_18F9EA8FC(v19, v18);
          v21 = v20;
          v71 = v15;
          swift_bridgeObjectRelease();

          if (!v21)
            goto LABEL_85;
          v22 = v21;
          v3 = (uint64_t)objc_msgSend(v18, v6[278]);
          v23 = objc_msgSend(v22, sel_isFullyQualified);
          v68 = v18;
          if (v23 == objc_msgSend((id)v3, sel_isFullyQualified))
          {
            v25 = objc_msgSend(v22, sel_stringValue);
            sub_18FA2833C();

            v26 = sub_18FA2839C();
            swift_bridgeObjectRelease();
            v27 = objc_msgSend((id)v3, sel_stringValue);
            sub_18FA2833C();

            v28 = sub_18FA2839C();
            swift_bridgeObjectRelease();
            if (v26 < v28)
            {
LABEL_27:
              v29 = v76;
              v30 = v18;
              v31 = swift_bridgeObjectRetain();
              a2 = sub_18F9EB5F4(v31, v30);
              v3 = v32;
              swift_bridgeObjectRelease();
              v72 = v30;

              if ((v3 & 1) != 0)
              {
                if (v29 >> 62)
                {
                  swift_bridgeObjectRetain();
                  v34 = sub_18FA288B8();
                  swift_bridgeObjectRelease();
                }
                else
                {
                  v34 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
                }
                goto LABEL_81;
              }
              v33 = a2 + 1;
              if (__OFADD__(a2, 1))
                goto LABEL_99;
              v34 = a2;
              if (!(v29 >> 62))
              {
                v3 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
                if (v33 != v3)
                  goto LABEL_31;
                goto LABEL_81;
              }
              swift_bridgeObjectRetain();
              v3 = sub_18FA288B8();
              swift_bridgeObjectRelease();
              if (v33 == v3)
              {
LABEL_81:
                if (v29 >> 62)
                {
                  swift_bridgeObjectRetain();
                  v3 = sub_18FA288B8();
                  swift_bridgeObjectRelease();
                }
                else
                {
                  v3 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
                }
                v13 = v62;
                a2 = v63;
                if (v3 < v34)
                  goto LABEL_98;
                sub_18FA10BAC(v34, v3);
                v60 = (void *)sub_18F9E88F0(v22);

LABEL_85:
                v3 = (uint64_t)v18;
                MEMORY[0x194004F98]();
                if (*(_QWORD *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                  sub_18FA28474();
                sub_18FA284BC();
                sub_18FA2845C();
                sub_18FA1A808(v74, objc_msgSend((id)v3, v6[278]));

                goto LABEL_15;
              }
LABEL_31:
              v61 = v14;
              a2 = sub_18F9E000C(0, &qword_1EE180D80);
              v35 = v34 + 5;
              v70 = v22;
              v67 = a2;
              while (2)
              {
                v36 = v35 - 4;
                v73 = v35 - 4;
                if ((v29 & 0xC000000000000001) != 0)
                {
                  v37 = (id)MEMORY[0x194005370]();
                }
                else
                {
                  if ((v36 & 0x8000000000000000) != 0)
                  {
                    __break(1u);
LABEL_94:
                    __break(1u);
LABEL_95:
                    __break(1u);
LABEL_96:
                    __break(1u);
LABEL_97:
                    __break(1u);
LABEL_98:
                    __break(1u);
LABEL_99:
                    __break(1u);
LABEL_100:
                    __break(1u);
LABEL_101:
                    __break(1u);
LABEL_102:
                    __break(1u);
LABEL_103:
                    __break(1u);
LABEL_104:
                    __break(1u);
LABEL_105:
                    __break(1u);
LABEL_106:
                    __break(1u);
LABEL_107:
                    swift_bridgeObjectRetain();
                    v4 = sub_18FA288B8();
                    goto LABEL_3;
                  }
                  if (v36 >= *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10))
                    goto LABEL_94;
                  v37 = *(id *)(v29 + 8 * v35);
                }
                v38 = v37;
                v3 = (uint64_t)objc_msgSend(v37, v6[278], v61);
                v39 = objc_msgSend(v72, v6[278]);
                if ((sub_18FA286B4() & 1) != 0)
                {

                  goto LABEL_46;
                }
                v69 = v34;
                v40 = objc_msgSend((id)v3, sel_stringValue);
                v41 = sub_18FA2833C();
                v43 = v42;

                v44 = objc_msgSend(v39, sel_stringValue);
                v45 = sub_18FA2833C();
                v47 = v46;

                if (v41 == v45 && v43 == v47)
                {

                  swift_bridgeObjectRelease_n();
                  goto LABEL_45;
                }
                v49 = sub_18FA2896C();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((v49 & 1) != 0)
                {

LABEL_45:
                  v39 = v38;
                  v6 = &selRef_smartDialerString;
                  v18 = v68;
                  v34 = v69;
                  a2 = v67;
LABEL_46:

                  v22 = v70;
LABEL_47:
                  v50 = v35 - 4;
                }
                else
                {
                  v51 = objc_msgSend((id)v3, sel_isLikePhoneNumber_, v39);

                  v6 = &selRef_smartDialerString;
                  v18 = v68;
                  if ((v51 & 1) != 0)
                  {
                    v22 = v70;
                    v34 = v69;
                    a2 = v67;
                    goto LABEL_47;
                  }
                  v50 = v35 - 4;
                  v22 = v70;
                  a2 = v67;
                  if (v73 != v69)
                  {
                    if ((v29 & 0xC000000000000001) != 0)
                    {
                      v3 = MEMORY[0x194005370](v69, v29);
                      v54 = (id)MEMORY[0x194005370](v73, v29);
                    }
                    else
                    {
                      if ((v69 & 0x8000000000000000) != 0)
                        goto LABEL_101;
                      v52 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
                      if (v69 >= v52)
                        goto LABEL_102;
                      v53 = *(id *)(v29 + 8 * v69 + 32);
                      if ((v73 & 0x8000000000000000) != 0)
                        goto LABEL_103;
                      if (v73 >= v52)
                        goto LABEL_104;
                      v3 = (uint64_t)v53;
                      v54 = *(id *)(v29 + 8 * v35);
                    }
                    v55 = v54;
                    if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
                      || (v29 & 0x8000000000000000) != 0
                      || (v29 & 0x4000000000000000) != 0)
                    {
                      sub_18FA0C3CC(v29);
                    }
                    v56 = *(void **)((v29 & 0xFFFFFFFFFFFFFF8) + 8 * v69 + 0x20);
                    *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 8 * v69 + 0x20) = v55;

                    sub_18FA2845C();
                    v57 = v76;
                    if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
                      || (v57 & 0x8000000000000000) != 0
                      || (v57 & 0x4000000000000000) != 0)
                    {
                      sub_18FA0C3CC(v57);
                    }
                    if ((v73 & 0x8000000000000000) != 0)
                      goto LABEL_105;
                    v58 = v57 & 0xFFFFFFFFFFFFFF8;
                    if (v73 >= *(_QWORD *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10))
                      goto LABEL_106;
                    v59 = *(void **)(v58 + 8 * v35);
                    *(_QWORD *)(v58 + 8 * v35) = v3;

                    sub_18FA2845C();
                  }
                  v34 = v69 + 1;
                  if (__OFADD__(v69, 1))
                    goto LABEL_100;
                }
                if (__OFADD__(v50, 1))
                  goto LABEL_95;
                v29 = v76;
                if (v76 >> 62)
                {
                  swift_bridgeObjectRetain();
                  v3 = sub_18FA288B8();
                  swift_bridgeObjectRelease();
                }
                else
                {
                  v3 = *(_QWORD *)((v76 & 0xFFFFFFFFFFFFF8) + 0x10);
                }
                ++v35;
                if (v50 + 1 == v3)
                {
                  v14 = v61;
                  goto LABEL_81;
                }
                continue;
              }
            }
          }
          else
          {
            v24 = objc_msgSend(v22, sel_isFullyQualified);

            if (!v24)
              goto LABEL_27;
          }

LABEL_15:
          v15 = v71;
          if (v14 == v13)
          {
            swift_bridgeObjectRelease();
            v3 = v76;
LABEL_110:
            swift_bridgeObjectRelease();
            return v3;
          }
        }
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_110;
  }
  v75 = MEMORY[0x1E0DEE9D8];
  result = sub_18FA28858();
  if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = 0;
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
        v9 = (id)MEMORY[0x194005370](v8, v3);
      else
        v9 = *(id *)(v3 + 8 * v8 + 32);
      v10 = v9;
      ++v8;
      v11 = objc_msgSend(v9, sel_value, v61);

      sub_18FA28834();
      sub_18FA28864();
      sub_18FA28870();
      sub_18FA28840();
    }
    while (v4 != v8);
    v5 = v75;
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_18F9E992C(unint64_t a1, unint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5, void (*a6)(id *, id))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  char v32;
  uint64_t v33;
  id v34;
  char v35;
  id v36;
  uint64_t v37;
  unint64_t *v39;
  id v40;
  uint64_t v41;
  unint64_t v42;

  v9 = a1;
  v42 = a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_18FA288B8();
  }
  else
  {
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v11 = MEMORY[0x1E0DEE9D8];
  v39 = a4;
  if (v10)
  {
    v41 = MEMORY[0x1E0DEE9D8];
    result = sub_18FA28858();
    if (v10 < 0)
    {
      __break(1u);
LABEL_40:
      __break(1u);
      return result;
    }
    v13 = 0;
    do
    {
      if ((v9 & 0xC000000000000001) != 0)
        v14 = (id)MEMORY[0x194005370](v13, v9);
      else
        v14 = *(id *)(v9 + 8 * v13 + 32);
      v15 = v14;
      ++v13;
      v16 = objc_msgSend(v14, sel_value);

      sub_18FA28834();
      sub_18FA28864();
      sub_18FA28870();
      sub_18FA28840();
    }
    while (v10 != v13);
    v11 = v41;
  }
  v17 = a3(v11);
  swift_bridgeObjectRelease();
  v41 = v17;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_18FA288B8();
    v18 = result;
    if (result)
    {
LABEL_13:
      if (v18 >= 1)
      {
        v19 = a2 & 0xC000000000000001;
        sub_18F9E000C(0, v39);
        v20 = 0;
        v37 = v18;
        while (1)
        {
          if (v19)
            v21 = (id)MEMORY[0x194005370](v20, a2);
          else
            v21 = *(id *)(a2 + 32 + 8 * v20);
          v22 = v21;
          v23 = v41;
          swift_bridgeObjectRetain();
          v24 = objc_msgSend(v22, sel_value);
          v25 = v24;
          if ((v23 & 0xC000000000000001) != 0)
          {
            v26 = v24;
            v27 = sub_18FA28774();
            swift_bridgeObjectRelease();

            if ((v27 & 1) == 0)
              goto LABEL_31;

          }
          else
          {
            if (!*(_QWORD *)(v23 + 16))
              goto LABEL_30;
            v28 = sub_18FA286A8();
            v29 = -1 << *(_BYTE *)(v23 + 32);
            v30 = v28 & ~v29;
            if (((*(_QWORD *)(v23 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
              goto LABEL_30;
            v31 = *(id *)(*(_QWORD *)(v23 + 48) + 8 * v30);
            v32 = sub_18FA286B4();

            if ((v32 & 1) == 0)
            {
              v33 = ~v29;
              while (1)
              {
                v30 = (v30 + 1) & v33;
                if (((*(_QWORD *)(v23 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
                  break;
                v34 = *(id *)(*(_QWORD *)(v23 + 48) + 8 * v30);
                v35 = sub_18FA286B4();

                if ((v35 & 1) != 0)
                  goto LABEL_29;
              }
LABEL_30:

              swift_bridgeObjectRelease();
              v19 = a2 & 0xC000000000000001;
              v18 = v37;
LABEL_31:
              v36 = v22;
              MEMORY[0x194004F98]();
              if (*(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                sub_18FA28474();
              sub_18FA284BC();
              sub_18FA2845C();
              a6(&v40, objc_msgSend(v36, sel_value));

              goto LABEL_16;
            }
LABEL_29:

            swift_bridgeObjectRelease();
            v19 = a2 & 0xC000000000000001;
            v18 = v37;
          }
LABEL_16:
          if (++v20 == v18)
          {
            swift_bridgeObjectRelease();
            v9 = v42;
            goto LABEL_38;
          }
        }
      }
      goto LABEL_40;
    }
  }
  else
  {
    v18 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v18)
      goto LABEL_13;
  }
  swift_bridgeObjectRelease();
LABEL_38:
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_18F9E9D40(uint64_t a1, _QWORD *a2, uint64_t a3, unint64_t a4)
{
  int64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _OWORD v23[8];
  uint64_t v24;

  sub_18F9EC4C0((uint64_t)a2, (uint64_t)v23, &qword_1EE180DA0);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v21 = v23[1];
    v22 = v23[0];
    v19 = v23[3];
    v20 = v23[2];
    v17 = v23[5];
    v18 = v23[4];
    v16 = v23[6];
    v24 = MEMORY[0x1E0DEE9D8];
    sub_18F9DEC9C(0, v8, 0);
    v9 = v24;
    v10 = (uint64_t *)(a1 + 32);
    do
    {
      v11 = *v10;
      swift_bridgeObjectRetain();
      sub_18F9EC46C(a2, sub_18F9EA5F0);
      sub_18F9EA704(a3, a4);
      v24 = v9;
      v13 = *(_QWORD *)(v9 + 16);
      v12 = *(_QWORD *)(v9 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_18F9DEC9C(v12 > 1, v13 + 1, 1);
        v9 = v24;
      }
      *(_QWORD *)(v9 + 16) = v13 + 1;
      v14 = v9 + 136 * v13;
      *(_QWORD *)(v14 + 32) = v11;
      *(_OWORD *)(v14 + 40) = v22;
      *(_OWORD *)(v14 + 56) = v21;
      *(_OWORD *)(v14 + 72) = v20;
      *(_OWORD *)(v14 + 88) = v19;
      *(_OWORD *)(v14 + 104) = v18;
      *(_OWORD *)(v14 + 120) = v17;
      *(_OWORD *)(v14 + 136) = v16;
      *(_QWORD *)(v14 + 152) = a3;
      *(_QWORD *)(v14 + 160) = a4;
      ++v10;
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_18F9E9ECC(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;

  if (a1 >> 62)
    goto LABEL_14;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x1E0DEE9D8];
    if (!v2)
      break;
    v8 = MEMORY[0x1E0DEE9D8];
    result = sub_18FA28858();
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = (id)MEMORY[0x194005370](v4, a1);
      else
        v5 = *(id *)(a1 + 8 * v4 + 32);
      v6 = v5;
      ++v4;
      v7 = sub_18F9FFB58(v5);

      sub_18FA28834();
      sub_18FA28864();
      sub_18FA28870();
      sub_18FA28840();
      if (v2 == v4)
        return v8;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    v2 = sub_18FA288B8();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_18F9EA024@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_18F9EA040()
{
  return swift_deallocObject();
}

uint64_t sub_18F9EA050(void *a1)
{
  return sub_18F9E1AA8(a1);
}

uint64_t sub_18F9EA058(uint64_t a1)
{
  uint64_t v1;

  return sub_18F9E1E80(a1, *(void (**)(uint64_t))(v1 + 24));
}

BOOL sub_18F9EA064(uint64_t a1, uint64_t *a2)
{
  return sub_18F9E1F60(a1, a2);
}

uint64_t sub_18F9EA080(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_18F9E20A4(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_18F9EA098()
{
  char v0;

  sub_18F9E2144();
  return v0 & 1;
}

uint64_t sub_18F9EA0C8(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  char v10;

  v1 = objc_msgSend(a1, sel_downtimeWhitelist);
  if (!v1)
  {
    sub_18FA2833C();
    goto LABEL_9;
  }
  v2 = v1;
  v3 = sub_18FA2833C();
  v5 = v4;

  v6 = sub_18FA2833C();
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    v10 = 1;
    return v10 & 1;
  }
  if (v3 == v6 && v5 == v7)
  {
    swift_bridgeObjectRelease_n();
    v10 = 0;
  }
  else
  {
    v9 = sub_18FA2896C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10 = v9 ^ 1;
  }
  return v10 & 1;
}

uint64_t sub_18F9EA1A4(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v30;
  void *v31;
  uint64_t v32;

  v2 = a1;
  v32 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
LABEL_36:
    swift_bridgeObjectRetain();
    v3 = sub_18FA288B8();
    if (v3)
      goto LABEL_3;
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      v4 = 0;
      v25 = v2 + 32;
      v27 = v2 & 0xC000000000000001;
      v26 = v2;
      while (1)
      {
        if (v27)
          v5 = (id)MEMORY[0x194005370](v4, v2);
        else
          v5 = *(id *)(v25 + 8 * v4);
        v30 = v5;
        v6 = __OFADD__(v4, 1);
        v7 = v4 + 1;
        if (v6)
        {
LABEL_35:
          __break(1u);
          goto LABEL_36;
        }
        v28 = v7;
        if (a2 >> 62)
        {
          v10 = v5;
          swift_bridgeObjectRetain();
          v8 = sub_18FA288B8();
          if (v8)
          {
LABEL_14:
            v2 = 4;
            while (1)
            {
              if ((a2 & 0xC000000000000001) != 0)
                v11 = (id)MEMORY[0x194005370](v2 - 4, a2);
              else
                v11 = *(id *)(a2 + 8 * v2);
              v12 = v11;
              v13 = v2 - 3;
              if (__OFADD__(v2 - 4, 1))
              {
                __break(1u);
                goto LABEL_35;
              }
              v14 = objc_msgSend(v11, sel_identifier);
              v15 = sub_18FA2833C();
              v17 = v16;

              v18 = objc_msgSend(v30, sel_identifier);
              v19 = sub_18FA2833C();
              v21 = v20;

              if (v15 == v19 && v17 == v21)
              {

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_28;
              }
              v23 = sub_18FA2896C();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v23 & 1) != 0)
                break;

              ++v2;
              if (v13 == v8)
                goto LABEL_4;
            }

LABEL_28:
            swift_bridgeObjectRelease();
            objc_msgSend(v12, sel_mutableCopy);

            sub_18FA28720();
            swift_unknownObjectRelease();
            sub_18F9E000C(0, (unint64_t *)&qword_1EE17EBD0);
            if ((swift_dynamicCast() & 1) != 0)
            {
              objc_msgSend(v31, sel_setSnapshot_, v30);

              MEMORY[0x194004F98]();
              if (*(_QWORD *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                sub_18FA28474();
              sub_18FA284BC();
              sub_18FA2845C();
            }
            else
            {

            }
            goto LABEL_5;
          }
        }
        else
        {
          v8 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v9 = v5;
          swift_bridgeObjectRetain();
          if (v8)
            goto LABEL_14;
        }
LABEL_4:

        swift_bridgeObjectRelease();
LABEL_5:
        v2 = v26;
        v4 = v28;
        if (v28 == v3)
        {
          swift_bridgeObjectRelease();
          return v32;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_18F9EA534(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v16 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 64);
  v12 = *(_OWORD *)(a1 + 88);
  v13 = *(_OWORD *)(a1 + 72);
  v7 = *(_QWORD *)(a1 + 104);
  v8 = *(_QWORD *)(a1 + 112);
  v10 = *(_QWORD *)(a1 + 120);
  v9 = *(_QWORD *)(a1 + 128);
  swift_bridgeObjectRetain();
  sub_18F9EA5F0(v16, v15, v14, v2, v3, v4, v5, v6, v13, *((uint64_t *)&v13 + 1), v12, *((unint64_t *)&v12 + 1), v7, v8);
  sub_18F9EA704(v10, v9);
  return a1;
}

void sub_18F9EA5F0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, unint64_t a14)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    sub_18F9EA6AC(a3, a4);
    sub_18F9EA6AC(a5, a6);
    sub_18F9EA6AC(a7, a8);
    swift_bridgeObjectRetain();
    sub_18F9EA6AC(a11, a12);
    sub_18F9EA6AC(a13, a14);
  }
}

uint64_t sub_18F9EA6AC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_18F9EA6C0(a1, a2);
  return a1;
}

uint64_t sub_18F9EA6C0(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_18F9EA704(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 11)
    return sub_18F9EA6AC(a1, a2);
  return a1;
}

uint64_t sub_18F9EA718(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v16 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 64);
  v12 = *(_OWORD *)(a1 + 88);
  v13 = *(_OWORD *)(a1 + 72);
  v7 = *(_QWORD *)(a1 + 104);
  v8 = *(_QWORD *)(a1 + 112);
  v10 = *(_QWORD *)(a1 + 120);
  v9 = *(_QWORD *)(a1 + 128);
  swift_bridgeObjectRelease();
  sub_18F9EA7D4(v16, v15, v14, v2, v3, v4, v5, v6, v13, *((uint64_t *)&v13 + 1), v12, *((unint64_t *)&v12 + 1), v7, v8);
  sub_18F9EA8E8(v10, v9);
  return a1;
}

void sub_18F9EA7D4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, unint64_t a14)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    sub_18F9EA890(a3, a4);
    sub_18F9EA890(a5, a6);
    sub_18F9EA890(a7, a8);
    swift_bridgeObjectRelease();
    sub_18F9EA890(a11, a12);
    sub_18F9EA890(a13, a14);
  }
}

uint64_t sub_18F9EA890(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_18F9EA8A4(a1, a2);
  return a1;
}

uint64_t sub_18F9EA8A4(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_18F9EA8E8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 11)
    return sub_18F9EA890(a1, a2);
  return a1;
}

void sub_18F9EA8FC(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  void *v38;

  v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_18FA28744();
    sub_18F9E000C(0, &qword_1EE180D88);
    sub_18F9EC414();
    sub_18FA285A0();
    v2 = v33;
    v30 = v34;
    v3 = v35;
    v4 = v36;
    v5 = v37;
  }
  else
  {
    v6 = -1 << *(_BYTE *)(a1 + 32);
    v30 = a1 + 56;
    v7 = ~v6;
    v8 = -v6;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v5 = v9 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v3 = v7;
    v4 = 0;
  }
  v28 = v3;
  v29 = (unint64_t)(v3 + 64) >> 6;
  v31 = v2;
  if ((v2 & 0x8000000000000000) == 0)
    goto LABEL_11;
LABEL_8:
  if (!sub_18FA28768())
    goto LABEL_40;
  sub_18F9E000C(0, &qword_1EE180D88);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  v10 = v38;
  swift_unknownObjectRelease();
  v11 = v4;
  v12 = v5;
  if (!v38)
    goto LABEL_40;
  while (1)
  {
    v17 = objc_msgSend(a2, sel_value, v28);
    sub_18F9E000C(0, &qword_1EE180D80);
    if ((sub_18FA286B4() & 1) != 0)
      goto LABEL_39;
    v18 = objc_msgSend(v10, sel_stringValue);
    v19 = sub_18FA2833C();
    v21 = v20;

    v22 = objc_msgSend(v17, sel_stringValue);
    v23 = sub_18FA2833C();
    v25 = v24;

    if (v19 == v23 && v21 == v25)
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_40;
    }
    v26 = sub_18FA2896C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v26 & 1) != 0)
    {
LABEL_39:

      goto LABEL_40;
    }
    v27 = objc_msgSend(v10, sel_isLikePhoneNumber_, v17);

    if (v27)
      goto LABEL_40;

    v4 = v11;
    v5 = v12;
    v2 = v31;
    if (v31 < 0)
      goto LABEL_8;
LABEL_11:
    if (!v5)
      break;
    v12 = (v5 - 1) & v5;
    v13 = __clz(__rbit64(v5)) | (v4 << 6);
    v11 = v4;
LABEL_29:
    v10 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v13);
    if (!v10)
      goto LABEL_40;
  }
  v14 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    return;
  }
  if (v14 >= v29)
    goto LABEL_40;
  v15 = *(_QWORD *)(v30 + 8 * v14);
  v11 = v4 + 1;
  if (v15)
    goto LABEL_28;
  v11 = v4 + 2;
  if (v4 + 2 >= v29)
    goto LABEL_40;
  v15 = *(_QWORD *)(v30 + 8 * v11);
  if (v15)
    goto LABEL_28;
  v11 = v4 + 3;
  if (v4 + 3 >= v29)
    goto LABEL_40;
  v15 = *(_QWORD *)(v30 + 8 * v11);
  if (v15)
    goto LABEL_28;
  v11 = v4 + 4;
  if (v4 + 4 >= v29)
    goto LABEL_40;
  v15 = *(_QWORD *)(v30 + 8 * v11);
  if (v15)
    goto LABEL_28;
  v11 = v4 + 5;
  if (v4 + 5 >= v29)
    goto LABEL_40;
  v15 = *(_QWORD *)(v30 + 8 * v11);
  if (v15)
  {
LABEL_28:
    v12 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v11 << 6);
    goto LABEL_29;
  }
  v16 = v4 + 6;
  while (v29 != v16)
  {
    v15 = *(_QWORD *)(v30 + 8 * v16++);
    if (v15)
    {
      v11 = v16 - 1;
      goto LABEL_28;
    }
  }
LABEL_40:
  sub_18F9DFFC4();
}

uint64_t sub_18F9EAD04(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  unint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v19[2];

  v19[1] = *(id *)MEMORY[0x1E0C80C00];
  v3 = objc_msgSend(a1, sel_identifier);
  if (!v3)
  {
    sub_18FA2833C();
    v3 = (id)sub_18FA28330();
    swift_bridgeObjectRelease();
  }
  v4 = objc_msgSend((id)objc_opt_self(), sel_predicateForContainerOfContactWithIdentifier_, v3);

  v19[0] = 0;
  v5 = objc_msgSend(a2, sel_containersMatchingPredicate_error_, v4, v19);
  v6 = v19[0];
  if (!v5)
  {
    v16 = v19[0];
    v17 = (void *)sub_18FA28030();

    swift_willThrow();
    return 0;
  }
  v7 = v5;
  sub_18F9E000C(0, &qword_1EE17EAD0);
  v8 = sub_18FA28444();
  v9 = v6;

  if (!(v8 >> 62))
  {
    v10 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v10)
      goto LABEL_6;
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  v10 = sub_18FA288B8();
  swift_bridgeObjectRelease();
  if (!v10)
  {
LABEL_14:

    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_6:
  v11 = v10 - 1;
  if (__OFSUB__(v10, 1))
  {
    __break(1u);
    goto LABEL_18;
  }
  if ((v8 & 0xC000000000000001) != 0)
  {
LABEL_18:
    v12 = (id)MEMORY[0x194005370](v11, v8);
    goto LABEL_11;
  }
  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_20:
    __break(1u);
  }
  if (v11 >= *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_20;
  v12 = *(id *)(v8 + 8 * v11 + 32);
LABEL_11:
  v13 = v12;
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v13, sel_identifier);

  v15 = sub_18FA2833C();
  return v15;
}

void sub_18F9EAF3C(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = a1;
  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_18FA288B8();
    swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE180D98);
      v3 = sub_18FA287C8();
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = sub_18FA288B8();
      swift_bridgeObjectRelease();
      if (!v4)
        return;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x1E0DEE9E8];
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return;
LABEL_9:
  v6 = v3 + 56;
  v42 = v4;
  if ((v1 & 0xC000000000000001) != 0)
  {
    v7 = 0;
    v40 = v1;
    while (1)
    {
      while (1)
      {
        v8 = MEMORY[0x194005370](v7, v1);
        v9 = __OFADD__(v7++, 1);
        if (v9)
        {
          __break(1u);
          goto LABEL_36;
        }
        v10 = v8;
        v11 = sub_18FA286A8();
        v12 = -1 << *(_BYTE *)(v3 + 32);
        v13 = v11 & ~v12;
        v14 = v13 >> 6;
        v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
        v16 = 1 << v13;
        if (((1 << v13) & v15) != 0)
          break;
LABEL_20:
        *(_QWORD *)(v6 + 8 * v14) = v16 | v15;
        *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v13) = v10;
        v22 = *(_QWORD *)(v3 + 16);
        v9 = __OFADD__(v22, 1);
        v23 = v22 + 1;
        if (v9)
          goto LABEL_37;
        *(_QWORD *)(v3 + 16) = v23;
        if (v7 == v4)
          return;
      }
      sub_18F9E000C(0, (unint64_t *)&unk_1EE181310);
      v17 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
      v18 = sub_18FA286B4();

      if ((v18 & 1) == 0)
      {
        v19 = ~v12;
        while (1)
        {
          v13 = (v13 + 1) & v19;
          v14 = v13 >> 6;
          v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
          v16 = 1 << v13;
          if ((v15 & (1 << v13)) == 0)
            break;
          v20 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
          v21 = sub_18FA286B4();

          if ((v21 & 1) != 0)
            goto LABEL_11;
        }
        v1 = v40;
        v4 = v42;
        goto LABEL_20;
      }
LABEL_11:
      swift_unknownObjectRelease();
      v1 = v40;
      v4 = v42;
      if (v7 == v42)
        return;
    }
  }
  v24 = 0;
  v39 = v1 + 32;
  v41 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v24 != v41)
  {
    v25 = *(id *)(v39 + 8 * v24);
    v26 = sub_18FA286A8();
    v27 = -1 << *(_BYTE *)(v3 + 32);
    v28 = v26 & ~v27;
    v29 = v28 >> 6;
    v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
    v31 = 1 << v28;
    if (((1 << v28) & v30) != 0)
    {
      sub_18F9E000C(0, (unint64_t *)&unk_1EE181310);
      v32 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
      v33 = sub_18FA286B4();

      if ((v33 & 1) != 0)
      {
LABEL_24:

        goto LABEL_25;
      }
      v34 = ~v27;
      while (1)
      {
        v28 = (v28 + 1) & v34;
        v29 = v28 >> 6;
        v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
        v31 = 1 << v28;
        if ((v30 & (1 << v28)) == 0)
          break;
        v35 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
        v36 = sub_18FA286B4();

        if ((v36 & 1) != 0)
          goto LABEL_24;
      }
    }
    *(_QWORD *)(v6 + 8 * v29) = v31 | v30;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v28) = v25;
    v37 = *(_QWORD *)(v3 + 16);
    v9 = __OFADD__(v37, 1);
    v38 = v37 + 1;
    if (v9)
      goto LABEL_38;
    *(_QWORD *)(v3 + 16) = v38;
LABEL_25:
    if (++v24 == v42)
      return;
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

void sub_18F9EB298(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = a1;
  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_18FA288B8();
    swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE181300);
      v3 = sub_18FA287C8();
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = sub_18FA288B8();
      swift_bridgeObjectRelease();
      if (!v4)
        return;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x1E0DEE9E8];
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return;
LABEL_9:
  v6 = v3 + 56;
  v42 = v4;
  if ((v1 & 0xC000000000000001) != 0)
  {
    v7 = 0;
    v40 = v1;
    while (1)
    {
      while (1)
      {
        v8 = MEMORY[0x194005370](v7, v1);
        v9 = __OFADD__(v7++, 1);
        if (v9)
        {
          __break(1u);
          goto LABEL_36;
        }
        v10 = v8;
        v11 = sub_18FA286A8();
        v12 = -1 << *(_BYTE *)(v3 + 32);
        v13 = v11 & ~v12;
        v14 = v13 >> 6;
        v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
        v16 = 1 << v13;
        if (((1 << v13) & v15) != 0)
          break;
LABEL_20:
        *(_QWORD *)(v6 + 8 * v14) = v16 | v15;
        *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v13) = v10;
        v22 = *(_QWORD *)(v3 + 16);
        v9 = __OFADD__(v22, 1);
        v23 = v22 + 1;
        if (v9)
          goto LABEL_37;
        *(_QWORD *)(v3 + 16) = v23;
        if (v7 == v4)
          return;
      }
      sub_18F9E000C(0, &qword_1EE180D88);
      v17 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
      v18 = sub_18FA286B4();

      if ((v18 & 1) == 0)
      {
        v19 = ~v12;
        while (1)
        {
          v13 = (v13 + 1) & v19;
          v14 = v13 >> 6;
          v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
          v16 = 1 << v13;
          if ((v15 & (1 << v13)) == 0)
            break;
          v20 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
          v21 = sub_18FA286B4();

          if ((v21 & 1) != 0)
            goto LABEL_11;
        }
        v1 = v40;
        v4 = v42;
        goto LABEL_20;
      }
LABEL_11:
      swift_unknownObjectRelease();
      v1 = v40;
      v4 = v42;
      if (v7 == v42)
        return;
    }
  }
  v24 = 0;
  v39 = v1 + 32;
  v41 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v24 != v41)
  {
    v25 = *(id *)(v39 + 8 * v24);
    v26 = sub_18FA286A8();
    v27 = -1 << *(_BYTE *)(v3 + 32);
    v28 = v26 & ~v27;
    v29 = v28 >> 6;
    v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
    v31 = 1 << v28;
    if (((1 << v28) & v30) != 0)
    {
      sub_18F9E000C(0, &qword_1EE180D88);
      v32 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
      v33 = sub_18FA286B4();

      if ((v33 & 1) != 0)
      {
LABEL_24:

        goto LABEL_25;
      }
      v34 = ~v27;
      while (1)
      {
        v28 = (v28 + 1) & v34;
        v29 = v28 >> 6;
        v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
        v31 = 1 << v28;
        if ((v30 & (1 << v28)) == 0)
          break;
        v35 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
        v36 = sub_18FA286B4();

        if ((v36 & 1) != 0)
          goto LABEL_24;
      }
    }
    *(_QWORD *)(v6 + 8 * v29) = v31 | v30;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v28) = v25;
    v37 = *(_QWORD *)(v3 + 16);
    v9 = __OFADD__(v37, 1);
    v38 = v37 + 1;
    if (v9)
      goto LABEL_38;
    *(_QWORD *)(v3 + 16) = v38;
LABEL_25:
    if (++v24 == v42)
      return;
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

uint64_t sub_18F9EB5F4(unint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v19;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;

  v2 = a1;
  if (a1 >> 62)
  {
LABEL_23:
    swift_bridgeObjectRetain();
    v3 = sub_18FA288B8();
    swift_bridgeObjectRelease();
    if (v3)
      goto LABEL_3;
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
    {
LABEL_3:
      v22 = v2 & 0xC000000000000001;
      v21 = v2;
      sub_18F9E000C(0, &qword_1EE180D80);
      v4 = 0;
      while (1)
      {
        if (v22)
          v5 = (id)MEMORY[0x194005370](v4, v2);
        else
          v5 = *(id *)(v2 + 8 * v4 + 32);
        v6 = v5;
        v7 = objc_msgSend(v5, sel_value);
        v8 = objc_msgSend(a2, sel_value);
        if ((sub_18FA286B4() & 1) != 0)
        {

          return v4;
        }
        v9 = v3;
        v24 = v4;
        v10 = objc_msgSend(v7, sel_stringValue);
        v11 = sub_18FA2833C();
        v13 = v12;

        v14 = objc_msgSend(v8, sel_stringValue);
        v15 = sub_18FA2833C();
        v17 = v16;

        if (v11 == v15 && v13 == v17)
          break;
        v2 = sub_18FA2896C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v2 & 1) != 0)
        {

          return v24;
        }
        v19 = objc_msgSend(v7, sel_isLikePhoneNumber_, v8);

        v4 = v24;
        if ((v19 & 1) != 0)
          return v4;
        if (__OFADD__(v24, 1))
        {
          __break(1u);
          goto LABEL_23;
        }
        v4 = v24 + 1;
        v3 = v9;
        v2 = v21;
        if (v24 + 1 == v9)
          return 0;
      }

      swift_bridgeObjectRelease_n();
      return v24;
    }
  }
  return 0;
}

void sub_18F9EB868(uint64_t *a1, void *a2)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t i;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t j;
  id v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  int v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t k;
  id v68;
  void *v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;

  v3 = a1[1];
  v74 = *a1;
  v4 = a1[2];
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v10 = a2;
    v5 = sub_18FA288B8();
    if (!v5)
      goto LABEL_10;
  }
  else
  {
    v5 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    v6 = a2;
    if (!v5)
      goto LABEL_10;
  }
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x194005370](i, v3);
      else
        v8 = *(id *)(v3 + 8 * i + 32);
      v9 = v8;
      objc_msgSend(a2, sel_updateContact_, v8);

    }
LABEL_10:

    swift_bridgeObjectRelease_n();
    if (v4 >> 62)
    {
      v17 = a2;
      swift_bridgeObjectRetain_n();
      v18 = v17;
      v11 = sub_18FA288B8();
      if (v11)
        goto LABEL_12;
    }
    else
    {
      v11 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      v12 = a2;
      swift_bridgeObjectRetain_n();
      v13 = v12;
      if (v11)
      {
LABEL_12:
        if (v11 < 1)
          goto LABEL_119;
        for (j = 0; j != v11; ++j)
        {
          if ((v4 & 0xC000000000000001) != 0)
            v15 = (id)MEMORY[0x194005370](j, v4);
          else
            v15 = *(id *)(v4 + 8 * j + 32);
          v16 = v15;
          objc_msgSend(a2, sel_deleteContact_, v15);

        }
      }
    }

    v70 = a2;
    swift_bridgeObjectRelease_n();
    v19 = v74;
    v20 = *(_QWORD *)(v74 + 16);
    if (v20)
    {
      v21 = v74 + 32;
      v72 = *MEMORY[0x1E0D13850];
      swift_bridgeObjectRetain();
      v22 = 0;
      v23 = MEMORY[0x1E0DEE9D8];
      v71 = v20;
      while (v22 < *(_QWORD *)(v19 + 16))
      {
        v24 = *(_QWORD *)(v21 + 8 * v22);
        if (v24 >> 62)
        {
          swift_bridgeObjectRetain_n();
          v25 = sub_18FA288B8();
          if (!v25)
          {
LABEL_50:
            swift_bridgeObjectRelease();
            goto LABEL_51;
          }
        }
        else
        {
          v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n();
          if (!v25)
            goto LABEL_50;
        }
        if ((v24 & 0xC000000000000001) != 0)
        {
          v26 = (id)MEMORY[0x194005370](0, v24);
        }
        else
        {
          if (!*(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_110;
          v26 = *(id *)(v24 + 32);
        }
        v27 = v26;
        swift_bridgeObjectRelease();
        v28 = objc_msgSend(v27, sel_linkIdentifier);

        if (!v28)
          goto LABEL_51;
        v29 = sub_18FA2833C();
        v31 = v30;

        if (!v72)
          goto LABEL_120;
        v32 = (void *)sub_18FA28330();
        v33 = (*(uint64_t (**)(uint64_t, void *))(v72 + 16))(v72, v32);

        if (!v33)
        {
          swift_bridgeObjectRelease();
          goto LABEL_47;
        }
        v73 = v23;
        swift_bridgeObjectRetain();
        v34 = 4;
        v75 = v25;
        while (1)
        {
          if ((v24 & 0xC000000000000001) != 0)
            v35 = (id)MEMORY[0x194005370](v34 - 4, v24);
          else
            v35 = *(id *)(v24 + 8 * v34);
          v36 = v35;
          v37 = v34 - 3;
          if (__OFADD__(v34 - 4, 1))
          {
            __break(1u);
            goto LABEL_109;
          }
          v38 = objc_msgSend(v35, sel_linkIdentifier);
          if (!v38)
            break;
          v39 = v38;
          v40 = sub_18FA2833C();
          v42 = v41;

          if (v40 == v29 && v42 == v31)
          {

            swift_bridgeObjectRelease();
          }
          else
          {
            v44 = sub_18FA2896C();

            swift_bridgeObjectRelease();
            if ((v44 & 1) == 0)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_46;
            }
          }
          ++v34;
          if (v37 == v75)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            v23 = v73;
            v19 = v74;
            v21 = v74 + 32;
            v20 = v71;
            goto LABEL_56;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

LABEL_46:
        v23 = v73;
LABEL_47:
        v19 = v74;
        v21 = v74 + 32;
        v20 = v71;
LABEL_51:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_18F9DEC64(0, *(_QWORD *)(v23 + 16) + 1, 1);
        v46 = *(_QWORD *)(v23 + 16);
        v45 = *(_QWORD *)(v23 + 24);
        if (v46 >= v45 >> 1)
          sub_18F9DEC64(v45 > 1, v46 + 1, 1);
        *(_QWORD *)(v23 + 16) = v46 + 1;
        *(_QWORD *)(v23 + 8 * v46 + 32) = v24;
LABEL_56:
        if (++v22 == v20)
        {
          swift_bridgeObjectRelease();
          goto LABEL_60;
        }
      }
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
      goto LABEL_118;
    }
    v23 = MEMORY[0x1E0DEE9D8];
LABEL_60:
    v76 = *(_QWORD *)(v23 + 16);
    if (!v76)
    {
      swift_release();
      return;
    }
    v77 = v70;
    swift_retain();
    v47 = 0;
    while (1)
    {
      v48 = *(_QWORD *)(v23 + 32 + 8 * v47);
      v49 = v48 >> 62;
      if (v48 >> 62)
      {
        swift_bridgeObjectRetain_n();
        v50 = sub_18FA288B8();
        if (!v50)
        {
LABEL_101:
          swift_bridgeObjectRelease_n();
          goto LABEL_63;
        }
      }
      else
      {
        v50 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        if (!v50)
          goto LABEL_101;
      }
      if ((v48 & 0xC000000000000001) != 0)
      {
        v51 = (id)MEMORY[0x194005370](0, v48);
      }
      else
      {
        if (!*(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_111;
        v51 = *(id *)(v48 + 32);
      }
      v52 = v51;
      swift_bridgeObjectRelease();
      if (v50 < 1)
        goto LABEL_112;
      if (v49)
      {
        swift_bridgeObjectRetain();
        if (sub_18FA288B8() < 1)
          goto LABEL_116;
        swift_bridgeObjectRetain();
        v53 = sub_18FA288B8();
        swift_bridgeObjectRelease();
      }
      else
      {
        v53 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v53)
          goto LABEL_115;
        swift_bridgeObjectRetain();
      }
      if (v53 < v50)
        goto LABEL_113;
      if ((v48 & 0xC000000000000001) != 0 && v50 != 1)
      {
        sub_18F9E000C(0, (unint64_t *)&qword_1EE17EBD0);
        v54 = 1;
        do
        {
          v55 = v54 + 1;
          sub_18FA287F8();
          v54 = v55;
        }
        while (v50 != v55);
      }
      if (v49)
      {
        swift_bridgeObjectRetain();
        v56 = sub_18FA288C4();
        v57 = v60;
        v59 = v61;
        v58 = v62;
        swift_bridgeObjectRelease_n();
        if ((v58 & 1) == 0)
          goto LABEL_84;
      }
      else
      {
        v56 = v48 & 0xFFFFFFFFFFFFFF8;
        v57 = (v48 & 0xFFFFFFFFFFFFFF8) + 32;
        v58 = (2 * v50) | 1;
        v59 = 1;
        if ((v58 & 1) == 0)
          goto LABEL_84;
      }
      sub_18FA28984();
      swift_unknownObjectRetain_n();
      v64 = swift_dynamicCastClass();
      if (!v64)
      {
        swift_unknownObjectRelease();
        v64 = MEMORY[0x1E0DEE9D8];
      }
      v65 = *(_QWORD *)(v64 + 16);
      swift_release();
      if (__OFSUB__(v58 >> 1, v59))
        goto LABEL_117;
      if (v65 != (v58 >> 1) - v59)
      {
        swift_unknownObjectRelease();
LABEL_84:
        v63 = sub_18F9E82A8(v56, v57, v59, v58);
        goto LABEL_91;
      }
      v63 = swift_dynamicCastClass();
      if (!v63)
      {
        swift_unknownObjectRelease();
        v63 = MEMORY[0x1E0DEE9D8];
      }
LABEL_91:
      swift_unknownObjectRelease();
      if (v63 < 0 || (v63 & 0x4000000000000000) != 0)
      {
        swift_retain();
        v66 = sub_18FA288B8();
        if (v66)
        {
LABEL_94:
          if (v66 < 1)
            goto LABEL_114;
          for (k = 0; k != v66; ++k)
          {
            if ((v63 & 0xC000000000000001) != 0)
              v68 = (id)MEMORY[0x194005370](k, v63);
            else
              v68 = *(id *)(v63 + 8 * k + 32);
            v69 = v68;
            objc_msgSend(v77, sel_linkContact_toContact_, v52, v68);

          }
        }
      }
      else
      {
        v66 = *(_QWORD *)(v63 + 16);
        swift_retain();
        if (v66)
          goto LABEL_94;
      }

      swift_bridgeObjectRelease();
      swift_release_n();
LABEL_63:
      if (++v47 == v76)
      {
        swift_release_n();

        return;
      }
    }
  }
LABEL_118:
  __break(1u);
LABEL_119:
  __break(1u);
LABEL_120:
  __break(1u);
}

uint64_t type metadata accessor for DuplicateContacts()
{
  return objc_opt_self();
}

uint64_t method lookup function for DuplicateContacts()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of static DuplicateContacts.findDuplicates<A>(in:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of static DuplicateContacts.mergeDuplicates(_:store:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of static DuplicateContacts.mergeDuplicates(cohortsWithUserSelectedImageAndPoster:store:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of static DuplicateContacts.mergeDuplicateEmailAddresses(in:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of static DuplicateContacts.mergeDuplicatePhoneNumbers(in:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of static DuplicateContacts.mergeDuplicateUrlAddresses(in:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of static DuplicateContacts.mergedNameComponents(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of static DuplicateContacts.applyMergeResult(_:to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t sub_18F9EC18C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for DuplicateContacts.FindResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DuplicateContacts.FindResult);
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for DuplicateContacts.MergeResult()
{
  return &type metadata for DuplicateContacts.MergeResult;
}

uint64_t _s8Contacts17DuplicateContactsC11MergeResultVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s8Contacts17DuplicateContactsC11MergeResultVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s8Contacts17DuplicateContactsC11MergeResultVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s8Contacts17DuplicateContactsC11MergeResultVwta_0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s8Contacts17DuplicateContactsC11MergeResultVwet_0(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_18F9EC360(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DuplicateContacts.MergeResult.UndoResult()
{
  return &type metadata for DuplicateContacts.MergeResult.UndoResult;
}

uint64_t sub_18F9EC3B0(id *a1)
{
  uint64_t v1;

  return sub_18F9E26E0(a1, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32)) & 1;
}

unint64_t sub_18F9EC3D0()
{
  unint64_t result;

  result = qword_1EE17EBB0;
  if (!qword_1EE17EBB0)
  {
    result = MEMORY[0x194006D14](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EE17EBB0);
  }
  return result;
}

unint64_t sub_18F9EC414()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE180D90;
  if (!qword_1EE180D90)
  {
    v1 = sub_18F9E000C(255, &qword_1EE180D88);
    result = MEMORY[0x194006D14](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EE180D90);
  }
  return result;
}

_QWORD *sub_18F9EC46C(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13]);
  return a1;
}

uint64_t sub_18F9EC4C0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x194006CB4](a1, v6, a5);
}

uint64_t sub_18F9EC53C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_18F9EA024(a1, a2);
}

uint64_t sub_18F9EC554()
{
  uint64_t v0;

  v0 = sub_18FA28204();
  __swift_allocate_value_buffer(v0, qword_1EE1835D8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EE1835D8);
  return sub_18FA281F8();
}

id sub_18F9EC5C0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC8Contacts28CNContactProviderSupportHost____lazy_storage___contactStore;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Contacts28CNContactProviderSupportHost____lazy_storage___contactStore);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8Contacts28CNContactProviderSupportHost____lazy_storage___contactStore);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), sel_init);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

char *sub_18F9EC630(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  os_unfair_lock_s *v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  id v40;
  NSObject *v41;
  char *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  void *v48;
  id v49;
  NSObject *v50;
  os_log_type_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *result;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75[3];
  uint64_t v76;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17E7D8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v68 = (uint64_t)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v65 - v7;
  v9 = sub_18FA281E0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v67 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_18FA28204();
  v73 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE180A00 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1EE1835D8);
  (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v14, v15, v12);
  if (qword_1EE17E7E8 != -1)
    swift_once();
  v71 = qword_1EE17E7E0;
  swift_bridgeObjectRetain_n();
  v16 = sub_18FA281EC();
  v17 = sub_18FA28654();
  v18 = os_log_type_enabled(v16, v17);
  v72 = a1;
  v69 = v10;
  v70 = v12;
  if (v18)
  {
    v19 = swift_slowAlloc();
    v66 = v9;
    v20 = (uint8_t *)v19;
    v21 = swift_slowAlloc();
    v75[0] = v21;
    *(_DWORD *)v20 = 136446210;
    swift_bridgeObjectRetain();
    v76 = sub_18F9DE1F0(v72, a2, v75);
    v10 = v69;
    a1 = v72;
    sub_18FA286E4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_18F8BD000, v16, v17, "providerContainer for %{public}s", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194006DBC](v21, -1, -1);
    v22 = v66;
    MEMORY[0x194006DBC](v20, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    v22 = v9;
  }
  v23 = v71;
  v24 = (os_unfair_lock_s *)(*(_QWORD *)(v71 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_lock) + 16);
  os_unfair_lock_lock(v24);
  v25 = v68;
  sub_18FA0985C(v23, a1, a2, v68);
  os_unfair_lock_unlock(v24);
  sub_18F9F6C98(v25, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v22) == 1)
  {
    sub_18F9F6CE0((uint64_t)v8);
    swift_bridgeObjectRetain_n();
    v26 = sub_18FA281EC();
    v27 = sub_18FA28648();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      v75[0] = v29;
      *(_DWORD *)v28 = 136446210;
      swift_bridgeObjectRetain();
      v76 = sub_18F9DE1F0(v72, a2, v75);
      sub_18FA286E4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_18F8BD000, v26, v27, "Extension not found for %{public}s", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x194006DBC](v29, -1, -1);
      MEMORY[0x194006DBC](v28, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    goto LABEL_16;
  }
  v30 = v22;
  v31 = v67;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v67, v8, v22);
  v32 = _s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0();
  v34 = v33;
  v68 = _AppExtensionIdentity.appDisplayName.getter();
  v72 = v35;
  v36 = _AppExtensionIdentity.containerProviderIdentifier.getter();
  v38 = v37;
  if ((sub_18FA281D4() & 1) == 0)
  {
    v66 = v22;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v41 = sub_18FA281EC();
    v42 = v14;
    v43 = sub_18FA28654();
    if (os_log_type_enabled(v41, v43))
    {
      v44 = swift_slowAlloc();
      v45 = swift_slowAlloc();
      v75[0] = v45;
      *(_DWORD *)v44 = 136446466;
      swift_bridgeObjectRetain();
      v76 = sub_18F9DE1F0(v32, v34, v75);
      sub_18FA286E4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v44 + 12) = 2082;
      v46 = v72;
      swift_bridgeObjectRetain();
      v76 = sub_18F9DE1F0(v68, v46, v75);
      sub_18FA286E4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_18F8BD000, v41, v43, "No provider container available with disabled extension %{public}s for %{public}s app", (uint8_t *)v44, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x194006DBC](v45, -1, -1);
      MEMORY[0x194006DBC](v44, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v69 + 8))(v67, v66);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v42, v70);
    return 0;
  }
  swift_bridgeObjectRelease();
  v39 = sub_18FA09E74();
  v76 = v39;
  if (v39)
  {
    v40 = (id)v39;
    swift_bridgeObjectRelease();
  }
  else
  {
    v48 = (void *)sub_18F9F49DC(v36, v38, v68, v72);
    swift_bridgeObjectRelease();
    if (!v48)
    {
      swift_bridgeObjectRelease();
      v76 = 0;
      (*(void (**)(char *, uint64_t))(v69 + 8))(v31, v22);
LABEL_16:
      (*(void (**)(char *, uint64_t))(v73 + 8))(v14, v70);
      return 0;
    }
    v76 = (uint64_t)v48;
    v40 = v48;
    sub_18FA09A50();

  }
  v49 = v40;
  swift_bridgeObjectRetain();
  v50 = sub_18FA281EC();
  v51 = sub_18FA28654();
  if (os_log_type_enabled(v50, v51))
  {
    v52 = swift_slowAlloc();
    v53 = swift_slowAlloc();
    v71 = (uint64_t)v14;
    v66 = v53;
    v75[0] = v53;
    *(_DWORD *)v52 = 136446466;
    v54 = objc_msgSend(v49, sel_identifier);
    v55 = v30;
    v56 = sub_18FA2833C();
    v58 = v57;

    v59 = v56;
    v30 = v55;
    v74 = sub_18F9DE1F0(v59, v58, v75);
    sub_18FA286E4();
    swift_bridgeObjectRelease();

    *(_WORD *)(v52 + 12) = 2082;
    v60 = v72;
    swift_bridgeObjectRetain();
    v74 = sub_18F9DE1F0(v68, v60, v75);
    sub_18FA286E4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_18F8BD000, v50, v51, "Fetched provider container identifier %{public}s for %{public}s app", (uint8_t *)v52, 0x16u);
    v61 = v66;
    swift_arrayDestroy();
    v14 = (char *)v71;
    MEMORY[0x194006DBC](v61, -1, -1);
    MEMORY[0x194006DBC](v52, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v63 = v69;
  v62 = v70;
  swift_beginAccess();
  v47 = v76;
  result = v67;
  if (v76)
  {
    (*(void (**)(char *, uint64_t))(v63 + 8))(v67, v30);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v14, v62);
    return (char *)v47;
  }
  __break(1u);
  return result;
}

uint64_t sub_18F9ECFA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v5 = sub_18FA281A4();
  v4[6] = v5;
  v4[7] = *(_QWORD *)(v5 - 8);
  v4[8] = swift_task_alloc();
  v6 = sub_18FA28204();
  v4[9] = v6;
  v4[10] = *(_QWORD *)(v6 - 8);
  v4[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_18F9ED034()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  if (qword_1EE180A00 != -1)
    swift_once();
  v2 = v0[10];
  v1 = v0[11];
  v3 = v0[9];
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1EE1835D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  v5 = (_QWORD *)swift_task_alloc();
  v0[12] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_18F9ED0E0;
  return sub_18F9F2EB0(v0[8], v0[3], v0[4]);
}

uint64_t sub_18F9ED0E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  v6 = (_QWORD *)*v5;
  v6[13] = a1;
  v6[14] = a2;
  v6[15] = a3;
  v6[16] = a4;
  v6[17] = v4;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_18F9ED154()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  __int128 v15;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = sub_18FA28198();
  *(_QWORD *)(v0 + 144) = v2;
  if (v1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72));
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v4 = (void *)v2;
    v15 = *(_OWORD *)(v0 + 120);
    v6 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    v7 = *(_QWORD *)(v0 + 88);
    v8 = *(_QWORD *)(v0 + 32);
    v9 = *(_QWORD *)(v0 + 40);
    v11 = *(_QWORD *)(v0 + 16);
    v10 = *(_QWORD *)(v0 + 24);
    v12 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_1EE1B1FC0);
    objc_msgSend(v4, sel_setRemoteObjectInterface_, v12);

    objc_msgSend(v4, sel_resume);
    v13 = swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v13;
    *(_QWORD *)(v13 + 16) = v4;
    *(_QWORD *)(v13 + 24) = v7;
    *(_QWORD *)(v13 + 32) = v6;
    *(_QWORD *)(v13 + 40) = v5;
    *(_OWORD *)(v13 + 48) = v15;
    *(_QWORD *)(v13 + 64) = v11;
    *(_QWORD *)(v13 + 72) = v9;
    *(_QWORD *)(v13 + 80) = v10;
    *(_QWORD *)(v13 + 88) = v8;
    v14 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v14;
    *v14 = v0;
    v14[1] = sub_18F9ED318;
    return sub_18FA28990();
  }
}

uint64_t sub_18F9ED318()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_18F9ED3A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 56);

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18F9ED424()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18F9ED47C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  id v9;
  _QWORD *v10;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  v2 = (void *)sub_18FA28024();
  v3 = objc_msgSend(v2, sel_domain);
  v4 = sub_18FA2833C();
  v6 = v5;

  if (v4 == *(_QWORD *)(v1 + OBJC_IVAR____TtC8Contacts28CNContactProviderSupportHost_ContactProviderErrorDomain)
    && v6 == *(_QWORD *)(v1 + OBJC_IVAR____TtC8Contacts28CNContactProviderSupportHost_ContactProviderErrorDomain + 8))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = sub_18FA2896C();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
    {

      goto LABEL_10;
    }
  }
  v9 = objc_msgSend(v2, sel_code);

  if (v9 == (id)1007)
  {
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 176) = v10;
    *v10 = v0;
    v10[1] = sub_18F9ED660;
    return sub_18F9F6D5C(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
  }
LABEL_10:
  swift_bridgeObjectRelease();
  if (sub_18F9EE4A0(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 40)))
    sub_18F9F0548(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  v12 = *(void **)(v0 + 144);
  v14 = *(_QWORD *)(v0 + 56);
  v13 = *(_QWORD *)(v0 + 64);
  v15 = *(_QWORD *)(v0 + 48);
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18F9ED660()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_18F9ED6C0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (sub_18F9EE4A0(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 40)))
    sub_18F9F0548(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  v1 = *(void **)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 48);
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18F9ED798(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, void *a9, uint64_t a10, void *a11)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t);
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t *v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  void (*v37)(uint64_t, char *, uint64_t);
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  char *v67;
  void *v68;
  uint64_t v69;
  uint64_t *v70;
  unint64_t v71;
  unint64_t v72;
  char *v73;
  void *v74;
  id v75;
  unint64_t v77;
  int v78;
  void *v79;
  uint64_t v80;
  void (*v81)(char *, char *, uint64_t);
  unint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(char *, char *, uint64_t);
  void (*v88)(char *, uint64_t, uint64_t);
  void (*v89)(char *, uint64_t, uint64_t);
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t aBlock;
  uint64_t v105;
  void (*v106)(uint64_t, void *);
  void *v107;
  uint64_t (*v108)(uint64_t);
  _QWORD *v109;

  v93 = a8;
  v94 = a2;
  v101 = a5;
  v102 = a7;
  v100 = a6;
  v98 = a4;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE180EE8);
  v14 = *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64);
  v96 = *(_QWORD *)(v13 - 8);
  v15 = v96;
  MEMORY[0x1E0C80A78](v13);
  v99 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_18FA28204();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v95 = a3;
  v89 = v20;
  v20(v19, a3, v16);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v97 = a1;
  v88 = v21;
  v21((char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v13);
  v22 = *(unsigned __int8 *)(v17 + 80);
  v23 = (v22 + 16) & ~v22;
  v86 = v18 + 7;
  v24 = (v23 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = (v24 + 23) & 0xFFFFFFFFFFFFFFF8;
  v26 = *(unsigned __int8 *)(v15 + 80);
  v84 = (char *)(v26 + 16);
  v27 = (v25 + v26 + 16) & ~v26;
  v91 = v14;
  v83 = v22;
  v82 = v26;
  v85 = v22 | v26 | 7;
  v28 = swift_allocObject();
  v29 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v30 = v13;
  v90 = v19;
  v92 = v16;
  v87 = v29;
  v29((char *)(v28 + v23), v19, v16);
  v31 = (uint64_t *)(v28 + v24);
  v33 = v98;
  v32 = v99;
  v35 = v101;
  v34 = v102;
  *v31 = v98;
  v31[1] = v35;
  v36 = (_QWORD *)(v28 + v25);
  *v36 = v100;
  v36[1] = v34;
  v37 = *(void (**)(uint64_t, char *, uint64_t))(v96 + 32);
  v96 = v30;
  v37(v28 + v27, v32, v30);
  v108 = (uint64_t (*)(uint64_t))sub_18F9F91C4;
  v109 = (_QWORD *)v28;
  aBlock = MEMORY[0x1E0C809B0];
  v105 = 1107296256;
  v106 = sub_18F9EDFC8;
  v107 = &block_descriptor_135;
  v38 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  v39 = objc_msgSend(v94, sel_remoteObjectProxyWithErrorHandler_, v38);
  _Block_release(v38);
  sub_18FA28720();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE180EF0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v81 = (void (*)(char *, char *, uint64_t))v37;
    v94 = a11;
    v80 = a10;
    v79 = a9;
    v40 = v83;
    v41 = ~v83;
    v42 = ~v82;
    v43 = v103;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v82 = v43;
    swift_unknownObjectRetain();
    v44 = v95;
    v45 = sub_18FA281EC();
    v46 = sub_18FA28654();
    v78 = v46;
    if (os_log_type_enabled(v45, v46))
    {
      v47 = swift_slowAlloc();
      v77 = v42;
      v48 = v47;
      v49 = swift_slowAlloc();
      aBlock = v49;
      *(_DWORD *)v48 = 136446466;
      v50 = v101;
      swift_bridgeObjectRetain();
      v103 = sub_18F9DE1F0(v33, v50, &aBlock);
      sub_18FA286E4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v48 + 12) = 2082;
      v51 = v102;
      swift_bridgeObjectRetain();
      v103 = sub_18F9DE1F0(v100, v51, &aBlock);
      sub_18FA286E4();
      v41 = ~v40;
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_18F8BD000, v45, (os_log_type_t)v78, "Will synchronize extension %{public}s for %{public}s app", (uint8_t *)v48, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x194006DBC](v49, -1, -1);
      v52 = v48;
      v42 = v77;
      MEMORY[0x194006DBC](v52, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    v59 = v90;
    v60 = v92;
    v89(v90, v44, v92);
    v61 = v99;
    v62 = v96;
    v88(v99, v97, v96);
    v63 = (v40 + 40) & v41;
    v64 = (v63 + v86) & 0xFFFFFFFFFFFFFFF8;
    v65 = (v64 + 23) & 0xFFFFFFFFFFFFFFF8;
    v66 = (unint64_t)&v84[v65] & v42;
    v67 = (char *)swift_allocObject();
    v68 = v79;
    v69 = v80;
    *((_QWORD *)v67 + 2) = v79;
    *((_QWORD *)v67 + 3) = v69;
    *((_QWORD *)v67 + 4) = v94;
    v87(&v67[v63], v59, v60);
    v70 = (uint64_t *)&v67[v64];
    v72 = v101;
    v71 = v102;
    *v70 = v98;
    v70[1] = v72;
    v73 = &v67[v65];
    *(_QWORD *)v73 = v100;
    *((_QWORD *)v73 + 1) = v71;
    v81(&v67[v66], v61, v62);
    v108 = sub_18F9F9680;
    v109 = v67;
    aBlock = MEMORY[0x1E0C809B0];
    v105 = 1107296256;
    v106 = sub_18F9EE44C;
    v107 = &block_descriptor_141;
    v74 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v75 = v68;
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend((id)v82, sel_synchronizeUsing_reply_, v93, v74);
    _Block_release(v74);
    return swift_unknownObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v53 = sub_18FA281EC();
    v54 = sub_18FA28648();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = swift_slowAlloc();
      v56 = swift_slowAlloc();
      aBlock = v56;
      *(_DWORD *)v55 = 136446466;
      v57 = v101;
      swift_bridgeObjectRetain();
      v103 = sub_18F9DE1F0(v33, v57, &aBlock);
      sub_18FA286E4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v55 + 12) = 2082;
      v58 = v102;
      swift_bridgeObjectRetain();
      v103 = sub_18F9DE1F0(v100, v58, &aBlock);
      sub_18FA286E4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_18F8BD000, v53, v54, "Failed due to some XPC connection error with extension %{public}s for %{public}s app, extension proxy might not conform to CNContactProviderExtensionXPCProtocol.", (uint8_t *)v55, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x194006DBC](v56, -1, -1);
      MEMORY[0x194006DBC](v55, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    type metadata accessor for CNError(0);
    v103 = 1;
    sub_18F9F69A8(MEMORY[0x1E0DEE9D8]);
    sub_18F9F91E0();
    sub_18FA28018();
    v103 = aBlock;
    return sub_18FA28528();
  }
}

void sub_18F9EDFC8(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_18F9EE018(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, unint64_t a9)
{
  id v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;

  sub_18F9F7544(a3, a4);
  if (a1)
  {
    v13 = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = a1;
    v16 = sub_18FA281EC();
    v17 = sub_18FA28648();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      v28 = v19;
      *(_DWORD *)v18 = 136446722;
      swift_bridgeObjectRetain();
      sub_18F9DE1F0(a6, a7, &v28);
      sub_18FA286E4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v18 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_18F9DE1F0(a8, a9, &v28);
      sub_18FA286E4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v18 + 22) = 2082;
      v20 = a1;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE180DF8);
      v21 = sub_18FA28384();
      sub_18F9DE1F0(v21, v22, &v28);
      sub_18FA286E4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_18F8BD000, v16, v17, "Failed to synchronize extension %{public}s for %{public}s app, error = %{public}s", (uint8_t *)v18, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x194006DBC](v19, -1, -1);
      MEMORY[0x194006DBC](v18, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

    }
    v28 = (uint64_t)a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE180EE8);
    return sub_18FA28528();
  }
  else
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v23 = sub_18FA281EC();
    v24 = sub_18FA28654();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = swift_slowAlloc();
      v26 = swift_slowAlloc();
      v28 = v26;
      *(_DWORD *)v25 = 136446466;
      swift_bridgeObjectRetain();
      sub_18F9DE1F0(a6, a7, &v28);
      sub_18FA286E4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v25 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_18F9DE1F0(a8, a9, &v28);
      sub_18FA286E4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_18F8BD000, v23, v24, "Did synchronize extension %{public}s for %{public}s app", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x194006DBC](v26, -1, -1);
      MEMORY[0x194006DBC](v25, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE180EE8);
    return sub_18FA28534();
  }
}

void sub_18F9EE44C(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

BOOL sub_18F9EE4A0(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  id v11;

  v3 = (void *)sub_18FA28024();
  v4 = objc_msgSend(v3, sel_domain);
  v5 = sub_18FA2833C();
  v7 = v6;

  if (v5 == *(_QWORD *)(a2 + OBJC_IVAR____TtC8Contacts28CNContactProviderSupportHost_ContactProviderErrorDomain)
    && v7 == *(_QWORD *)(a2 + OBJC_IVAR____TtC8Contacts28CNContactProviderSupportHost_ContactProviderErrorDomain + 8))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = sub_18FA2896C();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0)
    {

      return 0;
    }
  }
  if (objc_msgSend(v3, sel_code) == (id)1003)
  {

    return 1;
  }
  else
  {
    v11 = objc_msgSend(v3, sel_code);

    return v11 == (id)1004;
  }
}

uint64_t sub_18F9EE6C4(void *a1, int a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _QWORD *v11;

  v4[2] = a1;
  v4[3] = a4;
  v4[4] = _Block_copy(aBlock);
  v7 = sub_18FA2833C();
  v9 = v8;
  v4[5] = v8;
  v10 = a1;
  a4;
  v11 = (_QWORD *)swift_task_alloc();
  v4[6] = v11;
  *v11 = v4;
  v11[1] = sub_18F9EE768;
  return sub_18F9ECFA8((uint64_t)v10, v7, v9);
}

uint64_t sub_18F9EE768()
{
  void *v0;
  uint64_t *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v3 = *(void **)(*v1 + 16);
  v2 = *(void **)(*v1 + 24);
  v4 = *v1;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v4 + 32);
  if (v0)
  {
    v6 = (void *)sub_18FA28024();

    (*(void (**)(uint64_t, void *))(v5 + 16))(v5, v6);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v5 + 16))(*(_QWORD *)(v4 + 32), 0);
  }
  _Block_release(*(const void **)(v4 + 32));
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_18F9EE81C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[10] = a4;
  v5[11] = v4;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17E7D8);
  v5[12] = swift_task_alloc();
  v5[13] = swift_task_alloc();
  v6 = sub_18FA281E0();
  v5[14] = v6;
  v5[15] = *(_QWORD *)(v6 - 8);
  v5[16] = swift_task_alloc();
  v7 = sub_18FA28204();
  v5[17] = v7;
  v5[18] = *(_QWORD *)(v7 - 8);
  v5[19] = swift_task_alloc();
  return swift_task_switch();
}

id sub_18F9EE8E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_unfair_lock_s *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  unint64_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  id result;
  uint64_t (*v33)(void);
  _QWORD *v34;
  NSObject *v35;
  os_log_type_t v36;
  _BOOL4 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint8_t *v44;
  uint64_t v45[2];

  if (qword_1EE180A00 != -1)
    swift_once();
  v2 = v0[18];
  v1 = v0[19];
  v3 = v0[17];
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1EE1835D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  if (qword_1EE17E7E8 != -1)
    swift_once();
  v6 = v0[9];
  v5 = v0[10];
  v7 = qword_1EE17E7E0;
  v8 = *(os_unfair_lock_s **)(qword_1EE17E7E0 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_lock);
  v9 = (_QWORD *)swift_task_alloc();
  v9[2] = v7;
  v9[3] = v6;
  v9[4] = v5;
  v10 = swift_task_alloc();
  *(_QWORD *)(v10 + 16) = sub_18F9F987C;
  *(_QWORD *)(v10 + 24) = v9;
  os_unfair_lock_lock(v8 + 4);
  (*(void (**)(void))(v10 + 16))();
  os_unfair_lock_unlock(v8 + 4);
  swift_task_dealloc();
  v11 = v0[14];
  v12 = v0[15];
  v14 = v0[12];
  v13 = v0[13];
  swift_task_dealloc();
  sub_18F9F6C98(v14, v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v13, 1, v11) != 1)
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[15] + 32))(v0[16], v0[13], v0[14]);
    v22 = _s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0();
    v24 = v23;
    v0[20] = v22;
    v0[21] = v23;
    v25 = _AppExtensionIdentity.appDisplayName.getter();
    v27 = v26;
    v0[22] = v25;
    v0[23] = v26;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v28 = sub_18FA281EC();
    v29 = sub_18FA28654();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc();
      v31 = swift_slowAlloc();
      v45[0] = v31;
      *(_DWORD *)v30 = 136446466;
      swift_bridgeObjectRetain();
      v0[5] = sub_18F9DE1F0(v22, v24, v45);
      sub_18FA286E4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v30 + 12) = 2082;
      swift_bridgeObjectRetain();
      v0[6] = sub_18F9DE1F0(v25, v27, v45);
      sub_18FA286E4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_18F8BD000, v28, v29, "Will invalidate extension %{public}s for %{public}s app", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x194006DBC](v31, -1, -1);
      MEMORY[0x194006DBC](v30, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    if ((sub_18FA281D4() & 1) != 0)
    {
      v34 = (_QWORD *)swift_task_alloc();
      v0[24] = v34;
      *v34 = v0;
      v34[1] = sub_18F9EEF0C;
      return (id)sub_18F9F535C(v0[7], v0[8], v22, v24);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v35 = sub_18FA281EC();
    v36 = sub_18FA28654();
    v37 = os_log_type_enabled(v35, v36);
    v39 = v0[18];
    v38 = v0[19];
    v41 = v0[16];
    v40 = v0[17];
    v42 = v0[14];
    v43 = v0[15];
    if (v37)
    {
      v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v44 = 0;
      _os_log_impl(&dword_18F8BD000, v35, v36, "Did not invalidate as extension is disabled", v44, 2u);
      MEMORY[0x194006DBC](v44, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v33 = (uint64_t (*)(void))v0[1];
    return (id)v33();
  }
  sub_18F9F6CE0(v0[13]);
  swift_bridgeObjectRetain_n();
  v15 = sub_18FA281EC();
  v16 = sub_18FA28648();
  v17 = os_log_type_enabled(v15, v16);
  v18 = v0[10];
  if (v17)
  {
    v19 = v0[9];
    v20 = (uint8_t *)swift_slowAlloc();
    v21 = swift_slowAlloc();
    v45[0] = v21;
    *(_DWORD *)v20 = 136446210;
    swift_bridgeObjectRetain();
    v0[2] = sub_18F9DE1F0(v19, v18, v45);
    sub_18FA286E4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_18F8BD000, v15, v16, "Did not invalidate as extension not found for %{public}s", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194006DBC](v21, -1, -1);
    MEMORY[0x194006DBC](v20, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  result = objc_msgSend((id)objc_opt_self(), sel_errorWithCode_, 106);
  if (result)
  {
    swift_willThrow();
    (*(void (**)(_QWORD, _QWORD))(v0[18] + 8))(v0[19], v0[17]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v33 = (uint64_t (*)(void))v0[1];
    return (id)v33();
  }
  __break(1u);
  return result;
}

uint64_t sub_18F9EEF0C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_18F9EEF84()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v1 = sub_18FA281EC();
  v2 = sub_18FA28654();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(_QWORD *)(v0 + 176);
    v4 = *(_QWORD *)(v0 + 184);
    v6 = *(_QWORD *)(v0 + 160);
    v5 = *(_QWORD *)(v0 + 168);
    v20 = *(_QWORD *)(v0 + 136);
    v21 = *(_QWORD *)(v0 + 152);
    v18 = *(_QWORD *)(v0 + 128);
    v19 = *(_QWORD *)(v0 + 144);
    v16 = *(_QWORD *)(v0 + 120);
    v17 = *(_QWORD *)(v0 + 112);
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v22 = v8;
    *(_DWORD *)v7 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 24) = sub_18F9DE1F0(v6, v5, &v22);
    sub_18FA286E4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 32) = sub_18F9DE1F0(v3, v4, &v22);
    sub_18FA286E4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_18F8BD000, v1, v2, "Did invalidate extension %{public}s for %{public}s app", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x194006DBC](v8, -1, -1);
    MEMORY[0x194006DBC](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v17);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v20);
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 144);
    v9 = *(_QWORD *)(v0 + 152);
    v12 = *(_QWORD *)(v0 + 128);
    v11 = *(_QWORD *)(v0 + 136);
    v13 = *(_QWORD *)(v0 + 112);
    v14 = *(_QWORD *)(v0 + 120);

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18F9EF1E8()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18F9EF3A4(int a1, int a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  v6 = sub_18FA2833C();
  v8 = v7;
  v4[4] = v7;
  v9 = sub_18FA2833C();
  v11 = v10;
  v4[5] = v10;
  a4;
  v12 = (_QWORD *)swift_task_alloc();
  v4[6] = v12;
  *v12 = v4;
  v12[1] = sub_18F9F9890;
  return sub_18F9EE81C(v6, v8, v9, v11);
}

uint64_t sub_18F9EF458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[13] = a4;
  v5[14] = v4;
  v5[11] = a2;
  v5[12] = a3;
  v5[10] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17E7D8);
  v5[15] = swift_task_alloc();
  v5[16] = swift_task_alloc();
  v6 = sub_18FA281E0();
  v5[17] = v6;
  v5[18] = *(_QWORD *)(v6 - 8);
  v5[19] = swift_task_alloc();
  v7 = sub_18FA28204();
  v5[20] = v7;
  v5[21] = *(_QWORD *)(v7 - 8);
  v5[22] = swift_task_alloc();
  return swift_task_switch();
}

id sub_18F9EF51C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_unfair_lock_s *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  unint64_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  id result;
  uint64_t (*v33)(void);
  _QWORD *v34;
  NSObject *v35;
  os_log_type_t v36;
  _BOOL4 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint8_t *v44;
  uint64_t v45[2];

  if (qword_1EE180A00 != -1)
    swift_once();
  v2 = v0[21];
  v1 = v0[22];
  v3 = v0[20];
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1EE1835D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  if (qword_1EE17E7E8 != -1)
    swift_once();
  v6 = v0[12];
  v5 = v0[13];
  v7 = qword_1EE17E7E0;
  v8 = *(os_unfair_lock_s **)(qword_1EE17E7E0 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_lock);
  v9 = (_QWORD *)swift_task_alloc();
  v9[2] = v7;
  v9[3] = v6;
  v9[4] = v5;
  v10 = swift_task_alloc();
  *(_QWORD *)(v10 + 16) = sub_18F9F987C;
  *(_QWORD *)(v10 + 24) = v9;
  os_unfair_lock_lock(v8 + 4);
  (*(void (**)(void))(v10 + 16))();
  os_unfair_lock_unlock(v8 + 4);
  swift_task_dealloc();
  v11 = v0[17];
  v12 = v0[18];
  v14 = v0[15];
  v13 = v0[16];
  swift_task_dealloc();
  sub_18F9F6C98(v14, v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v13, 1, v11) != 1)
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[18] + 32))(v0[19], v0[16], v0[17]);
    v22 = _s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0();
    v24 = v23;
    v0[23] = v22;
    v0[24] = v23;
    v25 = _AppExtensionIdentity.appDisplayName.getter();
    v27 = v26;
    v0[25] = v25;
    v0[26] = v26;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v28 = sub_18FA281EC();
    v29 = sub_18FA28654();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc();
      v31 = swift_slowAlloc();
      v45[0] = v31;
      *(_DWORD *)v30 = 136446466;
      swift_bridgeObjectRetain();
      v0[8] = sub_18F9DE1F0(v22, v24, v45);
      sub_18FA286E4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v30 + 12) = 2082;
      swift_bridgeObjectRetain();
      v0[9] = sub_18F9DE1F0(v25, v27, v45);
      sub_18FA286E4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_18F8BD000, v28, v29, "Will reset extension %{public}s for %{public}s app", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x194006DBC](v31, -1, -1);
      MEMORY[0x194006DBC](v30, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    if ((sub_18FA281D4() & 1) != 0)
    {
      v34 = (_QWORD *)swift_task_alloc();
      v0[27] = v34;
      *v34 = v0;
      v34[1] = sub_18F9EFB48;
      return (id)sub_18F9F535C(v0[10], v0[11], v22, v24);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v35 = sub_18FA281EC();
    v36 = sub_18FA28654();
    v37 = os_log_type_enabled(v35, v36);
    v39 = v0[21];
    v38 = v0[22];
    v41 = v0[19];
    v40 = v0[20];
    v42 = v0[17];
    v43 = v0[18];
    if (v37)
    {
      v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v44 = 0;
      _os_log_impl(&dword_18F8BD000, v35, v36, "Did not reset as extension is disabled", v44, 2u);
      MEMORY[0x194006DBC](v44, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v33 = (uint64_t (*)(void))v0[1];
    return (id)v33();
  }
  sub_18F9F6CE0(v0[16]);
  swift_bridgeObjectRetain_n();
  v15 = sub_18FA281EC();
  v16 = sub_18FA28648();
  v17 = os_log_type_enabled(v15, v16);
  v18 = v0[13];
  if (v17)
  {
    v19 = v0[12];
    v20 = (uint8_t *)swift_slowAlloc();
    v21 = swift_slowAlloc();
    v45[0] = v21;
    *(_DWORD *)v20 = 136446210;
    swift_bridgeObjectRetain();
    v0[2] = sub_18F9DE1F0(v19, v18, v45);
    sub_18FA286E4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_18F8BD000, v15, v16, "Did not reset as extension not found for %{public}s", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194006DBC](v21, -1, -1);
    MEMORY[0x194006DBC](v20, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  result = objc_msgSend((id)objc_opt_self(), sel_errorWithCode_, 106);
  if (result)
  {
    swift_willThrow();
    (*(void (**)(_QWORD, _QWORD))(v0[21] + 8))(v0[22], v0[20]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v33 = (uint64_t (*)(void))v0[1];
    return (id)v33();
  }
  __break(1u);
  return result;
}

uint64_t sub_18F9EFB48()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_18F9EFBAC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28[2];

  v1 = v0[28];
  sub_18F9F0548(v0[12], v0[13]);
  if (v1)
  {
    v3 = v0[18];
    v2 = v0[19];
    v4 = v0[17];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    (*(void (**)(_QWORD, _QWORD))(v0[21] + 8))(v0[22], v0[20]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v5 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v6 = sub_18FA281EC();
    v7 = sub_18FA28654();
    v8 = os_log_type_enabled(v6, v7);
    v9 = v0[26];
    if (v8)
    {
      v10 = v0[24];
      v21 = v0[25];
      v11 = v0[23];
      v26 = v0[20];
      v27 = v0[22];
      v24 = v0[19];
      v25 = v0[21];
      v22 = v0[18];
      v23 = v0[17];
      v12 = swift_slowAlloc();
      v13 = swift_slowAlloc();
      v28[0] = v13;
      *(_DWORD *)v12 = 136446466;
      swift_bridgeObjectRetain();
      v0[3] = sub_18F9DE1F0(v11, v10, v28);
      sub_18FA286E4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v12 + 12) = 2082;
      swift_bridgeObjectRetain();
      v0[4] = sub_18F9DE1F0(v21, v9, v28);
      sub_18FA286E4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_18F8BD000, v6, v7, "Did reset extension %{public}s for %{public}s app", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x194006DBC](v13, -1, -1);
      MEMORY[0x194006DBC](v12, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v23);
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v27, v26);
    }
    else
    {
      v15 = v0[21];
      v14 = v0[22];
      v17 = v0[19];
      v16 = v0[20];
      v18 = v0[17];
      v19 = v0[18];

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v5 = (uint64_t (*)(void))v0[1];
  }
  return v5();
}

uint64_t sub_18F9EFE98()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[2];

  v1 = *(void **)(v0 + 224);
  swift_bridgeObjectRetain();
  v2 = v1;
  swift_bridgeObjectRetain();
  v3 = v1;
  v4 = sub_18FA281EC();
  v5 = sub_18FA28648();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 224);
    v8 = *(_QWORD *)(v0 + 200);
    v7 = *(_QWORD *)(v0 + 208);
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v37[0] = v10;
    *(_DWORD *)v9 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 40) = sub_18F9DE1F0(v8, v7, v37);
    sub_18FA286E4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2082;
    *(_QWORD *)(v0 + 48) = v6;
    v11 = v6;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE180DF8);
    v12 = sub_18FA28384();
    *(_QWORD *)(v0 + 56) = sub_18F9DE1F0(v12, v13, v37);
    sub_18FA286E4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_18F8BD000, v4, v5, "Continuing to reset although failed to invalidate %{public}s app, error = %{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x194006DBC](v10, -1, -1);
    MEMORY[0x194006DBC](v9, -1, -1);

  }
  else
  {
    v14 = *(void **)(v0 + 224);

    swift_bridgeObjectRelease_n();
  }
  sub_18F9F0548(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = sub_18FA281EC();
  v16 = sub_18FA28654();
  v17 = os_log_type_enabled(v15, v16);
  v18 = *(_QWORD *)(v0 + 208);
  if (v17)
  {
    v19 = *(_QWORD *)(v0 + 192);
    v30 = *(_QWORD *)(v0 + 200);
    v20 = *(_QWORD *)(v0 + 184);
    v35 = *(_QWORD *)(v0 + 160);
    v36 = *(_QWORD *)(v0 + 176);
    v33 = *(_QWORD *)(v0 + 152);
    v34 = *(_QWORD *)(v0 + 168);
    v31 = *(_QWORD *)(v0 + 144);
    v32 = *(_QWORD *)(v0 + 136);
    v21 = swift_slowAlloc();
    v22 = swift_slowAlloc();
    v37[0] = v22;
    *(_DWORD *)v21 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 24) = sub_18F9DE1F0(v20, v19, v37);
    sub_18FA286E4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v21 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 32) = sub_18F9DE1F0(v30, v18, v37);
    sub_18FA286E4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_18F8BD000, v15, v16, "Did reset extension %{public}s for %{public}s app", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x194006DBC](v22, -1, -1);
    MEMORY[0x194006DBC](v21, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v33, v32);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v36, v35);
  }
  else
  {
    v24 = *(_QWORD *)(v0 + 168);
    v23 = *(_QWORD *)(v0 + 176);
    v26 = *(_QWORD *)(v0 + 152);
    v25 = *(_QWORD *)(v0 + 160);
    v27 = *(_QWORD *)(v0 + 136);
    v28 = *(_QWORD *)(v0 + 144);

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18F9F0494(int a1, int a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  v6 = sub_18FA2833C();
  v8 = v7;
  v4[4] = v7;
  v9 = sub_18FA2833C();
  v11 = v10;
  v4[5] = v10;
  a4;
  v12 = (_QWORD *)swift_task_alloc();
  v4[6] = v12;
  *v12 = v4;
  v12[1] = sub_18F9F9890;
  return sub_18F9EF458(v6, v8, v9, v11);
}

void sub_18F9F0548(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  os_unfair_lock_s *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  _BOOL4 v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  unint64_t v46;
  uint64_t v47;
  char *v48;
  void (*v49)(char *, uint64_t);
  char *v50;
  uint64_t v51;
  unint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17E7D8);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v58 - v9;
  v11 = sub_18FA281E0();
  v69 = *(_QWORD *)(v11 - 8);
  v70 = v11;
  MEMORY[0x1E0C80A78](v11);
  v66 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_18FA28204();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE180A00 != -1)
    swift_once();
  v17 = __swift_project_value_buffer(v13, (uint64_t)qword_1EE1835D8);
  v67 = v14;
  v68 = v13;
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v71 = v16;
  v18(v16, v17, v13);
  if (qword_1EE17E7E8 != -1)
    swift_once();
  v19 = qword_1EE17E7E0;
  v20 = (os_unfair_lock_s *)(*(_QWORD *)(qword_1EE17E7E0 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_lock)
                           + 16);
  os_unfair_lock_lock(v20);
  sub_18FA0985C(v19, a1, a2, (uint64_t)v8);
  if (!v2)
  {
    os_unfair_lock_unlock(v20);
    sub_18F9F6C98((uint64_t)v8, (uint64_t)v10);
    v22 = v69;
    v21 = v70;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v10, 1, v70) != 1)
    {
      v28 = (uint64_t)v66;
      (*(void (**)(void))(v22 + 32))();
      v29 = _s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0();
      v31 = v30;
      v65 = _AppExtensionIdentity.appDisplayName.getter();
      v33 = v32;
      v60 = _AppExtensionIdentity.containerProviderIdentifier.getter();
      v62 = v34;
      swift_bridgeObjectRetain_n();
      v63 = v33;
      swift_bridgeObjectRetain_n();
      v35 = sub_18FA281EC();
      v36 = sub_18FA28654();
      v37 = os_log_type_enabled(v35, v36);
      v64 = v31;
      v59 = v29;
      v61 = 0;
      if (v37)
      {
        v38 = v31;
        v39 = swift_slowAlloc();
        v40 = swift_slowAlloc();
        v73 = v40;
        *(_DWORD *)v39 = 136446466;
        swift_bridgeObjectRetain();
        v72 = sub_18F9DE1F0(v29, v38, &v73);
        sub_18FA286E4();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v39 + 12) = 2082;
        v41 = v63;
        swift_bridgeObjectRetain();
        v72 = sub_18F9DE1F0(v65, v41, &v73);
        v22 = v69;
        v28 = (uint64_t)v66;
        sub_18FA286E4();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_18F8BD000, v35, v36, "Will reset provider container for %{public}s for %{public}s app", (uint8_t *)v39, 0x16u);
        swift_arrayDestroy();
        v42 = v40;
        v21 = v70;
        MEMORY[0x194006DBC](v42, -1, -1);
        MEMORY[0x194006DBC](v39, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        v41 = v63;
        swift_bridgeObjectRelease_n();
      }
      v45 = v60;
      v44 = v61;
      v46 = v62;
      v47 = v65;
      sub_18F9F42E0(v60, v62, v65, v41);
      if (!v44)
      {
        sub_18F9F3C2C((uint64_t)v45, v46, v47, v41, v28);
        v48 = v71;
        swift_bridgeObjectRelease();
        v52 = v64;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v53 = sub_18FA281EC();
        v54 = sub_18FA28654();
        if (os_log_type_enabled(v53, v54))
        {
          v56 = swift_slowAlloc();
          v57 = swift_slowAlloc();
          v73 = v57;
          *(_DWORD *)v56 = 136446466;
          swift_bridgeObjectRetain();
          v72 = sub_18F9DE1F0(v59, v52, &v73);
          sub_18FA286E4();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v56 + 12) = 2082;
          swift_bridgeObjectRetain();
          v72 = sub_18F9DE1F0(v65, v41, &v73);
          sub_18FA286E4();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_18F8BD000, v53, v54, "Did reset provider container for %{public}s for %{public}s app", (uint8_t *)v56, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x194006DBC](v57, -1, -1);
          MEMORY[0x194006DBC](v56, -1, -1);

          (*(void (**)(char *, uint64_t))(v69 + 8))(v66, v70);
          v49 = *(void (**)(char *, uint64_t))(v67 + 8);
          v50 = v71;
        }
        else
        {

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          (*(void (**)(char *, uint64_t))(v22 + 8))(v66, v21);
          v49 = *(void (**)(char *, uint64_t))(v67 + 8);
          v50 = v48;
        }
        v51 = v68;
        goto LABEL_19;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v28, v21);
      v23 = v71;
      v43 = v68;
LABEL_18:
      v49 = *(void (**)(char *, uint64_t))(v67 + 8);
      v50 = v23;
      v51 = v43;
LABEL_19:
      v49(v50, v51);
      return;
    }
    sub_18F9F6CE0((uint64_t)v10);
    swift_bridgeObjectRetain_n();
    v23 = v71;
    v24 = sub_18FA281EC();
    v25 = sub_18FA28648();
    v20 = (os_unfair_lock_s *)v25;
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      v73 = v27;
      *(_DWORD *)v26 = 136446210;
      swift_bridgeObjectRetain();
      v72 = sub_18F9DE1F0(a1, a2, &v73);
      sub_18FA286E4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_18F8BD000, v24, (os_log_type_t)v20, "Did not reset provider container as extension not found for %{public}s", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x194006DBC](v27, -1, -1);
      MEMORY[0x194006DBC](v26, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v43 = v68;
    if (objc_msgSend((id)objc_opt_self(), sel_errorWithCode_, 106))
    {
      swift_willThrow();
      goto LABEL_18;
    }
    __break(1u);
  }
  os_unfair_lock_unlock(v20);
  __break(1u);
}

uint64_t sub_18F9F0D9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  uint64_t v6;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, char, char);

  v13 = (uint64_t (*)(uint64_t, uint64_t, char, char))((char *)&dword_1EE180E08 + dword_1EE180E08);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v11;
  *v11 = v6;
  v11[1] = sub_18F9F0E24;
  return v13(a3, a4, a5, a6);
}

uint64_t sub_18F9F0E24()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_18F9F0E6C(char a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjCClassFromMetadata;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  __CFString *v19;
  id v20;
  __CFString *v21;
  __CFString *v22;
  id v23;
  __CFString *v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  CFOptionFlags v33;
  uint64_t v34[2];

  v34[1] = *MEMORY[0x1E0C80C00];
  v11 = sub_18FA28120();
  MEMORY[0x1E0C80A78](v11);
  v12 = sub_18FA28324();
  MEMORY[0x1E0C80A78](v12);
  v13 = sub_18FA2830C();
  MEMORY[0x1E0C80A78](v13);
  if ((a1 & 1) != 0)
  {
    v30 = a5;
    type metadata accessor for CNContactProviderSupportHost();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v15 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    sub_18FA28300();
    sub_18FA282F4();
    sub_18FA282E8();
    sub_18FA282F4();
    sub_18FA28318();
    v16 = v15;
    sub_18FA28114();
    sub_18FA28378();
    v17 = sub_18FA28330();
    swift_bridgeObjectRelease();
    sub_18FA28300();
    sub_18FA282F4();
    v31 = a2;
    v32 = a3;
    sub_18FA282E8();
    sub_18FA282F4();
    sub_18FA28318();
    v18 = v16;
    sub_18FA28114();
    sub_18FA28378();
    v19 = (__CFString *)sub_18FA28330();
    swift_bridgeObjectRelease();
    sub_18FA282DC();
    v20 = v18;
    sub_18FA28114();
    sub_18FA28378();
    v21 = (__CFString *)sub_18FA28330();
    v22 = (__CFString *)v17;
    swift_bridgeObjectRelease();
    sub_18FA282DC();
    v23 = v20;
    sub_18FA28114();
    sub_18FA28378();
    v24 = (__CFString *)sub_18FA28330();
    swift_bridgeObjectRelease();
    v33 = 3;
    CFUserNotificationDisplayAlert(0.0, 0, 0, 0, 0, v22, v19, v21, v24, 0, &v33);
    if (v33)
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v25 = sub_18FA281EC();
      v26 = sub_18FA28654();
      v29 = v23;
      if (os_log_type_enabled(v25, v26))
      {
        v27 = swift_slowAlloc();
        v28 = swift_slowAlloc();
        v34[0] = v28;
        *(_DWORD *)v27 = 136446466;
        swift_bridgeObjectRetain();
        sub_18F9DE1F0(v30, a6, v34);
        sub_18FA286E4();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v27 + 12) = 2082;
        swift_bridgeObjectRetain();
        sub_18F9DE1F0(v31, v32, v34);
        sub_18FA286E4();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_18F8BD000, v25, v26, "User did not enable extension %{public}s for %{public}s app", (uint8_t *)v27, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x194006DBC](v28, -1, -1);
        MEMORY[0x194006DBC](v27, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      if (objc_msgSend((id)objc_opt_self(), sel_errorWithCode_, 105))
      {
        swift_willThrow();

      }
      else
      {
        __break(1u);
      }
    }
    else
    {

    }
  }
}

uint64_t sub_18F9F149C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[6] = a7;
  v8[7] = a8;
  v8[4] = a5;
  v8[5] = a6;
  v8[3] = a4;
  return swift_task_switch();
}

uint64_t sub_18F9F1508()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  uint64_t (*v9)(void);
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  BOOL v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26[2];

  v26[1] = *MEMORY[0x1E0C80C00];
  v1 = v0[5];
  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v3 = objc_msgSend(objc_allocWithZone((Class)CNContactProviderSupportSession), sel_init);
  objc_msgSend(v3, sel_setSynchronizationReason_, CFSTR("Extension was enabled"));
  v4 = (void *)sub_18FA28330();
  v5 = objc_msgSend(v2, sel_synchronizeProviderDomainUsingSession_bundleIdentifier_providerHost_, v3, v4, v1);

  v0[2] = 0;
  v6 = objc_msgSend(v5, sel_result_, v0 + 2);
  v7 = (void *)v0[2];
  if (v6)
  {
    v8 = v7;
    swift_unknownObjectRelease();

    v9 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    v10 = v7;
    v11 = (void *)sub_18FA28030();

    swift_willThrow();
    if (qword_1EE180A00 != -1)
      swift_once();
    v12 = sub_18FA28204();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EE1835D8);
    swift_bridgeObjectRetain();
    v13 = v11;
    swift_bridgeObjectRetain();
    v14 = v11;
    v15 = sub_18FA281EC();
    v16 = sub_18FA28648();
    v17 = os_log_type_enabled(v15, v16);
    v18 = v0[7];
    if (v17)
    {
      v19 = v0[6];
      v20 = swift_slowAlloc();
      v25 = swift_slowAlloc();
      v26[0] = v25;
      *(_DWORD *)v20 = 136446466;
      swift_bridgeObjectRetain();
      v0[2] = sub_18F9DE1F0(v19, v18, v26);
      sub_18FA286E4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v20 + 12) = 2082;
      v0[2] = v11;
      v21 = v11;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE180DF8);
      v22 = sub_18FA28384();
      v0[2] = sub_18F9DE1F0(v22, v23, v26);
      sub_18FA286E4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_18F8BD000, v15, v16, "Failed to schedule first synchronization for %{public}s app, error = %{public}s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x194006DBC](v25, -1, -1);
      MEMORY[0x194006DBC](v20, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
    swift_willThrow();
    v9 = (uint64_t (*)(void))v0[1];
  }
  return v9();
}

uint64_t sub_18F9F1A00(int a1, int a2, uint64_t a3, uint64_t a4, void *aBlock, void *a6)
{
  _QWORD *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);

  v6[2] = a6;
  v6[3] = _Block_copy(aBlock);
  v10 = sub_18FA2833C();
  v12 = v11;
  v6[4] = v11;
  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EE180E08 + dword_1EE180E08);
  a6;
  v13 = (_QWORD *)swift_task_alloc();
  v6[5] = v13;
  *v13 = v6;
  v13[1] = sub_18F9F1ABC;
  return v15(v10, v12, a3, a4);
}

uint64_t sub_18F9F1ABC()
{
  void *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = *(void **)(*v1 + 16);
  v3 = *v1;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v3 + 24);
  if (v0)
  {
    v5 = (void *)sub_18FA28024();

    (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v5);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v4 + 16))(*(_QWORD *)(v3 + 24), 0);
  }
  _Block_release(*(const void **)(v3 + 24));
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_18F9F1B64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[11] = a4;
  v5[12] = v4;
  v5[9] = a2;
  v5[10] = a3;
  v5[8] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17E7D8);
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  v6 = sub_18FA281E0();
  v5[15] = v6;
  v5[16] = *(_QWORD *)(v6 - 8);
  v5[17] = swift_task_alloc();
  v7 = sub_18FA28204();
  v5[18] = v7;
  v5[19] = *(_QWORD *)(v7 - 8);
  v5[20] = swift_task_alloc();
  return swift_task_switch();
}

id sub_18F9F1C28()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_unfair_lock_s *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  unint64_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  id result;
  uint64_t (*v31)(void);
  NSObject *v32;
  os_log_type_t v33;
  _BOOL4 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[2];

  if (qword_1EE180A00 != -1)
    swift_once();
  v2 = v0[19];
  v1 = v0[20];
  v3 = v0[18];
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1EE1835D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  if (qword_1EE17E7E8 != -1)
    swift_once();
  v5 = v0[10];
  v6 = v0[11];
  v7 = qword_1EE17E7E0;
  v8 = *(os_unfair_lock_s **)(qword_1EE17E7E0 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_lock);
  v9 = (_QWORD *)swift_task_alloc();
  v9[2] = v7;
  v9[3] = v5;
  v9[4] = v6;
  v10 = swift_task_alloc();
  *(_QWORD *)(v10 + 16) = sub_18F9F987C;
  *(_QWORD *)(v10 + 24) = v9;
  os_unfair_lock_lock(v8 + 4);
  (*(void (**)(void))(v10 + 16))();
  os_unfair_lock_unlock(v8 + 4);
  swift_task_dealloc();
  v12 = v0[15];
  v11 = v0[16];
  v14 = v0[13];
  v13 = v0[14];
  swift_task_dealloc();
  sub_18F9F6C98(v14, v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v13, 1, v12) != 1)
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[16] + 32))(v0[17], v0[14], v0[15]);
    v22 = _s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0();
    v24 = v23;
    v0[21] = v22;
    v0[22] = v23;
    v25 = _AppExtensionIdentity.appDisplayName.getter();
    v27 = v26;
    v0[23] = v25;
    v0[24] = v26;
    v0[25] = _AppExtensionIdentity.containerProviderIdentifier.getter();
    v0[26] = v28;
    if ((sub_18FA281D4() & 1) != 0)
    {
      v29 = (_QWORD *)swift_task_alloc();
      v0[27] = v29;
      *v29 = v0;
      v29[1] = sub_18F9F2220;
      return (id)sub_18F9F535C(v0[8], v0[9], v22, v24);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v32 = sub_18FA281EC();
    v33 = sub_18FA28648();
    v34 = os_log_type_enabled(v32, v33);
    v35 = v0[20];
    v36 = v0[18];
    v41 = v0[17];
    v42 = v0[19];
    v39 = v0[16];
    v40 = v0[15];
    if (v34)
    {
      v37 = swift_slowAlloc();
      v38 = swift_slowAlloc();
      v43[0] = v38;
      *(_DWORD *)v37 = 136446466;
      swift_bridgeObjectRetain();
      v0[3] = sub_18F9DE1F0(v22, v24, v43);
      sub_18FA286E4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v37 + 12) = 2082;
      swift_bridgeObjectRetain();
      v0[4] = sub_18F9DE1F0(v25, v27, v43);
      sub_18FA286E4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_18F8BD000, v32, v33, "Extension already disabled %{public}s for %{public}s app", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x194006DBC](v38, -1, -1);
      MEMORY[0x194006DBC](v37, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v41, v40);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v41, v40);
    }
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v35, v36);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v31 = (uint64_t (*)(void))v0[1];
    return (id)v31();
  }
  sub_18F9F6CE0(v0[14]);
  swift_bridgeObjectRetain_n();
  v15 = sub_18FA281EC();
  v16 = sub_18FA28648();
  v17 = os_log_type_enabled(v15, v16);
  v18 = v0[11];
  if (v17)
  {
    v19 = v0[10];
    v20 = (uint8_t *)swift_slowAlloc();
    v21 = swift_slowAlloc();
    v43[0] = v21;
    *(_DWORD *)v20 = 136446210;
    swift_bridgeObjectRetain();
    v0[2] = sub_18F9DE1F0(v19, v18, v43);
    sub_18FA286E4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_18F8BD000, v15, v16, "Extension not found for %{public}s", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194006DBC](v21, -1, -1);
    MEMORY[0x194006DBC](v20, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  result = objc_msgSend((id)objc_opt_self(), sel_errorWithCode_, 106);
  if (result)
  {
    swift_willThrow();
    (*(void (**)(_QWORD, _QWORD))(v0[19] + 8))(v0[20], v0[18]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v31 = (uint64_t (*)(void))v0[1];
    return (id)v31();
  }
  __break(1u);
  return result;
}

uint64_t sub_18F9F2220()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_18F9F2284()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 224);
  sub_18F9F279C(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192), MEMORY[0x1E0CAA4F8], "Disabled extension %{public}s for %{public}s app", "Failed to disable extension %{public}s for %{public}s app, error = %{public}s");
  v2 = *(_QWORD *)(v0 + 208);
  if (v1)
  {
    v4 = *(_QWORD *)(v0 + 128);
    v3 = *(_QWORD *)(v0 + 136);
    v5 = *(_QWORD *)(v0 + 120);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 144));
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 192);
    v6 = *(NSObject **)(v0 + 200);
    v8 = *(_QWORD *)(v0 + 184);
    swift_bridgeObjectRelease();
    sub_18F9F42E0(v6, v2, v8, v7);
    v11 = *(_QWORD *)(v0 + 152);
    v10 = *(_QWORD *)(v0 + 160);
    v13 = *(_QWORD *)(v0 + 136);
    v12 = *(_QWORD *)(v0 + 144);
    v14 = *(_QWORD *)(v0 + 120);
    v15 = *(_QWORD *)(v0 + 128);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18F9F2420()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  unint64_t v15;
  NSObject *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[2];

  v1 = *(void **)(v0 + 224);
  swift_bridgeObjectRetain();
  v2 = v1;
  swift_bridgeObjectRetain();
  v3 = v1;
  v4 = sub_18FA281EC();
  v5 = sub_18FA28648();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 224);
    v8 = *(_QWORD *)(v0 + 184);
    v7 = *(_QWORD *)(v0 + 192);
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v26[0] = v10;
    *(_DWORD *)v9 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 40) = sub_18F9DE1F0(v8, v7, v26);
    sub_18FA286E4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2082;
    *(_QWORD *)(v0 + 48) = v6;
    v11 = v6;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE180DF8);
    v12 = sub_18FA28384();
    *(_QWORD *)(v0 + 56) = sub_18F9DE1F0(v12, v13, v26);
    sub_18FA286E4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_18F8BD000, v4, v5, "Continuing to disable although failed to invalidate %{public}s app, error = %{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x194006DBC](v10, -1, -1);
    MEMORY[0x194006DBC](v9, -1, -1);

  }
  else
  {
    v14 = *(void **)(v0 + 224);

    swift_bridgeObjectRelease_n();
  }
  sub_18F9F279C(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192), MEMORY[0x1E0CAA4F8], "Disabled extension %{public}s for %{public}s app", "Failed to disable extension %{public}s for %{public}s app, error = %{public}s");
  v15 = *(_QWORD *)(v0 + 208);
  v17 = *(_QWORD *)(v0 + 192);
  v16 = *(NSObject **)(v0 + 200);
  v18 = *(_QWORD *)(v0 + 184);
  swift_bridgeObjectRelease();
  sub_18F9F42E0(v16, v15, v18, v17);
  v21 = *(_QWORD *)(v0 + 152);
  v20 = *(_QWORD *)(v0 + 160);
  v23 = *(_QWORD *)(v0 + 136);
  v22 = *(_QWORD *)(v0 + 144);
  v24 = *(_QWORD *)(v0 + 120);
  v25 = *(_QWORD *)(v0 + 128);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_18F9F279C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, void (*a7)(void), const char *a8, const char *a9)
{
  void *v9;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *format;
  uint64_t v29;

  a7();
  if (v9)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = v9;
    v17 = sub_18FA281EC();
    v18 = sub_18FA28648();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v26 = swift_slowAlloc();
      v29 = v26;
      *(_DWORD *)v19 = 136446722;
      swift_bridgeObjectRetain();
      sub_18F9DE1F0(a3, a4, &v29);
      sub_18FA286E4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v19 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_18F9DE1F0(a5, a6, &v29);
      sub_18FA286E4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v19 + 22) = 2082;
      v20 = v9;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE180DF8);
      v21 = sub_18FA28384();
      sub_18F9DE1F0(v21, v22, &v29);
      sub_18FA286E4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_18F8BD000, v17, v18, a9, (uint8_t *)v19, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x194006DBC](v26, -1, -1);
      MEMORY[0x194006DBC](v19, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

    }
    swift_willThrow();
  }
  else
  {
    format = (char *)a5;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v23 = sub_18FA281EC();
    v24 = sub_18FA28654();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = swift_slowAlloc();
      v27 = swift_slowAlloc();
      v29 = v27;
      *(_DWORD *)v25 = 136446466;
      swift_bridgeObjectRetain();
      sub_18F9DE1F0(a3, a4, &v29);
      sub_18FA286E4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v25 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_18F9DE1F0((uint64_t)format, a6, &v29);
      sub_18FA286E4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_18F8BD000, v23, v24, a8, (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x194006DBC](v27, -1, -1);
      MEMORY[0x194006DBC](v25, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

  }
}

uint64_t sub_18F9F2CE4(int a1, int a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  v6 = sub_18FA2833C();
  v8 = v7;
  v4[4] = v7;
  v9 = sub_18FA2833C();
  v11 = v10;
  v4[5] = v10;
  a4;
  v12 = (_QWORD *)swift_task_alloc();
  v4[6] = v12;
  *v12 = v4;
  v12[1] = sub_18F9F2D98;
  return sub_18F9F1B64(v6, v8, v9, v11);
}

uint64_t sub_18F9F2D98()
{
  void *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = *(void **)(*v1 + 16);
  v3 = *v1;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v3 + 24);
  if (v0)
  {
    v5 = (void *)sub_18FA28024();

    (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v5);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v4 + 16))(*(_QWORD *)(v3 + 24), 0);
  }
  _Block_release(*(const void **)(v3 + 24));
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_18F9F2EB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[8] = a2;
  v3[9] = a3;
  v3[7] = a1;
  v4 = sub_18FA28180();
  v3[10] = v4;
  v3[11] = *(_QWORD *)(v4 - 8);
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17E7D8);
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  v5 = sub_18FA281E0();
  v3[16] = v5;
  v3[17] = *(_QWORD *)(v5 - 8);
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  v6 = sub_18FA28204();
  v3[20] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[21] = v7;
  v3[22] = *(_QWORD *)(v7 + 64);
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  return swift_task_switch();
}

id sub_18F9F2FCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  unint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  id result;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t type;
  uint64_t v59[2];

  if (qword_1EE180A00 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1EE1835D8);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v5(v1, v4, v2);
  if (qword_1EE17E7E8 != -1)
    swift_once();
  v7 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 72);
  v8 = qword_1EE17E7E0;
  v9 = *(os_unfair_lock_s **)(qword_1EE17E7E0 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_lock);
  v10 = (_QWORD *)swift_task_alloc();
  v10[2] = v8;
  v10[3] = v7;
  v10[4] = v6;
  v11 = swift_task_alloc();
  *(_QWORD *)(v11 + 16) = sub_18F9F9740;
  *(_QWORD *)(v11 + 24) = v10;
  os_unfair_lock_lock(v9 + 4);
  (*(void (**)(void))(v11 + 16))();
  os_unfair_lock_unlock(v9 + 4);
  swift_task_dealloc();
  v12 = *(_QWORD *)(v0 + 128);
  v13 = *(_QWORD *)(v0 + 136);
  v15 = *(_QWORD *)(v0 + 112);
  v14 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc();
  sub_18F9F6C98(v15, v14);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v14, 1, v12) == 1)
  {
    sub_18F9F6CE0(*(_QWORD *)(v0 + 120));
    swift_bridgeObjectRetain_n();
    v16 = sub_18FA281EC();
    v17 = sub_18FA28648();
    v18 = os_log_type_enabled(v16, v17);
    v19 = *(_QWORD *)(v0 + 72);
    if (v18)
    {
      v20 = *(_QWORD *)(v0 + 64);
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v59[0] = v22;
      *(_DWORD *)v21 = 136446210;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 16) = sub_18F9DE1F0(v20, v19, v59);
      sub_18FA286E4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_18F8BD000, v16, v17, "Extension not found for %{public}s", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x194006DBC](v22, -1, -1);
      MEMORY[0x194006DBC](v21, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    result = objc_msgSend((id)objc_opt_self(), sel_errorWithCode_, 106);
    if (result)
    {
      swift_willThrow();
LABEL_21:
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 160));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (id)(*(uint64_t (**)(void))(v0 + 8))();
    }
    __break(1u);
LABEL_23:
    __break(1u);
    return result;
  }
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 32))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128));
  v23 = _s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0();
  v25 = v24;
  *(_QWORD *)(v0 + 200) = v23;
  *(_QWORD *)(v0 + 208) = v24;
  v26 = _AppExtensionIdentity.appDisplayName.getter();
  v28 = v27;
  *(_QWORD *)(v0 + 216) = v26;
  *(_QWORD *)(v0 + 224) = v27;
  v29 = sub_18FA281D4();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((v29 & 1) == 0)
  {
    v35 = sub_18FA281EC();
    v36 = sub_18FA28654();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = swift_slowAlloc();
      v54 = swift_slowAlloc();
      v59[0] = v54;
      *(_DWORD *)v37 = 136446466;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 24) = sub_18F9DE1F0(v23, v25, v59);
      sub_18FA286E4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v37 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 32) = sub_18F9DE1F0(v26, v28, v59);
      sub_18FA286E4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_18F8BD000, v35, v36, "Will not launch disabled extension %{public}s for %{public}s app", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x194006DBC](v54, -1, -1);
      MEMORY[0x194006DBC](v37, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    result = objc_msgSend((id)objc_opt_self(), sel_errorWithCode_, 105);
    if (result)
    {
      v49 = *(_QWORD *)(v0 + 152);
      v50 = *(_QWORD *)(v0 + 128);
      v51 = *(_QWORD *)(v0 + 136);
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v49, v50);
      goto LABEL_21;
    }
    goto LABEL_23;
  }
  type = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v30 = sub_18FA281EC();
  v31 = sub_18FA28654();
  v56 = v23;
  if (os_log_type_enabled(v30, v31))
  {
    v32 = swift_slowAlloc();
    v33 = swift_slowAlloc();
    v59[0] = v33;
    *(_DWORD *)v32 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 40) = sub_18F9DE1F0(v23, v25, v59);
    sub_18FA286E4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v32 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 48) = sub_18F9DE1F0(type, v28, v59);
    sub_18FA286E4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_18F8BD000, v30, v31, "If needed will launch extension %{public}s for %{public}s app", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x194006DBC](v33, -1, -1);
    MEMORY[0x194006DBC](v32, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v39 = *(_QWORD *)(v0 + 184);
  v38 = *(_QWORD *)(v0 + 192);
  v40 = *(_QWORD *)(v0 + 168);
  v41 = *(_QWORD *)(v0 + 176);
  v42 = *(_QWORD *)(v0 + 160);
  v57 = *(_QWORD *)(v0 + 96);
  v52 = *(_QWORD *)(v0 + 104);
  v53 = *(_QWORD *)(v0 + 88);
  v55 = *(_QWORD *)(v0 + 80);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 16))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 128));
  v5(v39, v38, v42);
  v43 = (*(unsigned __int8 *)(v40 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  v44 = (v41 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
  v45 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v40 + 32))(v45 + v43, v39, v42);
  v46 = (uint64_t *)(v45 + v44);
  *v46 = v56;
  v46[1] = v25;
  v47 = (uint64_t *)(v45 + ((v44 + 23) & 0xFFFFFFFFFFFFFFF8));
  *v47 = type;
  v47[1] = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_18FA28174();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v57, v52, v55);
  v48 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 232) = v48;
  *v48 = v0;
  v48[1] = sub_18F9F3818;
  return (id)sub_18FA2818C();
}

uint64_t sub_18F9F3818()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_18F9F3890()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 128);
  v6 = *(_QWORD *)(v0 + 136);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 80));
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 224));
}

uint64_t sub_18F9F3978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 136);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 80));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 160));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_18F9F3A4C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *oslog;
  uint64_t v13;

  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  oslog = sub_18FA281EC();
  v9 = sub_18FA28648();
  if (os_log_type_enabled(oslog, v9))
  {
    v10 = swift_slowAlloc();
    v11 = swift_slowAlloc();
    v13 = v11;
    *(_DWORD *)v10 = 136446466;
    swift_bridgeObjectRetain();
    sub_18F9DE1F0(a2, a3, &v13);
    sub_18FA286E4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v10 + 12) = 2082;
    swift_bridgeObjectRetain();
    sub_18F9DE1F0(a4, a5, &v13);
    sub_18FA286E4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_18F8BD000, oslog, v9, "App extension process configuration was interrupted with extension %{public}s for %{public}s app", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x194006DBC](v11, -1, -1);
    MEMORY[0x194006DBC](v10, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

  }
}

uint64_t sub_18F9F3C2C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  id v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  unsigned int v20;
  id v21;
  id v22;
  id v23;
  char *v24;
  NSObject *v25;
  int v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  os_log_t v33;
  void *v34;
  uint64_t result;
  id v36;
  void *v37;
  id v38;
  id v39;
  char *v40;
  NSObject *v41;
  int v42;
  uint64_t v43;
  void *v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  int v51;
  os_log_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  id v60[2];

  v54 = a5;
  v57 = a1;
  v60[1] = *(id *)MEMORY[0x1E0C80C00];
  v9 = sub_18FA28204();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE180A00 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v9, (uint64_t)qword_1EE1835D8);
  v55 = v10;
  v56 = v9;
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v58 = v12;
  v14(v12, v13, v9);
  if (qword_1EE17E7E8 != -1)
    swift_once();
  v15 = objc_msgSend(objc_allocWithZone((Class)CNMutableContainer), sel_init);
  v53 = a3;
  v16 = (void *)sub_18FA28330();
  objc_msgSend(v15, sel_setName_, v16);

  objc_msgSend(v15, sel_setType_, 1003);
  v17 = (void *)sub_18FA28330();
  objc_msgSend(v15, sel_setProviderIdentifier_, v17);

  v18 = objc_msgSend(objc_allocWithZone((Class)CNSaveRequest), sel_init);
  objc_msgSend(v18, sel_addContainer_toAccountWithIdentifier_, v15, 0);
  objc_msgSend(v18, sel_setIgnoresContactProviderRestrictions_, 1);
  v19 = sub_18F9EC5C0();
  v60[0] = 0;
  v20 = objc_msgSend(v19, sel_executeSaveRequest_error_, v18, v60);

  if (v20)
  {
    v21 = v60[0];
    sub_18FA09A50();
    v22 = v15;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v23 = v22;
    v24 = v58;
    v25 = sub_18FA281EC();
    v26 = sub_18FA28654();
    if (os_log_type_enabled(v25, (os_log_type_t)v26))
    {
      v51 = v26;
      v52 = v25;
      v54 = v5;
      v27 = swift_slowAlloc();
      v50 = (void *)swift_slowAlloc();
      v60[0] = v50;
      *(_DWORD *)v27 = 136446722;
      v28 = objc_msgSend(v23, sel_identifier);
      if (v28)
      {
        v29 = v28;
        v30 = sub_18FA2833C();
        v32 = v31;

        v59 = sub_18F9DE1F0(v30, v32, (uint64_t *)v60);
        sub_18FA286E4();

        swift_bridgeObjectRelease();
        *(_WORD *)(v27 + 12) = 2082;
        swift_bridgeObjectRetain();
        v59 = sub_18F9DE1F0(v57, a2, (uint64_t *)v60);
        sub_18FA286E4();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v27 + 22) = 2082;
        swift_bridgeObjectRetain();
        v59 = sub_18F9DE1F0(v53, a4, (uint64_t *)v60);
        sub_18FA286E4();
        swift_bridgeObjectRelease_n();
        v33 = v52;
        _os_log_impl(&dword_18F8BD000, v52, (os_log_type_t)v51, "Created provider container %{public}s with provider identifier %{public}s for %{public}s app", (uint8_t *)v27, 0x20u);
        v34 = v50;
        swift_arrayDestroy();
        MEMORY[0x194006DBC](v34, -1, -1);
        MEMORY[0x194006DBC](v27, -1, -1);

        return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v58, v56);
      }
      else
      {

        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        __break(1u);
      }
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v24, v56);
    }
  }
  else
  {
    v36 = v60[0];
    v37 = (void *)sub_18FA28030();

    swift_willThrow();
    swift_bridgeObjectRetain();
    v38 = v37;
    swift_bridgeObjectRetain();
    v39 = v37;
    v40 = v58;
    v41 = sub_18FA281EC();
    v42 = sub_18FA28648();
    if (os_log_type_enabled(v41, (os_log_type_t)v42))
    {
      v43 = swift_slowAlloc();
      v44 = (void *)swift_slowAlloc();
      v60[0] = v44;
      *(_DWORD *)v43 = 136446466;
      swift_bridgeObjectRetain();
      v59 = sub_18F9DE1F0(v53, a4, (uint64_t *)v60);
      sub_18FA286E4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v43 + 12) = 2082;
      v59 = (uint64_t)v37;
      v45 = v37;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE180DF8);
      v46 = sub_18FA28384();
      v59 = sub_18F9DE1F0(v46, v47, (uint64_t *)v60);
      sub_18FA286E4();
      v40 = v58;
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_18F8BD000, v41, (os_log_type_t)v42, "Failed to create provider container for %{public}s app, error = %{public}s", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x194006DBC](v44, -1, -1);
      MEMORY[0x194006DBC](v43, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
    v49 = v55;
    v48 = v56;
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v40, v48);
  }
  return result;
}

uint64_t sub_18F9F42E0(NSObject *a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  void *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  unsigned int v17;
  id v18;
  id v19;
  id v20;
  char *v21;
  NSObject *v22;
  int v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  os_log_t v30;
  void *v31;
  uint64_t result;
  id v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  NSObject *v38;
  int v39;
  uint64_t v40;
  id v41;
  void *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  id v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  os_log_t v50;
  void *v51;
  uint64_t v52;
  void *v53;
  void *v54;
  os_log_t v55;
  uint64_t v56;
  id v57;
  os_log_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  id v62[2];

  v58 = a1;
  v59 = a3;
  v62[1] = *(id *)MEMORY[0x1E0C80C00];
  v7 = sub_18FA28204();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE180A00 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v7, (uint64_t)qword_1EE1835D8);
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v60 = v10;
  v12(v10, v11, v7);
  if (qword_1EE17E7E8 != -1)
    swift_once();
  v13 = sub_18F9F49DC((uint64_t)v58, a2, v59, a4);
  if (!v13)
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v60, v7);
  v14 = (void *)v13;
  v56 = v8;
  v57 = v4;
  v15 = objc_msgSend(objc_allocWithZone((Class)CNSaveRequest), sel_init);
  objc_msgSend(v15, sel_deleteContainer_, v14);
  objc_msgSend(v15, sel_setIgnoresContactProviderRestrictions_, 1);
  v16 = sub_18F9EC5C0();
  v62[0] = 0;
  v17 = objc_msgSend(v16, sel_executeSaveRequest_error_, v15, v62);

  if (v17)
  {
    v18 = v62[0];
    sub_18FA09C84();
    v19 = v14;
    swift_bridgeObjectRetain_n();
    v20 = v19;
    v21 = v60;
    v22 = sub_18FA281EC();
    v23 = sub_18FA28654();
    if (os_log_type_enabled(v22, (os_log_type_t)v23))
    {
      LODWORD(v55) = v23;
      v58 = v22;
      v24 = swift_slowAlloc();
      v54 = (void *)swift_slowAlloc();
      v62[0] = v54;
      *(_DWORD *)v24 = 136446466;
      v25 = objc_msgSend(v20, sel_identifier);
      if (v25)
      {
        v26 = v25;
        v27 = sub_18FA2833C();
        v29 = v28;

        v61 = sub_18F9DE1F0(v27, v29, (uint64_t *)v62);
        sub_18FA286E4();

        swift_bridgeObjectRelease();
        *(_WORD *)(v24 + 12) = 2082;
        swift_bridgeObjectRetain();
        v61 = sub_18F9DE1F0(v59, a4, (uint64_t *)v62);
        sub_18FA286E4();
        swift_bridgeObjectRelease_n();
        v30 = v58;
        _os_log_impl(&dword_18F8BD000, v58, (os_log_type_t)v55, "Deleted provider container %{public}s for %{public}s app", (uint8_t *)v24, 0x16u);
        v31 = v54;
        swift_arrayDestroy();
        MEMORY[0x194006DBC](v31, -1, -1);
        MEMORY[0x194006DBC](v24, -1, -1);

        return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v60, v7);
      }

      swift_bridgeObjectRelease();
      __break(1u);
      goto LABEL_19;
    }

    swift_bridgeObjectRelease_n();
    return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v21, v7);
  }
  v33 = v62[0];
  v34 = (void *)sub_18FA28030();

  swift_willThrow();
  v35 = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v36 = v34;
  v15 = v35;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v37 = v34;
  v21 = v60;
  v38 = sub_18FA281EC();
  v39 = sub_18FA28648();
  if (!os_log_type_enabled(v38, (os_log_type_t)v39))
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    goto LABEL_16;
  }
  LODWORD(v54) = v39;
  v55 = v38;
  v57 = v34;
  v40 = swift_slowAlloc();
  v53 = (void *)swift_slowAlloc();
  v62[0] = v53;
  *(_DWORD *)v40 = 136446978;
  v41 = objc_msgSend(v15, sel_identifier);
  if (v41)
  {
    v42 = v41;
    v43 = sub_18FA2833C();
    v45 = v44;

    v61 = sub_18F9DE1F0(v43, v45, (uint64_t *)v62);
    sub_18FA286E4();

    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 12) = 2082;
    swift_bridgeObjectRetain();
    v61 = sub_18F9DE1F0((uint64_t)v58, a2, (uint64_t *)v62);
    sub_18FA286E4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v40 + 22) = 2082;
    swift_bridgeObjectRetain();
    v61 = sub_18F9DE1F0(v59, a4, (uint64_t *)v62);
    sub_18FA286E4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v40 + 32) = 2082;
    v46 = v57;
    v61 = (uint64_t)v57;
    v47 = v57;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE180DF8);
    v48 = sub_18FA28384();
    v61 = sub_18F9DE1F0(v48, v49, (uint64_t *)v62);
    sub_18FA286E4();
    swift_bridgeObjectRelease();

    v50 = v55;
    _os_log_impl(&dword_18F8BD000, v55, (os_log_type_t)v54, "Failed to delete provider container %{public}s with provider identifier %{public}s for %{public}s app, error = %{public}s", (uint8_t *)v40, 0x2Au);
    v51 = v53;
    swift_arrayDestroy();
    MEMORY[0x194006DBC](v51, -1, -1);
    MEMORY[0x194006DBC](v40, -1, -1);

    v21 = v60;
LABEL_16:
    swift_willThrow();

    return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v21, v7);
  }
LABEL_19:

  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_18F9F49DC(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  unint64_t v19;
  id v20;
  id v21;
  void *v22;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  void *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43[5];

  v43[4] = *(id *)MEMORY[0x1E0C80C00];
  v8 = sub_18FA28204();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE180A00 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v8, (uint64_t)qword_1EE1835D8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  v13 = (void *)objc_opt_self();
  v41 = a1;
  v14 = (void *)sub_18FA28330();
  v15 = objc_msgSend(v13, sel_predicateForContainerWithProviderIdentifier_, v14);

  v16 = sub_18F9EC5C0();
  v43[0] = 0;
  v17 = objc_msgSend(v16, sel_containersMatchingPredicate_error_, v15, v43);

  v18 = v43[0];
  if (!v17)
  {
    v40 = a3;
    v24 = v43[0];
    v25 = (id)sub_18FA28030();

    goto LABEL_17;
  }
  sub_18F9E000C(0, &qword_1EE17EAD0);
  v19 = sub_18FA28444();
  v20 = v18;

  if (v19 >> 62)
  {
    swift_bridgeObjectRetain();
    v26 = sub_18FA288B8();
    swift_bridgeObjectRelease();
    if (v26 > 0)
    {
      swift_bridgeObjectRetain();
      v27 = sub_18FA288B8();
      swift_bridgeObjectRelease();
      if (v27)
        goto LABEL_6;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);

      return 0;
    }
    goto LABEL_16;
  }
  if (!*(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_16:
    v40 = a3;
    swift_bridgeObjectRelease();
    type metadata accessor for CNError(0);
    v42 = 200;
    sub_18F9F69A8(MEMORY[0x1E0DEE9D8]);
    sub_18F9F91E0();
    sub_18FA28018();
    v25 = v43[0];
LABEL_17:
    swift_willThrow();

    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28 = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v29 = v25;
    v30 = sub_18FA281EC();
    v31 = sub_18FA28648();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = swift_slowAlloc();
      v38 = (void *)swift_slowAlloc();
      v43[0] = v38;
      *(_DWORD *)v32 = 136446722;
      v39 = v9;
      swift_bridgeObjectRetain();
      v42 = sub_18F9DE1F0(v41, a2, (uint64_t *)v43);
      sub_18FA286E4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v32 + 12) = 2082;
      swift_bridgeObjectRetain();
      v42 = sub_18F9DE1F0(v40, a4, (uint64_t *)v43);
      sub_18FA286E4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v32 + 22) = 2082;
      v42 = (uint64_t)v25;
      v33 = v25;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE180DF8);
      v34 = sub_18FA28384();
      v42 = sub_18F9DE1F0(v34, v35, (uint64_t *)v43);
      sub_18FA286E4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_18F8BD000, v30, v31, "Failed to find provider container with provider identifier %{public}s for %{public}s app, error = %{public}s", (uint8_t *)v32, 0x20u);
      v36 = v38;
      swift_arrayDestroy();
      MEMORY[0x194006DBC](v36, -1, -1);
      MEMORY[0x194006DBC](v32, -1, -1);

      (*(void (**)(char *, uint64_t))(v39 + 8))(v11, v8);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
    return 0;
  }
LABEL_6:
  if ((v19 & 0xC000000000000001) != 0)
  {
    v21 = (id)MEMORY[0x194005370](0, v19);
  }
  else
  {
    if (!*(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
      __break(1u);
    v21 = *(id *)(v19 + 32);
  }
  v22 = v21;
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_mutableCopy);

  sub_18FA28720();
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_18F9E000C(0, (unint64_t *)&unk_1EE180F00);
  if (swift_dynamicCast())
    return v42;
  else
    return 0;
}

void sub_18F9F4F94(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  _QWORD aBlock[6];

  v22 = a4;
  v23 = a5;
  v24 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE180EF8);
  v8 = *(_QWORD *)(v7 - 8);
  v21 = v7;
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v10 = sub_18FA28204();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  v14 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v15 = (v12 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = (*(unsigned __int8 *)(v8 + 80) + v15 + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v17 + v14, v13, v10);
  v18 = (_QWORD *)(v17 + v15);
  v19 = v23;
  *v18 = v22;
  v18[1] = v19;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v17 + v16, (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v21);
  aBlock[4] = sub_18F9F935C;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18F9F52F0;
  aBlock[3] = &block_descriptor_127;
  v20 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v24, sel_monitorForDeath_, v20);
  _Block_release(v20);
}

uint64_t sub_18F9F5170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v12;

  swift_bridgeObjectRetain_n();
  v7 = sub_18FA281EC();
  v8 = sub_18FA28654();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v12 = v10;
    *(_DWORD *)v9 = 136446210;
    swift_bridgeObjectRetain();
    sub_18F9DE1F0(a4, a5, &v12);
    sub_18FA286E4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_18F8BD000, v7, v8, "Did terminate extension %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194006DBC](v10, -1, -1);
    MEMORY[0x194006DBC](v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE180EF8);
  return sub_18FA28534();
}

void sub_18F9F52F0(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(id, id);
  id v6;
  id v7;

  v5 = *(void (**)(id, id))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(v7, v6);
  swift_release();

}

uint64_t sub_18F9F535C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[6] = a4;
  v5[7] = v4;
  v5[4] = a2;
  v5[5] = a3;
  v5[3] = a1;
  v6 = sub_18FA281A4();
  v5[8] = v6;
  v5[9] = *(_QWORD *)(v6 - 8);
  v5[10] = swift_task_alloc();
  v7 = sub_18FA28204();
  v5[11] = v7;
  v5[12] = *(_QWORD *)(v7 - 8);
  v5[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_18F9F5418()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  _QWORD *v12;
  id v14;
  void *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;

  if (qword_1EE180A00 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 96);
  v1 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1EE1835D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  swift_bridgeObjectRetain();
  v5 = (void *)sub_18FA28330();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend((id)objc_opt_self(), sel_predicateMatchingBundleIdentifier_, v5);

  v7 = (void *)objc_opt_self();
  *(_QWORD *)(v0 + 16) = 0;
  v8 = objc_msgSend(v7, sel_handleForPredicate_error_, v6, v0 + 16);
  v9 = *(void **)(v0 + 16);
  if (v8)
  {
    v10 = v8;
    v11 = v9;

    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v12;
    *v12 = v0;
    v12[1] = sub_18F9F5694;
    return sub_18F9F2EB0(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  }
  else
  {
    v14 = v9;
    v15 = (void *)sub_18FA28030();

    swift_willThrow();
    v16 = sub_18FA281EC();
    v17 = sub_18FA28654();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_18F8BD000, v16, v17, "Did not invalidate as extension is not loaded", v18, 2u);
      MEMORY[0x194006DBC](v18, -1, -1);
    }

    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_18F9F5694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  v6 = (_QWORD *)*v5;
  v6[15] = a1;
  v6[16] = a2;
  v6[17] = a3;
  v6[18] = a4;
  v6[19] = v4;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_18F9F574C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  __int128 v14;
  __int128 v15;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = sub_18FA28198();
  *(_QWORD *)(v0 + 160) = v2;
  if (v1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 64));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v4 = (void *)v2;
    v5 = *(_QWORD *)(v0 + 144);
    v6 = *(_QWORD *)(v0 + 120);
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 48);
    v9 = *(_QWORD *)(v0 + 56);
    v10 = *(_QWORD *)(v0 + 40);
    v14 = *(_OWORD *)(v0 + 24);
    v15 = *(_OWORD *)(v0 + 128);
    v11 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_1EE1B1FC0);
    objc_msgSend(v4, sel_setRemoteObjectInterface_, v11);

    objc_msgSend(v4, sel_resume);
    v12 = swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v12;
    *(_QWORD *)(v12 + 16) = v4;
    *(_QWORD *)(v12 + 24) = v7;
    *(_QWORD *)(v12 + 32) = v6;
    *(_OWORD *)(v12 + 40) = v15;
    *(_QWORD *)(v12 + 56) = v5;
    *(_OWORD *)(v12 + 64) = v14;
    *(_QWORD *)(v12 + 80) = v9;
    *(_QWORD *)(v12 + 88) = v10;
    *(_QWORD *)(v12 + 96) = v8;
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 176) = v13;
    *v13 = v0;
    v13[1] = sub_18F9F5968;
    return sub_18FA28990();
  }
}

uint64_t sub_18F9F5968()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  uint64_t *v3;
  _QWORD *v4;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  v2[23] = v0;
  v4 = (_QWORD *)swift_task_alloc();
  v2[24] = (uint64_t)v4;
  *v4 = v3;
  v4[1] = sub_18F9F5A1C;
  return sub_18F9F6D5C(v2[15], v2[16]);
}

uint64_t sub_18F9F5A1C()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_18F9F5AA8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v1 = *(void **)(v0 + 184);
  v2 = *(void **)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 64);
  if (v1)
  {
    v6 = v1;
    swift_willThrow();

  }
  else
  {

  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18F9F5BD4()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18F9F5C58(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t, uint64_t);
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t *v34;
  char *v35;
  unint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t);
  char *v41;
  void *v42;
  unint64_t v43;
  id v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t *v55;
  unint64_t v56;
  uint64_t *v57;
  void *v58;
  id v59;
  void *v60;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  unint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  char *v77;
  void (*v78)(char *, uint64_t, uint64_t);
  void (*v79)(char *, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  unint64_t v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t aBlock;
  uint64_t v94;
  void (*v95)(uint64_t, void *);
  void *v96;
  uint64_t (*v97)(uint64_t);
  _QWORD *v98;

  v80 = a8;
  v84 = a7;
  v85 = a2;
  v90 = a4;
  v91 = a6;
  v89 = a5;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE180EE8);
  v15 = *(_QWORD *)(v14 - 8);
  v88 = v14;
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x1E0C80A78](v14);
  v83 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_18FA28204();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v86 = a3;
  v79 = v21;
  v21(v20, a3, v17);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v87 = a1;
  v78 = v22;
  v22((char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v14);
  v23 = *(unsigned __int8 *)(v18 + 80);
  v24 = (v23 + 16) & ~v23;
  v75 = v19 + 7;
  v25 = (v24 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = (v25 + 23) & 0xFFFFFFFFFFFFFFF8;
  v27 = *(unsigned __int8 *)(v15 + 80);
  v73 = (char *)(v27 + 16);
  v28 = (v26 + v27 + 16) & ~v27;
  v81 = v16;
  v29 = v23;
  v72 = v27;
  v74 = v23 | v27 | 7;
  v30 = swift_allocObject();
  v31 = v30 + v24;
  v32 = v89;
  v33 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  v77 = v20;
  v82 = v17;
  v76 = v33;
  v33((char *)v31, v20, v17);
  v34 = (uint64_t *)(v30 + v25);
  v35 = v83;
  v36 = v84;
  *v34 = v90;
  v34[1] = v32;
  v37 = (uint64_t *)(v30 + v26);
  *v37 = v91;
  v37[1] = v36;
  v38 = v30 + v28;
  v39 = v88;
  v40 = *(void (**)(uint64_t))(v15 + 32);
  v41 = v35;
  v40(v38);
  v97 = (uint64_t (*)(uint64_t))sub_18F9F91C4;
  v98 = (_QWORD *)v30;
  aBlock = MEMORY[0x1E0C809B0];
  v94 = 1107296256;
  v95 = sub_18F9EDFC8;
  v96 = &block_descriptor_0;
  v42 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  v43 = v36;
  swift_bridgeObjectRetain();
  swift_release();
  v44 = objc_msgSend(v85, sel_remoteObjectProxyWithErrorHandler_, v42);
  _Block_release(v42);
  sub_18FA28720();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE180EF0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v70 = a12;
    v69 = a11;
    v85 = a10;
    v71 = (void (*)(char *, char *, uint64_t))v40;
    v45 = ~v72;
    v72 = v92;
    swift_unknownObjectRetain();
    v80 = sub_18FA28330();
    v46 = v77;
    v47 = v82;
    v79(v77, v86, v82);
    v78(v41, v87, v39);
    v48 = (v29 + 40) & ~v29;
    v49 = (v48 + v75) & 0xFFFFFFFFFFFFFFF8;
    v50 = (v49 + 23) & 0xFFFFFFFFFFFFFFF8;
    v51 = v43;
    v52 = (unint64_t)&v73[v50] & v45;
    v53 = (char *)swift_allocObject();
    v54 = v69;
    *((_QWORD *)v53 + 2) = v85;
    *((_QWORD *)v53 + 3) = v54;
    *((_QWORD *)v53 + 4) = v70;
    v76(&v53[v48], v46, v47);
    v55 = (uint64_t *)&v53[v49];
    v56 = v89;
    *v55 = v90;
    v55[1] = v56;
    v57 = (uint64_t *)&v53[v50];
    *v57 = v91;
    v57[1] = v51;
    v71(&v53[v52], v41, v88);
    v97 = sub_18F9F922C;
    v98 = v53;
    aBlock = MEMORY[0x1E0C809B0];
    v94 = 1107296256;
    v95 = sub_18F9EE44C;
    v96 = &block_descriptor_118;
    v58 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v59 = v85;
    swift_bridgeObjectRetain();
    swift_release();
    v60 = (void *)v80;
    objc_msgSend((id)v72, sel_invalidateFor_reply_, v80, v58);
    _Block_release(v58);

    return swift_unknownObjectRelease_n();
  }
  else
  {
    v63 = v90;
    v62 = v91;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v64 = sub_18FA281EC();
    v65 = sub_18FA28648();
    if (os_log_type_enabled(v64, v65))
    {
      v66 = swift_slowAlloc();
      v67 = swift_slowAlloc();
      aBlock = v67;
      *(_DWORD *)v66 = 136446466;
      swift_bridgeObjectRetain();
      v92 = sub_18F9DE1F0(v63, v32, &aBlock);
      sub_18FA286E4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v66 + 12) = 2082;
      swift_bridgeObjectRetain();
      v92 = sub_18F9DE1F0(v62, v36, &aBlock);
      sub_18FA286E4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_18F8BD000, v64, v65, "Failed due to some XPC connection error with extension %{public}s for %{public}s app, extension proxy might not conform to CNContactProviderExtensionXPCProtocol.", (uint8_t *)v66, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x194006DBC](v67, -1, -1);
      MEMORY[0x194006DBC](v66, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    type metadata accessor for CNError(0);
    v92 = 1;
    sub_18F9F69A8(MEMORY[0x1E0DEE9D8]);
    sub_18F9F91E0();
    sub_18FA28018();
    v92 = aBlock;
    return sub_18FA28528();
  }
}

uint64_t sub_18F9F62EC(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v22;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = a1;
  v13 = sub_18FA281EC();
  v14 = sub_18FA28648();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v16 = swift_slowAlloc();
    v22 = v16;
    *(_DWORD *)v15 = 136446722;
    swift_bridgeObjectRetain();
    sub_18F9DE1F0(a3, a4, &v22);
    sub_18FA286E4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v15 + 12) = 2082;
    swift_bridgeObjectRetain();
    sub_18F9DE1F0(a5, a6, &v22);
    sub_18FA286E4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v15 + 22) = 2082;
    v17 = a1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE180DF8);
    v18 = sub_18FA28384();
    sub_18F9DE1F0(v18, v19, &v22);
    sub_18FA286E4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_18F8BD000, v13, v14, "Failed to create remote object proxy for extension %{public}s for %{public}s app, error = %{public}s", (uint8_t *)v15, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x194006DBC](v16, -1, -1);
    MEMORY[0x194006DBC](v15, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

  }
  v22 = (uint64_t)a1;
  v20 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE180EE8);
  return sub_18FA28528();
}

uint64_t sub_18F9F6584(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, unint64_t a9)
{
  id v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;

  sub_18F9F7544(a3, a4);
  if (a1)
  {
    v13 = a1;
    v14 = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = sub_18FA281EC();
    v17 = sub_18FA28648();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      v24 = v19;
      *(_DWORD *)v18 = 136446722;
      swift_bridgeObjectRetain();
      sub_18F9DE1F0(a6, a7, &v24);
      sub_18FA286E4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v18 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_18F9DE1F0(a8, a9, &v24);
      sub_18FA286E4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v18 + 22) = 2082;
      v20 = a1;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE180DF8);
      v21 = sub_18FA28384();
      sub_18F9DE1F0(v21, v22, &v24);
      sub_18FA286E4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_18F8BD000, v16, v17, "Failed to invalidate extension %{public}s for %{public}s app, error = %{public}s", (uint8_t *)v18, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x194006DBC](v19, -1, -1);
      MEMORY[0x194006DBC](v18, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

    }
    v24 = (uint64_t)a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE180EE8);
    return sub_18FA28528();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE180EE8);
    return sub_18FA28534();
  }
}

id CNContactProviderSupportHost.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id CNContactProviderSupportHost.init()()
{
  char *v0;
  char *v1;
  objc_super v3;

  *(_QWORD *)&v0[OBJC_IVAR____TtC8Contacts28CNContactProviderSupportHost____lazy_storage___contactStore] = 0;
  v1 = &v0[OBJC_IVAR____TtC8Contacts28CNContactProviderSupportHost_ContactProviderErrorDomain];
  *(_QWORD *)v1 = 0xD000000000000024;
  *((_QWORD *)v1 + 1) = 0x800000018FA50350;
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for CNContactProviderSupportHost();
  return objc_msgSendSuper2(&v3, sel_init);
}

id CNContactProviderSupportHost.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CNContactProviderSupportHost();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_18F9F69A8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EB10);
  v2 = sub_18FA288E8();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_18F9F9238(v6, (uint64_t)&v15);
    v7 = v15;
    v8 = v16;
    result = sub_18F9F6AD0(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_18F9DFD48(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_18F9F6AD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_18FA28A08();
  sub_18FA28390();
  v4 = sub_18FA28A14();
  return sub_18F9F6B34(a1, a2, v4);
}

unint64_t sub_18F9F6B34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v15;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_18FA2896C() & 1) == 0)
    {
      v12 = ~v5;
      i = (i + 1) & v12;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v13 = (_QWORD *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_18FA2896C() & 1) == 0)
        {
          for (i = (i + 1) & v12; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v12)
          {
            v15 = (_QWORD *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2)
              break;
            if ((sub_18FA2896C() & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_18F9F6C78(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_18F9F6C98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17E7D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_18F9F6CE0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17E7D8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_18F9F6D20(uint64_t a1)
{
  uint64_t v1;

  return sub_18F9ED798(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(void **)(v1 + 72), *(_QWORD *)(v1 + 80), *(void **)(v1 + 88));
}

uint64_t sub_18F9F6D5C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[8] = a1;
  v2[9] = a2;
  v3 = sub_18FA28204();
  v2[10] = v3;
  v2[11] = *(_QWORD *)(v3 - 8);
  v2[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_18F9F6DE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  unint64_t v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  unsigned __int8 v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  id v30;
  _QWORD *v31;
  id v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  NSObject *v38;
  os_log_type_t v39;
  _BOOL4 v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48[2];

  v48[1] = *MEMORY[0x1E0C80C00];
  if (qword_1EE180A00 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1EE1835D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v2, v4, v3);
  swift_bridgeObjectRetain_n();
  v5 = sub_18FA281EC();
  v6 = sub_18FA28654();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_QWORD *)(v0 + 72);
  if (v7)
  {
    v9 = *(_QWORD *)(v0 + 64);
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v48[0] = v11;
    *(_DWORD *)v10 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 56) = sub_18F9DE1F0(v9, v8, v48);
    sub_18FA286E4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_18F8BD000, v5, v6, "Will terminate extension %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194006DBC](v11, -1, -1);
    MEMORY[0x194006DBC](v10, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  v12 = (void *)sub_18FA28330();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend((id)objc_opt_self(), sel_predicateMatchingBundleIdentifier_, v12);
  *(_QWORD *)(v0 + 104) = v13;

  v14 = (void *)objc_opt_self();
  *(_QWORD *)(v0 + 16) = 0;
  v15 = v13;
  v16 = objc_msgSend(v14, sel_handleForPredicate_error_, v15, v0 + 16);
  *(_QWORD *)(v0 + 112) = v16;
  v17 = *(void **)(v0 + 16);
  if (v16)
  {
    v18 = v16;
    v19 = v17;

    v20 = objc_allocWithZone(MEMORY[0x1E0D87E00]);
    v21 = (void *)sub_18FA28330();
    v22 = objc_msgSend(v20, sel_initWithExplanation_, v21);
    *(_QWORD *)(v0 + 120) = v22;

    v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D87E08]), sel_initWithPredicate_context_, v15, v22);
    *(_QWORD *)(v0 + 128) = v23;
    *(_QWORD *)(v0 + 48) = 0;
    v24 = objc_msgSend(v23, sel_execute_, v0 + 48);
    v25 = *(void **)(v0 + 48);
    if ((v24 & 1) != 0)
    {
      v26 = *(_QWORD *)(v0 + 96);
      v28 = *(_QWORD *)(v0 + 64);
      v27 = *(_QWORD *)(v0 + 72);
      v29 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 136) = v29;
      v29[2] = v18;
      v29[3] = v26;
      v29[4] = v28;
      v29[5] = v27;
      v30 = v25;
      v31 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 144) = v31;
      *v31 = v0;
      v31[1] = sub_18F9F742C;
      return sub_18FA28960();
    }
    v35 = v25;
    v34 = (void *)sub_18FA28030();

    swift_willThrow();
  }
  else
  {
    v33 = v17;
    v34 = (void *)sub_18FA28030();

    swift_willThrow();
    v22 = v15;
  }

  swift_bridgeObjectRetain();
  v36 = v34;
  swift_bridgeObjectRetain();
  v37 = v34;
  v38 = sub_18FA281EC();
  v39 = sub_18FA28648();
  v40 = os_log_type_enabled(v38, v39);
  v41 = *(_QWORD *)(v0 + 72);
  if (v40)
  {
    v42 = *(_QWORD *)(v0 + 64);
    v43 = swift_slowAlloc();
    v44 = swift_slowAlloc();
    v48[0] = v44;
    *(_DWORD *)v43 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 24) = sub_18F9DE1F0(v42, v41, v48);
    sub_18FA286E4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v43 + 12) = 2082;
    *(_QWORD *)(v0 + 32) = v34;
    v45 = v34;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE180DF8);
    v46 = sub_18FA28384();
    *(_QWORD *)(v0 + 40) = sub_18F9DE1F0(v46, v47, v48);
    sub_18FA286E4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_18F8BD000, v38, v39, "Failed to terminate extension %{public}s, error = %{public}s", (uint8_t *)v43, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x194006DBC](v44, -1, -1);
    MEMORY[0x194006DBC](v43, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18F9F742C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_18F9F74B4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 120);
  v2 = *(void **)(v0 + 128);
  v3 = *(void **)(v0 + 112);

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18F9F7544(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  _BYTE v17[16];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17E7D8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v9 = &v17[-v8];
  v10 = sub_18FA281E0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = &v17[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1EE17E7E8 != -1)
    swift_once();
  v14 = qword_1EE17E7E0;
  v15 = (os_unfair_lock_s *)(*(_QWORD *)(qword_1EE17E7E0 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_lock)
                           + 16);
  os_unfair_lock_lock(v15);
  sub_18FA0985C(v14, a1, a2, (uint64_t)v7);
  os_unfair_lock_unlock(v15);
  sub_18F9F6C98((uint64_t)v7, (uint64_t)v9);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    return sub_18F9F6CE0((uint64_t)v9);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 32))(v13, v9, v10);
  sub_18FA09C84();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_18F9F76EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  os_unfair_lock_s *v19;
  uint64_t v20;
  unint64_t v21;
  char *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v32 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17E7D8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v30 - v7;
  v9 = sub_18FA281E0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_18FA28204();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE180A00 != -1)
    swift_once();
  v17 = __swift_project_value_buffer(v13, (uint64_t)qword_1EE1835D8);
  v33 = v14;
  v34 = v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  if (qword_1EE17E7E8 != -1)
    swift_once();
  v18 = qword_1EE17E7E0;
  v19 = (os_unfair_lock_s *)(*(_QWORD *)(qword_1EE17E7E0 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_lock)
                           + 16);
  os_unfair_lock_lock(v19);
  v31 = a1;
  v20 = a1;
  v21 = v32;
  sub_18FA0985C(v18, v20, v32, (uint64_t)v6);
  os_unfair_lock_unlock(v19);
  sub_18F9F6C98((uint64_t)v6, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_18F9F6CE0((uint64_t)v8);
    swift_bridgeObjectRetain_n();
    v22 = v34;
    v23 = sub_18FA281EC();
    v24 = sub_18FA28648();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      v36 = v26;
      *(_DWORD *)v25 = 136446210;
      v22 = v34;
      swift_bridgeObjectRetain();
      v35 = sub_18F9DE1F0(v31, v21, &v36);
      sub_18FA286E4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_18F8BD000, v23, v24, "Extension not found for %{public}s", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x194006DBC](v26, -1, -1);
      MEMORY[0x194006DBC](v25, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v28 = v33;
    sub_18F9E000C(0, &qword_1EE17EAF8);
    v27 = sub_18FA28690();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    sub_18FA281D4();
    v27 = sub_18FA28510();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v28 = v33;
    v22 = v34;
  }
  (*(void (**)(char *, uint64_t))(v28 + 8))(v22, v13);
  return v27;
}

uint64_t sub_18F9F7A98(uint64_t a1, uint64_t a2, char a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v5 + 48) = a2;
  *(_QWORD *)(v5 + 56) = v4;
  *(_BYTE *)(v5 + 137) = a4;
  *(_BYTE *)(v5 + 136) = a3;
  *(_QWORD *)(v5 + 40) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EE20);
  *(_QWORD *)(v5 + 64) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17E7D8);
  *(_QWORD *)(v5 + 72) = swift_task_alloc();
  *(_QWORD *)(v5 + 80) = swift_task_alloc();
  v6 = sub_18FA281E0();
  *(_QWORD *)(v5 + 88) = v6;
  *(_QWORD *)(v5 + 96) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 104) = swift_task_alloc();
  v7 = sub_18FA28204();
  *(_QWORD *)(v5 + 112) = v7;
  *(_QWORD *)(v5 + 120) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 128) = swift_task_alloc();
  return swift_task_switch();
}

id sub_18F9F7B84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_unfair_lock_s *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  unint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  NSObject *v30;
  _BOOL4 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(void);
  int v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  os_log_type_t type;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61[2];

  if (qword_1EE180A00 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1EE1835D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  if (qword_1EE17E7E8 != -1)
    swift_once();
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 48);
  v7 = qword_1EE17E7E0;
  v8 = *(os_unfair_lock_s **)(qword_1EE17E7E0 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_lock);
  v9 = (_QWORD *)swift_task_alloc();
  v9[2] = v7;
  v9[3] = v5;
  v9[4] = v6;
  v10 = swift_task_alloc();
  *(_QWORD *)(v10 + 16) = sub_18F9F987C;
  *(_QWORD *)(v10 + 24) = v9;
  os_unfair_lock_lock(v8 + 4);
  (*(void (**)(void))(v10 + 16))();
  os_unfair_lock_unlock(v8 + 4);
  swift_task_dealloc();
  v11 = *(_QWORD *)(v0 + 88);
  v12 = *(_QWORD *)(v0 + 96);
  v14 = *(_QWORD *)(v0 + 72);
  v13 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc();
  sub_18F9F6C98(v14, v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v13, 1, v11) != 1)
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 32))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
    v21 = _s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0();
    v23 = v22;
    v24 = _AppExtensionIdentity.appDisplayName.getter();
    v26 = v25;
    v27 = _AppExtensionIdentity.containerProviderIdentifier.getter();
    v29 = v28;
    if ((sub_18FA281D4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v30 = sub_18FA281EC();
      type = sub_18FA28648();
      v31 = os_log_type_enabled(v30, type);
      v33 = *(_QWORD *)(v0 + 120);
      v32 = *(_QWORD *)(v0 + 128);
      v34 = *(_QWORD *)(v0 + 112);
      v57 = *(_QWORD *)(v0 + 96);
      v58 = *(_QWORD *)(v0 + 88);
      v59 = *(_QWORD *)(v0 + 104);
      if (v31)
      {
        v55 = *(_QWORD *)(v0 + 128);
        v35 = swift_slowAlloc();
        v54 = swift_slowAlloc();
        v61[0] = v54;
        *(_DWORD *)v35 = 136446466;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 24) = sub_18F9DE1F0(v21, v23, v61);
        sub_18FA286E4();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v35 + 12) = 2082;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 32) = sub_18F9DE1F0(v24, v26, v61);
        sub_18FA286E4();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_18F8BD000, v30, type, "Extension already enabled %{public}s for %{public}s app", (uint8_t *)v35, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x194006DBC](v54, -1, -1);
        MEMORY[0x194006DBC](v35, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v59, v58);
        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v55, v34);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();

        (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v59, v58);
        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
      }
    }
    else
    {
      sub_18F9F0E6C(*(_BYTE *)(v0 + 136), v24, v26, *(_QWORD *)(v0 + 128), v21, v23);
      sub_18F9F279C(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 128), v21, v23, v24, v26, MEMORY[0x1E0CAA4F0], "Enabled extension %{public}s for %{public}s app", "Failed to enable extension %{public}s for %{public}s app, error = %{public}s");
      v40 = *(_QWORD *)(v0 + 104);
      swift_bridgeObjectRelease();
      sub_18F9F3C2C(v27, v29, v24, v26, v40);
      v42 = *(unsigned __int8 *)(v0 + 137);
      swift_bridgeObjectRelease();
      if (v42 == 1)
      {
        v43 = v24;
        v45 = *(void **)(v0 + 56);
        v44 = *(_QWORD *)(v0 + 64);
        v47 = *(_QWORD *)(v0 + 40);
        v46 = *(_QWORD *)(v0 + 48);
        v48 = sub_18FA28564();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v44, 1, 1, v48);
        v49 = (_QWORD *)swift_allocObject();
        v49[2] = 0;
        v49[3] = 0;
        v49[4] = v47;
        v49[5] = v46;
        v49[6] = v45;
        v49[7] = v43;
        v49[8] = v26;
        swift_bridgeObjectRetain();
        v50 = v45;
        swift_bridgeObjectRetain();
        sub_18FA073CC(v44, (uint64_t)&unk_1EE180EE0, (uint64_t)v49);
        swift_release();
      }
      swift_bridgeObjectRelease();
      v52 = *(_QWORD *)(v0 + 120);
      v51 = *(_QWORD *)(v0 + 128);
      v53 = *(_QWORD *)(v0 + 112);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v51, v53);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v41 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v41();
  }
  sub_18F9F6CE0(*(_QWORD *)(v0 + 80));
  swift_bridgeObjectRetain_n();
  v15 = sub_18FA281EC();
  v16 = sub_18FA28648();
  v17 = os_log_type_enabled(v15, v16);
  v18 = *(_QWORD *)(v0 + 48);
  if (v17)
  {
    v60 = *(_QWORD *)(v0 + 40);
    v19 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v61[0] = v20;
    *(_DWORD *)v19 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 16) = sub_18F9DE1F0(v60, v18, v61);
    sub_18FA286E4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_18F8BD000, v15, v16, "Extension not found for %{public}s", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194006DBC](v20, -1, -1);
    MEMORY[0x194006DBC](v19, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  result = objc_msgSend((id)objc_opt_self(), sel_errorWithCode_, 106);
  if (result)
  {
    v38 = *(_QWORD *)(v0 + 120);
    v37 = *(_QWORD *)(v0 + 128);
    v39 = *(_QWORD *)(v0 + 112);
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v41 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v41();
  }
  __break(1u);
  return result;
}

uint64_t sub_18F9F835C(uint64_t a1)
{
  os_unfair_lock_s *v1;
  os_unfair_lock_s *v2;
  uint64_t v4;

  if (qword_1EE17E7E8 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  v2 = v1 + 4;
  os_unfair_lock_lock(v1 + 4);
  sub_18FA0C470((_QWORD *(*)(uint64_t *__return_ptr))sub_18F9F9844, &v4);
  sub_18F9E000C(0, &qword_1EE17EAF8);
  os_unfair_lock_unlock(v2);
  swift_bridgeObjectRelease();
  return sub_18FA2869C();
}

uint64_t sub_18F9F8454()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  os_unfair_lock_s *v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, unint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;

  v0 = sub_18FA281E0();
  v40 = *(_QWORD *)(v0 - 8);
  v1 = MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE17E7E8 != -1)
    v1 = swift_once();
  MEMORY[0x1E0C80A78](v1);
  *(&v33 - 2) = v4;
  v6 = v5 + 4;
  os_unfair_lock_lock(v5 + 4);
  sub_18FA0C470((_QWORD *(*)(uint64_t *__return_ptr))sub_18F9F90B8, &v41);
  os_unfair_lock_unlock(v6);
  v7 = v41;
  v8 = *(_QWORD *)(v41 + 16);
  if (v8)
  {
    v41 = MEMORY[0x1E0DEE9D8];
    sub_18FA28858();
    v9 = v7 + ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80));
    v10 = *(_QWORD *)(v40 + 72);
    v37 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 16);
    v38 = v10;
    v36 = "ster.ContactProviderExtension";
    v33 = v7;
    v34 = 0x800000018FA4F7A0;
    v35 = MEMORY[0x1E0DEE9B8] + 8;
    v39 = v0;
    v37(v3, v9, v0);
    while (1)
    {
      if (_s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0() == 0xD00000000000002BLL
        && v18 == v34)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
      v19 = sub_18FA2896C();
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0)
      {
        v20 = (void *)sub_18FA281C8();
        if (!v20)
          goto LABEL_16;
        v21 = v20;
        v22 = objc_msgSend(v20, sel_localizedName, v33);

        v23 = sub_18FA2833C();
        v25 = v24;

        v26 = HIBYTE(v25) & 0xF;
        if ((v25 & 0x2000000000000000) == 0)
          v26 = v23 & 0xFFFFFFFFFFFFLL;
        if (!v26)
          break;
      }
LABEL_6:
      _s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0();
      v11 = sub_18FA281D4();
      v12 = objc_allocWithZone((Class)CNContactProviderSupportDomain);
      v13 = (void *)sub_18FA28330();
      v14 = (void *)sub_18FA28330();
      swift_bridgeObjectRelease();
      v15 = (void *)sub_18FA28264();
      v16 = (void *)sub_18FA28330();
      swift_bridgeObjectRelease();
      objc_msgSend(v12, sel_initWithDomainIdentifer_displayName_userInfo_bundleIdentifier_enabled_, v13, v14, v15, v16, v11 & 1);

      v17 = v39;
      (*(void (**)(char *, uint64_t))(v40 + 8))(v3, v39);
      sub_18FA28834();
      sub_18FA28864();
      sub_18FA28870();
      sub_18FA28840();
      v9 += v38;
      if (!--v8)
      {
        v27 = v41;
        swift_bridgeObjectRelease();
        if (!(v27 >> 62))
          goto LABEL_18;
LABEL_22:
        swift_bridgeObjectRetain();
        v30 = sub_18FA288AC();
        swift_bridgeObjectRelease_n();
        return v30;
      }
      v37(v3, v9, v17);
    }
    swift_bridgeObjectRelease();
LABEL_16:
    sub_18FA281B0();
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
  v27 = MEMORY[0x1E0DEE9D8];
  if (MEMORY[0x1E0DEE9D8] >> 62)
    goto LABEL_22;
LABEL_18:
  v28 = v27 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  sub_18FA28978();
  if (swift_dynamicCastMetatype() || (v31 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
  {
LABEL_19:
    swift_bridgeObjectRelease();
  }
  else
  {
    v32 = (_QWORD *)(v28 + 32);
    while (*v32)
    {
      ++v32;
      if (!--v31)
        goto LABEL_19;
    }
    swift_bridgeObjectRelease();
    return v28 | 1;
  }
  return v27;
}

uint64_t type metadata accessor for CNContactProviderSupportHost()
{
  return objc_opt_self();
}

uint64_t method lookup function for CNContactProviderSupportHost()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CNContactProviderSupportHost.providerContainer(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of CNContactProviderSupportHost.synchronize(using:bundleIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  int *v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  v8 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v3) + 0x80);
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_18F9F0E24;
  return v11(a1, a2, a3);
}

uint64_t dispatch thunk of CNContactProviderSupportHost.invalidateExtension(for:bundleIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  int *v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);

  v10 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x88);
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v10 + *v10);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_18F9F9858;
  return v13(a1, a2, a3, a4);
}

uint64_t dispatch thunk of CNContactProviderSupportHost.resetEnumeration(for:bundleIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  int *v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);

  v10 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x90);
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v10 + *v10);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_18F9F9858;
  return v13(a1, a2, a3, a4);
}

uint64_t dispatch thunk of CNContactProviderSupportHost.isExtensionEnabled(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of CNContactProviderSupportHost.enableExtension(for:bundleIdentifier:showPrompt:shouldSynchronize:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  int *v14;
  _QWORD *v15;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v14 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v6) + 0xA8);
  v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v14 + *v14);
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_18F9F9858;
  return v17(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of CNContactProviderSupportHost.disableExtension(for:bundleIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  int *v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);

  v10 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v4) + 0xB0);
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v10 + *v10);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_18F9F9858;
  return v13(a1, a2, a3, a4);
}

uint64_t dispatch thunk of CNContactProviderSupportHost.extensionCount()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of CNContactProviderSupportHost.extensionItems()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t sub_18F9F8C74()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  _QWORD *v6;

  v2 = v0[2];
  v3 = v0[3];
  v5 = (void *)v0[4];
  v4 = (void *)v0[5];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_18F9F9858;
  return ((uint64_t (*)(int, int, void *, void *))((char *)&dword_1EE180E48 + dword_1EE180E48))(v2, v3, v5, v4);
}

uint64_t sub_18F9F8CF4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_18F9F8D30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  _QWORD *v8;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(unsigned __int8 *)(v0 + 32);
  v5 = *(unsigned __int8 *)(v0 + 33);
  v7 = *(void **)(v0 + 40);
  v6 = *(void **)(v0 + 48);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v8;
  *v8 = v1;
  v8[1] = sub_18F9F9858;
  return ((uint64_t (*)(int, int, uint64_t, uint64_t, void *, void *))((char *)&dword_1EE180E58 + dword_1EE180E58))(v2, v3, v4, v5, v7, v6);
}

uint64_t sub_18F9F8DC4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_18F9F9858;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1EE181298 + dword_1EE181298))(v2, v3, v4);
}

uint64_t sub_18F9F8E40(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_18F9F9858;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1EE1812A8 + dword_1EE1812A8))(a1, v4, v5, v6);
}

uint64_t sub_18F9F8EC8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  _QWORD *v6;

  v2 = v0[2];
  v3 = v0[3];
  v5 = (void *)v0[4];
  v4 = (void *)v0[5];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_18F9F9858;
  return ((uint64_t (*)(int, int, void *, void *))((char *)&dword_1EE180E78 + dword_1EE180E78))(v2, v3, v5, v4);
}

uint64_t sub_18F9F8F4C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  _QWORD *v6;

  v2 = v0[2];
  v3 = v0[3];
  v5 = (void *)v0[4];
  v4 = (void *)v0[5];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_18F9F9858;
  return ((uint64_t (*)(int, int, void *, void *))((char *)&dword_1EE180E98 + dword_1EE180E98))(v2, v3, v5, v4);
}

uint64_t objectdestroyTm()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_18F9F900C()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  _QWORD *v6;

  v2 = (void *)v0[2];
  v3 = v0[3];
  v5 = (void *)v0[4];
  v4 = (void *)v0[5];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_18F9F0E24;
  return ((uint64_t (*)(void *, int, void *, void *))((char *)&dword_1EE180EB8 + dword_1EE180EB8))(v2, v3, v5, v4);
}

uint64_t objectdestroy_26Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18F9F90B8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_18FA099F0(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_18F9F90D0()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_18F9F910C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v1 + 16) = v5;
  *(_QWORD *)v5 = v1;
  *(_QWORD *)(v5 + 8) = sub_18F9F9858;
  *(_QWORD *)(v5 + 48) = v3;
  *(_QWORD *)(v5 + 56) = v4;
  *(_OWORD *)(v5 + 32) = v6;
  *(_QWORD *)(v5 + 24) = v2;
  return swift_task_switch();
}

uint64_t sub_18F9F9184(uint64_t a1)
{
  uint64_t v1;

  return sub_18F9F5C58(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(void **)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96));
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

unint64_t sub_18F9F91E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE180AE8;
  if (!qword_1EE180AE8)
  {
    type metadata accessor for CNError(255);
    result = MEMORY[0x194006D14](&unk_18FA40CE0, v1);
    atomic_store(result, (unint64_t *)&qword_1EE180AE8);
  }
  return result;
}

uint64_t sub_18F9F922C(uint64_t a1)
{
  return sub_18F9F968C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, char *, _QWORD, _QWORD, _QWORD, _QWORD, char *))sub_18F9F6584);
}

uint64_t sub_18F9F9238(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EAB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_18F9F9280(uint64_t a1)
{
  uint64_t v1;

  sub_18F9F4F94(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_18F9F928C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_18FA28204();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE180EF8);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_18F9F935C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(sub_18FA28204() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE180EF8);
  return sub_18F9F5170(a1, a2, v2 + v6, *(_QWORD *)(v2 + v7), *(_QWORD *)(v2 + v7 + 8));
}

uint64_t objectdestroy_111Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_18FA28204();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE180EE8);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + v4 + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_18F9F94E0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(sub_18FA28204() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE180EE8);
  return sub_18F9F62EC(a1, v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + v5 + 8), *(_QWORD *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t objectdestroy_114Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_18FA28204();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE180EE8);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + v4 + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);

  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_18F9F9680(uint64_t a1)
{
  return sub_18F9F968C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, char *, _QWORD, _QWORD, _QWORD, _QWORD, char *))sub_18F9EE018);
}

uint64_t sub_18F9F968C(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, char *, _QWORD, _QWORD, _QWORD, _QWORD, char *))
{
  char *v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(sub_18FA28204() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE180EE8) - 8) + 80);
  return a2(a1, *((_QWORD *)v2 + 2), *((_QWORD *)v2 + 3), *((_QWORD *)v2 + 4), &v2[v6], *(_QWORD *)&v2[v7], *(_QWORD *)&v2[v7 + 8], *(_QWORD *)&v2[(v7 + 23) & 0xFFFFFFFFFFFFFFF8], *(_QWORD *)&v2[((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 8], &v2[(v8 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v8]);
}

uint64_t sub_18F9F9740@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_18FA0985C(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_18F9F975C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_18FA28204();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_18F9F97F0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_18FA28204() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_18F9F3A4C(v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_18F9F9844@<X0>(_QWORD *a1@<X8>)
{
  return sub_18F9F90B8(a1);
}

uint64_t sub_18F9F987C@<X0>(uint64_t a1@<X8>)
{
  return sub_18F9F9740(a1);
}

id ManagedDuplicate.__allocating_init(duplicateSet:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_18F9FF5A0(a1);

  return v4;
}

uint64_t sub_18F9F98D0()
{
  uint64_t v0;

  v0 = sub_18FA28204();
  __swift_allocate_value_buffer(v0, qword_1EE180F10);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EE180F10);
  return sub_18FA281F8();
}

uint64_t sub_18F9F9950()
{
  return sub_18F9F9BC0(&OBJC_IVAR___CNManagedDuplicate_signature);
}

uint64_t sub_18F9F995C(uint64_t a1, uint64_t a2)
{
  return sub_18F9F9C1C(a1, a2, &OBJC_IVAR___CNManagedDuplicate_signature);
}

uint64_t (*sub_18F9F9968())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_18F9F99AC()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___CNManagedDuplicate_isAvailable);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_18F9F99F0(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR___CNManagedDuplicate_isAvailable);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_18F9F9A38())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_18F9F9A80()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___CNManagedDuplicate_isIgnored);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_18F9F9AC4(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR___CNManagedDuplicate_isIgnored);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_18F9F9B0C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_18F9F9B50(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v6 = *a1;
  v5 = a1[1];
  v7 = (_QWORD *)(*a2 + *a5);
  swift_beginAccess();
  *v7 = v6;
  v7[1] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_18F9F9BB4()
{
  return sub_18F9F9BC0(&OBJC_IVAR___CNManagedDuplicate_primaryID);
}

uint64_t sub_18F9F9BC0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *a1);
  swift_beginAccess();
  v3 = *v2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_18F9F9C10(uint64_t a1, uint64_t a2)
{
  return sub_18F9F9C1C(a1, a2, &OBJC_IVAR___CNManagedDuplicate_primaryID);
}

uint64_t sub_18F9F9C1C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)(v3 + *a3);
  swift_beginAccess();
  *v6 = a1;
  v6[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_18F9F9C74())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_18F9F9CB8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR___CNManagedDuplicate_managedCohorts);
  swift_beginAccess();
  *v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_18F9F9D20()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_18F9F9D68(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR___CNManagedDuplicate_managedCohorts);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_18F9F9DB8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_18F9F9DFC(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v3 = (uint64_t *)(*a1 + OBJC_IVAR___CNManagedDuplicate_userSelectedContactImage);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = v3[6];
  v11 = v3[7];
  v12 = v3[8];
  v13 = v3[9];
  v14 = v3[10];
  v15 = v3[11];
  v16 = v3[12];
  v17 = v3[13];
  *a2 = *v3;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v7;
  a2[4] = v8;
  a2[5] = v9;
  a2[6] = v10;
  a2[7] = v11;
  a2[8] = v12;
  a2[9] = v13;
  a2[10] = v14;
  a2[11] = v15;
  a2[12] = v16;
  a2[13] = v17;
  sub_18F9EA5F0(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17);
}

__n128 sub_18F9F9E8C(uint64_t *a1, _QWORD *a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __n128 result;
  unint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v19 = a1[1];
  v20 = *a1;
  v17 = a1[3];
  v18 = a1[2];
  v2 = a1[5];
  v16 = a1[4];
  v3 = a1[6];
  v4 = a1[7];
  v6 = a1[8];
  v5 = a1[9];
  v7 = a1[10];
  v8 = a1[11];
  v9 = *a2 + OBJC_IVAR___CNManagedDuplicate_userSelectedContactImage;
  v10 = a1[12];
  v11 = a1[13];
  swift_beginAccess();
  v28 = *(_QWORD *)(v9 + 8);
  v29 = *(_QWORD *)v9;
  v26 = *(_QWORD *)(v9 + 24);
  v27 = *(_QWORD *)(v9 + 16);
  v25 = *(_QWORD *)(v9 + 32);
  v23 = *(_QWORD *)(v9 + 48);
  v24 = *(_QWORD *)(v9 + 40);
  v22 = *(_QWORD *)(v9 + 56);
  v21 = *(_OWORD *)(v9 + 64);
  v15 = *(_OWORD *)(v9 + 80);
  v13 = *(_QWORD *)(v9 + 104);
  v14 = *(_QWORD *)(v9 + 96);
  *(_QWORD *)v9 = v20;
  *(_QWORD *)(v9 + 8) = v19;
  *(_QWORD *)(v9 + 16) = v18;
  *(_QWORD *)(v9 + 24) = v17;
  *(_QWORD *)(v9 + 32) = v16;
  *(_QWORD *)(v9 + 40) = v2;
  *(_QWORD *)(v9 + 48) = v3;
  *(_QWORD *)(v9 + 56) = v4;
  *(_QWORD *)(v9 + 64) = v6;
  *(_QWORD *)(v9 + 72) = v5;
  *(_QWORD *)(v9 + 80) = v7;
  *(_QWORD *)(v9 + 88) = v8;
  *(_QWORD *)(v9 + 96) = v10;
  *(_QWORD *)(v9 + 104) = v11;
  sub_18F9EA5F0(v20, v19, v18, v17, v16, v2, v3, v4, v6, v5, v7, v8, v10, v11);
  sub_18F9EA7D4(v29, v28, v27, v26, v25, v24, v23, v22, v21, *((uint64_t *)&v21 + 1), v15, *((unint64_t *)&v15 + 1), v14, v13);
  return result;
}

void sub_18F9F9FE4(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v3 = (uint64_t *)(v1 + OBJC_IVAR___CNManagedDuplicate_userSelectedContactImage);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = v3[6];
  v11 = v3[7];
  v12 = v3[8];
  v13 = v3[9];
  v14 = v3[10];
  v15 = v3[11];
  v16 = v3[12];
  v17 = v3[13];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v12;
  a1[9] = v13;
  a1[10] = v14;
  a1[11] = v15;
  a1[12] = v16;
  a1[13] = v17;
  sub_18F9EA5F0(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17);
}

void sub_18F9FA070(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  unint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;

  v2 = *a1;
  v3 = a1[3];
  v23 = *((_OWORD *)a1 + 2);
  v24 = *(_OWORD *)(a1 + 1);
  v4 = a1[6];
  v5 = a1[9];
  v21 = *((_OWORD *)a1 + 5);
  v22 = *(_OWORD *)(a1 + 7);
  v6 = a1[12];
  v7 = a1[13];
  v8 = v1 + OBJC_IVAR___CNManagedDuplicate_userSelectedContactImage;
  swift_beginAccess();
  v9 = *(_QWORD *)v8;
  v10 = *(_QWORD *)(v8 + 8);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = *(_QWORD *)(v8 + 24);
  v13 = *(_QWORD *)(v8 + 32);
  v14 = *(_QWORD *)(v8 + 40);
  v15 = *(_QWORD *)(v8 + 48);
  v16 = *(_QWORD *)(v8 + 56);
  v17 = *(_OWORD *)(v8 + 64);
  v18 = *(_OWORD *)(v8 + 80);
  v19 = *(_QWORD *)(v8 + 96);
  v20 = *(_QWORD *)(v8 + 104);
  *(_QWORD *)v8 = v2;
  *(_OWORD *)(v8 + 8) = v24;
  *(_QWORD *)(v8 + 24) = v3;
  *(_OWORD *)(v8 + 32) = v23;
  *(_QWORD *)(v8 + 48) = v4;
  *(_OWORD *)(v8 + 56) = v22;
  *(_QWORD *)(v8 + 72) = v5;
  *(_OWORD *)(v8 + 80) = v21;
  *(_QWORD *)(v8 + 96) = v6;
  *(_QWORD *)(v8 + 104) = v7;
  sub_18F9EA7D4(v9, v10, v11, v12, v13, v14, v15, v16, v17, *((uint64_t *)&v17 + 1), v18, *((unint64_t *)&v18 + 1), v19, v20);
}

uint64_t (*sub_18F9FA14C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_18F9FA190@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;

  v3 = (uint64_t *)(*a1 + OBJC_IVAR___CNManagedDuplicate_userSelectedContactPoster);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  *a2 = *v3;
  a2[1] = v5;
  return sub_18F9EA704(v4, v5);
}

uint64_t sub_18F9FA1E4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;

  v2 = *a1;
  v3 = a1[1];
  v4 = (uint64_t *)(*a2 + OBJC_IVAR___CNManagedDuplicate_userSelectedContactPoster);
  swift_beginAccess();
  v5 = *v4;
  v6 = v4[1];
  *v4 = v2;
  v4[1] = v3;
  sub_18F9EA704(v2, v3);
  return sub_18F9EA8E8(v5, v6);
}

uint64_t sub_18F9FA25C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;

  v3 = (uint64_t *)(v1 + OBJC_IVAR___CNManagedDuplicate_userSelectedContactPoster);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  *a1 = *v3;
  a1[1] = v5;
  return sub_18F9EA704(v4, v5);
}

uint64_t sub_18F9FA2AC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;

  v2 = *a1;
  v3 = a1[1];
  v4 = (uint64_t *)(v1 + OBJC_IVAR___CNManagedDuplicate_userSelectedContactPoster);
  swift_beginAccess();
  v5 = *v4;
  v6 = v4[1];
  *v4 = v2;
  v4[1] = v3;
  return sub_18F9EA8E8(v5, v6);
}

uint64_t (*sub_18F9FA304())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_18F9FA348()
{
  uint64_t v0;
  unint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  char *v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;

  v1 = (unint64_t *)(v0 + OBJC_IVAR___CNManagedDuplicate_managedCohorts);
  swift_beginAccess();
  v2 = *v1;
  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
    if (v3)
      goto LABEL_3;
LABEL_16:
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_17:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v6;
  }
  swift_bridgeObjectRetain_n();
  result = sub_18FA288B8();
  v3 = result;
  if (!result)
    goto LABEL_16;
LABEL_3:
  if (v3 >= 1)
  {
    v5 = 0;
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v8 = (char *)MEMORY[0x194005370](v5, v2);
      else
        v8 = (char *)*(id *)(v2 + 8 * v5 + 32);
      v9 = v8;
      v10 = &v8[OBJC_IVAR___CNManagedCohort_identifier];
      swift_beginAccess();
      v12 = *(_QWORD *)v10;
      v11 = *((_QWORD *)v10 + 1);
      swift_bridgeObjectRetain();

      if (v11)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v6 = sub_18F9FDF34(0, v6[2] + 1, 1, v6);
        v14 = v6[2];
        v13 = v6[3];
        if (v14 >= v13 >> 1)
          v6 = sub_18F9FDF34((_QWORD *)(v13 > 1), v14 + 1, 1, v6);
        v6[2] = v14 + 1;
        v7 = &v6[2 * v14];
        v7[4] = v12;
        v7[5] = v11;
      }
      ++v5;
    }
    while (v3 != v5);
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

id ManagedDuplicate.__allocating_init(contacts:contactStore:)(unint64_t a1, void *a2)
{
  objc_class *v2;
  id v5;
  id v6;

  v5 = objc_allocWithZone(v2);
  v6 = sub_18FA00308(a1, a2);

  return v6;
}

id ManagedDuplicate.init(contacts:contactStore:)(unint64_t a1, void *a2)
{
  id v3;

  v3 = sub_18FA00308(a1, a2);

  return v3;
}

id ManagedDuplicate.__allocating_init(duplicateSetProperties:)(char *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return ManagedDuplicate.init(duplicateSetProperties:)(a1);
}

id ManagedDuplicate.init(duplicateSetProperties:)(char *a1)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _BYTE *v6;
  _BYTE *v7;
  _QWORD *v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  objc_class *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char v27;
  _BYTE *v28;
  char v29;
  uint64_t v30;
  _QWORD *v31;
  objc_super v32;
  uint64_t v33[8];
  uint64_t v34;

  v27 = *a1;
  v29 = a1[1];
  v2 = *((_QWORD *)a1 + 1);
  v3 = *((_QWORD *)a1 + 2);
  v4 = *((_QWORD *)a1 + 4);
  v30 = *((_QWORD *)a1 + 3);
  v5 = &v1[OBJC_IVAR___CNManagedDuplicate_signature];
  *v5 = 0;
  v5[1] = 0;
  v6 = &v1[OBJC_IVAR___CNManagedDuplicate_isAvailable];
  v1[OBJC_IVAR___CNManagedDuplicate_isAvailable] = 1;
  v7 = &v1[OBJC_IVAR___CNManagedDuplicate_isIgnored];
  v1[OBJC_IVAR___CNManagedDuplicate_isIgnored] = 0;
  v8 = &v1[OBJC_IVAR___CNManagedDuplicate_primaryID];
  *v8 = 0;
  v8[1] = 0;
  v9 = MEMORY[0x1E0DEE9D8];
  v31 = &v1[OBJC_IVAR___CNManagedDuplicate_managedCohorts];
  *(_QWORD *)&v1[OBJC_IVAR___CNManagedDuplicate_managedCohorts] = MEMORY[0x1E0DEE9D8];
  v10 = &v1[OBJC_IVAR___CNManagedDuplicate_userSelectedContactImage];
  *v10 = xmmword_18FA410A0;
  v10[1] = 0u;
  v10[2] = 0u;
  v10[3] = 0u;
  v10[4] = 0u;
  v10[5] = 0u;
  v10[6] = 0u;
  *(_OWORD *)&v1[OBJC_IVAR___CNManagedDuplicate_userSelectedContactPoster] = xmmword_18FA411C0;
  *(_QWORD *)&v1[OBJC_IVAR___CNManagedDuplicate__contactStore] = 0;
  v11 = *((_QWORD *)a1 + 5);
  *(_QWORD *)&v1[OBJC_IVAR___CNManagedDuplicate__privateContacts] = v9;
  *(_QWORD *)&v1[OBJC_IVAR___CNManagedDuplicate__privateMergedContact] = 0;
  v12 = &v1[OBJC_IVAR___CNManagedDuplicate__mergedNameComponents];
  v13 = sub_18FA27FB8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  swift_beginAccess();
  *v5 = v2;
  v5[1] = v3;
  v14 = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *v6 = v27;
  swift_beginAccess();
  *v7 = v29;
  swift_beginAccess();
  *v8 = v30;
  v8[1] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v11 + 16);
  if (v15)
  {
    v28 = v14;
    v34 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_18FA28858();
    v16 = (objc_class *)type metadata accessor for ManagedCohort();
    v17 = (uint64_t *)(v11 + 48);
    do
    {
      v18 = *(v17 - 1);
      v19 = *v17;
      v20 = v17[1];
      v22 = v17[2];
      v21 = v17[3];
      v23 = v17[4];
      v24 = v17[5];
      v33[0] = *(v17 - 2);
      v33[1] = v18;
      v33[2] = v19;
      v33[3] = v20;
      v33[4] = v22;
      v33[5] = v21;
      v33[6] = v23;
      v33[7] = v24;
      objc_allocWithZone(v16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_18F9EA6C0(v22, v21);
      sub_18F9EA6C0(v23, v24);
      ManagedCohort.init(duplicateCohortProperties:)(v33);
      sub_18FA28834();
      sub_18FA28864();
      sub_18FA28870();
      sub_18FA28840();
      v17 += 8;
      --v15;
    }
    while (v15);
    v25 = v34;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14 = v28;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v25 = MEMORY[0x1E0DEE9D8];
  }
  swift_beginAccess();
  *v31 = v25;

  swift_bridgeObjectRelease();
  v32.receiver = v14;
  v32.super_class = (Class)type metadata accessor for ManagedDuplicate();
  return objc_msgSendSuper2(&v32, sel_init);
}

id ManagedDuplicate.init(duplicateSet:)(void *a1)
{
  id v2;

  v2 = sub_18F9FF5A0(a1);

  return v2;
}

void sub_18F9FA93C(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v4 = objc_msgSend(a1, sel_selectedContactImage);
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, sel_cropRectString);
    if (v6)
    {
      v7 = v6;
      v8 = sub_18FA2833C();
      v45 = v9;
      v46 = v8;

    }
    else
    {
      v45 = 0;
      v46 = 0;
    }
    v10 = objc_msgSend(v5, sel_fullscreenImageData);
    if (v10)
    {
      v11 = v10;
      v12 = sub_18FA280A8();
      v43 = v13;
      v44 = v12;

    }
    else
    {
      v43 = 0xF000000000000000;
      v44 = 0;
    }
    v14 = objc_msgSend(v5, sel_imageData);
    if (v14)
    {
      v15 = v14;
      v16 = sub_18FA280A8();
      v41 = v17;
      v42 = v16;

    }
    else
    {
      v41 = 0xF000000000000000;
      v42 = 0;
    }
    v18 = objc_msgSend(v5, sel_imageHash);
    if (v18)
    {
      v19 = v18;
      v20 = sub_18FA280A8();
      v37 = v21;
      v39 = v20;

    }
    else
    {
      v37 = 0xF000000000000000;
      v39 = 0;
    }
    v22 = objc_msgSend(v5, sel_imageType, v37, v39);
    if (v22)
    {
      v23 = v22;
      v24 = sub_18FA2833C();
      v26 = v25;

    }
    else
    {
      v24 = 0;
      v26 = 0;
    }
    v27 = objc_msgSend(v5, sel_memojiMetadata);
    if (v27)
    {
      v28 = v27;
      v29 = sub_18FA280A8();
      v31 = v30;

    }
    else
    {
      v29 = 0;
      v31 = 0xF000000000000000;
    }
    v32 = objc_msgSend(v5, sel_thumbnailImageData);
    if (v32)
    {
      v33 = v32;
      v34 = sub_18FA280A8();
      v36 = v35;

    }
    else
    {

      v34 = 0;
      v36 = 0xF000000000000000;
    }
    *a2 = v46;
    a2[1] = v45;
    a2[2] = v44;
    a2[3] = v43;
    a2[4] = v42;
    a2[5] = v41;
    a2[6] = v40;
    a2[7] = v38;
    a2[8] = v24;
    a2[9] = v26;
    a2[10] = v29;
    a2[11] = v31;
    a2[12] = v34;
    a2[13] = v36;
  }
  else
  {

    *(_OWORD *)a2 = xmmword_18FA410A0;
    *((_OWORD *)a2 + 1) = 0u;
    *((_OWORD *)a2 + 2) = 0u;
    *((_OWORD *)a2 + 3) = 0u;
    *((_OWORD *)a2 + 4) = 0u;
    *((_OWORD *)a2 + 5) = 0u;
    *((_OWORD *)a2 + 6) = 0u;
  }
}

uint64_t sub_18F9FAB9C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  if ((sub_18F9FB800() & 1) != 0)
    sub_18F9FC7E8();
  *a2 = *(_QWORD *)(v3 + OBJC_IVAR___CNManagedDuplicate__privateContacts);
  return swift_bridgeObjectRetain();
}

uint64_t sub_18F9FABD8()
{
  if ((sub_18F9FB800() & 1) != 0)
    sub_18F9FC7E8();
  return swift_bridgeObjectRetain();
}

uint64_t sub_18F9FAC00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  v2 = v1;
  v3 = OBJC_IVAR___CNManagedDuplicate__privateContacts;
  *(_QWORD *)(v2 + OBJC_IVAR___CNManagedDuplicate__privateContacts) = a1;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v2 + v3);
  if (!(v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease();
    v11 = MEMORY[0x1E0DEE9D8];
LABEL_12:
    v12 = (_QWORD *)(v2 + OBJC_IVAR___CNManagedDuplicate_managedCohorts);
    swift_beginAccess();
    *v12 = v11;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  v5 = sub_18FA288B8();
  if (!v5)
    goto LABEL_11;
LABEL_3:
  v13 = MEMORY[0x1E0DEE9D8];
  result = sub_18FA28858();
  if ((v5 & 0x8000000000000000) == 0)
  {
    v7 = 0;
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x194005370](v7, v4);
      else
        v8 = *(id *)(v4 + 8 * v7 + 32);
      v9 = v8;
      ++v7;
      v10 = objc_allocWithZone((Class)type metadata accessor for ManagedCohort());
      sub_18FA06B94(v9);

      sub_18FA28834();
      sub_18FA28864();
      sub_18FA28870();
      sub_18FA28840();
    }
    while (v5 != v7);
    v11 = v13;
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_18F9FAD94(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  if ((sub_18F9FB800() & 1) != 0)
    sub_18F9FC7E8();
  *a1 = *(_QWORD *)(v1 + OBJC_IVAR___CNManagedDuplicate__privateContacts);
  swift_bridgeObjectRetain();
  return sub_18F9FADE4;
}

uint64_t sub_18F9FADE4(uint64_t *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) == 0)
    return sub_18F9FAC00(*a1);
  v2 = swift_bridgeObjectRetain();
  sub_18F9FAC00(v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_18F9FAE28()
{
  char *v0;
  unint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;
  char *v6;
  uint64_t v7;

  if ((sub_18F9FB800() & 1) != 0)
    sub_18F9FC7E8();
  v1 = *(_QWORD *)&v0[OBJC_IVAR___CNManagedDuplicate__privateContacts];
  if ((v1 & 0x8000000000000000) != 0 || (v1 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain_n();
    v6 = v0;
    v2 = (uint64_t)sub_18F9E8438(v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
    v3 = v0;
  }
  v7 = v2;
  v4 = v0;
  sub_18FA01990(&v7, v4);
  swift_bridgeObjectRelease();

  return v7;
}

void *sub_18F9FAEF4()
{
  char *v0;
  unint64_t v1;
  uint64_t v2;
  char *i;
  char *v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  char *v15;
  char *v17;

  if ((sub_18F9FB800() & 1) != 0)
    sub_18F9FC7E8();
  v1 = *(_QWORD *)&v0[OBJC_IVAR___CNManagedDuplicate__privateContacts];
  if (v1 >> 62)
    goto LABEL_24;
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (i = v0; v2; v2 = sub_18FA288B8())
  {
    v17 = v0;
    v4 = &v0[OBJC_IVAR___CNManagedDuplicate_primaryID];
    swift_beginAccess();
    v5 = 4;
    while (1)
    {
      v6 = (v1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x194005370](v5 - 4, v1) : *(id *)(v1 + 8 * v5);
      v7 = v6;
      v0 = (char *)(v5 - 3);
      if (__OFADD__(v5 - 4, 1))
        break;
      v8 = objc_msgSend(v6, sel_identifier);
      v9 = sub_18FA2833C();
      v11 = v10;

      v12 = *((_QWORD *)v4 + 1);
      if (v12)
      {
        if (v9 == *(_QWORD *)v4 && v12 == v11)
        {

          swift_bridgeObjectRelease();
LABEL_22:
          swift_bridgeObjectRelease();
          goto LABEL_27;
        }
        v14 = sub_18FA2896C();
        swift_bridgeObjectRelease();
        if ((v14 & 1) != 0)
        {

          goto LABEL_22;
        }

      }
      else
      {

        swift_bridgeObjectRelease();
      }
      ++v5;
      if (v0 == (char *)v2)
      {

        goto LABEL_26;
      }
    }
    __break(1u);
LABEL_24:
    swift_bridgeObjectRetain_n();
    v15 = v0;
  }

LABEL_26:
  swift_bridgeObjectRelease();
  v7 = 0;
LABEL_27:
  swift_bridgeObjectRelease();
  return v7;
}

id sub_18F9FB0D4()
{
  char *v0;
  uint64_t v1;
  void *v2;
  char *v3;
  uint64_t inited;
  __objc2_meth_list **p_opt_class_meths;
  unint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v26;
  id v27;
  char *v28;
  unint64_t v29;
  unint64_t v30;

  v1 = OBJC_IVAR___CNManagedDuplicate__privateMergedContact;
  v2 = *(void **)&v0[OBJC_IVAR___CNManagedDuplicate__privateMergedContact];
  if (v2)
    goto LABEL_14;
  v3 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE180F80);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FA40F90;
  if ((sub_18F9FB800() & 1) != 0)
    sub_18F9FC7E8();
  p_opt_class_meths = &OBJC_PROTOCOL___CNVCardPerson.opt_class_meths;
  v6 = *(_QWORD *)&v0[OBJC_IVAR___CNManagedDuplicate__privateContacts];
  if ((v6 & 0x8000000000000000) != 0 || (v6 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain_n();
    v26 = v3;
    v7 = (uint64_t)sub_18F9E8438(v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
    v8 = v3;
  }
  v29 = v7;
  v9 = v3;
  sub_18FA01990((uint64_t *)&v29, (void *)v9);
  swift_bridgeObjectRelease();

  type metadata accessor for DuplicateContacts();
  *(_QWORD *)(inited + 32) = v29;
  v10 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), sel_init);
  sub_18F9E2A74(inited, v10, (uint64_t *)&v29);

  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EAC8);
  swift_arrayDestroy();
  v11 = v29;
  v12 = v30;
  if (v30 >> 62)
    goto LABEL_38;
  v13 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v13)
    goto LABEL_9;
LABEL_13:
  swift_bridgeObjectRelease();
  v15 = *(void **)&v3[v1];
  *(_QWORD *)&v3[v1] = v13;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v2 = *(void **)&v3[v1];
  if (v2)
  {
LABEL_14:
    v16 = v2;
  }
  else
  {
    if ((sub_18F9FB800() & 1) != 0)
      sub_18F9FC7E8();
    v11 = *(unint64_t *)((char *)p_opt_class_meths[493] + v9);
    v28 = (char *)v9;
    if (v11 >> 62)
    {
      while (1)
      {
        swift_bridgeObjectRetain_n();
        v27 = (id)v9;
        v12 = sub_18FA288B8();
        if (!v12)
          goto LABEL_44;
LABEL_20:
        v3 = &v28[OBJC_IVAR___CNManagedDuplicate_primaryID];
        swift_beginAccess();
        v9 = 4;
        while (1)
        {
          v20 = (v11 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x194005370](v9 - 4, v11)
              : *(id *)(v11 + 8 * v9);
          v16 = v20;
          v21 = v9 - 3;
          if (__OFADD__(v9 - 4, 1))
            break;
          p_opt_class_meths = (__objc2_meth_list **)objc_msgSend(v20, sel_identifier);
          v1 = sub_18FA2833C();
          v23 = v22;

          v24 = *((_QWORD *)v3 + 1);
          if (v24)
          {
            if (v1 == *(_QWORD *)v3 && v24 == v23)
            {

              swift_bridgeObjectRelease();
LABEL_36:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_45;
            }
            v1 = sub_18FA2896C();
            swift_bridgeObjectRelease();
            if ((v1 & 1) != 0)
            {

              goto LABEL_36;
            }

          }
          else
          {

            swift_bridgeObjectRelease();
          }
          ++v9;
          if (v21 == v12)
            goto LABEL_44;
        }
        __break(1u);
LABEL_38:
        swift_bridgeObjectRetain();
        v13 = sub_18FA288B8();
        if (!v13)
          goto LABEL_13;
LABEL_9:
        if ((v12 & 0xC000000000000001) != 0)
          break;
        if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v14 = *(id *)(v12 + 32);
LABEL_12:
          v13 = (uint64_t)v14;
          goto LABEL_13;
        }
        __break(1u);
      }
      v14 = (id)MEMORY[0x194005370](0, v12);
      goto LABEL_12;
    }
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    v19 = (id)v9;
    if (v12)
      goto LABEL_20;
LABEL_44:

    swift_bridgeObjectRelease_n();
    v16 = objc_msgSend(objc_allocWithZone((Class)CNMutableContact), sel_init);
LABEL_45:
    v2 = 0;
  }
  v17 = v2;
  return v16;
}

uint64_t sub_18F9FB4DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _BYTE v14[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE180F90);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v14[-v7];
  v9 = v1 + OBJC_IVAR___CNManagedDuplicate__mergedNameComponents;
  swift_beginAccess();
  sub_18FA01A2C(v9, (uint64_t)v8);
  v10 = sub_18FA27FB8();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_18F9DFD58((uint64_t)v8, (uint64_t *)&unk_1EE180F90);
  if ((sub_18F9FB800() & 1) != 0)
    sub_18F9FC7E8();
  type metadata accessor for DuplicateContacts();
  v12 = swift_bridgeObjectRetain();
  sub_18F9E67BC(v12);
  swift_bridgeObjectRelease();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v6, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess();
  sub_18FA01A74((uint64_t)v6, v9);
  return swift_endAccess();
}

uint64_t sub_18F9FB680()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___CNManagedDuplicate__privateContacts);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRetain();
  v2 = sub_18FA288B8();
  if (!v2)
    goto LABEL_13;
LABEL_3:
  v15 = MEMORY[0x1E0DEE9D8];
  result = sub_18F9DE90C(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = 0;
    v5 = v15;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x194005370](v4, v1);
      else
        v6 = *(id *)(v1 + 8 * v4 + 32);
      v7 = v6;
      v8 = objc_msgSend(v6, sel_identifier);
      v9 = sub_18FA2833C();
      v11 = v10;

      v13 = *(_QWORD *)(v15 + 16);
      v12 = *(_QWORD *)(v15 + 24);
      if (v13 >= v12 >> 1)
        sub_18F9DE90C(v12 > 1, v13 + 1, 1);
      ++v4;
      *(_QWORD *)(v15 + 16) = v13 + 1;
      v14 = v15 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v9;
      *(_QWORD *)(v14 + 40) = v11;
    }
    while (v2 != v4);
    swift_bridgeObjectRelease();
    return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_18F9FB800()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  char *v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t *v34;
  uint64_t v35;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___CNManagedDuplicate__privateContacts);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_18FA288B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = (uint64_t *)(v0 + OBJC_IVAR___CNManagedDuplicate_managedCohorts);
  swift_beginAccess();
  v4 = *v3;
  if ((unint64_t)*v3 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v5 = sub_18FA288B8();
    v34 = v3;
    v35 = v2;
    if (v5)
      goto LABEL_5;
LABEL_19:
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_20;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  v34 = v3;
  v35 = v2;
  if (!v5)
    goto LABEL_19;
LABEL_5:
  if (v5 < 1)
  {
    __break(1u);
    goto LABEL_37;
  }
  v6 = 0;
  v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    if ((v4 & 0xC000000000000001) != 0)
      v9 = (char *)MEMORY[0x194005370](v6, v4);
    else
      v9 = (char *)*(id *)(v4 + 8 * v6 + 32);
    v10 = v9;
    v11 = &v9[OBJC_IVAR___CNManagedCohort_identifier];
    swift_beginAccess();
    v12 = *(_QWORD *)v11;
    v13 = *((_QWORD *)v11 + 1);
    swift_bridgeObjectRetain();

    if (v13)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v7 = sub_18F9FDF34(0, v7[2] + 1, 1, v7);
      v15 = v7[2];
      v14 = v7[3];
      if (v15 >= v14 >> 1)
        v7 = sub_18F9FDF34((_QWORD *)(v14 > 1), v15 + 1, 1, v7);
      v7[2] = v15 + 1;
      v8 = &v7[2 * v15];
      v8[4] = v12;
      v8[5] = v13;
    }
    ++v6;
  }
  while (v5 != v6);
LABEL_20:
  swift_bridgeObjectRelease_n();
  v16 = v7[2];
  swift_bridgeObjectRelease();
  if (v35 != v16)
  {
    v29 = 1;
    return v29 & 1;
  }
  v2 = *v34;
  if (!((unint64_t)*v34 >> 62))
  {
    v17 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
    if (v17)
      goto LABEL_23;
LABEL_38:
    v20 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_39:
    swift_bridgeObjectRelease_n();
    v30 = sub_18FA1CD34((uint64_t)v20);
    swift_bridgeObjectRelease();
    v31 = sub_18F9FB680();
    v32 = sub_18FA1CD34(v31);
    swift_bridgeObjectRelease();
    v33 = sub_18FA19438(v30, v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v29 = v33 ^ 1;
    return v29 & 1;
  }
LABEL_37:
  swift_bridgeObjectRetain_n();
  result = sub_18FA288B8();
  v17 = result;
  if (!result)
    goto LABEL_38;
LABEL_23:
  if (v17 >= 1)
  {
    v19 = 0;
    v20 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v22 = (char *)MEMORY[0x194005370](v19, v2);
      else
        v22 = (char *)*(id *)(v2 + 8 * v19 + 32);
      v23 = v22;
      v24 = &v22[OBJC_IVAR___CNManagedCohort_identifier];
      swift_beginAccess();
      v26 = *(_QWORD *)v24;
      v25 = *((_QWORD *)v24 + 1);
      swift_bridgeObjectRetain();

      if (v25)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v20 = sub_18F9FDF34(0, v20[2] + 1, 1, v20);
        v28 = v20[2];
        v27 = v20[3];
        if (v28 >= v27 >> 1)
          v20 = sub_18F9FDF34((_QWORD *)(v27 > 1), v28 + 1, 1, v20);
        v20[2] = v28 + 1;
        v21 = &v20[2 * v28];
        v21[4] = v26;
        v21[5] = v25;
      }
      ++v19;
    }
    while (v17 != v19);
    goto LABEL_39;
  }
  __break(1u);
  return result;
}

uint64_t sub_18F9FBBD0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  unint64_t v8;
  char *v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  char *v21;
  char *v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  CGFloat v27;
  CGFloat v28;
  CGFloat v29;
  CGFloat v30;
  NSString *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char *v43;
  char *v44;
  uint64_t *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  CGFloat v49;
  CGFloat v50;
  CGFloat v51;
  CGFloat v52;
  NSString *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  NSRect v69;
  NSRect v70;

  v1 = &v0[OBJC_IVAR___CNManagedDuplicate_userSelectedContactImage];
  swift_beginAccess();
  v2 = *((_QWORD *)v1 + 1);
  v3 = &v0[OBJC_IVAR___CNManagedDuplicate_managedCohorts];
  if (v2 != 1)
  {
    swift_beginAccess();
    v15 = *(_QWORD *)v3;
    if (*(_QWORD *)v3 >> 62)
    {
      swift_bridgeObjectRetain_n();
      result = sub_18FA288B8();
      v16 = result;
      if (result)
        goto LABEL_24;
    }
    else
    {
      v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain_n();
      if (v16)
      {
LABEL_24:
        if (v16 >= 1)
        {
          v18 = 0;
          v19 = v15 & 0xC000000000000001;
          v20 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          v66 = v15;
          do
          {
            if (v19)
              v21 = (char *)MEMORY[0x194005370](v18, v15);
            else
              v21 = (char *)*(id *)(v15 + 8 * v18 + 32);
            v22 = v21;
            v23 = (uint64_t *)&v21[OBJC_IVAR___CNManagedCohort_imageData];
            swift_beginAccess();
            v24 = v23[1];
            if (v24 >> 60 == 15)
            {

            }
            else
            {
              v25 = v16;
              v26 = *v23;
              v27 = *(double *)&v22[OBJC_IVAR___CNManagedCohort_cropRect];
              v28 = *(double *)&v22[OBJC_IVAR___CNManagedCohort_cropRect + 8];
              v29 = *(double *)&v22[OBJC_IVAR___CNManagedCohort_cropRect + 16];
              v30 = *(double *)&v22[OBJC_IVAR___CNManagedCohort_cropRect + 24];
              sub_18F9EA6C0(v26, v24);
              v69.origin.x = v27;
              v69.origin.y = v28;
              v69.size.width = v29;
              v69.size.height = v30;
              v31 = NSStringFromRect(v69);
              v32 = sub_18FA2833C();
              v34 = v33;

              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v20 = sub_18F9FE040(0, v20[2] + 1, 1, v20);
              v36 = v20[2];
              v35 = v20[3];
              if (v36 >= v35 >> 1)
                v20 = sub_18F9FE040((_QWORD *)(v35 > 1), v36 + 1, 1, v20);
              v20[2] = v36 + 1;
              v37 = &v20[4 * v36];
              v37[4] = v26;
              v37[5] = v24;
              v37[6] = v32;
              v37[7] = v34;
              v16 = v25;
              v15 = v66;
            }
            ++v18;
          }
          while (v16 != v18);
          swift_bridgeObjectRelease_n();
          goto LABEL_65;
        }
        __break(1u);
        goto LABEL_76;
      }
    }
    swift_bridgeObjectRelease_n();
    goto LABEL_64;
  }
  swift_beginAccess();
  v4 = *(_QWORD *)v3;
  v68 = MEMORY[0x1E0DEE9D8];
  if (v4 >> 62)
    goto LABEL_59;
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v0;
  swift_bridgeObjectRetain();
LABEL_4:
  v7 = &v0[OBJC_IVAR___CNManagedDuplicate_primaryID];
  swift_beginAccess();
  if (v5)
  {
    v65 = v0;
    v8 = 0;
    while (1)
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        v9 = (char *)MEMORY[0x194005370](v8, v4);
      }
      else
      {
        if (v8 >= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_58:
          __break(1u);
LABEL_59:
          v60 = v0;
          swift_bridgeObjectRetain();
          v5 = sub_18FA288B8();
          goto LABEL_4;
        }
        v9 = (char *)*(id *)(v4 + 8 * v8 + 32);
      }
      v10 = v9;
      v11 = v8 + 1;
      if (__OFADD__(v8, 1))
        goto LABEL_58;
      v0 = &v9[OBJC_IVAR___CNManagedCohort_identifier];
      swift_beginAccess();
      v12 = *((_QWORD *)v0 + 1);
      v13 = *((_QWORD *)v7 + 1);
      if (v12)
      {
        if (v13)
        {
          v14 = *(_QWORD *)v0 == *(_QWORD *)v7 && v12 == v13;
          if (v14 || (sub_18FA2896C() & 1) != 0)
          {
LABEL_20:

            goto LABEL_8;
          }
        }
      }
      else if (!v13)
      {
        goto LABEL_20;
      }
      sub_18FA28834();
      sub_18FA28864();
      sub_18FA28870();
      v0 = (char *)&v68;
      sub_18FA28840();
LABEL_8:
      ++v8;
      if (v11 == v5)
      {
        v0 = v65;
        v38 = v68;
        goto LABEL_40;
      }
    }
  }
  v38 = MEMORY[0x1E0DEE9D8];
LABEL_40:
  swift_bridgeObjectRelease();

  v39 = v38;
  if (v38 < 0 || (v38 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    result = sub_18FA288B8();
    v40 = result;
    if (result)
    {
LABEL_43:
      if (v40 >= 1)
      {
        v41 = 0;
        v42 = v38 & 0xC000000000000001;
        v20 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        v67 = v39;
        do
        {
          if (v42)
            v43 = (char *)MEMORY[0x194005370](v41, v39);
          else
            v43 = (char *)*(id *)(v39 + 8 * v41 + 32);
          v44 = v43;
          v45 = (uint64_t *)&v43[OBJC_IVAR___CNManagedCohort_imageData];
          swift_beginAccess();
          v46 = v45[1];
          if (v46 >> 60 == 15)
          {

          }
          else
          {
            v47 = v40;
            v48 = *v45;
            v49 = *(double *)&v44[OBJC_IVAR___CNManagedCohort_cropRect];
            v50 = *(double *)&v44[OBJC_IVAR___CNManagedCohort_cropRect + 8];
            v51 = *(double *)&v44[OBJC_IVAR___CNManagedCohort_cropRect + 16];
            v52 = *(double *)&v44[OBJC_IVAR___CNManagedCohort_cropRect + 24];
            sub_18F9EA6C0(v48, v46);
            v70.origin.x = v49;
            v70.origin.y = v50;
            v70.size.width = v51;
            v70.size.height = v52;
            v53 = NSStringFromRect(v70);
            v54 = sub_18FA2833C();
            v56 = v55;

            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v20 = sub_18F9FE040(0, v20[2] + 1, 1, v20);
            v58 = v20[2];
            v57 = v20[3];
            if (v58 >= v57 >> 1)
              v20 = sub_18F9FE040((_QWORD *)(v57 > 1), v58 + 1, 1, v20);
            v20[2] = v58 + 1;
            v59 = &v20[4 * v58];
            v59[4] = v48;
            v59[5] = v46;
            v59[6] = v54;
            v59[7] = v56;
            v40 = v47;
            v39 = v67;
          }
          ++v41;
        }
        while (v40 != v41);
        swift_release_n();
        goto LABEL_65;
      }
LABEL_76:
      __break(1u);
      return result;
    }
  }
  else
  {
    v40 = *(_QWORD *)(v38 + 16);
    result = swift_bridgeObjectRetain();
    if (v40)
      goto LABEL_43;
  }
  swift_release_n();
LABEL_64:
  v20 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_65:
  if (v20[2] >= 7uLL)
    v61 = 7;
  else
    v61 = v20[2];
  sub_18FA28984();
  swift_unknownObjectRetain_n();
  v62 = swift_dynamicCastClass();
  if (!v62)
  {
    swift_bridgeObjectRelease();
    v62 = MEMORY[0x1E0DEE9D8];
  }
  v63 = *(_QWORD *)(v62 + 16);
  swift_release();
  if (v63 == v61)
  {
    v64 = swift_dynamicCastClass();
    if (!v64)
    {
      swift_bridgeObjectRelease();
      v64 = MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v64 = sub_18F9E852C((uint64_t)v20, (uint64_t)(v20 + 4), 0, (2 * v61) | 1);
  }
  swift_bridgeObjectRelease();
  return v64;
}

uint64_t sub_18F9FC248()
{
  char *v0;
  char *v1;
  unint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  unint64_t v8;
  char *v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  void *v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void *v32;
  uint64_t *v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;

  v1 = &v0[OBJC_IVAR___CNManagedDuplicate_userSelectedContactPoster];
  swift_beginAccess();
  v2 = *((_QWORD *)v1 + 1);
  v3 = &v0[OBJC_IVAR___CNManagedDuplicate_managedCohorts];
  if (v2 >> 60 != 11)
  {
    swift_beginAccess();
    v15 = *(_QWORD *)v3;
    if (*(_QWORD *)v3 >> 62)
    {
      swift_bridgeObjectRetain_n();
      result = sub_18FA288B8();
      v16 = result;
      if (result)
        goto LABEL_24;
    }
    else
    {
      v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain_n();
      if (v16)
      {
LABEL_24:
        if (v16 >= 1)
        {
          v18 = 0;
          v19 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          do
          {
            if ((v15 & 0xC000000000000001) != 0)
              v20 = (char *)MEMORY[0x194005370](v18, v15);
            else
              v20 = (char *)*(id *)(v15 + 8 * v18 + 32);
            v21 = v20;
            v22 = (uint64_t *)&v20[OBJC_IVAR___CNManagedCohort_posterData];
            swift_beginAccess();
            v23 = v22[1];
            if (v23 >> 60 == 15)
            {

            }
            else
            {
              v24 = *v22;
              sub_18F9EA6C0(v24, v23);

              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v19 = sub_18F9FE14C(0, v19[2] + 1, 1, v19);
              v26 = v19[2];
              v25 = v19[3];
              if (v26 >= v25 >> 1)
                v19 = sub_18F9FE14C((_QWORD *)(v25 > 1), v26 + 1, 1, v19);
              v19[2] = v26 + 1;
              v27 = &v19[2 * v26];
              v27[4] = v24;
              v27[5] = v23;
            }
            ++v18;
          }
          while (v16 != v18);
          swift_bridgeObjectRelease_n();
          goto LABEL_65;
        }
        __break(1u);
        goto LABEL_76;
      }
    }
    swift_bridgeObjectRelease_n();
    goto LABEL_64;
  }
  swift_beginAccess();
  v4 = *(_QWORD *)v3;
  v45 = MEMORY[0x1E0DEE9D8];
  if (v4 >> 62)
    goto LABEL_59;
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v0;
  swift_bridgeObjectRetain();
LABEL_4:
  v7 = &v0[OBJC_IVAR___CNManagedDuplicate_primaryID];
  swift_beginAccess();
  if (v5)
  {
    v44 = v0;
    v8 = 0;
    while (1)
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        v9 = (char *)MEMORY[0x194005370](v8, v4);
      }
      else
      {
        if (v8 >= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_58:
          __break(1u);
LABEL_59:
          v39 = v0;
          swift_bridgeObjectRetain();
          v5 = sub_18FA288B8();
          goto LABEL_4;
        }
        v9 = (char *)*(id *)(v4 + 8 * v8 + 32);
      }
      v10 = v9;
      v11 = v8 + 1;
      if (__OFADD__(v8, 1))
        goto LABEL_58;
      v0 = &v9[OBJC_IVAR___CNManagedCohort_identifier];
      swift_beginAccess();
      v12 = *((_QWORD *)v0 + 1);
      v13 = *((_QWORD *)v7 + 1);
      if (v12)
      {
        if (v13)
        {
          v14 = *(_QWORD *)v0 == *(_QWORD *)v7 && v12 == v13;
          if (v14 || (sub_18FA2896C() & 1) != 0)
          {
LABEL_20:

            goto LABEL_8;
          }
        }
      }
      else if (!v13)
      {
        goto LABEL_20;
      }
      sub_18FA28834();
      sub_18FA28864();
      sub_18FA28870();
      v0 = (char *)&v45;
      sub_18FA28840();
LABEL_8:
      ++v8;
      if (v11 == v5)
      {
        v0 = v44;
        v28 = v45;
        goto LABEL_40;
      }
    }
  }
  v28 = MEMORY[0x1E0DEE9D8];
LABEL_40:
  swift_bridgeObjectRelease();

  if (v28 < 0 || (v28 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    result = sub_18FA288B8();
    v29 = result;
    if (result)
    {
LABEL_43:
      if (v29 >= 1)
      {
        v30 = 0;
        v19 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        do
        {
          if ((v28 & 0xC000000000000001) != 0)
            v31 = (char *)MEMORY[0x194005370](v30, v28);
          else
            v31 = (char *)*(id *)(v28 + 8 * v30 + 32);
          v32 = v31;
          v33 = (uint64_t *)&v31[OBJC_IVAR___CNManagedCohort_posterData];
          swift_beginAccess();
          v34 = v33[1];
          if (v34 >> 60 == 15)
          {

          }
          else
          {
            v35 = *v33;
            sub_18F9EA6C0(v35, v34);

            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v19 = sub_18F9FE14C(0, v19[2] + 1, 1, v19);
            v37 = v19[2];
            v36 = v19[3];
            if (v37 >= v36 >> 1)
              v19 = sub_18F9FE14C((_QWORD *)(v36 > 1), v37 + 1, 1, v19);
            v19[2] = v37 + 1;
            v38 = &v19[2 * v37];
            v38[4] = v35;
            v38[5] = v34;
          }
          ++v30;
        }
        while (v29 != v30);
        swift_release_n();
        goto LABEL_65;
      }
LABEL_76:
      __break(1u);
      return result;
    }
  }
  else
  {
    v29 = *(_QWORD *)(v28 + 16);
    result = swift_bridgeObjectRetain();
    if (v29)
      goto LABEL_43;
  }
  swift_release_n();
LABEL_64:
  v19 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_65:
  if (v19[2] >= 3uLL)
    v40 = 3;
  else
    v40 = v19[2];
  sub_18FA28984();
  swift_unknownObjectRetain_n();
  v41 = swift_dynamicCastClass();
  if (!v41)
  {
    swift_bridgeObjectRelease();
    v41 = MEMORY[0x1E0DEE9D8];
  }
  v42 = *(_QWORD *)(v41 + 16);
  swift_release();
  if (v42 == v40)
  {
    v43 = swift_dynamicCastClass();
    if (!v43)
    {
      swift_bridgeObjectRelease();
      v43 = MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v43 = sub_18F9E869C((uint64_t)v19, (uint64_t)(v19 + 4), 0, (2 * v40) | 1);
  }
  swift_bridgeObjectRelease();
  return v43;
}

void sub_18F9FC7E8()
{
  NSObject *v0;
  os_log_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  uint64_t v11;
  char *v12;
  void *v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  objc_class *v23;
  objc_class *v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  void *v30;
  objc_class *v31;
  id v32;
  uint64_t v33;
  NSObject *v34;
  id v35;
  NSObject *v36;
  id v37;
  uint64_t v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  char *v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  NSObject *v56;
  uint64_t v57;
  unint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  char *v64;
  void *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  os_log_type_t v80;
  os_log_type_t v81;
  uint8_t *v82;
  void *v83;
  uint64_t *v84;
  os_log_t log;
  NSObject *loga;
  id v87;
  objc_class *v88;
  unint64_t v89;
  id v90[4];
  uint64_t v91[9];

  v91[7] = *MEMORY[0x1E0C80C00];
  if (qword_1EE17E9B8 != -1)
    swift_once();
  v3 = objc_allocWithZone((Class)CNContactFetchRequest);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EAE0);
  v4 = (void *)sub_18FA28438();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithKeysToFetch_, v4);

  objc_msgSend(v5, sel_setUnifyResults_, 0);
  objc_msgSend(v5, sel_setMutableObjects_, 1);
  v6 = (uint64_t *)((char *)v0 + OBJC_IVAR___CNManagedDuplicate_managedCohorts);
  swift_beginAccess();
  v84 = v6;
  v7 = *v6;
  if ((unint64_t)*v6 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v8 = sub_18FA288B8();
  }
  else
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
  }
  log = v0;
  v87 = v5;
  v9 = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    if (v8 < 1)
    {
      __break(1u);
LABEL_79:
      swift_bridgeObjectRetain();
      v28 = sub_18FA288B8();
      swift_bridgeObjectRelease();
      goto LABEL_24;
    }
    for (i = 0; i != v8; ++i)
    {
      if ((v7 & 0xC000000000000001) != 0)
        v12 = (char *)MEMORY[0x194005370](i, v7);
      else
        v12 = (char *)*(id *)(v7 + 8 * i + 32);
      v13 = v12;
      v14 = &v12[OBJC_IVAR___CNManagedCohort_identifier];
      swift_beginAccess();
      v15 = *(_QWORD *)v14;
      v2 = *((_QWORD *)v14 + 1);
      swift_bridgeObjectRetain();

      if (v2)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v9 = (uint64_t)sub_18F9FDF34(0, *(_QWORD *)(v9 + 16) + 1, 1, (_QWORD *)v9);
        v17 = *(_QWORD *)(v9 + 16);
        v16 = *(_QWORD *)(v9 + 24);
        if (v17 >= v16 >> 1)
          v9 = (uint64_t)sub_18F9FDF34((_QWORD *)(v16 > 1), v17 + 1, 1, (_QWORD *)v9);
        *(_QWORD *)(v9 + 16) = v17 + 1;
        v11 = v9 + 16 * v17;
        *(_QWORD *)(v11 + 32) = v15;
        *(_QWORD *)(v11 + 40) = v2;
      }
    }
  }
  swift_bridgeObjectRelease_n();
  v18 = (void *)objc_opt_self();
  v19 = (void *)sub_18FA28438();
  swift_bridgeObjectRelease();
  v20 = objc_msgSend(v18, sel_predicateForContactsWithIdentifiers_, v19);

  v5 = v87;
  objc_msgSend(v87, sel_setPredicate_, v20);

  v21 = OBJC_IVAR___CNManagedDuplicate__contactStore;
  v1 = log;
  v22 = *(Class *)((char *)&log->isa + OBJC_IVAR___CNManagedDuplicate__contactStore);
  if (v22)
  {
    v23 = *(Class *)((char *)&log->isa + OBJC_IVAR___CNManagedDuplicate__contactStore);
  }
  else
  {
    v24 = (objc_class *)objc_msgSend(objc_allocWithZone((Class)CNContactStore), sel_init);
    v25 = *(Class *)((char *)&log->isa + v21);
    *(Class *)((char *)&log->isa + v21) = v24;
    v23 = v24;

    v22 = 0;
  }
  v90[0] = 0;
  v26 = v22;
  v8 = (uint64_t)-[objc_class executeFetchRequest:error:](v23, sel_executeFetchRequest_error_, v87, v90);

  if (!v8)
  {
    v32 = v90[0];
    v9 = sub_18FA28030();

    swift_willThrow();
    if (qword_1EE180A08 == -1)
      goto LABEL_33;
    goto LABEL_81;
  }
  v27 = v90[0];
  v91[0] = (uint64_t)objc_msgSend((id)v8, sel_value);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE17EBC0);
  swift_dynamicCast();
  v9 = v89;
  if (v89 >> 62)
    goto LABEL_79;
  v28 = *(_QWORD *)((v89 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_24:
  v83 = (void *)v8;
  if (!v28)
  {
    swift_bridgeObjectRelease();
    v31 = (objc_class *)MEMORY[0x1E0DEE9D8];
LABEL_50:
    v53 = OBJC_IVAR___CNManagedDuplicate__privateContacts;
    *(Class *)((char *)&v1->isa + OBJC_IVAR___CNManagedDuplicate__privateContacts) = v31;
    swift_bridgeObjectRelease();
    if (qword_1EE180A08 != -1)
      swift_once();
    v54 = sub_18FA28204();
    __swift_project_value_buffer(v54, (uint64_t)qword_1EE180F10);
    v55 = v1;
    v56 = sub_18FA281EC();
    v39 = sub_18FA2863C();
    loga = v56;
    if (!os_log_type_enabled(v56, v39))
    {

      return;
    }
    v41 = swift_slowAlloc();
    v57 = swift_slowAlloc();
    v91[0] = v57;
    *(_DWORD *)v41 = 134218242;
    v58 = *(unint64_t *)((char *)&v1->isa + v53);
    if (v58 >> 62)
    {
      swift_bridgeObjectRetain();
      v59 = (void *)sub_18FA288B8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v59 = *(void **)((v58 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v90[0] = v59;
    sub_18FA286E4();
    *(_WORD *)(v41 + 12) = 2080;
    v60 = *v84;
    if ((unint64_t)*v84 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v38 = sub_18FA288B8();
    }
    else
    {
      v38 = *(_QWORD *)((v60 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
    }
    v82 = (uint8_t *)v41;
    v81 = v39;
    if (!v38)
    {
      v62 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_73:
      swift_bridgeObjectRelease_n();
      v71 = MEMORY[0x194004FEC](v62, MEMORY[0x1E0DEA968]);
      v73 = v72;
      swift_bridgeObjectRelease();
      sub_18F9DE1F0(v71, v73, v91);
      sub_18FA286E4();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_18F8BD000, loga, v81, "Fetched %ld contacts for cohorts %s", v82, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x194006DBC](v57, -1, -1);
      MEMORY[0x194006DBC](v82, -1, -1);

      return;
    }
    if (v38 >= 1)
    {
      v61 = 0;
      v62 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      do
      {
        if ((v60 & 0xC000000000000001) != 0)
          v64 = (char *)MEMORY[0x194005370](v61, v60);
        else
          v64 = (char *)*(id *)(v60 + 8 * v61 + 32);
        v65 = v64;
        v66 = &v64[OBJC_IVAR___CNManagedCohort_identifier];
        swift_beginAccess();
        v68 = *(_QWORD *)v66;
        v67 = *((_QWORD *)v66 + 1);
        swift_bridgeObjectRetain();

        if (v67)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v62 = sub_18F9FDF34(0, v62[2] + 1, 1, v62);
          v70 = v62[2];
          v69 = v62[3];
          if (v70 >= v69 >> 1)
            v62 = sub_18F9FDF34((_QWORD *)(v69 > 1), v70 + 1, 1, v62);
          v62[2] = v70 + 1;
          v63 = &v62[2 * v70];
          v63[4] = v68;
          v63[5] = v67;
        }
        ++v61;
      }
      while (v38 != v61);
      goto LABEL_73;
    }
    __break(1u);
    goto LABEL_85;
  }
  v88 = (objc_class *)MEMORY[0x1E0DEE9D8];
  sub_18FA28858();
  if ((v28 & 0x8000000000000000) == 0)
  {
    v2 = 0;
    do
    {
      if ((v9 & 0xC000000000000001) != 0)
        v29 = (id)MEMORY[0x194005370](v2, v9);
      else
        v29 = *(id *)(v9 + 8 * v2 + 32);
      v30 = v29;
      ++v2;
      objc_msgSend(v29, sel_mutableCopy);
      sub_18FA28720();
      swift_unknownObjectRelease();
      sub_18FA02F4C();
      swift_dynamicCast();

      sub_18FA28834();
      sub_18FA28864();
      sub_18FA28870();
      sub_18FA28840();
    }
    while (v28 != v2);
    v31 = v88;
    swift_bridgeObjectRelease();
    v1 = log;
    v5 = v87;
    goto LABEL_50;
  }
  __break(1u);
LABEL_81:
  swift_once();
LABEL_33:
  v33 = sub_18FA28204();
  __swift_project_value_buffer(v33, (uint64_t)qword_1EE180F10);
  v34 = v1;
  v35 = (id)v9;
  v36 = v34;
  v37 = (id)v9;
  v38 = sub_18FA281EC();
  v39 = sub_18FA28648();
  if (os_log_type_enabled((os_log_t)v38, v39))
  {
    v40 = (uint8_t *)swift_slowAlloc();
    v2 = swift_slowAlloc();
    v91[0] = v2;
    v82 = v40;
    *(_DWORD *)v40 = 136315394;
    v41 = *v84;
    v83 = (void *)v9;
    loga = v36;
    if (!((unint64_t)*v84 >> 62))
    {
      v42 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
LABEL_36:
      v80 = v39;
      v79 = v2;
      if (v42)
      {
        if (v42 < 1)
          __break(1u);
        v43 = 0;
        v44 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        do
        {
          if ((v41 & 0xC000000000000001) != 0)
            v46 = (char *)MEMORY[0x194005370](v43, v41);
          else
            v46 = (char *)*(id *)(v41 + 8 * v43 + 32);
          v47 = v46;
          v48 = &v46[OBJC_IVAR___CNManagedCohort_identifier];
          swift_beginAccess();
          v50 = *(_QWORD *)v48;
          v49 = *((_QWORD *)v48 + 1);
          swift_bridgeObjectRetain();

          if (v49)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v44 = sub_18F9FDF34(0, v44[2] + 1, 1, v44);
            v52 = v44[2];
            v51 = v44[3];
            if (v52 >= v51 >> 1)
              v44 = sub_18F9FDF34((_QWORD *)(v51 > 1), v52 + 1, 1, v44);
            v44[2] = v52 + 1;
            v45 = &v44[2 * v52];
            v45[4] = v50;
            v45[5] = v49;
          }
          ++v43;
        }
        while (v42 != v43);
      }
      else
      {
        v44 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      }
      swift_bridgeObjectRelease_n();
      v74 = MEMORY[0x194004FEC](v44, MEMORY[0x1E0DEA968]);
      v76 = v75;
      swift_bridgeObjectRelease();
      sub_18F9DE1F0(v74, v76, v91);
      sub_18FA286E4();
      v36 = loga;

      swift_bridgeObjectRelease();
      *((_WORD *)v82 + 6) = 2080;
      v9 = (uint64_t)v83;
      swift_getErrorValue();
      v77 = sub_18FA289CC();
      sub_18F9DE1F0(v77, v78, v91);
      sub_18FA286E4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_18F8BD000, (os_log_t)v38, v80, "Could not fetch contacts for cohorts %s: %s", v82, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x194006DBC](v79, -1, -1);
      MEMORY[0x194006DBC](v82, -1, -1);

      v5 = v87;
      goto LABEL_76;
    }
LABEL_85:
    swift_bridgeObjectRetain_n();
    v42 = sub_18FA288B8();
    goto LABEL_36;
  }

LABEL_76:
  *(Class *)((char *)&v36->isa + OBJC_IVAR___CNManagedDuplicate__privateContacts) = (Class)MEMORY[0x1E0DEE9D8];

  swift_bridgeObjectRelease();
}

uint64_t static ManagedDuplicate.signatureForContact(_:)(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_externalURI);
  if (!v2)
  {
    v2 = objc_msgSend(a1, sel_externalIdentifier);
    if (!v2)
      v2 = objc_msgSend(a1, sel_identifier);
  }
  v3 = sub_18FA2833C();

  return v3;
}

void sub_18F9FD4E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD v18[10];

  v18[9] = *MEMORY[0x1E0C80C00];
  v4 = sub_18FA28234();
  v18[1] = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_18FA28240();
  v18[3] = *(_QWORD *)(v5 - 8);
  v18[4] = v5;
  MEMORY[0x1E0C80A78](v5);
  v18[2] = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_18FA2836C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE17EBA0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[7] = a1;
  v18[8] = a2;
  sub_18FA28114();
  v14 = sub_18FA28120();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 0, 1, v14);
  sub_18F9EC3D0();
  sub_18FA28714();
  sub_18F9DFD58((uint64_t)v13, (uint64_t *)&unk_1EE17EBA0);
  sub_18FA28360();
  sub_18FA28348();
  v16 = v15;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (v16 >> 60 == 15)
    v17 = 0xC000000000000000;
  else
    v17 = v16;
  sub_18F9D727C(&qword_1EE180FF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9A18], MEMORY[0x1E0CA9A10]);
  sub_18FA28228();
  __asm { BR              X10 }
}

uint64_t sub_18F9FD710()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v4 - 104) = v2;
  *(_WORD *)(v4 - 96) = v3;
  *(_BYTE *)(v4 - 94) = BYTE2(v3);
  *(_BYTE *)(v4 - 93) = BYTE3(v3);
  *(_BYTE *)(v4 - 92) = BYTE4(v3);
  *(_BYTE *)(v4 - 91) = BYTE5(v3);
  sub_18FA28210();
  sub_18F9EA8A4(v2, v3);
  v5 = *(_QWORD *)(v4 - 144);
  sub_18FA2821C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 152) + 8))(v1, v0);
  *(_QWORD *)(v4 - 104) = sub_18F9FDB48(v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EAB8);
  sub_18FA02F88();
  v6 = sub_18FA282C4();
  sub_18F9EA8A4(v2, v3);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 136) + 8))(v5, *(_QWORD *)(v4 - 128));
  return v6;
}

id ManagedDuplicate.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ManagedDuplicate.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ManagedDuplicate.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedDuplicate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_18F9FDAC0@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v3 = *a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE17EB40);
  v4 = swift_allocObject();
  v5 = MEMORY[0x1E0DEDE70];
  *(_OWORD *)(v4 + 16) = xmmword_18FA40F90;
  v6 = MEMORY[0x1E0DEDEC8];
  *(_QWORD *)(v4 + 56) = v5;
  *(_QWORD *)(v4 + 64) = v6;
  *(_BYTE *)(v4 + 32) = v3;
  result = sub_18FA28354();
  *a2 = result;
  a2[1] = v8;
  return result;
}

uint64_t sub_18F9FDB48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31[2];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;

  v3 = sub_18FA28240();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18F9D727C((unint64_t *)&unk_1EE181000, v7, MEMORY[0x1E0CA9A58]);
  v8 = sub_18FA283CC();
  v36 = MEMORY[0x1E0DEE9D8];
  sub_18F9DE90C(0, v8 & ~(v8 >> 63), 0);
  v9 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  result = sub_18FA283C0();
  if ((v8 & 0x8000000000000000) == 0)
  {
    v11 = v35;
    if (v8)
    {
      v12 = v34;
      v30 = *(_QWORD *)(v34 + 16);
      v13 = v35;
      while (v30 != v13)
      {
        if ((v11 & 0x8000000000000000) != 0)
          goto LABEL_24;
        if (v13 >= *(_QWORD *)(v12 + 16))
          goto LABEL_25;
        v31[0] = *(_BYTE *)(v12 + v13 + 32);
        v31[1] = 0;
        result = sub_18F9FDAC0(v31, &v32);
        if (v1)
        {
LABEL_21:
          swift_release();
          goto LABEL_22;
        }
        v14 = v11;
        v16 = v32;
        v15 = v33;
        v36 = v9;
        v18 = *(_QWORD *)(v9 + 16);
        v17 = *(_QWORD *)(v9 + 24);
        if (v18 >= v17 >> 1)
        {
          v29 = v12;
          result = sub_18F9DE90C(v17 > 1, v18 + 1, 1);
          v12 = v29;
          v9 = v36;
        }
        *(_QWORD *)(v9 + 16) = v18 + 1;
        v19 = v9 + 16 * v18;
        *(_QWORD *)(v19 + 32) = v16;
        *(_QWORD *)(v19 + 40) = v15;
        ++v13;
        --v8;
        v11 = v14;
        if (!v8)
        {
          v35 = v13;
          goto LABEL_14;
        }
      }
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
    }
    else
    {
      v13 = v35;
LABEL_14:
      v20 = v34;
      v21 = *(_QWORD *)(v34 + 16);
      if (v13 == v21)
      {
LABEL_22:
        swift_bridgeObjectRelease();
        return v9;
      }
      while (v13 < v21)
      {
        v22 = *(_BYTE *)(v20 + 32 + v13);
        v35 = v13 + 1;
        v31[0] = v22;
        result = sub_18F9FDAC0(v31, &v32);
        if (v1)
          goto LABEL_21;
        v23 = v32;
        v24 = v33;
        v36 = v9;
        v26 = *(_QWORD *)(v9 + 16);
        v25 = *(_QWORD *)(v9 + 24);
        if (v26 >= v25 >> 1)
        {
          result = sub_18F9DE90C(v25 > 1, v26 + 1, 1);
          v9 = v36;
        }
        *(_QWORD *)(v9 + 16) = v26 + 1;
        v27 = v9 + 16 * v26;
        *(_QWORD *)(v27 + 32) = v23;
        *(_QWORD *)(v27 + 40) = v24;
        v13 = v35;
        v21 = *(_QWORD *)(v20 + 16);
        if (v35 == v21)
          goto LABEL_22;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_18F9FDE14(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE180CB0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_18FA00650(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_18F9FDF20(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_18F9FE68C(a1, a2, a3, a4, (uint64_t *)&unk_1EE180F80, &qword_1EE17EAC8);
}

_QWORD *sub_18F9FDF34(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17E850);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_18FA00744(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_18F9FE040(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE180FD0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_18FA02B64(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_18F9FE14C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1812D0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_18FA02C54(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_18F9FE258(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17E848);
  v10 = *(_QWORD *)(sub_18FA281E0() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (v15 = v11 == -1) : (v15 = 0), v15))
  {
LABEL_29:
    result = sub_18FA288A0();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(sub_18FA281E0() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (unint64_t)v13 + v17;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(_QWORD *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_18FA02D44(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

_QWORD *sub_18F9FE460(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE180FC0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 + 31;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4])
          memmove(v13, a4 + 4, v8 << 6);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_18FA02E5C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_18F9FE56C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE180FA0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_18FA00834(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_18F9FE678(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_18F9FE68C(a1, a2, a3, a4, &qword_1EE180FB0, &qword_1EE180FB8);
}

_QWORD *sub_18F9FE68C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v15 = v14 - 32;
      if (v14 < 32)
        v15 = v14 - 25;
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      v16 = v13 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v16 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4])
          memmove(v16, a4 + 4, 8 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_18FA0093C(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_18F9FE7A4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_18F9FF578(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_18F9FE80C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_18F9FE80C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  BOOL v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *__dst;

  v3 = a1[1];
  result = sub_18FA2893C();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      return sub_18F9FEEF4(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_160;
  v105 = result;
  v102 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_118:
      v94 = v11;
      v104 = v8;
      if (v12 >= 2)
      {
        v95 = *v102;
        do
        {
          v96 = v12 - 2;
          if (v12 < 2)
            goto LABEL_147;
          if (!v95)
            goto LABEL_159;
          v97 = v94;
          v98 = *(_QWORD *)&v94[16 * v96 + 32];
          v99 = *(_QWORD *)&v94[16 * v12 + 24];
          sub_18F9FEFC0((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(_QWORD *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1)
            break;
          if (v99 < v98)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v97 = sub_18F9FF4A0((uint64_t)v97);
          if (v96 >= *((_QWORD *)v97 + 2))
            goto LABEL_149;
          v100 = &v97[16 * v96 + 32];
          *(_QWORD *)v100 = v98;
          *((_QWORD *)v100 + 1) = v99;
          v101 = *((_QWORD *)v97 + 2);
          if (v12 > v101)
            goto LABEL_150;
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          v94 = v97;
          *((_QWORD *)v97 + 2) = v101 - 1;
          v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v104 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_18FA284B0();
    *(_QWORD *)(v7 + 16) = v6;
    v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v103 = v10 + 8;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v106 = v3;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v19 = 0;
    }
    else
    {
      v19 = sub_18FA2896C();
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v21 = (_QWORD *)(v103 + 16 * v20);
    do
    {
      v23 = (_QWORD *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if ((v19 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v19 ^ sub_18FA2896C()) & 1) != 0)
      {
        goto LABEL_36;
      }
      v21 += 2;
      v22 = v20 + 1;
      v9 = v20;
      v20 = v22;
    }
    while (v22 < v3);
    v20 = v22;
LABEL_36:
    v9 = v20;
    if ((v19 & 1) != 0)
    {
LABEL_37:
      if (v20 < v13)
        goto LABEL_155;
      if (v13 < v20)
      {
        v25 = 16 * v20;
        v26 = 16 * v13;
        v27 = v20;
        v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10)
              goto LABEL_158;
            v29 = v10 + v25;
            v30 = *(_QWORD *)(v10 + v26);
            v31 = *(_QWORD *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(_QWORD *)(v29 - 16) = v30;
            *(_QWORD *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_151;
      if (v9 - v13 < v105)
        break;
    }
LABEL_67:
    if (v9 < v13)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_18F9FF258(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v41 = *((_QWORD *)v11 + 2);
    v40 = *((_QWORD *)v11 + 3);
    v12 = v41 + 1;
    if (v41 >= v40 >> 1)
      v11 = sub_18F9FF258((char *)(v40 > 1), v41 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v42 = v11 + 32;
    v43 = &v11[16 * v41 + 32];
    *(_QWORD *)v43 = v13;
    *((_QWORD *)v43 + 1) = v9;
    if (v41)
    {
      v107 = v9;
      while (1)
      {
        v44 = v12 - 1;
        if (v12 >= 4)
        {
          v49 = &v42[16 * v12];
          v50 = *((_QWORD *)v49 - 8);
          v51 = *((_QWORD *)v49 - 7);
          v55 = __OFSUB__(v51, v50);
          v52 = v51 - v50;
          if (v55)
            goto LABEL_135;
          v54 = *((_QWORD *)v49 - 6);
          v53 = *((_QWORD *)v49 - 5);
          v55 = __OFSUB__(v53, v54);
          v47 = v53 - v54;
          v48 = v55;
          if (v55)
            goto LABEL_136;
          v56 = v12 - 2;
          v57 = &v42[16 * v12 - 32];
          v59 = *(_QWORD *)v57;
          v58 = *((_QWORD *)v57 + 1);
          v55 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          if (v55)
            goto LABEL_138;
          v55 = __OFADD__(v47, v60);
          v61 = v47 + v60;
          if (v55)
            goto LABEL_141;
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v55 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v55)
              goto LABEL_145;
            v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v73 = *((_QWORD *)v11 + 4);
            v74 = *((_QWORD *)v11 + 5);
            v55 = __OFSUB__(v74, v73);
            v66 = v74 - v73;
            v67 = v55;
            goto LABEL_99;
          }
          v46 = *((_QWORD *)v11 + 4);
          v45 = *((_QWORD *)v11 + 5);
          v55 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          v48 = v55;
        }
        if ((v48 & 1) != 0)
          goto LABEL_137;
        v56 = v12 - 2;
        v62 = &v42[16 * v12 - 32];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v65 = __OFSUB__(v63, v64);
        v66 = v63 - v64;
        v67 = v65;
        if (v65)
          goto LABEL_140;
        v68 = &v42[16 * v44];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v55 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v55)
          goto LABEL_143;
        if (__OFADD__(v66, v71))
          goto LABEL_144;
        if (v66 + v71 >= v47)
        {
          v72 = v47 < v71;
LABEL_105:
          if (v72)
            v44 = v56;
          goto LABEL_107;
        }
LABEL_99:
        if ((v67 & 1) != 0)
          goto LABEL_139;
        v75 = &v42[16 * v44];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v55 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v55)
          goto LABEL_142;
        if (v78 < v66)
          goto LABEL_15;
LABEL_107:
        v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        v84 = v10;
        if (!v10)
          goto LABEL_157;
        v85 = v11;
        v86 = &v42[16 * v83];
        v87 = *(_QWORD *)v86;
        v88 = v42;
        v89 = v44;
        v90 = &v42[16 * v44];
        v91 = *((_QWORD *)v90 + 1);
        v92 = v84;
        sub_18F9FEFC0((char *)(v84 + 16 * *(_QWORD *)v86), (char *)(v84 + 16 * *(_QWORD *)v90), v84 + 16 * v91, __dst);
        if (v1)
          goto LABEL_115;
        if (v91 < v87)
          goto LABEL_132;
        if (v89 > *((_QWORD *)v85 + 2))
          goto LABEL_133;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v88[16 * v83 + 8] = v91;
        v93 = *((_QWORD *)v85 + 2);
        if (v89 >= v93)
          goto LABEL_134;
        v11 = v85;
        v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        v42 = v88;
        *((_QWORD *)v85 + 2) = v93 - 1;
        v10 = v92;
        v9 = v107;
        if (v93 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v106;
    if (v9 >= v106)
    {
      v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105))
    goto LABEL_153;
  if (v13 + v105 >= v3)
    v32 = v3;
  else
    v32 = v13 + v105;
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      v33 = (_QWORD *)(v10 + 16 * v9);
      do
      {
        v34 = (uint64_t *)(v10 + 16 * v9);
        v35 = *v34;
        v36 = v34[1];
        v37 = v13;
        v38 = v33;
        do
        {
          v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_18FA2896C() & 1) == 0)
            break;
          if (!v10)
            goto LABEL_156;
          v35 = *v38;
          v36 = v38[1];
          *(_OWORD *)v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  result = sub_18FA288A0();
  __break(1u);
  return result;
}

uint64_t sub_18F9FEEF4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  BOOL v13;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (result = sub_18FA2896C(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      result = *v12;
      v10 = v12[1];
      *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_18F9FEFC0(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t result;
  char *v25;
  char *v26;
  char *v27;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v27 = __src;
  v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v17 = &v4[16 * v13];
      v25 = v17;
      v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v18 = (char *)(a3 - 16);
        v19 = v6;
        while (1)
        {
          v20 = v18 + 16;
          v21 = *((_QWORD *)v19 - 2);
          v22 = *((_QWORD *)v19 - 1);
          v19 -= 16;
          v23 = *((_QWORD *)v17 - 2) == v21 && *((_QWORD *)v17 - 1) == v22;
          if (v23 || (sub_18FA2896C() & 1) == 0)
          {
            v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17)
              *(_OWORD *)v18 = *((_OWORD *)v17 - 1);
            v19 = v6;
            v17 -= 16;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v20 != v6 || v18 >= v6)
              *(_OWORD *)v18 = *(_OWORD *)v19;
            v27 = v19;
            if (v19 <= v7)
              goto LABEL_50;
          }
          v18 -= 16;
          v6 = v19;
          if (v17 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        v15 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
        if (v15 || (sub_18FA2896C() & 1) == 0)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v26 = v4;
          v16 = v6;
        }
        else
        {
          v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      v27 = v7;
    }
LABEL_50:
    sub_18F9FF350((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  result = sub_18FA288F4();
  __break(1u);
  return result;
}

char *sub_18F9FF258(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE180FE0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_18F9FF350(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    result = (char *)sub_18FA288F4();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

char *sub_18F9FF3F8(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    result = (char *)sub_18FA288F4();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

char *sub_18F9FF4A0(uint64_t a1)
{
  return sub_18F9FF258(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_18F9FF4B4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_18FA27E98();
  if (!result || (result = sub_18FA27EB0(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_18FA27EA4();
      sub_18FA28234();
      sub_18F9D727C(&qword_1EE180FF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9A18], MEMORY[0x1E0CA9A10]);
      return sub_18FA28210();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_18F9FF578(uint64_t a1)
{
  return sub_18F9DEF9C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

void sub_18F9FF58C()
{
  JUMPOUT(0x19400549CLL);
}

id sub_18F9FF5A0(void *a1)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t *v6;
  unsigned __int8 *v7;
  uint64_t *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  unsigned __int8 v19;
  unsigned __int8 v20;
  unsigned __int8 *v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  _QWORD *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  unint64_t v52;
  id v53;
  id v54;
  void *v55;
  id v56;
  void *v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  unint64_t v63;
  id v64;
  objc_class *v65;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  _BYTE *v70;
  uint64_t *v71;
  __int128 v72;
  void *v73;
  uint64_t v74;
  _OWORD v75[2];
  objc_super v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  __int128 v82;
  uint64_t v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;

  v3 = sub_18FA2803C();
  *(_QWORD *)&v67 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t *)&v1[OBJC_IVAR___CNManagedDuplicate_signature];
  *v6 = 0;
  v6[1] = 0;
  v7 = &v1[OBJC_IVAR___CNManagedDuplicate_isAvailable];
  v1[OBJC_IVAR___CNManagedDuplicate_isAvailable] = 1;
  *(_QWORD *)&v68 = &v1[OBJC_IVAR___CNManagedDuplicate_isIgnored];
  v1[OBJC_IVAR___CNManagedDuplicate_isIgnored] = 0;
  v8 = (uint64_t *)&v1[OBJC_IVAR___CNManagedDuplicate_primaryID];
  *v8 = 0;
  v8[1] = 0;
  v9 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v69 = &v1[OBJC_IVAR___CNManagedDuplicate_managedCohorts];
  *(_QWORD *)&v1[OBJC_IVAR___CNManagedDuplicate_managedCohorts] = MEMORY[0x1E0DEE9D8];
  v10 = &v1[OBJC_IVAR___CNManagedDuplicate_userSelectedContactImage];
  *(_OWORD *)v10 = xmmword_18FA410A0;
  *((_OWORD *)v10 + 1) = 0u;
  *((_OWORD *)v10 + 2) = 0u;
  *((_OWORD *)v10 + 3) = 0u;
  *((_OWORD *)v10 + 4) = 0u;
  *((_OWORD *)v10 + 5) = 0u;
  *((_OWORD *)v10 + 6) = 0u;
  v71 = (uint64_t *)&v1[OBJC_IVAR___CNManagedDuplicate_userSelectedContactPoster];
  *(_OWORD *)&v1[OBJC_IVAR___CNManagedDuplicate_userSelectedContactPoster] = xmmword_18FA411C0;
  *(_QWORD *)&v1[OBJC_IVAR___CNManagedDuplicate__contactStore] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___CNManagedDuplicate__privateContacts] = v9;
  *(_QWORD *)&v1[OBJC_IVAR___CNManagedDuplicate__privateMergedContact] = 0;
  v11 = &v1[OBJC_IVAR___CNManagedDuplicate__mergedNameComponents];
  v12 = sub_18FA27FB8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v70 = v1;
  *(_QWORD *)&v72 = a1;
  v13 = objc_msgSend(a1, sel_signature);
  if (v13)
  {
    v14 = v13;
    v15 = sub_18FA2833C();
    v17 = v16;

  }
  else
  {
    v15 = 0;
    v17 = 0;
  }
  swift_beginAccess();
  *v6 = v15;
  v6[1] = v17;
  swift_bridgeObjectRelease();
  v18 = (void *)v72;
  v19 = objc_msgSend((id)v72, sel_isAvailable);
  swift_beginAccess();
  *v7 = v19;
  v20 = objc_msgSend(v18, sel_isIgnored);
  v21 = (unsigned __int8 *)v68;
  swift_beginAccess();
  *v21 = v20;
  v22 = objc_msgSend(v18, sel_primaryID);
  if (v22)
  {
    v23 = v22;
    v24 = sub_18FA2833C();
    v26 = v25;

  }
  else
  {
    v24 = 0;
    v26 = 0;
  }
  swift_beginAccess();
  *v8 = v24;
  v8[1] = v26;
  swift_bridgeObjectRelease();
  v27 = objc_msgSend(v18, sel_cohorts);
  v28 = MEMORY[0x1E0DEE9D8];
  if (v27)
  {
    v87 = MEMORY[0x1E0DEE9D8];
    v29 = v27;
    sub_18FA28684();

    sub_18F9D727C((unint64_t *)&unk_1EE181010, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58], MEMORY[0x1E0CAFB80]);
    sub_18FA286D8();
    while (v79)
    {
      sub_18F9DFD48(&v77, v75);
      sub_18F9DFCEC((uint64_t)v75, (uint64_t)&v74);
      type metadata accessor for CNDuplicateCohort();
      swift_dynamicCast();
      v30 = v73;
      v31 = objc_allocWithZone((Class)type metadata accessor for ManagedCohort());
      sub_18FA06918(v30);

      v32 = __swift_destroy_boxed_opaque_existential_0((uint64_t)v75);
      MEMORY[0x194004F98](v32);
      if (*(_QWORD *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_18FA28474();
      sub_18FA284BC();
      sub_18FA2845C();
      sub_18FA286D8();
    }
    (*(void (**)(char *, uint64_t))(v67 + 8))(v5, v3);
    v28 = v87;

    v18 = (void *)v72;
  }
  v33 = (_QWORD *)v69;
  swift_beginAccess();
  *v33 = v28;
  swift_bridgeObjectRelease();
  v34 = v18;
  sub_18F9FA93C(v34, &v77);
  v35 = v77;
  v72 = v78;
  v36 = v79;
  v68 = v82;
  v69 = v80;
  v37 = v81;
  v38 = v83;
  v67 = v84;
  v39 = v85;
  v40 = v86;
  swift_beginAccess();
  v41 = *(_QWORD *)v10;
  v42 = *((_QWORD *)v10 + 1);
  v43 = *((_QWORD *)v10 + 2);
  v44 = *((_QWORD *)v10 + 3);
  v45 = *((_QWORD *)v10 + 4);
  v46 = *((_QWORD *)v10 + 5);
  v47 = *((_QWORD *)v10 + 6);
  v48 = *((_QWORD *)v10 + 7);
  v49 = *((_OWORD *)v10 + 4);
  v50 = *((_OWORD *)v10 + 5);
  v51 = *((_QWORD *)v10 + 12);
  v52 = *((_QWORD *)v10 + 13);
  *(_QWORD *)v10 = v35;
  *(_OWORD *)(v10 + 8) = v72;
  *((_QWORD *)v10 + 3) = v36;
  *((_OWORD *)v10 + 2) = v69;
  *((_QWORD *)v10 + 6) = v37;
  *(_OWORD *)(v10 + 56) = v68;
  *((_QWORD *)v10 + 9) = v38;
  *((_OWORD *)v10 + 5) = v67;
  *((_QWORD *)v10 + 12) = v39;
  *((_QWORD *)v10 + 13) = v40;
  sub_18F9EA7D4(v41, v42, v43, v44, v45, v46, v47, v48, v49, *((uint64_t *)&v49 + 1), v50, *((unint64_t *)&v50 + 1), v51, v52);
  v53 = v34;
  v54 = objc_msgSend(v53, sel_selectedContactPoster);
  if (v54)
  {
    v55 = v54;
    v56 = objc_msgSend(v54, sel_posterData);
    if (v56)
    {
      v57 = v56;
      v58 = sub_18FA280A8();
      v60 = v59;

    }
    else
    {

      v58 = 0;
      v60 = 0xF000000000000000;
    }
  }
  else
  {

    v58 = 0;
    v60 = 0xB000000000000000;
  }
  v61 = v71;
  swift_beginAccess();
  v62 = *v61;
  v63 = v61[1];
  *v61 = v58;
  v61[1] = v60;
  sub_18F9EA8E8(v62, v63);
  v64 = v70;

  v65 = (objc_class *)type metadata accessor for ManagedDuplicate();
  v76.receiver = v64;
  v76.super_class = v65;
  return objc_msgSendSuper2(&v76, sel_init);
}

id sub_18F9FFB58(id a1)
{
  _QWORD *v1;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  void *v8;
  NSString *v9;
  double x;
  double y;
  double width;
  double height;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v20;
  unint64_t v21;
  NSRect v22;

  v3 = v1[7];
  v4 = v1[9];
  v5 = v1[11];
  v6 = v1[13];
  v21 = v1[3];
  v20 = v1[6];
  if (v1[5] >> 60 == 15)
    v7 = 0;
  else
    v7 = (void *)sub_18FA28090();
  objc_msgSend(a1, sel_setImageData_, v7, v20);

  if (v6 >> 60 == 15)
    v8 = 0;
  else
    v8 = (void *)sub_18FA28090();
  objc_msgSend(a1, sel_setThumbnailImageData_, v8);

  swift_bridgeObjectRetain();
  v9 = (NSString *)sub_18FA28330();
  swift_bridgeObjectRelease();
  v22 = NSRectFromString(v9);
  x = v22.origin.x;
  y = v22.origin.y;
  width = v22.size.width;
  height = v22.size.height;

  objc_msgSend(a1, sel_setCropRect_, x, y, width, height);
  if (v4)
    v14 = (void *)sub_18FA28330();
  else
    v14 = 0;
  objc_msgSend(a1, sel_setImageType_, v14);

  if (v3 >> 60 == 15)
    v15 = 0;
  else
    v15 = (void *)sub_18FA28090();
  objc_msgSend(a1, sel_setImageHash_, v15);

  if (v4)
    v16 = (void *)sub_18FA28330();
  else
    v16 = 0;
  objc_msgSend(a1, sel_setImageType_, v16);

  if (v5 >> 60 == 15)
    v17 = 0;
  else
    v17 = (void *)sub_18FA28090();
  objc_msgSend(a1, sel_setMemojiMetadata_, v17);

  if (v21 >> 60 == 15)
    v18 = 0;
  else
    v18 = (void *)sub_18FA28090();
  objc_msgSend(a1, sel_setFullscreenImageData_, v18);

  return a1;
}

void *sub_18F9FFDCC(unint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v19;

  if (a1 >> 62)
    goto LABEL_29;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; v3 = sub_18FA288B8())
  {
    v4 = 0;
    v19 = v3;
    v5 = a2[2];
    while (1)
    {
      v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x194005370](v4, a1) : *(id *)(a1 + 32 + 8 * v4);
      v7 = v6;
      if (__OFADD__(v4++, 1))
        break;
      v9 = objc_msgSend(v6, sel_identifier);
      v10 = sub_18FA2833C();
      v12 = v11;

      if (v5)
      {
        v13 = a2[4] == v10 && a2[5] == v12;
        if (v13 || (sub_18FA2896C() & 1) != 0)
        {
LABEL_25:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v7;
        }
        if (v5 != 1)
        {
          v14 = a2 + 7;
          v15 = 1;
          while (1)
          {
            v16 = v15 + 1;
            if (__OFADD__(v15, 1))
              break;
            v17 = *(v14 - 1) == v10 && *v14 == v12;
            if (v17 || (sub_18FA2896C() & 1) != 0)
              goto LABEL_25;
            v14 += 2;
            ++v15;
            if (v16 == v5)
              goto LABEL_4;
          }
          __break(1u);
          break;
        }
      }
LABEL_4:

      swift_bridgeObjectRelease();
      if (v4 == v19)
        goto LABEL_30;
    }
    __break(1u);
LABEL_29:
    swift_bridgeObjectRetain();
  }
LABEL_30:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t _s8Contacts16ManagedDuplicateC21preferredPrimaryIDFor_12contactStoreSSSgSaySo16CNMutableContactCG_So09CNContactH0CtFZ_0(unint64_t a1, void *a2)
{
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  uint64_t result;
  id v7;
  id v8;
  uint64_t v9;

  v3 = (_QWORD *)sub_18FA11188(a2);
  v4 = sub_18F9FFDCC(a1, v3);
  swift_bridgeObjectRelease();
  if (v4)
    goto LABEL_8;
  if (!(a1 >> 62))
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v5)
      goto LABEL_4;
LABEL_11:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  result = sub_18FA288B8();
  if (!result)
    goto LABEL_11;
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    v7 = (id)MEMORY[0x194005370](0, a1);
    goto LABEL_7;
  }
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v7 = *(id *)(a1 + 32);
LABEL_7:
    v4 = v7;
    swift_bridgeObjectRelease();
LABEL_8:
    v8 = objc_msgSend(v4, sel_identifier);

    v9 = sub_18FA2833C();
    return v9;
  }
  __break(1u);
  return result;
}

uint64_t _s8Contacts16ManagedDuplicateC012signatureForA0ySSSaySo16CNMutableContactCGFZ_0(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_18FA288B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
  {
LABEL_15:
    v20 = v3;
    swift_bridgeObjectRetain();
    sub_18F9FE7A4(&v20);
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EAB8);
    sub_18FA02F88();
    v14 = sub_18FA282C4();
    v16 = v15;
    swift_release();
    sub_18F9FD4E4(v14, v16);
    v18 = v17;
    swift_bridgeObjectRelease();
    return v18;
  }
  v20 = MEMORY[0x1E0DEE9D8];
  sub_18F9DE90C(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = 0;
    v3 = v20;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = (id)MEMORY[0x194005370](v4, a1);
      else
        v5 = *(id *)(a1 + 8 * v4 + 32);
      v6 = v5;
      v7 = objc_msgSend(v5, sel_externalURI);
      if (!v7)
      {
        v7 = objc_msgSend(v6, sel_externalIdentifier);
        if (!v7)
          v7 = objc_msgSend(v6, sel_identifier);
      }
      v8 = sub_18FA2833C();
      v10 = v9;

      v20 = v3;
      v12 = *(_QWORD *)(v3 + 16);
      v11 = *(_QWORD *)(v3 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_18F9DE90C(v11 > 1, v12 + 1, 1);
        v3 = v20;
      }
      ++v4;
      *(_QWORD *)(v3 + 16) = v12 + 1;
      v13 = v3 + 16 * v12;
      *(_QWORD *)(v13 + 32) = v8;
      *(_QWORD *)(v13 + 40) = v10;
    }
    while (v2 != v4);
    goto LABEL_15;
  }
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

id sub_18FA00308(unint64_t a1, void *a2)
{
  _BYTE *v2;
  uint64_t *v5;
  uint64_t *v6;
  _QWORD *v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  id result;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  id v30;
  objc_super v31;
  uint64_t v32;

  v5 = (uint64_t *)&v2[OBJC_IVAR___CNManagedDuplicate_signature];
  *v5 = 0;
  v5[1] = 0;
  v2[OBJC_IVAR___CNManagedDuplicate_isAvailable] = 1;
  v2[OBJC_IVAR___CNManagedDuplicate_isIgnored] = 0;
  v6 = (uint64_t *)&v2[OBJC_IVAR___CNManagedDuplicate_primaryID];
  *v6 = 0;
  v6[1] = 0;
  v7 = &v2[OBJC_IVAR___CNManagedDuplicate_managedCohorts];
  v8 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v2[OBJC_IVAR___CNManagedDuplicate_managedCohorts] = MEMORY[0x1E0DEE9D8];
  v9 = &v2[OBJC_IVAR___CNManagedDuplicate_userSelectedContactImage];
  *v9 = xmmword_18FA410A0;
  v9[1] = 0u;
  v9[2] = 0u;
  v9[3] = 0u;
  v9[4] = 0u;
  v9[5] = 0u;
  v9[6] = 0u;
  *(_OWORD *)&v2[OBJC_IVAR___CNManagedDuplicate_userSelectedContactPoster] = xmmword_18FA411C0;
  v10 = OBJC_IVAR___CNManagedDuplicate__contactStore;
  *(_QWORD *)&v2[OBJC_IVAR___CNManagedDuplicate__contactStore] = 0;
  v11 = OBJC_IVAR___CNManagedDuplicate__privateContacts;
  *(_QWORD *)&v2[OBJC_IVAR___CNManagedDuplicate__privateContacts] = v8;
  *(_QWORD *)&v2[OBJC_IVAR___CNManagedDuplicate__privateMergedContact] = 0;
  v12 = &v2[OBJC_IVAR___CNManagedDuplicate__mergedNameComponents];
  v13 = sub_18FA27FB8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = *(void **)&v2[v10];
  *(_QWORD *)&v2[v10] = a2;
  v15 = v2;
  v30 = a2;

  *(_QWORD *)&v2[v11] = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v16 = sub_18FA288B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v17 = MEMORY[0x1E0DEE9D8];
  if (!v16)
  {
LABEL_11:
    swift_beginAccess();
    *v7 = v17;
    swift_bridgeObjectRelease();
    v23 = _s8Contacts16ManagedDuplicateC21preferredPrimaryIDFor_12contactStoreSSSgSaySo16CNMutableContactCG_So09CNContactH0CtFZ_0(a1, v30);
    v25 = v24;
    swift_beginAccess();
    *v6 = v23;
    v6[1] = v25;
    swift_bridgeObjectRelease();
    v26 = _s8Contacts16ManagedDuplicateC012signatureForA0ySSSaySo16CNMutableContactCGFZ_0(a1);
    v28 = v27;
    swift_bridgeObjectRelease();
    swift_beginAccess();
    *v5 = v26;
    v5[1] = v28;

    swift_bridgeObjectRelease();
    v31.receiver = v15;
    v31.super_class = (Class)type metadata accessor for ManagedDuplicate();
    return objc_msgSendSuper2(&v31, sel_init);
  }
  v32 = MEMORY[0x1E0DEE9D8];
  result = (id)sub_18FA28858();
  if ((v16 & 0x8000000000000000) == 0)
  {
    v29 = v15;
    v19 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v20 = (id)MEMORY[0x194005370](v19, a1);
      else
        v20 = *(id *)(a1 + 8 * v19 + 32);
      v21 = v20;
      ++v19;
      v22 = objc_allocWithZone((Class)type metadata accessor for ManagedCohort());
      sub_18FA06B94(v21);

      sub_18FA28834();
      sub_18FA28864();
      sub_18FA28870();
      sub_18FA28840();
    }
    while (v16 != v19);
    v17 = v32;
    v15 = v29;
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ManagedDuplicate()
{
  uint64_t result;

  result = qword_1EE17EE40;
  if (!qword_1EE17EE40)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_18FA00650(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_18FA288F4();
  __break(1u);
  return result;
}

uint64_t sub_18FA00744(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_18FA288F4();
  __break(1u);
  return result;
}

uint64_t sub_18FA00834(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE180CA8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_18FA288F4();
  __break(1u);
  return result;
}

uint64_t sub_18FA0093C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 8 * a1 + 32;
    v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_18FA288F4();
  __break(1u);
  return result;
}

uint64_t sub_18FA00A40(id *__src, id *a2, unint64_t a3, void **a4, char *a5)
{
  id *v6;
  id *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void **v15;
  void **v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  void **v27;
  id *v28;
  char *v29;
  id *v30;
  id *v31;
  void *v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v43;
  unint64_t v44;
  uint64_t result;
  char *v46;
  id *v47;
  char *v49;
  id *v50;
  id *v52;
  char *v53;
  void **v54;
  id *v55;

  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v55 = __src;
  v54 = a4;
  if (v10 >= v12 >> 3)
  {
    if (v11 < -7)
      goto LABEL_61;
    if (a4 != a2 || &a2[v13] <= a4)
      memmove(a4, a2, 8 * v13);
    v29 = (char *)&a4[v13];
    v53 = v29;
    v55 = v6;
    if (v7 >= v6 || v11 < 8)
    {
LABEL_60:
      sub_18F9FF3F8((void **)&v55, (const void **)&v54, &v53);
      return 1;
    }
    v46 = &a5[OBJC_IVAR___CNManagedDuplicate_primaryID];
    swift_beginAccess();
    v30 = (id *)(a3 - 8);
    v31 = v6;
    v47 = v7;
    while (1)
    {
      v50 = v30 + 1;
      v52 = (id *)v29;
      v33 = (void *)*((_QWORD *)v29 - 1);
      v29 -= 8;
      v32 = v33;
      v34 = *--v31;
      v35 = v32;
      v36 = v34;
      v37 = objc_msgSend(v35, sel_identifier);
      v38 = sub_18FA2833C();
      v40 = v39;

      v41 = *((_QWORD *)v46 + 1);
      if (v41)
      {
        if (v38 == *(_QWORD *)v46 && v41 == v40)
        {

          swift_bridgeObjectRelease();
          v44 = (unint64_t)v47;
LABEL_57:
          v29 = (char *)v52;
          if (v50 != v6 || v30 >= v6)
            *v30 = *v31;
          v55 = v31;
          if ((unint64_t)v31 <= v44)
            goto LABEL_60;
          goto LABEL_41;
        }
        v43 = sub_18FA2896C();

        swift_bridgeObjectRelease();
        v44 = (unint64_t)v47;
        if ((v43 & 1) != 0)
          goto LABEL_57;
      }
      else
      {

        swift_bridgeObjectRelease();
        v44 = (unint64_t)v47;
      }
      v53 = v29;
      if (v50 < v52 || v30 >= v52 || v50 != v52)
        *v30 = *(id *)v29;
      v31 = v6;
      if ((unint64_t)v6 <= v44)
        goto LABEL_60;
LABEL_41:
      --v30;
      v6 = v31;
      if (v29 <= (char *)a4)
        goto LABEL_60;
    }
  }
  if (v8 >= -7)
  {
    if (a4 != __src || &__src[v10] <= a4)
      memmove(a4, __src, 8 * v10);
    v49 = (char *)&a4[v10];
    v53 = v49;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      v14 = &a5[OBJC_IVAR___CNManagedDuplicate_primaryID];
      swift_beginAccess();
      v15 = a4;
      while (1)
      {
        v16 = v7;
        v17 = *v15;
        v18 = *v6;
        v19 = v17;
        v20 = objc_msgSend(v18, sel_identifier);
        v21 = sub_18FA2833C();
        v23 = v22;

        v24 = *((_QWORD *)v14 + 1);
        if (!v24)
          break;
        if (v21 == *(_QWORD *)v14 && v24 == v23)
        {

          swift_bridgeObjectRelease();
        }
        else
        {
          v26 = sub_18FA2896C();

          swift_bridgeObjectRelease();
          if ((v26 & 1) == 0)
            goto LABEL_21;
        }
        v28 = v6 + 1;
        v27 = v16;
        if (v16 < v6 || v16 >= v28 || v16 != v6)
          *v16 = *v6;
LABEL_29:
        v7 = v27 + 1;
        if (v15 < (void **)v49)
        {
          v6 = v28;
          if ((unint64_t)v28 < a3)
            continue;
        }
        v55 = v7;
        goto LABEL_60;
      }

      swift_bridgeObjectRelease();
LABEL_21:
      v27 = v16;
      if (v16 != v15)
        *v16 = *v15;
      v54 = ++v15;
      v28 = v6;
      goto LABEL_29;
    }
    goto LABEL_60;
  }
LABEL_61:

  result = sub_18FA288F4();
  __break(1u);
  return result;
}

void sub_18FA00E80(uint64_t *a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  char *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v24;
  id *v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v35;
  uint64_t *v36;
  int64_t v37;
  int64_t v38;
  uint64_t *v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  int64_t v43;
  void *v44;
  int64_t v45;
  uint64_t v46;
  void *v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v55;
  char *v56;
  unint64_t v57;
  unint64_t v58;
  char *v59;
  int64_t *v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  unint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  BOOL v82;
  uint64_t v83;
  char v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  BOOL v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  char *v101;
  uint64_t v102;
  unint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  int64_t v107;
  const void *v108;
  char *v109;
  int64_t v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  void *v117;
  id v118;
  id v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void *v125;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  id *v131;
  unint64_t v132;
  char *v133;
  char *v134;
  char *v135;
  unint64_t v136;
  char *v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  int64_t v142;
  char *v143;
  char *v144;
  void **v145;
  void *v146;
  int64_t v147;
  int64_t v148;
  id *v149;
  id v150;
  int64_t v151;
  int64_t v152;
  id *v153;
  uint64_t v154;
  _QWORD *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  id *v160;
  uint64_t v161;

  v4 = a1[1];
  v5 = a2;
  v6 = sub_18FA2893C();
  v147 = v4;
  if (v6 >= v4)
  {
    if (v4 < 0)
      goto LABEL_179;
    if ((unint64_t)v4 <= 1)
    {

      return;
    }
    v111 = *a1;
    v112 = (_QWORD *)(v5 + OBJC_IVAR___CNManagedDuplicate_primaryID);
    v146 = (void *)v5;
    v150 = (id)v5;
    v113 = -1;
    v114 = 1;
    v115 = v111;
    while (1)
    {
      swift_beginAccess();
      v156 = v114;
      v116 = *(void **)(v111 + 8 * v114);
      v159 = v113;
      v154 = v115;
      while (1)
      {
        v117 = *(void **)v115;
        v118 = v116;
        v119 = v117;
        v5 = (int64_t)objc_msgSend(v118, sel_identifier);
        v120 = sub_18FA2833C();
        v122 = v121;

        v123 = v112[1];
        if (!v123)
          break;
        if (v120 == *v112 && v123 == v122)
        {

          swift_bridgeObjectRelease();
        }
        else
        {
          v5 = sub_18FA2896C();

          swift_bridgeObjectRelease();
          if ((v5 & 1) == 0)
            goto LABEL_126;
        }
        if (!v111)
          goto LABEL_183;
        v125 = *(void **)v115;
        v116 = *(void **)(v115 + 8);
        *(_QWORD *)v115 = v116;
        *(_QWORD *)(v115 + 8) = v125;
        v115 -= 8;
        if (__CFADD__(v113++, 1))
          goto LABEL_126;
      }

      swift_bridgeObjectRelease();
LABEL_126:
      v114 = v156 + 1;
      v115 = v154 + 8;
      v113 = v159 - 1;
      if (v156 + 1 == v147)
      {

        return;
      }
    }
  }
  if (v4 >= 0)
    v7 = v4;
  else
    v7 = v4 + 1;
  if (v4 < -1)
    goto LABEL_188;
  v141 = v6;
  v146 = (void *)v5;
  v138 = a1;
  if (v4 < 2)
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
    v161 = MEMORY[0x1E0DEE9D8];
    v145 = (void **)((MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_142:
      if (v13 >= 2)
      {
        v127 = *v138;
        v157 = *v138;
        do
        {
          v128 = v13 - 2;
          if (v13 < 2)
            goto LABEL_174;
          if (!v127)
            goto LABEL_187;
          v5 = (int64_t)v10;
          v129 = *(_QWORD *)&v10[16 * v128 + 32];
          v130 = *(_QWORD *)&v10[16 * v13 + 24];
          v160 = (id *)(v127 + 8 * v129);
          v131 = (id *)(v127 + 8 * *(_QWORD *)&v10[16 * v13 + 16]);
          v132 = v127 + 8 * v130;
          v133 = v146;
          sub_18FA00A40(v160, v131, v132, v145, v133);
          if (v2)
            goto LABEL_155;

          if (v130 < v129)
            goto LABEL_175;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            v134 = (char *)v5;
          else
            v134 = sub_18F9FF4A0(v5);
          if (v128 >= *((_QWORD *)v134 + 2))
            goto LABEL_176;
          v135 = &v134[16 * v128 + 32];
          *(_QWORD *)v135 = v129;
          *((_QWORD *)v135 + 1) = v130;
          v136 = *((_QWORD *)v134 + 2);
          if (v13 > v136)
            goto LABEL_177;
          v5 = v136 - 1;
          v137 = v134;
          memmove(&v134[16 * v13 + 16], &v134[16 * v13 + 32], 16 * (v136 - v13));
          v10 = v137;
          *((_QWORD *)v137 + 2) = v136 - 1;
          v13 = v136 - 1;
          v127 = v157;
        }
        while (v136 > 2);
      }
      swift_bridgeObjectRelease();
      *(_QWORD *)((v161 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_18FA2845C();

LABEL_157:
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v8 = v7 >> 1;
    sub_18FA02F4C();
    v9 = sub_18FA284B0();
    *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    v145 = (void **)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
    v161 = v9;
  }
  v11 = *a1;
  v155 = (_QWORD *)(v5 + OBJC_IVAR___CNManagedDuplicate_primaryID);
  swift_beginAccess();
  v12 = 0;
  v139 = v11 + 16;
  v140 = v11 - 8;
  v10 = (char *)MEMORY[0x1E0DEE9D8];
  v158 = v11;
  while (1)
  {
    v5 = v12++;
    if (v12 < v4)
    {
      v14 = v10;
      v15 = *(void **)(v11 + 8 * v5);
      v16 = *(id *)(v11 + 8 * v12);
      v17 = v15;
      v18 = objc_msgSend(v16, sel_identifier);
      v19 = sub_18FA2833C();
      v21 = v20;

      v22 = v155[1];
      if (v22)
      {
        if (v19 == *v155 && v22 == v21)
          v24 = 1;
        else
          v24 = sub_18FA2896C();
      }
      else
      {
        v24 = 0;
      }

      swift_bridgeObjectRelease();
      v12 = v5 + 2;
      if (v5 + 2 < v147)
      {
        v151 = v5;
        v25 = (id *)(v139 + 8 * v5);
        while (1)
        {
          v26 = *(v25 - 1);
          v27 = *v25;
          v28 = v26;
          v29 = objc_msgSend(v27, sel_identifier);
          v30 = sub_18FA2833C();
          v32 = v31;

          v33 = v155[1];
          if (v33)
          {
            if (v30 == *v155 && v33 == v32)
            {

              swift_bridgeObjectRelease();
              if ((v24 & 1) == 0)
              {
                v10 = v14;
                v11 = v158;
                v5 = v151;
                goto LABEL_48;
              }
            }
            else
            {
              v35 = sub_18FA2896C();

              swift_bridgeObjectRelease();
              if (((v24 ^ v35) & 1) != 0)
                goto LABEL_38;
            }
          }
          else
          {

            swift_bridgeObjectRelease();
            if ((v24 & 1) != 0)
            {
              v10 = v14;
              v11 = v158;
              v5 = v151;
              if (v12 < v151)
                goto LABEL_180;
              goto LABEL_41;
            }
          }
          ++v12;
          ++v25;
          if (v147 == v12)
          {
            v12 = v147;
LABEL_38:
            v5 = v151;
            break;
          }
        }
      }
      v10 = v14;
      v11 = v158;
      if ((v24 & 1) != 0)
      {
        if (v12 < v5)
          goto LABEL_180;
LABEL_41:
        if (v5 < v12)
        {
          v36 = (uint64_t *)(v140 + 8 * v12);
          v37 = v12;
          v38 = v5;
          v39 = (uint64_t *)(v11 + 8 * v5);
          do
          {
            if (v38 != --v37)
            {
              if (!v11)
                goto LABEL_186;
              v40 = *v39;
              *v39 = *v36;
              *v36 = v40;
            }
            ++v38;
            --v36;
            ++v39;
          }
          while (v38 < v37);
        }
      }
    }
LABEL_48:
    v41 = v147;
    if (v12 < v147)
    {
      if (__OFSUB__(v12, v5))
        goto LABEL_178;
      if (v12 - v5 < v141)
        break;
    }
LABEL_73:
    if (v12 < v5)
      goto LABEL_173;
    v56 = v10;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      v10 = v56;
    else
      v10 = sub_18F9FF258(0, *((_QWORD *)v56 + 2) + 1, 1, v56);
    v58 = *((_QWORD *)v10 + 2);
    v57 = *((_QWORD *)v10 + 3);
    v13 = v58 + 1;
    if (v58 >= v57 >> 1)
      v10 = sub_18F9FF258((char *)(v57 > 1), v58 + 1, 1, v10);
    *((_QWORD *)v10 + 2) = v13;
    v59 = v10 + 32;
    v60 = (int64_t *)&v10[16 * v58 + 32];
    *v60 = v5;
    v60[1] = v12;
    if (v58)
    {
      v142 = v12;
      v144 = v10 + 32;
      while (1)
      {
        v61 = v13 - 1;
        if (v13 >= 4)
        {
          v66 = &v59[16 * v13];
          v67 = *((_QWORD *)v66 - 8);
          v68 = *((_QWORD *)v66 - 7);
          v72 = __OFSUB__(v68, v67);
          v69 = v68 - v67;
          if (v72)
            goto LABEL_162;
          v71 = *((_QWORD *)v66 - 6);
          v70 = *((_QWORD *)v66 - 5);
          v72 = __OFSUB__(v70, v71);
          v64 = v70 - v71;
          v65 = v72;
          if (v72)
            goto LABEL_163;
          v73 = v13 - 2;
          v74 = &v59[16 * v13 - 32];
          v76 = *(_QWORD *)v74;
          v75 = *((_QWORD *)v74 + 1);
          v72 = __OFSUB__(v75, v76);
          v77 = v75 - v76;
          if (v72)
            goto LABEL_165;
          v72 = __OFADD__(v64, v77);
          v78 = v64 + v77;
          if (v72)
            goto LABEL_168;
          if (v78 >= v69)
          {
            v96 = &v59[16 * v61];
            v98 = *(_QWORD *)v96;
            v97 = *((_QWORD *)v96 + 1);
            v72 = __OFSUB__(v97, v98);
            v99 = v97 - v98;
            if (v72)
              goto LABEL_172;
            v89 = v64 < v99;
            goto LABEL_111;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v90 = *((_QWORD *)v10 + 4);
            v91 = *((_QWORD *)v10 + 5);
            v72 = __OFSUB__(v91, v90);
            v83 = v91 - v90;
            v84 = v72;
            goto LABEL_105;
          }
          v63 = *((_QWORD *)v10 + 4);
          v62 = *((_QWORD *)v10 + 5);
          v72 = __OFSUB__(v62, v63);
          v64 = v62 - v63;
          v65 = v72;
        }
        if ((v65 & 1) != 0)
          goto LABEL_164;
        v73 = v13 - 2;
        v79 = &v59[16 * v13 - 32];
        v81 = *(_QWORD *)v79;
        v80 = *((_QWORD *)v79 + 1);
        v82 = __OFSUB__(v80, v81);
        v83 = v80 - v81;
        v84 = v82;
        if (v82)
          goto LABEL_167;
        v85 = &v59[16 * v61];
        v87 = *(_QWORD *)v85;
        v86 = *((_QWORD *)v85 + 1);
        v72 = __OFSUB__(v86, v87);
        v88 = v86 - v87;
        if (v72)
          goto LABEL_170;
        if (__OFADD__(v83, v88))
          goto LABEL_171;
        if (v83 + v88 >= v64)
        {
          v89 = v64 < v88;
LABEL_111:
          if (v89)
            v61 = v73;
          goto LABEL_113;
        }
LABEL_105:
        if ((v84 & 1) != 0)
          goto LABEL_166;
        v92 = &v59[16 * v61];
        v94 = *(_QWORD *)v92;
        v93 = *((_QWORD *)v92 + 1);
        v72 = __OFSUB__(v93, v94);
        v95 = v93 - v94;
        if (v72)
          goto LABEL_169;
        if (v95 < v83)
          goto LABEL_14;
LABEL_113:
        v100 = v61 - 1;
        if (v61 - 1 >= v13)
        {
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
LABEL_180:
          __break(1u);
LABEL_181:
          __break(1u);
          goto LABEL_182;
        }
        if (!v11)
          goto LABEL_185;
        v5 = (int64_t)v10;
        v101 = &v59[16 * v100];
        v102 = *(_QWORD *)v101;
        v103 = v61;
        v104 = &v59[16 * v61];
        v105 = *((_QWORD *)v104 + 1);
        v149 = (id *)(v11 + 8 * *(_QWORD *)v104);
        v153 = (id *)(v11 + 8 * *(_QWORD *)v101);
        v106 = v146;
        sub_18FA00A40(v153, v149, v11 + 8 * v105, v145, v106);
        if (v2)
        {
LABEL_155:
          swift_bridgeObjectRelease();

          *(_QWORD *)((v161 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
          sub_18FA2845C();

          goto LABEL_157;
        }

        if (v105 < v102)
          goto LABEL_159;
        v107 = v5;
        if (v103 > *(_QWORD *)(v5 + 16))
          goto LABEL_160;
        *(_QWORD *)v101 = v102;
        v59 = v144;
        *(_QWORD *)&v144[16 * v100 + 8] = v105;
        v5 = *(_QWORD *)(v5 + 16);
        if (v103 >= v5)
          goto LABEL_161;
        v13 = v5 - 1;
        v108 = v104 + 16;
        v109 = v104;
        v110 = v107;
        memmove(v109, v108, 16 * (v5 - 1 - v103));
        v10 = (char *)v110;
        *(_QWORD *)(v110 + 16) = v5 - 1;
        v11 = v158;
        v12 = v142;
        if ((unint64_t)v5 <= 2)
          goto LABEL_14;
      }
    }
    v13 = 1;
LABEL_14:
    v4 = v147;
    if (v12 >= v147)
      goto LABEL_142;
  }
  if (__OFADD__(v5, v141))
    goto LABEL_181;
  if (v5 + v141 < v147)
    v41 = v5 + v141;
  if (v41 >= v5)
  {
    if (v12 != v41)
    {
      v148 = v41;
      v152 = v5;
      v143 = v10;
      v42 = v140 + 8 * v12;
      do
      {
        v43 = v12;
        v44 = *(void **)(v11 + 8 * v12);
        v45 = v152;
        v46 = v42;
        while (1)
        {
          v47 = *(void **)v46;
          v48 = v44;
          v49 = v47;
          v5 = (int64_t)objc_msgSend(v48, sel_identifier);
          v50 = sub_18FA2833C();
          v52 = v51;

          v53 = v155[1];
          if (!v53)
            break;
          if (v50 == *v155 && v53 == v52)
          {

            swift_bridgeObjectRelease();
          }
          else
          {
            v5 = sub_18FA2896C();

            swift_bridgeObjectRelease();
            if ((v5 & 1) == 0)
              goto LABEL_58;
          }
          v11 = v158;
          if (!v158)
            goto LABEL_184;
          v55 = *(void **)v46;
          v44 = *(void **)(v46 + 8);
          *(_QWORD *)v46 = v44;
          *(_QWORD *)(v46 + 8) = v55;
          v46 -= 8;
          if (v43 == ++v45)
            goto LABEL_59;
        }

        swift_bridgeObjectRelease();
LABEL_58:
        v11 = v158;
LABEL_59:
        v12 = v43 + 1;
        v42 += 8;
      }
      while (v43 + 1 != v148);
      v12 = v148;
      v10 = v143;
      v5 = v152;
    }
    goto LABEL_73;
  }
LABEL_182:
  __break(1u);
LABEL_183:
  __break(1u);
LABEL_184:

  __break(1u);
LABEL_185:

  __break(1u);
LABEL_186:

  __break(1u);
LABEL_187:

  __break(1u);
LABEL_188:

  sub_18FA288A0();
  __break(1u);
}

void sub_18FA01990(uint64_t *a1, void *a2)
{
  uint64_t v3;
  id v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  id v7;
  uint64_t v8[2];

  v3 = *a1;
  v4 = a2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_18F9FF58C();
  v6 = *(_QWORD *)(v3 + 16);
  v8[0] = v3 + 32;
  v8[1] = v6;
  v7 = v4;
  sub_18FA00E80(v8, v7);

  sub_18FA28840();
}

uint64_t sub_18FA01A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE180F90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_18FA01A74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE180F90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_18FA01ABC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR___CNManagedDuplicate_signature, a2);
}

uint64_t sub_18FA01AC8(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_18F9F9B50(a1, a2, a3, a4, &OBJC_IVAR___CNManagedDuplicate_signature);
}

uint64_t sub_18FA01AE4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR___CNManagedDuplicate_isAvailable, a2);
}

uint64_t sub_18FA01AF0(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_2Tm(a1, a2, a3, a4, &OBJC_IVAR___CNManagedDuplicate_isAvailable);
}

uint64_t sub_18FA01AFC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR___CNManagedDuplicate_isIgnored, a2);
}

uint64_t keypath_get_1Tm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _BYTE *a3@<X8>)
{
  _BYTE *v4;
  uint64_t result;

  v4 = (_BYTE *)(*a1 + *a2);
  result = swift_beginAccess();
  *a3 = *v4;
  return result;
}

uint64_t sub_18FA01B54(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_2Tm(a1, a2, a3, a4, &OBJC_IVAR___CNManagedDuplicate_isIgnored);
}

uint64_t keypath_set_2Tm(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  char v5;
  _BYTE *v6;
  uint64_t result;

  v5 = *a1;
  v6 = (_BYTE *)(*a2 + *a5);
  result = swift_beginAccess();
  *v6 = v5;
  return result;
}

uint64_t sub_18FA01BA8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR___CNManagedDuplicate_primaryID, a2);
}

uint64_t keypath_getTm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  _QWORD *v4;
  uint64_t v5;

  v4 = (_QWORD *)(*a1 + *a2);
  swift_beginAccess();
  v5 = v4[1];
  *a3 = *v4;
  a3[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_18FA01C04(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_18F9F9B50(a1, a2, a3, a4, &OBJC_IVAR___CNManagedDuplicate_primaryID);
}

uint64_t sub_18FA01C20@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___CNManagedDuplicate_managedCohorts);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_18FA01C8C()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return sub_18F9FAC00(v0);
}

uint64_t sub_18FA01CB4()
{
  return type metadata accessor for ManagedDuplicate();
}

void sub_18FA01CBC()
{
  unint64_t v0;

  sub_18FA020F8();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for ManagedDuplicate()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ManagedDuplicate.signature.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ManagedDuplicate.signature.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of ManagedDuplicate.signature.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ManagedDuplicate.isAvailable.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of ManagedDuplicate.isAvailable.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of ManagedDuplicate.isAvailable.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of ManagedDuplicate.isIgnored.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of ManagedDuplicate.isIgnored.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of ManagedDuplicate.isIgnored.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of ManagedDuplicate.primaryID.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of ManagedDuplicate.primaryID.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of ManagedDuplicate.primaryID.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of ManagedDuplicate.managedCohorts.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of ManagedDuplicate.managedCohorts.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of ManagedDuplicate.managedCohorts.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of ManagedDuplicate.userSelectedContactImage.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of ManagedDuplicate.userSelectedContactImage.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of ManagedDuplicate.userSelectedContactImage.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of ManagedDuplicate.userSelectedContactPoster.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of ManagedDuplicate.userSelectedContactPoster.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of ManagedDuplicate.userSelectedContactPoster.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of ManagedDuplicate.cohortIDs.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of ManagedDuplicate.__allocating_init(contacts:contactStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 376))();
}

uint64_t dispatch thunk of ManagedDuplicate.__allocating_init(duplicateSetProperties:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 384))();
}

uint64_t dispatch thunk of ManagedDuplicate.__allocating_init(duplicateSet:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 392))();
}

uint64_t dispatch thunk of ManagedDuplicate.contacts.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of ManagedDuplicate.contacts.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of ManagedDuplicate.contacts.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of ManagedDuplicate.sortedContacts.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of ManagedDuplicate.primaryContact.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C8))();
}

uint64_t dispatch thunk of ManagedDuplicate.mergedContact.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1E8))();
}

uint64_t dispatch thunk of ManagedDuplicate.mergedNameComponents.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x208))();
}

uint64_t dispatch thunk of ManagedDuplicate.cohortImagesToPreserve.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x220))();
}

uint64_t dispatch thunk of ManagedDuplicate.cohortPostersToPreserve.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x228))();
}

void sub_18FA020F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EE17EE30)
  {
    sub_18FA27FB8();
    v0 = sub_18FA286CC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EE17EE30);
  }
}

uint64_t destroy for ManagedDuplicate.SelectedImageData(uint64_t *a1)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t result;
  unint64_t v6;
  unint64_t v7;

  swift_bridgeObjectRelease();
  v2 = a1[3];
  if (v2 >> 60 != 15)
    sub_18F9EA8A4(a1[2], v2);
  v3 = a1[5];
  if (v3 >> 60 != 15)
    sub_18F9EA8A4(a1[4], v3);
  v4 = a1[7];
  if (v4 >> 60 != 15)
    sub_18F9EA8A4(a1[6], v4);
  result = swift_bridgeObjectRelease();
  v6 = a1[11];
  if (v6 >> 60 != 15)
    result = sub_18F9EA8A4(a1[10], v6);
  v7 = a1[13];
  if (v7 >> 60 != 15)
    return sub_18F9EA8A4(a1[12], v7);
  return result;
}

uint64_t initializeWithCopy for ManagedDuplicate.SelectedImageData(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  _OWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2 + 2;
  v6 = a2[3];
  swift_bridgeObjectRetain();
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *v5;
  }
  else
  {
    v7 = *(_QWORD *)v5;
    sub_18F9EA6C0(v7, v6);
    *(_QWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 24) = v6;
  }
  v8 = a2 + 4;
  v9 = a2[5];
  if (v9 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v8;
  }
  else
  {
    v10 = *v8;
    sub_18F9EA6C0(*v8, a2[5]);
    *(_QWORD *)(a1 + 32) = v10;
    *(_QWORD *)(a1 + 40) = v9;
  }
  v11 = a2 + 6;
  v12 = a2[7];
  if (v12 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)v11;
  }
  else
  {
    v13 = *v11;
    sub_18F9EA6C0(*v11, a2[7]);
    *(_QWORD *)(a1 + 48) = v13;
    *(_QWORD *)(a1 + 56) = v12;
  }
  v14 = a2[9];
  *(_QWORD *)(a1 + 64) = a2[8];
  *(_QWORD *)(a1 + 72) = v14;
  v15 = a2 + 10;
  v16 = a2[11];
  swift_bridgeObjectRetain();
  if (v16 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 80) = *v15;
  }
  else
  {
    v17 = *(_QWORD *)v15;
    sub_18F9EA6C0(v17, v16);
    *(_QWORD *)(a1 + 80) = v17;
    *(_QWORD *)(a1 + 88) = v16;
  }
  v18 = a2 + 12;
  v19 = a2[13];
  if (v19 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 96) = *(_OWORD *)v18;
  }
  else
  {
    v20 = *v18;
    sub_18F9EA6C0(*v18, v19);
    *(_QWORD *)(a1 + 96) = v20;
    *(_QWORD *)(a1 + 104) = v19;
  }
  return a1;
}

_QWORD *assignWithCopy for ManagedDuplicate.SelectedImageData(_QWORD *a1, _QWORD *a2)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2 + 2;
  v5 = a2[3];
  if (a1[3] >> 60 == 15)
  {
    if (v5 >> 60 != 15)
    {
      v6 = *v4;
      sub_18F9EA6C0(*v4, a2[3]);
      a1[2] = v6;
      a1[3] = v5;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
    sub_18FA02630((uint64_t)(a1 + 2));
LABEL_6:
    *((_OWORD *)a1 + 1) = *(_OWORD *)v4;
    goto LABEL_8;
  }
  v7 = *v4;
  sub_18F9EA6C0(*v4, a2[3]);
  v8 = a1[2];
  v9 = a1[3];
  a1[2] = v7;
  a1[3] = v5;
  sub_18F9EA8A4(v8, v9);
LABEL_8:
  v10 = a2 + 4;
  v11 = a2[5];
  if (a1[5] >> 60 == 15)
  {
    if (v11 >> 60 != 15)
    {
      v12 = *v10;
      sub_18F9EA6C0(*v10, a2[5]);
      a1[4] = v12;
      a1[5] = v11;
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v11 >> 60 == 15)
  {
    sub_18FA02630((uint64_t)(a1 + 4));
LABEL_13:
    *((_OWORD *)a1 + 2) = *(_OWORD *)v10;
    goto LABEL_15;
  }
  v13 = *v10;
  sub_18F9EA6C0(*v10, a2[5]);
  v14 = a1[4];
  v15 = a1[5];
  a1[4] = v13;
  a1[5] = v11;
  sub_18F9EA8A4(v14, v15);
LABEL_15:
  v16 = a2 + 6;
  v17 = a2[7];
  if (a1[7] >> 60 == 15)
  {
    if (v17 >> 60 != 15)
    {
      v18 = *v16;
      sub_18F9EA6C0(*v16, a2[7]);
      a1[6] = v18;
      a1[7] = v17;
      goto LABEL_22;
    }
    goto LABEL_20;
  }
  if (v17 >> 60 == 15)
  {
    sub_18FA02630((uint64_t)(a1 + 6));
LABEL_20:
    *((_OWORD *)a1 + 3) = *(_OWORD *)v16;
    goto LABEL_22;
  }
  v19 = *v16;
  sub_18F9EA6C0(*v16, a2[7]);
  v20 = a1[6];
  v21 = a1[7];
  a1[6] = v19;
  a1[7] = v17;
  sub_18F9EA8A4(v20, v21);
LABEL_22:
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = a2 + 10;
  v23 = a2[11];
  if (a1[11] >> 60 == 15)
  {
    if (v23 >> 60 != 15)
    {
      v24 = *v22;
      sub_18F9EA6C0(*v22, a2[11]);
      a1[10] = v24;
      a1[11] = v23;
      goto LABEL_29;
    }
    goto LABEL_27;
  }
  if (v23 >> 60 == 15)
  {
    sub_18FA02630((uint64_t)(a1 + 10));
LABEL_27:
    *((_OWORD *)a1 + 5) = *(_OWORD *)v22;
    goto LABEL_29;
  }
  v25 = *v22;
  sub_18F9EA6C0(*v22, a2[11]);
  v26 = a1[10];
  v27 = a1[11];
  a1[10] = v25;
  a1[11] = v23;
  sub_18F9EA8A4(v26, v27);
LABEL_29:
  v28 = a2 + 12;
  v29 = a2[13];
  if (a1[13] >> 60 != 15)
  {
    if (v29 >> 60 != 15)
    {
      v31 = *v28;
      sub_18F9EA6C0(*v28, v29);
      v32 = a1[12];
      v33 = a1[13];
      a1[12] = v31;
      a1[13] = v29;
      sub_18F9EA8A4(v32, v33);
      return a1;
    }
    sub_18FA02630((uint64_t)(a1 + 12));
    goto LABEL_34;
  }
  if (v29 >> 60 == 15)
  {
LABEL_34:
    *((_OWORD *)a1 + 6) = *(_OWORD *)v28;
    return a1;
  }
  v30 = *v28;
  sub_18F9EA6C0(*v28, v29);
  a1[12] = v30;
  a1[13] = v29;
  return a1;
}

uint64_t sub_18FA02630(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0CB0338] - 8) + 8))();
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

_QWORD *assignWithTake for ManagedDuplicate.SelectedImageData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  _OWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2 + 2;
  v6 = a1[3];
  if (v6 >> 60 == 15)
    goto LABEL_4;
  v7 = a2[3];
  if (v7 >> 60 == 15)
  {
    sub_18FA02630((uint64_t)(a1 + 2));
LABEL_4:
    *((_OWORD *)a1 + 1) = *v5;
    goto LABEL_6;
  }
  v8 = a1[2];
  a1[2] = *(_QWORD *)v5;
  a1[3] = v7;
  sub_18F9EA8A4(v8, v6);
LABEL_6:
  v9 = a2 + 4;
  v10 = a1[5];
  if (v10 >> 60 == 15)
  {
LABEL_9:
    *((_OWORD *)a1 + 2) = *v9;
    goto LABEL_11;
  }
  v11 = a2[5];
  if (v11 >> 60 == 15)
  {
    sub_18FA02630((uint64_t)(a1 + 4));
    goto LABEL_9;
  }
  v12 = a1[4];
  a1[4] = *(_QWORD *)v9;
  a1[5] = v11;
  sub_18F9EA8A4(v12, v10);
LABEL_11:
  v13 = a2 + 6;
  v14 = a1[7];
  if (v14 >> 60 == 15)
  {
LABEL_14:
    *((_OWORD *)a1 + 3) = *v13;
    goto LABEL_16;
  }
  v15 = a2[7];
  if (v15 >> 60 == 15)
  {
    sub_18FA02630((uint64_t)(a1 + 6));
    goto LABEL_14;
  }
  v16 = a1[6];
  a1[6] = *(_QWORD *)v13;
  a1[7] = v15;
  sub_18F9EA8A4(v16, v14);
LABEL_16:
  v17 = a2[9];
  a1[8] = a2[8];
  a1[9] = v17;
  swift_bridgeObjectRelease();
  v18 = a2 + 10;
  v19 = a1[11];
  if (v19 >> 60 == 15)
  {
LABEL_19:
    *((_OWORD *)a1 + 5) = *v18;
    goto LABEL_21;
  }
  v20 = a2[11];
  if (v20 >> 60 == 15)
  {
    sub_18FA02630((uint64_t)(a1 + 10));
    goto LABEL_19;
  }
  v21 = a1[10];
  a1[10] = *(_QWORD *)v18;
  a1[11] = v20;
  sub_18F9EA8A4(v21, v19);
LABEL_21:
  v22 = a2 + 12;
  v23 = a1[13];
  if (v23 >> 60 != 15)
  {
    v24 = a2[13];
    if (v24 >> 60 != 15)
    {
      v25 = a1[12];
      a1[12] = *v22;
      a1[13] = v24;
      sub_18F9EA8A4(v25, v23);
      return a1;
    }
    sub_18FA02630((uint64_t)(a1 + 12));
  }
  *((_OWORD *)a1 + 6) = *(_OWORD *)v22;
  return a1;
}

uint64_t getEnumTagSinglePayload for ManagedDuplicate.SelectedImageData(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 112))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ManagedDuplicate.SelectedImageData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 112) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ManagedDuplicate.SelectedImageData()
{
  return &type metadata for ManagedDuplicate.SelectedImageData;
}

uint64_t *destroy for ManagedDuplicate.SelectedPosterData(uint64_t *result)
{
  unint64_t v1;

  v1 = result[1];
  if (v1 >> 60 != 15)
    return (uint64_t *)sub_18F9EA8A4(*result, v1);
  return result;
}

uint64_t _s8Contacts16ManagedDuplicateC18SelectedPosterDataVwCP_0(uint64_t a1, uint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  if (v3 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v4 = *a2;
    sub_18F9EA6C0(*a2, a2[1]);
    *(_QWORD *)a1 = v4;
    *(_QWORD *)(a1 + 8) = v3;
  }
  return a1;
}

uint64_t *assignWithCopy for ManagedDuplicate.SelectedPosterData(uint64_t *a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  if ((unint64_t)a1[1] >> 60 != 15)
  {
    if (v4 >> 60 != 15)
    {
      v6 = *(_QWORD *)a2;
      sub_18F9EA6C0(*(_QWORD *)a2, *(_QWORD *)(a2 + 8));
      v7 = *a1;
      v8 = a1[1];
      *a1 = v6;
      a1[1] = v4;
      sub_18F9EA8A4(v7, v8);
      return a1;
    }
    sub_18FA02630((uint64_t)a1);
    goto LABEL_6;
  }
  if (v4 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  v5 = *(_QWORD *)a2;
  sub_18F9EA6C0(*(_QWORD *)a2, *(_QWORD *)(a2 + 8));
  *a1 = v5;
  a1[1] = v4;
  return a1;
}

uint64_t *assignWithTake for ManagedDuplicate.SelectedPosterData(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v4 = a1[1];
  if (v4 >> 60 != 15)
  {
    v5 = a2[1];
    if (v5 >> 60 != 15)
    {
      v6 = *a1;
      *a1 = *a2;
      a1[1] = v5;
      sub_18F9EA8A4(v6, v4);
      return a1;
    }
    sub_18FA02630((uint64_t)a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for ManagedDuplicate.SelectedPosterData(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xC && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 12);
  v3 = *(_QWORD *)(a1 + 8) >> 60;
  if (((4 * (_DWORD)v3) & 0xC) != 0)
    v4 = 14 - ((4 * v3) & 0xC | (v3 >> 2));
  else
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ManagedDuplicate.SelectedPosterData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xB)
  {
    *(_QWORD *)result = a2 - 12;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xC)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xC)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)((4 * (a2 ^ 0xF)) | ((a2 ^ 0xF) >> 2)) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ManagedDuplicate.SelectedPosterData()
{
  return &type metadata for ManagedDuplicate.SelectedPosterData;
}

uint64_t sub_18FA02B64(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_18FA288F4();
  __break(1u);
  return result;
}

uint64_t sub_18FA02C54(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_18FA288F4();
  __break(1u);
  return result;
}

uint64_t sub_18FA02D44(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(sub_18FA281E0() - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  result = sub_18FA288F4();
  __break(1u);
  return result;
}

uint64_t sub_18FA02E5C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + (a1 << 6) + 32;
    v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_18FA288F4();
  __break(1u);
  return result;
}

unint64_t sub_18FA02F4C()
{
  unint64_t result;

  result = qword_1EE17EBD0;
  if (!qword_1EE17EBD0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE17EBD0);
  }
  return result;
}

unint64_t sub_18FA02F88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE180FF0;
  if (!qword_1EE180FF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE17EAB8);
    result = MEMORY[0x194006D14](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1EE180FF0);
  }
  return result;
}

uint64_t sub_18FA02FD8(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  unint64_t v6;
  unint64_t v7;
  id *v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD v12[2];
  uint64_t v13;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_18FA288B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v13 = MEMORY[0x1E0DEE9D8];
  result = sub_18F9DE8D4(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        MEMORY[0x194005370](i, a1);
        type metadata accessor for CNDuplicateCohort();
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_18F9DE8D4(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v7 = *(_QWORD *)(v3 + 16);
        v6 = *(_QWORD *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_18F9DE8D4(v6 > 1, v7 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v7 + 1;
        sub_18F9DFD48(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      v8 = (id *)(a1 + 32);
      type metadata accessor for CNDuplicateCohort();
      do
      {
        v9 = *v8;
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_18F9DE8D4(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v11 = *(_QWORD *)(v3 + 16);
        v10 = *(_QWORD *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_18F9DE8D4(v10 > 1, v11 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v11 + 1;
        sub_18F9DFD48(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

id sub_18FA03208(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  id v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  void *v16;
  id v17;

  v5 = a1 + OBJC_IVAR___CNManagedDuplicate_signature;
  swift_beginAccess();
  if (*(_QWORD *)(v5 + 8))
  {
    swift_bridgeObjectRetain();
    v6 = (void *)sub_18FA28330();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(v2, sel_setSignature_, v6);

  v7 = a1 + OBJC_IVAR___CNManagedDuplicate_primaryID;
  swift_beginAccess();
  if (*(_QWORD *)(v7 + 8))
  {
    swift_bridgeObjectRetain();
    v8 = (void *)sub_18FA28330();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  objc_msgSend(v2, sel_setPrimaryID_, v8);

  v9 = (unsigned __int8 *)(a1 + OBJC_IVAR___CNManagedDuplicate_isIgnored);
  swift_beginAccess();
  objc_msgSend(v2, sel_setIsIgnored_, *v9);
  v10 = (unsigned __int8 *)(a1 + OBJC_IVAR___CNManagedDuplicate_isAvailable);
  swift_beginAccess();
  objc_msgSend(v2, sel_setIsAvailable_, *v10);
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E60]), sel_init);
  objc_msgSend(v2, sel_setCohorts_, v11);

  swift_beginAccess();
  v12 = a2;
  v13 = swift_bridgeObjectRetain();
  v14 = sub_18FA035F0(v13, v12);
  swift_bridgeObjectRelease();

  sub_18FA02FD8(v14);
  swift_bridgeObjectRelease();
  v15 = objc_allocWithZone(MEMORY[0x1E0C99E60]);
  v16 = (void *)sub_18FA28438();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(v15, sel_initWithArray_, v16);

  objc_msgSend(v2, sel_addCohorts_, v17);
  objc_msgSend(v2, sel_setSelectedContactImage_, 0);
  return objc_msgSend(v2, sel_setSelectedContactPoster_, 0);
}

id CNDuplicateSet.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id CNDuplicateSet.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for CNDuplicateSet();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id CNDuplicateSet.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CNDuplicateSet();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_18FA035F0(unint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  if (a1 >> 62)
    goto LABEL_14;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x1E0DEE9D8];
    if (!v4)
      break;
    v8 = MEMORY[0x1E0DEE9D8];
    result = sub_18FA28858();
    if (v4 < 0)
    {
      __break(1u);
      return result;
    }
    type metadata accessor for CNDuplicateCohort();
    v6 = 0;
    while (v4 != v6)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v7 = (char *)MEMORY[0x194005370](v6, a1);
      else
        v7 = (char *)*(id *)(a1 + 8 * v6 + 32);
      ++v6;
      CNDuplicateCohort.__allocating_init(managedCohort:context:)(v7, a2);
      sub_18FA28834();
      sub_18FA28864();
      sub_18FA28870();
      sub_18FA28840();
      if (v4 == v6)
        return v8;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    v4 = sub_18FA288B8();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for CNDuplicateSet()
{
  return objc_opt_self();
}

uint64_t method lookup function for CNDuplicateSet()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CNDuplicateSet.updateWithManagedDuplicate(_:context:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x50))();
}

id CNDuplicateCohort.__allocating_init(managedCohort:context:)(char *a1, void *a2)
{
  objc_class *v2;
  objc_class *v3;
  id v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  NSString *v11;
  void *v12;
  uint64_t *v13;
  void *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  void *v18;
  unint64_t v19;
  uint64_t v20;

  v3 = v2;
  v6 = objc_msgSend(objc_allocWithZone(v3), sel_initWithContext_, a2);
  v7 = &a1[OBJC_IVAR___CNManagedCohort_identifier];
  swift_beginAccess();
  if (*((_QWORD *)v7 + 1))
  {
    v8 = v6;
    swift_bridgeObjectRetain();
    v9 = (void *)sub_18FA28330();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = v6;
    v9 = 0;
  }
  objc_msgSend(v6, sel_setIdentifier_, v9);

  v11 = NSStringFromRect(*(NSRect *)&a1[OBJC_IVAR___CNManagedCohort_cropRect]);
  sub_18FA2833C();

  v12 = (void *)sub_18FA28330();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setCropRectString_, v12);

  v13 = (uint64_t *)&a1[OBJC_IVAR___CNManagedCohort_imageData];
  swift_beginAccess();
  v14 = 0;
  v15 = v13[1];
  if (v15 >> 60 != 15)
  {
    v16 = *v13;
    sub_18F9EA6C0(v16, v15);
    v14 = (void *)sub_18FA28090();
    sub_18F9EA890(v16, v15);
  }
  objc_msgSend(v6, sel_setImageData_, v14);

  v17 = (uint64_t *)&a1[OBJC_IVAR___CNManagedCohort_posterData];
  swift_beginAccess();
  v18 = 0;
  v19 = v17[1];
  if (v19 >> 60 != 15)
  {
    v20 = *v17;
    sub_18F9EA6C0(v20, v19);
    v18 = (void *)sub_18FA28090();
    sub_18F9EA890(v20, v19);
  }
  objc_msgSend(v6, sel_setPosterData_, v18);

  return v6;
}

void sub_18FA039D4()
{
  qword_1EE17EA68 = 0x746163696C707544;
  *(_QWORD *)algn_1EE17EA70 = 0xEF74726F686F4365;
}

uint64_t static CNDuplicateCohort.entityName.getter()
{
  uint64_t v0;

  if (qword_1EE17EA80 != -1)
    swift_once();
  v0 = qword_1EE17EA68;
  swift_bridgeObjectRetain();
  return v0;
}

id sub_18FA03A60()
{
  id v0;
  void *v1;
  id v2;

  if (qword_1EE17EA80 != -1)
    swift_once();
  v0 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  swift_bridgeObjectRetain();
  v1 = (void *)sub_18FA28330();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

void sub_18FA03B04(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = objc_msgSend(*a1, *a2);
  if (v4)
  {
    v5 = v4;
    v6 = sub_18FA2833C();
    v8 = v7;

  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  *a3 = v6;
  a3[1] = v8;
}

void sub_18FA03B64(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  void *v6;
  uint64_t v7;
  id v8;

  v6 = *a2;
  if (*(_QWORD *)(a1 + 8))
    v7 = sub_18FA28330();
  else
    v7 = 0;
  v8 = (id)v7;
  objc_msgSend(v6, *a5);

}

void sub_18FA03BC0(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v4 = objc_msgSend(*a1, *a2);
  if (v4)
  {
    v5 = v4;
    v6 = sub_18FA280A8();
    v8 = v7;

  }
  else
  {
    v6 = 0;
    v8 = 0xF000000000000000;
  }
  *a3 = v6;
  a3[1] = v8;
}

void sub_18FA03C20(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  void *v6;
  uint64_t v7;
  id v8;

  v6 = *a2;
  if (*(_QWORD *)(a1 + 8) >> 60 == 15)
    v7 = 0;
  else
    v7 = sub_18FA28090();
  v8 = (id)v7;
  objc_msgSend(v6, *a5);

}

id CNDuplicateCohort.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id CNDuplicateCohort.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for CNDuplicateCohort();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id CNDuplicateCohort.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CNDuplicateCohort();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_18FA03DC4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for CNDuplicateCohort();
  result = sub_18FA287EC();
  *a1 = result;
  return result;
}

uint64_t sub_18FA03E00(char a1)
{
  return *(_QWORD *)&aIdentificropre[8 * a1];
}

uint64_t sub_18FA03E20(char *a1, char *a2)
{
  return sub_18FA142A0(*a1, *a2);
}

uint64_t sub_18FA03E2C()
{
  return sub_18FA143A8();
}

uint64_t sub_18FA03E34()
{
  return sub_18FA14478();
}

uint64_t sub_18FA03E3C()
{
  return sub_18FA1455C();
}

uint64_t sub_18FA03E44@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18FA04C54();
  *a1 = result;
  return result;
}

uint64_t sub_18FA03E70@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_18FA03E00(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_18FA03E98()
{
  char *v0;

  return sub_18FA03E00(*v0);
}

uint64_t sub_18FA03EA0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18FA04C54();
  *a1 = result;
  return result;
}

uint64_t sub_18FA03EC4()
{
  return 0;
}

void sub_18FA03ED0(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_18FA03EDC()
{
  sub_18FA04580();
  return sub_18FA28A2C();
}

uint64_t sub_18FA03F04()
{
  sub_18FA04580();
  return sub_18FA28A38();
}

uint64_t DuplicateCohortProperties.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE181020);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18FA04580();
  sub_18FA28A20();
  if (!v2)
  {
    LOBYTE(v25) = 0;
    v9 = sub_18FA2890C();
    v11 = v10;
    v24 = v6;
    LOBYTE(v25) = 1;
    v12 = sub_18FA2890C();
    v22 = v13;
    v23 = v12;
    v27 = 2;
    sub_18FA045C4();
    sub_18FA28924();
    v21 = v25;
    v20 = v26;
    v27 = 3;
    sub_18FA28924();
    v14 = v25;
    v15 = v26;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
    v16 = v22;
    a2[2] = v23;
    a2[3] = v16;
    v17 = v20;
    a2[4] = v21;
    a2[5] = v17;
    a2[6] = v14;
    a2[7] = v15;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

void DuplicateCohortProperties.init(from:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSString *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  unint64_t v14;
  id v15;
  void *v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  NSRect v22;

  v4 = objc_msgSend(a1, sel_identifier);
  v5 = sub_18FA2833C();
  v7 = v6;

  objc_msgSend(a1, sel_cropRect);
  v8 = NSStringFromRect(v22);
  v9 = sub_18FA2833C();
  v11 = v10;

  v12 = objc_msgSend(a1, sel_imageData);
  if (v12)
  {
    v13 = v12;
    v21 = sub_18FA280A8();
    v20 = v14;

  }
  else
  {
    v21 = 0;
    v20 = 0xC000000000000000;
  }
  v15 = objc_msgSend(a1, sel_wallpaper);
  v16 = v15;
  if (v15)
  {
    v17 = objc_msgSend(v15, sel_posterArchiveData);

    v16 = (void *)sub_18FA280A8();
    v19 = v18;

  }
  else
  {

    v19 = 0xC000000000000000;
  }
  *a2 = v5;
  a2[1] = v7;
  a2[2] = v9;
  a2[3] = v11;
  a2[4] = v21;
  a2[5] = v20;
  a2[6] = (uint64_t)v16;
  a2[7] = v19;
}

unint64_t DuplicateCohortProperties.dictionaryValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;

  v2 = *v0;
  v1 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  v5 = v0[4];
  v6 = v0[5];
  v7 = v0[6];
  v8 = v0[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EB20);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FA412F0;
  *(_QWORD *)(inited + 32) = 0x696669746E656469;
  *(_QWORD *)(inited + 40) = 0xEA00000000007265;
  v10 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v2;
  *(_QWORD *)(inited + 56) = v1;
  *(_QWORD *)(inited + 72) = v10;
  strcpy((char *)(inited + 80), "cropRectString");
  *(_BYTE *)(inited + 95) = -18;
  *(_QWORD *)(inited + 96) = v4;
  *(_QWORD *)(inited + 104) = v3;
  *(_QWORD *)(inited + 120) = v10;
  *(_QWORD *)(inited + 128) = 0x7461446567616D69;
  v11 = MEMORY[0x1E0CB0338];
  *(_QWORD *)(inited + 136) = 0xE900000000000061;
  *(_QWORD *)(inited + 144) = v5;
  *(_QWORD *)(inited + 152) = v6;
  *(_QWORD *)(inited + 168) = v11;
  *(_QWORD *)(inited + 176) = 0x6144726574736F70;
  *(_QWORD *)(inited + 216) = v11;
  *(_QWORD *)(inited + 184) = 0xEA00000000006174;
  *(_QWORD *)(inited + 192) = v7;
  *(_QWORD *)(inited + 200) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_18F9EA6C0(v5, v6);
  sub_18F9EA6C0(v7, v8);
  return sub_18FA13D08(inited);
}

uint64_t sub_18FA04528@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return DuplicateCohortProperties.init(from:)(a1, a2);
}

uint64_t type metadata accessor for CNDuplicateCohort()
{
  return objc_opt_self();
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_18FA04580()
{
  unint64_t result;

  result = qword_1EE181028;
  if (!qword_1EE181028)
  {
    result = MEMORY[0x194006D14](&unk_18FA414B8, &type metadata for DuplicateCohortProperties.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE181028);
  }
  return result;
}

unint64_t sub_18FA045C4()
{
  unint64_t result;

  result = qword_1EE181030;
  if (!qword_1EE181030)
  {
    result = MEMORY[0x194006D14](MEMORY[0x1E0CB0378], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1EE181030);
  }
  return result;
}

uint64_t sub_18FA04608()
{
  return MEMORY[0x1E0DEA528];
}

char *keypath_get_selector_identifier()
{
  return sel_identifier;
}

void sub_18FA04620(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_18FA03B04(a1, (SEL *)&selRef_identifier, a2);
}

void sub_18FA0463C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_18FA03B64(a1, a2, a3, a4, (SEL *)&selRef_setIdentifier_);
}

char *keypath_get_selector_cropRectString()
{
  return sel_cropRectString;
}

void sub_18FA04664(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_18FA03B04(a1, (SEL *)&selRef_cropRectString, a2);
}

void sub_18FA04680(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_18FA03B64(a1, a2, a3, a4, (SEL *)&selRef_setCropRectString_);
}

char *keypath_get_selector_imageData()
{
  return sel_imageData;
}

void sub_18FA046A8(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_18FA03BC0(a1, (SEL *)&selRef_imageData, a2);
}

void sub_18FA046C4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_18FA03C20(a1, a2, a3, a4, (SEL *)&selRef_setImageData_);
}

char *keypath_get_selector_posterData()
{
  return sel_posterData;
}

void sub_18FA046EC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_18FA03BC0(a1, (SEL *)&selRef_posterData, a2);
}

void sub_18FA04708(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_18FA03C20(a1, a2, a3, a4, (SEL *)&selRef_setPosterData_);
}

char *keypath_get_selector_duplicates()
{
  return sel_duplicates;
}

id sub_18FA04730@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_duplicates);
  *a2 = result;
  return result;
}

id sub_18FA04768(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setDuplicates_, *a1);
}

uint64_t method lookup function for CNDuplicateCohort()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of static CNDuplicateCohort.fetchRequest()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t destroy for DuplicateCohortProperties(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_18F9EA8A4(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  return sub_18F9EA8A4(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
}

_QWORD *initializeWithCopy for DuplicateCohortProperties(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[4];
  v7 = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_18F9EA6C0(v6, v7);
  a1[4] = v6;
  a1[5] = v7;
  v9 = a2[6];
  v8 = a2[7];
  sub_18F9EA6C0(v9, v8);
  a1[6] = v9;
  a1[7] = v8;
  return a1;
}

_QWORD *assignWithCopy for DuplicateCohortProperties(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[4];
  v5 = a2[5];
  sub_18F9EA6C0(v4, v5);
  v6 = a1[4];
  v7 = a1[5];
  a1[4] = v4;
  a1[5] = v5;
  sub_18F9EA8A4(v6, v7);
  v9 = a2[6];
  v8 = a2[7];
  sub_18F9EA6C0(v9, v8);
  v10 = a1[6];
  v11 = a1[7];
  a1[6] = v9;
  a1[7] = v8;
  sub_18F9EA8A4(v10, v11);
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_QWORD *assignWithTake for DuplicateCohortProperties(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a1[4];
  v7 = a1[5];
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  sub_18F9EA8A4(v6, v7);
  v8 = a1[6];
  v9 = a1[7];
  *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
  sub_18F9EA8A4(v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for DuplicateCohortProperties(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DuplicateCohortProperties(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DuplicateCohortProperties()
{
  return &type metadata for DuplicateCohortProperties;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for DuplicateCohortProperties.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DuplicateCohortProperties.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_18FA04AEC + 4 * byte_18FA41305[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_18FA04B20 + 4 * byte_18FA41300[v4]))();
}

uint64_t sub_18FA04B20(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FA04B28(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18FA04B30);
  return result;
}

uint64_t sub_18FA04B3C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18FA04B44);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_18FA04B48(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FA04B50(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FA04B5C(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_18FA04B64(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for DuplicateCohortProperties.CodingKeys()
{
  return &type metadata for DuplicateCohortProperties.CodingKeys;
}

unint64_t sub_18FA04B80()
{
  unint64_t result;

  result = qword_1EE181038;
  if (!qword_1EE181038)
  {
    result = MEMORY[0x194006D14](&unk_18FA41490, &type metadata for DuplicateCohortProperties.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE181038);
  }
  return result;
}

unint64_t sub_18FA04BC8()
{
  unint64_t result;

  result = qword_1EE181040;
  if (!qword_1EE181040)
  {
    result = MEMORY[0x194006D14](&unk_18FA413C8, &type metadata for DuplicateCohortProperties.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE181040);
  }
  return result;
}

unint64_t sub_18FA04C10()
{
  unint64_t result;

  result = qword_1EE181048;
  if (!qword_1EE181048)
  {
    result = MEMORY[0x194006D14](&unk_18FA413F0, &type metadata for DuplicateCohortProperties.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE181048);
  }
  return result;
}

uint64_t sub_18FA04C54()
{
  unint64_t v0;

  v0 = sub_18FA28900();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

id ManagedCohort.__allocating_init(duplicateCohort:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_18FA06918(a1);

  return v4;
}

id ManagedCohort.__allocating_init(contact:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_18FA06B94(a1);

  return v4;
}

id ManagedCohort.__allocating_init(duplicateCohortProperties:)(uint64_t *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return ManagedCohort.init(duplicateCohortProperties:)(a1);
}

uint64_t CohortImage.imageData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_18F9EA6C0(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

uint64_t CohortImage.cropRectString.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CohortPoster.posterData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_18F9EA6C0(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

uint64_t sub_18FA04DD0()
{
  uint64_t v0;

  v0 = sub_18FA28204();
  __swift_allocate_value_buffer(v0, qword_1EE181050);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EE181050);
  return sub_18FA281F8();
}

uint64_t sub_18FA04E50(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR___CNManagedCohort_identifier);
  swift_beginAccess();
  *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_18FA04EB8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR___CNManagedCohort_identifier);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_18FA04F0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR___CNManagedCohort_identifier);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_18FA04F68())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_18FA04FAC()
{
  return sub_18FA050D8(&OBJC_IVAR___CNManagedCohort_imageData);
}

uint64_t sub_18FA04FB8(uint64_t a1, uint64_t a2)
{
  return sub_18FA05138(a1, a2, &OBJC_IVAR___CNManagedCohort_imageData);
}

uint64_t (*sub_18FA04FC4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_18FA05008@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;

  v4 = (uint64_t *)(*a1 + *a2);
  swift_beginAccess();
  v5 = *v4;
  v6 = v4[1];
  *a3 = *v4;
  a3[1] = v6;
  return sub_18F9EA6AC(v5, v6);
}

uint64_t sub_18FA05058(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;

  v5 = *a1;
  v6 = a1[1];
  v7 = (uint64_t *)(*a2 + *a5);
  swift_beginAccess();
  v8 = *v7;
  v9 = v7[1];
  *v7 = v5;
  v7[1] = v6;
  sub_18F9EA6AC(v5, v6);
  return sub_18F9EA890(v8, v9);
}

uint64_t sub_18FA050CC()
{
  return sub_18FA050D8(&OBJC_IVAR___CNManagedCohort_posterData);
}

uint64_t sub_18FA050D8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1 + *a1;
  swift_beginAccess();
  v3 = *(_QWORD *)v2;
  sub_18F9EA6AC(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  return v3;
}

uint64_t sub_18FA0512C(uint64_t a1, uint64_t a2)
{
  return sub_18FA05138(a1, a2, &OBJC_IVAR___CNManagedCohort_posterData);
}

uint64_t sub_18FA05138(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;

  v6 = (uint64_t *)(v3 + *a3);
  swift_beginAccess();
  v7 = *v6;
  v8 = v6[1];
  *v6 = a1;
  v6[1] = a2;
  return sub_18F9EA890(v7, v8);
}

uint64_t (*sub_18FA05190())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_18FA051D4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  unint64_t v31;

  v1 = OBJC_IVAR___CNManagedCohort__privateContact;
  v2 = *(void **)(v0 + OBJC_IVAR___CNManagedCohort__privateContact);
  if (v2)
  {
    v3 = objc_msgSend(v2, sel_identifier);
    v4 = sub_18FA2833C();
    v6 = v5;

  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  v7 = (uint64_t *)(v0 + OBJC_IVAR___CNManagedCohort_identifier);
  swift_beginAccess();
  *v7 = v4;
  v7[1] = v6;
  swift_bridgeObjectRelease();
  v8 = *(void **)(v0 + v1);
  if (v8 && (v9 = objc_msgSend(v8, sel_imageData)) != 0)
  {
    v10 = v9;
    v11 = sub_18FA280A8();
    v13 = v12;

  }
  else
  {
    v11 = 0;
    v13 = 0xF000000000000000;
  }
  v14 = (uint64_t *)(v0 + OBJC_IVAR___CNManagedCohort_imageData);
  swift_beginAccess();
  v15 = *v14;
  v16 = v14[1];
  *v14 = v11;
  v14[1] = v13;
  sub_18F9EA890(v15, v16);
  v17 = *(void **)(v0 + v1);
  if (v17)
  {
    objc_msgSend(v17, sel_cropRect);
  }
  else
  {
    v20 = 0;
    v21 = 0;
    v18 = 0;
    v19 = 0;
  }
  v22 = (_QWORD *)(v0 + OBJC_IVAR___CNManagedCohort_cropRect);
  *v22 = v18;
  v22[1] = v19;
  v22[2] = v20;
  v22[3] = v21;
  v23 = *(void **)(v0 + v1);
  if (!v23)
  {
    v25 = 0;
    goto LABEL_15;
  }
  v24 = objc_msgSend(v23, sel_wallpaper);
  v25 = v24;
  if (!v24)
  {
LABEL_15:
    v28 = 0xF000000000000000;
    goto LABEL_16;
  }
  v26 = objc_msgSend(v24, sel_posterArchiveData);

  v25 = (void *)sub_18FA280A8();
  v28 = v27;

LABEL_16:
  v29 = (uint64_t *)(v0 + OBJC_IVAR___CNManagedCohort_posterData);
  swift_beginAccess();
  v30 = *v29;
  v31 = v29[1];
  *v29 = (uint64_t)v25;
  v29[1] = v28;
  return sub_18F9EA890(v30, v31);
}

id sub_18FA053AC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = *a1;
  v4 = OBJC_IVAR___CNManagedCohort__privateContact;
  v5 = *(void **)(*a1 + OBJC_IVAR___CNManagedCohort__privateContact);
  if (!v5)
  {
    sub_18FA05828();
    v5 = *(void **)(v3 + v4);
  }
  *a2 = v5;
  return v5;
}

void sub_18FA053F0(void **a1, _QWORD *a2)
{
  void *v2;
  void *v3;
  id v4;

  v2 = *a1;
  v3 = *(void **)(*a2 + OBJC_IVAR___CNManagedCohort__privateContact);
  *(_QWORD *)(*a2 + OBJC_IVAR___CNManagedCohort__privateContact) = *a1;
  v4 = v2;

  sub_18FA051D4();
}

void *sub_18FA05440()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;

  v1 = OBJC_IVAR___CNManagedCohort__privateContact;
  v2 = *(void **)(v0 + OBJC_IVAR___CNManagedCohort__privateContact);
  if (!v2)
  {
    sub_18FA05828();
    v2 = *(void **)(v0 + v1);
  }
  v3 = v2;
  return v2;
}

void sub_18FA05480(void *a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + OBJC_IVAR___CNManagedCohort__privateContact);
  *(_QWORD *)(v1 + OBJC_IVAR___CNManagedCohort__privateContact) = a1;
  v3 = a1;

  sub_18FA051D4();
}

void (*sub_18FA054C4(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  id v5;

  v3 = OBJC_IVAR___CNManagedCohort__privateContact;
  a1[1] = v1;
  a1[2] = v3;
  v4 = *(void **)(v1 + v3);
  if (!v4)
  {
    sub_18FA05828();
    v4 = *(void **)(v1 + v3);
  }
  *a1 = v4;
  v5 = v4;
  return sub_18FA0551C;
}

void sub_18FA0551C(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;

  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v5 = *(void **)a1;
  v6 = *(void **)(v4 + v3);
  *(_QWORD *)(v4 + v3) = *(_QWORD *)a1;
  v7 = v5;
  v9 = v7;
  if ((a2 & 1) != 0)
  {
    v8 = v7;

    sub_18FA051D4();
  }
  else
  {

    sub_18FA051D4();
  }

}

uint64_t sub_18FA05588()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR___CNManagedCohort__privateContainerName);
  if (!*(_QWORD *)(v0 + OBJC_IVAR___CNManagedCohort__privateContainerName + 8))
    sub_18FA05FC8();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

id ManagedCohort.init(contact:)(void *a1)
{
  id v2;

  v2 = sub_18FA06B94(a1);

  return v2;
}

id ManagedCohort.init(duplicateCohortProperties:)(uint64_t *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  NSString *v12;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  unint64_t v23;
  objc_super v24;
  NSRect v25;

  v2 = a1[1];
  v22 = *a1;
  v3 = a1[4];
  v4 = &v1[OBJC_IVAR___CNManagedCohort_identifier];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  v5 = (uint64_t *)&v1[OBJC_IVAR___CNManagedCohort_imageData];
  *(_OWORD *)&v1[OBJC_IVAR___CNManagedCohort_imageData] = xmmword_18FA41550;
  v6 = (uint64_t *)&v1[OBJC_IVAR___CNManagedCohort_posterData];
  *(_OWORD *)&v1[OBJC_IVAR___CNManagedCohort_posterData] = xmmword_18FA41550;
  *(_QWORD *)&v1[OBJC_IVAR___CNManagedCohort_internalStore] = 0;
  v8 = a1[5];
  v7 = a1[6];
  v9 = &v1[OBJC_IVAR___CNManagedCohort_cropRect];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *(_QWORD *)&v1[OBJC_IVAR___CNManagedCohort__privateContact] = 0;
  v23 = a1[7];
  v10 = &v1[OBJC_IVAR___CNManagedCohort__privateContainerName];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  swift_beginAccess();
  *(_QWORD *)v4 = v22;
  *((_QWORD *)v4 + 1) = v2;
  v11 = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = (NSString *)sub_18FA28330();
  v25 = NSRectFromString(v12);
  x = v25.origin.x;
  y = v25.origin.y;
  width = v25.size.width;
  height = v25.size.height;

  *(CGFloat *)v9 = x;
  *((CGFloat *)v9 + 1) = y;
  *((CGFloat *)v9 + 2) = width;
  *((CGFloat *)v9 + 3) = height;
  swift_beginAccess();
  v17 = *v5;
  v18 = v5[1];
  *v5 = v3;
  v5[1] = v8;
  sub_18F9EA6C0(v3, v8);
  sub_18F9EA890(v17, v18);
  sub_18F9EA6C0(v7, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_18F9EA8A4(v3, v8);
  sub_18F9EA8A4(v7, v23);
  swift_beginAccess();
  v19 = *v6;
  v20 = v6[1];
  *v6 = v7;
  v6[1] = v23;
  sub_18F9EA890(v19, v20);

  v24.receiver = v11;
  v24.super_class = (Class)type metadata accessor for ManagedCohort();
  return objc_msgSendSuper2(&v24, sel_init);
}

id ManagedCohort.init(duplicateCohort:)(void *a1)
{
  id v2;

  v2 = sub_18FA06918(a1);

  return v2;
}

void sub_18FA05828()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  int v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  id v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  unint64_t v36;
  void *v37;
  id v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  void *v43;
  void *v44;
  unint64_t v45;
  id v46[8];

  v1 = v0;
  v46[7] = *(id *)MEMORY[0x1E0C80C00];
  v2 = (uint64_t *)(v0 + OBJC_IVAR___CNManagedCohort_identifier);
  swift_beginAccess();
  v3 = v2[1];
  if (!v3)
  {
    v26 = *(void **)(v0 + OBJC_IVAR___CNManagedCohort__privateContact);
    *(_QWORD *)(v0 + OBJC_IVAR___CNManagedCohort__privateContact) = 0;

    sub_18FA051D4();
    return;
  }
  v4 = *v2;
  v5 = qword_1EE17E9B8;
  swift_bridgeObjectRetain();
  if (v5 != -1)
    swift_once();
  v6 = objc_allocWithZone((Class)CNContactFetchRequest);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EAE0);
  v7 = (void *)sub_18FA28438();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v6, sel_initWithKeysToFetch_, v7);

  objc_msgSend(v8, sel_setUnifyResults_, 0);
  objc_msgSend(v8, sel_setMutableObjects_, 1);
  v9 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17E850);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_18FA40F90;
  *(_QWORD *)(v10 + 32) = v4;
  *(_QWORD *)(v10 + 40) = v3;
  swift_bridgeObjectRetain();
  v11 = (void *)sub_18FA28438();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v9, sel_predicateForContactsWithIdentifiers_, v11);

  objc_msgSend(v8, sel_setPredicate_, v12);
  v13 = OBJC_IVAR___CNManagedCohort_internalStore;
  v14 = *(void **)(v1 + OBJC_IVAR___CNManagedCohort_internalStore);
  if (v14
    || (v15 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), sel_init),
        v16 = *(void **)(v1 + v13),
        *(_QWORD *)(v1 + v13) = v15,
        v16,
        (v14 = *(void **)(v1 + v13)) != 0))
  {
    v17 = v14;
  }
  else
  {
    v17 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), sel_init);
    v14 = 0;
  }
  v46[0] = 0;
  v18 = v14;
  v19 = objc_msgSend(v17, sel_executeFetchRequest_error_, v8, v46);

  if (!v19)
  {
    v27 = v46[0];
    v21 = (void *)sub_18FA28030();

    swift_willThrow();
    if (qword_1EE180A18 == -1)
    {
LABEL_19:
      v28 = sub_18FA28204();
      __swift_project_value_buffer(v28, (uint64_t)qword_1EE181050);
      v29 = v21;
      swift_bridgeObjectRetain();
      v30 = v21;
      v31 = sub_18FA281EC();
      v32 = sub_18FA28648();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = swift_slowAlloc();
        v34 = (void *)swift_slowAlloc();
        v46[0] = v34;
        *(_DWORD *)v33 = 136315394;
        swift_bridgeObjectRetain();
        sub_18F9DE1F0(v4, v3, (uint64_t *)v46);
        sub_18FA286E4();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v33 + 12) = 2080;
        swift_getErrorValue();
        v35 = sub_18FA289CC();
        sub_18F9DE1F0(v35, v36, (uint64_t *)v46);
        sub_18FA286E4();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_18F8BD000, v31, v32, "Could not fetch contact for cohort %s: %s", (uint8_t *)v33, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x194006DBC](v34, -1, -1);
        MEMORY[0x194006DBC](v33, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();

      }
      v44 = *(void **)(v1 + OBJC_IVAR___CNManagedCohort__privateContact);
      *(_QWORD *)(v1 + OBJC_IVAR___CNManagedCohort__privateContact) = 0;

      sub_18FA051D4();
      return;
    }
LABEL_33:
    swift_once();
    goto LABEL_19;
  }
  v20 = v46[0];
  v46[0] = objc_msgSend(v19, sel_value);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE17EBC0);
  swift_dynamicCast();
  if (v45 >> 62)
  {
    swift_bridgeObjectRetain();
    v21 = (void *)sub_18FA288B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v21 = *(void **)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v21)
  {
    if ((v45 & 0xC000000000000001) != 0)
    {
      v22 = (id)MEMORY[0x194005370](0);
LABEL_14:
      v23 = v22;
      swift_bridgeObjectRelease();
      objc_msgSend(v23, sel_mutableCopy);

      sub_18FA28720();
      swift_unknownObjectRelease();
      sub_18F9E000C(0, (unint64_t *)&qword_1EE17EBD0);
      v24 = swift_dynamicCast();
      v25 = (void *)v45;
      if (!v24)
        v25 = 0;
      goto LABEL_22;
    }
    if (*(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v22 = *(id *)(v45 + 32);
      goto LABEL_14;
    }
    __break(1u);
    goto LABEL_33;
  }
  swift_bridgeObjectRelease();
  v25 = 0;
LABEL_22:
  v37 = *(void **)(v1 + OBJC_IVAR___CNManagedCohort__privateContact);
  *(_QWORD *)(v1 + OBJC_IVAR___CNManagedCohort__privateContact) = v25;
  v38 = v25;

  sub_18FA051D4();
  if (qword_1EE180A18 != -1)
    swift_once();
  v39 = sub_18FA28204();
  __swift_project_value_buffer(v39, (uint64_t)qword_1EE181050);
  swift_bridgeObjectRetain();
  v40 = sub_18FA281EC();
  v41 = sub_18FA2863C();
  if (os_log_type_enabled(v40, v41))
  {
    v42 = (uint8_t *)swift_slowAlloc();
    v43 = (void *)swift_slowAlloc();
    v46[0] = v43;
    *(_DWORD *)v42 = 136315138;
    swift_bridgeObjectRetain();
    sub_18F9DE1F0(v4, v3, (uint64_t *)v46);
    sub_18FA286E4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_18F8BD000, v40, v41, "Fetched contact for cohort %s", v42, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x194006DBC](v43, -1, -1);
    MEMORY[0x194006DBC](v42, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_18FA05FC8()
{
  uint64_t v0;
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  unint64_t v15;
  id v16;
  char *v17;
  char *v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  id v25;
  uint64_t v26;
  char *v27;
  char *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  void *v40;
  id v41[5];

  v41[4] = *(id *)MEMORY[0x1E0C80C00];
  v1 = (uint64_t *)(v0 + OBJC_IVAR___CNManagedCohort_identifier);
  swift_beginAccess();
  v2 = v1[1];
  if (v2)
  {
    v3 = *v1;
    v4 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v5 = (void *)sub_18FA28330();
    v6 = objc_msgSend(v4, sel_predicateForContainerOfContactWithIdentifier_, v5);

    v7 = OBJC_IVAR___CNManagedCohort_internalStore;
    v8 = *(void **)(v0 + OBJC_IVAR___CNManagedCohort_internalStore);
    if (v8
      || (v9 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), sel_init),
          v10 = *(void **)(v0 + v7),
          *(_QWORD *)(v0 + v7) = v9,
          v10,
          (v8 = *(void **)(v0 + v7)) != 0))
    {
      v11 = v8;
    }
    else
    {
      v11 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), sel_init);
      v8 = 0;
    }
    v41[0] = 0;
    v12 = v8;
    v13 = objc_msgSend(v11, sel_containersMatchingPredicate_error_, v6, v41);

    v14 = v41[0];
    if (!v13)
    {
      v25 = v41[0];
      v17 = (char *)sub_18FA28030();

      swift_willThrow();
      *(_OWORD *)(v0 + OBJC_IVAR___CNManagedCohort__privateContainerName) = xmmword_18FA41560;
      swift_bridgeObjectRelease();
      if (qword_1EE180A18 == -1)
      {
LABEL_15:
        v26 = sub_18FA28204();
        __swift_project_value_buffer(v26, (uint64_t)qword_1EE181050);
        v27 = v17;
        swift_bridgeObjectRetain();
        v28 = v17;
        v29 = sub_18FA281EC();
        v30 = sub_18FA28648();
        if (!os_log_type_enabled(v29, v30))
        {

          swift_bridgeObjectRelease_n();
          return;
        }
        v31 = swift_slowAlloc();
        v32 = (void *)swift_slowAlloc();
        v41[0] = v32;
        *(_DWORD *)v31 = 136315394;
        swift_bridgeObjectRetain();
        sub_18F9DE1F0(v3, v2, (uint64_t *)v41);
        sub_18FA286E4();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v31 + 12) = 2080;
        swift_getErrorValue();
        v33 = sub_18FA289CC();
        sub_18F9DE1F0(v33, v34, (uint64_t *)v41);
        sub_18FA286E4();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_18F8BD000, v29, v30, "Failed to fetch container for cohort %s. %s", (uint8_t *)v31, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x194006DBC](v32, -1, -1);
        MEMORY[0x194006DBC](v31, -1, -1);

LABEL_26:
        return;
      }
LABEL_32:
      swift_once();
      goto LABEL_15;
    }
    sub_18F9E000C(0, &qword_1EE17EAD0);
    v15 = sub_18FA28444();
    v16 = v14;

    if (v15 >> 62)
    {
      swift_bridgeObjectRetain();
      v17 = (char *)sub_18FA288B8();
      swift_bridgeObjectRelease();
      if (v17)
      {
LABEL_8:
        v18 = v17 - 1;
        if (__OFSUB__(v17, 1))
        {
          __break(1u);
        }
        else if ((v15 & 0xC000000000000001) == 0)
        {
          if (((unint64_t)v18 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if ((unint64_t)v18 < *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v19 = *(id *)(v15 + 8 * (_QWORD)v18 + 32);
LABEL_13:
            v20 = v19;
            swift_bridgeObjectRelease();
            v21 = objc_msgSend(v20, sel_name);

            v22 = sub_18FA2833C();
            v24 = v23;

LABEL_21:
            v35 = (uint64_t *)(v0 + OBJC_IVAR___CNManagedCohort__privateContainerName);
            *v35 = v22;
            v35[1] = v24;
            swift_bridgeObjectRelease();
            if (qword_1EE180A18 != -1)
              swift_once();
            v36 = sub_18FA28204();
            __swift_project_value_buffer(v36, (uint64_t)qword_1EE181050);
            swift_bridgeObjectRetain();
            v37 = sub_18FA281EC();
            v38 = sub_18FA2863C();
            if (os_log_type_enabled(v37, v38))
            {
              v39 = (uint8_t *)swift_slowAlloc();
              v40 = (void *)swift_slowAlloc();
              v41[0] = v40;
              *(_DWORD *)v39 = 136315138;
              swift_bridgeObjectRetain();
              sub_18F9DE1F0(v3, v2, (uint64_t *)v41);
              sub_18FA286E4();
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_18F8BD000, v37, v38, "Fetched container for cohort %s", v39, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x194006DBC](v40, -1, -1);
              MEMORY[0x194006DBC](v39, -1, -1);

              return;
            }

            swift_bridgeObjectRelease_n();
            goto LABEL_26;
          }
          __break(1u);
          goto LABEL_32;
        }
        v19 = (id)MEMORY[0x194005370](v18, v15);
        goto LABEL_13;
      }
    }
    else
    {
      v17 = *(char **)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v17)
        goto LABEL_8;
    }
    swift_bridgeObjectRelease();
    v24 = 0xE700000000000000;
    v22 = 0x6E776F6E6B6E55;
    goto LABEL_21;
  }
}

void sub_18FA06600(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  CGFloat v9;
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  NSString *v13;
  uint64_t v14;
  NSRect v15;

  v3 = v1 + OBJC_IVAR___CNManagedCohort_imageData;
  swift_beginAccess();
  v4 = 0;
  v5 = 0;
  v6 = 0;
  v7 = 0;
  v8 = *(_QWORD *)(v3 + 8);
  if (v8 >> 60 != 15)
  {
    v4 = *(_QWORD *)v3;
    v9 = *(double *)(v1 + OBJC_IVAR___CNManagedCohort_cropRect);
    v10 = *(double *)(v1 + OBJC_IVAR___CNManagedCohort_cropRect + 8);
    v11 = *(double *)(v1 + OBJC_IVAR___CNManagedCohort_cropRect + 16);
    v12 = *(double *)(v1 + OBJC_IVAR___CNManagedCohort_cropRect + 24);
    sub_18F9EA6C0(*(_QWORD *)v3, *(_QWORD *)(v3 + 8));
    v15.origin.x = v9;
    v15.origin.y = v10;
    v15.size.width = v11;
    v15.size.height = v12;
    v13 = NSStringFromRect(v15);
    v6 = sub_18FA2833C();
    v7 = v14;

    v5 = v8;
  }
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
}

uint64_t sub_18FA066EC()
{
  uint64_t v0;
  NSString *v1;
  uint64_t v2;

  v1 = NSStringFromRect(*(NSRect *)(v0 + OBJC_IVAR___CNManagedCohort_cropRect));
  v2 = sub_18FA2833C();

  return v2;
}

uint64_t sub_18FA06748@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = (uint64_t *)(v1 + OBJC_IVAR___CNManagedCohort_posterData);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v5 >> 60 == 15)
    v6 = 0;
  else
    v6 = *v3;
  v7 = 0xF000000000000000;
  if (v5 >> 60 != 15)
    v7 = v3[1];
  *a1 = v6;
  a1[1] = v7;
  return sub_18F9EA6AC(v4, v5);
}

id ManagedCohort.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ManagedCohort.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ManagedCohort.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedCohort();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_18FA068DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for ManagedCohort();
  result = sub_18FA287EC();
  *a1 = result;
  return result;
}

id sub_18FA06918(void *a1)
{
  char *v1;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  char *v6;
  char *v7;
  char *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  NSString *v16;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  id v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  objc_super v36;
  NSRect v37;

  v3 = (uint64_t *)&v1[OBJC_IVAR___CNManagedCohort_identifier];
  *v3 = 0;
  v3[1] = 0;
  v4 = (uint64_t *)&v1[OBJC_IVAR___CNManagedCohort_imageData];
  *(_OWORD *)&v1[OBJC_IVAR___CNManagedCohort_imageData] = xmmword_18FA41550;
  v5 = (uint64_t *)&v1[OBJC_IVAR___CNManagedCohort_posterData];
  *(_OWORD *)&v1[OBJC_IVAR___CNManagedCohort_posterData] = xmmword_18FA41550;
  *(_QWORD *)&v1[OBJC_IVAR___CNManagedCohort_internalStore] = 0;
  v6 = &v1[OBJC_IVAR___CNManagedCohort_cropRect];
  *(_OWORD *)v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *(_QWORD *)&v1[OBJC_IVAR___CNManagedCohort__privateContact] = 0;
  v7 = &v1[OBJC_IVAR___CNManagedCohort__privateContainerName];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v8 = v1;
  v9 = objc_msgSend(a1, sel_identifier);
  if (v9)
  {
    v10 = v9;
    v11 = sub_18FA2833C();
    v13 = v12;

  }
  else
  {
    v11 = 0;
    v13 = 0;
  }
  swift_beginAccess();
  *v3 = v11;
  v3[1] = v13;
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(a1, sel_cropRectString);
  if (v14)
  {
    v15 = v14;
    sub_18FA2833C();

    v16 = (NSString *)sub_18FA28330();
    v37 = NSRectFromString(v16);
    x = v37.origin.x;
    y = v37.origin.y;
    width = v37.size.width;
    height = v37.size.height;
    swift_bridgeObjectRelease();

  }
  else
  {
    width = 0.0;
    height = 0.0;
    x = 0.0;
    y = 0.0;
  }
  *(CGFloat *)v6 = x;
  *((CGFloat *)v6 + 1) = y;
  *((CGFloat *)v6 + 2) = width;
  *((CGFloat *)v6 + 3) = height;
  v21 = objc_msgSend(a1, sel_imageData);
  if (v21)
  {
    v22 = v21;
    v23 = sub_18FA280A8();
    v25 = v24;

  }
  else
  {
    v23 = 0;
    v25 = 0xF000000000000000;
  }
  swift_beginAccess();
  v26 = *v4;
  v27 = v4[1];
  *v4 = v23;
  v4[1] = v25;
  sub_18F9EA890(v26, v27);
  v28 = objc_msgSend(a1, sel_posterData);
  if (v28)
  {
    v29 = v28;
    v30 = sub_18FA280A8();
    v32 = v31;

  }
  else
  {
    v30 = 0;
    v32 = 0xF000000000000000;
  }
  swift_beginAccess();
  v33 = *v5;
  v34 = v5[1];
  *v5 = v30;
  v5[1] = v32;
  sub_18F9EA890(v33, v34);

  v36.receiver = v8;
  v36.super_class = (Class)type metadata accessor for ManagedCohort();
  return objc_msgSendSuper2(&v36, sel_init);
}

id sub_18FA06B94(void *a1)
{
  char *v1;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void *v9;
  char *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  void *v28;
  id v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  objc_super v35;

  v3 = (uint64_t *)&v1[OBJC_IVAR___CNManagedCohort_identifier];
  *v3 = 0;
  v3[1] = 0;
  v4 = (uint64_t *)&v1[OBJC_IVAR___CNManagedCohort_imageData];
  *(_OWORD *)&v1[OBJC_IVAR___CNManagedCohort_imageData] = xmmword_18FA41550;
  v5 = (uint64_t *)&v1[OBJC_IVAR___CNManagedCohort_posterData];
  *(_OWORD *)&v1[OBJC_IVAR___CNManagedCohort_posterData] = xmmword_18FA41550;
  *(_QWORD *)&v1[OBJC_IVAR___CNManagedCohort_internalStore] = 0;
  v6 = &v1[OBJC_IVAR___CNManagedCohort_cropRect];
  *(_OWORD *)v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  v7 = OBJC_IVAR___CNManagedCohort__privateContact;
  *(_QWORD *)&v1[OBJC_IVAR___CNManagedCohort__privateContact] = 0;
  v8 = &v1[OBJC_IVAR___CNManagedCohort__privateContainerName];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  v9 = *(void **)&v1[v7];
  *(_QWORD *)&v1[v7] = a1;
  v10 = v1;
  v11 = a1;

  v12 = objc_msgSend(v11, sel_identifier);
  v13 = sub_18FA2833C();
  v15 = v14;

  swift_beginAccess();
  *v3 = v13;
  v3[1] = v15;
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_cropRect);
  *(_QWORD *)v6 = v16;
  *((_QWORD *)v6 + 1) = v17;
  *((_QWORD *)v6 + 2) = v18;
  *((_QWORD *)v6 + 3) = v19;
  v20 = objc_msgSend(v11, sel_imageData);
  if (v20)
  {
    v21 = v20;
    v22 = sub_18FA280A8();
    v24 = v23;

  }
  else
  {
    v22 = 0;
    v24 = 0xF000000000000000;
  }
  swift_beginAccess();
  v25 = *v4;
  v26 = v4[1];
  *v4 = v22;
  v4[1] = v24;
  sub_18F9EA890(v25, v26);
  v27 = objc_msgSend(v11, sel_wallpaper);
  v28 = v27;
  if (v27)
  {
    v29 = objc_msgSend(v27, sel_posterArchiveData);

    v28 = (void *)sub_18FA280A8();
    v31 = v30;

  }
  else
  {
    v31 = 0xF000000000000000;
  }
  swift_beginAccess();
  v32 = *v5;
  v33 = v5[1];
  *v5 = (uint64_t)v28;
  v5[1] = v31;
  sub_18F9EA890(v32, v33);

  v35.receiver = v10;
  v35.super_class = (Class)type metadata accessor for ManagedCohort();
  return objc_msgSendSuper2(&v35, sel_init);
}

uint64_t type metadata accessor for ManagedCohort()
{
  return objc_opt_self();
}

uint64_t sub_18FA06DE0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___CNManagedCohort_identifier);
  swift_beginAccess();
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_18FA06E38@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_18FA05008(a1, &OBJC_IVAR___CNManagedCohort_imageData, a2);
}

uint64_t sub_18FA06E54(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_18FA05058(a1, a2, a3, a4, &OBJC_IVAR___CNManagedCohort_imageData);
}

uint64_t sub_18FA06E70@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_18FA05008(a1, &OBJC_IVAR___CNManagedCohort_posterData, a2);
}

uint64_t sub_18FA06E8C(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_18FA05058(a1, a2, a3, a4, &OBJC_IVAR___CNManagedCohort_posterData);
}

uint64_t destroy for CohortImage(uint64_t a1)
{
  sub_18F9EA8A4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  return swift_bridgeObjectRelease();
}

uint64_t *initializeWithCopy for CohortImage(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v4 = *a2;
  v5 = a2[1];
  sub_18F9EA6C0(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for CohortImage(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  sub_18F9EA6C0(*a2, v5);
  v6 = *a1;
  v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_18F9EA8A4(v6, v7);
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *assignWithTake for CohortImage(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_18F9EA8A4(v4, v5);
  v6 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CohortImage(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CohortImage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CohortImage()
{
  return &type metadata for CohortImage;
}

uint64_t *initializeBufferWithCopyOfBuffer for CohortPoster(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  sub_18F9EA6C0(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t destroy for CohortPoster(uint64_t a1)
{
  return sub_18F9EA8A4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t *assignWithCopy for CohortPoster(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  sub_18F9EA6C0(*a2, v4);
  v5 = *a1;
  v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_18F9EA8A4(v5, v6);
  return a1;
}

uint64_t *assignWithTake for CohortPoster(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_18F9EA8A4(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for CohortPoster(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 13);
  v3 = (((*(_QWORD *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for CohortPoster(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)result = a2 - 13;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CohortPoster()
{
  return &type metadata for CohortPoster;
}

uint64_t method lookup function for ManagedCohort()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ManagedCohort.identifier.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ManagedCohort.identifier.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ManagedCohort.identifier.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ManagedCohort.imageData.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ManagedCohort.imageData.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ManagedCohort.imageData.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of ManagedCohort.posterData.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ManagedCohort.posterData.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of ManagedCohort.posterData.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of ManagedCohort.contact.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of ManagedCohort.contact.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of ManagedCohort.contact.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of ManagedCohort.containerName.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of ManagedCohort.__allocating_init(contact:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 344))();
}

uint64_t dispatch thunk of ManagedCohort.__allocating_init(duplicateCohortProperties:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 352))();
}

uint64_t dispatch thunk of ManagedCohort.__allocating_init(duplicateCohort:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 360))();
}

uint64_t dispatch thunk of ManagedCohort.cohortImage.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x180))();
}

uint64_t dispatch thunk of ManagedCohort.cropRectString.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x188))();
}

uint64_t dispatch thunk of ManagedCohort.cohortPoster.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x190))();
}

uint64_t sub_18FA073CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_18FA28564();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_18FA28558();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_18F9DFD58(a1, &qword_1EE17EE20);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_18FA2851C();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_18FA07500()
{
  uint64_t v0;

  v0 = sub_18FA28204();
  __swift_allocate_value_buffer(v0, qword_1EE183560);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EE183560);
  return sub_18FA281F8();
}

id sub_18FA07578()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CNContactProviderSupportCache()), sel_init);
  qword_1EE17E7E0 = (uint64_t)result;
  return result;
}

id static CNContactProviderSupportCache.sharedCache.getter()
{
  if (qword_1EE17E7E8 != -1)
    swift_once();
  return (id)qword_1EE17E7E0;
}

_QWORD *sub_18FA076B8()
{
  uint64_t v0;
  _QWORD *v1;

  swift_beginAccess();
  v0 = swift_bridgeObjectRetain();
  v1 = sub_18F9E880C(v0);
  swift_bridgeObjectRelease();
  return v1;
}

_BYTE *sub_18FA07718()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  __CFString *v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  os_unfair_lock_s *v11;
  uint64_t v12;
  objc_super v14;

  v1 = OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_appExtensionIdentityByBundleIdentifierCache;
  v2 = v0;
  v3 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v0[v1] = sub_18FA13F7C(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_appExtensionIdentityCache] = v3;
  v4 = OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_containerByBundleIdentifierCache;
  *(_QWORD *)&v2[v4] = sub_18FA1411C(v3);
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_queryTask] = 0;
  v5 = OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_lock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17E828);
  v6 = swift_allocObject();
  *(_DWORD *)(v6 + 16) = 0;
  *(_QWORD *)&v2[v5] = v6;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_internalExtensionBundleIDs] = &unk_1E29F3B68;
  v2[OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_isInternalExtensionsEnabled] = 0;

  v14.receiver = v2;
  v14.super_class = (Class)type metadata accessor for CNContactProviderSupportCache();
  v7 = objc_msgSendSuper2(&v14, sel_init);
  v8 = (__CFString *)sub_18FA28330();
  LODWORD(v3) = CFPreferencesGetAppBooleanValue(v8, (CFStringRef)*MEMORY[0x1E0C9B228], 0);

  v7[OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_isInternalExtensionsEnabled] = (_DWORD)v3 != 0;
  if (*(_QWORD *)&v7[OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_queryTask])
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE180DF8);
    sub_18FA28570();
    v9 = swift_release();
  }
  MEMORY[0x1E0C80A78](v9);
  v11 = v10 + 4;
  os_unfair_lock_lock(v10 + 4);
  sub_18F9F6C78(v12, sub_18FA0C6AC);
  os_unfair_lock_unlock(v11);
  sleep(1u);

  return v7;
}

uint64_t sub_18FA07920(uint64_t a1)
{
  uint64_t v1;
  os_unfair_lock_s *v2;
  os_unfair_lock_s *v3;
  uint64_t v4;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_queryTask))
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE180DF8);
    sub_18FA28570();
    a1 = swift_release();
  }
  MEMORY[0x1E0C80A78](a1);
  v3 = v2 + 4;
  os_unfair_lock_lock(v2 + 4);
  sub_18F9F6C78(v4, sub_18FA0A154);
  os_unfair_lock_unlock(v3);
  return sleep(1u);
}

uint64_t sub_18FA079F8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t *v4;
  uint64_t *v5;
  unint64_t v6;
  unint64_t *v7;

  v2 = MEMORY[0x1E0DEE9D8];
  v3 = sub_18FA13F7C(MEMORY[0x1E0DEE9D8]);
  v4 = (unint64_t *)(a1
                          + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_appExtensionIdentityByBundleIdentifierCache);
  swift_beginAccess();
  *v4 = v3;
  swift_bridgeObjectRelease();
  v5 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_appExtensionIdentityCache);
  swift_beginAccess();
  *v5 = v2;
  swift_bridgeObjectRelease();
  v6 = sub_18FA1411C(v2);
  v7 = (unint64_t *)(a1
                          + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_containerByBundleIdentifierCache);
  swift_beginAccess();
  *v7 = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_queryTask) = sub_18FA07B28();
  return swift_release();
}

uint64_t sub_18FA07B28()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[4];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EE20);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_18FA28564();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v0;
  v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  v8 = v0;
  if (v7 == 1)
  {
    sub_18F9DFD58((uint64_t)v3, &qword_1EE17EE20);
  }
  else
  {
    sub_18FA28558();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    if (v6[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v9 = sub_18FA2851C();
      v11 = v10;
      swift_unknownObjectRelease();
      if (v11 | v9)
      {
        v13[0] = 0;
        v13[1] = 0;
        v13[2] = v9;
        v13[3] = v11;
      }
    }
  }
  return swift_task_create();
}

uint64_t sub_18FA07CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4[7] = a4;
  v5 = sub_18FA28540();
  v4[8] = v5;
  v4[9] = *(_QWORD *)(v5 - 8);
  v4[10] = swift_task_alloc();
  v6 = sub_18FA281E0();
  v4[11] = v6;
  v4[12] = *(_QWORD *)(v6 - 8);
  v4[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17E7D8);
  v4[14] = swift_task_alloc();
  v7 = sub_18FA28150();
  v4[15] = v7;
  v4[16] = *(_QWORD *)(v7 - 8);
  v4[17] = swift_task_alloc();
  v8 = sub_18FA28138();
  v4[18] = v8;
  v4[19] = *(_QWORD *)(v8 - 8);
  v4[20] = swift_task_alloc();
  v9 = sub_18FA28168();
  v4[21] = v9;
  v4[22] = *(_QWORD *)(v9 - 8);
  v4[23] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_18FA07E04()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  sub_18FA2857C();
  v2 = v0[16];
  v1 = v0[17];
  v3 = v0[15];
  sub_18FA2812C();
  sub_18FA2815C();
  sub_18FA28144();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[24] = sub_18F9D727C(&qword_1EE17E7D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAA400], MEMORY[0x1E0CAA408]);
  v4 = (_QWORD *)swift_task_alloc();
  v0[25] = v4;
  *v4 = v0;
  v4[1] = sub_18FA0817C;
  return sub_18FA2854C();
}

uint64_t sub_18FA0817C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 224) = v0;
  else
    *(_QWORD *)(v2 + 208) = 0;
  return swift_task_switch();
}

uint64_t sub_18FA081E4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 216) = *(_QWORD *)(v0 + 40);
  return swift_task_switch();
}

uint64_t sub_18FA08200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, unint64_t, uint64_t);
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v1 = *(_QWORD *)(v0 + 216);
  if (!v1)
  {
    v22 = *(_QWORD *)(v0 + 176);
    v21 = *(_QWORD *)(v0 + 184);
    v23 = *(_QWORD *)(v0 + 168);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 144));
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
LABEL_8:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v0 + 96);
  if (!v2)
  {
    swift_bridgeObjectRetain();
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_10:
    v8(*(_QWORD *)(v0 + 112), 1, 1, *(_QWORD *)(v0 + 88));
    goto LABEL_11;
  }
  v47 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v48 = *(_QWORD *)(v3 + 72);
  v4 = *(void (**)(uint64_t, unint64_t, uint64_t))(v3 + 16);
  v5 = *(void **)(v0 + 208);
  v6 = *(_QWORD *)(v0 + 112);
  v7 = *(_QWORD *)(v0 + 88);
  swift_bridgeObjectRetain();
  v4(v6, v1 + v47, v7);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v8(v6, 0, 1, v7);
  v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  v10 = (void (*)(uint64_t, uint64_t, uint64_t))v4;
  if (v9(v6, 1, v7) != 1)
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 32))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 88));
    sub_18FA2857C();
    if (v5)
    {
      v12 = *(_QWORD *)(v0 + 176);
      v11 = *(_QWORD *)(v0 + 184);
      v14 = *(_QWORD *)(v0 + 160);
      v13 = *(_QWORD *)(v0 + 168);
      v15 = *(_QWORD *)(v0 + 144);
      v16 = *(_QWORD *)(v0 + 152);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 16) = v5;
      v17 = v5;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE180DF8);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v19 = *(_QWORD *)(v0 + 72);
        v18 = *(_QWORD *)(v0 + 80);
        v20 = *(_QWORD *)(v0 + 64);

        (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
      }
      else
      {

        if (qword_1EE17E7F0 != -1)
          swift_once();
        v37 = sub_18FA28204();
        __swift_project_value_buffer(v37, (uint64_t)qword_1EE183560);
        v38 = v5;
        v39 = v5;
        v40 = sub_18FA281EC();
        v41 = sub_18FA28648();
        if (os_log_type_enabled(v40, v41))
        {
          v42 = (uint8_t *)swift_slowAlloc();
          v43 = swift_slowAlloc();
          v49 = v43;
          *(_DWORD *)v42 = 136446210;
          *(_QWORD *)(v0 + 24) = v5;
          v44 = v5;
          v45 = sub_18FA28384();
          *(_QWORD *)(v0 + 32) = sub_18F9DE1F0(v45, v46, &v49);
          sub_18FA286E4();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_18F8BD000, v40, v41, "Discovered extension error %{public}s", v42, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x194006DBC](v43, -1, -1);
          MEMORY[0x194006DBC](v42, -1, -1);

        }
        else
        {

        }
      }
      goto LABEL_8;
    }
    v27 = *(_QWORD *)(v0 + 96);
    v26 = *(_QWORD *)(v0 + 104);
    v28 = *(_QWORD *)(v0 + 88);
    sub_18FA08A9C();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    v29 = v2 - 1;
    if (v29)
    {
      v30 = v1 + v48 + v47;
      while (1)
      {
        v31 = *(_QWORD *)(v0 + 112);
        v32 = *(_QWORD *)(v0 + 88);
        v33 = *(_QWORD *)(v0 + 96);
        v10(v31, v30, v32);
        v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56);
        v8(v31, 0, 1, v32);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32) == 1)
          goto LABEL_11;
        (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 32))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 88));
        sub_18FA2857C();
        v35 = *(_QWORD *)(v0 + 96);
        v34 = *(_QWORD *)(v0 + 104);
        v36 = *(_QWORD *)(v0 + 88);
        sub_18FA08A9C();
        (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
        v30 += v48;
        if (!--v29)
          goto LABEL_10;
      }
    }
    goto LABEL_10;
  }
LABEL_11:
  swift_bridgeObjectRelease_n();
  v25 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 232) = v25;
  *v25 = v0;
  v25[1] = sub_18FA08A34;
  return sub_18FA2854C();
}

uint64_t sub_18FA08714()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v0 + 224);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE180DF8);
  swift_willThrowTypedImpl();
  return swift_task_switch();
}

uint64_t sub_18FA08774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;

  v2 = *(_QWORD *)(v0 + 176);
  v1 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 168);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 144));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(void **)(v0 + 224);
  *(_QWORD *)(v0 + 16) = v4;
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE180DF8);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v7 = *(_QWORD *)(v0 + 72);
    v6 = *(_QWORD *)(v0 + 80);
    v8 = *(_QWORD *)(v0 + 64);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  }
  else
  {

    if (qword_1EE17E7F0 != -1)
      swift_once();
    v9 = sub_18FA28204();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EE183560);
    v10 = v4;
    v11 = v4;
    v12 = sub_18FA281EC();
    v13 = sub_18FA28648();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v20 = v15;
      *(_DWORD *)v14 = 136446210;
      *(_QWORD *)(v0 + 24) = v4;
      v16 = v4;
      v17 = sub_18FA28384();
      *(_QWORD *)(v0 + 32) = sub_18F9DE1F0(v17, v18, &v20);
      sub_18FA286E4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_18F8BD000, v12, v13, "Discovered extension error %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x194006DBC](v15, -1, -1);
      MEMORY[0x194006DBC](v14, -1, -1);

    }
    else
    {

    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18FA08A34()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 224) = v0;
  else
    *(_QWORD *)(v2 + 208) = 0;
  return swift_task_switch();
}

void sub_18FA08A9C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  os_unfair_lock_s *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21[2];

  v1 = _s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0();
  v3 = v2;
  if (_s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0() == 0xD00000000000002BLL
    && v4 == 0x800000018FA4F7A0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = sub_18FA2896C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) == 0)
    {
      v18 = (void *)sub_18FA281C8();
      if (v18)
      {
        v19 = v18;
        v20 = objc_msgSend(v18, sel_bundleIdentifier);

        if (v20)
        {
          sub_18FA2833C();

        }
      }
    }
  }
  v6 = _AppExtensionIdentity.appDisplayName.getter();
  v7 = v6;
  v9 = v8;
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_isInternalExtensionsEnabled) & 1) != 0
    || (v6 = sub_18FA08E34(v1, v3, *(_QWORD **)(v0 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_internalExtensionBundleIDs)), (v6 & 1) == 0))
  {
    MEMORY[0x1E0C80A78](v6);
    v16 = v15 + 4;
    os_unfair_lock_lock(v15 + 4);
    sub_18F9F6C78(v17, sub_18FA0C5F0);
    os_unfair_lock_unlock(v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_1EE17E7F0 != -1)
      swift_once();
    v10 = sub_18FA28204();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EE183560);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = sub_18FA281EC();
    v12 = sub_18FA28654();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc();
      v14 = swift_slowAlloc();
      v21[0] = v14;
      *(_DWORD *)v13 = 136446466;
      swift_bridgeObjectRetain();
      sub_18F9DE1F0(v1, v3, v21);
      sub_18FA286E4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v13 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_18F9DE1F0(v7, v9, v21);
      sub_18FA286E4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_18F8BD000, v11, v12, "Skipping discovered internal extension %{public}s for %{public}s app", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x194006DBC](v14, -1, -1);
      MEMORY[0x194006DBC](v13, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_18FA08E34(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_18FA2896C();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_18FA2896C() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_18FA08EF8(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  void (*v28)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38[3];
  uint64_t v39;

  v35 = a6;
  v36 = a7;
  v37 = a5;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17E7D8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE17E7F0 != -1)
    swift_once();
  v17 = sub_18FA28204();
  __swift_project_value_buffer(v17, (uint64_t)qword_1EE183560);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v18 = sub_18FA281EC();
  v19 = sub_18FA28654();
  v20 = os_log_type_enabled(v18, v19);
  v34 = a1;
  if (v20)
  {
    v21 = swift_slowAlloc();
    v33 = v8;
    v22 = v21;
    v23 = swift_slowAlloc();
    v31 = a3;
    v24 = v23;
    v38[0] = v23;
    *(_DWORD *)v22 = 136446466;
    v32 = a8;
    swift_bridgeObjectRetain();
    v39 = sub_18F9DE1F0(a1, a2, v38);
    sub_18FA286E4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v22 + 12) = 2082;
    swift_bridgeObjectRetain();
    v39 = sub_18F9DE1F0(v31, a4, v38);
    a8 = v32;
    sub_18FA286E4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_18F8BD000, v18, v19, "Discovered extension %{public}s for %{public}s app", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x194006DBC](v24, -1, -1);
    MEMORY[0x194006DBC](v22, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v25 = sub_18FA281E0();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  v27(v16, a8, v25);
  v28 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56);
  v28(v16, 0, 1, v25);
  swift_beginAccess();
  v29 = v36;
  swift_bridgeObjectRetain();
  sub_18FA09230((uint64_t)v16, v35, v29);
  v27(v16, a8, v25);
  v28(v16, 0, 1, v25);
  swift_bridgeObjectRetain();
  sub_18FA09230((uint64_t)v16, v34, a2);
  swift_endAccess();
  return sub_18FA093A4(a8);
}

uint64_t sub_18FA09230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17E7D8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_18FA281E0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1, 1, v11) == 1)
  {
    sub_18F9DFD58(a1, &qword_1EE17E7D8);
    sub_18FA0B4E8(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_18F9DFD58((uint64_t)v10, &qword_1EE17E7D8);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v14, a1, v11);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v4;
    *v4 = 0x8000000000000000;
    sub_18FA0BAB4((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native);
    *v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_18FA093A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17E830);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_18FA281E0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v35 - v11;
  v13 = (unint64_t *)(v1 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_appExtensionIdentityCache);
  swift_beginAccess();
  v14 = *v13;
  v15 = *(_QWORD *)(*v13 + 16);
  if (!v15)
  {
LABEL_8:
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a1, v6);
    swift_beginAccess();
    v24 = *v13;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v13 = v24;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v24 = sub_18F9FE258(0, *(_QWORD *)(v24 + 16) + 1, 1, v24);
      *v13 = v24;
    }
    v27 = *(_QWORD *)(v24 + 16);
    v26 = *(_QWORD *)(v24 + 24);
    if (v27 >= v26 >> 1)
    {
      v24 = sub_18F9FE258(v26 > 1, v27 + 1, 1, v24);
      *v13 = v24;
    }
    *(_QWORD *)(v24 + 16) = v27 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v24+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v27, v10, v6);
    return swift_endAccess();
  }
  v37 = v5;
  v38 = v12;
  v36 = v10;
  v39 = v7;
  v40 = v6;
  v16 = v14 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v17 = *(_QWORD *)(v7 + 72);
  swift_bridgeObjectRetain();
  v18 = 0;
  while (1)
  {
    v19 = _s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0();
    v21 = v20;
    if (v19 == _s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0() && v21 == v22)
      break;
    v23 = sub_18FA2896C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v23 & 1) != 0)
      goto LABEL_14;
    ++v18;
    v16 += v17;
    if (v15 == v18)
    {
      swift_bridgeObjectRelease();
      v7 = v39;
      v6 = v40;
      v10 = v36;
      goto LABEL_8;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_14:
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v28 = (uint64_t)v38;
  sub_18FA096B4(v18, (uint64_t)v38);
  v29 = v39;
  v30 = v28;
  v31 = v40;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 8))(v30, v40);
  if (*(_QWORD *)(*v13 + 16) >= v18)
  {
    v33 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 16);
    v34 = (uint64_t)v37;
    v33(v37, a1, v31);
    sub_18FA0EF48(v18, v18, v34);
    return swift_endAccess();
  }
  __break(1u);
  return result;
}

uint64_t sub_18FA096B4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t *v2;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_18FA0C434(v5);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  v7 = v6 - 1;
  v8 = sub_18FA281E0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v11 = v5 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)) + v10 * a1;
  result = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v9 + 32))(a2, v11, v8);
  if ((uint64_t)(v7 - a1) < 0)
  {
LABEL_15:
    result = sub_18FA288F4();
    __break(1u);
    return result;
  }
  if (v10 > 0 || v11 >= v11 + v10 + v10 * (v7 - a1))
  {
    result = swift_arrayInitWithTakeFrontToBack();
  }
  else if (v10)
  {
    result = swift_arrayInitWithTakeBackToFront();
  }
  *(_QWORD *)(v5 + 16) = v7;
  *v2 = v5;
  return result;
}

void sub_18FA097F0()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_lock) + 16);
  os_unfair_lock_lock(v1);
  sub_18F9F6C78(v2, (uint64_t (*)(void))sub_18F9F9740);
  os_unfair_lock_unlock(v1);
}

uint64_t sub_18FA0985C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v7 = (uint64_t *)(a1
                 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_appExtensionIdentityByBundleIdentifierCache);
  swift_beginAccess();
  v8 = *v7;
  if (*(_QWORD *)(v8 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = sub_18F9E01F0(a2, a3);
    if ((v10 & 1) != 0)
    {
      v11 = v9;
      v12 = *(_QWORD *)(v8 + 56);
      v13 = sub_18FA281E0();
      v14 = *(_QWORD *)(v13 - 8);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 16))(a4, v12 + *(_QWORD *)(v14 + 72) * v11, v13);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a4, 0, 1, v13);
    }
    else
    {
      v17 = sub_18FA281E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a4, 1, 1, v17);
    }
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v15 = sub_18FA281E0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a4, 1, 1, v15);
  }
}

uint64_t sub_18FA09998()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v4;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_lock) + 16);
  os_unfair_lock_lock(v1);
  sub_18FA0A16C(&v4);
  v2 = v4;
  os_unfair_lock_unlock(v1);
  return v2;
}

uint64_t sub_18FA099F0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(a1 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_appExtensionIdentityCache);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_18FA09A50()
{
  uint64_t v0;
  void *v1;
  char v2;
  os_unfair_lock_s *v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  void *v7;
  id v8;

  if (_s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0() == 0xD00000000000002BLL
    && v0 == 0x800000018FA4F7A0)
  {
    v1 = (void *)swift_bridgeObjectRelease();
  }
  else
  {
    v2 = sub_18FA2896C();
    v1 = (void *)swift_bridgeObjectRelease();
    if ((v2 & 1) == 0)
    {
      v1 = (void *)sub_18FA281C8();
      if (v1)
      {
        v7 = v1;
        v8 = objc_msgSend(v1, sel_bundleIdentifier);

        if (v8)
        {
          sub_18FA2833C();

        }
      }
    }
  }
  MEMORY[0x1E0C80A78](v1);
  v4 = v3 + 4;
  os_unfair_lock_lock(v3 + 4);
  sub_18F9F6C78(v5, sub_18FA0C4AC);
  os_unfair_lock_unlock(v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_18FA09BBC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t *v7;
  id v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;

  v7 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_containerByBundleIdentifierCache);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v8 = a4;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v11 = *v7;
  *v7 = 0x8000000000000000;
  sub_18FA0BBF0((uint64_t)v8, a2, a3, isUniquelyReferenced_nonNull_native);
  *v7 = v11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_18FA09C84()
{
  uint64_t v0;
  void *v1;
  char v2;
  os_unfair_lock_s *v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  void *v7;
  id v8;

  if (_s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0() == 0xD00000000000002BLL
    && v0 == 0x800000018FA4F7A0)
  {
    v1 = (void *)swift_bridgeObjectRelease();
  }
  else
  {
    v2 = sub_18FA2896C();
    v1 = (void *)swift_bridgeObjectRelease();
    if ((v2 & 1) == 0)
    {
      v1 = (void *)sub_18FA281C8();
      if (v1)
      {
        v7 = v1;
        v8 = objc_msgSend(v1, sel_bundleIdentifier);

        if (v8)
        {
          sub_18FA2833C();

        }
      }
    }
  }
  MEMORY[0x1E0C80A78](v1);
  v4 = v3 + 4;
  os_unfair_lock_lock(v3 + 4);
  sub_18F9F6C78(v5, (uint64_t (*)(void))sub_18FA0C4C8);
  os_unfair_lock_unlock(v4);
  return swift_bridgeObjectRelease();
}

void sub_18FA09DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;

  swift_beginAccess();
  swift_bridgeObjectRetain();
  v5 = (void *)sub_18FA0B618(a2, a3);
  swift_endAccess();
  swift_bridgeObjectRelease();

}

uint64_t sub_18FA09E74()
{
  uint64_t v0;
  void *v1;
  char v2;
  os_unfair_lock_s *v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  void *v7;
  id v8;
  uint64_t v9;

  if (_s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0() == 0xD00000000000002BLL
    && v0 == 0x800000018FA4F7A0)
  {
    v1 = (void *)swift_bridgeObjectRelease();
  }
  else
  {
    v2 = sub_18FA2896C();
    v1 = (void *)swift_bridgeObjectRelease();
    if ((v2 & 1) == 0)
    {
      v1 = (void *)sub_18FA281C8();
      if (v1)
      {
        v7 = v1;
        v8 = objc_msgSend(v1, sel_bundleIdentifier);

        if (v8)
        {
          sub_18FA2833C();

        }
      }
    }
  }
  MEMORY[0x1E0C80A78](v1);
  v4 = v3 + 4;
  os_unfair_lock_lock(v3 + 4);
  sub_18FA0C4E4(&v9);
  v5 = v9;
  os_unfair_lock_unlock(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_18FA09FEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t *v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  char v11;
  void *v12;
  id v13;

  v7 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_containerByBundleIdentifierCache);
  result = swift_beginAccess();
  v9 = *v7;
  if (*(_QWORD *)(v9 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = sub_18F9E01F0(a2, a3);
    if ((v11 & 1) != 0)
    {
      v12 = *(void **)(*(_QWORD *)(v9 + 56) + 8 * v10);
      v13 = v12;
    }
    else
    {
      v12 = 0;
    }
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v12 = 0;
  }
  *a4 = v12;
  return result;
}

id CNContactProviderSupportCache.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CNContactProviderSupportCache();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_18FA0A154()
{
  uint64_t v0;

  return sub_18FA079F8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_18FA0A16C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(*(_QWORD *)(v1 + 16)
                + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_appExtensionIdentityCache);
  swift_beginAccess();
  *a1 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_18FA0A1C0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1810F8);
  v36 = a2;
  v6 = sub_18FA288DC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_18FA28A08();
    sub_18FA28390();
    result = sub_18FA28A14();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_18FA0A4D4(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  int v43;
  char *v44;
  uint64_t v45;

  v3 = v2;
  v45 = sub_18FA281E0();
  v5 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v44 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE17E838);
  v43 = a2;
  v8 = sub_18FA288DC();
  v9 = v8;
  if (*(_QWORD *)(v7 + 16))
  {
    v40 = v2;
    v10 = 1 << *(_BYTE *)(v7 + 32);
    v11 = *(_QWORD *)(v7 + 64);
    v42 = (_QWORD *)(v7 + 64);
    if (v10 < 64)
      v12 = ~(-1 << v10);
    else
      v12 = -1;
    v13 = v12 & v11;
    v41 = (unint64_t)(v10 + 63) >> 6;
    v14 = v8 + 64;
    result = swift_retain();
    v16 = 0;
    while (1)
    {
      if (v13)
      {
        v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v20 = v19 | (v16 << 6);
      }
      else
      {
        v21 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v41)
          goto LABEL_34;
        v22 = v42[v21];
        ++v16;
        if (!v22)
        {
          v16 = v21 + 1;
          if (v21 + 1 >= v41)
            goto LABEL_34;
          v22 = v42[v16];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v41)
            {
LABEL_34:
              swift_release();
              v3 = v40;
              if ((v43 & 1) != 0)
              {
                v38 = 1 << *(_BYTE *)(v7 + 32);
                if (v38 >= 64)
                  bzero(v42, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v42 = -1 << v38;
                *(_QWORD *)(v7 + 16) = 0;
              }
              break;
            }
            v22 = v42[v23];
            if (!v22)
            {
              while (1)
              {
                v16 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v16 >= v41)
                  goto LABEL_34;
                v22 = v42[v16];
                ++v23;
                if (v22)
                  goto LABEL_21;
              }
            }
            v16 = v23;
          }
        }
LABEL_21:
        v13 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v16 << 6);
      }
      v24 = *(_QWORD *)(v7 + 56);
      v25 = v7;
      v26 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v20);
      v28 = *v26;
      v27 = v26[1];
      v29 = *(_QWORD *)(v5 + 72);
      v30 = v24 + v29 * v20;
      if ((v43 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v44, v30, v45);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v44, v30, v45);
        swift_bridgeObjectRetain();
      }
      sub_18FA28A08();
      sub_18FA28390();
      result = sub_18FA28A14();
      v31 = -1 << *(_BYTE *)(v9 + 32);
      v32 = result & ~v31;
      v33 = v32 >> 6;
      if (((-1 << v32) & ~*(_QWORD *)(v14 + 8 * (v32 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v14 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v34 = 0;
        v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v36 = v33 == v35;
          if (v33 == v35)
            v33 = 0;
          v34 |= v36;
          v37 = *(_QWORD *)(v14 + 8 * v33);
        }
        while (v37 == -1);
        v17 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(_QWORD *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v17);
      *v18 = v28;
      v18[1] = v27;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v9 + 56) + v29 * v17, v44, v45);
      ++*(_QWORD *)(v9 + 16);
      v7 = v25;
    }
  }
  result = swift_release();
  *v3 = v9;
  return result;
}

uint64_t sub_18FA0A83C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1810F0);
  v38 = a2;
  v6 = sub_18FA288DC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v36)
        goto LABEL_33;
      v23 = *(_QWORD *)(v37 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v36)
              goto LABEL_33;
            v23 = *(_QWORD *)(v37 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v33 = v32;
    }
    sub_18FA28A08();
    sub_18FA28390();
    result = sub_18FA28A14();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v22 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_18FA0AB48(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EB10);
  v6 = sub_18FA288DC();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_18F9DFD48(v24, v35);
      }
      else
      {
        sub_18F9DFCEC((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_18FA28A08();
      sub_18FA28390();
      result = sub_18FA28A14();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_18F9DFD48(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_18FA0AE44(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  _QWORD *v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1810E8);
  v6 = sub_18FA288DC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v38 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v36 = v2;
  v37 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v18 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_22;
    }
    v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v20 >= v37)
      break;
    v21 = (_QWORD *)(v5 + 64);
    v22 = *(_QWORD *)(v38 + 8 * v20);
    ++v13;
    if (!v22)
    {
      v13 = v20 + 1;
      if (v20 + 1 >= v37)
        goto LABEL_34;
      v22 = *(_QWORD *)(v38 + 8 * v13);
      if (!v22)
      {
        v23 = v20 + 2;
        if (v23 >= v37)
        {
LABEL_34:
          swift_release();
          v3 = v36;
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v22 = *(_QWORD *)(v38 + 8 * v23);
        if (!v22)
        {
          while (1)
          {
            v13 = v23 + 1;
            if (__OFADD__(v23, 1))
              goto LABEL_43;
            if (v13 >= v37)
              goto LABEL_34;
            v22 = *(_QWORD *)(v38 + 8 * v13);
            ++v23;
            if (v22)
              goto LABEL_21;
          }
        }
        v13 = v23;
      }
    }
LABEL_21:
    v10 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_22:
    v24 = *(_QWORD *)(v5 + 48) + 40 * v19;
    if ((a2 & 1) != 0)
    {
      v25 = *(_OWORD *)v24;
      v26 = *(_OWORD *)(v24 + 16);
      v41 = *(_QWORD *)(v24 + 32);
      v39 = v25;
      v40 = v26;
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v19);
    }
    else
    {
      sub_18F9E04D4(v24, (uint64_t)&v39);
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v19);
      swift_bridgeObjectRetain();
    }
    result = sub_18FA28780();
    v28 = -1 << *(_BYTE *)(v7 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v11 + 8 * (v29 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v11 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v11 + 8 * v30);
      }
      while (v34 == -1);
      v14 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = *(_QWORD *)(v7 + 48) + 40 * v14;
    v16 = v39;
    v17 = v40;
    *(_QWORD *)(v15 + 32) = v41;
    *(_OWORD *)v15 = v16;
    *(_OWORD *)(v15 + 16) = v17;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v14) = v27;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v36;
  v21 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v21, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v21 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_18FA0B154(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  int v42;

  v3 = v2;
  v5 = sub_18FA27FB8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EBE0);
  v42 = a2;
  v10 = sub_18FA288DC();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  for (i = v9; ; v9 = i)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_34;
      v24 = v40[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_34:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v39)
              goto LABEL_34;
            v24 = v40[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
      swift_bridgeObjectRetain();
    }
    sub_18F9D727C((unint64_t *)&qword_1EE17EB90, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF790], MEMORY[0x1E0CAF7A8]);
    result = sub_18FA282AC();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_18FA0B4E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_18F9E01F0(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v17 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_18FA0BDDC();
      v11 = v17;
    }
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v11 + 56);
    v13 = sub_18FA281E0();
    v14 = *(_QWORD *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 32))(a3, v12 + *(_QWORD *)(v14 + 72) * v8, v13);
    sub_18FA0B6E4(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, v13);
  }
  else
  {
    v16 = sub_18FA281E0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 1, 1, v16);
  }
}

uint64_t sub_18FA0B618(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_18F9E01F0(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_18FA0C038();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_18FA0B8E0(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_18FA0B6E4(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_18FA2872C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        sub_18FA28A08();
        swift_bridgeObjectRetain();
        sub_18FA28390();
        v9 = sub_18FA28A14();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v10 < v8)
          goto LABEL_11;
LABEL_12:
        v11 = *(_QWORD *)(a2 + 48);
        v12 = (_OWORD *)(v11 + 16 * v3);
        v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1)
          *v12 = *v13;
        v14 = *(_QWORD *)(a2 + 56);
        v15 = *(_QWORD *)(*(_QWORD *)(sub_18FA281E0() - 8) + 72);
        v16 = v15 * v3;
        result = v14 + v15 * v3;
        v17 = v15 * v6;
        v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v16 == v17)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v10 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v10)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_18FA0B8E0(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_18FA2872C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_18FA28A08();
        swift_bridgeObjectRetain();
        sub_18FA28390();
        v9 = sub_18FA28A14();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_18FA0BAB4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_18F9E01F0(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        v20 = sub_18FA281E0();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v12, a1, v20);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_18FA0BDDC();
      goto LABEL_7;
    }
    sub_18FA0A4D4(v15, a4 & 1);
    v22 = sub_18F9E01F0(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      v12 = v22;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_18FA0BD4C(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_18FA289A8();
  __break(1u);
  return result;
}

void sub_18FA0BBF0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_18F9E01F0(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_18FA0C038();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  sub_18FA0A83C(v15, a4 & 1);
  v20 = sub_18F9E01F0(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_18FA289A8();
  __break(1u);
}

uint64_t sub_18FA0BD4C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v8 = (_QWORD *)(a5[6] + 16 * a1);
  *v8 = a2;
  v8[1] = a3;
  v9 = a5[7];
  v10 = sub_18FA281E0();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, a4, v10);
  v12 = a5[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a5[2] = v14;
  return result;
}

void *sub_18FA0BDDC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;

  v34 = sub_18FA281E0();
  v1 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE17E838);
  v31 = v0;
  v4 = *v0;
  v5 = sub_18FA288D0();
  v6 = *(_QWORD *)(v4 + 16);
  v35 = v5;
  if (!v6)
  {
    result = (void *)swift_release();
    v29 = v35;
    v28 = v31;
LABEL_28:
    *v28 = v29;
    return result;
  }
  v7 = v5;
  result = (void *)(v5 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9)
  {
    result = memmove(result, (const void *)(v4 + 64), 8 * v9);
    v7 = v35;
  }
  v32 = v4 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v4 + 16);
  v12 = 1 << *(_BYTE *)(v4 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v4 + 64);
  v33 = (unint64_t)(v12 + 63) >> 6;
  v15 = v34;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v25 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v25);
    ++v11;
    if (!v26)
    {
      v11 = v25 + 1;
      if (v25 + 1 >= v33)
        goto LABEL_26;
      v26 = *(_QWORD *)(v32 + 8 * v11);
      if (!v26)
        break;
    }
LABEL_25:
    v14 = (v26 - 1) & v26;
    v17 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v17);
    v21 = *v19;
    v20 = v19[1];
    v22 = *(_QWORD *)(v1 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(_QWORD *)(v4 + 56) + v22, v15);
    v23 = v35;
    v24 = (_QWORD *)(*(_QWORD *)(v35 + 48) + v18);
    *v24 = v21;
    v24[1] = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(v23 + 56) + v22, v3, v15);
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_26:
    result = (void *)swift_release();
    v28 = v31;
    v29 = v35;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v32 + 8 * v27);
  if (v26)
  {
    v11 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v11 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v11);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_18FA0C038()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1810F0);
  v2 = *v0;
  v3 = sub_18FA288D0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_18FA0C1E8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EB10);
  v2 = *v0;
  v3 = sub_18FA288D0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_18F9DFCEC(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_18F9DFD48(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_18FA0C3CC(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_18FA288B8();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x19400537CLL);
}

uint64_t sub_18FA0C434(unint64_t a1)
{
  return sub_18F9FE258(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_18FA0C448(_QWORD *a1)
{
  return sub_18F9FE56C(0, a1[2], 0, a1);
}

_QWORD *sub_18FA0C45C(_QWORD *a1)
{
  return sub_18F9FE678(0, a1[2], 0, a1);
}

_QWORD *sub_18FA0C470@<X0>(_QWORD *(*a1)(uint64_t *__return_ptr)@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = a1(&v5);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_18FA0C4AC()
{
  uint64_t v0;

  return sub_18FA09BBC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40));
}

void sub_18FA0C4C8()
{
  uint64_t *v0;

  sub_18FA09DEC(v0[2], v0[3], v0[4]);
}

uint64_t sub_18FA0C4E4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  return sub_18FA09FEC(v1[2], v1[3], v1[4], a1);
}

uint64_t type metadata accessor for CNContactProviderSupportCache()
{
  return objc_opt_self();
}

uint64_t method lookup function for CNContactProviderSupportCache()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CNContactProviderSupportCache.cachedBundleIdentifiers.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of CNContactProviderSupportCache.invalidateCache()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of CNContactProviderSupportCache.appExtensionIdentity(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of CNContactProviderSupportCache.appExtensionIdentities()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of CNContactProviderSupportCache.addContainer(_:appExtensionIdentity:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of CNContactProviderSupportCache.removeContainer(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of CNContactProviderSupportCache.container(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x148))();
}

uint64_t sub_18FA0C5F0()
{
  uint64_t v0;

  return sub_18FA08EF8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
}

uint64_t sub_18FA0C614()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_18FA0C640(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_18F9F0E24;
  return sub_18FA07CE0(a1, v4, v5, v6);
}

uint64_t sub_18FA0C6AC()
{
  return sub_18FA0A154();
}

id sub_18FA0C6C0()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v1 = (void *)sub_18FA28330();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

void sub_18FA0C728(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v3 = objc_msgSend(*a1, sel_posterData);
  if (v3)
  {
    v4 = v3;
    v5 = sub_18FA280A8();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0xF000000000000000;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_18FA0C78C(uint64_t a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*(_QWORD *)(a1 + 8) >> 60 == 15)
    v3 = 0;
  else
    v3 = sub_18FA28090();
  v4 = (id)v3;
  objc_msgSend(v2, sel_setPosterData_);

}

id CNDuplicateSetContactPoster.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id CNDuplicateSetContactPoster.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for CNDuplicateSetContactPoster();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for CNDuplicateSetContactPoster()
{
  return objc_opt_self();
}

id CNDuplicateSetContactPoster.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CNDuplicateSetContactPoster();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_18FA0C948@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for CNDuplicateSetContactPoster();
  result = sub_18FA287EC();
  *a1 = result;
  return result;
}

char *keypath_get_selector_duplicateSet()
{
  return sel_duplicateSet;
}

id sub_18FA0C998@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_duplicateSet);
  *a2 = result;
  return result;
}

id sub_18FA0C9D0(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setDuplicateSet_, *a1);
}

uint64_t method lookup function for CNDuplicateSetContactPoster()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of static CNDuplicateSetContactPoster.fetchRequest()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

void CNContact.id.getter()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, sel_identifier);
  if (!v1)
  {
    sub_18FA2833C();
    v1 = (id)sub_18FA28330();
    swift_bridgeObjectRelease();
  }
  v2 = objc_msgSend((id)objc_opt_self(), sel_uuidFromContactIdentifier_, v1);

  sub_18FA280F0();
}

unint64_t sub_18FA0CB9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE181100;
  if (!qword_1EE181100)
  {
    v1 = sub_18FA28108();
    result = MEMORY[0x194006D14](MEMORY[0x1E0CB09C8], v1);
    atomic_store(result, (unint64_t *)&qword_1EE181100);
  }
  return result;
}

void sub_18FA0CBE4()
{
  id *v0;
  id v1;

  v1 = objc_msgSend(*v0, "id");
  sub_18FA280F0();

}

void sub_18FA0CC30()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  unint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;

  v0 = sub_18F9D8104();
  if (!v0)
    goto LABEL_11;
  v1 = v0;
  v2 = objc_msgSend(v0, sel_persistentStoreCoordinator);

  if (!v2)
    goto LABEL_11;
  v3 = objc_msgSend(v2, sel_persistentStores);
  sub_18FA0DD24();
  v4 = sub_18FA28444();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_18FA288B8();
    swift_bridgeObjectRelease();
    if (v8)
      goto LABEL_5;
    goto LABEL_10;
  }
  if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_10:

    swift_bridgeObjectRelease();
LABEL_11:
    if (qword_1EE17EA90 != -1)
      swift_once();
    v9 = sub_18FA28204();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EE1835A0);
    v10 = sub_18FA281EC();
    v11 = sub_18FA28648();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_18F8BD000, v10, v11, "Missing persistent store when fetching metadata for ManagedDuplicateStore", v12, 2u);
      MEMORY[0x194006DBC](v12, -1, -1);
    }

    sub_18FA13D08(MEMORY[0x1E0DEE9D8]);
    return;
  }
LABEL_5:
  if ((v4 & 0xC000000000000001) != 0)
  {
    v5 = (id)MEMORY[0x194005370](0, v4);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = *(id *)(v4 + 32);
LABEL_8:
    v6 = v5;
    swift_bridgeObjectRelease();
    v7 = objc_msgSend(v2, sel_metadataForPersistentStore_, v6);
    sub_18FA28270();

    return;
  }
  __break(1u);
}

void sub_18FA0CE54()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  unint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  NSObject *oslog;

  v0 = sub_18F9D8104();
  if (!v0)
    goto LABEL_9;
  v1 = v0;
  v2 = objc_msgSend(v0, sel_persistentStoreCoordinator);

  if (!v2)
    goto LABEL_9;
  v3 = objc_msgSend(v2, sel_persistentStores);
  sub_18FA0DD24();
  v4 = sub_18FA28444();

  if (!(v4 >> 62))
  {
    if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  v10 = sub_18FA288B8();
  swift_bridgeObjectRelease();
  if (!v10)
  {
LABEL_15:
    swift_bridgeObjectRelease();

LABEL_9:
    swift_bridgeObjectRelease();
    if (qword_1EE17EA90 != -1)
      swift_once();
    v7 = sub_18FA28204();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EE1835A0);
    oslog = sub_18FA281EC();
    v8 = sub_18FA28648();
    if (os_log_type_enabled(oslog, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_18F8BD000, oslog, v8, "Missing persistent store when setting metadata for ManagedDuplicateStore", v9, 2u);
      MEMORY[0x194006DBC](v9, -1, -1);
    }
    goto LABEL_13;
  }
LABEL_5:
  if ((v4 & 0xC000000000000001) != 0)
  {
    v5 = (id)MEMORY[0x194005370](0, v4);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = *(id *)(v4 + 32);
LABEL_8:
    v6 = v5;
    swift_bridgeObjectRelease();
    oslog = sub_18FA28264();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setMetadata_forPersistentStore_, oslog, v6);

LABEL_13:
    return;
  }
  __break(1u);
}

void sub_18FA0D07C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_18FA0CC30();
    v3 = v2;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v5 = v3;
    sub_18FA0D9D0(a1, (uint64_t)sub_18FA0D990, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v5);
    swift_bridgeObjectRelease();
    sub_18FA0CE54();
  }
}

uint64_t ManagedDuplicateStore.currentToken.getter()
{
  return sub_18FA0D13C(0);
}

uint64_t ManagedDuplicateStore.currentToken.setter(uint64_t a1, uint64_t a2)
{
  return sub_18FA0D370(a1, a2, 0x54746E6572727563);
}

uint64_t sub_18FA0D13C(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v8;
  __int128 v9;
  __int128 v10;

  sub_18FA0CC30();
  v3 = v2;
  if (!*(_QWORD *)(v2 + 16)
    || ((a1 & 1) != 0 ? (v4 = 0x54676E69646E6570) : (v4 = 0x54746E6572727563),
        v5 = sub_18F9E01F0(v4, 0xEC0000006E656B6FLL),
        (v6 & 1) == 0))
  {
    v9 = 0u;
    v10 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_18F9DFCEC(*(_QWORD *)(v3 + 56) + 32 * v5, (uint64_t)&v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v10 + 1))
  {
LABEL_10:
    sub_18F9DFD58((uint64_t)&v9, &qword_1EE17EB58);
    return 0;
  }
  if (swift_dynamicCast())
    return v8;
  return 0;
}

void (*ManagedDuplicateStore.currentToken.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0xB8uLL);
  *a1 = v3;
  v3[22] = v1;
  v3[20] = sub_18FA0D13C(0);
  v3[21] = v4;
  return sub_18FA0D294;
}

void sub_18FA0D294(uint64_t a1, char a2)
{
  sub_18FA0D47C(a1, a2, 0x54746E6572727563);
}

uint64_t ManagedDuplicateStore.pendingToken.getter()
{
  return sub_18FA0D13C(1);
}

uint64_t sub_18FA0D2B0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  unint64_t v9;

  v7 = *a1;
  v6 = a1[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EB20);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FA40F90;
  *(_QWORD *)(inited + 32) = a5;
  *(_QWORD *)(inited + 40) = 0xEC0000006E656B6FLL;
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v7;
  *(_QWORD *)(inited + 56) = v6;
  swift_bridgeObjectRetain_n();
  v9 = sub_18FA13D08(inited);
  sub_18FA0D07C(v9);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t ManagedDuplicateStore.pendingToken.setter(uint64_t a1, uint64_t a2)
{
  return sub_18FA0D370(a1, a2, 0x54676E69646E6570);
}

uint64_t sub_18FA0D370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t inited;
  unint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EB20);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FA40F90;
  *(_QWORD *)(inited + 32) = a3;
  *(_QWORD *)(inited + 40) = 0xEC0000006E656B6FLL;
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = a1;
  *(_QWORD *)(inited + 56) = a2;
  swift_bridgeObjectRetain();
  v7 = sub_18FA13D08(inited);
  sub_18FA0D07C(v7);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void (*ManagedDuplicateStore.pendingToken.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0xB8uLL);
  *a1 = v3;
  v3[22] = v1;
  v3[20] = sub_18FA0D13C(1);
  v3[21] = v4;
  return sub_18FA0D468;
}

void sub_18FA0D468(uint64_t a1, char a2)
{
  sub_18FA0D47C(a1, a2, 0x54676E69646E6570);
}

void sub_18FA0D47C(uint64_t a1, char a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v5 = *(void **)a1;
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 160);
  v7 = *(_QWORD *)(*(_QWORD *)a1 + 168);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EB20);
  if ((a2 & 1) != 0)
  {
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_18FA40F90;
    *(_QWORD *)(inited + 32) = a3;
    *(_QWORD *)(inited + 40) = 0xEC0000006E656B6FLL;
    *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 48) = v6;
    *(_QWORD *)(inited + 56) = v7;
    swift_bridgeObjectRetain_n();
    v9 = sub_18FA13D08(inited);
    sub_18FA0D07C(v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = swift_initStackObject();
    *(_OWORD *)(v10 + 16) = xmmword_18FA40F90;
    *(_QWORD *)(v10 + 32) = a3;
    *(_QWORD *)(v10 + 40) = 0xEC0000006E656B6FLL;
    *(_QWORD *)(v10 + 72) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v10 + 48) = v6;
    *(_QWORD *)(v10 + 56) = v7;
    swift_bridgeObjectRetain();
    v11 = sub_18FA13D08(v10);
    sub_18FA0D07C(v11);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  free(v5);
}

Swift::Bool __swiftcall ManagedDuplicateStore.needsRefresh(token:)(Swift::String token)
{
  void *object;
  uint64_t countAndFlagsBits;
  void *v3;
  char v4;
  char v5;
  void *v6;
  char v7;

  object = token._object;
  countAndFlagsBits = token._countAndFlagsBits;
  if (sub_18FA0D13C(0) != token._countAndFlagsBits || v3 != object)
  {
    v5 = sub_18FA2896C();
    swift_bridgeObjectRelease();
    v4 = 0;
    if ((v5 & 1) != 0)
      return v4 & 1;
    if (sub_18FA0D13C(1) != countAndFlagsBits || v6 != object)
    {
      v7 = sub_18FA2896C();
      swift_bridgeObjectRelease();
      v4 = v7 ^ 1;
      return v4 & 1;
    }
  }
  swift_bridgeObjectRelease();
  v4 = 0;
  return v4 & 1;
}

Swift::Bool __swiftcall ManagedDuplicateStore.willRefresh(token:)(Swift::String token)
{
  void *object;
  uint64_t countAndFlagsBits;
  void *v3;
  Swift::Bool result;
  char v5;
  void *v6;
  char v7;
  uint64_t inited;
  unint64_t v9;

  object = token._object;
  countAndFlagsBits = token._countAndFlagsBits;
  if (sub_18FA0D13C(0) == token._countAndFlagsBits && v3 == object)
    goto LABEL_3;
  v5 = sub_18FA2896C();
  swift_bridgeObjectRelease();
  result = 0;
  if ((v5 & 1) == 0)
  {
    if (sub_18FA0D13C(1) == countAndFlagsBits && v6 == object)
    {
LABEL_3:
      swift_bridgeObjectRelease();
      return 0;
    }
    v7 = sub_18FA2896C();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v7 & 1) == 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EB20);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_18FA40F90;
      strcpy((char *)(inited + 32), "pendingToken");
      *(_BYTE *)(inited + 45) = 0;
      *(_WORD *)(inited + 46) = -5120;
      *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(inited + 48) = countAndFlagsBits;
      *(_QWORD *)(inited + 56) = object;
      swift_bridgeObjectRetain_n();
      v9 = sub_18FA13D08(inited);
      sub_18FA0D07C(v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 1;
    }
  }
  return result;
}

Swift::Void __swiftcall ManagedDuplicateStore.didRefresh(token:success:)(Swift::String token, Swift::Bool success)
{
  void *object;
  uint64_t countAndFlagsBits;
  void *v5;
  char v7;
  uint64_t inited;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  object = token._object;
  countAndFlagsBits = token._countAndFlagsBits;
  if (sub_18FA0D13C(1) == token._countAndFlagsBits && v5 == object)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = sub_18FA2896C();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
      return;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EB20);
  if (success)
  {
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_18FA40F90;
    strcpy((char *)(inited + 32), "currentToken");
    *(_BYTE *)(inited + 45) = 0;
    *(_WORD *)(inited + 46) = -5120;
    *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 48) = countAndFlagsBits;
    *(_QWORD *)(inited + 56) = object;
    swift_bridgeObjectRetain_n();
    v9 = sub_18FA13D08(inited);
    sub_18FA0D07C(v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = swift_initStackObject();
    *(_OWORD *)(v10 + 16) = xmmword_18FA40F90;
    strcpy((char *)(v10 + 32), "pendingToken");
    *(_BYTE *)(v10 + 45) = 0;
    *(_WORD *)(v10 + 46) = -5120;
    *(_QWORD *)(v10 + 72) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v10 + 48) = 0;
    *(_QWORD *)(v10 + 56) = 0xE000000000000000;
    v11 = sub_18FA13D08(v10);
    sub_18FA0D07C(v11);
  }
  swift_bridgeObjectRelease();
}

uint64_t sub_18FA0D90C@<X0>(uint64_t *a1@<X8>)
{
  return keypath_getTm_0(0, a1);
}

uint64_t sub_18FA0D914(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18FA0D2B0(a1, a2, a3, a4, 0x54746E6572727563);
}

uint64_t sub_18FA0D938@<X0>(uint64_t *a1@<X8>)
{
  return keypath_getTm_0(1, a1);
}

uint64_t keypath_getTm_0@<X0>(char a1@<W3>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = sub_18FA0D13C(a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_18FA0D96C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18FA0D2B0(a1, a2, a3, a4, 0x54676E69646E6570);
}

uint64_t sub_18FA0D990@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v4 = *a1;
  v3 = a1[1];
  sub_18F9DFCEC((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
  *a2 = v4;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_18FA0D9D0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  char v22;
  _OWORD *v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t i;
  _OWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  char v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  _OWORD v46[2];
  _OWORD v47[2];
  __int128 v48;
  _OWORD v49[2];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v7 = -1 << *(_BYTE *)(a1 + 32);
  v8 = ~v7;
  v9 = *(_QWORD *)(a1 + 64);
  v10 = -v7;
  v50 = a1;
  v51 = a1 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v52 = v8;
  v53 = 0;
  v54 = v11 & v9;
  v55 = a2;
  v56 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_18FA0DD60(&v48);
  v12 = *((_QWORD *)&v48 + 1);
  if (!*((_QWORD *)&v48 + 1))
    goto LABEL_27;
  v13 = v48;
  sub_18F9DFD48(v49, v47);
  v14 = *(_QWORD **)a5;
  v16 = sub_18F9E01F0(v13, v12);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v20 = v15;
  if (v14[3] >= v19)
  {
    if ((a4 & 1) != 0)
    {
      if ((v15 & 1) != 0)
        goto LABEL_12;
    }
    else
    {
      sub_18FA0C1E8();
      if ((v20 & 1) != 0)
        goto LABEL_12;
    }
LABEL_14:
    v24 = *(_QWORD **)a5;
    *(_QWORD *)(*(_QWORD *)a5 + 8 * (v16 >> 6) + 64) |= 1 << v16;
    v25 = (uint64_t *)(v24[6] + 16 * v16);
    *v25 = v13;
    v25[1] = v12;
    sub_18F9DFD48(v47, (_OWORD *)(v24[7] + 32 * v16));
    v26 = v24[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v24[2] = v28;
LABEL_16:
    sub_18FA0DD60(&v48);
    for (i = *((_QWORD *)&v48 + 1); *((_QWORD *)&v48 + 1); i = *((_QWORD *)&v48 + 1))
    {
      v31 = v48;
      sub_18F9DFD48(v49, v47);
      v32 = *(_QWORD **)a5;
      v34 = sub_18F9E01F0(v31, i);
      v35 = v32[2];
      v36 = (v33 & 1) == 0;
      v37 = v35 + v36;
      if (__OFADD__(v35, v36))
        goto LABEL_28;
      v38 = v33;
      if (v32[3] < v37)
      {
        sub_18FA0AB48(v37, 1);
        v39 = sub_18F9E01F0(v31, i);
        if ((v38 & 1) != (v40 & 1))
          goto LABEL_30;
        v34 = v39;
      }
      if ((v38 & 1) != 0)
      {
        sub_18F9DFCEC((uint64_t)v47, (uint64_t)v46);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
        swift_bridgeObjectRelease();
        v30 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)a5 + 56) + 32 * v34);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);
        sub_18F9DFD48(v46, v30);
      }
      else
      {
        v41 = *(_QWORD **)a5;
        *(_QWORD *)(*(_QWORD *)a5 + 8 * (v34 >> 6) + 64) |= 1 << v34;
        v42 = (uint64_t *)(v41[6] + 16 * v34);
        *v42 = v31;
        v42[1] = i;
        sub_18F9DFD48(v47, (_OWORD *)(v41[7] + 32 * v34));
        v43 = v41[2];
        v27 = __OFADD__(v43, 1);
        v44 = v43 + 1;
        if (v27)
          goto LABEL_29;
        v41[2] = v44;
      }
      sub_18FA0DD60(&v48);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_18F9DFFC4();
    return swift_release();
  }
  sub_18FA0AB48(v19, a4 & 1);
  v21 = sub_18F9E01F0(v13, v12);
  if ((v20 & 1) == (v22 & 1))
  {
    v16 = v21;
    if ((v20 & 1) == 0)
      goto LABEL_14;
LABEL_12:
    sub_18F9DFCEC((uint64_t)v47, (uint64_t)v46);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
    swift_bridgeObjectRelease();
    v23 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)a5 + 56) + 32 * v16);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
    sub_18F9DFD48(v46, v23);
    goto LABEL_16;
  }
LABEL_30:
  result = sub_18FA289A8();
  __break(1u);
  return result;
}

unint64_t sub_18FA0DD24()
{
  unint64_t result;

  result = qword_1EE17EAE8;
  if (!qword_1EE17EAE8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE17EAE8);
  }
  return result;
}

uint64_t sub_18FA0DD60@<X0>(_OWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  void (*v19)(_OWORD *);
  uint64_t result;
  _OWORD v21[3];
  _OWORD v22[3];
  __int128 v23;
  _OWORD v24[2];

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v7 = v5;
  v8 = v1[4];
  if (v8)
  {
    v9 = (v8 - 1) & v8;
    v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    v11 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v10);
    v13 = *v11;
    v12 = v11[1];
    sub_18F9DFCEC(*(_QWORD *)(v3 + 56) + 32 * v10, (uint64_t)v24);
    *(_QWORD *)&v23 = v13;
    *((_QWORD *)&v23 + 1) = v12;
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  v14 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  v15 = (unint64_t)(v6 + 64) >> 6;
  if (v14 < v15)
  {
    v16 = *(_QWORD *)(v4 + 8 * v14);
    if (v16)
    {
LABEL_7:
      v9 = (v16 - 1) & v16;
      v10 = __clz(__rbit64(v16)) + (v14 << 6);
      v7 = v14;
      goto LABEL_3;
    }
    v17 = v5 + 2;
    v7 = v5 + 1;
    if (v5 + 2 < v15)
    {
      v16 = *(_QWORD *)(v4 + 8 * v17);
      if (v16)
      {
LABEL_10:
        v14 = v17;
        goto LABEL_7;
      }
      v7 = v5 + 2;
      if (v5 + 3 < v15)
      {
        v16 = *(_QWORD *)(v4 + 8 * (v5 + 3));
        if (v16)
        {
          v14 = v5 + 3;
          goto LABEL_7;
        }
        v17 = v5 + 4;
        v7 = v5 + 3;
        if (v5 + 4 < v15)
        {
          v16 = *(_QWORD *)(v4 + 8 * v17);
          if (v16)
            goto LABEL_10;
          v14 = v5 + 5;
          v7 = v5 + 4;
          if (v5 + 5 < v15)
          {
            v16 = *(_QWORD *)(v4 + 8 * v14);
            if (v16)
              goto LABEL_7;
            v7 = v15 - 1;
            v18 = v5 + 6;
            while (v15 != v18)
            {
              v16 = *(_QWORD *)(v4 + 8 * v18++);
              if (v16)
              {
                v14 = v18 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  v9 = 0;
  memset(v24, 0, sizeof(v24));
  v23 = 0u;
LABEL_23:
  *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  v19 = (void (*)(_OWORD *))v1[5];
  result = sub_18FA0DF3C((uint64_t)&v23, (uint64_t)v22);
  if (*((_QWORD *)&v22[0] + 1))
  {
    v21[0] = v22[0];
    v21[1] = v22[1];
    v21[2] = v22[2];
    v19(v21);
    return sub_18F9DFD58((uint64_t)v21, &qword_1EE17EAA0);
  }
  else
  {
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
  return result;
}

uint64_t sub_18FA0DF3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EAA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_18FA0DF84(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_18FA288B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_18FA288B8();
    swift_bridgeObjectRelease();
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_23;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = MEMORY[0x19400537C](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_18FA0FD08(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v9 = sub_18FA288B8();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_18FA2845C();
  }
  __break(1u);
  return result;
}

uint64_t sub_18FA0E13C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_18F9FDE14(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[4 * v8 + 4];
  if (a1 + 32 < v9 + 32 * v2 && v9 < a1 + 32 + 32 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_18FA288F4();
  __break(1u);
  return result;
}

uint64_t sub_18FA0E290(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_18FA288B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_18FA288B8();
    swift_bridgeObjectRelease();
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_23;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = MEMORY[0x19400537C](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_18FA0FF1C(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v9 = sub_18FA288B8();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_18FA2845C();
  }
  __break(1u);
  return result;
}

uint64_t sub_18FA0E448(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_18F9FDF20(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[v9 + 4];
  if (a1 + 32 < v10 + 8 * v8 && v10 < a1 + 32 + 8 * v8)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EAC8);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_18FA288F4();
  __break(1u);
  return result;
}

uint64_t sub_18FA0E5B4(unint64_t a1)
{
  return sub_18FA0E71C(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_18FA10124);
}

uint64_t sub_18FA0E5C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_18F9FDF34(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_18FA288F4();
  __break(1u);
  return result;
}

uint64_t sub_18FA0E710(unint64_t a1)
{
  return sub_18FA0E71C(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_18FA10338);
}

uint64_t sub_18FA0E71C(unint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, unint64_t))
{
  unint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_18FA288B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_18FA288B8();
    swift_bridgeObjectRelease();
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_23;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if (v6 >> 62)
    goto LABEL_25;
  v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    swift_bridgeObjectRetain();
    v6 = MEMORY[0x19400537C](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v11 = sub_18FA288B8();
    swift_bridgeObjectRelease();
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_18FA2845C();
  }
  __break(1u);
  return result;
}

id CNContactStore.contacts(request:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  id v3;

  *(_QWORD *)a2 = v2;
  *(_QWORD *)(a2 + 8) = a1;
  *(_QWORD *)(a2 + 16) = MEMORY[0x1E0DEE9D8];
  *(_BYTE *)(a2 + 24) = 0;
  v3 = v2;
  return a1;
}

void __swiftcall CNContactStore.FetchedContactsSequence.next()(CNContact_optional *__return_ptr retstr)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if ((*(_BYTE *)(v1 + 24) & 1) == 0)
    sub_18FA0EA3C();
  v2 = *(_QWORD *)(v1 + 16);
  v3 = v2 >> 62;
  if (!(v2 >> 62))
  {
    if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  v5 = sub_18FA288B8();
  swift_bridgeObjectRelease();
  if (v5)
  {
    swift_bridgeObjectRetain();
    v6 = sub_18FA288B8();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_5:
      if ((v2 & 0xC000000000000001) == 0)
      {
        if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_18:
          __break(1u);
          goto LABEL_19;
        }
        *(id *)(v2 + 32);
        if (!v3)
          goto LABEL_8;
        goto LABEL_14;
      }
LABEL_13:
      MEMORY[0x194005370](0, v2);
      if (!v3)
      {
LABEL_8:
        v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_15;
      }
LABEL_14:
      swift_bridgeObjectRetain();
      v4 = sub_18FA288B8();
      swift_bridgeObjectRelease();
LABEL_15:
      if (v4)
      {
        sub_18FA1054C(0, 1);
        return;
      }
      goto LABEL_18;
    }
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
LABEL_19:
  __break(1u);
}

uint64_t sub_18FA0EA3C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  unsigned int v7;
  id v8;
  void *v9;
  unint64_t v10;
  id aBlock[6];
  _QWORD v13[2];

  v1 = v0;
  v13[1] = *MEMORY[0x1E0C80C00];
  v13[0] = MEMORY[0x1E0DEE9D8];
  v2 = *(void **)v0;
  v3 = *(_QWORD *)(v0 + 8);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v13;
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = sub_18FA10EE8;
  v5[3] = v4;
  aBlock[4] = sub_18F9E0070;
  aBlock[5] = v5;
  aBlock[0] = (id)MEMORY[0x1E0C809B0];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_18FA0ED98;
  aBlock[3] = &block_descriptor_25;
  v6 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  v7 = objc_msgSend(v2, sel_enumerateContactsWithFetchRequest_error_usingBlock_, v3, aBlock, v6);
  _Block_release(v6);
  v8 = aBlock[0];
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v6 & 1) != 0)
    __break(1u);
  if (!v7)
  {
    v9 = (void *)sub_18FA28030();

    swift_willThrow();
  }
  v10 = swift_bridgeObjectRetain();
  sub_18FA0DF84(v10);
  *(_BYTE *)(v1 + 24) = 1;
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_18FA0EC0C()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;
  v2 = (unint64_t)*v0 >> 62;
  if (!v2)
  {
    if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  v4 = sub_18FA288B8();
  swift_bridgeObjectRelease();
  if (v4)
  {
    swift_bridgeObjectRetain();
    v5 = sub_18FA288B8();
    swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      if ((v1 & 0xC000000000000001) == 0)
      {
        if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_16:
          __break(1u);
          goto LABEL_17;
        }
        *(id *)(v1 + 32);
        if (!v2)
          goto LABEL_6;
        goto LABEL_12;
      }
LABEL_11:
      MEMORY[0x194005370](0, v1);
      if (!v2)
      {
LABEL_6:
        v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_13;
      }
LABEL_12:
      swift_bridgeObjectRetain();
      v3 = sub_18FA288B8();
      swift_bridgeObjectRelease();
LABEL_13:
      if (v3)
      {
        sub_18FA1054C(0, 1);
        return;
      }
      goto LABEL_16;
    }
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
LABEL_17:
  __break(1u);
}

uint64_t sub_18FA0ED2C(void *a1, uint64_t a2, _QWORD *a3)
{
  id v4;

  v4 = a1;
  MEMORY[0x194004F98]();
  if (*(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_18FA28474();
  sub_18FA284BC();
  return sub_18FA2845C();
}

void sub_18FA0ED98(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

uint64_t CNContactStore.FetchedContactsSequence.first.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  char v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v9;

  v1 = *(void **)v0;
  v2 = *(void **)(v0 + 8);
  v3 = *(_BYTE *)(v0 + 24);
  v9 = v1;
  v4 = v1;
  v5 = v2;
  swift_bridgeObjectRetain();
  if ((v3 & 1) == 0)
    sub_18FA0EA3C();
  sub_18FA0EC0C();
  v7 = v6;
  swift_bridgeObjectRelease();

  return v7;
}

__n128 sub_18FA0EE64@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  unint64_t v2;
  unsigned __int8 v3;
  __n128 result;

  v2 = v1[1].n128_u64[0];
  v3 = v1[1].n128_u8[8];
  result = *v1;
  *a1 = *v1;
  a1[1].n128_u64[0] = v2;
  a1[1].n128_u8[8] = v3;
  return result;
}

uint64_t sub_18FA0EE80()
{
  return 0;
}

uint64_t sub_18FA0EE88()
{
  return 2;
}

id sub_18FA0EE90()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *(void **)v0;
  v2 = *(void **)(v0 + 8);
  v3 = sub_18FA0F110(*(void **)v0, v2, *(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
  swift_bridgeObjectRelease();

  return v3;
}

uint64_t sub_18FA0EEE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_18FA0F4B0(a1, a2, a3, *(void **)v3, *(_QWORD *)(v3 + 8), *(_QWORD *)(v3 + 16), *(_BYTE *)(v3 + 24));
}

uint64_t sub_18FA0EEF4()
{
  return sub_18FA283D8();
}

void sub_18FA0EF14(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  if ((*(_BYTE *)(v1 + 24) & 1) == 0)
    sub_18FA0EA3C();
  sub_18FA0EC0C();
  *a1 = v3;
}

uint64_t sub_18FA0EF48(uint64_t a1, int64_t a2, uint64_t a3)
{
  unint64_t *v3;
  unint64_t v5;
  int64_t v6;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  int isUniquelyReferenced_nonNull_native;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t result;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > *(_QWORD *)(v5 + 24) >> 1)
  {
    if (v6 <= v10)
      v13 = v6 + v9;
    else
      v13 = v6;
    v5 = sub_18F9FE258(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *v3 = v5;
  }
  v14 = sub_18FA281E0();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = v5 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v17 = *(_QWORD *)(v15 + 72);
  v18 = v16 + v17 * a1;
  swift_arrayDestroy();
  if (!v9)
    goto LABEL_25;
  v19 = *(_QWORD *)(v5 + 16);
  v20 = v19 - a2;
  if (__OFSUB__(v19, a2))
    goto LABEL_33;
  if (v20 < 0)
  {
LABEL_35:
    result = sub_18FA288F4();
    __break(1u);
    return result;
  }
  v21 = v18 + v17;
  v22 = v16 + v17 * a2;
  if (v18 + v17 < v22 || v21 >= v22 + v20 * v17)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v21 != v22)
  {
    swift_arrayInitWithTakeBackToFront();
  }
  v24 = *(_QWORD *)(v5 + 16);
  v25 = __OFADD__(v24, v9);
  v26 = v24 + v9;
  if (v25)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(_QWORD *)(v5 + 16) = v26;
LABEL_25:
  if (v17 >= 1)
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v15 + 16))(v18, a3, v14);
  return sub_18FA10A94(a3);
}

id sub_18FA0F110(void *a1, void *a2, unint64_t a3, char a4)
{
  id v6;
  id v7;
  id result;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  unsigned __int8 v17;
  id v18;
  void *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  _QWORD *v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  const void *v36;
  id aBlock[6];
  uint64_t v39;
  void *v40;
  void *v41;
  unint64_t v42;
  char v43;

  v40 = a1;
  v41 = a2;
  v42 = a3;
  v43 = a4;
  v6 = a1;
  v7 = a2;
  result = (id)swift_bridgeObjectRetain();
  v9 = 0;
  v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v11 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
  if ((a4 & 1) != 0)
    goto LABEL_6;
  v39 = MEMORY[0x1E0DEE9D8];
  v12 = v40;
  v13 = v41;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = &v39;
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = sub_18FA10EE8;
  v15[3] = v14;
  aBlock[4] = sub_18F9E0070;
  aBlock[5] = v15;
  aBlock[0] = (id)MEMORY[0x1E0C809B0];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_18FA0ED98;
  aBlock[3] = &block_descriptor_14;
  v16 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  v17 = objc_msgSend(v12, sel_enumerateContactsWithFetchRequest_error_usingBlock_, v13, aBlock, v16);
  _Block_release(v16);
  v18 = aBlock[0];
  LOBYTE(v16) = swift_isEscapingClosureAtFileLocation();
  result = (id)swift_release();
  if ((v16 & 1) != 0)
    goto LABEL_37;
  if ((v17 & 1) == 0)
  {
    v19 = (void *)sub_18FA28030();

    swift_willThrow();
  }
  v20 = swift_bridgeObjectRetain();
  sub_18FA0DF84(v20);
  v43 = 1;
  swift_release();
  result = (id)swift_bridgeObjectRelease();
LABEL_6:
  while (1)
  {
    v21 = v42;
    v22 = v42 >> 62;
    if (!(v42 >> 62))
      break;
    swift_bridgeObjectRetain();
    v24 = sub_18FA288B8();
    result = (id)swift_bridgeObjectRelease();
    if (!v24)
      goto LABEL_40;
    swift_bridgeObjectRetain();
    v25 = sub_18FA288B8();
    result = (id)swift_bridgeObjectRelease();
    if (!v25)
      goto LABEL_34;
LABEL_8:
    if ((v21 & 0xC000000000000001) != 0)
    {
      result = (id)MEMORY[0x194005370](0, v21);
      v23 = result;
      if (!v22)
        goto LABEL_11;
    }
    else
    {
      if (!*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_35;
      result = *(id *)(v21 + 32);
      v23 = result;
      if (!v22)
      {
LABEL_11:
        if (!*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_38;
        goto LABEL_18;
      }
    }
    swift_bridgeObjectRetain();
    v26 = sub_18FA288B8();
    result = (id)swift_bridgeObjectRelease();
    if (!v26)
      goto LABEL_38;
LABEL_18:
    result = (id)sub_18FA1054C(0, 1);
    if (!v9)
    {
      v27 = v10[3];
      if ((uint64_t)((v27 >> 1) + 0x4000000000000000) < 0)
        goto LABEL_39;
      v28 = v27 & 0xFFFFFFFFFFFFFFFELL;
      if (v28 <= 1)
        v29 = 1;
      else
        v29 = v28;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EB50);
      v30 = (_QWORD *)swift_allocObject();
      v31 = _swift_stdlib_malloc_size(v30);
      v32 = v31 - 32;
      if (v31 < 32)
        v32 = v31 - 25;
      v33 = v32 >> 3;
      v30[2] = v29;
      v30[3] = (2 * (v32 >> 3)) | 1;
      v34 = (unint64_t)(v30 + 4);
      v35 = v10[3] >> 1;
      if (v10[2])
      {
        v36 = v10 + 4;
        if (v30 != v10 || v34 >= (unint64_t)v36 + 8 * v35)
          memmove(v30 + 4, v36, 8 * v35);
        v10[2] = 0;
      }
      v11 = (_QWORD *)(v34 + 8 * v35);
      v9 = (v33 & 0x7FFFFFFFFFFFFFFFLL) - v35;
      result = (id)swift_release();
      v10 = v30;
    }
    if (__OFSUB__(v9--, 1))
      goto LABEL_36;
    *v11++ = v23;
  }
  if (*(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_8;
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_18FA0F4B0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, unint64_t a6, char a7)
{
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  unsigned __int8 v17;
  id v18;
  char isEscapingClosureAtFileLocation;
  void *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  id aBlock[6];
  uint64_t v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v32 = a4;
  v33 = a5;
  v34 = a6;
  v7 = a7 & 1;
  v35 = a7;
  if (!a2)
  {
    v8 = 0;
    goto LABEL_25;
  }
  v8 = a3;
  if (a3)
  {
    if (a3 < 0)
      goto LABEL_31;
    v9 = a7;
    v29 = a1;
    v11 = 0;
    while (1)
    {
      if ((v9 & 1) == 0)
      {
        v31 = MEMORY[0x1E0DEE9D8];
        v12 = v32;
        v13 = v33;
        v14 = swift_allocObject();
        *(_QWORD *)(v14 + 16) = &v31;
        v15 = (_QWORD *)swift_allocObject();
        v15[2] = sub_18FA10AE4;
        v15[3] = v14;
        aBlock[4] = sub_18F9DE0DC;
        aBlock[5] = v15;
        aBlock[0] = (id)MEMORY[0x1E0C809B0];
        aBlock[1] = (id)1107296256;
        aBlock[2] = sub_18FA0ED98;
        aBlock[3] = &block_descriptor_1;
        v16 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        aBlock[0] = 0;
        v17 = objc_msgSend(v12, sel_enumerateContactsWithFetchRequest_error_usingBlock_, v13, aBlock, v16);
        _Block_release(v16);
        v18 = aBlock[0];
        isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if ((isEscapingClosureAtFileLocation & 1) != 0)
          goto LABEL_29;
        if ((v17 & 1) == 0)
        {
          v20 = (void *)sub_18FA28030();

          swift_willThrow();
        }
        v21 = swift_bridgeObjectRetain();
        sub_18FA0DF84(v21);
        v35 = 1;
        swift_release();
        swift_bridgeObjectRelease();
      }
      v22 = v34;
      v23 = v34 >> 62;
      if (v34 >> 62)
      {
        swift_bridgeObjectRetain();
        v26 = sub_18FA288B8();
        swift_bridgeObjectRelease();
        if (!v26)
          goto LABEL_32;
        swift_bridgeObjectRetain();
        v27 = sub_18FA288B8();
        swift_bridgeObjectRelease();
        if (!v27)
          goto LABEL_27;
      }
      else if (!*(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
      }
      if ((v22 & 0xC000000000000001) != 0)
      {
        v24 = (id)MEMORY[0x194005370](0, v22);
        if (v23)
          goto LABEL_20;
      }
      else
      {
        if (!*(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_28;
        v24 = *(id *)(v22 + 32);
        if (v23)
        {
LABEL_20:
          swift_bridgeObjectRetain();
          v25 = sub_18FA288B8();
          swift_bridgeObjectRelease();
          goto LABEL_21;
        }
      }
      v25 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_21:
      if (!v25)
        goto LABEL_30;
      v9 = 1;
      sub_18FA1054C(0, 1);
      *(_QWORD *)(a2 + 8 * v11++) = v24;
      if (v8 == v11)
      {
        a4 = v32;
        a5 = v33;
        a6 = v34;
        v7 = v35;
        a1 = v29;
        break;
      }
    }
  }
LABEL_25:
  *(_QWORD *)a1 = a4;
  *(_QWORD *)(a1 + 8) = a5;
  *(_QWORD *)(a1 + 16) = a6;
  *(_BYTE *)(a1 + 24) = v7;
  return v8;
}

uint64_t sub_18FA0F804(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_18FA0FA00(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;

  v4 = a4;
  v6 = a2;
  v7 = result;
  if ((a4 & 0xC000000000000001) == 0)
  {
    v10 = 0;
    v20 = -1 << *(_BYTE *)(a4 + 32);
    v8 = a4 + 56;
    v9 = ~v20;
    v21 = -v20;
    if (v21 < 64)
      v22 = ~(-1 << v21);
    else
      v22 = -1;
    v11 = v22 & *(_QWORD *)(a4 + 56);
    v24 = result;
    if (a2)
      goto LABEL_3;
LABEL_36:
    v12 = 0;
    goto LABEL_46;
  }
  sub_18FA28744();
  sub_18F9E000C(0, (unint64_t *)&qword_1EE17EBD0);
  sub_18FA10B34();
  result = (_QWORD *)sub_18FA285A0();
  v4 = v27;
  v8 = v28;
  v9 = v29;
  v10 = v30;
  v11 = v31;
  v24 = v7;
  if (!v6)
    goto LABEL_36;
LABEL_3:
  if (!a3)
  {
    v12 = 0;
    goto LABEL_46;
  }
  if (a3 < 0)
    goto LABEL_48;
  v12 = 0;
  v25 = (unint64_t)(v9 + 64) >> 6;
  v23 = v9;
  while (1)
  {
    if (v4 < 0)
    {
      if (!sub_18FA28768())
        goto LABEL_45;
      sub_18F9E000C(0, (unint64_t *)&qword_1EE17EBD0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v15 = v26;
      result = (_QWORD *)swift_unknownObjectRelease();
      if (!v26)
        goto LABEL_45;
      goto LABEL_8;
    }
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_7;
    }
    v16 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
LABEL_48:
      __break(1u);
      return result;
    }
    if (v16 >= v25)
    {
      v11 = 0;
      goto LABEL_45;
    }
    v17 = *(_QWORD *)(v8 + 8 * v16);
    if (v17)
      goto LABEL_23;
    v18 = v10 + 2;
    if (v10 + 2 >= v25)
    {
      v11 = 0;
      ++v10;
      goto LABEL_45;
    }
    v17 = *(_QWORD *)(v8 + 8 * v18);
    if (!v17)
    {
      if (v10 + 3 >= v25)
        goto LABEL_42;
      v17 = *(_QWORD *)(v8 + 8 * (v10 + 3));
      if (v17)
      {
        v16 = v10 + 3;
        goto LABEL_23;
      }
      v18 = v10 + 4;
      if (v10 + 4 >= v25)
      {
        v11 = 0;
        v10 += 3;
        goto LABEL_45;
      }
      v17 = *(_QWORD *)(v8 + 8 * v18);
      if (!v17)
        break;
    }
    v16 = v18;
LABEL_23:
    v11 = (v17 - 1) & v17;
    v14 = __clz(__rbit64(v17)) + (v16 << 6);
    v10 = v16;
LABEL_7:
    result = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    v15 = result;
    if (!result)
      goto LABEL_45;
LABEL_8:
    ++v12;
    *v6++ = v15;
    if (v12 == a3)
    {
      v12 = a3;
LABEL_45:
      v9 = v23;
      goto LABEL_46;
    }
  }
  v16 = v10 + 5;
  if (v10 + 5 >= v25)
  {
LABEL_42:
    v11 = 0;
    v10 = v18;
    goto LABEL_45;
  }
  v17 = *(_QWORD *)(v8 + 8 * v16);
  if (v17)
    goto LABEL_23;
  v19 = v10 + 6;
  while (v25 != v19)
  {
    v17 = *(_QWORD *)(v8 + 8 * v19++);
    if (v17)
    {
      v16 = v19 - 1;
      goto LABEL_23;
    }
  }
  v11 = 0;
  v10 = v25 - 1;
  v9 = v23;
LABEL_46:
  *v24 = v4;
  v24[1] = v8;
  v24[2] = v9;
  v24[3] = v10;
  v24[4] = v11;
  return (_QWORD *)v12;
}

uint64_t sub_18FA0FD08(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_18FA288B8();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_18FA288B8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_18FA10EA8((unint64_t *)&unk_1EE181120, (uint64_t *)&unk_1EE17EBC0);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE17EBC0);
          v12 = sub_18F9E8DFC(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_18F9E000C(0, &qword_1EE17EBD8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_18FA288F4();
  __break(1u);
  return result;
}

uint64_t sub_18FA0FF1C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  uint64_t *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_18FA288B8();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_18FA288B8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_18FA10EA8((unint64_t *)&unk_1EE181160, &qword_1EE181158);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE181158);
          v12 = sub_18F9E8E54(v16, i, a3);
          v14 = *v13;
          swift_unknownObjectRetain();
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EAE0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_18FA288F4();
  __break(1u);
  return result;
}

uint64_t sub_18FA10124(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_18FA288B8();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_18FA288B8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_18FA10EA8((unint64_t *)&unk_1EE181130, &qword_1EE17EAC8);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EAC8);
          v12 = sub_18F9E8DFC(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_18F9E000C(0, (unint64_t *)&qword_1EE17EBD0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_18FA288F4();
  __break(1u);
  return result;
}

uint64_t sub_18FA10338(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_18FA288B8();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_18FA288B8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_18FA10EA8(&qword_1EE181148, &qword_1EE181140);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE181140);
          v12 = sub_18F9E8EA8(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_18F9E000C(0, &qword_1EE17EAD0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_18FA288F4();
  __break(1u);
  return result;
}

uint64_t sub_18FA1054C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    if (!(*v3 >> 62))
    {
      if (*(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain();
  v21 = sub_18FA288B8();
  swift_bridgeObjectRelease();
  if (v21 < v2)
    goto LABEL_31;
LABEL_4:
  v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v7 = sub_18FA288B8();
    swift_bridgeObjectRelease();
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v12 = sub_18FA288B8();
    swift_bridgeObjectRelease();
    v9 = *v3;
    goto LABEL_15;
  }
  if (*v3 >> 62)
    goto LABEL_34;
  v7 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v7 - v6;
  if (__OFADD__(v7, v5))
    goto LABEL_36;
LABEL_8:
  v9 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v3 = v9;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v9 & 0x8000000000000000) == 0 && (v9 & 0x4000000000000000) == 0)
  {
    v11 = v9 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v7 = 1;
  }
  if (v9 >> 62)
    goto LABEL_37;
  v12 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v8)
    v12 = v8;
  swift_bridgeObjectRetain();
  *v3 = MEMORY[0x19400537C](v7, v12, 1, v9);
  swift_bridgeObjectRelease();
  v11 = *v3 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v13 = v11 + 32;
  v14 = (char *)(v11 + 32 + 8 * v4);
  sub_18F9E000C(0, &qword_1EE17EBD8);
  swift_arrayDestroy();
  if (!v5)
    return sub_18FA2845C();
  if (!(*v3 >> 62))
  {
    v15 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    v16 = v15 - v2;
    if (!__OFSUB__(v15, v2))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v22 = sub_18FA288B8();
  swift_bridgeObjectRelease();
  v16 = v22 - v2;
  if (__OFSUB__(v22, v2))
    goto LABEL_40;
LABEL_21:
  if ((v16 & 0x8000000000000000) == 0)
  {
    v17 = (char *)(v13 + 8 * v2);
    if (v4 != v2 || v14 >= &v17[8 * v16])
      memmove(v14, v17, 8 * v16);
    if (!(*v3 >> 62))
    {
      v18 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      v19 = v18 + v5;
      if (!__OFADD__(v18, v5))
      {
LABEL_27:
        *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10) = v19;
        return sub_18FA2845C();
      }
      goto LABEL_43;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    v23 = sub_18FA288B8();
    swift_bridgeObjectRelease();
    v19 = v23 + v5;
    if (!__OFADD__(v23, v5))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_18FA288F4();
  __break(1u);
  return result;
}

unint64_t sub_18FA10858()
{
  unint64_t result;

  result = qword_1EE181110;
  if (!qword_1EE181110)
  {
    result = MEMORY[0x194006D14](&protocol conformance descriptor for CNContactStore.FetchedContactsSequence, &type metadata for CNContactStore.FetchedContactsSequence);
    atomic_store(result, (unint64_t *)&qword_1EE181110);
  }
  return result;
}

uint64_t _s23FetchedContactsSequenceVwxx(id *a1)
{

  return swift_bridgeObjectRelease();
}

uint64_t _s23FetchedContactsSequenceVwcp(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = v3;
  v6 = v4;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s23FetchedContactsSequenceVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s23FetchedContactsSequenceVwta(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t _s23FetchedContactsSequenceVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s23FetchedContactsSequenceVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CNContactStore.FetchedContactsSequence()
{
  return &type metadata for CNContactStore.FetchedContactsSequence;
}

uint64_t sub_18FA10A94(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17E830);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_18FA10AD4()
{
  return swift_deallocObject();
}

uint64_t sub_18FA10AE4(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_18FA0ED2C(a1, a2, *(_QWORD **)(v2 + 16));
}

uint64_t sub_18FA10AEC()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_18FA10B14()
{
  return swift_deallocObject();
}

uint64_t sub_18FA10B24()
{
  return swift_deallocObject();
}

unint64_t sub_18FA10B34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE181150;
  if (!qword_1EE181150)
  {
    v1 = sub_18F9E000C(255, (unint64_t *)&qword_1EE17EBD0);
    result = MEMORY[0x194006D14](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EE181150);
  }
  return result;
}

uint64_t sub_18FA10B8C()
{
  return swift_deallocObject();
}

uint64_t sub_18FA10B9C()
{
  return swift_deallocObject();
}

uint64_t sub_18FA10BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    if (!(*v3 >> 62))
    {
      if (*(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain();
  v21 = sub_18FA288B8();
  swift_bridgeObjectRelease();
  if (v21 < v2)
    goto LABEL_31;
LABEL_4:
  v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v7 = sub_18FA288B8();
    swift_bridgeObjectRelease();
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v12 = sub_18FA288B8();
    swift_bridgeObjectRelease();
    v9 = *v3;
    goto LABEL_15;
  }
  if (*v3 >> 62)
    goto LABEL_34;
  v7 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v7 - v6;
  if (__OFADD__(v7, v5))
    goto LABEL_36;
LABEL_8:
  v9 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v3 = v9;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v9 & 0x8000000000000000) == 0 && (v9 & 0x4000000000000000) == 0)
  {
    v11 = v9 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v7 = 1;
  }
  if (v9 >> 62)
    goto LABEL_37;
  v12 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v8)
    v12 = v8;
  swift_bridgeObjectRetain();
  *v3 = MEMORY[0x19400537C](v7, v12, 1, v9);
  swift_bridgeObjectRelease();
  v11 = *v3 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v13 = v11 + 32;
  v14 = (char *)(v11 + 32 + 8 * v4);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE180CF8);
  swift_arrayDestroy();
  if (!v5)
    return sub_18FA2845C();
  if (!(*v3 >> 62))
  {
    v15 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    v16 = v15 - v2;
    if (!__OFSUB__(v15, v2))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v22 = sub_18FA288B8();
  swift_bridgeObjectRelease();
  v16 = v22 - v2;
  if (__OFSUB__(v22, v2))
    goto LABEL_40;
LABEL_21:
  if ((v16 & 0x8000000000000000) == 0)
  {
    v17 = (char *)(v13 + 8 * v2);
    if (v4 != v2 || v14 >= &v17[8 * v16])
      memmove(v14, v17, 8 * v16);
    if (!(*v3 >> 62))
    {
      v18 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      v19 = v18 + v5;
      if (!__OFADD__(v18, v5))
      {
LABEL_27:
        *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10) = v19;
        return sub_18FA2845C();
      }
      goto LABEL_43;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    v23 = sub_18FA288B8();
    swift_bridgeObjectRelease();
    v19 = v23 + v5;
    if (!__OFADD__(v23, v5))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_18FA288F4();
  __break(1u);
  return result;
}

uint64_t sub_18FA10EA8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x194006D14](MEMORY[0x1E0DEAF50], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static DuplicateCohortRanker.preferredCohort<A>(for:contactStore:)(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  sub_18FA11188(a2);
  v2 = sub_18FA284EC();
  MEMORY[0x194006D14](MEMORY[0x1E0DEAF38], v2);
  sub_18FA283E4();
  swift_bridgeObjectRelease();
  result = v4;
  if (!v4)
  {
    MEMORY[0x194006D14](MEMORY[0x1E0DEAF50], v2);
    sub_18FA2860C();
    return a1;
  }
  return result;
}

uint64_t sub_18FA10FC8()
{
  uint64_t v0;

  v0 = sub_18FA28204();
  __swift_allocate_value_buffer(v0, qword_1EE181170);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EE181170);
  return sub_18FA281F8();
}

uint64_t sub_18FA11048(id *a1, _QWORD *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*a1, sel_identifier);
  v4 = sub_18FA2833C();
  v6 = v5;

  LOBYTE(a2) = sub_18FA08E34(v4, v6, a2);
  swift_bridgeObjectRelease();
  return a2 & 1;
}

id DuplicateCohortRanker.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id DuplicateCohortRanker.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DuplicateCohortRanker();
  return objc_msgSendSuper2(&v2, sel_init);
}

id DuplicateCohortRanker.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DuplicateCohortRanker();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_18FA11188(void *a1)
{
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  id v18[2];

  v18[1] = *(id *)MEMORY[0x1E0C80C00];
  v18[0] = 0;
  v1 = objc_msgSend(a1, sel_meContactIdentifiers_, v18);
  v2 = v18[0];
  if (v1)
  {
    v3 = v1;
    v4 = sub_18FA28444();
    v5 = v2;

  }
  else
  {
    v6 = v18[0];
    v7 = (void *)sub_18FA28030();

    swift_willThrow();
    if (qword_1EE180A20 != -1)
      swift_once();
    v8 = sub_18FA28204();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EE181170);
    v9 = v7;
    v10 = v7;
    v11 = sub_18FA281EC();
    v12 = sub_18FA2863C();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = (void *)swift_slowAlloc();
      v18[0] = v14;
      *(_DWORD *)v13 = 136315138;
      swift_getErrorValue();
      v15 = sub_18FA289CC();
      sub_18F9DE1F0(v15, v16, (uint64_t *)v18);
      sub_18FA286E4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_18F8BD000, v11, v12, "Could not fetch Me contact from store: %s", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x194006DBC](v14, -1, -1);
      MEMORY[0x194006DBC](v13, -1, -1);
    }
    else
    {

    }
    return MEMORY[0x1E0DEE9D8];
  }
  return v4;
}

uint64_t sub_18FA113E0(id *a1)
{
  uint64_t v1;

  return sub_18FA11048(a1, *(_QWORD **)(v1 + 24)) & 1;
}

uint64_t type metadata accessor for DuplicateCohortRanker()
{
  return objc_opt_self();
}

unint64_t static CNContactProviderSupportExtensionPoint.identifier.getter()
{
  return 0xD000000000000024;
}

ValueMetadata *type metadata accessor for CNContactProviderSupportExtensionPoint()
{
  return &type metadata for CNContactProviderSupportExtensionPoint;
}

id sub_18FA11448()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v1 = (void *)sub_18FA28330();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

id CNDuplicateSetContactImage.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id CNDuplicateSetContactImage.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for CNDuplicateSetContactImage();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for CNDuplicateSetContactImage()
{
  return objc_opt_self();
}

id CNDuplicateSetContactImage.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CNDuplicateSetContactImage();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_18FA11608@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for CNDuplicateSetContactImage();
  result = sub_18FA287EC();
  *a1 = result;
  return result;
}

void sub_18FA11644(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_18FA03B04(a1, (SEL *)&selRef_cropRectString, a2);
}

void sub_18FA11660(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_18FA03B64(a1, a2, a3, a4, (SEL *)&selRef_setCropRectString_);
}

char *keypath_get_selector_fullscreenImageData()
{
  return sel_fullscreenImageData;
}

void sub_18FA11688(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_18FA03BC0(a1, (SEL *)&selRef_fullscreenImageData, a2);
}

void sub_18FA116A4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_18FA03C20(a1, a2, a3, a4, (SEL *)&selRef_setFullscreenImageData_);
}

void sub_18FA116C0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_18FA03BC0(a1, (SEL *)&selRef_imageData, a2);
}

void sub_18FA116DC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_18FA03C20(a1, a2, a3, a4, (SEL *)&selRef_setImageData_);
}

char *keypath_get_selector_imageHash()
{
  return sel_imageHash;
}

void sub_18FA11704(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_18FA03BC0(a1, (SEL *)&selRef_imageHash, a2);
}

void sub_18FA11720(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_18FA03C20(a1, a2, a3, a4, (SEL *)&selRef_setImageHash_);
}

char *keypath_get_selector_imageType()
{
  return sel_imageType;
}

void sub_18FA11748(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_18FA03B04(a1, (SEL *)&selRef_imageType, a2);
}

void sub_18FA11764(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_18FA03B64(a1, a2, a3, a4, (SEL *)&selRef_setImageType_);
}

char *keypath_get_selector_memojiMetadata()
{
  return sel_memojiMetadata;
}

void sub_18FA1178C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_18FA03BC0(a1, (SEL *)&selRef_memojiMetadata, a2);
}

void sub_18FA117A8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_18FA03C20(a1, a2, a3, a4, (SEL *)&selRef_setMemojiMetadata_);
}

char *keypath_get_selector_thumbnailImageData()
{
  return sel_thumbnailImageData;
}

void sub_18FA117D0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_18FA03BC0(a1, (SEL *)&selRef_thumbnailImageData, a2);
}

void sub_18FA117EC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_18FA03C20(a1, a2, a3, a4, (SEL *)&selRef_setThumbnailImageData_);
}

id sub_18FA11808@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_duplicateSet);
  *a2 = result;
  return result;
}

id sub_18FA11840(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setDuplicateSet_, *a1);
}

uint64_t method lookup function for CNDuplicateSetContactImage()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of static CNDuplicateSetContactImage.fetchRequest()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t static DuplicateContactsModerator.combinePotentialDuplicatesWithCommonHandles<A>(potentialDuplicates:groupedBy:)()
{
  uint64_t v0;
  uint64_t v2;

  sub_18FA284EC();
  sub_18FA2824C();
  v0 = sub_18FA284EC();
  MEMORY[0x194006D14](MEMORY[0x1E0DEAF38], v0);
  sub_18FA283FC();
  return v2;
}

uint64_t static DuplicateContactsModerator.groupByCommonHandles<A>(contacts:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = MEMORY[0x194005034]();
  if (v4 < 2)
  {
    sub_18FA284EC();
    return sub_18FA284A4();
  }
  else
  {
    v26 = a1;
    MEMORY[0x1E0C80A78](v4);
    v22 = a2;
    v5 = sub_18FA284EC();
    v8 = type metadata accessor for DuplicateHandleSet(0, a2, v6, v7);
    v9 = MEMORY[0x194006D14](MEMORY[0x1E0DEAF50], v5);
    v23 = v5;
    v11 = sub_18F9E07F8((void (*)(char *, char *))sub_18FA13440, (uint64_t)v21, v5, v8, MEMORY[0x1E0DEDCE8], v9, MEMORY[0x1E0DEDD18], v10);
    v12 = MEMORY[0x194005034](v11, v8);
    if (v12)
    {
      v13 = MEMORY[0x1E0DEAF38];
      do
      {
        v14 = MEMORY[0x194005034](v11, v8);
        v25 = v11;
        v24 = sub_18FA2824C();
        MEMORY[0x1E0C80A78](v24);
        v22 = a2;
        v15 = sub_18FA284EC();
        MEMORY[0x194006D14](v13, v15);
        sub_18FA283FC();
        swift_bridgeObjectRelease();
        v11 = v26;
        v12 = MEMORY[0x194005034](v26, v8);
      }
      while (v14 != v12);
    }
    v26 = v11;
    MEMORY[0x1E0C80A78](v12);
    v22 = a2;
    v16 = sub_18FA284EC();
    MEMORY[0x194006D14](MEMORY[0x1E0DEAF60], v16);
    v26 = sub_18FA28828();
    MEMORY[0x1E0C80A78](v26);
    v22 = a2;
    v17 = MEMORY[0x194006D14](MEMORY[0x1E0DEAF50], v16);
    v19 = sub_18F9E07F8((void (*)(char *, char *))sub_18FA134C4, (uint64_t)v21, v16, v23, MEMORY[0x1E0DEDCE8], v17, MEMORY[0x1E0DEDD18], v18);
    swift_bridgeObjectRelease();
  }
  return v19;
}

void DuplicateHandleSet.init(contact:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  _QWORD *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;

  MEMORY[0x194006D14](MEMORY[0x1E0DEFCF8]);
  sub_18FA28258();
  sub_18FA134E0(a2, a2);
  swift_allocObject();
  sub_18FA28468();
  *v6 = a1;
  v7 = sub_18FA284EC();
  v8 = a1;
  MEMORY[0x194006D14](MEMORY[0x1E0DEAF38], v7);
  v9 = sub_18FA285D0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = v8;
  v11 = sub_18FA12C94();
  swift_bridgeObjectRelease();

  *a3 = v9;
  a3[1] = v11;
}

uint64_t sub_18FA11CD4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char v12;
  _QWORD v13[8];

  v7 = *a2;
  v6 = a2[1];
  v8 = type metadata accessor for DuplicateHandleSet(0, a3, a3, a4);
  v9 = swift_bridgeObjectRetain();
  v10 = MEMORY[0x194005034](v9, v8);
  result = swift_bridgeObjectRelease();
  if (v10 < 0)
  {
    __break(1u);
  }
  else
  {
    MEMORY[0x1E0C80A78](result);
    v13[2] = a3;
    v13[3] = a1;
    v13[4] = v7;
    v13[5] = v6;
    result = sub_18FA16DF8((uint64_t)sub_18FA13724, (uint64_t)v13, 0, v10);
    if ((v12 & 1) != 0)
    {
      v13[6] = v7;
      v13[7] = v6;
      sub_18FA284EC();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return sub_18FA284E0();
    }
  }
  return result;
}

uint64_t sub_18FA11DD4(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v9[2];

  v6 = *a1;
  v9[0] = a3;
  v9[1] = a4;
  v7 = type metadata accessor for DuplicateHandleSet(255, a5, a3, a4);
  sub_18FA284EC();
  sub_18FA28498();
  sub_18FA136D4(v6, *a2);
  return DuplicateHandleSet.add(_:)((uint64_t)v9, v7) & 1;
}

uint64_t DuplicateHandleSet.add(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (!*(_QWORD *)(*(_QWORD *)(a1 + 8) + 16) || (sub_18FA13038(*(_QWORD *)(a1 + 8), *(_QWORD *)(v2 + 8)) & 1) != 0)
    return 0;
  v5 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  MEMORY[0x194006D14](MEMORY[0x1E0DEFCF8], v5);
  v6 = sub_18FA285C4();
  MEMORY[0x194006D14](MEMORY[0x1E0DEB3D0], v6);
  sub_18FA285B8();
  v7 = swift_bridgeObjectRetain();
  sub_18FA12810(v7);
  return 1;
}

BOOL sub_18FA11F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = type metadata accessor for DuplicateHandleSet(0, a2, a3, a4);
  MEMORY[0x194006D14](MEMORY[0x1E0DEFCF8], *(_QWORD *)(v4 + 16));
  return sub_18FA28594() > 1;
}

BOOL DuplicateHandleSet.isValid.getter(uint64_t a1)
{
  MEMORY[0x194006D14](MEMORY[0x1E0DEFCF8], *(_QWORD *)(a1 + 16));
  return sub_18FA28594() > 1;
}

uint64_t sub_18FA11FD0@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  swift_bridgeObjectRetain();
  MEMORY[0x194006D14](MEMORY[0x1E0DEFCF8], a1);
  v4 = sub_18FA285C4();
  MEMORY[0x194006D14](MEMORY[0x1E0DEB3D0], v4);
  result = sub_18FA284F8();
  *a2 = result;
  return result;
}

uint64_t sub_18FA12060(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v10 = *a2;
  result = MEMORY[0x194005034](*a2, a5);
  if (result >= 2)
  {
    v12 = result;
    v31 = a1;
    v35 = v10;
    MEMORY[0x1E0C80A78](result);
    v27[0] = a5;
    v27[1] = a3;
    v28 = a4;
    v13 = sub_18FA284EC();
    swift_bridgeObjectRetain();
    v14 = MEMORY[0x194006D14](MEMORY[0x1E0DEAF38], v13);
    v15 = sub_18FA282A0();
    v32 = v5;
    if (sub_18FA2827C() == 1)
    {
LABEL_6:
      swift_bridgeObjectRelease();
      v35 = v10;
      sub_18FA284EC();
      swift_bridgeObjectRetain();
      return sub_18FA284E0();
    }
    v30 = v14;
    type metadata accessor for DuplicateContactsModerator();
    static DuplicateContactsModerator.groupByCommonHandles<A>(contacts:)(v10, a5);
    if (MEMORY[0x194005034]() == 1)
    {
      sub_18FA28504();
      v16 = MEMORY[0x194005034](v35, a5);
      swift_bridgeObjectRelease();
      if (v16 == v12)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    v17 = nullsub_1(v15, MEMORY[0x1E0DEC198], v13, MEMORY[0x1E0DEC1A0]);
    swift_bridgeObjectRetain();
    v18 = swift_bridgeObjectRelease();
    v35 = v17;
    MEMORY[0x1E0C80A78](v18);
    v28 = a5;
    v19 = sub_18FA28288();
    MEMORY[0x194006D14](MEMORY[0x1E0DE9F98], v19);
    sub_18FA283F0();
    v20 = sub_18FA2848C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (MEMORY[0x194005034](v20, v13))
    {
      v34 = v10;
      MEMORY[0x194006D14](MEMORY[0x1E0DEFCF8], a5);
      sub_18FA285C4();
      v33 = sub_18FA2824C();
      MEMORY[0x1E0C80A78](v33);
      v29 = v20;
      v21 = sub_18FA284EC();
      sub_18FA283FC();
      v22 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v22);
      v28 = a5;
      v23 = MEMORY[0x194006D14](MEMORY[0x1E0DEAF50], v21);
      v25 = sub_18F9E07F8((void (*)(char *, char *))sub_18FA134C4, (uint64_t)v27, v21, v13, MEMORY[0x1E0DEDCE8], v23, MEMORY[0x1E0DEDD18], v24);
      swift_bridgeObjectRelease();
      v35 = v25;
      v26 = sub_18FA284EC();
      MEMORY[0x194006D14](MEMORY[0x1E0DEAF38], v26);
      return sub_18FA284D4();
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_18FA12480(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;

  return sub_18FA12060(a1, a2, v2[3], v2[4], v2[2]);
}

uint64_t sub_18FA1249C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v13;

  v5 = sub_18FA284EC();
  v6 = sub_18FA284EC();
  swift_bridgeObjectRetain();
  MEMORY[0x194006D14](MEMORY[0x1E0DEAF60], v6);
  sub_18FA28828();
  v7 = MEMORY[0x1E0DEAF38];
  MEMORY[0x194006D14](MEMORY[0x1E0DEAF38], v6);
  MEMORY[0x194006D14](v7, v5);
  v8 = sub_18FA28408();
  swift_bridgeObjectRelease();
  MEMORY[0x194006D14](MEMORY[0x1E0DEFCF8], a4);
  sub_18FA285D0();
  v9 = sub_18FA285C4();
  v10 = sub_18FA284EC();
  swift_bridgeObjectRetain();
  MEMORY[0x194006D14](MEMORY[0x1E0DEAF50], v10);
  sub_18FA28600();
  swift_bridgeObjectRelease();
  if (v13 == 1)
    return sub_18FA284E0();
  sub_18FA28498();
  sub_18FA136D4(v8, *a1);
  MEMORY[0x194006D14](MEMORY[0x1E0DEB3D0], v9);
  return sub_18FA285B8();
}

uint64_t sub_18FA126EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = sub_18FA284EC();
  MEMORY[0x194006D14](MEMORY[0x1E0DEAF38], v4);
  MEMORY[0x194006D14](MEMORY[0x1E0DEFD00], a3);
  return sub_18FA28420() & 1;
}

uint64_t sub_18FA12778@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[6];

  v9[5] = *a1;
  v9[2] = a2;
  v5 = sub_18FA284EC();
  v6 = MEMORY[0x194006D14](MEMORY[0x1E0DEAF50], v5);
  result = sub_18F9E07F8((void (*)(char *, char *))sub_18FA13820, (uint64_t)v9, v5, a2, MEMORY[0x1E0DEDCE8], v6, MEMORY[0x1E0DEDD18], v7);
  *a3 = result;
  return result;
}

uint64_t sub_18FA12810(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;

  v1 = result;
  v2 = 0;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v7)
      return swift_release();
    v14 = *(_QWORD *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      v2 = v13 + 1;
      if (v13 + 1 >= v7)
        return swift_release();
      v14 = *(_QWORD *)(v3 + 8 * v2);
      if (!v14)
      {
        v2 = v13 + 2;
        if (v13 + 2 >= v7)
          return swift_release();
        v14 = *(_QWORD *)(v3 + 8 * v2);
        if (!v14)
        {
          v2 = v13 + 3;
          if (v13 + 3 >= v7)
            return swift_release();
          v14 = *(_QWORD *)(v3 + 8 * v2);
          if (!v14)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v14 - 1) & v14;
    v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    v10 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v9);
    v11 = *v10;
    v12 = v10[1];
    swift_bridgeObjectRetain();
    sub_18FA1A840(&v16, v11, v12);
    result = swift_bridgeObjectRelease();
  }
  v15 = v13 + 4;
  if (v15 >= v7)
    return swift_release();
  v14 = *(_QWORD *)(v3 + 8 * v15);
  if (v14)
  {
    v2 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v2 >= v7)
      return swift_release();
    v14 = *(_QWORD *)(v3 + 8 * v2);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_18FA1297C(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  _QWORD *v16;
  id v17[6];

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    sub_18FA28744();
    sub_18FA02F4C();
    sub_18FA10B34();
    sub_18FA285A0();
    v1 = (unint64_t)v17[1];
    v16 = v17[2];
    v2 = (uint64_t)v17[3];
    v3 = v17[4];
    v4 = (unint64_t)v17[5];
  }
  else
  {
    v3 = 0;
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v16 = (_QWORD *)(a1 + 56);
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
  }
  v8 = (unint64_t)(v2 + 64) >> 6;
  if ((v1 & 0x8000000000000000) != 0)
    goto LABEL_10;
  while (1)
  {
    if (v4)
    {
      v9 = (v4 - 1) & v4;
      v10 = __clz(__rbit64(v4)) | ((_QWORD)v3 << 6);
      v11 = (char *)v3;
      goto LABEL_29;
    }
    v13 = (uint64_t)v3 + 1;
    if (__OFADD__(v3, 1))
      break;
    if (v13 >= v8)
      goto LABEL_32;
    v14 = v16[v13];
    v11 = (char *)v3 + 1;
    if (!v14)
    {
      v11 = (char *)v3 + 2;
      if ((uint64_t)v3 + 2 >= v8)
        goto LABEL_32;
      v14 = v16[(_QWORD)v11];
      if (!v14)
      {
        v11 = (char *)v3 + 3;
        if ((uint64_t)v3 + 3 >= v8)
          goto LABEL_32;
        v14 = v16[(_QWORD)v11];
        if (!v14)
        {
          v11 = (char *)v3 + 4;
          if ((uint64_t)v3 + 4 >= v8)
            goto LABEL_32;
          v14 = v16[(_QWORD)v11];
          if (!v14)
          {
            v11 = (char *)v3 + 5;
            if ((uint64_t)v3 + 5 >= v8)
              goto LABEL_32;
            v14 = v16[(_QWORD)v11];
            if (!v14)
            {
              v15 = (char *)v3 + 6;
              while ((char *)v8 != v15)
              {
                v14 = v16[(_QWORD)v15++];
                if (v14)
                {
                  v11 = v15 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_18F9DFFC4();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    v9 = (v14 - 1) & v14;
    v10 = __clz(__rbit64(v14)) + ((_QWORD)v11 << 6);
LABEL_29:
    v12 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v10);
    if (!v12)
      goto LABEL_32;
    while (1)
    {
      sub_18FA1A9EC(v17, v12);

      v3 = v11;
      v4 = v9;
      if ((v1 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      if (sub_18FA28768())
      {
        sub_18FA02F4C();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v12 = v17[0];
        swift_unknownObjectRelease();
        v11 = (char *)v3;
        v9 = v4;
        if (v12)
          continue;
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

uint64_t DuplicateContactsModerator.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DuplicateContactsModerator.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t DuplicateHandleSet.contacts.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DuplicateHandleSet.contacts.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*DuplicateHandleSet.contacts.modify())()
{
  return nullsub_1;
}

uint64_t DuplicateHandleSet.handles.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DuplicateHandleSet.handles.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*DuplicateHandleSet.handles.modify())()
{
  return nullsub_1;
}

uint64_t sub_18FA12C94()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  id v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  id v33;

  v1 = objc_msgSend(v0, sel_phoneNumbers);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE180CF8);
  v2 = sub_18FA28444();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_18FA288B8();
    v3 = result;
    if (result)
      goto LABEL_3;
LABEL_17:
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_18;
  }
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v3)
    goto LABEL_17;
LABEL_3:
  if (v3 < 1)
  {
    __break(1u);
    goto LABEL_37;
  }
  v5 = 0;
  v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    if ((v2 & 0xC000000000000001) != 0)
      v7 = (id)MEMORY[0x194005370](v5, v2);
    else
      v7 = *(id *)(v2 + 8 * v5 + 32);
    v8 = v7;
    v9 = objc_msgSend(v7, sel_value);
    v10 = objc_msgSend(v9, sel_unformattedInternationalStringValue);

    if (v10)
    {
      v11 = sub_18FA2833C();
      v13 = v12;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v6 = sub_18F9FDF34(0, v6[2] + 1, 1, v6);
      v15 = v6[2];
      v14 = v6[3];
      if (v15 >= v14 >> 1)
        v6 = sub_18F9FDF34((_QWORD *)(v14 > 1), v15 + 1, 1, v6);
      v6[2] = v15 + 1;
      v16 = &v6[2 * v15];
      v16[4] = v11;
      v16[5] = v13;
    }
    else
    {

    }
    ++v5;
  }
  while (v3 != v5);
LABEL_18:
  swift_bridgeObjectRelease_n();
  v17 = objc_msgSend(v33, sel_emailAddresses);
  v18 = sub_18FA28444();

  if (!(v18 >> 62))
  {
    v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v19)
      goto LABEL_20;
LABEL_34:
    v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_35:
    swift_bridgeObjectRelease_n();
    sub_18FA0E5C0((uint64_t)v21);
    v32 = sub_18FA1CD34((uint64_t)v6);
    swift_bridgeObjectRelease();
    return v32;
  }
  swift_bridgeObjectRetain();
  result = sub_18FA288B8();
  v19 = result;
  if (!result)
    goto LABEL_34;
LABEL_20:
  if (v19 >= 1)
  {
    v20 = 0;
    v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      if ((v18 & 0xC000000000000001) != 0)
        v22 = (id)MEMORY[0x194005370](v20, v18);
      else
        v22 = *(id *)(v18 + 8 * v20 + 32);
      v23 = v22;
      v24 = objc_msgSend(v22, sel_value);
      v25 = objc_msgSend(v24, sel__cn_stringByNormalizingCase);

      if (v25)
      {
        v26 = sub_18FA2833C();
        v28 = v27;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v21 = sub_18F9FDF34(0, v21[2] + 1, 1, v21);
        v30 = v21[2];
        v29 = v21[3];
        if (v30 >= v29 >> 1)
          v21 = sub_18F9FDF34((_QWORD *)(v29 > 1), v30 + 1, 1, v21);
        v21[2] = v30 + 1;
        v31 = &v21[2 * v30];
        v31[4] = v26;
        v31[5] = v28;
      }
      else
      {

      }
      ++v20;
    }
    while (v19 != v20);
    goto LABEL_35;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_18FA13038(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 1;
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return 1;
  if (v2 >= v3)
    v4 = a1;
  else
    v4 = a2;
  if (v2 >= v3)
    v5 = a2;
  else
    v5 = a1;
  v32 = v4;
  v33 = v4 + 56;
  v6 = -1 << *(_BYTE *)(v4 + 32);
  if (-v6 < 64)
    v7 = ~(-1 << -(char)v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v4 + 56);
  v31 = (unint64_t)(63 - v6) >> 6;
  v9 = v5 + 56;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
  v11 = 0;
  while (1)
  {
    while (1)
    {
      v12 = v11;
      if (!v8)
        break;
      v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v14 = v13 | (v11 << 6);
      if (*(_QWORD *)(v5 + 16))
        goto LABEL_31;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_50;
    }
    if (v15 >= v31)
      goto LABEL_48;
    v16 = *(_QWORD *)(v33 + 8 * v15);
    ++v11;
    if (!v16)
    {
      v11 = v12 + 2;
      if (v12 + 2 >= v31)
        goto LABEL_48;
      v16 = *(_QWORD *)(v33 + 8 * v11);
      if (!v16)
      {
        v11 = v12 + 3;
        if (v12 + 3 >= v31)
          goto LABEL_48;
        v16 = *(_QWORD *)(v33 + 8 * v11);
        if (!v16)
          break;
      }
    }
LABEL_30:
    v8 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
    if (*(_QWORD *)(v5 + 16))
    {
LABEL_31:
      v18 = (uint64_t *)(*(_QWORD *)(v32 + 48) + 16 * v14);
      v20 = *v18;
      v19 = v18[1];
      sub_18FA28A08();
      swift_bridgeObjectRetain();
      sub_18FA28390();
      v21 = sub_18FA28A14();
      v22 = -1 << *(_BYTE *)(v5 + 32);
      v23 = v21 & ~v22;
      if (((*(_QWORD *)(v9 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) != 0)
      {
        v24 = *(_QWORD *)(v5 + 48);
        v25 = (_QWORD *)(v24 + 16 * v23);
        v26 = *v25 == v20 && v25[1] == v19;
        if (v26 || (sub_18FA2896C() & 1) != 0)
        {
LABEL_44:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v30 = 0;
LABEL_45:
          sub_18F9DFFC4();
          return v30;
        }
        v27 = ~v22;
        while (1)
        {
          v23 = (v23 + 1) & v27;
          if (((*(_QWORD *)(v9 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
            break;
          v28 = (_QWORD *)(v24 + 16 * v23);
          v29 = *v28 == v20 && v28[1] == v19;
          if (v29 || (sub_18FA2896C() & 1) != 0)
            goto LABEL_44;
        }
      }
      result = swift_bridgeObjectRelease();
    }
  }
  v17 = v12 + 4;
  if (v12 + 4 >= v31)
  {
LABEL_48:
    swift_bridgeObjectRelease();
    v30 = 1;
    goto LABEL_45;
  }
  v16 = *(_QWORD *)(v33 + 8 * v17);
  if (v16)
  {
    v11 = v12 + 4;
    goto LABEL_30;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v31)
      goto LABEL_48;
    v16 = *(_QWORD *)(v33 + 8 * v11);
    ++v17;
    if (v16)
      goto LABEL_30;
  }
LABEL_50:
  __break(1u);
  return result;
}

uint64_t DuplicateHandleSet.debugDescription.getter(uint64_t a1)
{
  uint64_t v2;

  sub_18FA287D4();
  MEMORY[0x194006D14](MEMORY[0x1E0DEFCF8], *(_QWORD *)(a1 + 16));
  sub_18FA28594();
  v2 = sub_18FA28948();
  swift_bridgeObjectRelease();
  sub_18FA283A8();
  sub_18FA28948();
  sub_18FA283A8();
  swift_bridgeObjectRelease();
  sub_18FA283A8();
  return v2;
}

void sub_18FA13440(id *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  DuplicateHandleSet.init(contact:)(*a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t type metadata accessor for DuplicateHandleSet(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DuplicateHandleSet);
}

uint64_t sub_18FA13490(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_18FA11CD4(a1, a2, *(_QWORD *)(v4 + 16), a4);
}

BOOL sub_18FA134A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_18FA11F28(a1, *(_QWORD *)(v4 + 16), a3, a4);
}

uint64_t sub_18FA134C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_18FA11FD0(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_18FA134E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_isClassType())
    v3 = a2;
  else
    v3 = 0;
  if (v3)
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EB50);
  else
    return sub_18FA28954();
}

uint64_t type metadata accessor for DuplicateContactsModerator()
{
  return objc_opt_self();
}

uint64_t method lookup function for DuplicateContactsModerator()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_18FA1355C()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_18FA13584(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_18FA135B8(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_18FA13614(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_18FA13650(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_18FA13698(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_18FA136D4(unint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  v5 = a2 & 0xFFFFFFFFFFFFF8;
  if ((result & 1) == 0)
    v5 = a2;
  if (*(_QWORD *)(v5 + 16) <= a1)
    goto LABEL_7;
  return result;
}

uint64_t sub_18FA13724(unint64_t *a1)
{
  uint64_t v1;

  return sub_18FA11DD4(a1, *(uint64_t **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 16)) & 1;
}

BOOL sub_18FA13744(_QWORD *a1)
{
  uint64_t v1;

  return MEMORY[0x194005034](*a1, *(_QWORD *)(v1 + 16)) > 1;
}

uint64_t sub_18FA13778(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_18FA1249C(a1, a2, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 16));
}

uint64_t sub_18FA13790(uint64_t a1)
{
  uint64_t v1;

  return sub_18FA126EC(a1, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_18FA137AC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_18FA12778(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_18FA137C4()
{
  uint64_t v0;

  MEMORY[0x194006D14](MEMORY[0x1E0DEFCF8], *(_QWORD *)(v0 + 16));
  return sub_18FA285AC() & 1;
}

id sub_18FA13820@<X0>(void **a1@<X0>, void **a2@<X8>)
{
  void *v2;

  v2 = *a1;
  *a2 = *a1;
  return v2;
}

uint64_t static CNContactProviderSupport.domains()()
{
  return sub_18FA13AF4((SEL *)&selRef_domainsWithError_);
}

unint64_t sub_18FA1389C()
{
  unint64_t result;

  result = qword_1EE181208;
  if (!qword_1EE181208)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE181208);
  }
  return result;
}

uint64_t CNContactProviderSupport.synchronizeDomain(using:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 120) = a1;
  *(_QWORD *)(v2 + 128) = v1;
  return swift_task_switch();
}

uint64_t sub_18FA138F0()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[15];
  v1 = (void *)v0[16];
  v0[2] = v0;
  v0[3] = sub_18FA13988;
  v3 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_18FA13A30;
  v4[3] = &block_descriptor_2;
  v4[4] = v3;
  objc_msgSend(v1, sel_synchronizeDomainUsingSession_completionHandler_, v2, v4);
  return swift_continuation_await();
}

uint64_t sub_18FA13988()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 136) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_18FA139E8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18FA139F4()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18FA13A30(uint64_t a1, void *a2)
{
  _QWORD *v3;
  id v4;

  if (!a2)
    return swift_continuation_throwingResume();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE180DF8);
  swift_allocError();
  *v3 = a2;
  v4 = a2;
  return swift_continuation_throwingResumeWithError();
}

uint64_t static CNContactProviderSupport.allDomains()()
{
  return sub_18FA13AF4((SEL *)&selRef_allDomainsWithError_);
}

uint64_t sub_18FA13AF4(SEL *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  id v4;
  _QWORD v6[2];

  v6[1] = *MEMORY[0x1E0C80C00];
  v6[0] = 0;
  v1 = objc_msgSend((id)objc_opt_self(), *a1, v6);
  v2 = (void *)v6[0];
  sub_18FA1389C();
  v3 = sub_18FA28444();
  v4 = v2;

  return v3;
}

unint64_t DuplicateSetProperties.dictionaryValue.getter()
{
  char *v0;
  char v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;

  v1 = *v0;
  v2 = v0[1];
  v4 = *((_QWORD *)v0 + 1);
  v3 = *((_QWORD *)v0 + 2);
  v6 = *((_QWORD *)v0 + 3);
  v5 = *((_QWORD *)v0 + 4);
  v7 = *((_QWORD *)v0 + 5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EB20);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FA41950;
  *(_QWORD *)(inited + 32) = 0x727574616E676973;
  *(_QWORD *)(inited + 40) = 0xE900000000000065;
  v9 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v4;
  *(_QWORD *)(inited + 56) = v3;
  *(_QWORD *)(inited + 72) = v9;
  *(_QWORD *)(inited + 80) = 0x616C696176417369;
  *(_QWORD *)(inited + 88) = 0xEB00000000656C62;
  v10 = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(inited + 96) = v1;
  *(_QWORD *)(inited + 120) = v10;
  *(_QWORD *)(inited + 128) = 0x65726F6E67497369;
  *(_QWORD *)(inited + 136) = 0xE900000000000064;
  *(_BYTE *)(inited + 144) = v2;
  *(_QWORD *)(inited + 168) = v10;
  *(_QWORD *)(inited + 176) = 5294388599723750000;
  *(_QWORD *)(inited + 184) = 0xE900000000000044;
  *(_QWORD *)(inited + 192) = v6;
  *(_QWORD *)(inited + 200) = v5;
  *(_QWORD *)(inited + 216) = v9;
  *(_QWORD *)(inited + 224) = 0x7374726F686F63;
  *(_QWORD *)(inited + 232) = 0xE700000000000000;
  *(_QWORD *)(inited + 264) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE181218);
  *(_QWORD *)(inited + 240) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_18FA13D08(inited);
}

unint64_t sub_18FA13D08(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EB10);
  v2 = sub_18FA288E8();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_18FA15BC4(v6, (uint64_t)&v15, &qword_1EE17EAB0);
    v7 = v15;
    v8 = v16;
    result = sub_18F9E01F0(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_18F9DFD48(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_18FA13E3C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EB18);
  v2 = sub_18FA288E8();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_18FA15BC4(v6, (uint64_t)v15, &qword_1EE17EB08);
    result = sub_18F9E0294((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_18F9DFD48(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_18FA13F7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t result;
  char v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD v25[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE17E810);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (_QWORD *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE17E838);
  v6 = sub_18FA288E8();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (char *)v5 + *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_18FA15BC4(v12, (uint64_t)v5, (uint64_t *)&unk_1EE17E810);
    v14 = *v5;
    v15 = v5[1];
    result = sub_18F9E01F0(*v5, v15);
    if ((v17 & 1) != 0)
      break;
    v18 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v19 = (uint64_t *)(v7[6] + 16 * result);
    *v19 = v14;
    v19[1] = v15;
    v20 = v7[7];
    v21 = sub_18FA281E0();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v18, v9, v21);
    v22 = v7[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_11;
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_18FA1411C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1810F0);
  v2 = (_QWORD *)sub_18FA288E8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 48);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 2);
    v6 = (uint64_t)*(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    v8 = v7;
    result = sub_18F9E01F0(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v8;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id static CNDuplicateSet.fetchRequest()()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v1 = (void *)sub_18FA28330();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_18FA142A0(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aIdentificropre_0[8 * a1] == *(_QWORD *)&aIdentificropre_0[8 * a2]
    && *(_QWORD *)&aIdentificropre_0[8 * a1 + 32] == *(_QWORD *)&aIdentificropre_0[8 * a2 + 32])
  {
    v3 = 1;
  }
  else
  {
    v3 = sub_18FA2896C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_18FA14324(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aIsavailbisigno[8 * a1] == *(_QWORD *)&aIsavailbisigno[8 * a2]
    && *(_QWORD *)&aPrimaryile[8 * a1 + 8] == *(_QWORD *)&aPrimaryile[8 * a2 + 8])
  {
    v3 = 1;
  }
  else
  {
    v3 = sub_18FA2896C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_18FA143A8()
{
  sub_18FA28A08();
  sub_18FA28390();
  swift_bridgeObjectRelease();
  return sub_18FA28A14();
}

uint64_t sub_18FA14410()
{
  sub_18FA28A08();
  sub_18FA28390();
  swift_bridgeObjectRelease();
  return sub_18FA28A14();
}

uint64_t sub_18FA14478()
{
  sub_18FA28390();
  return swift_bridgeObjectRelease();
}

uint64_t sub_18FA144B8()
{
  sub_18FA28390();
  return swift_bridgeObjectRelease();
}

uint64_t sub_18FA144F8()
{
  sub_18FA28A08();
  sub_18FA28390();
  swift_bridgeObjectRelease();
  return sub_18FA28A14();
}

uint64_t sub_18FA1455C()
{
  sub_18FA28A08();
  sub_18FA28390();
  swift_bridgeObjectRelease();
  return sub_18FA28A14();
}

uint64_t sub_18FA145C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for CNDuplicateSet();
  result = sub_18FA287EC();
  *a1 = result;
  return result;
}

id static CNDuplicateSet.newDuplicatesFetchRequest()()
{
  return sub_18FA14638();
}

id static CNDuplicateSet.ignoredDuplicatesFetchRequest()()
{
  return sub_18FA14638();
}

id sub_18FA14638()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;

  v0 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v1 = (void *)sub_18FA28330();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EB50);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_18FA40FA0;
  v4 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v5 = (void *)sub_18FA28330();
  v6 = objc_msgSend(v4, sel_initWithKey_ascending_, v5, 1);

  *(_QWORD *)(v3 + 32) = v6;
  sub_18FA2845C();
  sub_18F9E000C(0, &qword_1EE181220);
  v7 = (void *)sub_18FA28438();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setSortDescriptors_, v7);

  sub_18F9E000C(0, &qword_1EE17EAD8);
  v8 = (void *)sub_18FA28624();
  objc_msgSend(v2, sel_setPredicate_, v8);

  return v2;
}

uint64_t sub_18FA147EC(char a1)
{
  return *(_QWORD *)&aIsavailbisigno[8 * a1];
}

uint64_t sub_18FA1480C(char *a1, char *a2)
{
  return sub_18FA14324(*a1, *a2);
}

uint64_t sub_18FA14818()
{
  return sub_18FA14410();
}

uint64_t sub_18FA14820()
{
  return sub_18FA144B8();
}

uint64_t sub_18FA14828()
{
  return sub_18FA144F8();
}

uint64_t sub_18FA14830@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18FA15B7C();
  *a1 = result;
  return result;
}

uint64_t sub_18FA1485C@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_18FA147EC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_18FA14884()
{
  char *v0;

  return sub_18FA147EC(*v0);
}

uint64_t sub_18FA1488C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18FA15B7C();
  *a1 = result;
  return result;
}

void sub_18FA148B0(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_18FA148BC()
{
  sub_18FA14E94();
  return sub_18FA28A2C();
}

uint64_t sub_18FA148E4()
{
  sub_18FA14E94();
  return sub_18FA28A38();
}

uint64_t DuplicateSetProperties.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE181228);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18FA14E94();
  sub_18FA28A20();
  if (!v2)
  {
    v26 = 2;
    v9 = sub_18FA2890C();
    v11 = v10;
    v25 = 4;
    v19 = sub_18FA2890C();
    v20 = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE181218);
    v24 = 3;
    sub_18FA15434();
    sub_18FA28924();
    v18 = v21;
    v23 = 0;
    v17 = sub_18FA28918();
    v22 = 1;
    v14 = sub_18FA28918();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_BYTE *)a2 = v17 & 1;
    *(_BYTE *)(a2 + 1) = v14 & 1;
    *(_QWORD *)(a2 + 8) = v9;
    *(_QWORD *)(a2 + 16) = v11;
    v15 = v20;
    *(_QWORD *)(a2 + 24) = v19;
    *(_QWORD *)(a2 + 32) = v15;
    *(_QWORD *)(a2 + 40) = v18;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

unint64_t sub_18FA14E94()
{
  unint64_t result;

  result = qword_1EE181230;
  if (!qword_1EE181230)
  {
    result = MEMORY[0x194006D14](&unk_18FA41AF4, &type metadata for DuplicateSetProperties.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE181230);
  }
  return result;
}

void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DuplicateSetProperties.init(from:contactStore:)(Contacts::DuplicateSetProperties *__return_ptr retstr, Swift::OpaquePointer from, CNContactStore contactStore)
{
  Class isa;
  unint64_t rawValue;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  NSString *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  id v25;
  void *v26;
  id v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  Contacts::DuplicateSetProperties *v42;
  unint64_t v43;
  void *v44;
  Class v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSRect v52;

  isa = contactStore.super.isa;
  rawValue = (unint64_t)from._rawValue;
  v6 = _s8Contacts16ManagedDuplicateC21preferredPrimaryIDFor_12contactStoreSSSgSaySo16CNMutableContactCG_So09CNContactH0CtFZ_0((unint64_t)from._rawValue, contactStore.super.isa);
  if (!v7)
  {
    swift_bridgeObjectRelease();
    sub_18F9D7B80();
    swift_allocError();
    *(_QWORD *)v33 = 0xD000000000000035;
    *(_QWORD *)(v33 + 8) = 0x800000018FA50CE0;
    *(_BYTE *)(v33 + 16) = 1;
    swift_willThrow();
LABEL_29:

    return;
  }
  v8 = v6;
  v9 = v7;
  if (rawValue >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_18FA288B8();
  }
  else
  {
    v10 = *(_QWORD *)((rawValue & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v44 = v9;
  v45 = isa;
  v42 = retstr;
  v41 = v8;
  v43 = rawValue >> 62;
  if (!v10)
  {
    v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_23:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v34 = _s8Contacts16ManagedDuplicateC012signatureForA0ySSSaySo16CNMutableContactCGFZ_0(rawValue);
    v36 = v35;
    v37 = v12[2];
    if (v43)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v39 = v44;
      swift_bridgeObjectRetain();
      v38 = sub_18FA288B8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v38 = *(_QWORD *)((rawValue & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      v39 = v44;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    if (v37 == v38)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      *(_WORD *)&v42->isAvailable = 1;
      v42->signature._countAndFlagsBits = v34;
      v42->signature._object = v36;
      v42->primaryID._countAndFlagsBits = v41;
      v42->primaryID._object = v39;
      v42->cohorts._rawValue = v12;
      return;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_18F9D7B80();
    swift_allocError();
    *(_QWORD *)v40 = 0xD00000000000002CLL;
    *(_QWORD *)(v40 + 8) = 0x800000018FA50D20;
    *(_BYTE *)(v40 + 16) = 1;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    isa = v45;
    goto LABEL_29;
  }
  if (v10 >= 1)
  {
    v11 = 0;
    v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v46 = rawValue & 0xC000000000000001;
    v47 = v10;
    v48 = rawValue;
    while (1)
    {
      if (v46)
        v13 = (id)MEMORY[0x194005370](v11, rawValue);
      else
        v13 = *(id *)(rawValue + 8 * v11 + 32);
      v14 = v13;
      v15 = objc_msgSend(v14, sel_identifier);
      v51 = sub_18FA2833C();
      v50 = v16;

      objc_msgSend(v14, sel_cropRect);
      v17 = NSStringFromRect(v52);
      v18 = sub_18FA2833C();
      v49 = v19;

      v20 = objc_msgSend(v14, sel_imageData);
      if (v20)
      {
        v21 = v20;
        v22 = sub_18FA280A8();
        v24 = v23;

      }
      else
      {
        v22 = 0;
        v24 = 0xC000000000000000;
      }
      v25 = objc_msgSend(v14, sel_wallpaper);
      v26 = v25;
      if (v25)
      {
        v27 = objc_msgSend(v25, sel_posterArchiveData);

        v26 = (void *)sub_18FA280A8();
        v29 = v28;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          goto LABEL_20;
      }
      else
      {

        v29 = 0xC000000000000000;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_20:
          v12 = sub_18F9FE460(0, v12[2] + 1, 1, v12);
      }
      v31 = v12[2];
      v30 = v12[3];
      if (v31 >= v30 >> 1)
        v12 = sub_18F9FE460((_QWORD *)(v30 > 1), v31 + 1, 1, v12);
      ++v11;
      v12[2] = v31 + 1;
      v32 = &v12[8 * v31];
      v32[4] = v51;
      v32[5] = v50;
      rawValue = v48;
      v32[6] = v18;
      v32[7] = v49;
      v32[8] = v22;
      v32[9] = v24;
      v32[10] = v26;
      v32[11] = v29;
      if (v47 == v11)
        goto LABEL_23;
    }
  }
  __break(1u);
}

uint64_t DuplicateSetProperties.cohortIDs.getter()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_18F9DE90C(0, v2, 0);
    v3 = v11;
    v4 = (uint64_t *)(v1 + 40);
    do
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      v7 = *(_QWORD *)(v11 + 16);
      v8 = *(_QWORD *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v7 >= v8 >> 1)
        sub_18F9DE90C(v8 > 1, v7 + 1, 1);
      v4 += 8;
      *(_QWORD *)(v11 + 16) = v7 + 1;
      v9 = v11 + 16 * v7;
      *(_QWORD *)(v9 + 32) = v6;
      *(_QWORD *)(v9 + 40) = v5;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t sub_18FA15420@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DuplicateSetProperties.init(from:)(a1, a2);
}

unint64_t sub_18FA15434()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EE181238;
  if (!qword_1EE181238)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE181218);
    v2 = sub_18FA15498();
    result = MEMORY[0x194006D14](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE181238);
  }
  return result;
}

unint64_t sub_18FA15498()
{
  unint64_t result;

  result = qword_1EE181240;
  if (!qword_1EE181240)
  {
    result = MEMORY[0x194006D14](&protocol conformance descriptor for DuplicateCohortProperties, &type metadata for DuplicateCohortProperties);
    atomic_store(result, (unint64_t *)&qword_1EE181240);
  }
  return result;
}

char *keypath_get_selector_isAvailable()
{
  return sel_isAvailable;
}

id sub_18FA154E8@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_isAvailable);
  *a2 = (_BYTE)result;
  return result;
}

id sub_18FA15518(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIsAvailable_, *a1);
}

char *keypath_get_selector_isIgnored()
{
  return sel_isIgnored;
}

id sub_18FA15538@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_isIgnored);
  *a2 = (_BYTE)result;
  return result;
}

id sub_18FA15568(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIsIgnored_, *a1);
}

char *keypath_get_selector_primaryID()
{
  return sel_primaryID;
}

void sub_18FA15588(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_18FA03B04(a1, (SEL *)&selRef_primaryID, a2);
}

void sub_18FA155A4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_18FA03B64(a1, a2, a3, a4, (SEL *)&selRef_setPrimaryID_);
}

char *keypath_get_selector_signature()
{
  return sel_signature;
}

void sub_18FA155CC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_18FA03B04(a1, (SEL *)&selRef_signature, a2);
}

void sub_18FA155E8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_18FA03B64(a1, a2, a3, a4, (SEL *)&selRef_setSignature_);
}

char *keypath_get_selector_cohorts()
{
  return sel_cohorts;
}

id sub_18FA15610@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_cohorts);
  *a2 = result;
  return result;
}

id sub_18FA15648(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCohorts_, *a1);
}

char *keypath_get_selector_selectedContactImage()
{
  return sel_selectedContactImage;
}

id sub_18FA15668@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_selectedContactImage);
  *a2 = result;
  return result;
}

id sub_18FA156A0(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSelectedContactImage_, *a1);
}

char *keypath_get_selector_selectedContactPoster()
{
  return sel_selectedContactPoster;
}

id sub_18FA156C0@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_selectedContactPoster);
  *a2 = result;
  return result;
}

id sub_18FA156F8(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSelectedContactPoster_, *a1);
}

uint64_t destroy for DuplicateSetProperties()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DuplicateSetProperties(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_WORD *)a1 = *(_WORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DuplicateSetProperties(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DuplicateSetProperties(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DuplicateSetProperties(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DuplicateSetProperties(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DuplicateSetProperties()
{
  return &type metadata for DuplicateSetProperties;
}

uint64_t getEnumTagSinglePayload for DuplicateSetProperties.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DuplicateSetProperties.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_18FA15A24 + 4 * byte_18FA41965[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_18FA15A58 + 4 * byte_18FA41960[v4]))();
}

uint64_t sub_18FA15A58(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FA15A60(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18FA15A68);
  return result;
}

uint64_t sub_18FA15A74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18FA15A7CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_18FA15A80(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FA15A88(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DuplicateSetProperties.CodingKeys()
{
  return &type metadata for DuplicateSetProperties.CodingKeys;
}

unint64_t sub_18FA15AA8()
{
  unint64_t result;

  result = qword_1EE181248;
  if (!qword_1EE181248)
  {
    result = MEMORY[0x194006D14](&unk_18FA41ACC, &type metadata for DuplicateSetProperties.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE181248);
  }
  return result;
}

unint64_t sub_18FA15AF0()
{
  unint64_t result;

  result = qword_1EE181250;
  if (!qword_1EE181250)
  {
    result = MEMORY[0x194006D14](&unk_18FA41A04, &type metadata for DuplicateSetProperties.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE181250);
  }
  return result;
}

unint64_t sub_18FA15B38()
{
  unint64_t result;

  result = qword_1EE181258;
  if (!qword_1EE181258)
  {
    result = MEMORY[0x194006D14](&unk_18FA41A2C, &type metadata for DuplicateSetProperties.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE181258);
  }
  return result;
}

uint64_t sub_18FA15B7C()
{
  unint64_t v0;

  v0 = sub_18FA28900();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_18FA15BC4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_18FA15C08(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_18FA15C34(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v23 = MEMORY[0x1E0DEE9D8];
  sub_18F9DEC64(0, v1, 0);
  v2 = v23;
  result = sub_18FA1C084(a1);
  v6 = result;
  v7 = 0;
  v8 = a1 + 64;
  v20 = v1;
  v21 = v5;
  v22 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_24;
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v6);
    v13 = *(_QWORD *)(v23 + 16);
    v14 = *(_QWORD *)(v23 + 24);
    result = swift_bridgeObjectRetain();
    if (v13 >= v14 >> 1)
      result = sub_18F9DEC64(v14 > 1, v13 + 1, 1);
    *(_QWORD *)(v23 + 16) = v13 + 1;
    *(_QWORD *)(v23 + 8 * v13 + 32) = v12;
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = a1 + 64;
    v15 = *(_QWORD *)(v22 + 8 * v11);
    if ((v15 & (1 << v6)) == 0)
      goto LABEL_26;
    v5 = v21;
    if (*(_DWORD *)(a1 + 36) != v21)
      goto LABEL_27;
    v16 = v15 & (-2 << (v6 & 0x3F));
    if (v16)
    {
      v9 = __clz(__rbit64(v16)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v20;
    }
    else
    {
      v17 = v11 + 1;
      v18 = (unint64_t)(v9 + 63) >> 6;
      v10 = v20;
      if (v11 + 1 < v18)
      {
        v19 = *(_QWORD *)(v22 + 8 * v17);
        if (v19)
        {
LABEL_20:
          v9 = __clz(__rbit64(v19)) + (v17 << 6);
        }
        else
        {
          while (v18 - 2 != v11)
          {
            v19 = *(_QWORD *)(a1 + 80 + 8 * v11++);
            if (v19)
            {
              v17 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    v6 = v9;
    if (v7 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_18FA15E30@<X0>(unint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  unint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t i;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  int64_t v38;
  uint64_t v39;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  id v53;
  void *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  id v61;
  void *v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v69;
  char v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t result;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;

  v3 = type metadata accessor for DuplicateContacts();
  v83 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_106;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_3:
  v5 = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v6 = 0;
    v79 = v3;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v7 = (id)MEMORY[0x194005370](v6, a1);
      }
      else
      {
        if (v6 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_99;
        v7 = *(id *)(a1 + 8 * v6 + 32);
      }
      v8 = v7;
      v9 = v6 + 1;
      if (__OFADD__(v6, 1))
      {
LABEL_98:
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        __break(1u);
LABEL_101:
        __break(1u);
LABEL_102:
        __break(1u);
LABEL_103:
        __break(1u);
LABEL_104:
        __break(1u);
LABEL_105:
        __break(1u);
LABEL_106:
        swift_bridgeObjectRetain();
        v4 = sub_18FA288B8();
        goto LABEL_3;
      }
      v10 = objc_msgSend(v7, sel_downtimeWhitelist);
      if (!v10)
        break;
      v11 = v10;
      v3 = v4;
      v12 = sub_18FA2833C();
      v14 = v13;

      v15 = sub_18FA2833C();
      if (!v14)
      {
        v4 = v3;
        goto LABEL_21;
      }
      if (v12 == v15 && v14 == v16)
      {

        swift_bridgeObjectRelease_n();
        v4 = v3;
      }
      else
      {
        v18 = sub_18FA2896C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v4 = v3;
        if ((v18 & 1) == 0)
          goto LABEL_22;

      }
LABEL_6:
      ++v6;
      if (v9 == v4)
      {
        v19 = v83;
        v3 = v79;
        v5 = MEMORY[0x1E0DEE9D8];
        goto LABEL_26;
      }
    }
    sub_18FA2833C();
LABEL_21:
    swift_bridgeObjectRelease();
LABEL_22:
    sub_18FA28834();
    sub_18FA28864();
    sub_18FA28870();
    sub_18FA28840();
    goto LABEL_6;
  }
  v19 = MEMORY[0x1E0DEE9D8];
LABEL_26:
  swift_bridgeObjectRelease();
  v20 = sub_18FA1C62C(v19);
  swift_release();
  v21 = sub_18FA1997C(v20, (uint64_t (*)(char *, unint64_t, uint64_t))sub_18FA1A100);
  swift_bridgeObjectRelease();
  v22 = swift_bridgeObjectRetain();
  v23 = sub_18FA1997C(v22, (uint64_t (*)(char *, unint64_t, uint64_t))sub_18FA19DEC);
  swift_release();
  v24 = sub_18FA15C34(v23);
  swift_release();
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = v3;
  MEMORY[0x1E0C80A78](v25);
  v83 = v5;
  v26 = *(_QWORD *)(v24 + 16);
  if (v26)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v26; ++i)
    {
      v28 = *(_QWORD *)(v24 + 8 * i + 32);
      swift_bridgeObjectRetain();
      sub_18FA16E90((uint64_t)&v83, v28, (void (*)(_OWORD *__return_ptr, id))sub_18FA215B0);
      swift_bridgeObjectRelease();
    }
    swift_release();
    swift_bridgeObjectRelease_n();
    v29 = v83;
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    v29 = MEMORY[0x1E0DEE9D8];
  }
  v30 = sub_18FA1997C(v21, (uint64_t (*)(char *, unint64_t, uint64_t))sub_18FA19AD8);
  swift_release();
  v31 = sub_18FA15C34(v30);
  swift_release();
  v32 = *(_QWORD *)(v31 + 16);
  if (v32)
  {
    v82 = v29;
    swift_bridgeObjectRetain();
    v33 = 0;
    a1 = MEMORY[0x1E0DEE9D8];
    v3 = (unint64_t)&qword_1EE17EAC8;
    while (1)
    {
      v34 = swift_bridgeObjectRetain();
      v35 = sub_18FA166C8(v34);
      v36 = *(_QWORD *)(v35 + 16);
      v37 = *(_QWORD *)(a1 + 16);
      v38 = v37 + v36;
      if (__OFADD__(v37, v36))
        goto LABEL_100;
      v39 = v35;
      isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
      if ((_DWORD)isUniquelyReferenced_nonNull_native && v38 <= *(_QWORD *)(a1 + 24) >> 1)
      {
        if (*(_QWORD *)(v39 + 16))
          goto LABEL_44;
      }
      else
      {
        if (v37 <= v38)
          v41 = v37 + v36;
        else
          v41 = v37;
        a1 = (unint64_t)sub_18F9FDF20(isUniquelyReferenced_nonNull_native, v41, 1, (_QWORD *)a1);
        if (*(_QWORD *)(v39 + 16))
        {
LABEL_44:
          v42 = *(_QWORD *)(a1 + 16);
          if ((*(_QWORD *)(a1 + 24) >> 1) - v42 < v36)
            goto LABEL_103;
          v43 = a1 + 8 * v42 + 32;
          if (v39 + 32 < v43 + 8 * v36 && v43 < v39 + 32 + 8 * v36)
          {
LABEL_108:
            result = sub_18FA288F4();
            __break(1u);
            return result;
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EAC8);
          swift_arrayInitWithCopy();
          if (v36)
          {
            v45 = *(_QWORD *)(a1 + 16);
            v46 = __OFADD__(v45, v36);
            v47 = v45 + v36;
            if (v46)
              goto LABEL_105;
            *(_QWORD *)(a1 + 16) = v47;
          }
          goto LABEL_34;
        }
      }
      if (v36)
        goto LABEL_101;
LABEL_34:
      ++v33;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v32 == v33)
      {
        swift_bridgeObjectRelease();
        v29 = v82;
        goto LABEL_55;
      }
    }
  }
  a1 = MEMORY[0x1E0DEE9D8];
LABEL_55:
  swift_bridgeObjectRelease();
  v83 = v29;
  sub_18FA0E448(a1);
  a1 = v83;
  v48 = *(_QWORD *)(v83 + 16);
  if (v48)
  {
    v3 = 0;
    v49 = v83 + 32;
    v78 = *MEMORY[0x1E0D13850];
    v50 = MEMORY[0x1E0DEE9D8];
    v76 = *(_QWORD *)(v83 + 16);
    v77 = v83;
    v75 = v83 + 32;
    while (1)
    {
      if (v3 >= *(_QWORD *)(a1 + 16))
        goto LABEL_102;
      v51 = *(_QWORD *)(v49 + 8 * v3);
      if (v51 >> 62)
      {
        swift_bridgeObjectRetain_n();
        v52 = sub_18FA288B8();
        if (!v52)
        {
LABEL_86:
          swift_bridgeObjectRelease();
          goto LABEL_87;
        }
      }
      else
      {
        v52 = *(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        if (!v52)
          goto LABEL_86;
      }
      if ((v51 & 0xC000000000000001) != 0)
      {
        v53 = (id)MEMORY[0x194005370](0, v51);
      }
      else
      {
        if (!*(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_104;
        v53 = *(id *)(v51 + 32);
      }
      v54 = v53;
      swift_bridgeObjectRelease();
      v55 = objc_msgSend(v54, sel_linkIdentifier);

      if (v55)
      {
        v80 = v50;
        v56 = sub_18FA2833C();
        v58 = v57;

        if (!v78)
        {
          __break(1u);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __break(1u);
          goto LABEL_108;
        }
        v59 = (void *)sub_18FA28330();
        a1 = (*(uint64_t (**)(uint64_t, void *))(v78 + 16))(v78, v59);

        if ((_DWORD)a1)
        {
          swift_bridgeObjectRetain();
          v60 = 4;
          v81 = v52;
          while (1)
          {
            v61 = (v51 & 0xC000000000000001) != 0
                ? (id)MEMORY[0x194005370](v60 - 4, v51)
                : *(id *)(v51 + 8 * v60);
            v62 = v61;
            v63 = v60 - 3;
            if (__OFADD__(v60 - 4, 1))
              break;
            v64 = objc_msgSend(v61, sel_linkIdentifier);
            if (!v64)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              goto LABEL_82;
            }
            a1 = (unint64_t)v64;
            v65 = sub_18FA2833C();
            v67 = v66;

            if (v65 == v56 && v67 == v58)
            {

              swift_bridgeObjectRelease();
            }
            else
            {
              v69 = sub_18FA2896C();

              swift_bridgeObjectRelease();
              if ((v69 & 1) == 0)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
LABEL_82:
                v48 = v76;
                a1 = v77;
                v49 = v75;
                goto LABEL_83;
              }
            }
            ++v60;
            if (v63 == v81)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              v48 = v76;
              a1 = v77;
              v49 = v75;
              v50 = v80;
              goto LABEL_92;
            }
          }
          __break(1u);
          goto LABEL_98;
        }
        swift_bridgeObjectRelease();
        v48 = v76;
        a1 = v77;
LABEL_83:
        v50 = v80;
      }
LABEL_87:
      v70 = swift_isUniquelyReferenced_nonNull_native();
      v83 = v50;
      if ((v70 & 1) == 0)
      {
        sub_18F9DEC64(0, *(_QWORD *)(v50 + 16) + 1, 1);
        v50 = v83;
      }
      v72 = *(_QWORD *)(v50 + 16);
      v71 = *(_QWORD *)(v50 + 24);
      if (v72 >= v71 >> 1)
      {
        sub_18F9DEC64(v71 > 1, v72 + 1, 1);
        v50 = v83;
      }
      *(_QWORD *)(v50 + 16) = v72 + 1;
      *(_QWORD *)(v50 + 8 * v72 + 32) = v51;
LABEL_92:
      if (++v3 == v48)
      {
        result = swift_bridgeObjectRelease();
        goto LABEL_96;
      }
    }
  }
  result = swift_bridgeObjectRelease();
  v50 = MEMORY[0x1E0DEE9D8];
LABEL_96:
  *a2 = v50;
  return result;
}

uint64_t sub_18FA166C8(unint64_t a1)
{
  int64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t inited;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  __int128 v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v40;
  unint64_t v41;
  _QWORD *i;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  int64_t v46;
  uint64_t v47;
  _QWORD *v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v52;
  int64_t v53;
  __int128 v54;
  __int128 v55;
  _QWORD *v56;
  void *v57;
  uint64_t v58;

  v1 = a1;
  if (a1 >> 62)
  {
LABEL_69:
    swift_bridgeObjectRetain();
    v2 = sub_18FA288B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2 < 2)
    return v3;
  v56 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_18F9DECB8(0, v2, 0);
  v4 = 0;
  v52 = v1 & 0xC000000000000001;
  v53 = v1;
  do
  {
    if (v52)
      v5 = (id)MEMORY[0x194005370](v4, v1);
    else
      v5 = *(id *)(v1 + 8 * v4 + 32);
    v6 = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EB50);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_18FA40FA0;
    *(_QWORD *)(inited + 32) = v6;
    v58 = inited;
    sub_18FA2845C();
    sub_18F9E000C(0, (unint64_t *)&qword_1EE17EBD0);
    sub_18FA215B8((unint64_t *)&qword_1EE181150, (unint64_t *)&qword_1EE17EBD0);
    v8 = v6;
    v58 = sub_18FA28588();
    sub_18FA1AA08(&v57, v8, (unint64_t *)&qword_1EE17EBD0, (uint64_t)off_1E29F2008, (uint64_t *)&unk_1EE1812F0);
    v9 = v57;
    swift_bridgeObjectRelease();

    v10 = v58;
    v11 = v8;
    swift_bridgeObjectRetain();
    v12 = sub_18FA12C94();
    swift_bridgeObjectRelease();

    v13 = v56;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_18F9DECB8(0, v13[2] + 1, 1);
      v13 = v56;
    }
    v15 = v13[2];
    v14 = v13[3];
    v16 = v15 + 1;
    if (v15 >= v14 >> 1)
    {
      sub_18F9DECB8(v14 > 1, v15 + 1, 1);
      v13 = v56;
    }
    ++v4;
    v13[2] = v16;
    v17 = &v13[2 * v15];
    v17[4] = v10;
    v17[5] = v12;
    v1 = v53;
  }
  while (v2 != v4);
  v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_15:
  while (1)
  {
    v19 = v16;
    if (v16)
      break;
    swift_bridgeObjectRelease();
    v16 = v18[2];
    v13 = v18;
    if (!v16)
    {
      v33 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      goto LABEL_49;
    }
  }
  v20 = v13 + 4;
  swift_bridgeObjectRetain();
  v21 = 0;
  v22 = v18;
  while (1)
  {
    v25 = v22[2];
    v26 = v20[2 * v21 + 1];
    v54 = *(_OWORD *)&v20[2 * v21];
    if (v25)
      break;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_28:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v22 = sub_18F9FE56C(0, v22[2] + 1, 1, v22);
    v30 = v22[2];
    v29 = v22[3];
    v31 = v54;
    if (v30 >= v29 >> 1)
    {
      v32 = sub_18F9FE56C((_QWORD *)(v29 > 1), v30 + 1, 1, v22);
      v31 = v54;
      v22 = v32;
    }
    v22[2] = v30 + 1;
    *(_OWORD *)&v22[2 * v30 + 4] = v31;
LABEL_17:
    swift_bridgeObjectRelease();
    ++v21;
    swift_bridgeObjectRelease();
    if (v21 == v19)
    {
      swift_bridgeObjectRelease_n();
      v16 = v22[2];
      v13 = v22;
      v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      if (v19 == v16)
        goto LABEL_36;
      goto LABEL_15;
    }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v27 = 0;
  v28 = 5;
  while (1)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v22 = sub_18FA0C448(v22);
    if (v27 >= v22[2])
      break;
    if (*(_QWORD *)(v26 + 16) && (sub_18FA13038(v26, v22[v28]) & 1) == 0)
    {
      v23 = swift_bridgeObjectRetain();
      sub_18FA1297C(v23);
      v24 = swift_bridgeObjectRetain();
      sub_18FA12810(v24);
      goto LABEL_17;
    }
    ++v27;
    v28 += 2;
    if (v25 == v27)
      goto LABEL_28;
  }
  __break(1u);
LABEL_36:
  v34 = 0;
  v33 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v35 = &v22[2 * v34];
    v36 = v35[4];
    v55 = *((_OWORD *)v35 + 2);
    if ((v36 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v37 = sub_18FA28750();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v37 < 2)
        goto LABEL_37;
    }
    else
    {
      v38 = *(_QWORD *)(v36 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v38 < 2)
      {
LABEL_37:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_38;
      }
    }
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v56 = v33;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_18F9DECB8(0, v33[2] + 1, 1);
      v33 = v56;
    }
    v41 = v33[2];
    v40 = v33[3];
    if (v41 >= v40 >> 1)
    {
      sub_18F9DECB8(v40 > 1, v41 + 1, 1);
      v33 = v56;
    }
    v33[2] = v41 + 1;
    *(_OWORD *)&v33[2 * v41 + 4] = v55;
LABEL_38:
    ++v34;
  }
  while (v19 != v34);
  v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_49:
  swift_bridgeObjectRelease();
  v1 = v33[2];
  if (v1)
  {
    v58 = (uint64_t)v18;
    sub_18F9DEC64(0, v1, 0);
    v3 = v58;
    for (i = v33 + 5; ; i += 2)
    {
      v43 = *(i - 1);
      if ((v43 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        v44 = sub_18FA28750();
        if (!v44)
          goto LABEL_58;
      }
      else
      {
        v44 = *(_QWORD *)(v43 + 16);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        if (!v44)
        {
LABEL_58:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          v45 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          goto LABEL_62;
        }
      }
      if (v44 < 1)
      {
        v45 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EB50);
        v45 = (_QWORD *)swift_allocObject();
        v46 = _swift_stdlib_malloc_size(v45);
        v47 = v46 - 32;
        if (v46 < 32)
          v47 = v46 - 25;
        v45[2] = v44;
        v45[3] = (2 * (v47 >> 3)) | 1;
      }
      swift_bridgeObjectRetain();
      v48 = sub_18FA0FA00(&v56, v45 + 4, v44, v43);
      sub_18F9DFFC4();
      if (v48 != (_QWORD *)v44)
      {
        __break(1u);
        goto LABEL_69;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
LABEL_62:
      v58 = v3;
      v50 = *(_QWORD *)(v3 + 16);
      v49 = *(_QWORD *)(v3 + 24);
      if (v50 >= v49 >> 1)
      {
        sub_18F9DEC64(v49 > 1, v50 + 1, 1);
        v3 = v58;
      }
      *(_QWORD *)(v3 + 16) = v50 + 1;
      *(_QWORD *)(v3 + 8 * v50 + 32) = v45;
      if (!--v1)
      {
        swift_release();
        return v3;
      }
    }
  }
  swift_release();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_18FA16DF8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v7)(uint64_t *);
  uint64_t v8;

  if (a3 == a4)
  {
    return 0;
  }
  else
  {
    v5 = a3;
    if (a4 >= a3)
    {
      v7 = (uint64_t (*)(uint64_t *))result;
      while (v5 < a4)
      {
        v8 = v5;
        result = v7(&v8);
        if (v4 || (result & 1) != 0)
          return v5;
        if (a4 == ++v5)
          return 0;
      }
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_18FA16E90(uint64_t result, unint64_t a2, void (*a3)(_OWORD *__return_ptr, id))
{
  _QWORD **v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v5 = (_QWORD **)result;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_18FA288B8();
    result = swift_bridgeObjectRelease();
    if (v6 < 2)
      return result;
  }
  else
  {
    v6 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v6 < 2)
      return result;
  }
  v7 = swift_bridgeObjectRetain();
  v8 = sub_18FA1CA68(v7, a3);
  if (*(_QWORD *)(v8 + 16) == 1)
    goto LABEL_8;
  v9 = sub_18FA166C8(a2);
  v10 = v9;
  if (*(_QWORD *)(v9 + 16) == 1)
  {
    v11 = *(_QWORD *)(v9 + 32);
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      v16 = sub_18FA288B8();
      swift_bridgeObjectRelease();
      if (v16 == v6)
        goto LABEL_7;
    }
    else if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10) == v6)
    {
LABEL_7:
      swift_bridgeObjectRelease();
LABEL_8:
      swift_bridgeObjectRelease();
      v12 = *v5;
      swift_bridgeObjectRetain();
      result = swift_isUniquelyReferenced_nonNull_native();
      v13 = v5;
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_18F9FDF20(0, v12[2] + 1, 1, v12);
        v12 = (_QWORD *)result;
      }
      v15 = v12[2];
      v14 = v12[3];
      if (v15 >= v14 >> 1)
      {
        result = (uint64_t)sub_18F9FDF20((_QWORD *)(v14 > 1), v15 + 1, 1, v12);
        v12 = (_QWORD *)result;
      }
      v12[2] = v15 + 1;
      v12[v15 + 4] = a2;
      *v13 = v12;
      return result;
    }
  }
  v30 = sub_18F9E3C64(v8);
  sub_18FA0E448(v10);
  if (!*(_QWORD *)(v30 + 16))
    return swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v18 = sub_18FA1D210(MEMORY[0x1E0DEE9D8], a2);
  swift_bridgeObjectRelease_n();
  v19 = *(_QWORD *)(v18 + 16);
  if (v19)
  {
    v31 = (uint64_t)v17;
    sub_18F9DEC64(0, v19, 0);
    v20 = 0;
    v21 = (uint64_t)v17;
    while (1)
    {
      v22 = *(_QWORD *)(v18 + 8 * v20 + 32);
      if ((v22 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v23 = sub_18FA28750();
        if (!v23)
          goto LABEL_27;
      }
      else
      {
        v23 = *(_QWORD *)(v22 + 16);
        swift_bridgeObjectRetain();
        if (!v23)
        {
LABEL_27:
          swift_bridgeObjectRelease();
          v24 = v17;
          goto LABEL_31;
        }
      }
      if (v23 < 1)
      {
        v24 = v17;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EB50);
        v24 = (_QWORD *)swift_allocObject();
        v25 = _swift_stdlib_malloc_size(v24);
        v26 = v25 - 32;
        if (v25 < 32)
          v26 = v25 - 25;
        v24[2] = v23;
        v24[3] = (2 * (v26 >> 3)) | 1;
      }
      swift_bridgeObjectRetain();
      v27 = sub_18FA0FA00(&v30, v24 + 4, v23, v22);
      result = sub_18F9DFFC4();
      if (v27 != (_QWORD *)v23)
      {
        __break(1u);
        return result;
      }
      swift_bridgeObjectRelease();
LABEL_31:
      v31 = v21;
      v29 = *(_QWORD *)(v21 + 16);
      v28 = *(_QWORD *)(v21 + 24);
      if (v29 >= v28 >> 1)
      {
        sub_18F9DEC64(v28 > 1, v29 + 1, 1);
        v21 = v31;
      }
      ++v20;
      *(_QWORD *)(v21 + 16) = v29 + 1;
      *(_QWORD *)(v21 + 8 * v29 + 32) = v24;
      if (v19 == v20)
      {
        swift_bridgeObjectRelease();
        return sub_18FA0E448(v21);
      }
    }
  }
  swift_bridgeObjectRelease();
  v21 = MEMORY[0x1E0DEE9D8];
  return sub_18FA0E448(v21);
}

void sub_18FA17260(unint64_t *a1, void *a2)
{
  unint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  void *v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  char v21;
  char v22;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v24;
  unint64_t v25;
  id v26;
  unint64_t v28;
  unint64_t v29;

  v4 = a2;
  v5 = swift_bridgeObjectRetain();
  sub_18FA1CDC8(v5);
  v7 = v6;
  v8 = v2;
  swift_bridgeObjectRelease();

  v29 = MEMORY[0x1E0DEE9D8];
  v9 = *(_QWORD **)(v7 + 16);
  if (v9)
  {
    v26 = v4;
    v10 = v7 + 32;
    swift_bridgeObjectRetain();
    v11 = 0;
    while (1)
    {
      v13 = *(_QWORD *)(v10 + 8 * v11);
      if (v13 >> 62)
      {
        swift_bridgeObjectRetain();
        v14 = sub_18FA288B8();
        if (!v14)
        {
LABEL_3:
          swift_bridgeObjectRelease();
          v12 = MEMORY[0x1E0DEE9D8];
          goto LABEL_4;
        }
      }
      else
      {
        v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v14)
          goto LABEL_3;
      }
      v28 = MEMORY[0x1E0DEE9D8];
      v15 = &v28;
      sub_18FA28858();
      if (v14 < 0)
      {
        __break(1u);
LABEL_30:
        v11 = (unint64_t)sub_18FA0C45C((_QWORD *)v11);
        if ((v8 & 0x8000000000000000) != 0)
          goto LABEL_31;
LABEL_22:
        if (v8 < *(_QWORD *)(v11 + 16))
        {
          sub_18FA1297C((unint64_t)v3);
          v15 = a1;
          goto LABEL_28;
        }
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      if ((v13 & 0xC000000000000001) != 0)
      {
        v16 = 0;
        do
        {
          v8 = v16 + 1;
          v3 = (id)MEMORY[0x194005370]();
          sub_18FA28834();
          sub_18FA28864();
          sub_18FA28870();
          sub_18FA28840();
          v16 = v8;
        }
        while (v14 != v8);
      }
      else
      {
        v8 = v13 + 32;
        do
        {
          v17 = *(void **)v8;
          v8 += 8;
          v3 = v17;
          sub_18FA28834();
          sub_18FA28864();
          sub_18FA28870();
          sub_18FA28840();
          --v14;
        }
        while (v14);
      }
      v12 = v28;
      swift_bridgeObjectRelease();
LABEL_4:
      ++v11;
      sub_18FA0E5B4(v12);
      if ((_QWORD *)v11 == v9)
      {
        swift_bridgeObjectRelease_n();
        v18 = v29;
        v4 = v26;
        v15 = a1;
        goto LABEL_19;
      }
    }
  }
  swift_bridgeObjectRelease();
  v18 = MEMORY[0x1E0DEE9D8];
  v15 = a1;
LABEL_19:
  v3 = (id)sub_18FA1C154(v18, (unint64_t *)&qword_1EE17EBD0, (uint64_t)off_1E29F2008, (unint64_t *)&qword_1EE181150, (uint64_t *)&unk_1EE1812F0);
  swift_bridgeObjectRelease();
  v11 = *v15;
  v19 = v4;
  v20 = swift_bridgeObjectRetain();
  v8 = sub_18FA1D050(v20, v19);
  v22 = v21;
  swift_bridgeObjectRelease();

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((v22 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      goto LABEL_30;
    if ((v8 & 0x8000000000000000) == 0)
      goto LABEL_22;
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
LABEL_33:
    v11 = (unint64_t)sub_18F9FE678(0, *(_QWORD *)(v11 + 16) + 1, 1, (_QWORD *)v11);
  v25 = *(_QWORD *)(v11 + 16);
  v24 = *(_QWORD *)(v11 + 24);
  if (v25 >= v24 >> 1)
    v11 = (unint64_t)sub_18F9FE678((_QWORD *)(v24 > 1), v25 + 1, 1, (_QWORD *)v11);
  *(_QWORD *)(v11 + 16) = v25 + 1;
  *(_QWORD *)(v11 + 8 * v25 + 32) = v3;
LABEL_28:
  *v15 = v11;
}

uint64_t sub_18FA175AC()
{
  uint64_t v0;

  v0 = sub_18FA28204();
  __swift_allocate_value_buffer(v0, qword_1EE183588);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EE183588);
  return sub_18FA281F8();
}

uint64_t sub_18FA17680()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v7;

  v1 = OBJC_IVAR___CNDuplicateContactsManager_findResult;
  if (*(_QWORD *)(v0 + OBJC_IVAR___CNDuplicateContactsManager_findResult))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR___CNDuplicateContactsManager_findResult);
  }
  else
  {
    v3 = (_QWORD *)(v0 + OBJC_IVAR___CNDuplicateContactsManager_mergeResult);
    v4 = *(_QWORD *)(v0 + OBJC_IVAR___CNDuplicateContactsManager_mergeResult);
    v3[1] = 0;
    v3[2] = 0;
    *v3 = 0;
    sub_18FA1773C(v4);
    v5 = swift_bridgeObjectRetain();
    sub_18FA15E30(v5, &v7);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + v1) = v7;
    swift_bridgeObjectRelease();
    v2 = *(_QWORD *)(v0 + v1);
    if (v2)
      swift_bridgeObjectRetain();
    else
      v2 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_18FA1773C(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

id DuplicateContactsManager.__allocating_init(withContactStore:)(uint64_t a1)
{
  objc_class *v1;
  _BYTE *v3;
  _QWORD *v4;
  objc_super v6;

  v3 = objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR___CNDuplicateContactsManager_contacts] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v3[OBJC_IVAR___CNDuplicateContactsManager_findResult] = 0;
  v4 = &v3[OBJC_IVAR___CNDuplicateContactsManager_mergeResult];
  v4[1] = 0;
  v4[2] = 0;
  *v4 = 0;
  v3[OBJC_IVAR___CNDuplicateContactsManager_didPerformMerge] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___CNDuplicateContactsManager_contactStore] = a1;
  v6.receiver = v3;
  v6.super_class = v1;
  return objc_msgSendSuper2(&v6, sel_init);
}

id DuplicateContactsManager.init(withContactStore:)(uint64_t a1)
{
  _BYTE *v1;
  _QWORD *v2;
  objc_super v4;

  *(_QWORD *)&v1[OBJC_IVAR___CNDuplicateContactsManager_contacts] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v1[OBJC_IVAR___CNDuplicateContactsManager_findResult] = 0;
  v2 = &v1[OBJC_IVAR___CNDuplicateContactsManager_mergeResult];
  v2[1] = 0;
  v2[2] = 0;
  *v2 = 0;
  v1[OBJC_IVAR___CNDuplicateContactsManager_didPerformMerge] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___CNDuplicateContactsManager_contactStore] = a1;
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for DuplicateContactsManager();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for DuplicateContactsManager()
{
  return objc_opt_self();
}

void sub_18FA17930(id *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  void *v4;
  void *v5;
  uint64_t *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t *v24;
  id v25;
  uint64_t *v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void *v37;
  void *v38;
  _QWORD *v39;
  uint64_t v40;
  unint64_t v41;
  id v42;
  id v43[5];

  v5 = v4;
  v43[4] = *(id *)MEMORY[0x1E0C80C00];
  v9 = (uint64_t *)*a1;
  v10 = objc_msgSend(*a1, sel_identifier);
  if (!v10)
  {
    sub_18FA2833C();
    v10 = (id)sub_18FA28330();
    swift_bridgeObjectRelease();
  }
  v11 = objc_msgSend((id)objc_opt_self(), sel_predicateForContactsInContainerWithIdentifier_, v10);

  objc_msgSend(a2, sel_setPredicate_, v11);
  v12 = *(void **)(a3 + OBJC_IVAR___CNDuplicateContactsManager_contactStore);
  v43[0] = 0;
  v13 = objc_msgSend(v12, sel_executeFetchRequest_error_, a2, v43);
  if (!v13)
  {
    v22 = v43[0];
    v5 = (void *)sub_18FA28030();

    swift_willThrow();
    if (qword_1EE17E9C8 == -1)
    {
LABEL_14:
      v23 = sub_18FA28204();
      __swift_project_value_buffer(v23, (uint64_t)qword_1EE183588);
      v24 = v9;
      v25 = v5;
      v26 = v24;
      v27 = v5;
      v28 = sub_18FA281EC();
      v29 = sub_18FA28648();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = swift_slowAlloc();
        v38 = (void *)swift_slowAlloc();
        v43[0] = v38;
        *(_DWORD *)v30 = 136315394;
        v31 = objc_msgSend(v26, sel_identifier);
        v39 = a4;
        v32 = sub_18FA2833C();
        v34 = v33;

        v42 = (id)sub_18F9DE1F0(v32, v34, (uint64_t *)v43);
        sub_18FA286E4();

        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 12) = 2080;
        swift_getErrorValue();
        v35 = sub_18FA289CC();
        v42 = (id)sub_18F9DE1F0(v35, v36, (uint64_t *)v43);
        a4 = v39;
        sub_18FA286E4();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_18F8BD000, v28, v29, "Duplicate contacts manager could not load contacts for containers %s. %s", (uint8_t *)v30, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x194006DBC](v38, -1, -1);
        MEMORY[0x194006DBC](v30, -1, -1);
      }
      else
      {

      }
      goto LABEL_20;
    }
LABEL_23:
    swift_once();
    goto LABEL_14;
  }
  v14 = v13;
  v15 = v43[0];
  v42 = objc_msgSend(v14, sel_value);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE17EBC0);
  swift_dynamicCast();
  v16 = v41;
  if (!(v41 >> 62))
  {
    v17 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v17)
      goto LABEL_6;
LABEL_19:
    swift_bridgeObjectRelease();

LABEL_20:
    v21 = MEMORY[0x1E0DEE9D8];
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  v17 = sub_18FA288B8();
  swift_bridgeObjectRelease();
  if (!v17)
    goto LABEL_19;
LABEL_6:
  v40 = MEMORY[0x1E0DEE9D8];
  v9 = &v40;
  sub_18FA28858();
  if (v17 < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  v37 = v14;
  v18 = 0;
  do
  {
    if ((v16 & 0xC000000000000001) != 0)
      v19 = (id)MEMORY[0x194005370](v18, v16);
    else
      v19 = *(id *)(v16 + 8 * v18 + 32);
    v20 = v19;
    ++v18;
    objc_msgSend(v19, sel_mutableCopy, v37);
    sub_18FA28720();
    swift_unknownObjectRelease();
    sub_18F9E000C(0, (unint64_t *)&qword_1EE17EBD0);
    swift_dynamicCast();

    sub_18FA28834();
    sub_18FA28864();
    sub_18FA28870();
    sub_18FA28840();
  }
  while (v17 != v18);
  v21 = v40;
  swift_bridgeObjectRelease();

LABEL_21:
  *a4 = v21;
}

void sub_18FA17E68(void **a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  unint64_t v6;
  void (**v7)(char *, uint64_t, unint64_t);
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t i;
  id v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  void (**v26)(char *, uint64_t, unint64_t);
  id v27;
  void (**v28)(char *, uint64_t, unint64_t);
  id v29;
  void (**v30)(char *, uint64_t, unint64_t);
  NSObject *v31;
  int v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  os_log_t v41;
  void *v42;
  void *v43;
  int v44;
  os_log_t v45;
  _QWORD *v46;
  void (**v47)(char *, uint64_t, unint64_t);
  uint64_t v48;
  id v49[2];

  v49[1] = *(id *)MEMORY[0x1E0C80C00];
  v6 = sub_18FA28204();
  v7 = *(void (***)(char *, uint64_t, unint64_t))(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v11 = (void *)objc_opt_self();
  v12 = objc_msgSend(v10, sel_identifier);
  v13 = objc_msgSend(v11, sel_predicateForContainersInAccountWithIdentifier_, v12);

  v14 = *(void **)(a2 + OBJC_IVAR___CNDuplicateContactsManager_contactStore);
  v49[0] = 0;
  v15 = objc_msgSend(v14, sel_containersMatchingPredicate_error_, v13, v49);
  v16 = v49[0];
  if (!v15)
  {
    v47 = v7;
    v24 = v49[0];
    v7 = (void (**)(char *, uint64_t, unint64_t))sub_18FA28030();

    swift_willThrow();
    if (qword_1EE17E9C8 == -1)
      goto LABEL_15;
    goto LABEL_25;
  }
  v17 = v15;
  sub_18F9E000C(0, &qword_1EE17EAD0);
  v6 = sub_18FA28444();
  v18 = v16;

  v49[0] = (id)MEMORY[0x1E0DEE9D8];
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    v19 = sub_18FA288B8();
    swift_bridgeObjectRelease();
    if (v19)
      goto LABEL_4;
LABEL_21:
    swift_bridgeObjectRelease();
    v23 = (id)MEMORY[0x1E0DEE9D8];
LABEL_22:

    goto LABEL_23;
  }
  v19 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v19)
    goto LABEL_21;
LABEL_4:
  if (v19 >= 1)
  {
    v46 = a3;
    for (i = 0; i != v19; ++i)
    {
      if ((v6 & 0xC000000000000001) != 0)
        v21 = (id)MEMORY[0x194005370](i, v6);
      else
        v21 = *(id *)(v6 + 8 * i + 32);
      v22 = v21;
      if ((objc_msgSend(v21, sel_isGuardianRestricted) & 1) != 0)
      {

      }
      else
      {
        sub_18FA28834();
        sub_18FA28864();
        sub_18FA28870();
        sub_18FA28840();
      }
    }
    swift_bridgeObjectRelease();
    v23 = v49[0];
    a3 = v46;
    goto LABEL_22;
  }
  __break(1u);
LABEL_25:
  swift_once();
LABEL_15:
  v25 = __swift_project_value_buffer(v6, (uint64_t)qword_1EE183588);
  v26 = v47;
  v47[2](v9, v25, v6);
  v27 = v10;
  v28 = v7;
  v29 = v27;
  v30 = v7;
  v31 = sub_18FA281EC();
  v32 = sub_18FA28648();
  if (!os_log_type_enabled(v31, (os_log_type_t)v32))
  {

    ((void (*)(char *, unint64_t))v26[1])(v9, v6);
    goto LABEL_19;
  }
  v44 = v32;
  v45 = v31;
  v46 = a3;
  v33 = swift_slowAlloc();
  v43 = (void *)swift_slowAlloc();
  v49[0] = v43;
  *(_DWORD *)v33 = 136315394;
  v34 = objc_msgSend(v29, sel_identifier);
  if (v34)
  {
    v35 = v34;
    v36 = sub_18FA2833C();
    v38 = v37;

    v48 = sub_18F9DE1F0(v36, v38, (uint64_t *)v49);
    sub_18FA286E4();

    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2080;
    swift_getErrorValue();
    v39 = sub_18FA289CC();
    v48 = sub_18F9DE1F0(v39, v40, (uint64_t *)v49);
    sub_18FA286E4();
    swift_bridgeObjectRelease();

    v41 = v45;
    _os_log_impl(&dword_18F8BD000, v45, (os_log_type_t)v44, "Duplicate contacts manager could not load contact containers for account %s. %s", (uint8_t *)v33, 0x16u);
    v42 = v43;
    swift_arrayDestroy();
    MEMORY[0x194006DBC](v42, -1, -1);
    MEMORY[0x194006DBC](v33, -1, -1);

    ((void (*)(char *, unint64_t))v47[1])(v9, v6);
    a3 = v46;
LABEL_19:

    v23 = (id)MEMORY[0x1E0DEE9D8];
LABEL_23:
    *a3 = v23;
    return;
  }

  __break(1u);
}

uint64_t sub_18FA18384()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24[4];
  uint64_t v25;
  id v26[5];

  v26[4] = *(id *)MEMORY[0x1E0C80C00];
  v1 = *(void **)(v0 + OBJC_IVAR___CNDuplicateContactsManager_contactStore);
  v26[0] = 0;
  v2 = objc_msgSend(v1, sel_accountsMatchingPredicate_error_, 0, v26);
  v3 = v26[0];
  if (v2)
  {
    v4 = v2;
    v5 = sub_18FA28444();
    v6 = v3;

    v7 = MEMORY[0x1E0DEE9D8];
    v23 = MEMORY[0x1E0DEE9D8];
    v8 = *(_QWORD *)(v5 + 16);
    if (v8)
    {
      v9 = v5 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_18F9DFCEC(v9, (uint64_t)v26);
        sub_18F9DFCEC((uint64_t)v26, (uint64_t)v24);
        sub_18F9E000C(0, &qword_1EE17EB00);
        if ((swift_dynamicCast() & 1) == 0)
          v25 = 0;
        v10 = __swift_destroy_boxed_opaque_existential_0((uint64_t)v26);
        if (v25)
        {
          MEMORY[0x194004F98](v10);
          if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_18FA28474();
          sub_18FA284BC();
          sub_18FA2845C();
        }
        v9 += 32;
        --v8;
      }
      while (v8);
      swift_bridgeObjectRelease();
      v7 = v23;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = v26[0];
    v12 = (void *)sub_18FA28030();

    swift_willThrow();
    if (qword_1EE17E9C8 != -1)
      swift_once();
    v13 = sub_18FA28204();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EE183588);
    v14 = v12;
    v15 = v12;
    v16 = sub_18FA281EC();
    v17 = sub_18FA28648();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = (void *)swift_slowAlloc();
      v26[0] = v19;
      *(_DWORD *)v18 = 136315138;
      swift_getErrorValue();
      v20 = sub_18FA289CC();
      v24[0] = sub_18F9DE1F0(v20, v21, (uint64_t *)v26);
      sub_18FA286E4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_18F8BD000, v16, v17, "Duplicate contacts manager could not load accounts %s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x194006DBC](v19, -1, -1);
      MEMORY[0x194006DBC](v18, -1, -1);
    }
    else
    {

    }
    return MEMORY[0x1E0DEE9D8];
  }
  return v7;
}

uint64_t sub_18FA1880C(const void *a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = _Block_copy(a1);
  return swift_task_switch();
}

uint64_t sub_18FA18848()
{
  uint64_t v0;
  void (**v1)(_QWORD, _QWORD, _QWORD);
  uint64_t v2;
  uint64_t v3;

  if (qword_1EE17E9D0 != -1)
    swift_once();
  v1 = *(void (***)(_QWORD, _QWORD, _QWORD))(v0 + 16);
  v2 = sub_18F9DD844();
  v1[2](v1, v2, v3);
  _Block_release(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18FA188CC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  __int128 v21;
  uint64_t v22;

  v2 = v1;
  v4 = OBJC_IVAR___CNDuplicateContactsManager_findResult;
  v5 = *(_QWORD *)(v1 + OBJC_IVAR___CNDuplicateContactsManager_findResult);
  if (v5)
  {
    v6 = v5;
  }
  else
  {
    v7 = (_QWORD *)(v2 + OBJC_IVAR___CNDuplicateContactsManager_mergeResult);
    v8 = *(_QWORD *)(v2 + OBJC_IVAR___CNDuplicateContactsManager_mergeResult);
    v7[1] = 0;
    v7[2] = 0;
    *v7 = 0;
    sub_18FA1773C(v8);
    v9 = swift_bridgeObjectRetain();
    sub_18FA15E30(v9, (unint64_t *)&v21);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + v4) = v21;
    swift_bridgeObjectRelease();
    v6 = *(_QWORD *)(v2 + v4);
    if (v6)
      swift_bridgeObjectRetain();
    else
      v6 = MEMORY[0x1E0DEE9D8];
  }
  v10 = *(_QWORD *)(v6 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!v10)
    return v10 != 0;
  type metadata accessor for DuplicateContacts();
  v11 = sub_18FA17680();
  v12 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), sel_init);
  sub_18F9E2A74(v11, v12, (uint64_t *)&v21);
  swift_bridgeObjectRelease();

  v13 = v22;
  v14 = (uint64_t *)(v2 + OBJC_IVAR___CNDuplicateContactsManager_mergeResult);
  v15 = *(_QWORD *)(v2 + OBJC_IVAR___CNDuplicateContactsManager_mergeResult);
  *(_OWORD *)v14 = v21;
  v14[2] = v13;
  result = sub_18FA1773C(v15);
  v17 = *v14;
  if (*v14)
  {
    v20 = v14 + 1;
    v19 = v14[1];
    v18 = v20[1];
    *(_QWORD *)&v21 = v17;
    *((_QWORD *)&v21 + 1) = v19;
    v22 = v18;
    sub_18FA1D33C(v17);
    sub_18F9EB868((uint64_t *)&v21, a1);
    sub_18FA1773C(v17);
    *(_BYTE *)(v2 + OBJC_IVAR___CNDuplicateContactsManager_didPerformMerge) = 1;
    return v10 != 0;
  }
  __break(1u);
  return result;
}

void static DuplicateContactsManager.refreshManagedDuplicates(completionHandler:)(void (*a1)(_QWORD), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  const char *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  Swift::String v19;
  id v20;
  id v21;
  id v22;
  _QWORD *v23;
  void *v24;
  id v25;
  uint64_t v26;
  id v27;
  _QWORD aBlock[6];

  v3 = v2;
  v27 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), sel_init);
  if (!sub_18FA1DDC8(v27))
  {
    if (qword_1EE17E9C8 != -1)
      swift_once();
    v11 = sub_18FA28204();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EE183588);
    v12 = sub_18FA281EC();
    v13 = sub_18FA28630();
    if (!os_log_type_enabled(v12, v13))
      goto LABEL_18;
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    v15 = "Will defer duplicates analysis while in process.";
    goto LABEL_17;
  }
  v6 = objc_msgSend(v27, sel_currentHistoryToken);
  if (v6)
  {
    v7 = v6;
    v8 = sub_18FA280A8();
    v10 = v9;

  }
  else
  {
    v8 = 0;
    v10 = 0xC000000000000000;
  }
  v16 = sub_18FA2809C();
  v18 = v17;
  sub_18F9EA8A4(v8, v10);
  if (qword_1EE17E9D0 != -1)
    swift_once();
  v19._countAndFlagsBits = v16;
  v19._object = v18;
  if (ManagedDuplicateStore.willRefresh(token:)(v19))
  {
    v20 = objc_msgSend((id)objc_opt_self(), sel_currentEnvironment);
    v21 = objc_msgSend(v20, sel_schedulerProvider);

    v22 = objc_msgSend(v21, sel_backgroundScheduler);
    swift_unknownObjectRelease();
    v23 = (_QWORD *)swift_allocObject();
    v23[2] = v27;
    v23[3] = v16;
    v23[4] = v18;
    v23[5] = a1;
    v23[6] = a2;
    v23[7] = v3;
    aBlock[4] = sub_18FA1DFA8;
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_18FA15C08;
    aBlock[3] = &block_descriptor_3;
    v24 = _Block_copy(aBlock);
    v25 = v27;
    swift_retain();
    swift_release();
    objc_msgSend(v22, sel_performBlock_, v24);
    _Block_release(v24);

    swift_unknownObjectRelease();
    return;
  }
  swift_bridgeObjectRelease();
  if (qword_1EE17E9C8 != -1)
    swift_once();
  v26 = sub_18FA28204();
  __swift_project_value_buffer(v26, (uint64_t)qword_1EE183588);
  v12 = sub_18FA281EC();
  v13 = sub_18FA2863C();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    v15 = "ManagedDuplicates are already up to date. Exiting";
LABEL_17:
    _os_log_impl(&dword_18F8BD000, v12, v13, v15, v14, 2u);
    MEMORY[0x194006DBC](v14, -1, -1);
  }
LABEL_18:

  a1(0);
}

uint64_t sub_18FA18EB4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v7;
  char v9;
  uint64_t inited;
  unint64_t v11;

  sub_18FA1E38C(a1);
  if (qword_1EE17E9D0 != -1)
    swift_once();
  if (sub_18FA0D13C(1) == a2 && v7 == a3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = sub_18FA2896C();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0)
      return a4(1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EB20);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FA40F90;
  strcpy((char *)(inited + 32), "currentToken");
  *(_BYTE *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = a2;
  *(_QWORD *)(inited + 56) = a3;
  swift_bridgeObjectRetain_n();
  v11 = sub_18FA13D08(inited);
  sub_18FA0D07C(v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a4(1);
}

void static DuplicateContactsManager.performRefreshManagedDuplicates(with:)(uint64_t *a1)
{
  sub_18FA1E38C(a1);
}

uint64_t sub_18FA192F8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  sub_18FA28444();
  a4();
  return swift_bridgeObjectRelease();
}

id DuplicateContactsManager.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void DuplicateContactsManager.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DuplicateContactsManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DuplicateContactsManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_18FA19438(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  BOOL v23;
  uint64_t v24;
  unint64_t i;
  uint64_t v26;
  _QWORD *v27;
  BOOL v28;
  uint64_t v29;
  int64_t v30;
  int64_t v31;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v29 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(result + 56);
  v30 = (unint64_t)(v4 + 63) >> 6;
  v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v31 = v3;
      v9 = v8 | (v3 << 6);
      goto LABEL_26;
    }
    v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v10 >= v30)
      return 1;
    v11 = *(_QWORD *)(v29 + 8 * v10);
    v12 = v3 + 1;
    if (!v11)
    {
      v12 = v3 + 2;
      if (v3 + 2 >= v30)
        return 1;
      v11 = *(_QWORD *)(v29 + 8 * v12);
      if (!v11)
      {
        v12 = v3 + 3;
        if (v3 + 3 >= v30)
          return 1;
        v11 = *(_QWORD *)(v29 + 8 * v12);
        if (!v11)
        {
          v12 = v3 + 4;
          if (v3 + 4 >= v30)
            return 1;
          v11 = *(_QWORD *)(v29 + 8 * v12);
          if (!v11)
            break;
        }
      }
    }
LABEL_25:
    v6 = (v11 - 1) & v11;
    v31 = v12;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_26:
    v14 = result;
    v15 = (uint64_t *)(*(_QWORD *)(result + 48) + 16 * v9);
    v17 = *v15;
    v16 = v15[1];
    sub_18FA28A08();
    swift_bridgeObjectRetain();
    sub_18FA28390();
    v18 = sub_18FA28A14();
    v19 = -1 << *(_BYTE *)(a2 + 32);
    v20 = v18 & ~v19;
    if (((*(_QWORD *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
      goto LABEL_41;
    v21 = *(_QWORD *)(a2 + 48);
    v22 = (_QWORD *)(v21 + 16 * v20);
    v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_18FA2896C() & 1) == 0)
    {
      v24 = ~v19;
      for (i = v20 + 1; ; i = v26 + 1)
      {
        v26 = i & v24;
        if (((*(_QWORD *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0)
          break;
        v27 = (_QWORD *)(v21 + 16 * v26);
        v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_18FA2896C() & 1) != 0)
          goto LABEL_7;
      }
LABEL_41:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    result = v14;
    v3 = v31;
  }
  v13 = v3 + 5;
  if (v3 + 5 >= v30)
    return 1;
  v11 = *(_QWORD *)(v29 + 8 * v13);
  if (v11)
  {
    v12 = v3 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v12 >= v30)
      return 1;
    v11 = *(_QWORD *)(v29 + 8 * v12);
    ++v13;
    if (v11)
      goto LABEL_25;
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_18FA196D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_18F9F9858;
  return v6();
}

uint64_t sub_18FA1972C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_18F9F9858;
  return v7();
}

uint64_t sub_18FA19780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_18FA28564();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_18FA28558();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_18F9DFD58(a1, &qword_1EE17EE20);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_18FA2851C();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_18FA198CC(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_18FA19930;
  return v6(a1);
}

uint64_t sub_18FA19930()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_18FA1997C(uint64_t isStackAllocationSafe, uint64_t (*a2)(char *, unint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  unint64_t v7;
  size_t v8;
  uint64_t v9;
  void *v10;
  _QWORD v12[2];

  v4 = v2;
  v5 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x1E0C80C00];
  v6 = *(_BYTE *)(isStackAllocationSafe + 32);
  v7 = (unint64_t)((1 << v6) + 63) >> 6;
  v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    v9 = a2((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, v5);
    if (v2)
      swift_willThrow();
    else
      return v9;
  }
  else
  {
    v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    v4 = a2((char *)v10, v7, v5);
    MEMORY[0x194006DBC](v10, -1, -1);
  }
  return v4;
}

uint64_t sub_18FA19AD8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  _QWORD *v20;
  void (*v21)(char *, unint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void (*v25)(char *, uint64_t);
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  unint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  int64_t v44;

  v32 = a2;
  v33 = a1;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EA18);
  v4 = MEMORY[0x1E0C80A78](v41);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v39 = (char *)&v31 - v7;
  v37 = sub_18FA27FB8();
  v40 = *(_QWORD **)(v37 - 8);
  result = MEMORY[0x1E0C80A78](v37);
  v38 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = 0;
  v42 = (_QWORD *)a3;
  v11 = *(_QWORD *)(a3 + 64);
  v34 = 0;
  v35 = a3 + 64;
  v12 = 1 << *(_BYTE *)(a3 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v36 = (unint64_t)(v12 + 63) >> 6;
  v15 = (uint64_t)v39;
  v16 = v40;
  v17 = v37;
  v18 = v38;
  while (1)
  {
    if (v14)
    {
      v43 = (v14 - 1) & v14;
      v44 = v10;
      v19 = __clz(__rbit64(v14)) | (v10 << 6);
      goto LABEL_5;
    }
    v26 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v26 >= v36)
      return sub_18FA1A448(v33, v32, v34, v42);
    v27 = *(_QWORD *)(v35 + 8 * v26);
    v28 = v10 + 1;
    if (!v27)
    {
      v28 = v10 + 2;
      if (v10 + 2 >= v36)
        return sub_18FA1A448(v33, v32, v34, v42);
      v27 = *(_QWORD *)(v35 + 8 * v28);
      if (!v27)
      {
        v28 = v10 + 3;
        if (v10 + 3 >= v36)
          return sub_18FA1A448(v33, v32, v34, v42);
        v27 = *(_QWORD *)(v35 + 8 * v28);
        if (!v27)
          break;
      }
    }
LABEL_20:
    v43 = (v27 - 1) & v27;
    v44 = v28;
    v19 = __clz(__rbit64(v27)) + (v28 << 6);
LABEL_5:
    v20 = v42;
    v21 = (void (*)(char *, unint64_t, uint64_t))v16[2];
    v21(v18, v42[6] + v16[9] * v19, v17);
    v22 = *(_QWORD *)(v20[7] + 8 * v19);
    v21((char *)v15, (unint64_t)v18, v17);
    v23 = *(int *)(v41 + 48);
    *(_QWORD *)(v15 + v23) = v22;
    v21(v6, v15, v17);
    *(_QWORD *)&v6[v23] = v22;
    swift_bridgeObjectRetain_n();
    v24 = sub_18F9E1964();
    sub_18F9DFD58(v15, &qword_1EE17EA18);
    v25 = (void (*)(char *, uint64_t))v16[1];
    v25(v6, v17);
    swift_bridgeObjectRelease();
    result = ((uint64_t (*)(char *, uint64_t))v25)(v18, v17);
    v10 = v44;
    v14 = v43;
    if (v24 == 1)
    {
      *(unint64_t *)((char *)v33 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      if (__OFADD__(v34++, 1))
      {
        __break(1u);
        return sub_18FA1A448(v33, v32, v34, v42);
      }
    }
  }
  v29 = v10 + 4;
  if (v10 + 4 >= v36)
    return sub_18FA1A448(v33, v32, v34, v42);
  v27 = *(_QWORD *)(v35 + 8 * v29);
  if (v27)
  {
    v28 = v10 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v28 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v28 >= v36)
      return sub_18FA1A448(v33, v32, v34, v42);
    v27 = *(_QWORD *)(v35 + 8 * v28);
    ++v29;
    if (v27)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_18FA19DEC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  _QWORD *v20;
  void (*v21)(char *, unint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  void (*v25)(char *, uint64_t);
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  unint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  int64_t v44;

  v32 = a2;
  v33 = a1;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EA18);
  v4 = MEMORY[0x1E0C80A78](v41);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v39 = (char *)&v31 - v7;
  v37 = sub_18FA27FB8();
  v40 = *(_QWORD **)(v37 - 8);
  result = MEMORY[0x1E0C80A78](v37);
  v38 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = 0;
  v42 = (_QWORD *)a3;
  v11 = *(_QWORD *)(a3 + 64);
  v34 = 0;
  v35 = a3 + 64;
  v12 = 1 << *(_BYTE *)(a3 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v36 = (unint64_t)(v12 + 63) >> 6;
  v15 = (uint64_t)v39;
  v16 = v40;
  v17 = v37;
  v18 = v38;
  while (1)
  {
    if (v14)
    {
      v43 = (v14 - 1) & v14;
      v44 = v10;
      v19 = __clz(__rbit64(v14)) | (v10 << 6);
      goto LABEL_5;
    }
    v26 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v26 >= v36)
      return sub_18FA1A448(v33, v32, v34, v42);
    v27 = *(_QWORD *)(v35 + 8 * v26);
    v28 = v10 + 1;
    if (!v27)
    {
      v28 = v10 + 2;
      if (v10 + 2 >= v36)
        return sub_18FA1A448(v33, v32, v34, v42);
      v27 = *(_QWORD *)(v35 + 8 * v28);
      if (!v27)
      {
        v28 = v10 + 3;
        if (v10 + 3 >= v36)
          return sub_18FA1A448(v33, v32, v34, v42);
        v27 = *(_QWORD *)(v35 + 8 * v28);
        if (!v27)
          break;
      }
    }
LABEL_20:
    v43 = (v27 - 1) & v27;
    v44 = v28;
    v19 = __clz(__rbit64(v27)) + (v28 << 6);
LABEL_5:
    v20 = v42;
    v21 = (void (*)(char *, unint64_t, uint64_t))v16[2];
    v21(v18, v42[6] + v16[9] * v19, v17);
    v22 = *(_QWORD *)(v20[7] + 8 * v19);
    v21((char *)v15, (unint64_t)v18, v17);
    v23 = *(int *)(v41 + 48);
    *(_QWORD *)(v15 + v23) = v22;
    v21(v6, v15, v17);
    *(_QWORD *)&v6[v23] = v22;
    swift_bridgeObjectRetain_n();
    v24 = sub_18F9E1964();
    sub_18F9DFD58(v15, &qword_1EE17EA18);
    v25 = (void (*)(char *, uint64_t))v16[1];
    v25(v6, v17);
    swift_bridgeObjectRelease();
    result = ((uint64_t (*)(char *, uint64_t))v25)(v18, v17);
    v10 = v44;
    v14 = v43;
    if (v24 >= 2)
    {
      *(unint64_t *)((char *)v33 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      if (__OFADD__(v34++, 1))
      {
        __break(1u);
        return sub_18FA1A448(v33, v32, v34, v42);
      }
    }
  }
  v29 = v10 + 4;
  if (v10 + 4 >= v36)
    return sub_18FA1A448(v33, v32, v34, v42);
  v27 = *(_QWORD *)(v35 + 8 * v29);
  if (v27)
  {
    v28 = v10 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v28 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v28 >= v36)
      return sub_18FA1A448(v33, v32, v34, v42);
    v27 = *(_QWORD *)(v35 + 8 * v28);
    ++v29;
    if (v27)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_18FA1A100(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  BOOL v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  uint64_t v24;
  void (*v25)(char *, unint64_t, uint64_t);
  char *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  _QWORD *v42;
  int64_t v43;
  char *v44;
  char *v45;
  char *v46;

  v36 = a2;
  v37 = a1;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EA18);
  v4 = MEMORY[0x1E0C80A78](v41);
  v46 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v45 = (char *)&v35 - v6;
  v7 = sub_18FA27FB8();
  v8 = *(_QWORD *)(v7 - 8);
  result = MEMORY[0x1E0C80A78](v7);
  v44 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = 0;
  v42 = (_QWORD *)a3;
  v12 = *(_QWORD *)(a3 + 64);
  v38 = 0;
  v39 = a3 + 64;
  v13 = 1 << *(_BYTE *)(a3 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v40 = (unint64_t)(v13 + 63) >> 6;
  while (v15)
  {
    v16 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    v43 = v11;
    v17 = v16 | (v11 << 6);
LABEL_17:
    v22 = v42;
    v23 = v42[6] + *(_QWORD *)(v8 + 72) * v17;
    v24 = v8;
    v25 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
    v26 = v44;
    v25(v44, v23, v7);
    v27 = *(_QWORD *)(v22[7] + 8 * v17);
    v28 = v7;
    v29 = (uint64_t)v45;
    v25(v45, (unint64_t)v26, v28);
    v30 = *(int *)(v41 + 48);
    *(_QWORD *)(v29 + v30) = v27;
    v31 = v46;
    v32 = v29;
    v7 = v28;
    v25(v46, v32, v28);
    *(_QWORD *)&v31[v30] = v27;
    if (v27 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v33 = sub_18FA288B8();
    }
    else
    {
      v33 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
    }
    v8 = v24;
    v11 = v43;
    sub_18F9DFD58((uint64_t)v45, &qword_1EE17EA18);
    v34 = *(void (**)(char *, uint64_t))(v24 + 8);
    v34(v46, v7);
    swift_bridgeObjectRelease();
    result = ((uint64_t (*)(char *, uint64_t))v34)(v44, v7);
    if (v33 >= 2)
    {
      *(unint64_t *)((char *)v37 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = __OFADD__(v38++, 1);
      if (v18)
        goto LABEL_31;
    }
  }
  v18 = __OFADD__(v11, 1);
  v19 = v11 + 1;
  if (v18)
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v19 >= v40)
    return sub_18FA1A448(v37, v36, v38, v42);
  v20 = *(_QWORD *)(v39 + 8 * v19);
  if (v20)
  {
LABEL_16:
    v15 = (v20 - 1) & v20;
    v43 = v19;
    v17 = __clz(__rbit64(v20)) + (v19 << 6);
    goto LABEL_17;
  }
  v21 = v19 + 1;
  if (v19 + 1 >= v40)
    return sub_18FA1A448(v37, v36, v38, v42);
  v20 = *(_QWORD *)(v39 + 8 * v21);
  if (v20)
    goto LABEL_15;
  v21 = v19 + 2;
  if (v19 + 2 >= v40)
    return sub_18FA1A448(v37, v36, v38, v42);
  v20 = *(_QWORD *)(v39 + 8 * v21);
  if (v20)
    goto LABEL_15;
  v21 = v19 + 3;
  if (v19 + 3 >= v40)
    return sub_18FA1A448(v37, v36, v38, v42);
  v20 = *(_QWORD *)(v39 + 8 * v21);
  if (v20)
  {
LABEL_15:
    v19 = v21;
    goto LABEL_16;
  }
  while (1)
  {
    v19 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v19 >= v40)
      return sub_18FA1A448(v37, v36, v38, v42);
    v20 = *(_QWORD *)(v39 + 8 * v19);
    ++v21;
    if (v20)
      goto LABEL_16;
  }
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_18FA1A448(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;

  v45 = sub_18FA27FB8();
  v41 = *(_QWORD *)(v45 - 8);
  v8 = MEMORY[0x1E0C80A78](v45);
  v44 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v40 = (char *)&v36 - v10;
  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EBE0);
  result = sub_18FA288E8();
  v12 = result;
  v37 = a1;
  v38 = a2;
  if (a2 < 1)
    v13 = 0;
  else
    v13 = *a1;
  v14 = 0;
  v15 = result + 64;
  v39 = a4;
  v16 = v45;
  while (1)
  {
    if (v13)
    {
      v42 = (v13 - 1) & v13;
      v43 = v14;
      v17 = __clz(__rbit64(v13)) | (v14 << 6);
    }
    else
    {
      v18 = v14 + 1;
      if (__OFADD__(v14, 1))
        goto LABEL_40;
      if (v18 >= v38)
        return v12;
      v19 = v37[v18];
      v20 = v14 + 1;
      if (!v19)
      {
        v20 = v14 + 2;
        if (v14 + 2 >= v38)
          return v12;
        v19 = v37[v20];
        if (!v19)
        {
          v20 = v14 + 3;
          if (v14 + 3 >= v38)
            return v12;
          v19 = v37[v20];
          if (!v19)
          {
            v21 = v14 + 4;
            if (v14 + 4 >= v38)
              return v12;
            v19 = v37[v21];
            if (!v19)
            {
              while (1)
              {
                v20 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_41;
                if (v20 >= v38)
                  return v12;
                v19 = v37[v20];
                ++v21;
                if (v19)
                  goto LABEL_24;
              }
            }
            v20 = v14 + 4;
          }
        }
      }
LABEL_24:
      v42 = (v19 - 1) & v19;
      v43 = v20;
      v17 = __clz(__rbit64(v19)) + (v20 << 6);
    }
    v22 = v40;
    v23 = v41;
    v24 = *(_QWORD *)(v41 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v41 + 16))(v40, a4[6] + v24 * v17, v16);
    v25 = *(_QWORD *)(a4[7] + 8 * v17);
    v26 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v26(v44, v22, v16);
    sub_18F9E2480();
    swift_bridgeObjectRetain();
    result = sub_18FA282AC();
    v27 = -1 << *(_BYTE *)(v12 + 32);
    v28 = result & ~v27;
    v29 = v28 >> 6;
    if (((-1 << v28) & ~*(_QWORD *)(v15 + 8 * (v28 >> 6))) != 0)
    {
      v30 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v15 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v33 = v29 == v32;
        if (v29 == v32)
          v29 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v15 + 8 * v29);
      }
      while (v34 == -1);
      v30 = __clz(__rbit64(~v34)) + (v29 << 6);
    }
    *(_QWORD *)(v15 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(_QWORD *)(v12 + 48) + v30 * v24, v44, v45);
    *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v30) = v25;
    ++*(_QWORD *)(v12 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v39;
    v13 = v42;
    v14 = v43;
    if (!a3)
      return v12;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_18FA1A77C(_QWORD *a1, void *a2)
{
  return sub_18FA1AA08(a1, a2, &qword_1EE181320, (uint64_t)&off_1E29F2100, &qword_1EE181328);
}

uint64_t sub_18FA1A798(_QWORD *a1, void *a2)
{
  return sub_18FA1AA08(a1, a2, &qword_1EE180DB0, (uint64_t)off_1E29F2228, &qword_1EE181340);
}

uint64_t sub_18FA1A7B4(_QWORD *a1, void *a2)
{
  return sub_18FA1AA08(a1, a2, &qword_1EE181350, (uint64_t)off_1E29F1D18, &qword_1EE181358);
}

uint64_t sub_18FA1A7D0(_QWORD *a1, void *a2)
{
  return sub_18FA1AA08(a1, a2, &qword_1EE180DB8, (uint64_t)off_1E29F1F58, &qword_1EE181370);
}

uint64_t sub_18FA1A7EC(_QWORD *a1, void *a2)
{
  return sub_18FA1AA08(a1, a2, &qword_1EE181380, 0x1E0C99D78, &qword_1EE181388);
}

uint64_t sub_18FA1A808(_QWORD *a1, void *a2)
{
  return sub_18FA1AA08(a1, a2, &qword_1EE180D88, (uint64_t)&off_1E29F20B0, (uint64_t *)&unk_1EE181300);
}

uint64_t sub_18FA1A824(_QWORD *a1, void *a2)
{
  return sub_18FA1AA08(a1, a2, (unint64_t *)&unk_1EE181310, 0x1E0CB3940, &qword_1EE180D98);
}

uint64_t sub_18FA1A840(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_18FA28A08();
  swift_bridgeObjectRetain();
  sub_18FA28390();
  v8 = sub_18FA28A14();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_18FA2896C() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_18FA2896C() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_18FA1B670(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_18FA1A9EC(_QWORD *a1, void *a2)
{
  return sub_18FA1AA08(a1, a2, (unint64_t *)&qword_1EE17EBD0, (uint64_t)off_1E29F2008, (uint64_t *)&unk_1EE1812F0);
}

uint64_t sub_18FA1AA08(_QWORD *a1, void *a2, unint64_t *a3, uint64_t a4, uint64_t *a5)
{
  uint64_t *v5;
  uint64_t *v8;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  char v20;
  uint64_t v21;
  id v22;
  char v23;
  void *v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  char isUniquelyReferenced_nonNull_native;
  id v31;
  uint64_t v32;
  id v33;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v8 = v5;
  v11 = *v5;
  if ((*v5 & 0xC000000000000001) != 0)
  {
    if (v11 < 0)
      v12 = *v5;
    else
      v12 = v11 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v13 = a2;
    v14 = sub_18FA2875C();

    if (v14)
    {
      swift_bridgeObjectRelease();

      sub_18F9E000C(0, a3);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v36;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_18FA28750();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v26 = sub_18FA1ACD0(v12, result + 1, a5, a3);
    v37 = v26;
    v27 = *(_QWORD *)(v26 + 16);
    if (*(_QWORD *)(v26 + 24) <= v27)
    {
      v32 = v27 + 1;
      v33 = v13;
      sub_18FA1B1C8(v32, a5);
      v28 = v37;
    }
    else
    {
      v28 = v26;
      v29 = v13;
    }
    sub_18FA1B460((uint64_t)v13, v28);
    *v8 = v28;
    swift_bridgeObjectRelease();
    *a1 = v13;
  }
  else
  {
    swift_bridgeObjectRetain();
    v16 = sub_18FA286A8();
    v17 = -1 << *(_BYTE *)(v11 + 32);
    v18 = v16 & ~v17;
    if (((*(_QWORD *)(v11 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
    {
      sub_18F9E000C(0, a3);
      v19 = *(id *)(*(_QWORD *)(v11 + 48) + 8 * v18);
      v20 = sub_18FA286B4();

      if ((v20 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v24 = *(void **)(*(_QWORD *)(*v5 + 48) + 8 * v18);
        *a1 = v24;
        v25 = v24;
        return 0;
      }
      v21 = ~v17;
      while (1)
      {
        v18 = (v18 + 1) & v21;
        if (((*(_QWORD *)(v11 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
          break;
        v22 = *(id *)(*(_QWORD *)(v11 + 48) + 8 * v18);
        v23 = sub_18FA286B4();

        if ((v23 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v38 = *v5;
    *v5 = 0x8000000000000000;
    v31 = a2;
    sub_18FA1B4E0((uint64_t)v31, v18, isUniquelyReferenced_nonNull_native, a5, a3);
    *v5 = v38;
    swift_bridgeObjectRelease();
    *a1 = v31;
  }
  return 1;
}

uint64_t sub_18FA1ACD0(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    v6 = sub_18FA287BC();
    v19 = v6;
    sub_18FA28744();
    if (sub_18FA28768())
    {
      sub_18F9E000C(0, a4);
      do
      {
        swift_dynamicCast();
        v6 = v19;
        v13 = *(_QWORD *)(v19 + 16);
        if (*(_QWORD *)(v19 + 24) <= v13)
        {
          sub_18FA1B1C8(v13 + 1, a3);
          v6 = v19;
        }
        result = sub_18FA286A8();
        v8 = v6 + 56;
        v9 = -1 << *(_BYTE *)(v6 + 32);
        v10 = result & ~v9;
        v11 = v10 >> 6;
        if (((-1 << v10) & ~*(_QWORD *)(v6 + 56 + 8 * (v10 >> 6))) != 0)
        {
          v12 = __clz(__rbit64((-1 << v10) & ~*(_QWORD *)(v6 + 56 + 8 * (v10 >> 6)))) | v10 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v14 = 0;
          v15 = (unint64_t)(63 - v9) >> 6;
          do
          {
            if (++v11 == v15 && (v14 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v16 = v11 == v15;
            if (v11 == v15)
              v11 = 0;
            v14 |= v16;
            v17 = *(_QWORD *)(v8 + 8 * v11);
          }
          while (v17 == -1);
          v12 = __clz(__rbit64(~v17)) + (v11 << 6);
        }
        *(_QWORD *)(v8 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
        *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v12) = v18;
        ++*(_QWORD *)(v6 + 16);
      }
      while (sub_18FA28768());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v6;
}

uint64_t sub_18FA1AED0(uint64_t a1, uint64_t a2)
{
  return sub_18FA1ACD0(a1, a2, (uint64_t *)&unk_1EE181300, &qword_1EE180D88);
}

uint64_t sub_18FA1AEEC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1812E8);
  v3 = sub_18FA287B0();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_18FA28A08();
      sub_18FA28390();
      result = sub_18FA28A14();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_18FA1B1C8(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_18FA287B0();
  v6 = v5;
  if (*(_QWORD *)(v4 + 16))
  {
    v30 = v2;
    v7 = 1 << *(_BYTE *)(v4 + 32);
    v8 = (_QWORD *)(v4 + 56);
    if (v7 < 64)
      v9 = ~(-1 << v7);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v4 + 56);
    v11 = (unint64_t)(v7 + 63) >> 6;
    v12 = v5 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11)
          goto LABEL_33;
        v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v11)
            goto LABEL_33;
          v19 = v8[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v11)
              goto LABEL_33;
            v19 = v8[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                v3 = v30;
                v29 = 1 << *(_BYTE *)(v4 + 32);
                if (v29 > 63)
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v29;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v11)
                    goto LABEL_33;
                  v19 = v8[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v17);
      result = sub_18FA286A8();
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

unint64_t sub_18FA1B460(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_18FA286A8();
  result = sub_18FA28738();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

void sub_18FA1B4E0(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, unint64_t *a5)
{
  uint64_t *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  id v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v9 = *(_QWORD *)(*v5 + 16);
  v10 = *(_QWORD *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0)
    goto LABEL_14;
  v11 = v9 + 1;
  if ((a3 & 1) != 0)
  {
    sub_18FA1B1C8(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      sub_18FA1B9C4(a4);
      goto LABEL_14;
    }
    sub_18FA1BE10(v11, a4);
  }
  v12 = *v5;
  v13 = sub_18FA286A8();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_18F9E000C(0, a5);
    v15 = *(id *)(*(_QWORD *)(v12 + 48) + 8 * a2);
    v16 = sub_18FA286B4();

    if ((v16 & 1) != 0)
    {
LABEL_13:
      sub_18FA2899C();
      __break(1u);
    }
    else
    {
      v17 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v17;
        if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v18 = *(id *)(*(_QWORD *)(v12 + 48) + 8 * a2);
        v19 = sub_18FA286B4();

        if ((v19 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v20 + 48) + 8 * a2) = a1;
  v21 = *(_QWORD *)(v20 + 16);
  v22 = __OFADD__(v21, 1);
  v23 = v21 + 1;
  if (v22)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v23;
}

uint64_t sub_18FA1B670(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_18FA1AEEC();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_18FA1B814();
      goto LABEL_22;
    }
    sub_18FA1BB64();
  }
  v11 = *v4;
  sub_18FA28A08();
  sub_18FA28390();
  result = sub_18FA28A14();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_18FA2896C(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_18FA2899C();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_18FA2896C();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

id sub_18FA1B808()
{
  return sub_18FA1B9C4((uint64_t *)&unk_1EE181300);
}

void *sub_18FA1B814()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1812E8);
  v2 = *v0;
  v3 = sub_18FA287A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_18FA1B9C4(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_18FA287A4();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_28;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
      {
        v10 = v19 + 2;
        if (v19 + 2 >= v14)
          goto LABEL_28;
        v20 = *(_QWORD *)(v7 + 8 * v10);
        if (!v20)
          break;
      }
    }
LABEL_27:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    result = v18;
  }
  v21 = v19 + 3;
  if (v21 >= v14)
    goto LABEL_28;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_18FA1BB64()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1812E8);
  v3 = sub_18FA287B0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_18FA28A08();
    swift_bridgeObjectRetain();
    sub_18FA28390();
    result = sub_18FA28A14();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_18FA1BE10(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_18FA287B0();
  v6 = v5;
  if (!*(_QWORD *)(v4 + 16))
  {
    result = swift_release();
LABEL_35:
    *v3 = v6;
    return result;
  }
  v29 = v2;
  v7 = 1 << *(_BYTE *)(v4 + 32);
  v8 = v4 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v4 + 56);
  v11 = (unint64_t)(v7 + 63) >> 6;
  v12 = v5 + 56;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11)
      goto LABEL_33;
    v19 = *(_QWORD *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_33;
      v19 = *(_QWORD *)(v8 + 8 * v14);
      if (!v19)
      {
        v14 = v18 + 2;
        if (v18 + 2 >= v11)
          goto LABEL_33;
        v19 = *(_QWORD *)(v8 + 8 * v14);
        if (!v19)
          break;
      }
    }
LABEL_23:
    v10 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    v21 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v17);
    result = sub_18FA286A8();
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
    ++*(_QWORD *)(v6 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    result = swift_release_n();
    v3 = v29;
    goto LABEL_35;
  }
  v19 = *(_QWORD *)(v8 + 8 * v20);
  if (v19)
  {
    v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v11)
      goto LABEL_33;
    v19 = *(_QWORD *)(v8 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_18FA1C084(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_18FA1C10C(unint64_t a1)
{
  return sub_18FA1C154(a1, (unint64_t *)&unk_1EE181310, 0x1E0CB3940, (unint64_t *)&unk_1EE1813A0, &qword_1EE180D98);
}

uint64_t sub_18FA1C130(unint64_t a1)
{
  return sub_18FA1C154(a1, &qword_1EE180D88, (uint64_t)&off_1E29F20B0, (unint64_t *)&qword_1EE180D90, (uint64_t *)&unk_1EE181300);
}

uint64_t sub_18FA1C154(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, uint64_t *a5)
{
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t i;
  void *v14;
  void **v15;
  void *v16;
  id v17;
  uint64_t v18;

  v10 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_18FA288B8();
    swift_bridgeObjectRelease();
  }
  sub_18F9E000C(0, a2);
  sub_18FA215B8(a4, a2);
  result = sub_18FA28588();
  v18 = result;
  if (v10)
  {
    swift_bridgeObjectRetain();
    v12 = sub_18FA288B8();
    result = swift_bridgeObjectRelease();
    if (!v12)
      return v18;
  }
  else
  {
    v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v12)
      return v18;
  }
  if (v12 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v12; ++i)
      {
        v14 = (void *)MEMORY[0x194005370](i, a1);
        sub_18FA1AA08(&v17, v14, a2, a3, a5);

      }
    }
    else
    {
      v15 = (void **)(a1 + 32);
      do
      {
        v16 = *v15++;
        sub_18FA1AA08(&v17, v16, a2, a3, a5);

        --v12;
      }
      while (v12);
    }
    return v18;
  }
  __break(1u);
  return result;
}

uint64_t sub_18FA1C2E8(unint64_t a1)
{
  return sub_18FA1C154(a1, &qword_1EE181380, 0x1E0C99D78, (unint64_t *)&unk_1EE181390, &qword_1EE181388);
}

uint64_t sub_18FA1C30C(unint64_t a1)
{
  return sub_18FA1C154(a1, &qword_1EE180DB8, (uint64_t)off_1E29F1F58, &qword_1EE181378, &qword_1EE181370);
}

uint64_t sub_18FA1C330(unint64_t a1)
{
  return sub_18FA1C154(a1, &qword_1EE181350, (uint64_t)off_1E29F1D18, (unint64_t *)&unk_1EE181360, &qword_1EE181358);
}

uint64_t sub_18FA1C354(unint64_t a1)
{
  return sub_18FA1C154(a1, &qword_1EE180DB0, (uint64_t)off_1E29F2228, &qword_1EE181348, &qword_1EE181340);
}

uint64_t sub_18FA1C378(unint64_t a1)
{
  return sub_18FA1C154(a1, &qword_1EE181320, (uint64_t)&off_1E29F2100, (unint64_t *)&unk_1EE181330, &qword_1EE181328);
}

uint64_t sub_18FA1C39C(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v11;
  void *v12;
  uint64_t v13;

  v13 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_13;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; v5 = sub_18FA288B8())
  {
    for (i = 4; ; ++i)
    {
      v7 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x194005370](i - 4, a1) : *(id *)(a1 + 8 * i);
      v8 = v7;
      v9 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v12 = v7;
      sub_18FA17E68(&v12, a2, &v11);
      if (v2)
      {
        swift_bridgeObjectRelease();

        return swift_bridgeObjectRelease();
      }

      sub_18FA0E710(v11);
      if (v9 == v5)
      {
        swift_bridgeObjectRelease();
        return v13;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_18FA1C4DC(unint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t i;
  id v9;
  void *v10;
  uint64_t v11;
  unint64_t v13;
  id v14;
  uint64_t v15;

  v15 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_13;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v7; v7 = sub_18FA288B8())
  {
    for (i = 4; ; ++i)
    {
      v9 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x194005370](i - 4, a1) : *(id *)(a1 + 8 * i);
      v10 = v9;
      v11 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v14 = v9;
      sub_18FA17930(&v14, a2, a3, &v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return swift_bridgeObjectRelease();
      }

      sub_18FA0E5B4(v13);
      if (v11 == v7)
      {
        swift_bridgeObjectRelease();
        return v15;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_18FA1C62C(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t result;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;

  v2 = sub_18FA27FB8();
  v48 = *(_QWORD *)(v2 - 8);
  v49 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  if (a1 >> 62)
  {
LABEL_24:
    swift_bridgeObjectRetain();
    v5 = sub_18FA288B8();
    swift_bridgeObjectRelease();
    if (v5)
      goto LABEL_3;
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
LABEL_3:
      v47 = a1 & 0xC000000000000001;
      v6 = (_QWORD *)MEMORY[0x1E0DEE9E0];
      v7 = 4;
      v45 = xmmword_18FA40FA0;
      v46 = v5;
      while (1)
      {
        if (v47)
          v10 = (id)MEMORY[0x194005370](v7 - 4, a1);
        else
          v10 = *(id *)(a1 + 8 * v7);
        v11 = v10;
        v12 = v7 - 3;
        if (__OFADD__(v7 - 4, 1))
        {
          __break(1u);
LABEL_22:
          __break(1u);
LABEL_23:
          __break(1u);
          goto LABEL_24;
        }
        v13 = (_QWORD *)a1;
        sub_18FA27FAC();
        v14 = objc_msgSend(v11, sel_givenName);
        v15 = sub_18FA2833C();
        v17 = v16;

        sub_18F9E2500(385, v15, v17);
        swift_bridgeObjectRelease();
        sub_18FA27F40();
        v18 = objc_msgSend(v11, sel_middleName);
        v19 = sub_18FA2833C();
        v21 = v20;

        sub_18F9E2500(385, v19, v21);
        swift_bridgeObjectRelease();
        sub_18FA27F70();
        v22 = objc_msgSend(v11, sel_familyName);
        v23 = sub_18FA2833C();
        v25 = v24;

        sub_18F9E2500(385, v23, v25);
        swift_bridgeObjectRelease();
        sub_18FA27F58();
        v26 = objc_msgSend(v11, sel_nameSuffix);
        v27 = sub_18FA2833C();
        v29 = v28;

        sub_18F9E2500(385, v27, v29);
        swift_bridgeObjectRelease();
        sub_18FA27FA0();
        if ((uint64_t)sub_18F9E1964() <= 0)
          sub_18F9E8104();
        a1 = (unint64_t)v6;
        v31 = sub_18F9E02C4((uint64_t)v4);
        v32 = v6[2];
        v33 = (v30 & 1) == 0;
        v34 = v32 + v33;
        if (__OFADD__(v32, v33))
          goto LABEL_22;
        v35 = v30;
        if (v6[3] < v34)
        {
          sub_18FA0B154(v34, 1);
          v6 = v51;
          v36 = sub_18F9E02C4((uint64_t)v4);
          if ((v35 & 1) != (v37 & 1))
          {
            result = sub_18FA289A8();
            __break(1u);
            return result;
          }
          v31 = v36;
        }
        if ((v35 & 1) != 0)
        {
          v8 = (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v4, v49);
          v6 = v51;
          v9 = (_QWORD *)(v51[7] + 8 * v31);
          MEMORY[0x194004F98](v8);
          if (*(_QWORD *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_18FA28474();
          sub_18FA284BC();
          sub_18FA2845C();
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EB50);
          v38 = swift_allocObject();
          *(_OWORD *)(v38 + 16) = v45;
          *(_QWORD *)(v38 + 32) = v11;
          v50 = v38;
          sub_18FA2845C();
          v39 = v49;
          a1 = v50;
          v6[(v31 >> 6) + 8] |= 1 << v31;
          (*(void (**)(unint64_t, char *, uint64_t))(v48 + 32))(v6[6] + *(_QWORD *)(v48 + 72) * v31, v4, v39);
          *(_QWORD *)(v6[7] + 8 * v31) = a1;
          v40 = v6[2];
          v41 = __OFADD__(v40, 1);
          v42 = v40 + 1;
          if (v41)
            goto LABEL_23;
          v6[2] = v42;
        }
        a1 = (unint64_t)v13;
        ++v7;
        if (v12 == v46)
          return (uint64_t)v6;
      }
    }
  }
  return MEMORY[0x1E0DEE9E0];
}

uint64_t sub_18FA1CA68(unint64_t a1, void (*a2)(_OWORD *__return_ptr, id))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t i;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  void *v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t result;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;
  _OWORD v32[2];
  uint64_t v33;
  _QWORD *v34;

  v3 = a1;
  v34 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  if (a1 >> 62)
  {
LABEL_25:
    swift_bridgeObjectRetain();
    v4 = sub_18FA288B8();
    swift_bridgeObjectRelease();
    if (v4)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
    {
LABEL_3:
      v28 = v3 & 0xC000000000000001;
      v5 = (_QWORD *)MEMORY[0x1E0DEE9E0];
      for (i = 4; ; ++i)
      {
        if (v28)
          v9 = (id)MEMORY[0x194005370](i - 4, v3);
        else
          v9 = *(id *)(v3 + 8 * i);
        v10 = v9;
        if (__OFADD__(i - 4, 1))
        {
          __break(1u);
LABEL_23:
          __break(1u);
LABEL_24:
          __break(1u);
          goto LABEL_25;
        }
        a2(v32, v9);
        if (v2)
        {
          swift_release();
          swift_bridgeObjectRelease();

          return (uint64_t)v5;
        }
        v30 = i - 3;
        v11 = v3;
        v3 = v4;
        v13 = sub_18F9E0294((uint64_t)v32);
        v14 = v5[2];
        v15 = (v12 & 1) == 0;
        v16 = v14 + v15;
        if (__OFADD__(v14, v15))
          goto LABEL_23;
        v17 = v12;
        if (v5[3] < v16)
        {
          sub_18FA0AE44(v16, 1);
          v5 = v34;
          v18 = sub_18F9E0294((uint64_t)v32);
          if ((v17 & 1) != (v19 & 1))
          {
            result = sub_18FA289A8();
            __break(1u);
            return result;
          }
          v13 = v18;
        }
        if ((v17 & 1) != 0)
        {
          v7 = sub_18F9E0510((uint64_t)v32);
          v5 = v34;
          v8 = (_QWORD *)(v34[7] + 8 * v13);
          MEMORY[0x194004F98](v7);
          if (*(_QWORD *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_18FA28474();
          sub_18FA284BC();
          sub_18FA2845C();
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EB50);
          v20 = swift_allocObject();
          *(_OWORD *)(v20 + 16) = xmmword_18FA40FA0;
          *(_QWORD *)(v20 + 32) = v10;
          v31 = v20;
          sub_18FA2845C();
          v5[(v13 >> 6) + 8] |= 1 << v13;
          v21 = v5[6] + 40 * v13;
          v22 = v32[0];
          v23 = v32[1];
          *(_QWORD *)(v21 + 32) = v33;
          *(_OWORD *)v21 = v22;
          *(_OWORD *)(v21 + 16) = v23;
          *(_QWORD *)(v5[7] + 8 * v13) = v31;
          v24 = v5[2];
          v25 = __OFADD__(v24, 1);
          v26 = v24 + 1;
          if (v25)
            goto LABEL_24;
          v5[2] = v26;
        }
        v4 = v3;
        v3 = v11;
        if (v30 == v4)
        {
          swift_bridgeObjectRelease();
          return (uint64_t)v5;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9E0];
}

uint64_t sub_18FA1CD34(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_18FA28588();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_18FA1A840(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

void sub_18FA1CDC8(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return;
  v2 = 0;
  v23 = a1 + 32;
  v21 = MEMORY[0x1E0DEE9D8];
  v22 = *(_QWORD *)(a1 + 16);
  do
  {
    if (v2 <= v1)
      v3 = v1;
    else
      v3 = v2;
    v24 = v3;
    while (1)
    {
      if (v2 == v24)
        goto LABEL_38;
      v4 = *(_QWORD *)(v23 + 8 * v2);
      if (v4 >> 62)
      {
        swift_bridgeObjectRetain_n();
        v5 = sub_18FA288B8();
        ++v2;
        if (!v5)
          goto LABEL_7;
      }
      else
      {
        v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        ++v2;
        if (!v5)
          goto LABEL_7;
      }
      v6 = (v4 & 0xC000000000000001) != 0 ? (id)MEMORY[0x194005370](0, v4) : *(id *)(v4 + 32);
      v7 = v6;
      sub_18F9E000C(0, (unint64_t *)&qword_1EE17EBD0);
      v8 = sub_18FA286B4();

      if ((v8 & 1) != 0)
        break;
      if (v5 != 1)
      {
        if ((v4 & 0xC000000000000001) != 0)
        {
          v9 = 1;
          while (1)
          {
            MEMORY[0x194005370](v9, v4);
            v10 = v9 + 1;
            if (__OFADD__(v9, 1))
              break;
            v11 = sub_18FA286B4();
            swift_unknownObjectRelease();
            if ((v11 & 1) != 0)
              goto LABEL_29;
            ++v9;
            if (v10 == v5)
              goto LABEL_7;
          }
          __break(1u);
        }
        else
        {
          v12 = 5;
          while (1)
          {
            v13 = v12 - 3;
            if (__OFADD__(v12 - 4, 1))
              break;
            v14 = *(id *)(v4 + 8 * v12);
            v15 = sub_18FA286B4();

            if ((v15 & 1) != 0)
              goto LABEL_29;
            ++v12;
            if (v13 == v5)
              goto LABEL_7;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
        return;
      }
LABEL_7:
      swift_bridgeObjectRelease_n();
      if (v2 == v22)
        return;
    }
LABEL_29:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = v21;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_18F9DEC64(0, *(_QWORD *)(v21 + 16) + 1, 1);
      v17 = v21;
    }
    v18 = v17;
    v20 = *(_QWORD *)(v17 + 16);
    v19 = *(_QWORD *)(v17 + 24);
    if (v20 >= v19 >> 1)
    {
      sub_18F9DEC64(v19 > 1, v20 + 1, 1);
      v18 = v21;
    }
    *(_QWORD *)(v18 + 16) = v20 + 1;
    v21 = v18;
    *(_QWORD *)(v18 + 8 * v20 + 32) = v4;
    v1 = v22;
  }
  while (v2 != v22);
}

uint64_t sub_18FA1D050(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return 0;
  v4 = 0;
  v5 = a1 + 32;
  v19 = *(_QWORD *)(a1 + 16);
  do
  {
    v8 = *(_QWORD *)(v5 + 8 * v4);
    if ((v8 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      v6 = a2;
      v7 = sub_18FA28774();
      swift_bridgeObjectRelease();

      if ((v7 & 1) != 0)
        return v4;
    }
    else if (*(_QWORD *)(v8 + 16))
    {
      swift_bridgeObjectRetain();
      v9 = sub_18FA286A8();
      v10 = -1 << *(_BYTE *)(v8 + 32);
      v11 = v9 & ~v10;
      if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
      {
        sub_18F9E000C(0, (unint64_t *)&qword_1EE17EBD0);
        v12 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * v11);
        v13 = sub_18FA286B4();

        if ((v13 & 1) != 0)
        {
LABEL_15:
          swift_bridgeObjectRelease();
          return v4;
        }
        v14 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v14;
          if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
            break;
          v15 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * v11);
          v16 = sub_18FA286B4();

          if ((v16 & 1) != 0)
            goto LABEL_15;
        }
      }
      swift_bridgeObjectRelease();
      v2 = v19;
      v5 = v18;
    }
    ++v4;
  }
  while (v4 != v2);
  return 0;
}

unint64_t sub_18FA1D210(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  void *v4;
  uint64_t v5;
  uint64_t i;
  id v7;
  uint64_t v8;
  unint64_t v10;

  v4 = (void *)a1;
  v10 = a1;
  if (a2 >> 62)
    goto LABEL_13;
  v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; v5 = sub_18FA288B8())
  {
    for (i = 4; ; ++i)
    {
      v7 = (a2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x194005370](i - 4, a2) : *(id *)(a2 + 8 * i);
      v4 = v7;
      v8 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      sub_18FA17260(&v10, v7);
      if (v2)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        return (unint64_t)v4;
      }

      if (v8 == v5)
      {
        swift_bridgeObjectRelease();
        return v10;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return (unint64_t)v4;
}

uint64_t sub_18FA1D33C(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t _s8Contacts09DuplicateA7ManagerC29applyMergeResultToSaveRequest_10signaturesSbSo06CNSaveI0C_SaySSGtFZ_0(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  char *v19;
  void *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  char *v32;
  void *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  unint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  _QWORD *v71;
  char *v72;
  uint64_t v73;
  id v74;
  uint64_t result;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;

  v2 = *(_QWORD *)(a2 + 16);
  if (v2)
  {
    v3 = a2;
    v77 = *(_QWORD *)(a2 + 16);
    if (qword_1EE17E9D0 != -1)
      goto LABEL_75;
    while (1)
    {
      sub_18F9E000C(0, &qword_1EE17EAD8);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE17EB40);
      v4 = swift_allocObject();
      *(_OWORD *)(v4 + 16) = xmmword_18FA40F90;
      *(_QWORD *)(v4 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EAB8);
      *(_QWORD *)(v4 + 64) = sub_18F9DE888();
      *(_QWORD *)(v4 + 32) = v3;
      swift_bridgeObjectRetain();
      v5 = (void *)sub_18FA28624();
      v6 = sub_18F9DB34C((uint64_t)v5);

      if (v6 >> 62)
      {
        swift_bridgeObjectRetain();
        v3 = sub_18FA288B8();
        swift_bridgeObjectRelease();
        if (!v3)
        {
LABEL_77:
          swift_bridgeObjectRelease();
          v73 = MEMORY[0x1E0DEE9D8];
LABEL_78:
          type metadata accessor for DuplicateContacts();
          v74 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), sel_init);
          sub_18F9E2B9C(v73, v74, &v98);
          swift_bridgeObjectRelease();

          sub_18F9EB868(&v98, a1);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v2 = v77;
          return v2 != 0;
        }
      }
      else
      {
        v3 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v3)
          goto LABEL_77;
      }
      v97 = MEMORY[0x1E0DEE9D8];
      sub_18F9DEC9C(0, v3 & ~(v3 >> 63), 0);
      if (v3 < 0)
      {
        __break(1u);

        result = swift_release();
        __break(1u);
        return result;
      }
      v7 = 0;
      v8 = v97;
      v80 = v6 & 0xC000000000000001;
      v78 = v6 + 32;
      v79 = v3;
      while (v7 != v3)
      {
        v89 = v7;
        v90 = v8;
        if (v80)
          v9 = (char *)MEMORY[0x194005370]();
        else
          v9 = (char *)*(id *)(v78 + 8 * v7);
        v10 = v9;
        v11 = OBJC_IVAR___CNManagedDuplicate__privateContacts;
        v12 = *(_QWORD *)&v9[OBJC_IVAR___CNManagedDuplicate__privateContacts];
        if (v12 >> 62)
        {
          swift_bridgeObjectRetain();
          v13 = sub_18FA288B8();
          swift_bridgeObjectRelease();
        }
        else
        {
          v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        v91 = v10;
        v3 = (uint64_t)&v10[OBJC_IVAR___CNManagedDuplicate_managedCohorts];
        swift_beginAccess();
        v14 = *(_QWORD *)v3;
        if (*(_QWORD *)v3 >> 62)
        {
          swift_bridgeObjectRetain_n();
          v15 = sub_18FA288B8();
        }
        else
        {
          v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n();
        }
        v87 = v11;
        v93 = v13;
        if (v15)
        {
          if (v15 < 1)
            goto LABEL_73;
          v16 = 0;
          v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          do
          {
            if ((v14 & 0xC000000000000001) != 0)
              v19 = (char *)MEMORY[0x194005370](v16, v14);
            else
              v19 = (char *)*(id *)(v14 + 8 * v16 + 32);
            v20 = v19;
            v21 = &v19[OBJC_IVAR___CNManagedCohort_identifier];
            swift_beginAccess();
            v22 = *(_QWORD *)v21;
            v23 = *((_QWORD *)v21 + 1);
            swift_bridgeObjectRetain();

            if (v23)
            {
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v17 = sub_18F9FDF34(0, v17[2] + 1, 1, v17);
              v25 = v17[2];
              v24 = v17[3];
              if (v25 >= v24 >> 1)
                v17 = sub_18F9FDF34((_QWORD *)(v24 > 1), v25 + 1, 1, v17);
              v17[2] = v25 + 1;
              v18 = &v17[2 * v25];
              v18[4] = v22;
              v18[5] = v23;
            }
            ++v16;
          }
          while (v15 != v16);
        }
        else
        {
          v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        }
        swift_bridgeObjectRelease_n();
        v26 = v17[2];
        swift_bridgeObjectRelease();
        if (v93 != v26)
        {
          v39 = v91;
          v40 = v87;
LABEL_63:
          sub_18F9FC7E8();
          goto LABEL_64;
        }
        v27 = *(_QWORD *)v3;
        if (*(_QWORD *)v3 >> 62)
        {
          if (v27 < 0)
            v3 = *(_QWORD *)v3;
          else
            v3 = v27 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain_n();
          v28 = sub_18FA288B8();
          if (!v28)
          {
LABEL_51:
            v30 = (_QWORD *)MEMORY[0x1E0DEE9D8];
            goto LABEL_52;
          }
        }
        else
        {
          v28 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n();
          if (!v28)
            goto LABEL_51;
        }
        if (v28 < 1)
          goto LABEL_74;
        v29 = 0;
        v30 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        do
        {
          if ((v27 & 0xC000000000000001) != 0)
            v32 = (char *)MEMORY[0x194005370](v29, v27);
          else
            v32 = (char *)*(id *)(v27 + 8 * v29 + 32);
          v33 = v32;
          v34 = &v32[OBJC_IVAR___CNManagedCohort_identifier];
          swift_beginAccess();
          v36 = *(_QWORD *)v34;
          v35 = *((_QWORD *)v34 + 1);
          swift_bridgeObjectRetain();

          if (v35)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v30 = sub_18F9FDF34(0, v30[2] + 1, 1, v30);
            v38 = v30[2];
            v37 = v30[3];
            if (v38 >= v37 >> 1)
              v30 = sub_18F9FDF34((_QWORD *)(v37 > 1), v38 + 1, 1, v30);
            v30[2] = v38 + 1;
            v31 = &v30[2 * v38];
            v31[4] = v36;
            v31[5] = v35;
          }
          ++v29;
        }
        while (v28 != v29);
LABEL_52:
        swift_bridgeObjectRelease_n();
        v95 = sub_18FA28588();
        v41 = v30[2];
        if (v41)
        {
          v42 = v30 + 5;
          v39 = v91;
          do
          {
            v43 = *(v42 - 1);
            v44 = *v42;
            swift_bridgeObjectRetain();
            sub_18FA1A840(&v98, v43, v44);
            swift_bridgeObjectRelease();
            v42 += 2;
            --v41;
          }
          while (v41);
        }
        else
        {
          v39 = v91;
        }
        swift_bridgeObjectRelease();
        v45 = v95;
        v46 = sub_18F9FB680();
        v47 = sub_18FA28588();
        v96 = v47;
        v48 = *(_QWORD *)(v46 + 16);
        if (v48)
        {
          v49 = (uint64_t *)(v46 + 40);
          do
          {
            v50 = *(v49 - 1);
            v51 = *v49;
            swift_bridgeObjectRetain();
            sub_18FA1A840(&v98, v50, v51);
            swift_bridgeObjectRelease();
            v49 += 2;
            --v48;
          }
          while (v48);
          swift_bridgeObjectRelease();
          v52 = v96;
        }
        else
        {
          v52 = v47;
          swift_bridgeObjectRelease();
        }
        v53 = sub_18FA19438(v45, v52);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v40 = v87;
        if ((v53 & 1) == 0)
          goto LABEL_63;
LABEL_64:
        v54 = *(_QWORD *)&v39[v40];
        if ((v54 & 0x8000000000000000) != 0 || (v54 & 0x4000000000000000) != 0)
        {
          swift_bridgeObjectRetain_n();
          v72 = v39;
          v55 = (uint64_t)sub_18F9E8438(v54);
          swift_bridgeObjectRelease();
        }
        else
        {
          v55 = v54 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain_n();
          v56 = v39;
        }
        v98 = v55;
        v57 = v39;
        sub_18FA01990(&v98, v57);
        swift_bridgeObjectRelease();

        v88 = v98;
        v58 = (uint64_t *)&v57[OBJC_IVAR___CNManagedDuplicate_userSelectedContactImage];
        swift_beginAccess();
        v59 = v58[1];
        v92 = v58[2];
        v94 = *v58;
        v84 = v58[3];
        v85 = v58[4];
        v82 = v58[6];
        v83 = v58[5];
        v60 = v58[8];
        v81 = v58[7];
        v61 = v58[9];
        v62 = v58[10];
        v63 = v58[11];
        v64 = v58[12];
        v65 = (uint64_t *)&v57[OBJC_IVAR___CNManagedDuplicate_userSelectedContactPoster];
        v66 = v58[13];
        swift_beginAccess();
        v68 = *v65;
        v67 = v65[1];
        v86 = v61;
        sub_18F9EA5F0(v94, v59, v92, v84, v85, v83, v82, v81, v60, v61, v62, v63, v64, v66);
        sub_18F9EA704(v68, v67);

        v8 = v90;
        v97 = v90;
        v70 = *(_QWORD *)(v90 + 16);
        v69 = *(_QWORD *)(v90 + 24);
        if (v70 >= v69 >> 1)
        {
          sub_18F9DEC9C(v69 > 1, v70 + 1, 1);
          v8 = v97;
        }
        v7 = v89 + 1;
        *(_QWORD *)(v8 + 16) = v70 + 1;
        v71 = (_QWORD *)(v8 + 136 * v70);
        v71[4] = v88;
        v71[5] = v94;
        v71[6] = v59;
        v71[7] = v92;
        v71[8] = v84;
        v71[9] = v85;
        v71[10] = v83;
        v71[11] = v82;
        v71[12] = v81;
        v71[13] = v60;
        v71[14] = v86;
        v71[15] = v62;
        v71[16] = v63;
        v71[17] = v64;
        v71[18] = v66;
        v71[19] = v68;
        v71[20] = v67;
        v3 = v79;
        if (v89 + 1 == v79)
        {
          v73 = v8;
          swift_bridgeObjectRelease();
          goto LABEL_78;
        }
      }
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      swift_once();
    }
  }
  return v2 != 0;
}

BOOL sub_18FA1DC7C(void *a1)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  BOOL v9;
  id v10;
  id v12[2];

  v12[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = objc_allocWithZone((Class)CNContactFetchRequest);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EAE0);
  v3 = (void *)sub_18FA28438();
  v4 = objc_msgSend(v2, sel_initWithKeysToFetch_, v3);

  objc_msgSend(v4, sel_setUnifyResults_, 0);
  v12[0] = 0;
  v5 = objc_msgSend(a1, sel_contactCountForFetchRequest_error_, v4, v12);
  if (v5)
  {
    v6 = v5;
    v7 = v12[0];
    v8 = (uint64_t)objc_msgSend(v6, sel_integerValue);

    return v8 < 1501;
  }
  else
  {
    v10 = v12[0];
    sub_18FA28030();

    swift_willThrow();
    swift_willThrow();

  }
  return v9;
}

BOOL sub_18FA1DDC8(void *a1)
{
  return sub_18FA1DC7C(a1);
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

void sub_18FA1DFC4(uint64_t a1, void (**a2)(_QWORD, _QWORD))
{
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  const char *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  Swift::String v19;
  id v20;
  id v21;
  id v22;
  _QWORD *v23;
  void *v24;
  id v25;
  uint64_t v26;
  id v27;
  _QWORD aBlock[6];

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a2;
  v5 = objc_allocWithZone((Class)CNContactStore);
  _Block_copy(a2);
  v27 = objc_msgSend(v5, sel_init);
  if (!sub_18FA1DDC8(v27))
  {
    if (qword_1EE17E9C8 != -1)
      swift_once();
    v11 = sub_18FA28204();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EE183588);
    v12 = sub_18FA281EC();
    v13 = sub_18FA28630();
    if (!os_log_type_enabled(v12, v13))
      goto LABEL_18;
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    v15 = "Will defer duplicates analysis while in process.";
    goto LABEL_17;
  }
  v6 = objc_msgSend(v27, sel_currentHistoryToken);
  if (v6)
  {
    v7 = v6;
    v8 = sub_18FA280A8();
    v10 = v9;

  }
  else
  {
    v8 = 0;
    v10 = 0xC000000000000000;
  }
  v16 = sub_18FA2809C();
  v18 = v17;
  sub_18F9EA8A4(v8, v10);
  if (qword_1EE17E9D0 != -1)
    swift_once();
  v19._countAndFlagsBits = v16;
  v19._object = v18;
  if (ManagedDuplicateStore.willRefresh(token:)(v19))
  {
    v20 = objc_msgSend((id)objc_opt_self(), sel_currentEnvironment);
    v21 = objc_msgSend(v20, sel_schedulerProvider);

    v22 = objc_msgSend(v21, sel_backgroundScheduler);
    swift_unknownObjectRelease();
    v23 = (_QWORD *)swift_allocObject();
    v23[2] = v27;
    v23[3] = v16;
    v23[4] = v18;
    v23[5] = sub_18FA21420;
    v23[6] = v4;
    v23[7] = a1;
    aBlock[4] = sub_18FA1DFA8;
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_18FA15C08;
    aBlock[3] = &block_descriptor_10;
    v24 = _Block_copy(aBlock);
    v25 = v27;
    swift_retain();
    swift_release();
    objc_msgSend(v22, sel_performBlock_, v24);
    _Block_release(v24);
    swift_release();

    swift_unknownObjectRelease();
    return;
  }
  swift_bridgeObjectRelease();
  if (qword_1EE17E9C8 != -1)
    swift_once();
  v26 = sub_18FA28204();
  __swift_project_value_buffer(v26, (uint64_t)qword_1EE183588);
  v12 = sub_18FA281EC();
  v13 = sub_18FA2863C();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    v15 = "ManagedDuplicates are already up to date. Exiting";
LABEL_17:
    _os_log_impl(&dword_18F8BD000, v12, v13, v15, v14, 2u);
    MEMORY[0x194006DBC](v14, -1, -1);
  }
LABEL_18:

  a2[2](a2, 0);
  swift_release();

}

void sub_18FA1E38C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  objc_class *v4;
  _BYTE *v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  unint64_t v13;
  id v14;
  char *v15;
  unint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  char *v21;
  uint64_t *v22;
  objc_class *v23;
  void *v24;
  char *v25;
  unint64_t v26;
  id v27;
  uint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint8_t *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  void *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  unint64_t v61;
  uint64_t v62;
  char v63;
  char *v64;
  char *v65;
  BOOL v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  BOOL v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v76;
  void *v77;
  char *v78;
  char *v79;
  NSObject *v80;
  os_log_type_t v81;
  uint8_t *v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  NSObject *v86;
  os_log_type_t v87;
  uint8_t *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  void *v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  id v98;
  void *v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t *v108;
  void *v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  void *v114;
  unint64_t v115;
  void *v116;
  unint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  unint64_t v127;
  objc_super v128;

  v2 = v1;
  if (qword_1EE17E9D0 != -1)
    goto LABEL_120;
  while (1)
  {
    v4 = (objc_class *)type metadata accessor for DuplicateContactsManager();
    v5 = objc_allocWithZone(v4);
    v6 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)&v5[OBJC_IVAR___CNDuplicateContactsManager_contacts] = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)&v5[OBJC_IVAR___CNDuplicateContactsManager_findResult] = 0;
    v7 = &v5[OBJC_IVAR___CNDuplicateContactsManager_mergeResult];
    v7[1] = 0;
    v7[2] = 0;
    *v7 = 0;
    v5[OBJC_IVAR___CNDuplicateContactsManager_didPerformMerge] = 0;
    *(_QWORD *)&v5[OBJC_IVAR___CNDuplicateContactsManager_contactStore] = a1;
    v128.receiver = v5;
    v128.super_class = v4;
    v8 = a1;
    v9 = objc_msgSendSuper2(&v128, sel_init);
    if (qword_1EE17E9B8 != -1)
      swift_once();
    v10 = objc_allocWithZone((Class)CNContactFetchRequest);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EAE0);
    v11 = (void *)sub_18FA28438();
    swift_bridgeObjectRelease();
    v12 = objc_msgSend(v10, sel_initWithKeysToFetch_, v11);

    objc_msgSend(v12, sel_setUnifyResults_, 0);
    objc_msgSend(v12, sel_setMutableObjects_, 1);
    v13 = sub_18FA18384();
    v14 = v9;
    v15 = (char *)v2;
    v16 = sub_18FA1C39C(v13, (uint64_t)v14);
    swift_bridgeObjectRelease();

    v17 = (char *)v14;
    v18 = v12;
    v19 = sub_18FA1C4DC(v16, v18, (uint64_t)v17);
    swift_bridgeObjectRelease();

    *(_QWORD *)&v17[OBJC_IVAR___CNDuplicateContactsManager_contacts] = v19;
    swift_bridgeObjectRelease();
    v109 = v17;
    v20 = (_QWORD *)sub_18FA17680();
    v21 = (char *)v20[2];
    if (v21)
    {
      v127 = v6;
      v22 = v8;
      sub_18FA28858();
      v23 = (objc_class *)type metadata accessor for ManagedDuplicate();
      v24 = 0;
      do
      {
        v25 = (char *)v24 + 1;
        v26 = v20[(_QWORD)v24 + 4];
        v27 = objc_allocWithZone(v23);
        swift_bridgeObjectRetain_n();
        v28 = v22;
        sub_18FA00308(v26, v28);
        swift_bridgeObjectRelease();

        sub_18FA28834();
        sub_18FA28864();
        sub_18FA28870();
        sub_18FA28840();
        v24 = v25;
      }
      while (v21 != v25);
      v29 = v127;
      swift_bridgeObjectRelease();

    }
    else
    {
      swift_bridgeObjectRelease();
      v29 = MEMORY[0x1E0DEE9D8];
    }
    v112 = v29 >> 62;
    if (v29 >> 62)
    {
      swift_bridgeObjectRetain();
      v30 = sub_18FA288B8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v30 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v31 = MEMORY[0x1E0DEE9D8];
    v119 = v29;
    v120 = v30;
    if (!v30)
      break;
    v125 = MEMORY[0x1E0DEE9D8];
    a1 = &v125;
    sub_18F9DE90C(0, v30 & ~(v30 >> 63), 0);
    if (v30 < 0)
    {
      __break(1u);
      goto LABEL_123;
    }
    v2 = 0;
    v31 = v125;
    v32 = v29 & 0xC000000000000001;
    while (v30 != v2)
    {
      if (v32)
        v33 = (uint64_t *)MEMORY[0x194005370](v2, v119);
      else
        v33 = (uint64_t *)*(id *)(v119 + 8 * v2 + 32);
      a1 = v33;
      v34 = (uint64_t *)((char *)v33 + OBJC_IVAR___CNManagedDuplicate_signature);
      swift_beginAccess();
      v35 = v34[1];
      if (!v35)
        goto LABEL_126;
      v36 = *v34;
      swift_bridgeObjectRetain();

      v125 = v31;
      v38 = *(_QWORD *)(v31 + 16);
      v37 = *(_QWORD *)(v31 + 24);
      if (v38 >= v37 >> 1)
      {
        a1 = &v125;
        sub_18F9DE90C(v37 > 1, v38 + 1, 1);
        v31 = v125;
      }
      ++v2;
      *(_QWORD *)(v31 + 16) = v38 + 1;
      v39 = v31 + 16 * v38;
      *(_QWORD *)(v39 + 32) = v36;
      *(_QWORD *)(v39 + 40) = v35;
      v30 = v120;
      if (v120 == v2)
        goto LABEL_22;
    }
    __break(1u);
LABEL_116:
    __break(1u);
LABEL_117:
    __break(1u);
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    swift_once();
  }
LABEL_22:
  if (qword_1EE17E9C8 != -1)
    swift_once();
  v40 = sub_18FA28204();
  v41 = __swift_project_value_buffer(v40, (uint64_t)qword_1EE183588);
  swift_bridgeObjectRetain();
  v108 = (uint64_t *)v41;
  v42 = sub_18FA281EC();
  v43 = sub_18FA2863C();
  if (os_log_type_enabled(v42, v43))
  {
    v44 = (uint8_t *)swift_slowAlloc();
    v45 = v30;
    v46 = v44;
    *(_DWORD *)v44 = 134217984;
    v125 = v45;
    sub_18FA286E4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_18F8BD000, v42, v43, "Found %ld possible duplicate contacts to refresh", v46, 0xCu);
    MEMORY[0x194006DBC](v46, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
  }
  sub_18F9DA540();
  v21 = v15;
  if (v15)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v125 = 0;
    v126 = 0xE000000000000000;
    sub_18FA287D4();
    sub_18FA283A8();
    swift_getErrorValue();
    sub_18FA289CC();
    sub_18FA283A8();
    swift_bridgeObjectRelease();
    v47 = v125;
    v48 = v126;
    sub_18F9D7B80();
    swift_allocError();
    *(_QWORD *)v49 = v47;
    *(_QWORD *)(v49 + 8) = v48;
    *(_BYTE *)(v49 + 16) = 3;
    swift_willThrow();

    return;
  }
  sub_18F9E000C(0, &qword_1EE17EAD8);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE17EB40);
  v50 = swift_allocObject();
  *(_OWORD *)(v50 + 16) = xmmword_18FA40F90;
  *(_QWORD *)(v50 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EAB8);
  *(_QWORD *)(v50 + 64) = sub_18F9DE888();
  *(_QWORD *)(v50 + 32) = v31;
  swift_bridgeObjectRetain();
  v20 = (_QWORD *)sub_18FA28624();
  v30 = sub_18F9DB34C((uint64_t)v20);
  if ((unint64_t)v30 >> 62)
    goto LABEL_124;
  v51 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (2)
  {
    v107 = v21;
    if (v51)
    {
      v114 = v20;
      v122 = (uint64_t *)MEMORY[0x1E0DEE9D8];
      sub_18F9DE90C(0, v51 & ~(v51 >> 63), 0);
      if (v51 < 0)
      {
        __break(1u);
LABEL_126:
        __break(1u);
LABEL_127:
        __break(1u);
LABEL_128:
        __break(1u);
        return;
      }
      v2 = 0;
      a1 = v122;
      v117 = v30 & 0xC000000000000001;
      v52 = v30;
      do
      {
        if (v51 == v2)
          goto LABEL_116;
        if (v117)
          v53 = (char *)MEMORY[0x194005370](v2, v30);
        else
          v53 = (char *)*(id *)(v30 + 8 * v2 + 32);
        v54 = v53;
        v55 = &v53[OBJC_IVAR___CNManagedDuplicate_signature];
        swift_beginAccess();
        v56 = *((_QWORD *)v55 + 1);
        if (!v56)
          goto LABEL_127;
        v57 = *(_QWORD *)v55;
        swift_bridgeObjectRetain();

        v59 = v122[2];
        v58 = v122[3];
        if (v59 >= v58 >> 1)
          sub_18F9DE90C(v58 > 1, v59 + 1, 1);
        ++v2;
        v122[2] = v59 + 1;
        v60 = &v122[2 * v59];
        v60[4] = v57;
        v60[5] = v56;
        v30 = v52;
      }
      while (v51 != v2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v21 = v107;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      a1 = (uint64_t *)MEMORY[0x1E0DEE9D8];
    }
    v61 = v119;
    if (a1[2])
    {
      if (v112)
      {
        swift_bridgeObjectRetain();
        v2 = sub_18FA288B8();
        if (v2)
          goto LABEL_47;
      }
      else
      {
        v2 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v2)
        {
LABEL_47:
          v62 = 0;
          while (1)
          {
            if ((v119 & 0xC000000000000001) != 0)
              v65 = (char *)MEMORY[0x194005370](v62, v61);
            else
              v65 = (char *)*(id *)(v119 + 32 + 8 * v62);
            v21 = v65;
            v66 = __OFADD__(v62++, 1);
            if (v66)
              goto LABEL_118;
            v67 = v2;
            v68 = &v65[OBJC_IVAR___CNManagedDuplicate_signature];
            swift_beginAccess();
            v20 = (_QWORD *)*((_QWORD *)v68 + 1);
            if (!v20)
              goto LABEL_128;
            v69 = a1[2];
            if (!v69)
              goto LABEL_62;
            v70 = *(_QWORD *)v68;
            v71 = a1[4] == *(_QWORD *)v68 && v20 == (_QWORD *)a1[5];
            if (!v71 && (sub_18FA2896C() & 1) == 0)
            {
              if (v69 == 1)
                goto LABEL_62;
              v72 = a1[6] == v70 && v20 == (_QWORD *)a1[7];
              if (!v72 && (sub_18FA2896C() & 1) == 0)
                break;
            }
LABEL_48:
            v63 = 1;
LABEL_49:
            v64 = &v21[OBJC_IVAR___CNManagedDuplicate_isIgnored];
            swift_beginAccess();
            *v64 = v63;

            v2 = v67;
            v61 = v119;
            if (v62 == v67)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v21 = v107;
              goto LABEL_83;
            }
          }
          if (v69 != 2)
          {
            v73 = a1 + 9;
            v74 = 2;
            while (1)
            {
              v30 = v74 + 1;
              if (__OFADD__(v74, 1))
                break;
              if (*(v73 - 1) == v70 && v20 == (_QWORD *)*v73)
                goto LABEL_48;
              v110 = v74;
              if ((sub_18FA2896C() & 1) != 0)
                goto LABEL_48;
              v76 = v30;
              v63 = 0;
              v73 += 2;
              v74 = v110 + 1;
              if (v76 == v69)
                goto LABEL_49;
            }
LABEL_123:
            __break(1u);
LABEL_124:
            v51 = sub_18FA288B8();
            continue;
          }
LABEL_62:
          v63 = 0;
          goto LABEL_49;
        }
      }
      swift_bridgeObjectRelease();
    }
    break;
  }
  swift_bridgeObjectRelease();
LABEL_83:
  v77 = v21;
  sub_18F9D9338();
  if (v21)
  {
    v78 = v21;
    v79 = v21;
    a1 = v108;
    v80 = sub_18FA281EC();
    v81 = sub_18FA28648();
    if (os_log_type_enabled(v80, v81))
    {
      v82 = (uint8_t *)swift_slowAlloc();
      v83 = swift_slowAlloc();
      v124 = v83;
      *(_DWORD *)v82 = 136315138;
      swift_getErrorValue();
      v84 = sub_18FA289CC();
      a1 = (uint64_t *)v85;
      v123 = sub_18F9DE1F0(v84, v85, &v124);
      sub_18FA286E4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_18F8BD000, v80, v81, "Error saving refreshed duplicates. %s", v82, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x194006DBC](v83, -1, -1);
      MEMORY[0x194006DBC](v82, -1, -1);

    }
    else
    {

    }
    v61 = v119;
  }
  else
  {
    swift_bridgeObjectRetain();
    v86 = sub_18FA281EC();
    v87 = sub_18FA2863C();
    a1 = (uint64_t *)v87;
    if (os_log_type_enabled(v86, v87))
    {
      v88 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v88 = 134217984;
      v124 = v120;
      sub_18FA286E4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_18F8BD000, v86, (os_log_type_t)a1, "Successfully refreshed %ld duplicates", v88, 0xCu);
      MEMORY[0x194006DBC](v88, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease();
    }
  }
  v124 = MEMORY[0x1E0DEE9D8];
  if (v112)
  {
    swift_bridgeObjectRetain();
    v89 = sub_18FA288B8();
    if (v89)
      goto LABEL_93;
  }
  else
  {
    v89 = *(_QWORD *)((v61 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v89)
    {
LABEL_93:
      v90 = 0;
      v113 = v89;
      v115 = v61 & 0xC000000000000001;
      v111 = v61 + 32;
      do
      {
        if (v115)
          v91 = (char *)MEMORY[0x194005370](v90, v61);
        else
          v91 = (char *)*(id *)(v111 + 8 * v90);
        v92 = v91;
        v2 = MEMORY[0x1E0DEE9D8];
        v66 = __OFADD__(v90++, 1);
        if (v66)
          goto LABEL_117;
        v93 = *(_QWORD *)&v91[OBJC_IVAR___CNManagedDuplicate__privateContacts];
        if (v93 >> 62)
        {
          swift_bridgeObjectRetain();
          v94 = sub_18FA288B8();
          if (!v94)
          {
LABEL_111:

            swift_bridgeObjectRelease();
            goto LABEL_94;
          }
        }
        else
        {
          v94 = *(_QWORD *)((v93 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v94)
            goto LABEL_111;
        }
        v123 = v2;
        a1 = &v123;
        sub_18F9DE90C(0, v94 & ~(v94 >> 63), 0);
        if (v94 < 0)
          goto LABEL_119;
        v121 = v94;
        v116 = v92;
        v118 = v90;
        v95 = 0;
        v2 = v123;
        v96 = v93 & 0xC000000000000001;
        v97 = v93;
        do
        {
          if (v96)
            v98 = (id)MEMORY[0x194005370](v95, v93);
          else
            v98 = *(id *)(v93 + 8 * v95 + 32);
          v99 = v98;
          v100 = objc_msgSend(v98, sel_identifier);
          v101 = sub_18FA2833C();
          v103 = v102;

          v123 = v2;
          v105 = *(_QWORD *)(v2 + 16);
          v104 = *(_QWORD *)(v2 + 24);
          if (v105 >= v104 >> 1)
          {
            sub_18F9DE90C(v104 > 1, v105 + 1, 1);
            v2 = v123;
          }
          ++v95;
          *(_QWORD *)(v2 + 16) = v105 + 1;
          v106 = v2 + 16 * v105;
          *(_QWORD *)(v106 + 32) = v101;
          *(_QWORD *)(v106 + 40) = v103;
          v93 = v97;
        }
        while (v121 != v95);

        swift_bridgeObjectRelease();
        v90 = v118;
        v61 = v119;
        v89 = v113;
LABEL_94:
        a1 = &v124;
        sub_18FA0E5C0(v2);
      }
      while (v90 != v89);
    }
  }
  swift_bridgeObjectRelease_n();
  sub_18F9DAC48();

  swift_bridgeObjectRelease();
}

void _s8Contacts09DuplicateA7ManagerC39updateRecentImagesDatabaseForSignaturesyySaySSGFZ_0(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  _BOOL4 v13;
  uint8_t *v14;
  void *v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  Class *v27;
  unint64_t v28;
  char *v29;
  void *v30;
  Class v31;
  objc_class *v32;
  BOOL v33;
  uint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  char *v37;
  char *v38;
  char *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  CGFloat v43;
  CGFloat v44;
  CGFloat v45;
  CGFloat v46;
  NSString *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  unint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  CGFloat v62;
  CGFloat v63;
  CGFloat v64;
  CGFloat v65;
  NSString *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  char *v79;
  unint64_t v80;
  uint64_t v81;
  NSString *v82;
  double x;
  double y;
  double width;
  double height;
  id v87;
  void *v88;
  void *v89;
  char *v90;
  void *v91;
  void *v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  int64_t v96;
  uint64_t v97;
  NSObject *v98;
  os_log_type_t v99;
  uint8_t *v100;
  id v101;
  void *v102;
  id v103;
  id v104;
  NSObject *v105;
  os_log_type_t v106;
  uint8_t *v107;
  void *v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  id v116;
  uint64_t v117;
  unint64_t v118;
  NSObject *v119;
  char *v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  id v127[9];
  NSRect v128;
  NSRect v129;
  NSRect v130;

  v127[7] = *(id *)MEMORY[0x1E0C80C00];
  v2 = sub_18FA280CC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  if (*(_QWORD *)(a1 + 16))
  {
    v115 = (char *)&v111 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (qword_1EE17E9D0 != -1)
      goto LABEL_128;
    while (1)
    {
      sub_18F9E000C(0, &qword_1EE17EAD8);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE17EB40);
      v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_18FA40F90;
      *(_QWORD *)(v5 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EAB8);
      *(_QWORD *)(v5 + 64) = sub_18F9DE888();
      *(_QWORD *)(v5 + 32) = a1;
      swift_bridgeObjectRetain();
      v6 = (void *)sub_18FA28624();
      v7 = sub_18F9DB34C((uint64_t)v6);

      v8 = v7 >> 62;
      v119 = v7;
      if (v7 >> 62)
      {
        swift_bridgeObjectRetain();
        v7 = (unint64_t)v119;
        v9 = sub_18FA288B8();
        swift_bridgeObjectRelease();
        if (v9 < 1)
        {
LABEL_130:
          swift_bridgeObjectRelease();
          return;
        }
      }
      else
      {
        v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v9 < 1)
          goto LABEL_130;
      }
      v124 = v3;
      v116 = objc_msgSend(objc_allocWithZone((Class)CNContactImageStore), sel_init);
      if (qword_1EE17E9C8 != -1)
        swift_once();
      v10 = sub_18FA28204();
      v11 = __swift_project_value_buffer(v10, (uint64_t)qword_1EE183588);
      swift_bridgeObjectRetain();
      v3 = v7;
      v113 = v11;
      a1 = sub_18FA281EC();
      v12 = sub_18FA2863C();
      v13 = os_log_type_enabled((os_log_t)a1, v12);
      v125 = v2;
      v112 = (void *)v9;
      if (v13)
      {
        v2 = 12;
        v14 = (uint8_t *)swift_slowAlloc();
        v15 = (void *)v9;
        v16 = v14;
        *(_DWORD *)v14 = 134217984;
        v127[4] = v15;
        sub_18FA286E4();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_18F8BD000, (os_log_t)a1, v12, "Will updated recent images from %ld managed duplicates", v16, 0xCu);
        MEMORY[0x194006DBC](v16, -1, -1);

        if (v8)
          goto LABEL_9;
      }
      else
      {

        swift_bridgeObjectRelease();
        if (v8)
        {
LABEL_9:
          if (v3 < 0)
            a1 = (unint64_t)v119;
          else
            a1 = v3 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
          v3 = (uint64_t)v119;
          v17 = sub_18FA288B8();
          if (!v17)
          {
LABEL_116:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            v98 = sub_18FA281EC();
            v99 = sub_18FA2863C();
            if (os_log_type_enabled(v98, v99))
            {
              v100 = (uint8_t *)swift_slowAlloc();
              *(_DWORD *)v100 = 134217984;
              swift_bridgeObjectRelease();
              v127[0] = v112;
              sub_18FA286E4();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_18F8BD000, v98, v99, "Successfully updated recent images from %ld managed duplicates", v100, 0xCu);
              MEMORY[0x194006DBC](v100, -1, -1);

            }
            else
            {

              swift_bridgeObjectRelease_n();
            }
            return;
          }
          goto LABEL_16;
        }
      }
      v18 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      v17 = v18;
      if (!v18)
        goto LABEL_116;
LABEL_16:
      v19 = 0;
      v117 = v17;
      v118 = v3 & 0xC000000000000001;
      v114 = v3 + 32;
      while (1)
      {
        if (v118)
          v20 = (char *)MEMORY[0x194005370](v19, v3);
        else
          v20 = (char *)*(id *)(v114 + 8 * v19);
        v21 = v20;
        if (__OFADD__(v19++, 1))
          goto LABEL_125;
        v23 = &v20[OBJC_IVAR___CNManagedDuplicate_userSelectedContactImage];
        swift_beginAccess();
        v24 = *((_QWORD *)v23 + 1);
        a1 = (unint64_t)&v21[OBJC_IVAR___CNManagedDuplicate_managedCohorts];
        v120 = v21;
        v121 = v19;
        if (v24 == 1)
          break;
        swift_beginAccess();
        v3 = *(_QWORD *)a1;
        if (*(_QWORD *)a1 >> 62)
        {
          if (v3 < 0)
            a1 = *(_QWORD *)a1;
          else
            a1 = v3 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain_n();
          v2 = sub_18FA288B8();
          if (v2)
          {
LABEL_46:
            if (v2 < 1)
              goto LABEL_126;
            v34 = 0;
            v35 = v3 & 0xC000000000000001;
            v36 = (_QWORD *)MEMORY[0x1E0DEE9D8];
            v122 = v3 & 0xC000000000000001;
            v123 = v3;
            do
            {
              if (v35)
                v37 = (char *)MEMORY[0x194005370](v34, v3);
              else
                v37 = (char *)*(id *)(v3 + 8 * v34 + 32);
              v38 = v37;
              v39 = &v37[OBJC_IVAR___CNManagedCohort_imageData];
              swift_beginAccess();
              v40 = *((_QWORD *)v39 + 1);
              if (v40 >> 60 == 15)
              {

              }
              else
              {
                v41 = v2;
                v42 = *(_QWORD *)v39;
                v43 = *(double *)&v38[OBJC_IVAR___CNManagedCohort_cropRect];
                v44 = *(double *)&v38[OBJC_IVAR___CNManagedCohort_cropRect + 8];
                v45 = *(double *)&v38[OBJC_IVAR___CNManagedCohort_cropRect + 16];
                v46 = *(double *)&v38[OBJC_IVAR___CNManagedCohort_cropRect + 24];
                sub_18F9EA6C0(*(_QWORD *)v39, *((_QWORD *)v39 + 1));
                v128.origin.x = v43;
                v128.origin.y = v44;
                v128.size.width = v45;
                v128.size.height = v46;
                v47 = NSStringFromRect(v128);
                v48 = sub_18FA2833C();
                v50 = v49;

                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  v36 = sub_18F9FE040(0, v36[2] + 1, 1, v36);
                v52 = v36[2];
                v51 = v36[3];
                if (v52 >= v51 >> 1)
                  v36 = sub_18F9FE040((_QWORD *)(v51 > 1), v52 + 1, 1, v36);
                v36[2] = v52 + 1;
                v53 = &v36[4 * v52];
                v53[4] = v42;
                v53[5] = v40;
                v53[6] = v48;
                v53[7] = v50;
                v2 = v41;
                v35 = v122;
                v3 = v123;
              }
              ++v34;
            }
            while (v2 != v34);
            swift_bridgeObjectRelease_n();
LABEL_77:
            v21 = v120;
            v19 = v121;
            goto LABEL_90;
          }
        }
        else
        {
          v2 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n();
          if (v2)
            goto LABEL_46;
        }
        swift_bridgeObjectRelease_n();
LABEL_89:
        v36 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_90:
        if (v36[2] >= 7uLL)
          v74 = 7;
        else
          v74 = v36[2];
        sub_18FA28984();
        swift_unknownObjectRetain_n();
        v75 = swift_dynamicCastClass();
        if (!v75)
        {
          swift_bridgeObjectRelease();
          v75 = MEMORY[0x1E0DEE9D8];
        }
        v76 = *(_QWORD *)(v75 + 16);
        swift_release();
        if (v76 == v74)
        {
          v77 = (_QWORD *)swift_dynamicCastClass();
          if (v77)
            goto LABEL_99;
          swift_bridgeObjectRelease();
LABEL_98:
          v77 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          goto LABEL_99;
        }
        swift_bridgeObjectRelease();
        if (!v74)
          goto LABEL_98;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE180FD0);
        v95 = 4 * v74;
        v77 = (_QWORD *)swift_allocObject();
        v96 = _swift_stdlib_malloc_size(v77);
        v97 = v96 - 32;
        if (v96 < 32)
          v97 = v96 - 1;
        v77[2] = v74;
        v77[3] = 2 * (v97 >> 5);
        if (v36 + 4 < &v77[v95 + 4] && v77 + 4 < &v36[v95 + 4])
        {
          sub_18FA288F4();
          __break(1u);
          return;
        }
        swift_arrayInitWithCopy();
LABEL_99:
        swift_bridgeObjectRelease();
        v2 = v77[2];
        if (v2)
        {
          v127[0] = (id)MEMORY[0x1E0DEE9D8];
          sub_18FA28858();
          v123 = (unint64_t)v77;
          v78 = v77 + 7;
          v79 = v115;
          do
          {
            v81 = *(v78 - 3);
            v80 = *(v78 - 2);
            sub_18F9EA6C0(v81, v80);
            swift_bridgeObjectRetain();
            sub_18F9EA6C0(v81, v80);
            swift_bridgeObjectRetain();
            sub_18F9EA6C0(v81, v80);
            swift_bridgeObjectRetain();
            sub_18F9EA6C0(v81, v80);
            v82 = (NSString *)sub_18FA28330();
            v130 = NSRectFromString(v82);
            x = v130.origin.x;
            y = v130.origin.y;
            width = v130.size.width;
            height = v130.size.height;

            sub_18F9EA8A4(v81, v80);
            swift_bridgeObjectRelease();
            sub_18FA280C0();
            v87 = objc_allocWithZone((Class)CNContactImage);
            v88 = (void *)sub_18FA28090();
            sub_18F9EA8A4(v81, v80);
            v89 = (void *)sub_18FA280B4();
            objc_msgSend(v87, sel_initWithImageData_cropRect_lastUsedDate_, v88, v89, x, y, width, height);

            (*(void (**)(char *, uint64_t))(v124 + 8))(v79, v125);
            sub_18F9EA8A4(v81, v80);
            swift_bridgeObjectRelease();
            sub_18F9EA8A4(v81, v80);
            swift_bridgeObjectRelease();
            sub_18FA28834();
            sub_18FA28864();
            sub_18FA28870();
            sub_18FA28840();
            v78 += 4;
            --v2;
          }
          while (v2);
          a1 = (unint64_t)v127[0];
          swift_release();
          v21 = v120;
          v19 = v121;
          if (!(a1 >> 62))
          {
LABEL_103:
            if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_17;
            goto LABEL_104;
          }
        }
        else
        {
          swift_release();
          a1 = MEMORY[0x1E0DEE9D8];
          if (!(MEMORY[0x1E0DEE9D8] >> 62))
            goto LABEL_103;
        }
        swift_bridgeObjectRetain();
        v94 = sub_18FA288B8();
        swift_bridgeObjectRelease();
        if (!v94)
        {
LABEL_17:

          swift_bridgeObjectRelease();
          goto LABEL_18;
        }
LABEL_104:
        v90 = &v21[OBJC_IVAR___CNManagedDuplicate_primaryID];
        swift_beginAccess();
        if (!*((_QWORD *)v90 + 1))
          __break(1u);
        sub_18F9E000C(0, &qword_1EE1812D8);
        swift_bridgeObjectRetain();
        v91 = (void *)sub_18FA28438();
        swift_bridgeObjectRelease();
        v92 = (void *)sub_18FA28330();
        swift_bridgeObjectRelease();
        a1 = (unint64_t)objc_msgSend((id)objc_opt_self(), sel_saveRequestToCreateImages_forContactIdentifier_, v91, v92);

        v127[0] = 0;
        if ((objc_msgSend(v116, sel_performSaveRequest_error_, a1, v127) & 1) == 0)
        {
          v101 = v127[0];
          v102 = (void *)sub_18FA28030();

          swift_willThrow();
          swift_bridgeObjectRelease_n();

          v103 = v102;
          v104 = v102;
          v105 = sub_18FA281EC();
          v106 = sub_18FA28648();
          if (os_log_type_enabled(v105, v106))
          {
            v107 = (uint8_t *)swift_slowAlloc();
            v108 = (void *)swift_slowAlloc();
            v127[0] = v108;
            *(_DWORD *)v107 = 136315138;
            swift_getErrorValue();
            v109 = sub_18FA289CC();
            v126 = sub_18F9DE1F0(v109, v110, (uint64_t *)v127);
            sub_18FA286E4();
            swift_bridgeObjectRelease();

            _os_log_impl(&dword_18F8BD000, v105, v106, "Error updating recent images for merged duplicates %s", v107, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x194006DBC](v108, -1, -1);
            MEMORY[0x194006DBC](v107, -1, -1);

          }
          else
          {

          }
          return;
        }
        v93 = v127[0];

LABEL_18:
        v3 = (uint64_t)v119;
        if (v19 == v117)
          goto LABEL_116;
      }
      swift_beginAccess();
      v25 = *(_QWORD *)a1;
      v127[0] = (id)MEMORY[0x1E0DEE9D8];
      if ((unint64_t)v25 >> 62)
      {
        if (v25 < 0)
          a1 = v25;
        else
          a1 = v25 & 0xFFFFFFFFFFFFFF8;
        v73 = v21;
        swift_bridgeObjectRetain();
        v2 = sub_18FA288B8();
      }
      else
      {
        v2 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
        v26 = v21;
        swift_bridgeObjectRetain();
      }
      v27 = (Class *)&v21[OBJC_IVAR___CNManagedDuplicate_primaryID];
      swift_beginAccess();
      if (!v2)
      {
LABEL_59:
        v3 = (uint64_t)v127[0];
        swift_bridgeObjectRelease();
        v21 = v120;

        if (v3 < 0 || (v3 & 0x4000000000000000) != 0)
        {
          swift_bridgeObjectRetain();
          v2 = sub_18FA288B8();
          v19 = v121;
          if (v2)
          {
LABEL_62:
            if (v2 < 1)
              goto LABEL_127;
            v54 = 0;
            v55 = v3 & 0xC000000000000001;
            v36 = (_QWORD *)MEMORY[0x1E0DEE9D8];
            v122 = v3 & 0xC000000000000001;
            v123 = v3;
            do
            {
              if (v55)
                v56 = (char *)MEMORY[0x194005370](v54, v3);
              else
                v56 = (char *)*(id *)(v3 + 8 * v54 + 32);
              v57 = v56;
              v58 = &v56[OBJC_IVAR___CNManagedCohort_imageData];
              swift_beginAccess();
              v59 = *((_QWORD *)v58 + 1);
              if (v59 >> 60 == 15)
              {

              }
              else
              {
                v60 = v2;
                v61 = *(_QWORD *)v58;
                v62 = *(double *)&v57[OBJC_IVAR___CNManagedCohort_cropRect];
                v63 = *(double *)&v57[OBJC_IVAR___CNManagedCohort_cropRect + 8];
                v64 = *(double *)&v57[OBJC_IVAR___CNManagedCohort_cropRect + 16];
                v65 = *(double *)&v57[OBJC_IVAR___CNManagedCohort_cropRect + 24];
                sub_18F9EA6C0(*(_QWORD *)v58, *((_QWORD *)v58 + 1));
                v129.origin.x = v62;
                v129.origin.y = v63;
                v129.size.width = v64;
                v129.size.height = v65;
                v66 = NSStringFromRect(v129);
                v67 = sub_18FA2833C();
                v69 = v68;

                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  v36 = sub_18F9FE040(0, v36[2] + 1, 1, v36);
                v71 = v36[2];
                v70 = v36[3];
                if (v71 >= v70 >> 1)
                  v36 = sub_18F9FE040((_QWORD *)(v70 > 1), v71 + 1, 1, v36);
                v36[2] = v71 + 1;
                v72 = &v36[4 * v71];
                v72[4] = v61;
                v72[5] = v59;
                v72[6] = v67;
                v72[7] = v69;
                v2 = v60;
                v55 = v122;
                v3 = v123;
              }
              ++v54;
            }
            while (v2 != v54);
            swift_release_n();
            goto LABEL_77;
          }
        }
        else
        {
          v2 = *(_QWORD *)(v3 + 16);
          swift_bridgeObjectRetain();
          v19 = v121;
          if (v2)
            goto LABEL_62;
        }
        swift_release_n();
        goto LABEL_89;
      }
      v28 = 0;
      v123 = v25 & 0xC000000000000001;
      while (1)
      {
        if (v123)
        {
          v29 = (char *)MEMORY[0x194005370](v28, v25);
        }
        else
        {
          if (v28 >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_124;
          v29 = (char *)*(id *)(v25 + 8 * v28 + 32);
        }
        v30 = v29;
        v3 = v28 + 1;
        if (__OFADD__(v28, 1))
          break;
        a1 = (unint64_t)&v29[OBJC_IVAR___CNManagedCohort_identifier];
        swift_beginAccess();
        v31 = *(Class *)(a1 + 8);
        v32 = v27[1];
        if (v31)
        {
          if (v32)
          {
            v33 = *(Class *)a1 == *v27 && v31 == v32;
            if (v33 || (sub_18FA2896C() & 1) != 0)
            {
LABEL_42:

              goto LABEL_30;
            }
          }
        }
        else if (!v32)
        {
          goto LABEL_42;
        }
        a1 = (unint64_t)v127;
        sub_18FA28834();
        sub_18FA28864();
        sub_18FA28870();
        sub_18FA28840();
LABEL_30:
        ++v28;
        if (v3 == v2)
          goto LABEL_59;
      }
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      swift_once();
    }
  }
}

void _s8Contacts09DuplicateA7ManagerC40updateRecentPostersDatabaseForSignaturesyySaySSGFZ_0(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint8_t *v19;
  void *v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  BOOL v26;
  char *v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  char *v32;
  void *v33;
  unint64_t v34;
  Class v35;
  objc_class *v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  char *v41;
  void *v42;
  uint64_t *v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  unint64_t v49;
  uint64_t v50;
  char *v51;
  void *v52;
  uint64_t *v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t *v63;
  unint64_t v64;
  unint64_t *v65;
  unint64_t v66;
  char *v67;
  char *v68;
  id v69;
  void *v70;
  void *v71;
  void *v72;
  char *v73;
  void *v74;
  void *v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  int64_t v79;
  uint64_t v80;
  NSObject *v81;
  os_log_type_t v82;
  uint8_t *v83;
  id v84;
  void *v85;
  id v86;
  id v87;
  NSObject *v88;
  os_log_type_t v89;
  uint8_t *v90;
  void *v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  uint64_t v99;
  unint64_t v100;
  NSObject *v101;
  uint64_t v102;
  char *v103;
  unint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  id v112[9];

  v112[7] = *(id *)MEMORY[0x1E0C80C00];
  v2 = sub_18FA280CC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (char *)sub_18FA28108();
  MEMORY[0x1E0C80A78](v6);
  if (*(_QWORD *)(a1 + 16))
  {
    v108 = (char *)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    v109 = v8;
    v110 = v5;
    if (qword_1EE17E9D0 != -1)
      goto LABEL_128;
    while (1)
    {
      sub_18F9E000C(0, &qword_1EE17EAD8);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE17EB40);
      v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_18FA40F90;
      *(_QWORD *)(v9 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE17EAB8);
      *(_QWORD *)(v9 + 64) = sub_18F9DE888();
      *(_QWORD *)(v9 + 32) = a1;
      swift_bridgeObjectRetain();
      v10 = (void *)sub_18FA28624();
      v11 = sub_18F9DB34C((uint64_t)v10);

      v12 = v11 >> 62;
      v101 = v11;
      if (v11 >> 62)
      {
        swift_bridgeObjectRetain();
        v11 = (unint64_t)v101;
        v13 = sub_18FA288B8();
        swift_bridgeObjectRelease();
        if (v13 < 1)
        {
LABEL_130:
          swift_bridgeObjectRelease();
          return;
        }
      }
      else
      {
        v13 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v13 < 1)
          goto LABEL_130;
      }
      v106 = v6;
      v98 = objc_msgSend(objc_allocWithZone((Class)CNContactPosterStore), sel_init);
      if (qword_1EE17E9C8 != -1)
        swift_once();
      v14 = sub_18FA28204();
      v15 = __swift_project_value_buffer(v14, (uint64_t)qword_1EE183588);
      swift_bridgeObjectRetain();
      v16 = v11;
      v96 = v15;
      a1 = sub_18FA281EC();
      v17 = sub_18FA2863C();
      v18 = os_log_type_enabled((os_log_t)a1, v17);
      v107 = v3;
      v95 = (void *)v13;
      if (v18)
      {
        v19 = (uint8_t *)swift_slowAlloc();
        v20 = (void *)v13;
        v21 = v19;
        *(_DWORD *)v19 = 134217984;
        v112[4] = v20;
        sub_18FA286E4();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_18F8BD000, (os_log_t)a1, v17, "Will updated recent posters from %ld managed duplicates", v21, 0xCu);
        MEMORY[0x194006DBC](v21, -1, -1);

        if (v12)
          goto LABEL_9;
      }
      else
      {

        swift_bridgeObjectRelease();
        if (v12)
        {
LABEL_9:
          if (v16 < 0)
            a1 = (unint64_t)v101;
          else
            a1 = v16 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
          v16 = (uint64_t)v101;
          v22 = sub_18FA288B8();
          if (!v22)
          {
LABEL_116:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            v81 = sub_18FA281EC();
            v82 = sub_18FA2863C();
            if (os_log_type_enabled(v81, v82))
            {
              v83 = (uint8_t *)swift_slowAlloc();
              *(_DWORD *)v83 = 134217984;
              swift_bridgeObjectRelease();
              v112[0] = v95;
              sub_18FA286E4();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_18F8BD000, v81, v82, "Successfully updated recent posters from %ld managed duplicates", v83, 0xCu);
              MEMORY[0x194006DBC](v83, -1, -1);

            }
            else
            {

              swift_bridgeObjectRelease_n();
            }
            return;
          }
          goto LABEL_16;
        }
      }
      v23 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      v22 = v23;
      if (!v23)
        goto LABEL_116;
LABEL_16:
      v24 = 0;
      v99 = v22;
      v100 = v16 & 0xC000000000000001;
      v97 = v16 + 32;
      v105 = v2;
      while (1)
      {
        if (v100)
          v25 = (char *)MEMORY[0x194005370](v24, v16);
        else
          v25 = (char *)*(id *)(v97 + 8 * v24);
        v6 = v25;
        v26 = __OFADD__(v24, 1);
        v3 = v24 + 1;
        if (v26)
          goto LABEL_125;
        v27 = &v25[OBJC_IVAR___CNManagedDuplicate_userSelectedContactPoster];
        swift_beginAccess();
        v28 = *((_QWORD *)v27 + 1);
        a1 = (unint64_t)&v6[OBJC_IVAR___CNManagedDuplicate_managedCohorts];
        v102 = v3;
        v103 = v6;
        if (v28 >> 60 == 11)
          break;
        swift_beginAccess();
        v38 = *(_QWORD *)a1;
        if (*(_QWORD *)a1 >> 62)
        {
          if (v38 < 0)
            a1 = *(_QWORD *)a1;
          else
            a1 = v38 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain_n();
          v39 = sub_18FA288B8();
          if (v39)
          {
LABEL_46:
            if (v39 < 1)
              goto LABEL_126;
            v2 = 0;
            v40 = (_QWORD *)MEMORY[0x1E0DEE9D8];
            do
            {
              if ((v38 & 0xC000000000000001) != 0)
                v41 = (char *)MEMORY[0x194005370](v2, v38);
              else
                v41 = (char *)*(id *)(v38 + 8 * v2 + 32);
              v42 = v41;
              v43 = (uint64_t *)&v41[OBJC_IVAR___CNManagedCohort_posterData];
              swift_beginAccess();
              v44 = v43[1];
              if (v44 >> 60 == 15)
              {

              }
              else
              {
                v45 = *v43;
                sub_18F9EA6C0(v45, v44);

                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  v40 = sub_18F9FE14C(0, v40[2] + 1, 1, v40);
                v47 = v40[2];
                v46 = v40[3];
                if (v47 >= v46 >> 1)
                  v40 = sub_18F9FE14C((_QWORD *)(v46 > 1), v47 + 1, 1, v40);
                v40[2] = v47 + 1;
                v48 = &v40[2 * v47];
                v48[4] = v45;
                v48[5] = v44;
              }
              ++v2;
            }
            while (v39 != v2);
            swift_bridgeObjectRelease_n();
LABEL_77:
            v6 = v103;
            goto LABEL_90;
          }
        }
        else
        {
          v39 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n();
          if (v39)
            goto LABEL_46;
        }
        swift_bridgeObjectRelease_n();
LABEL_89:
        v40 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_90:
        if (v40[2] >= 3uLL)
          v60 = 3;
        else
          v60 = v40[2];
        sub_18FA28984();
        swift_unknownObjectRetain_n();
        v61 = swift_dynamicCastClass();
        if (!v61)
        {
          swift_bridgeObjectRelease();
          v61 = MEMORY[0x1E0DEE9D8];
        }
        v62 = *(_QWORD *)(v61 + 16);
        swift_release();
        if (v62 == v60)
        {
          v63 = (unint64_t *)swift_dynamicCastClass();
          v24 = v102;
          if (v63)
            goto LABEL_99;
          swift_bridgeObjectRelease();
LABEL_98:
          v63 = (unint64_t *)MEMORY[0x1E0DEE9D8];
          goto LABEL_99;
        }
        swift_bridgeObjectRelease();
        v24 = v102;
        if (!v60)
          goto LABEL_98;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1812D0);
        v78 = 2 * v60;
        v63 = (unint64_t *)swift_allocObject();
        v79 = _swift_stdlib_malloc_size(v63);
        v80 = v79 - 32;
        if (v79 < 32)
          v80 = v79 - 17;
        v63[2] = v60;
        v63[3] = 2 * (v80 >> 4);
        if (v40 + 4 < &v63[v78 + 4] && v63 + 4 < &v40[v78 + 4])
        {
          sub_18FA288F4();
          __break(1u);
          return;
        }
        swift_arrayInitWithCopy();
LABEL_99:
        swift_bridgeObjectRelease();
        v64 = v63[2];
        if (v64)
        {
          v112[0] = (id)MEMORY[0x1E0DEE9D8];
          sub_18FA28858();
          v104 = (unint64_t)v63;
          v65 = v63 + 5;
          do
          {
            v2 = *(v65 - 1);
            v66 = *v65;
            sub_18F9EA6C0(v2, *v65);
            sub_18F9EA6C0(v2, v66);
            v67 = v108;
            sub_18FA280FC();
            sub_18FA280D8();
            (*(void (**)(char *, char *))(v109 + 8))(v67, v106);
            sub_18F9EA6C0(v2, v66);
            v68 = v110;
            sub_18FA280C0();
            v69 = objc_allocWithZone((Class)CNContactPoster);
            v70 = (void *)sub_18FA28330();
            swift_bridgeObjectRelease();
            v71 = (void *)sub_18FA28090();
            v72 = (void *)sub_18FA280B4();
            objc_msgSend(v69, sel_initWithIdentifier_posterData_lastUsedDate_, v70, v71, v72);

            sub_18F9EA8A4(v2, v66);
            (*(void (**)(char *, uint64_t))(v107 + 8))(v68, v105);
            sub_18F9EA8A4(v2, v66);
            sub_18F9EA8A4(v2, v66);
            sub_18FA28834();
            sub_18FA28864();
            sub_18FA28870();
            sub_18FA28840();
            v65 += 2;
            --v64;
          }
          while (v64);
          a1 = (unint64_t)v112[0];
          swift_release();
          v24 = v102;
          v6 = v103;
          if (!(a1 >> 62))
          {
LABEL_103:
            if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_17;
            goto LABEL_104;
          }
        }
        else
        {
          swift_release();
          a1 = MEMORY[0x1E0DEE9D8];
          if (!(MEMORY[0x1E0DEE9D8] >> 62))
            goto LABEL_103;
        }
        swift_bridgeObjectRetain();
        v77 = sub_18FA288B8();
        swift_bridgeObjectRelease();
        if (!v77)
        {
LABEL_17:

          swift_bridgeObjectRelease();
          goto LABEL_18;
        }
LABEL_104:
        v73 = &v6[OBJC_IVAR___CNManagedDuplicate_primaryID];
        swift_beginAccess();
        if (!*((_QWORD *)v73 + 1))
          __break(1u);
        sub_18F9E000C(0, &qword_1EE1812C8);
        swift_bridgeObjectRetain();
        v74 = (void *)sub_18FA28438();
        swift_bridgeObjectRelease();
        v75 = (void *)sub_18FA28330();
        swift_bridgeObjectRelease();
        a1 = (unint64_t)objc_msgSend((id)objc_opt_self(), sel_saveRequestToCreatePosters_forContactIdentifier_, v74, v75);

        v112[0] = 0;
        if ((objc_msgSend(v98, sel_performSaveRequest_error_, a1, v112) & 1) == 0)
        {
          v84 = v112[0];
          v85 = (void *)sub_18FA28030();

          swift_willThrow();
          swift_bridgeObjectRelease_n();

          v86 = v85;
          v87 = v85;
          v88 = sub_18FA281EC();
          v89 = sub_18FA28648();
          if (os_log_type_enabled(v88, v89))
          {
            v90 = (uint8_t *)swift_slowAlloc();
            v91 = (void *)swift_slowAlloc();
            v112[0] = v91;
            *(_DWORD *)v90 = 136315138;
            swift_getErrorValue();
            v92 = sub_18FA289CC();
            v111 = sub_18F9DE1F0(v92, v93, (uint64_t *)v112);
            sub_18FA286E4();
            swift_bridgeObjectRelease();

            _os_log_impl(&dword_18F8BD000, v88, v89, "Error updating recent posters for merged duplicates %s", v90, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x194006DBC](v91, -1, -1);
            MEMORY[0x194006DBC](v90, -1, -1);

          }
          else
          {

          }
          return;
        }
        v76 = v112[0];

LABEL_18:
        v16 = (uint64_t)v101;
        if (v24 == v99)
          goto LABEL_116;
      }
      swift_beginAccess();
      v3 = *(_QWORD *)a1;
      v112[0] = (id)MEMORY[0x1E0DEE9D8];
      if ((unint64_t)v3 >> 62)
      {
        if (v3 < 0)
          a1 = v3;
        else
          a1 = v3 & 0xFFFFFFFFFFFFFF8;
        v59 = v6;
        swift_bridgeObjectRetain();
        v29 = sub_18FA288B8();
      }
      else
      {
        v29 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
        v30 = v6;
        swift_bridgeObjectRetain();
      }
      v2 = (uint64_t)&v6[OBJC_IVAR___CNManagedDuplicate_primaryID];
      swift_beginAccess();
      if (!v29)
      {
LABEL_59:
        v49 = (unint64_t)v112[0];
        swift_bridgeObjectRelease();
        v6 = v103;

        if ((v49 & 0x8000000000000000) != 0 || (v49 & 0x4000000000000000) != 0)
        {
          swift_bridgeObjectRetain();
          v50 = sub_18FA288B8();
          if (v50)
          {
LABEL_62:
            if (v50 < 1)
              goto LABEL_127;
            v2 = 0;
            v40 = (_QWORD *)MEMORY[0x1E0DEE9D8];
            do
            {
              if ((v49 & 0xC000000000000001) != 0)
                v51 = (char *)MEMORY[0x194005370](v2, v49);
              else
                v51 = (char *)*(id *)(v49 + 8 * v2 + 32);
              v52 = v51;
              v53 = (uint64_t *)&v51[OBJC_IVAR___CNManagedCohort_posterData];
              swift_beginAccess();
              v54 = v53[1];
              if (v54 >> 60 == 15)
              {

              }
              else
              {
                v55 = *v53;
                sub_18F9EA6C0(v55, v54);

                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  v40 = sub_18F9FE14C(0, v40[2] + 1, 1, v40);
                v57 = v40[2];
                v56 = v40[3];
                if (v57 >= v56 >> 1)
                  v40 = sub_18F9FE14C((_QWORD *)(v56 > 1), v57 + 1, 1, v40);
                v40[2] = v57 + 1;
                v58 = &v40[2 * v57];
                v58[4] = v55;
                v58[5] = v54;
              }
              ++v2;
            }
            while (v50 != v2);
            swift_release_n();
            goto LABEL_77;
          }
        }
        else
        {
          v50 = *(_QWORD *)(v49 + 16);
          swift_bridgeObjectRetain();
          if (v50)
            goto LABEL_62;
        }
        swift_release_n();
        goto LABEL_89;
      }
      v31 = 0;
      v104 = v3 & 0xC000000000000001;
      v6 = (char *)(v3 & 0xFFFFFFFFFFFFFF8);
      while (1)
      {
        if (v104)
        {
          v32 = (char *)MEMORY[0x194005370](v31, v3);
        }
        else
        {
          if (v31 >= *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_124;
          v32 = (char *)*(id *)(v3 + 8 * v31 + 32);
        }
        v33 = v32;
        v34 = v31 + 1;
        if (__OFADD__(v31, 1))
          break;
        a1 = (unint64_t)&v32[OBJC_IVAR___CNManagedCohort_identifier];
        swift_beginAccess();
        v35 = *(Class *)(a1 + 8);
        v36 = *(objc_class **)(v2 + 8);
        if (v35)
        {
          if (v36)
          {
            v37 = *(_QWORD *)a1 == *(_QWORD *)v2 && v35 == v36;
            if (v37 || (sub_18FA2896C() & 1) != 0)
            {
LABEL_42:

              goto LABEL_30;
            }
          }
        }
        else if (!v36)
        {
          goto LABEL_42;
        }
        a1 = (unint64_t)v112;
        sub_18FA28834();
        sub_18FA28864();
        sub_18FA28870();
        sub_18FA28840();
LABEL_30:
        ++v31;
        if (v34 == v29)
          goto LABEL_59;
      }
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      swift_once();
    }
  }
}

uint64_t method lookup function for DuplicateContactsManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DuplicateContactsManager.duplicates.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of DuplicateContactsManager.__allocating_init(withContactStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t dispatch thunk of DuplicateContactsManager.applyMergeResultToSaveRequest(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t sub_18FA213FC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_18FA21420(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 16) + 16))(*(_QWORD *)(v1 + 16), a1 & 1);
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18FA2146C()
{
  uint64_t v0;

  return sub_18FA18EB4(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(uint64_t (**)(uint64_t))(v0 + 40));
}

uint64_t sub_18FA2147C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_18FA214A0()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  _QWORD *v3;

  v2 = *(const void **)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_18F9F0E24;
  return ((uint64_t (*)(const void *))((char *)&dword_1EE181288 + dword_1EE181288))(v2);
}

uint64_t sub_18FA2150C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18FA21530(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_18F9F0E24;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EE1812B8 + dword_1EE1812B8))(a1, v4);
}

uint64_t sub_18FA215A0()
{
  return swift_deallocObject();
}

uint64_t sub_18FA215B0(uint64_t a1)
{
  uint64_t v1;

  return sub_18F9E1E80(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t sub_18FA215B8(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_18F9E000C(255, a2);
    result = MEMORY[0x194006D14](MEMORY[0x1E0DEFCF8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t __getABSPublicABCNCompatibilityClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  return -[CNContactProviderSupportManager initWithAuditToken:].cold.1(v0);
}

uint64_t __getLNSpotlightAppEntityMapperClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  return +[CNUserSetupPictureManager userSetupPictureData].cold.1(v0);
}

uint64_t __getIMMeCardSharingStateControllerClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  return __getIMNicknameControllerClass_block_invoke_cold_1(v0);
}

uint64_t __getIMNicknameControllerClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  return +[CNContactMetadataPersistentStoreManager createModel].cold.1(v0);
}

uint64_t __getCRRecentContactsLibraryClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  return __getCRSearchQueryClass_block_invoke_cold_1(v0);
}

uint64_t __getCRSearchQueryClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  return __getCRSearchPredicateClass_block_invoke_cold_1(v0);
}

void __getCRSearchPredicateClass_block_invoke_cold_1()
{
  NSObject *v0;

  v0 = abort_report_np();
  -[CNContactFetchRequest initWithCoder:].cold.1(v0);
}

uint64_t __getCNDonationStoreClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  return __63__CNLaunchServicesRemoteAdapter_createConnectionWithInterface___block_invoke_cold_1(v0);
}

uint64_t __getIMNicknameClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  return -[CNDowntimeWhitelist whitelistedHandleStringsFromHandleStrings:error:].cold.1(v0);
}

void CNImageUtilsCreateMmappedBitmapContext_cold_1()
{
  __assert_rtn("CNImageUtilsCreateMmappedBitmapContext", "CNImageUtilities.m", 345, "bitsPerComponent == 5 || bitsPerComponent == 8");
}

void CNImageUtilsCroppedImageDataFromFullSizeImageData_cold_1(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_2(&dword_18F8BD000, a1, a3, "[LikenessResolver] can't create image source from data!", a5, a6, a7, a8, 0);
}

void CNImageUtilsCroppedImageDataFromFullSizeImageData_cold_2(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_2(&dword_18F8BD000, a1, a3, "[LikenessResolver] can't create image PNG or JPG!", a5, a6, a7, a8, 0);
}

uint64_t sub_18FA27E74()
{
  return MEMORY[0x1E0CADE58]();
}

uint64_t sub_18FA27E80()
{
  return MEMORY[0x1E0CAE430]();
}

uint64_t sub_18FA27E8C()
{
  return MEMORY[0x1E0CAE4B8]();
}

uint64_t sub_18FA27E98()
{
  return MEMORY[0x1E0CAE8D0]();
}

uint64_t sub_18FA27EA4()
{
  return MEMORY[0x1E0CAE8F0]();
}

uint64_t sub_18FA27EB0()
{
  return MEMORY[0x1E0CAE8F8]();
}

uint64_t sub_18FA27EBC()
{
  return MEMORY[0x1E0CAE9A0]();
}

uint64_t sub_18FA27EC8()
{
  return MEMORY[0x1E0CAE9B8]();
}

uint64_t sub_18FA27ED4()
{
  return MEMORY[0x1E0CAE9C8]();
}

uint64_t sub_18FA27EE0()
{
  return MEMORY[0x1E0CAEA10]();
}

uint64_t sub_18FA27EEC()
{
  return MEMORY[0x1E0CAEA18]();
}

uint64_t sub_18FA27EF8()
{
  return MEMORY[0x1E0CAEA20]();
}

uint64_t sub_18FA27F04()
{
  return MEMORY[0x1E0CAEAB0]();
}

uint64_t sub_18FA27F10()
{
  return MEMORY[0x1E0CAEB20]();
}

uint64_t sub_18FA27F1C()
{
  return MEMORY[0x1E0CAEB38]();
}

uint64_t sub_18FA27F28()
{
  return MEMORY[0x1E0CAEB50]();
}

uint64_t sub_18FA27F34()
{
  return MEMORY[0x1E0CAF6F0]();
}

uint64_t sub_18FA27F40()
{
  return MEMORY[0x1E0CAF6F8]();
}

uint64_t sub_18FA27F4C()
{
  return MEMORY[0x1E0CAF700]();
}

uint64_t sub_18FA27F58()
{
  return MEMORY[0x1E0CAF708]();
}

uint64_t sub_18FA27F64()
{
  return MEMORY[0x1E0CAF710]();
}

uint64_t sub_18FA27F70()
{
  return MEMORY[0x1E0CAF718]();
}

uint64_t sub_18FA27F7C()
{
  return MEMORY[0x1E0CAF720]();
}

uint64_t sub_18FA27F88()
{
  return MEMORY[0x1E0CAF730]();
}

uint64_t sub_18FA27F94()
{
  return MEMORY[0x1E0CAF738]();
}

uint64_t sub_18FA27FA0()
{
  return MEMORY[0x1E0CAF740]();
}

uint64_t sub_18FA27FAC()
{
  return MEMORY[0x1E0CAF788]();
}

uint64_t sub_18FA27FB8()
{
  return MEMORY[0x1E0CAF790]();
}

uint64_t sub_18FA27FC4()
{
  return MEMORY[0x1E0CAF8D8]();
}

uint64_t sub_18FA27FD0()
{
  return MEMORY[0x1E0CAF8E8]();
}

uint64_t sub_18FA27FDC()
{
  return MEMORY[0x1E0CAF8F8]();
}

uint64_t sub_18FA27FE8()
{
  return MEMORY[0x1E0CAF900]();
}

uint64_t sub_18FA27FF4()
{
  return MEMORY[0x1E0CAF920]();
}

uint64_t sub_18FA28000()
{
  return MEMORY[0x1E0CAF928]();
}

uint64_t sub_18FA2800C()
{
  return MEMORY[0x1E0CAF930]();
}

uint64_t sub_18FA28018()
{
  return MEMORY[0x1E0CAF940]();
}

uint64_t sub_18FA28024()
{
  return MEMORY[0x1E0CAF980]();
}

uint64_t sub_18FA28030()
{
  return MEMORY[0x1E0CAF990]();
}

uint64_t sub_18FA2803C()
{
  return MEMORY[0x1E0CAFB58]();
}

uint64_t sub_18FA28048()
{
  return MEMORY[0x1E0CAFDE0]();
}

uint64_t sub_18FA28054()
{
  return MEMORY[0x1E0CAFE38]();
}

uint64_t sub_18FA28060()
{
  return MEMORY[0x1E0CAFE78]();
}

uint64_t sub_18FA2806C()
{
  return MEMORY[0x1E0CAFE80]();
}

uint64_t sub_18FA28078()
{
  return MEMORY[0x1E0CAFF00]();
}

uint64_t sub_18FA28084()
{
  return MEMORY[0x1E0CAFFF8]();
}

uint64_t sub_18FA28090()
{
  return MEMORY[0x1E0CB01F0]();
}

uint64_t sub_18FA2809C()
{
  return MEMORY[0x1E0CB01F8]();
}

uint64_t sub_18FA280A8()
{
  return MEMORY[0x1E0CB0228]();
}

uint64_t sub_18FA280B4()
{
  return MEMORY[0x1E0CB06B8]();
}

uint64_t sub_18FA280C0()
{
  return MEMORY[0x1E0CB07F8]();
}

uint64_t sub_18FA280CC()
{
  return MEMORY[0x1E0CB0870]();
}

uint64_t sub_18FA280D8()
{
  return MEMORY[0x1E0CB0910]();
}

uint64_t sub_18FA280E4()
{
  return MEMORY[0x1E0CB0930]();
}

uint64_t sub_18FA280F0()
{
  return MEMORY[0x1E0CB0958]();
}

uint64_t sub_18FA280FC()
{
  return MEMORY[0x1E0CB0988]();
}

uint64_t sub_18FA28108()
{
  return MEMORY[0x1E0CB0998]();
}

uint64_t sub_18FA28114()
{
  return MEMORY[0x1E0CB0CC8]();
}

uint64_t sub_18FA28120()
{
  return MEMORY[0x1E0CB0E38]();
}

uint64_t sub_18FA2812C()
{
  return MEMORY[0x1E0CAA3F8]();
}

uint64_t sub_18FA28138()
{
  return MEMORY[0x1E0CAA400]();
}

uint64_t sub_18FA28144()
{
  return MEMORY[0x1E0CAA410]();
}

uint64_t sub_18FA28150()
{
  return MEMORY[0x1E0CAA418]();
}

uint64_t sub_18FA2815C()
{
  return MEMORY[0x1E0CAA428]();
}

uint64_t sub_18FA28168()
{
  return MEMORY[0x1E0CAA430]();
}

uint64_t sub_18FA28174()
{
  return MEMORY[0x1E0CAA448]();
}

uint64_t sub_18FA28180()
{
  return MEMORY[0x1E0CAA480]();
}

uint64_t sub_18FA2818C()
{
  return MEMORY[0x1E0CAA498]();
}

uint64_t sub_18FA28198()
{
  return MEMORY[0x1E0CAA4A8]();
}

uint64_t sub_18FA281A4()
{
  return MEMORY[0x1E0CAA4B8]();
}

uint64_t sub_18FA281B0()
{
  return MEMORY[0x1E0CAA4D0]();
}

uint64_t _s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0()
{
  return MEMORY[0x1E0CAA4D8]();
}

uint64_t sub_18FA281C8()
{
  return MEMORY[0x1E0CAA4E0]();
}

uint64_t sub_18FA281D4()
{
  return MEMORY[0x1E0CAA500]();
}

uint64_t sub_18FA281E0()
{
  return MEMORY[0x1E0CAA508]();
}

uint64_t sub_18FA281EC()
{
  return MEMORY[0x1E0DF2240]();
}

uint64_t sub_18FA281F8()
{
  return MEMORY[0x1E0DF2248]();
}

uint64_t sub_18FA28204()
{
  return MEMORY[0x1E0DF2258]();
}

uint64_t sub_18FA28210()
{
  return MEMORY[0x1E0CA92A8]();
}

uint64_t sub_18FA2821C()
{
  return MEMORY[0x1E0CA92B0]();
}

uint64_t sub_18FA28228()
{
  return MEMORY[0x1E0CA92C8]();
}

uint64_t sub_18FA28234()
{
  return MEMORY[0x1E0CA9A18]();
}

uint64_t sub_18FA28240()
{
  return MEMORY[0x1E0CA9A48]();
}

uint64_t sub_18FA2824C()
{
  return MEMORY[0x1E0DE9D70]();
}

uint64_t sub_18FA28258()
{
  return MEMORY[0x1E0DE9D78]();
}

uint64_t sub_18FA28264()
{
  return MEMORY[0x1E0CB17D8]();
}

uint64_t sub_18FA28270()
{
  return MEMORY[0x1E0CB1808]();
}

uint64_t sub_18FA2827C()
{
  return MEMORY[0x1E0DE9F38]();
}

uint64_t sub_18FA28288()
{
  return MEMORY[0x1E0DE9F78]();
}

uint64_t sub_18FA28294()
{
  return MEMORY[0x1E0DE9FA8]();
}

uint64_t sub_18FA282A0()
{
  return MEMORY[0x1E0DEA020]();
}

uint64_t sub_18FA282AC()
{
  return MEMORY[0x1E0DEA1B8]();
}

uint64_t sub_18FA282B8()
{
  return MEMORY[0x1E0DEA1C0]();
}

uint64_t sub_18FA282C4()
{
  return MEMORY[0x1E0DEA3B0]();
}

uint64_t sub_18FA282D0()
{
  return MEMORY[0x1E0DEA568]();
}

uint64_t sub_18FA282DC()
{
  return MEMORY[0x1E0CB18A0]();
}

uint64_t sub_18FA282E8()
{
  return MEMORY[0x1E0CB18C0]();
}

uint64_t sub_18FA282F4()
{
  return MEMORY[0x1E0CB18D8]();
}

uint64_t sub_18FA28300()
{
  return MEMORY[0x1E0CB18E0]();
}

uint64_t sub_18FA2830C()
{
  return MEMORY[0x1E0CB18E8]();
}

uint64_t sub_18FA28318()
{
  return MEMORY[0x1E0CB18F0]();
}

uint64_t sub_18FA28324()
{
  return MEMORY[0x1E0CB18F8]();
}

uint64_t sub_18FA28330()
{
  return MEMORY[0x1E0CB1940]();
}

uint64_t sub_18FA2833C()
{
  return MEMORY[0x1E0CB1980]();
}

uint64_t sub_18FA28348()
{
  return MEMORY[0x1E0CB1988]();
}

uint64_t sub_18FA28354()
{
  return MEMORY[0x1E0CB19C0]();
}

uint64_t sub_18FA28360()
{
  return MEMORY[0x1E0CB19E8]();
}

uint64_t sub_18FA2836C()
{
  return MEMORY[0x1E0CB1A18]();
}

uint64_t sub_18FA28378()
{
  return MEMORY[0x1E0CB1A40]();
}

uint64_t sub_18FA28384()
{
  return MEMORY[0x1E0DEA5F8]();
}

uint64_t sub_18FA28390()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t sub_18FA2839C()
{
  return MEMORY[0x1E0DEA7B8]();
}

uint64_t sub_18FA283A8()
{
  return MEMORY[0x1E0DEA800]();
}

uint64_t sub_18FA283B4()
{
  return MEMORY[0x1E0DEA850]();
}

uint64_t sub_18FA283C0()
{
  return MEMORY[0x1E0DEAA58]();
}

uint64_t sub_18FA283CC()
{
  return MEMORY[0x1E0DEAA68]();
}

uint64_t sub_18FA283D8()
{
  return MEMORY[0x1E0DEAAD8]();
}

uint64_t sub_18FA283E4()
{
  return MEMORY[0x1E0DEAB00]();
}

uint64_t sub_18FA283F0()
{
  return MEMORY[0x1E0DEAB08]();
}

uint64_t sub_18FA283FC()
{
  return MEMORY[0x1E0DEAB20]();
}

uint64_t sub_18FA28408()
{
  return MEMORY[0x1E0DEAB38]();
}

uint64_t sub_18FA28414()
{
  return MEMORY[0x1E0DEAB48]();
}

uint64_t sub_18FA28420()
{
  return MEMORY[0x1E0DEABA0]();
}

uint64_t sub_18FA2842C()
{
  return MEMORY[0x1E0DEADA0]();
}

uint64_t sub_18FA28438()
{
  return MEMORY[0x1E0CB1AC0]();
}

uint64_t sub_18FA28444()
{
  return MEMORY[0x1E0CB1AE8]();
}

uint64_t sub_18FA28450()
{
  return MEMORY[0x1E0DEADB0]();
}

uint64_t sub_18FA2845C()
{
  return MEMORY[0x1E0DEADB8]();
}

uint64_t sub_18FA28468()
{
  return MEMORY[0x1E0DEADC0]();
}

uint64_t sub_18FA28474()
{
  return MEMORY[0x1E0DEADE8]();
}

uint64_t sub_18FA28480()
{
  return MEMORY[0x1E0DEADF0]();
}

uint64_t sub_18FA2848C()
{
  return MEMORY[0x1E0DEADF8]();
}

uint64_t sub_18FA28498()
{
  return MEMORY[0x1E0DEAE08]();
}

uint64_t sub_18FA284A4()
{
  return MEMORY[0x1E0DEAE10]();
}

uint64_t sub_18FA284B0()
{
  return MEMORY[0x1E0DEAE28]();
}

uint64_t sub_18FA284BC()
{
  return MEMORY[0x1E0DEAE58]();
}

uint64_t sub_18FA284C8()
{
  return MEMORY[0x1E0DEAE60]();
}

uint64_t sub_18FA284D4()
{
  return MEMORY[0x1E0DEAE78]();
}

uint64_t sub_18FA284E0()
{
  return MEMORY[0x1E0DEAE80]();
}

uint64_t sub_18FA284EC()
{
  return MEMORY[0x1E0DEAEC8]();
}

uint64_t sub_18FA284F8()
{
  return MEMORY[0x1E0DEAF00]();
}

uint64_t sub_18FA28504()
{
  return MEMORY[0x1E0DEAF78]();
}

uint64_t sub_18FA28510()
{
  return MEMORY[0x1E0CB1B28]();
}

uint64_t sub_18FA2851C()
{
  return MEMORY[0x1E0DF05B8]();
}

uint64_t sub_18FA28528()
{
  return MEMORY[0x1E0DF05C8]();
}

uint64_t sub_18FA28534()
{
  return MEMORY[0x1E0DF05D0]();
}

uint64_t sub_18FA28540()
{
  return MEMORY[0x1E0DF05E0]();
}

uint64_t sub_18FA2854C()
{
  return MEMORY[0x1E0DF0688]();
}

uint64_t sub_18FA28558()
{
  return MEMORY[0x1E0DF0748]();
}

uint64_t sub_18FA28564()
{
  return MEMORY[0x1E0DF0750]();
}

uint64_t sub_18FA28570()
{
  return MEMORY[0x1E0DF0870]();
}

uint64_t sub_18FA2857C()
{
  return MEMORY[0x1E0DF08C8]();
}

uint64_t sub_18FA28588()
{
  return MEMORY[0x1E0DEB258]();
}

uint64_t sub_18FA28594()
{
  return MEMORY[0x1E0DEB2C8]();
}

uint64_t sub_18FA285A0()
{
  return MEMORY[0x1E0DEB310]();
}

uint64_t sub_18FA285AC()
{
  return MEMORY[0x1E0DEB340]();
}

uint64_t sub_18FA285B8()
{
  return MEMORY[0x1E0DEB370]();
}

uint64_t sub_18FA285C4()
{
  return MEMORY[0x1E0DEB388]();
}

uint64_t sub_18FA285D0()
{
  return MEMORY[0x1E0DEB3B0]();
}

uint64_t sub_18FA285DC()
{
  return MEMORY[0x1E0DEB528]();
}

uint64_t sub_18FA285E8()
{
  return MEMORY[0x1E0DEB560]();
}

uint64_t sub_18FA285F4()
{
  return MEMORY[0x1E0DEB5B0]();
}

uint64_t sub_18FA28600()
{
  return MEMORY[0x1E0DEB5D0]();
}

uint64_t sub_18FA2860C()
{
  return MEMORY[0x1E0DEB620]();
}

uint64_t sub_18FA28618()
{
  return MEMORY[0x1E0DEB6D0]();
}

uint64_t sub_18FA28624()
{
  return MEMORY[0x1E0CB1C90]();
}

uint64_t sub_18FA28630()
{
  return MEMORY[0x1E0DF2270]();
}

uint64_t sub_18FA2863C()
{
  return MEMORY[0x1E0DF2278]();
}

uint64_t sub_18FA28648()
{
  return MEMORY[0x1E0DF2280]();
}

uint64_t sub_18FA28654()
{
  return MEMORY[0x1E0DF2290]();
}

uint64_t sub_18FA28660()
{
  return MEMORY[0x1E0C977B8]();
}

uint64_t sub_18FA2866C()
{
  return MEMORY[0x1E0C977D0]();
}

uint64_t sub_18FA28678()
{
  return MEMORY[0x1E0C977D8]();
}

uint64_t sub_18FA28684()
{
  return MEMORY[0x1E0CB1FA0]();
}

uint64_t sub_18FA28690()
{
  return MEMORY[0x1E0CB20D0]();
}

uint64_t sub_18FA2869C()
{
  return MEMORY[0x1E0CB20E0]();
}

uint64_t sub_18FA286A8()
{
  return MEMORY[0x1E0DEFCD8]();
}

uint64_t sub_18FA286B4()
{
  return MEMORY[0x1E0DEFCE0]();
}

uint64_t sub_18FA286C0()
{
  return MEMORY[0x1E0DEFCF0]();
}

uint64_t sub_18FA286CC()
{
  return MEMORY[0x1E0DEB940]();
}

uint64_t sub_18FA286D8()
{
  return MEMORY[0x1E0DEBB68]();
}

uint64_t sub_18FA286E4()
{
  return MEMORY[0x1E0DEBC20]();
}

uint64_t sub_18FA286F0()
{
  return MEMORY[0x1E0DEBC90]();
}

uint64_t sub_18FA286FC()
{
  return MEMORY[0x1E0CB2480]();
}

uint64_t sub_18FA28708()
{
  return MEMORY[0x1E0CB24A8]();
}

uint64_t sub_18FA28714()
{
  return MEMORY[0x1E0CB2570]();
}

uint64_t sub_18FA28720()
{
  return MEMORY[0x1E0DEBE50]();
}

uint64_t sub_18FA2872C()
{
  return MEMORY[0x1E0DEC068]();
}

uint64_t sub_18FA28738()
{
  return MEMORY[0x1E0DEC078]();
}

uint64_t sub_18FA28744()
{
  return MEMORY[0x1E0DEC0B0]();
}

uint64_t sub_18FA28750()
{
  return MEMORY[0x1E0DEC0E0]();
}

uint64_t sub_18FA2875C()
{
  return MEMORY[0x1E0DEC0F8]();
}

uint64_t sub_18FA28768()
{
  return MEMORY[0x1E0DEC110]();
}

uint64_t sub_18FA28774()
{
  return MEMORY[0x1E0DEC118]();
}

uint64_t sub_18FA28780()
{
  return MEMORY[0x1E0DEC168]();
}

uint64_t sub_18FA2878C()
{
  return MEMORY[0x1E0DEC178]();
}

uint64_t sub_18FA28798()
{
  return MEMORY[0x1E0DEC1B0]();
}

uint64_t sub_18FA287A4()
{
  return MEMORY[0x1E0DEC248]();
}

uint64_t sub_18FA287B0()
{
  return MEMORY[0x1E0DEC250]();
}

uint64_t sub_18FA287BC()
{
  return MEMORY[0x1E0DEC258]();
}

uint64_t sub_18FA287C8()
{
  return MEMORY[0x1E0DEC260]();
}

uint64_t sub_18FA287D4()
{
  return MEMORY[0x1E0DEC2A8]();
}

uint64_t sub_18FA287E0()
{
  return MEMORY[0x1E0DEC2B0]();
}

uint64_t sub_18FA287EC()
{
  return MEMORY[0x1E0DEC300]();
}

uint64_t sub_18FA287F8()
{
  return MEMORY[0x1E0DEC3D0]();
}

uint64_t sub_18FA28804()
{
  return MEMORY[0x1E0DEC3E0]();
}

uint64_t sub_18FA28810()
{
  return MEMORY[0x1E0DEC3E8]();
}

uint64_t sub_18FA2881C()
{
  return MEMORY[0x1E0DEC588]();
}

uint64_t sub_18FA28828()
{
  return MEMORY[0x1E0DEC5F8]();
}

uint64_t sub_18FA28834()
{
  return MEMORY[0x1E0DEC660]();
}

uint64_t sub_18FA28840()
{
  return MEMORY[0x1E0DEC670]();
}

uint64_t sub_18FA2884C()
{
  return MEMORY[0x1E0DEC680]();
}

uint64_t sub_18FA28858()
{
  return MEMORY[0x1E0DEC688]();
}

uint64_t sub_18FA28864()
{
  return MEMORY[0x1E0DEC6C0]();
}

uint64_t sub_18FA28870()
{
  return MEMORY[0x1E0DEC6C8]();
}

uint64_t sub_18FA2887C()
{
  return MEMORY[0x1E0DEC6E0]();
}

uint64_t sub_18FA28888()
{
  return MEMORY[0x1E0DEC700]();
}

uint64_t sub_18FA28894()
{
  return MEMORY[0x1E0DEC708]();
}

uint64_t sub_18FA288A0()
{
  return MEMORY[0x1E0DECBE0]();
}

uint64_t sub_18FA288AC()
{
  return MEMORY[0x1E0DECBF8]();
}

uint64_t sub_18FA288B8()
{
  return MEMORY[0x1E0DECD18]();
}

uint64_t sub_18FA288C4()
{
  return MEMORY[0x1E0DECD20]();
}

uint64_t sub_18FA288D0()
{
  return MEMORY[0x1E0DECD38]();
}

uint64_t sub_18FA288DC()
{
  return MEMORY[0x1E0DECD40]();
}

uint64_t sub_18FA288E8()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t sub_18FA288F4()
{
  return MEMORY[0x1E0DECD70]();
}

uint64_t sub_18FA28900()
{
  return MEMORY[0x1E0DECF28]();
}

uint64_t sub_18FA2890C()
{
  return MEMORY[0x1E0DECFC0]();
}

uint64_t sub_18FA28918()
{
  return MEMORY[0x1E0DECFC8]();
}

uint64_t sub_18FA28924()
{
  return MEMORY[0x1E0DECFF0]();
}

uint64_t sub_18FA28930()
{
  return MEMORY[0x1E0DED1A0]();
}

uint64_t sub_18FA2893C()
{
  return MEMORY[0x1E0DED1B0]();
}

uint64_t sub_18FA28948()
{
  return MEMORY[0x1E0DED1D0]();
}

uint64_t sub_18FA28954()
{
  return MEMORY[0x1E0DED1E8]();
}

uint64_t sub_18FA28960()
{
  return MEMORY[0x1E0DF0DD0]();
}

uint64_t sub_18FA2896C()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t sub_18FA28978()
{
  return MEMORY[0x1E0DED768]();
}

uint64_t sub_18FA28984()
{
  return MEMORY[0x1E0DED770]();
}

uint64_t sub_18FA28990()
{
  return MEMORY[0x1E0DF0EC0]();
}

uint64_t sub_18FA2899C()
{
  return MEMORY[0x1E0DEDAE0]();
}

uint64_t sub_18FA289A8()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t sub_18FA289B4()
{
  return MEMORY[0x1E0CB2628]();
}

uint64_t sub_18FA289C0()
{
  return MEMORY[0x1E0CB2640]();
}

uint64_t sub_18FA289CC()
{
  return MEMORY[0x1E0CB2650]();
}

uint64_t sub_18FA289D8()
{
  return MEMORY[0x1E0DEDB10]();
}

uint64_t sub_18FA289E4()
{
  return MEMORY[0x1E0DEDB18]();
}

uint64_t sub_18FA289F0()
{
  return MEMORY[0x1E0DEDB20]();
}

uint64_t sub_18FA289FC()
{
  return MEMORY[0x1E0DEDB28]();
}

uint64_t sub_18FA28A08()
{
  return MEMORY[0x1E0DEDEF8]();
}

uint64_t sub_18FA28A14()
{
  return MEMORY[0x1E0DEDF40]();
}

uint64_t sub_18FA28A20()
{
  return MEMORY[0x1E0DEE240]();
}

uint64_t sub_18FA28A2C()
{
  return MEMORY[0x1E0DEE8E0]();
}

uint64_t sub_18FA28A38()
{
  return MEMORY[0x1E0DEE8E8]();
}

uint64_t ABAccountCopyIdentifier()
{
  return MEMORY[0x1E0CF55A0]();
}

uint64_t ABAccountCopyInternalUUID()
{
  return MEMORY[0x1E0CF55A8]();
}

uint64_t ABAccountCreate()
{
  return MEMORY[0x1E0CF55B0]();
}

uint64_t ABAccountSetIdentifier()
{
  return MEMORY[0x1E0CF55B8]();
}

uint64_t ABAccountSetInternalUUID()
{
  return MEMORY[0x1E0CF55C0]();
}

uint64_t ABAddLimitedAccessForBundle()
{
  return MEMORY[0x1E0CF55D0]();
}

BOOL ABAddressBookAddRecord(ABAddressBookRef addressBook, ABRecordRef record, CFErrorRef *error)
{
  return MEMORY[0x1E0CF55D8](addressBook, record, error);
}

uint64_t ABAddressBookAnalyzeDatabase()
{
  return MEMORY[0x1E0CF55E0]();
}

uint64_t ABAddressBookCopyAccountIdentifierForSource()
{
  return MEMORY[0x1E0CF55F0]();
}

uint64_t ABAddressBookCopyAccountWithIdentifier()
{
  return MEMORY[0x1E0CF55F8]();
}

uint64_t ABAddressBookCopyAccountsWithUUIDs()
{
  return MEMORY[0x1E0CF5600]();
}

uint64_t ABAddressBookCopyAllLabelsForProperty()
{
  return MEMORY[0x1E0CF5610]();
}

uint64_t ABAddressBookCopyAllPeopleForBufferPredicate()
{
  return MEMORY[0x1E0CF5618]();
}

uint64_t ABAddressBookCopyArrayOfAllAccounts()
{
  return MEMORY[0x1E0CF5620]();
}

CFArrayRef ABAddressBookCopyArrayOfAllGroups(ABAddressBookRef addressBook)
{
  return (CFArrayRef)MEMORY[0x1E0CF5628](addressBook);
}

CFArrayRef ABAddressBookCopyArrayOfAllGroupsInSource(ABAddressBookRef addressBook, ABRecordRef source)
{
  return (CFArrayRef)MEMORY[0x1E0CF5630](addressBook, source);
}

CFArrayRef ABAddressBookCopyArrayOfAllPeopleInSource(ABAddressBookRef addressBook, ABRecordRef source)
{
  return (CFArrayRef)MEMORY[0x1E0CF5638](addressBook, source);
}

CFArrayRef ABAddressBookCopyArrayOfAllPeopleInSourceWithSortOrdering(ABAddressBookRef addressBook, ABRecordRef source, ABPersonSortOrdering sortOrdering)
{
  return (CFArrayRef)MEMORY[0x1E0CF5640](addressBook, source, *(_QWORD *)&sortOrdering);
}

uint64_t ABAddressBookCopyArrayOfAllPeopleMatching()
{
  return MEMORY[0x1E0CF5648]();
}

CFArrayRef ABAddressBookCopyArrayOfAllSources(ABAddressBookRef addressBook)
{
  return (CFArrayRef)MEMORY[0x1E0CF5650](addressBook);
}

uint64_t ABAddressBookCopyArrayOfAllSourcesInAccount()
{
  return MEMORY[0x1E0CF5658]();
}

uint64_t ABAddressBookCopyArrayOfAllSourcesIncludingDisabledSources()
{
  return MEMORY[0x1E0CF5660]();
}

uint64_t ABAddressBookCopyArrayOfAllSourcesWithAccountIdentifier()
{
  return MEMORY[0x1E0CF5668]();
}

uint64_t ABAddressBookCopyArrayOfPreferredNamePeopleForGroupsAndSourcesWithSortOrdering()
{
  return MEMORY[0x1E0CF5670]();
}

ABRecordRef ABAddressBookCopyDefaultSource(ABAddressBookRef addressBook)
{
  return (ABRecordRef)MEMORY[0x1E0CF5690](addressBook);
}

uint64_t ABAddressBookCopyGroupsWithUUIDs()
{
  return MEMORY[0x1E0CF5698]();
}

uint64_t ABAddressBookCopyLocalSource()
{
  return MEMORY[0x1E0CF56A0]();
}

uint64_t ABAddressBookCopyMe()
{
  return MEMORY[0x1E0CF56B0]();
}

uint64_t ABAddressBookCopyPeopleWithLinkIdentifiers()
{
  return MEMORY[0x1E0CF56B8]();
}

CFArrayRef ABAddressBookCopyPeopleWithName(ABAddressBookRef addressBook, CFStringRef name)
{
  return (CFArrayRef)MEMORY[0x1E0CF56C0](addressBook, name);
}

uint64_t ABAddressBookCopyPeopleWithUUIDs()
{
  return MEMORY[0x1E0CF56C8]();
}

uint64_t ABAddressBookCopyPersonMatchingInternalUUID()
{
  return MEMORY[0x1E0CF56D0]();
}

uint64_t ABAddressBookCopyPersonMatchingMapData()
{
  return MEMORY[0x1E0CF56D8]();
}

uint64_t ABAddressBookCopySourceWithAccountAndExternalIdentifiers()
{
  return MEMORY[0x1E0CF56E0]();
}

uint64_t ABAddressBookCopySourceWithProviderIdentifier()
{
  return MEMORY[0x1E0CF56E8]();
}

uint64_t ABAddressBookCopySourcesWithUUIDs()
{
  return MEMORY[0x1E0CF56F0]();
}

uint64_t ABAddressBookCopyUniqueIdentifier()
{
  return MEMORY[0x1E0CF56F8]();
}

uint64_t ABAddressBookCopyValue()
{
  return MEMORY[0x1E0CF5700]();
}

uint64_t ABAddressBookCreateWithDatabaseDirectory()
{
  return MEMORY[0x1E0CF5708]();
}

ABAddressBookRef ABAddressBookCreateWithOptions(CFDictionaryRef options, CFErrorRef *error)
{
  return (ABAddressBookRef)MEMORY[0x1E0CF5710](options, error);
}

uint64_t ABAddressBookFindPersonMatchingEmailAddress()
{
  return MEMORY[0x1E0CF5750]();
}

uint64_t ABAddressBookFindPersonMatchingMatchingDictionary()
{
  return MEMORY[0x1E0CF5758]();
}

uint64_t ABAddressBookFindPersonMatchingMultiValueUUID()
{
  return MEMORY[0x1E0CF5760]();
}

uint64_t ABAddressBookFindPersonMatchingUserActivityUserInfo()
{
  return MEMORY[0x1E0CF5768]();
}

uint64_t ABAddressBookGetAccountForSource()
{
  return MEMORY[0x1E0CF5770]();
}

ABAuthorizationStatus ABAddressBookGetAuthorizationStatus(void)
{
  return MEMORY[0x1E0CF5778]();
}

uint64_t ABAddressBookGetDefaultSourceForAccount()
{
  return MEMORY[0x1E0CF5788]();
}

CFIndex ABAddressBookGetGroupCount(ABAddressBookRef addressBook)
{
  return MEMORY[0x1E0CF5790](addressBook);
}

ABRecordRef ABAddressBookGetGroupWithRecordID(ABAddressBookRef addressBook, ABRecordID recordID)
{
  return (ABRecordRef)MEMORY[0x1E0CF5798](addressBook, *(_QWORD *)&recordID);
}

CFIndex ABAddressBookGetPersonCount(ABAddressBookRef addressBook)
{
  return MEMORY[0x1E0CF57A0](addressBook);
}

ABRecordRef ABAddressBookGetPersonWithRecordID(ABAddressBookRef addressBook, ABRecordID recordID)
{
  return (ABRecordRef)MEMORY[0x1E0CF57A8](addressBook, *(_QWORD *)&recordID);
}

uint64_t ABAddressBookGetPreferredNamePeopleCountForManagedConfiguration()
{
  return MEMORY[0x1E0CF57B0]();
}

uint64_t ABAddressBookGetSearchCollator()
{
  return MEMORY[0x1E0CF57B8]();
}

uint64_t ABAddressBookGetSequenceNumber()
{
  return MEMORY[0x1E0CF57C0]();
}

uint64_t ABAddressBookGetSourceCountIncludingDisabled()
{
  return MEMORY[0x1E0CF57C8]();
}

ABRecordRef ABAddressBookGetSourceWithRecordID(ABAddressBookRef addressBook, ABRecordID sourceID)
{
  return (ABRecordRef)MEMORY[0x1E0CF57D0](addressBook, *(_QWORD *)&sourceID);
}

uint64_t ABAddressBookGetWordTokenizer()
{
  return MEMORY[0x1E0CF57D8]();
}

uint64_t ABAddressBookHasMeCardChanges()
{
  return MEMORY[0x1E0CF57E0]();
}

uint64_t ABAddressBookIndexSetOfAllowedSourceIdentifiersIncludingDisabledSources()
{
  return MEMORY[0x1E0CF57E8]();
}

uint64_t ABAddressBookInvalidateCaches()
{
  return MEMORY[0x1E0CF57F0]();
}

uint64_t ABAddressBookMoveAllRecordsInSourceToSource()
{
  return MEMORY[0x1E0CF5800]();
}

uint64_t ABAddressBookPrimePersonContextForIdentifier()
{
  return MEMORY[0x1E0CF5808]();
}

BOOL ABAddressBookRemoveRecord(ABAddressBookRef addressBook, ABRecordRef record, CFErrorRef *error)
{
  return MEMORY[0x1E0CF5830](addressBook, record, error);
}

uint64_t ABAddressBookResetSortDataInProcessIfNeeded()
{
  return MEMORY[0x1E0CF5838]();
}

BOOL ABAddressBookSave(ABAddressBookRef addressBook, CFErrorRef *error)
{
  return MEMORY[0x1E0CF5848](addressBook, error);
}

uint64_t ABAddressBookSetAccountForSource()
{
  return MEMORY[0x1E0CF5858]();
}

uint64_t ABAddressBookSetBestMeIfNeeded()
{
  return MEMORY[0x1E0CF5860]();
}

uint64_t ABAddressBookSetDefaultSource()
{
  return MEMORY[0x1E0CF5868]();
}

uint64_t ABAddressBookSetDefaultSourceForAccount()
{
  return MEMORY[0x1E0CF5870]();
}

uint64_t ABAddressBookSetIgnoresContactProviderRestrictions()
{
  return MEMORY[0x1E0CF5878]();
}

uint64_t ABAddressBookSetIgnoresGuardianRestrictions()
{
  return MEMORY[0x1E0CF5880]();
}

uint64_t ABAddressBookSetMe()
{
  return MEMORY[0x1E0CF5890]();
}

uint64_t ABAddressBookSetSaveTransactionIdentifier()
{
  return MEMORY[0x1E0CF5898]();
}

uint64_t ABAddressBookSetSuppressChangeNotifications()
{
  return MEMORY[0x1E0CF58A0]();
}

uint64_t ABAddressBookSetUsedByContacts()
{
  return MEMORY[0x1E0CF58A8]();
}

uint64_t ABAddressBookSetValue()
{
  return MEMORY[0x1E0CF58B0]();
}

uint64_t ABAddressBookShouldAnalyzeDatabase()
{
  return MEMORY[0x1E0CF58B8]();
}

uint64_t ABApplyLimitedAccessSyncEvents()
{
  return MEMORY[0x1E0CF58D0]();
}

uint64_t ABCFTSIsEnabled()
{
  return MEMORY[0x1E0CF58D8]();
}

uint64_t ABCPersonPropertySupportsLazyLoading()
{
  return MEMORY[0x1E0CF58F0]();
}

uint64_t ABChangeHistoryClearChangesUpToSequenceNumberForClient()
{
  return MEMORY[0x1E0CF58F8]();
}

uint64_t ABChangeHistoryClearEntityChangeTableRowIDsForClient()
{
  return MEMORY[0x1E0CF5900]();
}

uint64_t ABChangeHistoryGetChanges()
{
  return MEMORY[0x1E0CF5910]();
}

uint64_t ABChangeHistoryGetLatestConsumedSequenceNumberForClient()
{
  return MEMORY[0x1E0CF5918]();
}

uint64_t ABChangeHistoryHasClientWithIdentifier()
{
  return MEMORY[0x1E0CF5920]();
}

uint64_t ABChangeHistoryRegisterClientForSource()
{
  return MEMORY[0x1E0CF5930]();
}

uint64_t ABChangeHistorySetAddressBookClientIdentifier()
{
  return MEMORY[0x1E0CF5938]();
}

uint64_t ABChangeHistoryUnregisterClientForSource()
{
  return MEMORY[0x1E0CF5940]();
}

uint64_t ABCopyArrayOfPreferredNamePeopleAtOffsetForManagedConfiguration()
{
  return MEMORY[0x1E0CF5948]();
}

uint64_t ABCopyArrayOfSectionListOffsetsForManagedConfiguration()
{
  return MEMORY[0x1E0CF5950]();
}

uint64_t ABDeviceIsBeforeFirstUnlockWithDataProtected()
{
  return MEMORY[0x1E0CF5960]();
}

uint64_t ABDropAllLimitedAccessRows()
{
  return MEMORY[0x1E0CF5968]();
}

uint64_t ABGetLimitedAccessLastSyncSequenceNumber()
{
  return MEMORY[0x1E0CF5970]();
}

uint64_t ABGetProcessDistributedNotificationIdentifier()
{
  return MEMORY[0x1E0CF5978]();
}

uint64_t ABGetWatchLimitedAccessSyncDataStartingAtSequenceNumber()
{
  return MEMORY[0x1E0CF5980]();
}

BOOL ABGroupAddMember(ABRecordRef group, ABRecordRef person, CFErrorRef *error)
{
  return MEMORY[0x1E0CF5988](group, person, error);
}

uint64_t ABGroupAddSubgroup()
{
  return MEMORY[0x1E0CF5990]();
}

uint64_t ABGroupCopyArrayOfAllGroupsWithMembersOfTypeWithUUIDs()
{
  return MEMORY[0x1E0CF5998]();
}

CFArrayRef ABGroupCopyArrayOfAllMembersWithSortOrdering(ABRecordRef group, ABPersonSortOrdering sortOrdering)
{
  return (CFArrayRef)MEMORY[0x1E0CF59A0](group, *(_QWORD *)&sortOrdering);
}

CFArrayRef ABGroupCopyArrayOfAllSubgroups(ABGroupRef group)
{
  return (CFArrayRef)MEMORY[0x1E0CF59A8](group);
}

ABRecordRef ABGroupCopySource(ABRecordRef group)
{
  return (ABRecordRef)MEMORY[0x1E0CF59B0](group);
}

ABRecordRef ABGroupCreate(void)
{
  return (ABRecordRef)MEMORY[0x1E0CF59B8]();
}

ABRecordRef ABGroupCreateInSource(ABRecordRef source)
{
  return (ABRecordRef)MEMORY[0x1E0CF59C0](source);
}

BOOL ABGroupRemoveMember(ABRecordRef group, ABRecordRef member, CFErrorRef *error)
{
  return MEMORY[0x1E0CF59C8](group, member, error);
}

uint64_t ABGroupRemoveSubgroup()
{
  return MEMORY[0x1E0CF59D0]();
}

uint64_t ABInitialize()
{
  return MEMORY[0x1E0CF59E0]();
}

uint64_t ABLimitedAccessContactIdentifiersForBundle()
{
  return MEMORY[0x1E0CF59E8]();
}

uint64_t ABLimitedAccessContactsCountForBundle()
{
  return MEMORY[0x1E0CF59F0]();
}

uint64_t ABLimitedAccessUpdateTable()
{
  return MEMORY[0x1E0CF59F8]();
}

uint64_t ABLogDisplayInternalAlert()
{
  return MEMORY[0x1E0CF5A00]();
}

uint64_t ABLogErrorPtr()
{
  return MEMORY[0x1E0CF5A08]();
}

uint64_t ABLogSimulateCrashReport()
{
  return MEMORY[0x1E0CF5A10]();
}

uint64_t ABMultiValueBatchLoad()
{
  return MEMORY[0x1E0CF5A20]();
}

CFStringRef ABMultiValueCopyLabelAtIndex(ABMultiValueRef multiValue, CFIndex index)
{
  return (CFStringRef)MEMORY[0x1E0CF5A30](multiValue, index);
}

uint64_t ABMultiValueCopyUUIDAtIndex()
{
  return MEMORY[0x1E0CF5A38]();
}

CFTypeRef ABMultiValueCopyValueAtIndex(ABMultiValueRef multiValue, CFIndex index)
{
  return (CFTypeRef)MEMORY[0x1E0CF5A40](multiValue, index);
}

ABMutableMultiValueRef ABMultiValueCreateMutable(ABPropertyType type)
{
  return (ABMutableMultiValueRef)MEMORY[0x1E0CF5A48](*(_QWORD *)&type);
}

ABMutableMultiValueRef ABMultiValueCreateMutableCopy(ABMultiValueRef multiValue)
{
  return (ABMutableMultiValueRef)MEMORY[0x1E0CF5A50](multiValue);
}

CFIndex ABMultiValueGetCount(ABMultiValueRef multiValue)
{
  return MEMORY[0x1E0CF5A58](multiValue);
}

ABMultiValueIdentifier ABMultiValueGetIdentifierAtIndex(ABMultiValueRef multiValue, CFIndex index)
{
  return MEMORY[0x1E0CF5A70](multiValue, index);
}

uint64_t ABMultiValueInsertValueAndLabelAndUUIDAtIndex()
{
  return MEMORY[0x1E0CF5A80]();
}

BOOL ABMultiValueInsertValueAndLabelAtIndex(ABMutableMultiValueRef multiValue, CFTypeRef value, CFStringRef label, CFIndex index, ABMultiValueIdentifier *outIdentifier)
{
  return MEMORY[0x1E0CF5A88](multiValue, value, label, index, outIdentifier);
}

BOOL ABMultiValueRemoveValueAndLabelAtIndex(ABMutableMultiValueRef multiValue, CFIndex index)
{
  return MEMORY[0x1E0CF5A90](multiValue, index);
}

BOOL ABMultiValueReplaceLabelAtIndex(ABMutableMultiValueRef multiValue, CFStringRef label, CFIndex index)
{
  return MEMORY[0x1E0CF5A98](multiValue, label, index);
}

BOOL ABMultiValueReplaceValueAtIndex(ABMutableMultiValueRef multiValue, CFTypeRef value, CFIndex index)
{
  return MEMORY[0x1E0CF5AA0](multiValue, value, index);
}

BOOL ABMultiValueSetPrimaryIdentifier(ABMutableMultiValueRef multiValue, CFStringRef identifier)
{
  return MEMORY[0x1E0CF5AA8](multiValue, identifier);
}

uint64_t ABOSLogImageMetadata()
{
  return MEMORY[0x1E0CF5AB0]();
}

uint64_t ABPeoplePickerPrefs()
{
  return MEMORY[0x1E0CF5AB8]();
}

CFComparisonResult ABPersonComparePeopleByName(ABRecordRef person1, ABRecordRef person2, ABPersonSortOrdering ordering)
{
  return MEMORY[0x1E0CF5AC0](person1, person2, *(_QWORD *)&ordering);
}

CFArrayRef ABPersonCopyArrayOfAllLinkedPeople(ABRecordRef person)
{
  return (CFArrayRef)MEMORY[0x1E0CF5AC8](person);
}

uint64_t ABPersonCopyImageDataAndCropRect()
{
  return MEMORY[0x1E0CF5AD8]();
}

CFDataRef ABPersonCopyImageDataWithFormat(ABRecordRef person, ABPersonImageFormat format)
{
  return (CFDataRef)MEMORY[0x1E0CF5AE0](person, *(_QWORD *)&format);
}

uint64_t ABPersonCopyLinkUUID()
{
  return MEMORY[0x1E0CF5AE8]();
}

uint64_t ABPersonCopyPreferredLinkedPersonForImage()
{
  return MEMORY[0x1E0CF5AF0]();
}

uint64_t ABPersonCopySoundIdentifierForMultiValueIdentifier()
{
  return MEMORY[0x1E0CF5B08]();
}

ABRecordRef ABPersonCopySource(ABRecordRef person)
{
  return (ABRecordRef)MEMORY[0x1E0CF5B10](person);
}

ABRecordRef ABPersonCreate(void)
{
  return (ABRecordRef)MEMORY[0x1E0CF5B18]();
}

uint64_t ABPersonCreateInSourceAndReturnError()
{
  return MEMORY[0x1E0CF5B20]();
}

uint64_t ABPersonCreateUnifiedPerson()
{
  return MEMORY[0x1E0CF5B28]();
}

ABPersonCompositeNameFormat ABPersonGetCompositeNameFormatForRecord(ABRecordRef record)
{
  return MEMORY[0x1E0CF5B30](record);
}

uint64_t ABPersonGetEditNameFormat()
{
  return MEMORY[0x1E0CF5B38]();
}

uint64_t ABPersonGetMatchingDictionary()
{
  return MEMORY[0x1E0CF5B40]();
}

uint64_t ABPersonGetShortNameFormat()
{
  return MEMORY[0x1E0CF5B48]();
}

uint64_t ABPersonGetShortNameFormatEnabled()
{
  return MEMORY[0x1E0CF5B50]();
}

uint64_t ABPersonGetShortNamePreferNicknames()
{
  return MEMORY[0x1E0CF5B58]();
}

ABPersonSortOrdering ABPersonGetSortOrdering(void)
{
  return MEMORY[0x1E0CF5B60]();
}

ABPropertyType ABPersonGetTypeOfProperty(ABPropertyID property)
{
  return MEMORY[0x1E0CF5B68](*(_QWORD *)&property);
}

uint64_t ABPersonGetUserActivityUserInfo()
{
  return MEMORY[0x1E0CF5B70]();
}

BOOL ABPersonHasImageData(ABRecordRef person)
{
  return MEMORY[0x1E0CF5B78](person);
}

uint64_t ABPersonLinkPerson()
{
  return MEMORY[0x1E0CF5B80]();
}

BOOL ABPersonRemoveImageData(ABRecordRef person, CFErrorRef *error)
{
  return MEMORY[0x1E0CF5B88](person, error);
}

uint64_t ABPersonSetCompositeNameFormat()
{
  return MEMORY[0x1E0CF5B90]();
}

BOOL ABPersonSetImageData(ABRecordRef person, CFDataRef imageData, CFErrorRef *error)
{
  return MEMORY[0x1E0CF5B98](person, imageData, error);
}

uint64_t ABPersonSetImageDataAndCropRect()
{
  return MEMORY[0x1E0CF5BA0]();
}

uint64_t ABPersonSetImageDataDerivedFromFormatAndReturnError()
{
  return MEMORY[0x1E0CF5BA8]();
}

uint64_t ABPersonSetImageDataWithCropRect()
{
  return MEMORY[0x1E0CF5BB0]();
}

uint64_t ABPersonSetLinkUUID()
{
  return MEMORY[0x1E0CF5BB8]();
}

uint64_t ABPersonSetPreferredLinkedPersonForImage()
{
  return MEMORY[0x1E0CF5BC0]();
}

uint64_t ABPersonSetPreferredLinkedPersonForName()
{
  return MEMORY[0x1E0CF5BC8]();
}

uint64_t ABPersonSetShortNameFormat()
{
  return MEMORY[0x1E0CF5BD0]();
}

uint64_t ABPersonSetShortNameFormatEnabled()
{
  return MEMORY[0x1E0CF5BD8]();
}

uint64_t ABPersonSetShortNamePreferNicknames()
{
  return MEMORY[0x1E0CF5BE0]();
}

uint64_t ABPersonSetSoundIdentifierForMultiValueIdentifier()
{
  return MEMORY[0x1E0CF5BE8]();
}

uint64_t ABPersonUnlink()
{
  return MEMORY[0x1E0CF5BF0]();
}

uint64_t ABPolicyCopyPreferredLabelsForProperty()
{
  return MEMORY[0x1E0CF5BF8]();
}

uint64_t ABPolicyCopySupportedLabelsForProperty()
{
  return MEMORY[0x1E0CF5C00]();
}

uint64_t ABPolicyCreateWithCoder()
{
  return MEMORY[0x1E0CF5C08]();
}

uint64_t ABPolicyEncodeWithCoder()
{
  return MEMORY[0x1E0CF5C10]();
}

uint64_t ABPolicyIsEqualToPolicy()
{
  return MEMORY[0x1E0CF5C18]();
}

uint64_t ABPolicyMaximumNumberOfValuesForProperty()
{
  return MEMORY[0x1E0CF5C20]();
}

uint64_t ABPolicyShouldAddRecord()
{
  return MEMORY[0x1E0CF5C28]();
}

uint64_t ABPolicyShouldRemoveRecord()
{
  return MEMORY[0x1E0CF5C30]();
}

uint64_t ABPolicyShouldSetValue()
{
  return MEMORY[0x1E0CF5C38]();
}

uint64_t ABPopulateSyncTableForLimitedAccessAboveSequenceNumber()
{
  return MEMORY[0x1E0CF5C40]();
}

uint64_t ABPurgeLimitedAccessRecordsForBundle()
{
  return MEMORY[0x1E0CF5C78]();
}

uint64_t ABRecordCopyOriginalValue()
{
  return MEMORY[0x1E0CF5C88]();
}

CFTypeRef ABRecordCopyValue(ABRecordRef record, ABPropertyID property)
{
  return (CFTypeRef)MEMORY[0x1E0CF5C90](record, *(_QWORD *)&property);
}

uint64_t ABRecordGetAddressBook()
{
  return MEMORY[0x1E0CF5C98]();
}

uint64_t ABRecordGetIntValue()
{
  return MEMORY[0x1E0CF5CA0]();
}

ABRecordID ABRecordGetRecordID(ABRecordRef record)
{
  return MEMORY[0x1E0CF5CA8](record);
}

uint64_t ABRecordSetIntValue()
{
  return MEMORY[0x1E0CF5CB0]();
}

BOOL ABRecordSetValue(ABRecordRef record, ABPropertyID property, CFTypeRef value, CFErrorRef *error)
{
  return MEMORY[0x1E0CF5CB8](record, *(_QWORD *)&property, value, error);
}

uint64_t ABRemoveContactIdentifierFromLimitedAccessForAllBundles()
{
  return MEMORY[0x1E0CF5CC0]();
}

uint64_t ABRemoveLimitedAccessForBundle()
{
  return MEMORY[0x1E0CF5CC8]();
}

uint64_t ABSetLimitedAccessTableCurrentSequenceNumber()
{
  return MEMORY[0x1E0CF5CD0]();
}

uint64_t ABSourceCreate()
{
  return MEMORY[0x1E0CF5CE0]();
}

uint64_t ABSourceGetPolicy()
{
  return MEMORY[0x1E0CF5CE8]();
}

uint64_t ABSourceIsContentReadonly()
{
  return MEMORY[0x1E0CF5CF0]();
}

uint64_t ABSourceIsReadonly()
{
  return MEMORY[0x1E0CF5D00]();
}

uint64_t ABSourceIsRemote()
{
  return MEMORY[0x1E0CF5D08]();
}

uint64_t ABSourceSetMe()
{
  return MEMORY[0x1E0CF5D20]();
}

uint64_t ABSourceSetShouldIgnoreCapabilitiesRestrictions()
{
  return MEMORY[0x1E0CF5D28]();
}

uint64_t ABTokenListCreate()
{
  return MEMORY[0x1E0CF5D30]();
}

uint64_t ABTokenListGetCount()
{
  return MEMORY[0x1E0CF5D38]();
}

uint64_t ABTokenListGetTokenAtIndex()
{
  return MEMORY[0x1E0CF5D40]();
}

uint64_t ABTokenListGetTokenRangeAtIndex()
{
  return MEMORY[0x1E0CF5D48]();
}

uint64_t ABTokenListPopulateFromString()
{
  return MEMORY[0x1E0CF5D50]();
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x1E0D15428]();
}

void CFArrayAppendValue(CFMutableArrayRef theArray, const void *value)
{
  MEMORY[0x1E0C97CF8](theArray, value);
}

CFArrayRef CFArrayCreate(CFAllocatorRef allocator, const void **values, CFIndex numValues, const CFArrayCallBacks *callBacks)
{
  return (CFArrayRef)MEMORY[0x1E0C97D20](allocator, values, numValues, callBacks);
}

CFMutableArrayRef CFArrayCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks)
{
  return (CFMutableArrayRef)MEMORY[0x1E0C97D38](allocator, capacity, callBacks);
}

CFMutableArrayRef CFArrayCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFArrayRef theArray)
{
  return (CFMutableArrayRef)MEMORY[0x1E0C97D50](allocator, capacity, theArray);
}

CFIndex CFArrayGetCount(CFArrayRef theArray)
{
  return MEMORY[0x1E0C97D60](theArray);
}

const void *__cdecl CFArrayGetValueAtIndex(CFArrayRef theArray, CFIndex idx)
{
  return (const void *)MEMORY[0x1E0C97D98](theArray, idx);
}

CFTypeRef CFAutorelease(CFTypeRef arg)
{
  return (CFTypeRef)MEMORY[0x1E0C97E90](arg);
}

Boolean CFBooleanGetValue(CFBooleanRef BOOLean)
{
  return MEMORY[0x1E0C97FE0](BOOLean);
}

CFTypeID CFDataGetTypeID(void)
{
  return MEMORY[0x1E0C98418]();
}

CFComparisonResult CFDateCompare(CFDateRef theDate, CFDateRef otherDate, void *context)
{
  return MEMORY[0x1E0C98440](theDate, otherDate, context);
}

Boolean CFDictionaryContainsKey(CFDictionaryRef theDict, const void *key)
{
  return MEMORY[0x1E0C98518](theDict, key);
}

CFDictionaryRef CFDictionaryCreateCopy(CFAllocatorRef allocator, CFDictionaryRef theDict)
{
  return (CFDictionaryRef)MEMORY[0x1E0C98538](allocator, theDict);
}

CFMutableDictionaryRef CFDictionaryCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return (CFMutableDictionaryRef)MEMORY[0x1E0C98550](allocator, capacity, keyCallBacks, valueCallBacks);
}

const void *__cdecl CFDictionaryGetValue(CFDictionaryRef theDict, const void *key)
{
  return (const void *)MEMORY[0x1E0C985B8](theDict, key);
}

void CFDictionarySetValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
  MEMORY[0x1E0C98610](theDict, key, value);
}

Boolean CFEqual(CFTypeRef cf1, CFTypeRef cf2)
{
  return MEMORY[0x1E0C98620](cf1, cf2);
}

CFDictionaryRef CFErrorCopyUserInfo(CFErrorRef err)
{
  return (CFDictionaryRef)MEMORY[0x1E0C98648](err);
}

CFIndex CFErrorGetCode(CFErrorRef err)
{
  return MEMORY[0x1E0C98660](err);
}

CFErrorDomain CFErrorGetDomain(CFErrorRef err)
{
  return (CFErrorDomain)MEMORY[0x1E0C98670](err);
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return MEMORY[0x1E0C98738](cf);
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
  MEMORY[0x1E0C988B0](center, observer, callBack, name, object, suspensionBehavior);
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x1E0C988B8]();
}

CFNotificationCenterRef CFNotificationCenterGetDistributedCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x1E0C988C8]();
}

void CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately)
{
  MEMORY[0x1E0C988E0](center, name, object, userInfo, deliverImmediately);
}

void CFNotificationCenterRemoveObserver(CFNotificationCenterRef center, const void *observer, CFNotificationName name, const void *object)
{
  MEMORY[0x1E0C98900](center, observer, name, object);
}

CFNumberRef CFNumberCreate(CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr)
{
  return (CFNumberRef)MEMORY[0x1E0C98928](allocator, theType, valuePtr);
}

CFTypeID CFNumberGetTypeID(void)
{
  return MEMORY[0x1E0C989B8]();
}

Boolean CFNumberGetValue(CFNumberRef number, CFNumberType theType, void *valuePtr)
{
  return MEMORY[0x1E0C989C0](number, theType, valuePtr);
}

uint64_t CFPhoneNumberCopyISOCountryCode()
{
  return MEMORY[0x1E0CFA180]();
}

uint64_t CFPhoneNumberCreate()
{
  return MEMORY[0x1E0CFA188]();
}

uint64_t CFPhoneNumberCreateString()
{
  return MEMORY[0x1E0CFA190]();
}

Boolean CFPreferencesAppSynchronize(CFStringRef applicationID)
{
  return MEMORY[0x1E0C98A30](applicationID);
}

CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID)
{
  return (CFPropertyListRef)MEMORY[0x1E0C98A40](key, applicationID);
}

CFPropertyListRef CFPreferencesCopyValue(CFStringRef key, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return (CFPropertyListRef)MEMORY[0x1E0C98A60](key, applicationID, userName, hostName);
}

Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return MEMORY[0x1E0C98A70](key, applicationID, keyExistsAndHasValidFormat);
}

CFIndex CFPreferencesGetAppIntegerValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return MEMORY[0x1E0C98A78](key, applicationID, keyExistsAndHasValidFormat);
}

void CFPreferencesSetAppValue(CFStringRef key, CFPropertyListRef value, CFStringRef applicationID)
{
  MEMORY[0x1E0C98A80](key, value, applicationID);
}

void CFRelease(CFTypeRef cf)
{
  MEMORY[0x1E0C98BC0](cf);
}

CFTypeRef CFRetain(CFTypeRef cf)
{
  return (CFTypeRef)MEMORY[0x1E0C98BD0](cf);
}

void CFSetAddValue(CFMutableSetRef theSet, const void *value)
{
  MEMORY[0x1E0C98D70](theSet, value);
}

CFMutableSetRef CFSetCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFSetCallBacks *callBacks)
{
  return (CFMutableSetRef)MEMORY[0x1E0C98D98](allocator, capacity, callBacks);
}

CFRange CFStringFind(CFStringRef theString, CFStringRef stringToFind, CFStringCompareFlags compareOptions)
{
  CFIndex v3;
  CFIndex v4;
  CFRange result;

  v3 = MEMORY[0x1E0C99050](theString, stringToFind, compareOptions);
  result.length = v4;
  result.location = v3;
  return result;
}

CFIndex CFStringGetLength(CFStringRef theString)
{
  return MEMORY[0x1E0C99100](theString);
}

CFTypeID CFStringGetTypeID(void)
{
  return MEMORY[0x1E0C99170]();
}

CFStringTokenizerRef CFStringTokenizerCreate(CFAllocatorRef alloc, CFStringRef string, CFRange range, CFOptionFlags options, CFLocaleRef locale)
{
  return (CFStringTokenizerRef)MEMORY[0x1E0C99220](alloc, string, range.location, range.length, options, locale);
}

SInt32 CFUserNotificationDisplayAlert(CFTimeInterval timeout, CFOptionFlags flags, CFURLRef iconURL, CFURLRef soundURL, CFURLRef localizationURL, CFStringRef alertHeader, CFStringRef alertMessage, CFStringRef defaultButtonTitle, CFStringRef alternateButtonTitle, CFStringRef otherButtonTitle, CFOptionFlags *responseFlags)
{
  return MEMORY[0x1E0C995C8](flags, iconURL, soundURL, localizationURL, alertHeader, alertMessage, defaultButtonTitle, alternateButtonTitle, timeout);
}

CGContextRef CGBitmapContextCreate(void *data, size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow, CGColorSpaceRef space, uint32_t bitmapInfo)
{
  return (CGContextRef)MEMORY[0x1E0C9BB10](data, width, height, bitsPerComponent, bytesPerRow, space, *(_QWORD *)&bitmapInfo);
}

CGBitmapInfo CGBitmapContextGetBitmapInfo(CGContextRef context)
{
  return MEMORY[0x1E0C9BB48](context);
}

size_t CGBitmapContextGetBitsPerComponent(CGContextRef context)
{
  return MEMORY[0x1E0C9BB50](context);
}

size_t CGBitmapContextGetBitsPerPixel(CGContextRef context)
{
  return MEMORY[0x1E0C9BB58](context);
}

size_t CGBitmapContextGetBytesPerRow(CGContextRef context)
{
  return MEMORY[0x1E0C9BB60](context);
}

CGColorSpaceRef CGBitmapContextGetColorSpace(CGContextRef context)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9BB68](context);
}

size_t CGBitmapContextGetHeight(CGContextRef context)
{
  return MEMORY[0x1E0C9BB78](context);
}

size_t CGBitmapContextGetWidth(CGContextRef context)
{
  return MEMORY[0x1E0C9BB80](context);
}

uint64_t CGBitmapGetAlignedBytesPerRow()
{
  return MEMORY[0x1E0C9BB98]();
}

CFPropertyListRef CGColorSpaceCopyPropertyList(CGColorSpaceRef space)
{
  return (CFPropertyListRef)MEMORY[0x1E0C9BDC0](space);
}

CGColorSpaceRef CGColorSpaceCreateDeviceRGB(void)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9BDF0]();
}

CGColorSpaceRef CGColorSpaceCreateWithPropertyList(CFPropertyListRef plist)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9BE60](plist);
}

size_t CGColorSpaceGetNumberOfComponents(CGColorSpaceRef space)
{
  return MEMORY[0x1E0C9BED8](space);
}

void CGColorSpaceRelease(CGColorSpaceRef space)
{
  MEMORY[0x1E0C9BF30](space);
}

uint64_t CGImageCreateByScaling()
{
  return MEMORY[0x1E0CBC2A0]();
}

CGImageRef CGImageCreateWithImageInRect(CGImageRef image, CGRect rect)
{
  return (CGImageRef)MEMORY[0x1E0C9CBA8](image, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

void CGImageDestinationAddImage(CGImageDestinationRef idst, CGImageRef image, CFDictionaryRef properties)
{
  MEMORY[0x1E0CBC308](idst, image, properties);
}

CGImageDestinationRef CGImageDestinationCreateWithData(CFMutableDataRef data, CFStringRef type, size_t count, CFDictionaryRef options)
{
  return (CGImageDestinationRef)MEMORY[0x1E0CBC338](data, type, count, options);
}

BOOL CGImageDestinationFinalize(CGImageDestinationRef idst)
{
  return MEMORY[0x1E0CBC358](idst);
}

CGBitmapInfo CGImageGetBitmapInfo(CGImageRef image)
{
  return MEMORY[0x1E0C9CBF0](image);
}

size_t CGImageGetBitsPerComponent(CGImageRef image)
{
  return MEMORY[0x1E0C9CBF8](image);
}

size_t CGImageGetBitsPerPixel(CGImageRef image)
{
  return MEMORY[0x1E0C9CC00](image);
}

size_t CGImageGetBytesPerRow(CGImageRef image)
{
  return MEMORY[0x1E0C9CC08](image);
}

CGColorSpaceRef CGImageGetColorSpace(CGImageRef image)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9CC20](image);
}

size_t CGImageGetHeight(CGImageRef image)
{
  return MEMORY[0x1E0C9CC60](image);
}

size_t CGImageGetWidth(CGImageRef image)
{
  return MEMORY[0x1E0C9CCD0](image);
}

void CGImageRelease(CGImageRef image)
{
  MEMORY[0x1E0C9CDA0](image);
}

CFDictionaryRef CGImageSourceCopyPropertiesAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return (CFDictionaryRef)MEMORY[0x1E0CBC530](isrc, index, options);
}

CGImageRef CGImageSourceCreateImageAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return (CGImageRef)MEMORY[0x1E0CBC568](isrc, index, options);
}

CGImageSourceRef CGImageSourceCreateWithData(CFDataRef data, CFDictionaryRef options)
{
  return (CGImageSourceRef)MEMORY[0x1E0CBC590](data, options);
}

size_t CGImageSourceGetCount(CGImageSourceRef isrc)
{
  return MEMORY[0x1E0CBC5F0](isrc);
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x1E0C9D570]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D580]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5C0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5C8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5D0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

BOOL CGRectIsEmpty(CGRect rect)
{
  return MEMORY[0x1E0C9D608]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

uint64_t CNAbstractMethodException()
{
  return MEMORY[0x1E0D136F0]();
}

uint64_t CNAggregateComparator()
{
  return MEMORY[0x1E0D136F8]();
}

uint64_t CNFullMethodName()
{
  return MEMORY[0x1E0D137D8]();
}

uint64_t CNInitializerUnavailableException()
{
  return MEMORY[0x1E0D137E8]();
}

uint64_t CNIsChineseJapaneseKoreanString()
{
  return MEMORY[0x1E0D13808]();
}

uint64_t CNNameDelimiterForString()
{
  return MEMORY[0x1E0D13868]();
}

uint64_t CNResultWithAutoreleasePool()
{
  return MEMORY[0x1E0D138F8]();
}

uint64_t CNResultWithLock()
{
  return MEMORY[0x1E0D13900]();
}

uint64_t CNRunWithLock()
{
  return MEMORY[0x1E0D13908]();
}

uint64_t CNSocialProfileEquivalentValues()
{
  return MEMORY[0x1E0D13910]();
}

uint64_t CNStringContainsKoreanCharacters()
{
  return MEMORY[0x1E0D13930]();
}

uint64_t CNUnimplementedMethodException()
{
  return MEMORY[0x1E0D13948]();
}

uint64_t CPRecordCopyChangedProperties()
{
  return MEMORY[0x1E0CFA3B8]();
}

uint64_t MGCopyAnswerWithError()
{
  return MEMORY[0x1E0DE2B38]();
}

Class NSClassFromString(NSString *aClassName)
{
  return (Class)MEMORY[0x1E0CB28A0](aClassName);
}

void NSEndMapTableEnumeration(NSMapEnumerator *enumerator)
{
  MEMORY[0x1E0CB29A0](enumerator);
}

NSMapEnumerator *__cdecl NSEnumerateMapTable(NSMapEnumerator *__return_ptr retstr, NSMapTable *table)
{
  return (NSMapEnumerator *)MEMORY[0x1E0CB29B0](retstr, table);
}

NSString *NSHomeDirectory(void)
{
  return (NSString *)MEMORY[0x1E0CB2C00]();
}

void NSLog(NSString *format, ...)
{
  MEMORY[0x1E0CB2D88](format);
}

void *__cdecl NSMapGet(NSMapTable *table, const void *key)
{
  return (void *)MEMORY[0x1E0CB2DA0](table, key);
}

void NSMapInsert(NSMapTable *table, const void *key, const void *value)
{
  MEMORY[0x1E0CB2DA8](table, key, value);
}

BOOL NSNextMapEnumeratorPair(NSMapEnumerator *enumerator, void **key, void **value)
{
  return MEMORY[0x1E0CB2F88](enumerator, key, value);
}

NSRect NSRectFromString(NSString *aString)
{
  double v1;
  double v2;
  double v3;
  double v4;
  NSRect result;

  MEMORY[0x1E0CB3150](aString);
  result.size.height = v4;
  result.size.width = v3;
  result.origin.y = v2;
  result.origin.x = v1;
  return result;
}

NSArray *__cdecl NSSearchPathForDirectoriesInDomains(NSSearchPathDirectory directory, NSSearchPathDomainMask domainMask, BOOL expandTilde)
{
  return (NSArray *)MEMORY[0x1E0CB3178](directory, domainMask, expandTilde);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x1E0CB3200](aClass);
}

NSString *__cdecl NSStringFromRange(NSRange range)
{
  return (NSString *)MEMORY[0x1E0CB3220](range.location, range.length);
}

NSString *__cdecl NSStringFromRect(NSRect aRect)
{
  return (NSString *)MEMORY[0x1E0CB3228]((__n128)aRect.origin, *(__n128 *)&aRect.origin.y, (__n128)aRect.size, *(__n128 *)&aRect.size.height);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return (NSString *)MEMORY[0x1E0CB3230](aSelector);
}

uint64_t PNCopyBestGuessNormalizedNumberForCountry()
{
  return MEMORY[0x1E0CFA9C8]();
}

uint64_t PNCreateFormattedStringWithCountry()
{
  return MEMORY[0x1E0CFA9D0]();
}

uint64_t PNDecomposeForCountry()
{
  return MEMORY[0x1E0CFA9D8]();
}

Boolean UTTypeConformsTo(CFStringRef inUTI, CFStringRef inConformsToUTI)
{
  return MEMORY[0x1E0CA5940](inUTI, inConformsToUTI);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
  MEMORY[0x1E0C80948](a1, *(_QWORD *)&a2);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

uint64_t _CFExecutableLinkedOnOrAfter()
{
  return MEMORY[0x1E0C9A178]();
}

uint64_t _PNCopyFullyQualifiedNumberForCountry()
{
  return MEMORY[0x1E0CFAA08]();
}

uint64_t _PNCopyIndexStringsForAddressBookSearch()
{
  return MEMORY[0x1E0CFAA10]();
}

uint64_t _PNCopyInternationalCodeForCountry()
{
  return MEMORY[0x1E0CFAA18]();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x1E0C80A20](exception_object);
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
  MEMORY[0x1E0C80A58](a1, a2, *(_QWORD *)&a3, a4);
}

int *__error(void)
{
  return (int *)MEMORY[0x1E0C80AC0]();
}

os_activity_t _os_activity_create(void *dso, const char *description, os_activity_t activity, os_activity_flag_t flags)
{
  return (os_activity_t)MEMORY[0x1E0C80FC0](dso, description, activity, *(_QWORD *)&flags);
}

uint64_t _os_feature_enabled_impl()
{
  return MEMORY[0x1E0C81010]();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81020](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81038](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81040](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C810D0](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x1E0DA88F0]();
}

uint64_t _swift_isClassOrObjCExistentialType()
{
  return MEMORY[0x1E0DEE9F8]();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x1E0DEEA28]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1E0DEEA40]();
}

uint64_t abort_report_np()
{
  return MEMORY[0x1E0C813B0]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

uint64_t cn_objectResultWithObjectLock()
{
  return MEMORY[0x1E0D13BF0]();
}

uint64_t cn_runWithObjectLock()
{
  return MEMORY[0x1E0D13BF8]();
}

uint64_t decomposedPhoneNumbersEqual()
{
  return MEMORY[0x1E0CFAA30]();
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82C00](queue, block);
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x1E0C82D00](identifier, flags);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x1E0C82D20]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x1E0C82D28](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x1E0C82D30](group);
}

intptr_t dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout)
{
  return MEMORY[0x1E0C82D48](group, timeout);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x1E0C82E08](predicate, block);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return (dispatch_queue_attr_t)MEMORY[0x1E0C82E38](attr, *(_QWORD *)&qos_class, *(_QWORD *)&relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x1E0C82E48](label, attr);
}

void dispatch_resume(dispatch_object_t object)
{
  MEMORY[0x1E0C82EA0](object);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x1E0C82EB8](value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return MEMORY[0x1E0C82EC8](dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return MEMORY[0x1E0C82ED8](dsema, timeout);
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return (dispatch_source_t)MEMORY[0x1E0C82F20](type, handle, mask, queue);
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
  MEMORY[0x1E0C82F58](source, handler);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82F90](queue, block);
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x1E0C82FB8](when, delta);
}

char *dlerror(void)
{
  return (char *)MEMORY[0x1E0C83038]();
}

void *__cdecl dlopen(const char *__path, int __mode)
{
  return (void *)MEMORY[0x1E0C83040](__path, *(_QWORD *)&__mode);
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x1E0C83050](__handle, __symbol);
}

uint64_t dyld_program_sdk_at_least()
{
  return MEMORY[0x1E0C83158]();
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1E0C83E68](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1E0C83EF8](count, size, type_id);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1E0C83F00](size, type_id);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

int mkdir(const char *a1, mode_t a2)
{
  return MEMORY[0x1E0C84160](a1, a2);
}

void *__cdecl mmap(void *a1, size_t a2, int a3, int a4, int a5, off_t a6)
{
  return (void *)MEMORY[0x1E0C841D8](a1, a2, *(_QWORD *)&a3, *(_QWORD *)&a4, *(_QWORD *)&a5, a6);
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x1E0C843D8](*(_QWORD *)&token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x1E0C84408](name, out_token, queue, handler);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1E0DE7BA8](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1E0DE7BB0](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1E0DE7BB8]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7BD0](a1);
}

void objc_autoreleasePoolPop(void *context)
{
  MEMORY[0x1E0DE7BD8](context);
}

void *objc_autoreleasePoolPush(void)
{
  return (void *)MEMORY[0x1E0DE7BE0]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7BE8](a1);
}

id objc_begin_catch(void *exc_buf)
{
  return (id)MEMORY[0x1E0DE7BF0](exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1E0DE7BF8]();
}

void objc_copyStruct(void *dest, const void *src, ptrdiff_t size, BOOL atomic, BOOL hasStrong)
{
  MEMORY[0x1E0DE7C30](dest, src, size, atomic, hasStrong);
}

void objc_copyWeak(id *to, id *from)
{
  MEMORY[0x1E0DE7C38](to, from);
}

void objc_destroyWeak(id *location)
{
  MEMORY[0x1E0DE7C60](location);
}

void objc_end_catch(void)
{
  MEMORY[0x1E0DE7C80]();
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x1E0DE7C90](obj);
}

void objc_exception_rethrow(void)
{
  MEMORY[0x1E0DE7C98]();
}

void objc_exception_throw(id exception)
{
  MEMORY[0x1E0DE7CA0](exception);
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x1E0DE7CB0](name);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x1E0DE7CD0](self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x1E0DE7CE0](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1E0DE7D08](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D20](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1E0DE7D38]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1E0DE7D40]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1E0DE7D48]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x1E0DE7D50]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7E58](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E60](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x1E0DE7E70](a1);
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7F88](self, _cmd, newValue, offset);
}

void objc_setProperty_atomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7F90](self, _cmd, newValue, offset);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7FA0](self, _cmd, newValue, offset);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x1E0DE7FB0](location, obj);
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1E0DE7FB8](location, obj);
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x1E0DE7FC8](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x1E0DE7FD0](obj);
}

void objc_terminate(void)
{
  MEMORY[0x1E0DE7FD8]();
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7FE0](a1);
}

const char *__cdecl object_getClassName(id a1)
{
  return (const char *)MEMORY[0x1E0DE8000](a1);
}

Class object_setClass(id a1, Class a2)
{
  return (Class)MEMORY[0x1E0DE8030](a1, a2);
}

void os_activity_apply(os_activity_t activity, os_block_t block)
{
  MEMORY[0x1E0C844F8](activity, block);
}

void os_activity_scope_enter(os_activity_t activity, os_activity_scope_state_t state)
{
  MEMORY[0x1E0C84510](activity, state);
}

void os_activity_scope_leave(os_activity_scope_state_t state)
{
  MEMORY[0x1E0C84518](state);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1E0C84728](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return MEMORY[0x1E0C84920](log);
}

os_signpost_id_t os_signpost_id_generate(os_log_t log)
{
  return MEMORY[0x1E0C84928](log);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C84998](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C849B0](lock);
}

uint64_t os_variant_has_internal_diagnostics()
{
  return MEMORY[0x1E0C849F8]();
}

int pthread_main_np(void)
{
  return MEMORY[0x1E0C84E08]();
}

unsigned int sleep(unsigned int a1)
{
  return MEMORY[0x1E0C85438](*(_QWORD *)&a1);
}

uint64_t swift_allocError()
{
  return MEMORY[0x1E0DEEAA8]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1E0DEEAB0]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x1E0DEEAC0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1E0DEEAD8]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1E0DEEAE0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1E0DEEAE8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1E0DEEAF0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1E0DEEAF8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1E0DEEB08]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1E0DEEB10]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1E0DEEB18]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1E0DEEB20]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x1E0DF0F88]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x1E0DF0F90]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x1E0DF0FA0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x1E0DF0FA8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1E0DEEB50]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1E0DEEB60]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1E0DEEB80]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x1E0DEEB88]();
}

uint64_t swift_dynamicCastMetatype()
{
  return MEMORY[0x1E0DEEB98]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1E0DEEBA8]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1E0DEEBE0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1E0DEEBF0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1E0DEEBF8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1E0DEEC08]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x1E0DEEC50]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1E0DEEC78]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1E0DEECB0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1E0DEECC8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1E0DEECD8]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1E0DEECE0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1E0DEECF8]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1E0DEED20]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1E0DEED38]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1E0DEED40]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1E0DEED50]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1E0DEED78]();
}

uint64_t swift_isClassType()
{
  return MEMORY[0x1E0DEED90]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1E0DEED98]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x1E0DEEDC8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1E0DEEDD0]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x1E0DEEDE0]();
}

uint64_t swift_once()
{
  return MEMORY[0x1E0DEEE00]();
}

uint64_t swift_release()
{
  return MEMORY[0x1E0DEEE30]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1E0DEEE38]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1E0DEEE48]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1E0DEEE50]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1E0DEEE70]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1E0DEEE78]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1E0DEEE80]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x1E0DEEE88]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1E0DF1000]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1E0DF1008]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1E0DF1010]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x1E0DF1050]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1E0DEEEC0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1E0DEEEC8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1E0DEEED0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1E0DEEED8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1E0DEEF78]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1E0DEEFC0]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x1E0DEEFC8]();
}

uint64_t tcc_object_copy_description()
{
  return MEMORY[0x1E0DB1310]();
}

