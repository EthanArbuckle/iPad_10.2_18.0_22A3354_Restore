uint64_t sub_1D42A9FF8(uint64_t result, float32x4_t *a2, float32x4_t *a3, uint64_t a4, uint64_t *a5, float *a6, float32x4_t *a7, float *a8, int a9, float32x4_t *a10, float32x4_t *a11, float32x4_t *a12)
{
  __int128 v12;
  __int128 v14;
  __int128 v16;
  BOOL v20;
  uint64_t v21;
  float *v22;
  const float *v23;
  int8x16_t v24;
  float32x4_t v25;
  int8x16_t v26;
  float32x4_t v27;
  float32x4_t v28;
  float32x4_t v29;
  float32x4_t v30;
  float32x4_t v31;
  float32x4_t v32;
  float32x4_t v33;
  float32x4_t v34;
  float32x4_t v35;
  float32x4_t v36;
  float32x4_t v37;
  float32x4_t v38;
  float32x4_t v39;
  float32x4_t v40;
  float32x4_t v41;
  float32x4_t v42;
  float32x4_t v43;
  float32x4_t v44;
  float32x4_t v45;
  float32x4_t v46;
  float32x4_t v47;
  float32x4_t v48;
  float32x4_t v49;
  float32x4_t v50;
  float32x4_t v51;
  float32x4_t v52;
  float32x4_t v53;
  float32x4_t v54;
  float32x4_t v55;
  float32x4_t v56;
  float32x4_t v57;
  float32x4_t v58;
  float32x4_t v59;
  float32x4_t v60;
  float32x4_t v61;
  float32x4_t v62;
  float32x4_t v63;
  float32x4_t v64;
  float32x4_t v65;
  float32x4_t v66;
  float32x4_t v67;
  float32x4_t v68;
  float32x4_t v69;
  float32x4_t v70;
  float32x4_t v71;
  float32x4_t v72;
  float32x4_t v73;
  float32x4_t v74;
  float32x4_t v75;
  float32x4_t v76;
  float32x4_t v77;
  float32x4_t v78;
  float32x4_t v79;
  float32x4_t v80;
  float32x4_t v81;
  float32x4_t v82;
  float32x4_t v83;
  float32x4_t v84;
  float32x4_t v85;
  float32x4_t v86;
  float32x4_t v87;
  float32x4_t v88;
  float32x4_t v89;
  float32x4_t v90;
  float32x4_t v91;
  float32x4_t v92;
  float32x4_t v93;
  float32x4_t v94;
  float32x4_t v95;
  float32x4_t v96;
  float32x4_t v97;
  float32x4_t v98;
  float32x4_t v99;
  float32x4_t v100;
  float32x4_t v101;
  float32x4_t v102;
  float32x4_t v103;
  float32x4_t v104;
  float32x4_t v105;
  float32x4_t v106;
  float32x4_t v107;
  float32x4_t v108;
  float32x4_t v109;
  float32x4_t v110;
  float32x4_t v111;
  float32x4_t v112;
  float32x4_t v113;
  float32x4_t v114;
  float32x4_t v115;
  float32x4_t v116;
  float32x4_t v117;
  float32x4_t v118;
  float32x4_t v119;
  float32x4_t v120;
  float32x4_t v121;
  float32x4_t v122;
  float32x4_t v123;
  float32x4_t v124;
  float32x4_t v125;
  float32x4_t v126;
  float *v127;
  float v128[16];
  float v129[16];
  float32x4x4_t v130;
  float32x4x4_t v131;
  float32x4x4_t v132;
  float32x4x4_t v133;

  v20 = a4 < 4;
  v21 = a4 - 4;
  if (!v20)
  {
    v22 = v128;
    vst4q_f32(v22, *(float32x4x4_t *)&v12);
    v22 += 16;
    vst4q_f32(v22, *(float32x4x4_t *)&v16);
    v23 = a6;
    v130 = vld4q_f32(v23);
    v23 += 16;
    v131 = vld4q_f32(v23);
    v23 += 16;
    v132 = vld4q_f32(v23);
    v23 += 16;
    v133 = vld4q_f32(v23);
    *(float *)&v14 = *a8;
    v24.i64[0] = 0;
    v24.i64[1] = *a5;
    v25 = vsubq_f32(*a2, (float32x4_t)vextq_s8(v24, *(int8x16_t *)a2, 8uLL));
    v26 = *(int8x16_t *)a2;
    v27 = vmlaq_f32(vmlaq_n_f32(vmulq_f32(v132.val[0], *a12), *a10, v25.f32[0]), v130.val[0], *a11);
    v28 = vmlaq_f32(vmlaq_n_f32(vmulq_f32(v132.val[1], a12[1]), a10[1], v25.f32[0]), v130.val[1], a11[1]);
    v29 = vmlaq_f32(vmlaq_n_f32(vmulq_f32(v132.val[2], a12[2]), a10[2], v25.f32[0]), v130.val[2], a11[2]);
    v30 = vmlaq_f32(vmlaq_n_f32(vmulq_f32(v132.val[3], a12[3]), a10[3], v25.f32[0]), v130.val[3], a11[3]);
    v31 = a7[8];
    v32 = a7[9];
    v33 = a7[10];
    v34 = a7[11];
    v35 = vmulq_n_f32(vmlsq_f32(*a7, v27, v27), *a8);
    v36 = vmulq_n_f32(vmlsq_f32(a7[1], v28, v28), *a8);
    v37 = vmulq_n_f32(vmlsq_f32(a7[2], v29, v29), *a8);
    v38 = vmulq_n_f32(vmlsq_f32(a7[3], v30, v30), *a8);
    if (v21)
    {
      do
      {
        v39 = vmlaq_f32(v35, v27, v27);
        v40 = vmlaq_f32(v36, v28, v28);
        v41 = vmlaq_f32(v37, v29, v29);
        v42 = vmlaq_f32(v38, v30, v30);
        v43 = vmlaq_n_f32(v39, vsubq_f32(v31, v39), *(float *)&v14);
        v44 = *a12;
        v45 = vmlaq_n_f32(v40, vsubq_f32(v32, v40), *(float *)&v14);
        v46 = a12[1];
        v47 = vmlaq_n_f32(v41, vsubq_f32(v33, v41), *(float *)&v14);
        v48 = a12[2];
        v49 = vmlaq_n_f32(v42, vsubq_f32(v34, v42), *(float *)&v14);
        v50 = a12[3];
        if (!(_DWORD)result)
        {
          *a3 = v43;
          a3[1] = v45;
          a3[2] = v47;
          a3[3] = v49;
          a3 += 8;
        }
        v51 = vmlaq_f32(vmlaq_lane_f32(vmulq_f32(v130.val[0], v44), *a10, *(float32x2_t *)v25.f32, 1), v27, *a11);
        v52 = vmlaq_f32(vmlaq_lane_f32(vmulq_f32(v130.val[1], v46), a10[1], *(float32x2_t *)v25.f32, 1), v28, a11[1]);
        v53 = vmlaq_f32(vmlaq_lane_f32(vmulq_f32(v130.val[2], v48), a10[2], *(float32x2_t *)v25.f32, 1), v29, a11[2]);
        v54 = vmlaq_f32(vmlaq_lane_f32(vmulq_f32(v130.val[3], v50), a10[3], *(float32x2_t *)v25.f32, 1), v30, a11[3]);
        v55 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v39, v51, v51), *(float *)&v14), v51, v51);
        v56 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v40, v52, v52), *(float *)&v14), v52, v52);
        v57 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v41, v53, v53), *(float *)&v14), v53, v53);
        v58 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v42, v54, v54), *(float *)&v14), v54, v54);
        v59 = vmlaq_n_f32(v55, vsubq_f32(v43, v55), *(float *)&v14);
        v60 = vmlaq_n_f32(v56, vsubq_f32(v45, v56), *(float *)&v14);
        v61 = vmlaq_n_f32(v57, vsubq_f32(v47, v57), *(float *)&v14);
        v62 = vmlaq_n_f32(v58, vsubq_f32(v49, v58), *(float *)&v14);
        v63 = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v27, *a12), *a10, v25, 2), v51, *a11);
        v64 = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v28, a12[1]), a10[1], v25, 2), v52, a11[1]);
        v65 = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v29, a12[2]), a10[2], v25, 2), v53, a11[2]);
        v66 = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v30, a12[3]), a10[3], v25, 2), v54, a11[3]);
        v67 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v55, v63, v63), *(float *)&v14), v63, v63);
        v68 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v56, v64, v64), *(float *)&v14), v64, v64);
        v69 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v57, v65, v65), *(float *)&v14), v65, v65);
        v70 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v58, v66, v66), *(float *)&v14), v66, v66);
        v71 = vmlaq_n_f32(v67, vsubq_f32(v59, v67), *(float *)&v14);
        v72 = vmlaq_n_f32(v68, vsubq_f32(v60, v68), *(float *)&v14);
        v73 = vmlaq_n_f32(v69, vsubq_f32(v61, v69), *(float *)&v14);
        v74 = vmlaq_n_f32(v70, vsubq_f32(v62, v70), *(float *)&v14);
        v130.val[0] = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v51, *a12), *a10, v25, 3), v63, *a11);
        v130.val[1] = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v52, a12[1]), a10[1], v25, 3), v64, a11[1]);
        v130.val[2] = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v53, a12[2]), a10[2], v25, 3), v65, a11[2]);
        v130.val[3] = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v54, a12[3]), a10[3], v25, 3), v66, a11[3]);
        ++a2;
        v75 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v67, v130.val[0], v130.val[0]), *(float *)&v14), v130.val[0], v130.val[0]);
        v76 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v68, v130.val[1], v130.val[1]), *(float *)&v14), v130.val[1], v130.val[1]);
        v77 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v69, v130.val[2], v130.val[2]), *(float *)&v14), v130.val[2], v130.val[2]);
        v78 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v70, v130.val[3], v130.val[3]), *(float *)&v14), v130.val[3], v130.val[3]);
        LODWORD(result) = result + 4;
        v31 = vmlaq_n_f32(v75, vsubq_f32(v71, v75), *(float *)&v14);
        v32 = vmlaq_n_f32(v76, vsubq_f32(v72, v76), *(float *)&v14);
        v33 = vmlaq_n_f32(v77, vsubq_f32(v73, v77), *(float *)&v14);
        v34 = vmlaq_n_f32(v78, vsubq_f32(v74, v78), *(float *)&v14);
        if ((int)result >= a9)
          LODWORD(result) = 0;
        v25 = vsubq_f32(*a2, (float32x4_t)vextq_s8(v26, *(int8x16_t *)a2, 8uLL));
        v26 = *(int8x16_t *)a2;
        v27 = vmlaq_f32(vmlaq_n_f32(vmulq_f32(v63, *a12), *a10, v25.f32[0]), v130.val[0], *a11);
        v28 = vmlaq_f32(vmlaq_n_f32(vmulq_f32(v64, a12[1]), a10[1], v25.f32[0]), v130.val[1], a11[1]);
        v29 = vmlaq_f32(vmlaq_n_f32(vmulq_f32(v65, a12[2]), a10[2], v25.f32[0]), v130.val[2], a11[2]);
        v30 = vmlaq_f32(vmlaq_n_f32(vmulq_f32(v66, a12[3]), a10[3], v25.f32[0]), v130.val[3], a11[3]);
        v35 = vmulq_n_f32(vmlsq_f32(v75, v27, v27), *(float *)&v14);
        v36 = vmulq_n_f32(vmlsq_f32(v76, v28, v28), *(float *)&v14);
        v37 = vmulq_n_f32(vmlsq_f32(v77, v29, v29), *(float *)&v14);
        v38 = vmulq_n_f32(vmlsq_f32(v78, v30, v30), *(float *)&v14);
        v20 = v21 <= 4;
        v21 -= 4;
      }
      while (!v20);
    }
    v79 = vmlaq_f32(v35, v27, v27);
    v80 = vmlaq_f32(v36, v28, v28);
    v81 = vmlaq_f32(v37, v29, v29);
    v82 = vmlaq_f32(v38, v30, v30);
    v83 = vmlaq_n_f32(v79, vsubq_f32(v31, v79), *(float *)&v14);
    v84 = *a12;
    v85 = vmlaq_n_f32(v80, vsubq_f32(v32, v80), *(float *)&v14);
    v86 = a12[1];
    v87 = vmlaq_n_f32(v81, vsubq_f32(v33, v81), *(float *)&v14);
    v88 = a12[2];
    v89 = vmlaq_n_f32(v82, vsubq_f32(v34, v82), *(float *)&v14);
    v90 = a12[3];
    if (!(_DWORD)result)
      vst4q_f32(a3->f32, *(float32x4x4_t *)v83.f32);
    v91 = vmlaq_f32(vmlaq_lane_f32(vmulq_f32(v130.val[0], v84), *a10, *(float32x2_t *)v25.f32, 1), v27, *a11);
    v92 = vmlaq_f32(vmlaq_lane_f32(vmulq_f32(v130.val[1], v86), a10[1], *(float32x2_t *)v25.f32, 1), v28, a11[1]);
    v93 = vmlaq_f32(vmlaq_lane_f32(vmulq_f32(v130.val[2], v88), a10[2], *(float32x2_t *)v25.f32, 1), v29, a11[2]);
    v94 = vmlaq_f32(vmlaq_lane_f32(vmulq_f32(v130.val[3], v90), a10[3], *(float32x2_t *)v25.f32, 1), v30, a11[3]);
    v95 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v79, v91, v91), *(float *)&v14), v91, v91);
    v96 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v80, v92, v92), *(float *)&v14), v92, v92);
    v97 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v81, v93, v93), *(float *)&v14), v93, v93);
    v98 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v82, v94, v94), *(float *)&v14), v94, v94);
    v99 = vmlaq_n_f32(v95, vsubq_f32(v83, v95), *(float *)&v14);
    v100 = vmlaq_n_f32(v96, vsubq_f32(v85, v96), *(float *)&v14);
    v101 = vmlaq_n_f32(v97, vsubq_f32(v87, v97), *(float *)&v14);
    v102 = vmlaq_n_f32(v98, vsubq_f32(v89, v98), *(float *)&v14);
    v103 = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v27, *a12), *a10, v25, 2), v91, *a11);
    v104 = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v28, a12[1]), a10[1], v25, 2), v92, a11[1]);
    v105 = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v29, a12[2]), a10[2], v25, 2), v93, a11[2]);
    v106 = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v30, a12[3]), a10[3], v25, 2), v94, a11[3]);
    v107 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v95, v103, v103), *(float *)&v14), v103, v103);
    v108 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v96, v104, v104), *(float *)&v14), v104, v104);
    v109 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v97, v105, v105), *(float *)&v14), v105, v105);
    v110 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v98, v106, v106), *(float *)&v14), v106, v106);
    v111 = vmlaq_n_f32(v107, vsubq_f32(v99, v107), *(float *)&v14);
    v112 = vmlaq_n_f32(v108, vsubq_f32(v100, v108), *(float *)&v14);
    v113 = vmlaq_n_f32(v109, vsubq_f32(v101, v109), *(float *)&v14);
    v114 = vmlaq_n_f32(v110, vsubq_f32(v102, v110), *(float *)&v14);
    v115 = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v91, *a12), *a10, v25, 3), v103, *a11);
    v116 = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v92, a12[1]), a10[1], v25, 3), v104, a11[1]);
    v117 = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v93, a12[2]), a10[2], v25, 3), v105, a11[2]);
    v118 = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v94, a12[3]), a10[3], v25, 3), v106, a11[3]);
    v119 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v107, v115, v115), *(float *)&v14), v115, v115);
    v120 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v108, v116, v116), *(float *)&v14), v116, v116);
    v121 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v109, v117, v117), *(float *)&v14), v117, v117);
    v122 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v110, v118, v118), *(float *)&v14), v118, v118);
    result = (result + 4);
    v123 = vmlaq_n_f32(v119, vsubq_f32(v111, v119), *(float *)&v14);
    v124 = vmlaq_n_f32(v120, vsubq_f32(v112, v120), *(float *)&v14);
    v125 = vmlaq_n_f32(v121, vsubq_f32(v113, v121), *(float *)&v14);
    v126 = vmlaq_n_f32(v122, vsubq_f32(v114, v122), *(float *)&v14);
    if ((int)result >= a9)
      result = 0;
    *a7 = v119;
    a7[1] = v120;
    a7[2] = v121;
    a7[3] = v122;
    a7[8] = v123;
    a7[9] = v124;
    a7[10] = v125;
    a7[11] = v126;
    v127 = a6;
    vst4q_f32(v127, *(float32x4x4_t *)v115.f32);
    v127 += 16;
    vst4q_f32(v127, v131);
    v127 += 16;
    vst4q_f32(v127, *(float32x4x4_t *)v103.f32);
    v127 += 16;
    vst4q_f32(v127, v133);
    *a5 = v26.i64[1];
    vld4q_f32(v128);
    vld4q_f32(v129);
  }
  return result;
}

uint64_t sub_1D42AA70C(uint64_t result, float32x4_t *a2, float32x4_t *a3, uint64_t a4, uint64_t *a5, float *a6, float32x4_t *a7, float *a8, int a9, float32x4_t *a10, float32x4_t *a11, float32x4_t *a12)
{
  __int128 v12;
  __int128 v14;
  __int128 v16;
  BOOL v20;
  uint64_t v21;
  float *v22;
  const float *v23;
  int8x16_t v24;
  float32x4_t v25;
  int8x16_t v26;
  float32x4_t v27;
  float32x4_t v28;
  float32x4_t v29;
  float32x4_t v30;
  float32x4_t v31;
  float32x4_t v32;
  float32x4_t v33;
  float32x4_t v34;
  float32x4_t v35;
  float32x4_t v36;
  float32x4_t v37;
  float32x4_t v38;
  float32x4_t v39;
  float32x4_t v40;
  float32x4_t v41;
  float32x4_t v42;
  float32x4_t v43;
  float32x4_t v44;
  float32x4_t v45;
  float32x4_t v46;
  float32x4_t v47;
  float32x4_t v48;
  float32x4_t v49;
  float32x4_t v50;
  float32x4_t v51;
  float32x4_t v52;
  float32x4_t v53;
  float32x4_t v54;
  float32x4_t v55;
  float32x4_t v56;
  float32x4_t v57;
  float32x4_t v58;
  float32x4_t v59;
  float32x4_t v60;
  float32x4_t v61;
  float32x4_t v62;
  float32x4_t v63;
  float32x4_t v64;
  float32x4_t v65;
  float32x4_t v66;
  float32x4_t v67;
  float32x4_t v68;
  float32x4_t v69;
  float32x4_t v70;
  float32x4_t *v71;
  float32x4_t v72;
  float32x4_t v73;
  float32x4_t v74;
  float32x4_t v75;
  float32x4_t v76;
  float32x4_t v77;
  float32x4_t v78;
  float32x4_t v79;
  float32x4_t v80;
  float32x4_t v81;
  float32x4_t v82;
  float32x4_t v83;
  float32x4_t v84;
  float32x4_t v85;
  float32x4_t v86;
  float32x4_t v87;
  float32x4_t v88;
  float32x4_t v89;
  float32x4_t v90;
  float32x4_t v91;
  float32x4_t v92;
  float32x4_t v93;
  float32x4_t v94;
  float32x4_t v95;
  float32x4_t v96;
  float32x4_t v97;
  float32x4_t v98;
  float32x4_t v99;
  float32x4_t v100;
  float32x4_t v101;
  float32x4_t v102;
  float32x4_t v103;
  float32x4_t v104;
  float32x4_t v105;
  float32x4_t v106;
  float32x4_t v107;
  float32x4_t v108;
  float32x4_t v109;
  float32x4_t v110;
  float32x4_t v111;
  float32x4_t v112;
  float32x4_t v113;
  float32x4_t v114;
  float32x4_t v115;
  float32x4_t v116;
  float32x4_t v117;
  float32x4_t v118;
  float32x4_t v119;
  float32x4_t v120;
  float32x4_t v121;
  float32x4_t v122;
  float32x4_t v123;
  float32x4_t v124;
  float32x4_t v125;
  float32x4_t v126;
  float32x4_t v127;
  float32x4_t v128;
  float32x4_t v129;
  float32x4_t v130;
  float32x4_t v131;
  float32x4_t v132;
  float32x4_t v133;
  float32x4_t v134;
  float32x4_t v135;
  float32x4_t v136;
  float32x4_t v137;
  float32x4_t v138;
  float32x4_t v139;
  float32x4_t v140;
  float32x4_t v141;
  float32x4_t v142;
  float32x4_t v143;
  float32x4_t v144;
  float32x4_t v145;
  float32x4_t v146;
  float32x4_t v147;
  float32x4_t v148;
  float32x4_t v149;
  float32x4_t v150;
  float32x4_t v151;
  float32x4_t v152;
  float32x4_t v153;
  float32x4_t v154;
  float32x4_t v155;
  float32x4_t v156;
  float32x4_t v157;
  float32x4_t v158;
  float32x4_t v159;
  float32x4_t v160;
  float32x4_t v161;
  float32x4_t v162;
  float32x4_t v163;
  float32x4_t v164;
  float32x4_t v165;
  float32x4_t v166;
  float32x4_t v167;
  float32x4_t v168;
  float32x4_t v169;
  float32x4_t v170;
  float32x4_t v171;
  float32x4_t v172;
  float32x4_t v173;
  float32x4_t v174;
  float32x4_t v175;
  float32x4_t v176;
  float32x4_t v177;
  float32x4_t v178;
  float32x4_t v179;
  float32x4_t v180;
  float32x4_t v181;
  float32x4_t v182;
  float32x4_t v183;
  float32x4_t v184;
  float32x4_t v185;
  float32x4_t v186;
  float32x4_t v187;
  float32x4_t v188;
  float32x4_t v189;
  float32x4_t v190;
  float32x4_t v191;
  float32x4_t v192;
  float32x4_t v193;
  float32x4_t v194;
  float32x4_t v195;
  float32x4_t v196;
  float32x4_t v197;
  float32x4_t v198;
  float32x4_t v199;
  float32x4_t v200;
  float32x4_t v201;
  float32x4_t v202;
  float32x4_t v203;
  float32x4_t v204;
  float32x4_t v205;
  float *f32;
  float32x4_t v207;
  float32x4_t v208;
  float32x4_t v209;
  float32x4_t v210;
  float32x4_t v211;
  float32x4_t v212;
  float32x4_t v213;
  float32x4_t v214;
  float32x4_t v215;
  float32x4_t v216;
  float32x4_t v217;
  float32x4_t v218;
  float32x4_t v219;
  float32x4_t v220;
  float32x4_t v221;
  float32x4_t v222;
  float32x4_t v223;
  float32x4_t v224;
  float32x4_t v225;
  float32x4_t v226;
  float32x4_t v227;
  float32x4_t v228;
  float32x4_t v229;
  float32x4_t v230;
  float32x4_t v231;
  float32x4_t v232;
  float32x4_t v233;
  float32x4_t v234;
  float32x4_t v235;
  float32x4_t v236;
  float32x4_t v237;
  float32x4_t v238;
  float32x4_t v239;
  float32x4_t v240;
  float32x4_t v241;
  float32x4_t v242;
  float32x4_t v243;
  float32x4_t v244;
  float32x4_t v245;
  float32x4_t v246;
  float32x4_t v247;
  float32x4_t v248;
  float32x4_t v249;
  float32x4_t v250;
  float32x4_t v251;
  float32x4_t v252;
  float32x4_t v253;
  float32x4_t v254;
  float32x4_t v255;
  float32x4_t v256;
  float32x4_t v257;
  float32x4_t v258;
  float32x4_t v259;
  float32x4_t v260;
  float32x4_t v261;
  float32x4_t v262;
  float32x4_t v263;
  float32x4_t v264;
  float32x4_t v265;
  float32x4_t v266;
  float32x4_t v267;
  float32x4_t v268;
  float32x4_t v269;
  float32x4_t v270;
  float32x4_t v271;
  float32x4_t v272;
  float32x4_t v273;
  float32x4_t v274;
  float32x4_t v275;
  float32x4_t v276;
  float32x4_t v277;
  float32x4_t v278;
  float32x4_t v279;
  float32x4_t v280;
  float32x4_t v281;
  float32x4_t v282;
  float32x4_t v283;
  float32x4_t v284;
  float32x4_t v285;
  float32x4_t v286;
  float32x4_t v287;
  float32x4_t v288;
  float32x4_t v289;
  float32x4_t v290;
  float32x4_t v291;
  float32x4_t v292;
  float32x4_t v293;
  float32x4_t v294;
  float32x4_t v295;
  float32x4_t v296;
  float32x4_t v297;
  float32x4_t v298;
  float32x4_t v299;
  float32x4_t v300;
  float32x4_t v301;
  float32x4_t v302;
  float32x4_t v303;
  float32x4_t v304;
  float32x4_t v305;
  float32x4_t v306;
  float32x4_t v307;
  float32x4_t v308;
  float32x4_t v309;
  float32x4_t v310;
  float32x4_t v311;
  float *v312;
  float v313[16];
  float v314[16];
  float32x4x4_t v315;
  float32x4x4_t v316;
  float32x4x4_t v317;
  float32x4x4_t v318;

  v20 = a4 < 4;
  v21 = a4 - 4;
  if (!v20)
  {
    v22 = v313;
    vst4q_f32(v22, *(float32x4x4_t *)&v12);
    v22 += 16;
    vst4q_f32(v22, *(float32x4x4_t *)&v16);
    v23 = a6;
    v315 = vld4q_f32(v23);
    v23 += 16;
    v316 = vld4q_f32(v23);
    v23 += 16;
    v317 = vld4q_f32(v23);
    v23 += 16;
    v318 = vld4q_f32(v23);
    *(float *)&v14 = *a8;
    v24.i64[0] = 0;
    v24.i64[1] = *a5;
    v25 = vsubq_f32(*a2, (float32x4_t)vextq_s8(v24, *(int8x16_t *)a2, 8uLL));
    v26 = *(int8x16_t *)a2;
    v27 = vmlaq_f32(vmlaq_n_f32(vmulq_f32(v317.val[0], *a12), *a10, v25.f32[0]), v315.val[0], *a11);
    v28 = vmlaq_f32(vmlaq_n_f32(vmulq_f32(v317.val[1], a12[1]), a10[1], v25.f32[0]), v315.val[1], a11[1]);
    v29 = vmlaq_f32(vmlaq_n_f32(vmulq_f32(v317.val[2], a12[2]), a10[2], v25.f32[0]), v315.val[2], a11[2]);
    v30 = vmlaq_f32(vmlaq_n_f32(vmulq_f32(v317.val[3], a12[3]), a10[3], v25.f32[0]), v315.val[3], a11[3]);
    v31 = vmlaq_f32(vmlaq_n_f32(vmulq_f32(v318.val[0], a12[4]), a10[4], v25.f32[0]), v316.val[0], a11[4]);
    v32 = vmlaq_f32(vmlaq_n_f32(vmulq_f32(v318.val[1], a12[5]), a10[5], v25.f32[0]), v316.val[1], a11[5]);
    v33 = vmlaq_f32(vmlaq_n_f32(vmulq_f32(v318.val[2], a12[6]), a10[6], v25.f32[0]), v316.val[2], a11[6]);
    v34 = vmlaq_f32(vmlaq_n_f32(vmulq_f32(v318.val[3], a12[7]), a10[7], v25.f32[0]), v316.val[3], a11[7]);
    v35 = a7[4];
    v36 = a7[5];
    v37 = a7[6];
    v38 = a7[7];
    v39 = vmulq_n_f32(vmlsq_f32(*a7, v27, v27), *a8);
    v40 = vmulq_n_f32(vmlsq_f32(a7[1], v28, v28), *a8);
    v41 = vmulq_n_f32(vmlsq_f32(a7[2], v29, v29), *a8);
    v42 = vmulq_n_f32(vmlsq_f32(a7[3], v30, v30), *a8);
    if (v21)
    {
      do
      {
        v43 = vmlaq_f32(v39, v27, v27);
        v44 = a7[8];
        v45 = vmlaq_f32(v40, v28, v28);
        v46 = a7[9];
        v47 = vmlaq_f32(v41, v29, v29);
        v48 = a7[10];
        v49 = vmlaq_f32(v42, v30, v30);
        v50 = a7[11];
        v51 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v35, v31, v31), *(float *)&v14), v31, v31);
        *a7 = v43;
        v52 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v36, v32, v32), *(float *)&v14), v32, v32);
        a7[1] = v45;
        v53 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v37, v33, v33), *(float *)&v14), v33, v33);
        a7[2] = v47;
        v54 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v38, v34, v34), *(float *)&v14), v34, v34);
        a7[3] = v49;
        a7[4] = v51;
        a7[5] = v52;
        a7[6] = v53;
        a7[7] = v54;
        v55 = vmlaq_n_f32(v43, vsubq_f32(v44, v43), *(float *)&v14);
        v56 = vmlaq_n_f32(v45, vsubq_f32(v46, v45), *(float *)&v14);
        v57 = a7[13];
        v58 = vmlaq_n_f32(v47, vsubq_f32(v48, v47), *(float *)&v14);
        v59 = a7[14];
        v60 = vmlaq_n_f32(v49, vsubq_f32(v50, v49), *(float *)&v14);
        v61 = a7[15];
        v62 = vsubq_f32(a7[12], v51);
        a7[8] = v55;
        a7[9] = v56;
        a7[10] = v58;
        a7[11] = v60;
        v63 = vmlaq_n_f32(v51, v62, *(float *)&v14);
        v64 = *a12;
        v65 = vmlaq_n_f32(v52, vsubq_f32(v57, v52), *(float *)&v14);
        v66 = a12[1];
        v67 = vmlaq_n_f32(v53, vsubq_f32(v59, v53), *(float *)&v14);
        v68 = a12[2];
        v69 = vmlaq_n_f32(v54, vsubq_f32(v61, v54), *(float *)&v14);
        v70 = a12[3];
        if (!(_DWORD)result)
        {
          *a3 = v55;
          a3[1] = v56;
          a3[2] = v58;
          a3[3] = v60;
          v71 = a3 + 4;
          *v71 = v63;
          v71[1] = v65;
          v71[2] = v67;
          v71[3] = v69;
          a3 = v71 + 4;
        }
        v72 = vmlaq_f32(vmlaq_lane_f32(vmulq_f32(v315.val[0], v64), *a10, *(float32x2_t *)v25.f32, 1), v27, *a11);
        v73 = vmlaq_f32(vmlaq_lane_f32(vmulq_f32(v315.val[1], v66), a10[1], *(float32x2_t *)v25.f32, 1), v28, a11[1]);
        v74 = vmlaq_f32(vmlaq_lane_f32(vmulq_f32(v315.val[2], v68), a10[2], *(float32x2_t *)v25.f32, 1), v29, a11[2]);
        v75 = vmlaq_f32(vmlaq_lane_f32(vmulq_f32(v315.val[3], v70), a10[3], *(float32x2_t *)v25.f32, 1), v30, a11[3]);
        v76 = vmlaq_f32(vmlaq_lane_f32(vmulq_f32(v316.val[0], a12[4]), a10[4], *(float32x2_t *)v25.f32, 1), v31, a11[4]);
        v77 = vmlaq_f32(vmlaq_lane_f32(vmulq_f32(v316.val[1], a12[5]), a10[5], *(float32x2_t *)v25.f32, 1), v32, a11[5]);
        v78 = a7[1];
        v79 = vmlaq_f32(vmlaq_lane_f32(vmulq_f32(v316.val[2], a12[6]), a10[6], *(float32x2_t *)v25.f32, 1), v33, a11[6]);
        v80 = a7[2];
        v81 = vmlaq_f32(vmlaq_lane_f32(vmulq_f32(v316.val[3], a12[7]), a10[7], *(float32x2_t *)v25.f32, 1), v34, a11[7]);
        v82 = a7[3];
        v83 = vmlsq_f32(*a7, v72, v72);
        a7[12] = v63;
        a7[13] = v65;
        a7[14] = v67;
        a7[15] = v69;
        v84 = vmulq_n_f32(vmlsq_f32(a7[5], v77, v77), *(float *)&v14);
        v85 = vmulq_n_f32(vmlsq_f32(a7[6], v79, v79), *(float *)&v14);
        v86 = vmulq_n_f32(vmlsq_f32(a7[7], v81, v81), *(float *)&v14);
        v87 = vmlaq_f32(vmulq_n_f32(v83, *(float *)&v14), v72, v72);
        v88 = a7[8];
        v89 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v78, v73, v73), *(float *)&v14), v73, v73);
        v90 = a7[9];
        v91 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v80, v74, v74), *(float *)&v14), v74, v74);
        v92 = a7[10];
        v93 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v82, v75, v75), *(float *)&v14), v75, v75);
        v94 = a7[11];
        v95 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(a7[4], v76, v76), *(float *)&v14), v76, v76);
        *a7 = v87;
        v96 = vmlaq_f32(v84, v77, v77);
        a7[1] = v89;
        v97 = vmlaq_f32(v85, v79, v79);
        a7[2] = v91;
        v98 = vmlaq_f32(v86, v81, v81);
        a7[3] = v93;
        a7[4] = v95;
        a7[5] = v96;
        a7[6] = v97;
        a7[7] = v98;
        v99 = vmlaq_n_f32(v87, vsubq_f32(v88, v87), *(float *)&v14);
        v100 = vmlaq_n_f32(v89, vsubq_f32(v90, v89), *(float *)&v14);
        v101 = a7[13];
        v102 = vmlaq_n_f32(v91, vsubq_f32(v92, v91), *(float *)&v14);
        v103 = a7[14];
        v104 = vmlaq_n_f32(v93, vsubq_f32(v94, v93), *(float *)&v14);
        v105 = a7[15];
        v106 = vsubq_f32(a7[12], v95);
        a7[8] = v99;
        a7[9] = v100;
        a7[10] = v102;
        a7[11] = v104;
        v107 = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v27, *a12), *a10, v25, 2), v72, *a11);
        v108 = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v28, a12[1]), a10[1], v25, 2), v73, a11[1]);
        v109 = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v29, a12[2]), a10[2], v25, 2), v74, a11[2]);
        v110 = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v30, a12[3]), a10[3], v25, 2), v75, a11[3]);
        v111 = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v31, a12[4]), a10[4], v25, 2), v76, a11[4]);
        v112 = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v32, a12[5]), a10[5], v25, 2), v77, a11[5]);
        v113 = a7[1];
        v114 = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v33, a12[6]), a10[6], v25, 2), v79, a11[6]);
        v115 = a7[2];
        v116 = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v34, a12[7]), a10[7], v25, 2), v81, a11[7]);
        v117 = a7[3];
        v118 = vmlsq_f32(*a7, v107, v107);
        a7[12] = vmlaq_n_f32(v95, v106, *(float *)&v14);
        a7[13] = vmlaq_n_f32(v96, vsubq_f32(v101, v96), *(float *)&v14);
        a7[14] = vmlaq_n_f32(v97, vsubq_f32(v103, v97), *(float *)&v14);
        a7[15] = vmlaq_n_f32(v98, vsubq_f32(v105, v98), *(float *)&v14);
        v119 = vmulq_n_f32(vmlsq_f32(a7[5], v112, v112), *(float *)&v14);
        v120 = vmulq_n_f32(vmlsq_f32(a7[6], v114, v114), *(float *)&v14);
        v121 = vmulq_n_f32(vmlsq_f32(a7[7], v116, v116), *(float *)&v14);
        v122 = vmlaq_f32(vmulq_n_f32(v118, *(float *)&v14), v107, v107);
        v123 = a7[8];
        v124 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v113, v108, v108), *(float *)&v14), v108, v108);
        v125 = a7[9];
        v126 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v115, v109, v109), *(float *)&v14), v109, v109);
        v127 = a7[10];
        v128 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v117, v110, v110), *(float *)&v14), v110, v110);
        v129 = a7[11];
        v130 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(a7[4], v111, v111), *(float *)&v14), v111, v111);
        *a7 = v122;
        v131 = vmlaq_f32(v119, v112, v112);
        a7[1] = v124;
        v132 = vmlaq_f32(v120, v114, v114);
        a7[2] = v126;
        v133 = vmlaq_f32(v121, v116, v116);
        a7[3] = v128;
        a7[4] = v130;
        a7[5] = v131;
        a7[6] = v132;
        a7[7] = v133;
        v134 = vmlaq_n_f32(v122, vsubq_f32(v123, v122), *(float *)&v14);
        v135 = vmlaq_n_f32(v124, vsubq_f32(v125, v124), *(float *)&v14);
        v136 = a7[13];
        v137 = vmlaq_n_f32(v126, vsubq_f32(v127, v126), *(float *)&v14);
        v138 = a7[14];
        v139 = vmlaq_n_f32(v128, vsubq_f32(v129, v128), *(float *)&v14);
        v140 = a7[15];
        v141 = vsubq_f32(a7[12], v130);
        a7[8] = v134;
        a7[9] = v135;
        a7[10] = v137;
        a7[11] = v139;
        v315.val[0] = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v72, *a12), *a10, v25, 3), v107, *a11);
        v315.val[1] = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v73, a12[1]), a10[1], v25, 3), v108, a11[1]);
        v315.val[2] = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v74, a12[2]), a10[2], v25, 3), v109, a11[2]);
        v315.val[3] = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v75, a12[3]), a10[3], v25, 3), v110, a11[3]);
        v316.val[0] = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v76, a12[4]), a10[4], v25, 3), v111, a11[4]);
        v316.val[1] = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v77, a12[5]), a10[5], v25, 3), v112, a11[5]);
        v142 = a7[1];
        v316.val[2] = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v79, a12[6]), a10[6], v25, 3), v114, a11[6]);
        v143 = a7[2];
        v316.val[3] = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v81, a12[7]), a10[7], v25, 3), v116, a11[7]);
        v144 = a7[3];
        v145 = vmlsq_f32(*a7, v315.val[0], v315.val[0]);
        a7[12] = vmlaq_n_f32(v130, v141, *(float *)&v14);
        a7[13] = vmlaq_n_f32(v131, vsubq_f32(v136, v131), *(float *)&v14);
        a7[14] = vmlaq_n_f32(v132, vsubq_f32(v138, v132), *(float *)&v14);
        a7[15] = vmlaq_n_f32(v133, vsubq_f32(v140, v133), *(float *)&v14);
        v146 = *++a2;
        v147 = vmulq_n_f32(vmlsq_f32(a7[5], v316.val[1], v316.val[1]), *(float *)&v14);
        v148 = vmulq_n_f32(vmlsq_f32(a7[6], v316.val[2], v316.val[2]), *(float *)&v14);
        v149 = vmulq_n_f32(vmlsq_f32(a7[7], v316.val[3], v316.val[3]), *(float *)&v14);
        v150 = vmlaq_f32(vmulq_n_f32(v145, *(float *)&v14), v315.val[0], v315.val[0]);
        v151 = a7[8];
        v152 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v142, v315.val[1], v315.val[1]), *(float *)&v14), v315.val[1], v315.val[1]);
        v153 = a7[9];
        v154 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v143, v315.val[2], v315.val[2]), *(float *)&v14), v315.val[2], v315.val[2]);
        v155 = a7[10];
        v156 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v144, v315.val[3], v315.val[3]), *(float *)&v14), v315.val[3], v315.val[3]);
        v157 = a7[11];
        v158 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(a7[4], v316.val[0], v316.val[0]), *(float *)&v14), v316.val[0], v316.val[0]);
        *a7 = v150;
        v159 = vmlaq_f32(v147, v316.val[1], v316.val[1]);
        a7[1] = v152;
        v160 = vmlaq_f32(v148, v316.val[2], v316.val[2]);
        a7[2] = v154;
        v161 = vmlaq_f32(v149, v316.val[3], v316.val[3]);
        a7[3] = v156;
        a7[4] = v158;
        a7[5] = v159;
        a7[6] = v160;
        a7[7] = v161;
        v162 = vmlaq_n_f32(v150, vsubq_f32(v151, v150), *(float *)&v14);
        v163 = vmlaq_n_f32(v152, vsubq_f32(v153, v152), *(float *)&v14);
        v164 = a7[13];
        v165 = vmlaq_n_f32(v154, vsubq_f32(v155, v154), *(float *)&v14);
        v166 = a7[14];
        v167 = vmlaq_n_f32(v156, vsubq_f32(v157, v156), *(float *)&v14);
        v168 = a7[15];
        v169 = vsubq_f32(a7[12], v158);
        a7[8] = v162;
        a7[9] = v163;
        a7[10] = v165;
        a7[11] = v167;
        LODWORD(result) = result + 4;
        v170 = vmlaq_n_f32(v158, v169, *(float *)&v14);
        v171 = vmlaq_n_f32(v159, vsubq_f32(v164, v159), *(float *)&v14);
        v172 = vmlaq_n_f32(v160, vsubq_f32(v166, v160), *(float *)&v14);
        v173 = vmlaq_n_f32(v161, vsubq_f32(v168, v161), *(float *)&v14);
        if ((int)result >= a9)
          LODWORD(result) = 0;
        v25 = vsubq_f32(v146, (float32x4_t)vextq_s8(v26, (int8x16_t)v146, 8uLL));
        v26 = (int8x16_t)v146;
        v27 = vmlaq_f32(vmlaq_n_f32(vmulq_f32(v107, *a12), *a10, v25.f32[0]), v315.val[0], *a11);
        v28 = vmlaq_f32(vmlaq_n_f32(vmulq_f32(v108, a12[1]), a10[1], v25.f32[0]), v315.val[1], a11[1]);
        v29 = vmlaq_f32(vmlaq_n_f32(vmulq_f32(v109, a12[2]), a10[2], v25.f32[0]), v315.val[2], a11[2]);
        v30 = vmlaq_f32(vmlaq_n_f32(vmulq_f32(v110, a12[3]), a10[3], v25.f32[0]), v315.val[3], a11[3]);
        v31 = vmlaq_f32(vmlaq_n_f32(vmulq_f32(v111, a12[4]), a10[4], v25.f32[0]), v316.val[0], a11[4]);
        v32 = vmlaq_f32(vmlaq_n_f32(vmulq_f32(v112, a12[5]), a10[5], v25.f32[0]), v316.val[1], a11[5]);
        v174 = a7[1];
        v33 = vmlaq_f32(vmlaq_n_f32(vmulq_f32(v114, a12[6]), a10[6], v25.f32[0]), v316.val[2], a11[6]);
        v175 = a7[2];
        v34 = vmlaq_f32(vmlaq_n_f32(vmulq_f32(v116, a12[7]), a10[7], v25.f32[0]), v316.val[3], a11[7]);
        v176 = a7[3];
        v177 = vmlsq_f32(*a7, v27, v27);
        a7[12] = v170;
        a7[13] = v171;
        a7[14] = v172;
        a7[15] = v173;
        v39 = vmulq_n_f32(v177, *(float *)&v14);
        v35 = a7[4];
        v40 = vmulq_n_f32(vmlsq_f32(v174, v28, v28), *(float *)&v14);
        v36 = a7[5];
        v41 = vmulq_n_f32(vmlsq_f32(v175, v29, v29), *(float *)&v14);
        v37 = a7[6];
        v42 = vmulq_n_f32(vmlsq_f32(v176, v30, v30), *(float *)&v14);
        v38 = a7[7];
        v20 = v21 <= 4;
        v21 -= 4;
      }
      while (!v20);
    }
    v178 = vmlaq_f32(v39, v27, v27);
    v179 = a7[8];
    v180 = vmlaq_f32(v40, v28, v28);
    v181 = a7[9];
    v182 = vmlaq_f32(v41, v29, v29);
    v183 = a7[10];
    v184 = vmlaq_f32(v42, v30, v30);
    v185 = a7[11];
    v186 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v35, v31, v31), *(float *)&v14), v31, v31);
    *a7 = v178;
    v187 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v36, v32, v32), *(float *)&v14), v32, v32);
    a7[1] = v180;
    v188 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v37, v33, v33), *(float *)&v14), v33, v33);
    a7[2] = v182;
    v189 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v38, v34, v34), *(float *)&v14), v34, v34);
    a7[3] = v184;
    a7[4] = v186;
    a7[5] = v187;
    a7[6] = v188;
    a7[7] = v189;
    v190 = vmlaq_n_f32(v178, vsubq_f32(v179, v178), *(float *)&v14);
    v191 = vmlaq_n_f32(v180, vsubq_f32(v181, v180), *(float *)&v14);
    v192 = a7[13];
    v193 = vmlaq_n_f32(v182, vsubq_f32(v183, v182), *(float *)&v14);
    v194 = a7[14];
    v195 = vmlaq_n_f32(v184, vsubq_f32(v185, v184), *(float *)&v14);
    v196 = a7[15];
    v197 = vsubq_f32(a7[12], v186);
    a7[8] = v190;
    a7[9] = v191;
    a7[10] = v193;
    a7[11] = v195;
    v198 = vmlaq_n_f32(v186, v197, *(float *)&v14);
    v199 = *a12;
    v200 = vmlaq_n_f32(v187, vsubq_f32(v192, v187), *(float *)&v14);
    v201 = a12[1];
    v202 = vmlaq_n_f32(v188, vsubq_f32(v194, v188), *(float *)&v14);
    v203 = a12[2];
    v204 = vmlaq_n_f32(v189, vsubq_f32(v196, v189), *(float *)&v14);
    v205 = a12[3];
    if (!(_DWORD)result)
    {
      vst4q_f32(a3->f32, *(float32x4x4_t *)v190.f32);
      f32 = a3[4].f32;
      vst4q_f32(f32, *(float32x4x4_t *)v198.f32);
    }
    v207 = vmlaq_f32(vmlaq_lane_f32(vmulq_f32(v315.val[0], v199), *a10, *(float32x2_t *)v25.f32, 1), v27, *a11);
    v208 = vmlaq_f32(vmlaq_lane_f32(vmulq_f32(v315.val[1], v201), a10[1], *(float32x2_t *)v25.f32, 1), v28, a11[1]);
    v209 = vmlaq_f32(vmlaq_lane_f32(vmulq_f32(v315.val[2], v203), a10[2], *(float32x2_t *)v25.f32, 1), v29, a11[2]);
    v210 = vmlaq_f32(vmlaq_lane_f32(vmulq_f32(v315.val[3], v205), a10[3], *(float32x2_t *)v25.f32, 1), v30, a11[3]);
    v211 = vmlaq_f32(vmlaq_lane_f32(vmulq_f32(v316.val[0], a12[4]), a10[4], *(float32x2_t *)v25.f32, 1), v31, a11[4]);
    v212 = vmlaq_f32(vmlaq_lane_f32(vmulq_f32(v316.val[1], a12[5]), a10[5], *(float32x2_t *)v25.f32, 1), v32, a11[5]);
    v213 = a7[1];
    v214 = vmlaq_f32(vmlaq_lane_f32(vmulq_f32(v316.val[2], a12[6]), a10[6], *(float32x2_t *)v25.f32, 1), v33, a11[6]);
    v215 = a7[2];
    v216 = vmlaq_f32(vmlaq_lane_f32(vmulq_f32(v316.val[3], a12[7]), a10[7], *(float32x2_t *)v25.f32, 1), v34, a11[7]);
    v217 = a7[3];
    v218 = vmlsq_f32(*a7, v207, v207);
    a7[12] = v198;
    a7[13] = v200;
    a7[14] = v202;
    a7[15] = v204;
    v219 = vmulq_n_f32(vmlsq_f32(a7[5], v212, v212), *(float *)&v14);
    v220 = vmulq_n_f32(vmlsq_f32(a7[6], v214, v214), *(float *)&v14);
    v221 = vmulq_n_f32(vmlsq_f32(a7[7], v216, v216), *(float *)&v14);
    v222 = vmlaq_f32(vmulq_n_f32(v218, *(float *)&v14), v207, v207);
    v223 = a7[8];
    v224 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v213, v208, v208), *(float *)&v14), v208, v208);
    v225 = a7[9];
    v226 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v215, v209, v209), *(float *)&v14), v209, v209);
    v227 = a7[10];
    v228 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v217, v210, v210), *(float *)&v14), v210, v210);
    v229 = a7[11];
    v230 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(a7[4], v211, v211), *(float *)&v14), v211, v211);
    *a7 = v222;
    v231 = vmlaq_f32(v219, v212, v212);
    a7[1] = v224;
    v232 = vmlaq_f32(v220, v214, v214);
    a7[2] = v226;
    v233 = vmlaq_f32(v221, v216, v216);
    a7[3] = v228;
    a7[4] = v230;
    a7[5] = v231;
    a7[6] = v232;
    a7[7] = v233;
    v234 = vmlaq_n_f32(v222, vsubq_f32(v223, v222), *(float *)&v14);
    v235 = vmlaq_n_f32(v224, vsubq_f32(v225, v224), *(float *)&v14);
    v236 = a7[13];
    v237 = vmlaq_n_f32(v226, vsubq_f32(v227, v226), *(float *)&v14);
    v238 = a7[14];
    v239 = vmlaq_n_f32(v228, vsubq_f32(v229, v228), *(float *)&v14);
    v240 = a7[15];
    v241 = vsubq_f32(a7[12], v230);
    a7[8] = v234;
    a7[9] = v235;
    a7[10] = v237;
    a7[11] = v239;
    v242 = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v27, *a12), *a10, v25, 2), v207, *a11);
    v243 = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v28, a12[1]), a10[1], v25, 2), v208, a11[1]);
    v244 = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v29, a12[2]), a10[2], v25, 2), v209, a11[2]);
    v245 = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v30, a12[3]), a10[3], v25, 2), v210, a11[3]);
    v246 = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v31, a12[4]), a10[4], v25, 2), v211, a11[4]);
    v247 = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v32, a12[5]), a10[5], v25, 2), v212, a11[5]);
    v248 = a7[1];
    v249 = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v33, a12[6]), a10[6], v25, 2), v214, a11[6]);
    v250 = a7[2];
    v251 = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v34, a12[7]), a10[7], v25, 2), v216, a11[7]);
    v252 = a7[3];
    v253 = vmlsq_f32(*a7, v242, v242);
    a7[12] = vmlaq_n_f32(v230, v241, *(float *)&v14);
    a7[13] = vmlaq_n_f32(v231, vsubq_f32(v236, v231), *(float *)&v14);
    a7[14] = vmlaq_n_f32(v232, vsubq_f32(v238, v232), *(float *)&v14);
    a7[15] = vmlaq_n_f32(v233, vsubq_f32(v240, v233), *(float *)&v14);
    v254 = vmulq_n_f32(vmlsq_f32(a7[5], v247, v247), *(float *)&v14);
    v255 = vmulq_n_f32(vmlsq_f32(a7[6], v249, v249), *(float *)&v14);
    v256 = vmulq_n_f32(vmlsq_f32(a7[7], v251, v251), *(float *)&v14);
    v257 = vmlaq_f32(vmulq_n_f32(v253, *(float *)&v14), v242, v242);
    v258 = a7[8];
    v259 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v248, v243, v243), *(float *)&v14), v243, v243);
    v260 = a7[9];
    v261 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v250, v244, v244), *(float *)&v14), v244, v244);
    v262 = a7[10];
    v263 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v252, v245, v245), *(float *)&v14), v245, v245);
    v264 = a7[11];
    v265 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(a7[4], v246, v246), *(float *)&v14), v246, v246);
    *a7 = v257;
    v266 = vmlaq_f32(v254, v247, v247);
    a7[1] = v259;
    v267 = vmlaq_f32(v255, v249, v249);
    a7[2] = v261;
    v268 = vmlaq_f32(v256, v251, v251);
    a7[3] = v263;
    a7[4] = v265;
    a7[5] = v266;
    a7[6] = v267;
    a7[7] = v268;
    v269 = vmlaq_n_f32(v257, vsubq_f32(v258, v257), *(float *)&v14);
    v270 = vmlaq_n_f32(v259, vsubq_f32(v260, v259), *(float *)&v14);
    v271 = a7[13];
    v272 = vmlaq_n_f32(v261, vsubq_f32(v262, v261), *(float *)&v14);
    v273 = a7[14];
    v274 = vmlaq_n_f32(v263, vsubq_f32(v264, v263), *(float *)&v14);
    v275 = a7[15];
    v276 = vsubq_f32(a7[12], v265);
    a7[8] = v269;
    a7[9] = v270;
    a7[10] = v272;
    a7[11] = v274;
    v277 = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v207, *a12), *a10, v25, 3), v242, *a11);
    v278 = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v208, a12[1]), a10[1], v25, 3), v243, a11[1]);
    v279 = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v209, a12[2]), a10[2], v25, 3), v244, a11[2]);
    v280 = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v210, a12[3]), a10[3], v25, 3), v245, a11[3]);
    v281 = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v211, a12[4]), a10[4], v25, 3), v246, a11[4]);
    v282 = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v212, a12[5]), a10[5], v25, 3), v247, a11[5]);
    v283 = a7[1];
    v284 = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v214, a12[6]), a10[6], v25, 3), v249, a11[6]);
    v285 = a7[2];
    v286 = vmlaq_f32(vmlaq_laneq_f32(vmulq_f32(v216, a12[7]), a10[7], v25, 3), v251, a11[7]);
    v287 = a7[3];
    v288 = vmlsq_f32(*a7, v277, v277);
    a7[12] = vmlaq_n_f32(v265, v276, *(float *)&v14);
    a7[13] = vmlaq_n_f32(v266, vsubq_f32(v271, v266), *(float *)&v14);
    a7[14] = vmlaq_n_f32(v267, vsubq_f32(v273, v267), *(float *)&v14);
    a7[15] = vmlaq_n_f32(v268, vsubq_f32(v275, v268), *(float *)&v14);
    v289 = vmulq_n_f32(vmlsq_f32(a7[5], v282, v282), *(float *)&v14);
    v290 = vmulq_n_f32(vmlsq_f32(a7[6], v284, v284), *(float *)&v14);
    v291 = vmulq_n_f32(vmlsq_f32(a7[7], v286, v286), *(float *)&v14);
    v292 = vmlaq_f32(vmulq_n_f32(v288, *(float *)&v14), v277, v277);
    v293 = a7[8];
    v294 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v283, v278, v278), *(float *)&v14), v278, v278);
    v295 = a7[9];
    v296 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v285, v279, v279), *(float *)&v14), v279, v279);
    v297 = a7[10];
    v298 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(v287, v280, v280), *(float *)&v14), v280, v280);
    v299 = a7[11];
    v300 = vmlaq_f32(vmulq_n_f32(vmlsq_f32(a7[4], v281, v281), *(float *)&v14), v281, v281);
    *a7 = v292;
    v301 = vmlaq_f32(v289, v282, v282);
    a7[1] = v294;
    v302 = vmlaq_f32(v290, v284, v284);
    a7[2] = v296;
    v303 = vmlaq_f32(v291, v286, v286);
    a7[3] = v298;
    a7[4] = v300;
    a7[5] = v301;
    a7[6] = v302;
    a7[7] = v303;
    v304 = vmlaq_n_f32(v292, vsubq_f32(v293, v292), *(float *)&v14);
    v305 = vmlaq_n_f32(v294, vsubq_f32(v295, v294), *(float *)&v14);
    v306 = a7[13];
    v307 = vmlaq_n_f32(v296, vsubq_f32(v297, v296), *(float *)&v14);
    v308 = a7[14];
    v309 = vmlaq_n_f32(v298, vsubq_f32(v299, v298), *(float *)&v14);
    v310 = a7[15];
    v311 = vsubq_f32(a7[12], v300);
    a7[8] = v304;
    a7[9] = v305;
    a7[10] = v307;
    a7[11] = v309;
    result = (result + 4);
    a7[12] = vmlaq_n_f32(v300, v311, *(float *)&v14);
    a7[13] = vmlaq_n_f32(v301, vsubq_f32(v306, v301), *(float *)&v14);
    a7[14] = vmlaq_n_f32(v302, vsubq_f32(v308, v302), *(float *)&v14);
    a7[15] = vmlaq_n_f32(v303, vsubq_f32(v310, v303), *(float *)&v14);
    if ((int)result >= a9)
      result = 0;
    v312 = a6;
    vst4q_f32(v312, *(float32x4x4_t *)v277.f32);
    v312 += 16;
    vst4q_f32(v312, *(float32x4x4_t *)v281.f32);
    v312 += 16;
    vst4q_f32(v312, *(float32x4x4_t *)v242.f32);
    v312 += 16;
    vst4q_f32(v312, *(float32x4x4_t *)v246.f32);
    *a5 = v26.i64[1];
    vld4q_f32(v313);
    vld4q_f32(v314);
  }
  return result;
}

double SNLKFSResult.timeRange.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = v1 + OBJC_IVAR___SNLKFSResult_impl;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR___SNLKFSResult_impl + 40);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SNLKFSResult_impl);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(v2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v2 + 16);
  result = *(double *)(v2 + 32);
  *(double *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 40) = v3;
  return result;
}

double SNLKFSResult.timeRange.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = v1 + OBJC_IVAR___SNLKFSResult_impl;
  *(_QWORD *)v3 = *(_QWORD *)a1;
  *(_QWORD *)(v3 + 8) = *(_QWORD *)(a1 + 8);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(a1 + 16);
  result = *(double *)(a1 + 32);
  *(double *)(v3 + 32) = result;
  *(_QWORD *)(v3 + 40) = v2;
  return result;
}

double sub_1D42AB7FC@<D0>(uint64_t a1@<X8>)
{
  return SNLKFSResult.timeRange.getter(a1);
}

double sub_1D42AB81C(uint64_t a1)
{
  return SNLKFSResult.timeRange.setter(a1);
}

double (*SNLKFSResult.timeRange.modify(_QWORD *a1))(void **a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[6] = v1;
  SNLKFSResult.timeRange.getter((uint64_t)v3);
  return sub_1D42AB888;
}

double sub_1D42AB888(void **a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  double result;

  v1 = *a1;
  v2 = v1[5];
  v3 = v1[6] + OBJC_IVAR___SNLKFSResult_impl;
  v4 = v1[1];
  v5 = v1[4];
  v6 = *((_OWORD *)v1 + 1);
  *(_QWORD *)v3 = *v1;
  *(_QWORD *)(v3 + 8) = v4;
  *(_OWORD *)(v3 + 16) = v6;
  *(_QWORD *)(v3 + 32) = v5;
  *(_QWORD *)(v3 + 40) = v2;
  free(v1);
  return result;
}

float SNLKFSResult.decibelLevel.getter()
{
  uint64_t v0;

  return *(float *)(v0 + OBJC_IVAR___SNLKFSResult_impl + 48);
}

void SNLKFSResult.decibelLevel.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + OBJC_IVAR___SNLKFSResult_impl + 48) = a1;
}

void sub_1D42AB92C(float *a1@<X8>)
{
  *a1 = SNLKFSResult.decibelLevel.getter();
}

void sub_1D42AB954(float *a1)
{
  SNLKFSResult.decibelLevel.setter(*a1);
}

float (*SNLKFSResult.decibelLevel.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR___SNLKFSResult_impl;
  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(v1 + v2 + 48);
  return sub_1D42AB9A0;
}

float sub_1D42AB9A0(uint64_t a1)
{
  float result;

  result = *(float *)(a1 + 16);
  *(float *)(*(_QWORD *)a1 + *(_QWORD *)(a1 + 8) + 48) = result;
  return result;
}

id sub_1D42AB9B4()
{
  char *v0;
  objc_class *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  objc_super v6;

  v1 = (objc_class *)sub_1D42B7104();
  v2 = MEMORY[0x1E0CA2E40];
  v3 = *(_QWORD *)(MEMORY[0x1E0CA2E40] + 40);
  v4 = &v0[OBJC_IVAR___SNLKFSResult_impl];
  *(_QWORD *)v4 = *MEMORY[0x1E0CA2E40];
  *((_QWORD *)v4 + 1) = *(_QWORD *)(v2 + 8);
  *((_OWORD *)v4 + 1) = *(_OWORD *)(v2 + 16);
  *((_QWORD *)v4 + 4) = *(_QWORD *)(v2 + 32);
  *((_QWORD *)v4 + 5) = v3;
  *((_DWORD *)v4 + 12) = 0;
  v6.receiver = v0;
  v6.super_class = v1;
  return objc_msgSendSuper2(&v6, sel_init);
}

id sub_1D42ABA44()
{
  uint64_t v0;
  objc_class *v1;
  char *v2;
  uint64_t v3;
  int v4;
  char *v5;
  objc_super v7;

  v2 = (char *)sub_1D42B7238();
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_DWORD *)(v0 + 48);
  v5 = &v2[OBJC_IVAR___SNLKFSResult_impl];
  *(_QWORD *)v5 = *(_QWORD *)v0;
  *((_QWORD *)v5 + 1) = *(_QWORD *)(v0 + 8);
  *((_OWORD *)v5 + 1) = *(_OWORD *)(v0 + 16);
  *((_QWORD *)v5 + 4) = *(_QWORD *)(v0 + 32);
  *((_QWORD *)v5 + 5) = v3;
  *((_DWORD *)v5 + 12) = v4;
  v7.receiver = v2;
  v7.super_class = v1;
  return objc_msgSendSuper2(&v7, sel_init);
}

id SNLKFSResult.copy(with:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  id result;

  v2 = sub_1D42B7104();
  sub_1D42B6F94(OBJC_IVAR___SNLKFSResult_impl);
  result = sub_1D42B725C();
  a1[3] = v2;
  *a1 = result;
  return result;
}

uint64_t SNLKFSResult.hash.getter()
{
  sub_1D42B6F94(OBJC_IVAR___SNLKFSResult_impl);
  return sub_1D44B8668();
}

BOOL SNLKFSResult.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  char *v3;
  uint64_t v4;
  float v5;
  uint64_t v6;
  uint64_t v7;
  float v8;
  BOOL v9;
  _BOOL8 v10;
  _QWORD v12[2];
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[2];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD v20[2];
  __int128 v21;
  uint64_t v22;

  sub_1D42B7104();
  sub_1D42B28B4(a1, (uint64_t)&v21);
  if (!v22)
    return 0;
  sub_1D42B293C(&v21, v20);
  sub_1D42B294C((uint64_t)v20, (uint64_t)v16);
  if (!swift_dynamicCast())
    goto LABEL_6;
  v3 = (char *)v12[0];
  if (!v12[0])
    goto LABEL_6;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___SNLKFSResult_impl + 40);
  v5 = *(float *)(v1 + OBJC_IVAR___SNLKFSResult_impl + 48);
  v6 = *(_QWORD *)(v12[0] + OBJC_IVAR___SNLKFSResult_impl);
  v7 = *(_QWORD *)(v12[0] + OBJC_IVAR___SNLKFSResult_impl + 40);
  v8 = *(float *)(v12[0] + OBJC_IVAR___SNLKFSResult_impl + 48);
  v16[0] = *(_QWORD *)(v1 + OBJC_IVAR___SNLKFSResult_impl);
  v16[1] = *(_QWORD *)(v1 + OBJC_IVAR___SNLKFSResult_impl + 8);
  v17 = *(_OWORD *)(v1 + OBJC_IVAR___SNLKFSResult_impl + 16);
  v18 = *(_QWORD *)(v1 + OBJC_IVAR___SNLKFSResult_impl + 32);
  v19 = v4;
  v12[0] = v6;
  v12[1] = *(_QWORD *)&v3[OBJC_IVAR___SNLKFSResult_impl + 8];
  v13 = *(_OWORD *)&v3[OBJC_IVAR___SNLKFSResult_impl + 16];
  v14 = *(_QWORD *)&v3[OBJC_IVAR___SNLKFSResult_impl + 32];
  v15 = v7;
  v9 = static TimeRange.== infix(_:_:)((uint64_t)v16, (uint64_t)v12);

  if (v9)
    v10 = v5 == v8;
  else
LABEL_6:
    v10 = 0;
  sub_1D42B5400((uint64_t)v20);
  return v10;
}

void SNLKFSResult.__allocating_init(coder:)()
{
  void *v0;

  sub_1D42B7238();
  SNLKFSResult.init(coder:)(v0);
  sub_1D42B6E24();
}

id SNLKFSResult.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;

  v3 = v1;
  sub_1D42B0F70(a1, (uint64_t)&v13);
  v4 = v13;
  v5 = v15;
  v6 = v16;
  v7 = v18;
  v8 = v19;
  v9 = v14;
  v10 = v17;
  swift_getObjectType();

  v13 = v4;
  v14 = v9;
  v15 = v5;
  v16 = v6;
  v17 = v10;
  v18 = v7;
  v19 = v8;
  v11 = sub_1D42B725C();

  sub_1D42B71F0();
  return v11;
}

Swift::Void __swiftcall SNLKFSResult.encode(with:)(NSCoder with)
{
  uint64_t v1;
  __int128 v2;
  _OWORD v3[3];
  int v4;

  v2 = *(_OWORD *)(v1 + OBJC_IVAR___SNLKFSResult_impl + 16);
  v3[0] = *(_OWORD *)(v1 + OBJC_IVAR___SNLKFSResult_impl);
  v3[1] = v2;
  v3[2] = *(_OWORD *)(v1 + OBJC_IVAR___SNLKFSResult_impl + 32);
  v4 = *(_DWORD *)(v1 + OBJC_IVAR___SNLKFSResult_impl + 48);
  sub_1D42AEE88((uint64_t)v3, 1819307369, 0xE400000000000000, with.super.isa);
}

uint64_t static SNLKFSResult.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t SNLKFSResult.description.getter()
{
  void *v0;
  objc_class *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  _QWORD v11[6];
  objc_super v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = (objc_class *)sub_1D42B7104();
  v15 = 0;
  v16 = 0xE000000000000000;
  sub_1D451B400();
  v13 = 0;
  v14 = 0xE000000000000000;
  v12.receiver = v0;
  v12.super_class = v1;
  v2 = objc_msgSendSuper2(&v12, sel_description);
  sub_1D451A6EC();
  sub_1D42B722C();
  sub_1D42B7190();
  swift_bridgeObjectRelease();
  sub_1D451A794();
  sub_1D451ABE4();
  sub_1D451A794();
  SNLKFSResult.timeRange.getter((uint64_t)&v15);
  v3 = v15;
  v4 = v17;
  v5 = v18;
  v6 = v20;
  v7 = (void *)objc_opt_self();
  v11[0] = v3;
  v11[1] = v16;
  v11[2] = v4;
  v11[3] = v5;
  v11[4] = v19;
  v11[5] = v6;
  v8 = objc_msgSend(v7, sel_valueWithCMTimeRange_, v11);
  v9 = objc_msgSend(v8, sel_description);
  sub_1D451A6EC();
  sub_1D42B722C();
  sub_1D42B7190();

  swift_bridgeObjectRelease();
  return v13;
}

id SNLKFSResult.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_1D42B7104();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D42AC1B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = 0;
    v3 = (uint64_t *)(a1 + 32);
    do
    {
      v5 = *v3++;
      v4 = v5;
      if ((v5 & ~v2) == 0)
        v4 = 0;
      v2 |= v4;
      --v1;
    }
    while (v1);
  }
  else
  {
    v2 = 0;
  }
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1D42AC200()
{
  uint64_t v0;
  uint64_t result;
  unsigned int v2;

  sub_1D4519A68();
  swift_allocObject();
  sub_1D4519A5C();
  sub_1D42B65F8();
  sub_1D4519A50();
  result = swift_release();
  if (!v0)
    return v2;
  return result;
}

uint64_t sub_1D42AC2B8()
{
  uint64_t v0;
  uint64_t result;
  unsigned int v2;

  sub_1D4519A68();
  swift_allocObject();
  sub_1D4519A5C();
  sub_1D42B6574();
  sub_1D4519A50();
  result = swift_release();
  if (!v0)
    return v2;
  return result;
}

uint64_t sub_1D42AC358()
{
  sub_1D4519A68();
  swift_allocObject();
  sub_1D4519A5C();
  sub_1D42B6218();
  sub_1D4519A50();
  return swift_release();
}

uint64_t sub_1D42AC3D8()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  sub_1D4519A68();
  swift_allocObject();
  sub_1D4519A5C();
  sub_1D42B5FA8();
  sub_1D4519A50();
  result = swift_release();
  if (!v0)
    return v2;
  return result;
}

uint64_t sub_1D42AC470()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  sub_1D4519A68();
  swift_allocObject();
  sub_1D4519A5C();
  sub_1D42B5EAC();
  sub_1D4519A50();
  result = swift_release();
  if (!v0)
    return v2;
  return result;
}

double sub_1D42AC508()
{
  uint64_t v0;
  double result;
  double v2;

  sub_1D4519A68();
  swift_allocObject();
  sub_1D4519A5C();
  sub_1D42B5994();
  sub_1D4519A50();
  swift_release();
  if (!v0)
    return v2;
  return result;
}

uint64_t sub_1D42AC5A8()
{
  sub_1D4519A68();
  swift_allocObject();
  sub_1D4519A5C();
  sub_1D42B57BC();
  sub_1D4519A50();
  return swift_release();
}

uint64_t sub_1D42AC628()
{
  sub_1D4519A68();
  swift_allocObject();
  sub_1D4519A5C();
  sub_1D42B56C0();
  sub_1D4519A50();
  return swift_release();
}

uint64_t sub_1D42AC6A8()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  sub_1D4519A68();
  swift_allocObject();
  sub_1D4519A5C();
  sub_1D42B554C();
  sub_1D4519A50();
  result = swift_release();
  if (!v0)
    return v2;
  return result;
}

uint64_t sub_1D42AC744()
{
  sub_1D4519A68();
  swift_allocObject();
  sub_1D4519A5C();
  sub_1D42B55C4();
  sub_1D4519A50();
  return swift_release();
}

uint64_t sub_1D42AC7C4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  int v13;
  id v14;
  uint64_t v15;
  __int128 v16;
  void *v17;
  id v18[2];
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v5 = (void *)objc_opt_self();
  sub_1D42B5528(a1, a1[3]);
  v18[0] = 0;
  v6 = objc_msgSend(v5, sel_dataWithPropertyList_format_options_error_, sub_1D451B814(), 100, 0, v18);
  swift_unknownObjectRelease();
  v7 = v18[0];
  if (v6)
  {
    v8 = sub_1D4519C54();
    v10 = v9;

    sub_1D4519A68();
    swift_allocObject();
    sub_1D4519A5C();
    sub_1D42B6670();
    sub_1D4519A50();
    swift_release();
    result = sub_1D42B5420(v8, v10);
    if (!v2)
    {
      v12 = v21;
      v13 = v22;
      v14 = v18[1];
      v15 = v20;
      v16 = v19;
      *(id *)a2 = v18[0];
      *(_QWORD *)(a2 + 8) = v14;
      *(_OWORD *)(a2 + 16) = v16;
      *(_QWORD *)(a2 + 32) = v15;
      *(_QWORD *)(a2 + 40) = v12;
      *(_DWORD *)(a2 + 48) = v13;
    }
  }
  else
  {
    v17 = v7;
    sub_1D4519AA4();

    return swift_willThrow();
  }
  return result;
}

id sub_1D42AC968(_QWORD *a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  id v12[2];

  v12[1] = *(id *)MEMORY[0x1E0C80C00];
  v3 = (void *)objc_opt_self();
  sub_1D42B5528(a1, a1[3]);
  v12[0] = 0;
  v4 = objc_msgSend(v3, sel_dataWithPropertyList_format_options_error_, sub_1D451B814(), 100, 0, v12);
  swift_unknownObjectRelease();
  v5 = v12[0];
  if (v4)
  {
    v6 = sub_1D4519C54();
    v8 = v7;

    v9 = sub_1D42AC200();
    if (!v1)
      v4 = (id)v9;
    sub_1D42B5420(v6, v8);
  }
  else
  {
    v10 = v5;
    sub_1D4519AA4();

    swift_willThrow();
  }
  return v4;
}

id sub_1D42ACAD0(_QWORD *a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  id v12[2];

  v12[1] = *(id *)MEMORY[0x1E0C80C00];
  v3 = (void *)objc_opt_self();
  sub_1D42B5528(a1, a1[3]);
  v12[0] = 0;
  v4 = objc_msgSend(v3, sel_dataWithPropertyList_format_options_error_, sub_1D451B814(), 100, 0, v12);
  swift_unknownObjectRelease();
  v5 = v12[0];
  if (v4)
  {
    v6 = sub_1D4519C54();
    v8 = v7;

    v9 = sub_1D42AC2B8();
    if (!v1)
      v4 = (id)v9;
    sub_1D42B5420(v6, v8);
  }
  else
  {
    v10 = v5;
    sub_1D4519AA4();

    swift_willThrow();
  }
  return v4;
}

uint64_t sub_1D42ACC24@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t result;
  char v12;
  __int128 v13;
  __int128 v14;
  void *v15;
  _OWORD v16[3];
  char v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v5 = (void *)objc_opt_self();
  sub_1D42B5528(a1, a1[3]);
  *(_QWORD *)&v16[0] = 0;
  v6 = objc_msgSend(v5, sel_dataWithPropertyList_format_options_error_, sub_1D451B814(), 100, 0, v16);
  swift_unknownObjectRelease();
  v7 = *(id *)&v16[0];
  if (v6)
  {
    v8 = sub_1D4519C54();
    v10 = v9;

    sub_1D4519A68();
    swift_allocObject();
    sub_1D4519A5C();
    sub_1D42B64FC();
    sub_1D4519A50();
    swift_release();
    result = sub_1D42B5420(v8, v10);
    if (!v2)
    {
      v12 = v17;
      v13 = v16[1];
      v14 = v16[2];
      *(_OWORD *)a2 = v16[0];
      *(_OWORD *)(a2 + 16) = v13;
      *(_OWORD *)(a2 + 32) = v14;
      *(_BYTE *)(a2 + 48) = v12;
    }
  }
  else
  {
    v15 = v7;
    sub_1D4519AA4();

    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1D42ACDB0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  id v13;
  uint64_t v14;
  __int128 v15;
  void *v16;
  id v17[2];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v5 = (void *)objc_opt_self();
  sub_1D42B5528(a1, a1[3]);
  v17[0] = 0;
  v6 = objc_msgSend(v5, sel_dataWithPropertyList_format_options_error_, sub_1D451B814(), 100, 0, v17);
  swift_unknownObjectRelease();
  v7 = v17[0];
  if (v6)
  {
    v8 = sub_1D4519C54();
    v10 = v9;

    sub_1D4519A68();
    swift_allocObject();
    sub_1D4519A5C();
    sub_1D42B63E0();
    sub_1D4519A50();
    swift_release();
    result = sub_1D42B5420(v8, v10);
    if (!v2)
    {
      v12 = v20;
      v13 = v17[1];
      v14 = v19;
      v15 = v18;
      *(id *)a2 = v17[0];
      *(_QWORD *)(a2 + 8) = v13;
      *(_OWORD *)(a2 + 16) = v15;
      *(_QWORD *)(a2 + 32) = v14;
      *(_QWORD *)(a2 + 40) = v12;
    }
  }
  else
  {
    v16 = v7;
    sub_1D4519AA4();

    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1D42ACF4C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t result;
  char v12;
  uint64_t v13;
  __int128 v14;
  void *v15;
  __int128 v16;
  char v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v5 = (void *)objc_opt_self();
  sub_1D42B5528(a1, a1[3]);
  *(_QWORD *)&v16 = 0;
  v6 = objc_msgSend(v5, sel_dataWithPropertyList_format_options_error_, sub_1D451B814(), 100, 0, &v16);
  swift_unknownObjectRelease();
  v7 = (id)v16;
  if (v6)
  {
    v8 = sub_1D4519C54();
    v10 = v9;

    sub_1D4519A68();
    swift_allocObject();
    sub_1D4519A5C();
    sub_1D42B6368();
    sub_1D4519A50();
    swift_release();
    result = sub_1D42B5420(v8, v10);
    if (!v2)
    {
      v12 = v17;
      v13 = v18;
      v14 = v19;
      *(_OWORD *)a2 = v16;
      *(_BYTE *)(a2 + 16) = v12;
      *(_QWORD *)(a2 + 24) = v13;
      *(_OWORD *)(a2 + 32) = v14;
    }
  }
  else
  {
    v15 = v7;
    sub_1D4519AA4();

    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1D42AD0E0@<X0>(_QWORD *a1@<X0>, id *a2@<X8>)
{
  uint64_t v2;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t result;
  void *v12;
  id v13[2];

  v13[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = (void *)objc_opt_self();
  sub_1D42B5528(a1, a1[3]);
  v13[0] = 0;
  v6 = objc_msgSend(v5, sel_dataWithPropertyList_format_options_error_, sub_1D451B814(), 100, 0, v13);
  swift_unknownObjectRelease();
  v7 = v13[0];
  if (v6)
  {
    v8 = sub_1D4519C54();
    v10 = v9;

    sub_1D4519A68();
    swift_allocObject();
    sub_1D4519A5C();
    sub_1D42B61A0();
    sub_1D4519A50();
    swift_release();
    result = sub_1D42B5420(v8, v10);
    if (!v2)
      *a2 = v13[0];
  }
  else
  {
    v12 = v7;
    sub_1D4519AA4();

    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1D42AD25C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  __int128 v18;
  void *v19;
  id v20[2];
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v5 = (void *)objc_opt_self();
  sub_1D42B5528(a1, a1[3]);
  v20[0] = 0;
  v6 = objc_msgSend(v5, sel_dataWithPropertyList_format_options_error_, sub_1D451B814(), 100, 0, v20);
  swift_unknownObjectRelease();
  v7 = v20[0];
  if (v6)
  {
    v8 = sub_1D4519C54();
    v10 = v9;

    sub_1D4519A68();
    swift_allocObject();
    sub_1D4519A5C();
    sub_1D42B6128();
    sub_1D4519A50();
    swift_release();
    result = sub_1D42B5420(v8, v10);
    if (!v2)
    {
      v12 = v23;
      v13 = v24;
      v14 = v25;
      v15 = v26;
      v16 = v20[1];
      v17 = v22;
      v18 = v21;
      *(id *)a2 = v20[0];
      *(_QWORD *)(a2 + 8) = v16;
      *(_OWORD *)(a2 + 16) = v18;
      *(_QWORD *)(a2 + 32) = v17;
      *(_QWORD *)(a2 + 40) = v12;
      *(_QWORD *)(a2 + 48) = v13;
      *(_QWORD *)(a2 + 56) = v14;
      *(_QWORD *)(a2 + 64) = v15;
    }
  }
  else
  {
    v19 = v7;
    sub_1D4519AA4();

    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1D42AD408@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  __int128 v17;
  void *v18;
  id v19[2];
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v5 = (void *)objc_opt_self();
  sub_1D42B5528(a1, a1[3]);
  v19[0] = 0;
  v6 = objc_msgSend(v5, sel_dataWithPropertyList_format_options_error_, sub_1D451B814(), 100, 0, v19);
  swift_unknownObjectRelease();
  v7 = v19[0];
  if (v6)
  {
    v8 = sub_1D4519C54();
    v10 = v9;

    sub_1D4519A68();
    swift_allocObject();
    sub_1D4519A5C();
    sub_1D42B6064();
    sub_1D4519A50();
    swift_release();
    result = sub_1D42B5420(v8, v10);
    if (!v2)
    {
      v12 = v22;
      v13 = v24;
      v14 = v23;
      v15 = v19[1];
      v16 = v21;
      v17 = v20;
      *(id *)a2 = v19[0];
      *(_QWORD *)(a2 + 8) = v15;
      *(_OWORD *)(a2 + 16) = v17;
      *(_QWORD *)(a2 + 32) = v16;
      *(_QWORD *)(a2 + 40) = v12;
      *(_QWORD *)(a2 + 48) = v14;
      *(_QWORD *)(a2 + 56) = v13;
    }
  }
  else
  {
    v18 = v7;
    sub_1D4519AA4();

    return swift_willThrow();
  }
  return result;
}

id sub_1D42AD5B4(_QWORD *a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  void *v8;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = (void *)objc_opt_self();
  sub_1D42B5528(a1, a1[3]);
  v10[0] = 0;
  v3 = objc_msgSend(v2, sel_dataWithPropertyList_format_options_error_, sub_1D451B814(), 100, 0, v10);
  swift_unknownObjectRelease();
  v4 = v10[0];
  if (v3)
  {
    v5 = sub_1D4519C54();
    v7 = v6;

    v3 = (id)sub_1D42AC3D8();
    sub_1D42B5420(v5, v7);
  }
  else
  {
    v8 = v4;
    sub_1D4519AA4();

    swift_willThrow();
  }
  return v3;
}

uint64_t sub_1D42AD6E0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  id v15;
  uint64_t v16;
  __int128 v17;
  void *v18;
  id v19[2];
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v5 = (void *)objc_opt_self();
  sub_1D42B5528(a1, a1[3]);
  v19[0] = 0;
  v6 = objc_msgSend(v5, sel_dataWithPropertyList_format_options_error_, sub_1D451B814(), 100, 0, v19);
  swift_unknownObjectRelease();
  v7 = v19[0];
  if (v6)
  {
    v8 = sub_1D4519C54();
    v10 = v9;

    sub_1D4519A68();
    swift_allocObject();
    sub_1D4519A5C();
    sub_1D42B5F30();
    sub_1D4519A50();
    swift_release();
    result = sub_1D42B5420(v8, v10);
    if (!v2)
    {
      v12 = v22;
      v13 = v24;
      v14 = v23;
      v15 = v19[1];
      v16 = v21;
      v17 = v20;
      *(id *)a2 = v19[0];
      *(_QWORD *)(a2 + 8) = v15;
      *(_OWORD *)(a2 + 16) = v17;
      *(_QWORD *)(a2 + 32) = v16;
      *(_QWORD *)(a2 + 40) = v12;
      *(_OWORD *)(a2 + 48) = v14;
      *(_QWORD *)(a2 + 64) = v13;
    }
  }
  else
  {
    v18 = v7;
    sub_1D4519AA4();

    return swift_willThrow();
  }
  return result;
}

id sub_1D42AD88C(_QWORD *a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  void *v8;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = (void *)objc_opt_self();
  sub_1D42B5528(a1, a1[3]);
  v10[0] = 0;
  v3 = objc_msgSend(v2, sel_dataWithPropertyList_format_options_error_, sub_1D451B814(), 100, 0, v10);
  swift_unknownObjectRelease();
  v4 = v10[0];
  if (v3)
  {
    v5 = sub_1D4519C54();
    v7 = v6;

    v3 = (id)sub_1D42AC470();
    sub_1D42B5420(v5, v7);
  }
  else
  {
    v8 = v4;
    sub_1D4519AA4();

    swift_willThrow();
  }
  return v3;
}

uint64_t sub_1D42AD9C8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  char v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  __int128 v17;
  void *v18;
  id v19[2];
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v5 = (void *)objc_opt_self();
  sub_1D42B5528(a1, a1[3]);
  v19[0] = 0;
  v6 = objc_msgSend(v5, sel_dataWithPropertyList_format_options_error_, sub_1D451B814(), 100, 0, v19);
  swift_unknownObjectRelease();
  v7 = v19[0];
  if (v6)
  {
    v8 = sub_1D4519C54();
    v10 = v9;

    sub_1D4519A68();
    swift_allocObject();
    sub_1D4519A5C();
    sub_1D42B5E34();
    sub_1D4519A50();
    swift_release();
    result = sub_1D42B5420(v8, v10);
    if (!v2)
    {
      v12 = v22;
      v13 = v23;
      v14 = v24;
      v15 = v19[1];
      v16 = v21;
      v17 = v20;
      *(id *)a2 = v19[0];
      *(_QWORD *)(a2 + 8) = v15;
      *(_OWORD *)(a2 + 16) = v17;
      *(_QWORD *)(a2 + 32) = v16;
      *(_QWORD *)(a2 + 40) = v12;
      *(_BYTE *)(a2 + 48) = v13;
      *(_QWORD *)(a2 + 56) = v14;
    }
  }
  else
  {
    v18 = v7;
    sub_1D4519AA4();

    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1D42ADB74@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t result;
  __int128 v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  __int128 v16;
  void *v17;
  id v18[2];
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v5 = (void *)objc_opt_self();
  sub_1D42B5528(a1, a1[3]);
  v18[0] = 0;
  v6 = objc_msgSend(v5, sel_dataWithPropertyList_format_options_error_, sub_1D451B814(), 100, 0, v18);
  swift_unknownObjectRelease();
  v7 = v18[0];
  if (v6)
  {
    v8 = sub_1D4519C54();
    v10 = v9;

    sub_1D4519A68();
    swift_allocObject();
    sub_1D4519A5C();
    sub_1D42B5DBC();
    sub_1D4519A50();
    swift_release();
    result = sub_1D42B5420(v8, v10);
    if (!v2)
    {
      v12 = v21;
      v13 = v22;
      v14 = v18[1];
      v15 = v20;
      v16 = v19;
      *(id *)a2 = v18[0];
      *(_QWORD *)(a2 + 8) = v14;
      *(_OWORD *)(a2 + 16) = v16;
      *(_QWORD *)(a2 + 32) = v15;
      *(_OWORD *)(a2 + 40) = v12;
      *(_QWORD *)(a2 + 56) = v13;
    }
  }
  else
  {
    v17 = v7;
    sub_1D4519AA4();

    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1D42ADD18@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t result;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  void *v22;
  __int128 v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  char v32;
  uint64_t v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v5 = (void *)objc_opt_self();
  sub_1D42B5528(a1, a1[3]);
  *(_QWORD *)&v23 = 0;
  v6 = objc_msgSend(v5, sel_dataWithPropertyList_format_options_error_, sub_1D451B814(), 100, 0, &v23);
  swift_unknownObjectRelease();
  v7 = (id)v23;
  if (v6)
  {
    v8 = sub_1D4519C54();
    v10 = v9;

    sub_1D4519A68();
    swift_allocObject();
    sub_1D4519A5C();
    sub_1D42B5D00();
    sub_1D4519A50();
    swift_release();
    result = sub_1D42B5420(v8, v10);
    if (!v2)
    {
      v12 = v24;
      v13 = v25;
      v14 = v27;
      v15 = v28;
      v16 = v32;
      v17 = v33;
      v18 = v26;
      v19 = v29;
      v20 = v30;
      v21 = v31;
      *(_OWORD *)a2 = v23;
      *(_BYTE *)(a2 + 16) = v12;
      *(_QWORD *)(a2 + 24) = v13;
      *(_QWORD *)(a2 + 32) = v18;
      *(_QWORD *)(a2 + 40) = v14;
      *(_QWORD *)(a2 + 48) = v15;
      *(_OWORD *)(a2 + 56) = v19;
      *(_OWORD *)(a2 + 72) = v20;
      *(_OWORD *)(a2 + 88) = v21;
      *(_BYTE *)(a2 + 104) = v16;
      *(_QWORD *)(a2 + 112) = v17;
    }
  }
  else
  {
    v22 = v7;
    sub_1D4519AA4();

    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1D42ADEE4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  char v21;
  __int128 v22;
  void *v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v5 = (void *)objc_opt_self();
  sub_1D42B5528(a1, a1[3]);
  *(_QWORD *)&v24 = 0;
  v6 = objc_msgSend(v5, sel_dataWithPropertyList_format_options_error_, sub_1D451B814(), 100, 0, &v24);
  swift_unknownObjectRelease();
  v7 = (id)v24;
  if (v6)
  {
    v8 = sub_1D4519C54();
    v10 = v9;

    sub_1D4519A68();
    swift_allocObject();
    sub_1D4519A5C();
    sub_1D42B5B80();
    sub_1D4519A50();
    swift_release();
    result = sub_1D42B5420(v8, v10);
    if (!v2)
    {
      v12 = v25;
      v13 = v26;
      v14 = v28;
      v15 = v29;
      v16 = v30;
      v17 = v31;
      v18 = v32;
      v19 = v33;
      v20 = v34;
      v21 = v35;
      v22 = v27;
      *(_OWORD *)a2 = v24;
      *(_QWORD *)(a2 + 16) = v12;
      *(_QWORD *)(a2 + 24) = v13;
      *(_OWORD *)(a2 + 32) = v22;
      *(_BYTE *)(a2 + 48) = v14;
      *(_BYTE *)(a2 + 49) = v15;
      *(_BYTE *)(a2 + 50) = v16;
      *(_BYTE *)(a2 + 51) = v17;
      *(_BYTE *)(a2 + 52) = v18;
      *(_BYTE *)(a2 + 53) = v19;
      *(_QWORD *)(a2 + 56) = v20;
      *(_BYTE *)(a2 + 64) = v21;
    }
  }
  else
  {
    v23 = v7;
    sub_1D4519AA4();

    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1D42AE0B0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t result;
  char v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  __int128 v18;
  char v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v5 = (void *)objc_opt_self();
  sub_1D42B5528(a1, a1[3]);
  *(_QWORD *)&v18 = 0;
  v6 = objc_msgSend(v5, sel_dataWithPropertyList_format_options_error_, sub_1D451B814(), 100, 0, &v18);
  swift_unknownObjectRelease();
  v7 = (id)v18;
  if (v6)
  {
    v8 = sub_1D4519C54();
    v10 = v9;

    sub_1D4519A68();
    swift_allocObject();
    sub_1D4519A5C();
    sub_1D42B5A90();
    sub_1D4519A50();
    swift_release();
    result = sub_1D42B5420(v8, v10);
    if (!v2)
    {
      v12 = v19;
      v13 = v20;
      v14 = v21;
      v15 = v23;
      v16 = v22;
      *(_OWORD *)a2 = v18;
      *(_BYTE *)(a2 + 16) = v12;
      *(_DWORD *)(a2 + 20) = v13;
      *(_QWORD *)(a2 + 24) = v14;
      *(_QWORD *)(a2 + 32) = v16;
      *(_QWORD *)(a2 + 40) = v15;
    }
  }
  else
  {
    v17 = v7;
    sub_1D4519AA4();

    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1D42AE254@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  __int128 v16;
  void *v17;
  id v18[2];
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v5 = (void *)objc_opt_self();
  sub_1D42B5528(a1, a1[3]);
  v18[0] = 0;
  v6 = objc_msgSend(v5, sel_dataWithPropertyList_format_options_error_, sub_1D451B814(), 100, 0, v18);
  swift_unknownObjectRelease();
  v7 = v18[0];
  if (v6)
  {
    v8 = sub_1D4519C54();
    v10 = v9;

    sub_1D4519A68();
    swift_allocObject();
    sub_1D4519A5C();
    sub_1D42B5A18();
    sub_1D4519A50();
    swift_release();
    result = sub_1D42B5420(v8, v10);
    if (!v2)
    {
      v12 = v21;
      v13 = v22;
      v14 = v18[1];
      v15 = v20;
      v16 = v19;
      *(id *)a2 = v18[0];
      *(_QWORD *)(a2 + 8) = v14;
      *(_OWORD *)(a2 + 16) = v16;
      *(_QWORD *)(a2 + 32) = v15;
      *(_QWORD *)(a2 + 40) = v12;
      *(_QWORD *)(a2 + 48) = v13;
    }
  }
  else
  {
    v17 = v7;
    sub_1D4519AA4();

    return swift_willThrow();
  }
  return result;
}

double sub_1D42AE3F8(_QWORD *a1)
{
  uint64_t v1;
  double v2;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  double v10;
  void *v11;
  id v13[2];

  v13[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = (void *)objc_opt_self();
  sub_1D42B5528(a1, a1[3]);
  v13[0] = 0;
  v5 = objc_msgSend(v4, sel_dataWithPropertyList_format_options_error_, sub_1D451B814(), 100, 0, v13);
  swift_unknownObjectRelease();
  v6 = v13[0];
  if (v5)
  {
    v7 = sub_1D4519C54();
    v9 = v8;

    v10 = sub_1D42AC508();
    if (!v1)
      v2 = v10;
    sub_1D42B5420(v7, v9);
  }
  else
  {
    v11 = v6;
    sub_1D4519AA4();

    swift_willThrow();
  }
  return v2;
}

uint64_t sub_1D42AE55C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  id v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  void *v17;
  id v18[2];
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v5 = (void *)objc_opt_self();
  sub_1D42B5528(a1, a1[3]);
  v18[0] = 0;
  v6 = objc_msgSend(v5, sel_dataWithPropertyList_format_options_error_, sub_1D451B814(), 100, 0, v18);
  swift_unknownObjectRelease();
  v7 = v18[0];
  if (v6)
  {
    v8 = sub_1D4519C54();
    v10 = v9;

    sub_1D4519A68();
    swift_allocObject();
    sub_1D4519A5C();
    sub_1D42B58FC();
    sub_1D4519A50();
    swift_release();
    result = sub_1D42B5420(v8, v10);
    if (!v2)
    {
      v12 = v22;
      v13 = v18[1];
      v14 = v20;
      v15 = v19;
      v16 = v21;
      *(id *)a2 = v18[0];
      *(_QWORD *)(a2 + 8) = v13;
      *(_OWORD *)(a2 + 16) = v15;
      *(_QWORD *)(a2 + 32) = v14;
      *(_OWORD *)(a2 + 40) = v16;
      *(_QWORD *)(a2 + 56) = v12;
    }
  }
  else
  {
    v17 = v7;
    sub_1D4519AA4();

    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1D42AE700@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  __int128 v13;
  id v14;
  uint64_t v15;
  __int128 v16;
  void *v17;
  id v18[2];
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v5 = (void *)objc_opt_self();
  sub_1D42B5528(a1, a1[3]);
  v18[0] = 0;
  v6 = objc_msgSend(v5, sel_dataWithPropertyList_format_options_error_, sub_1D451B814(), 100, 0, v18);
  swift_unknownObjectRelease();
  v7 = v18[0];
  if (v6)
  {
    v8 = sub_1D4519C54();
    v10 = v9;

    sub_1D4519A68();
    swift_allocObject();
    sub_1D4519A5C();
    sub_1D42B5840();
    sub_1D4519A50();
    swift_release();
    result = sub_1D42B5420(v8, v10);
    if (!v2)
    {
      v12 = v21;
      v13 = v22;
      v14 = v18[1];
      v15 = v20;
      v16 = v19;
      *(id *)a2 = v18[0];
      *(_QWORD *)(a2 + 8) = v14;
      *(_OWORD *)(a2 + 16) = v16;
      *(_QWORD *)(a2 + 32) = v15;
      *(_QWORD *)(a2 + 40) = v12;
      *(_OWORD *)(a2 + 48) = v13;
    }
  }
  else
  {
    v17 = v7;
    sub_1D4519AA4();

    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1D42AE8A4(_QWORD *a1, void (*a2)(uint64_t, unint64_t))
{
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void *v11;
  id v12[2];

  v12[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = (void *)objc_opt_self();
  sub_1D42B5528(a1, a1[3]);
  v12[0] = 0;
  v5 = objc_msgSend(v4, sel_dataWithPropertyList_format_options_error_, sub_1D451B814(), 100, 0, v12);
  swift_unknownObjectRelease();
  v6 = v12[0];
  if (v5)
  {
    v7 = sub_1D4519C54();
    v9 = v8;

    a2(v7, v9);
    return sub_1D42B5420(v7, v9);
  }
  else
  {
    v11 = v6;
    sub_1D4519AA4();

    return sub_1D42B7124();
  }
}

uint64_t sub_1D42AE9CC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  id v13;
  uint64_t v14;
  __int128 v15;
  void *v16;
  id v17[2];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v5 = (void *)objc_opt_self();
  sub_1D42B5528(a1, a1[3]);
  v17[0] = 0;
  v6 = objc_msgSend(v5, sel_dataWithPropertyList_format_options_error_, sub_1D451B814(), 100, 0, v17);
  swift_unknownObjectRelease();
  v7 = v17[0];
  if (v6)
  {
    v8 = sub_1D4519C54();
    v10 = v9;

    sub_1D4519A68();
    swift_allocObject();
    sub_1D4519A5C();
    sub_1D42B5744();
    sub_1D4519A50();
    swift_release();
    result = sub_1D42B5420(v8, v10);
    if (!v2)
    {
      v12 = v20;
      v13 = v17[1];
      v14 = v19;
      v15 = v18;
      *(id *)a2 = v17[0];
      *(_QWORD *)(a2 + 8) = v13;
      *(_OWORD *)(a2 + 16) = v15;
      *(_QWORD *)(a2 + 32) = v14;
      *(_QWORD *)(a2 + 40) = v12;
    }
  }
  else
  {
    v16 = v7;
    sub_1D4519AA4();

    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1D42AEB68@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  void *v20;
  id v21[2];
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v5 = (void *)objc_opt_self();
  sub_1D42B5528(a1, a1[3]);
  v21[0] = 0;
  v6 = objc_msgSend(v5, sel_dataWithPropertyList_format_options_error_, sub_1D451B814(), 100, 0, v21);
  swift_unknownObjectRelease();
  v7 = v21[0];
  if (v6)
  {
    v8 = sub_1D4519C54();
    v10 = v9;

    sub_1D4519A68();
    swift_allocObject();
    sub_1D4519A5C();
    sub_1D42B5648();
    sub_1D4519A50();
    swift_release();
    result = sub_1D42B5420(v8, v10);
    if (!v2)
    {
      v12 = v24;
      v13 = v25;
      v14 = v26;
      v15 = v21[1];
      v16 = v23;
      v17 = v27;
      v18 = v22;
      v19 = v28;
      *(id *)a2 = v21[0];
      *(_QWORD *)(a2 + 8) = v15;
      *(_OWORD *)(a2 + 16) = v18;
      *(_QWORD *)(a2 + 32) = v16;
      *(_QWORD *)(a2 + 40) = v12;
      *(_QWORD *)(a2 + 48) = v13;
      *(_QWORD *)(a2 + 56) = v14;
      *(_QWORD *)(a2 + 64) = v17;
      *(_OWORD *)(a2 + 72) = v19;
    }
  }
  else
  {
    v20 = v7;
    sub_1D4519AA4();

    return swift_willThrow();
  }
  return result;
}

id sub_1D42AED24(_QWORD *a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  id v12[2];

  v12[1] = *(id *)MEMORY[0x1E0C80C00];
  v3 = (void *)objc_opt_self();
  sub_1D42B5528(a1, a1[3]);
  v12[0] = 0;
  v4 = objc_msgSend(v3, sel_dataWithPropertyList_format_options_error_, sub_1D451B814(), 100, 0, v12);
  swift_unknownObjectRelease();
  v5 = v12[0];
  if (v4)
  {
    v6 = sub_1D4519C54();
    v8 = v7;

    v9 = sub_1D42AC6A8();
    if (!v1)
      v4 = (id)v9;
    sub_1D42B5420(v6, v8);
  }
  else
  {
    v10 = v5;
    sub_1D4519AA4();

    swift_willThrow();
  }
  return v4;
}

uint64_t sub_1D42AEE88(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  void *v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  _BYTE v22[32];
  _OWORD v23[2];
  _QWORD v24[5];
  _OWORD v25[2];
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v24[3] = &unk_1E979B538;
  v24[4] = sub_1D42B6634();
  v7 = swift_allocObject();
  v24[0] = v7;
  v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v7 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v7 + 32) = v8;
  *(_OWORD *)(v7 + 48) = *(_OWORD *)(a1 + 32);
  *(_DWORD *)(v7 + 64) = *(_DWORD *)(a1 + 48);
  sub_1D4519A8C();
  swift_allocObject();
  sub_1D4519A80();
  sub_1D42B5528(v24, (uint64_t)&unk_1E979B538);
  v9 = sub_1D4519A74();
  v11 = v10;
  swift_release();
  if (v4)
    goto LABEL_2;
  v14 = (void *)objc_opt_self();
  v15 = (void *)sub_1D4519C3C();
  v21 = 0;
  v16 = objc_msgSend(v14, sel_propertyListWithData_options_format_error_, v15, 0, 0, &v21);

  v17 = v21;
  if (!v16)
  {
    v20 = v17;
    sub_1D4519AA4();

    swift_willThrow();
    sub_1D42B5420(v9, v11);
LABEL_2:
    v12 = v24;
    return sub_1D42B5400((uint64_t)v12);
  }
  sub_1D451B208();
  swift_unknownObjectRelease();
  sub_1D441FC00((uint64_t)v22, v23);
  sub_1D42B5464((uint64_t)v22);
  sub_1D42B5420(v9, v11);
  sub_1D42B293C(v23, v25);
  sub_1D42B5400((uint64_t)v24);
  v18 = (void *)sub_1D42FAD24((uint64_t)v25);
  v19 = (void *)sub_1D451A6C8();
  objc_msgSend(a4, sel_encodeObject_forKey_, v18, v19);

  v12 = v25;
  return sub_1D42B5400((uint64_t)v12);
}

uint64_t sub_1D42AF0D8(int a1, __int16 a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v9;
  void *v10;
  void *v11;
  _QWORD *v12;
  id v14;
  id v15;
  void *v16;
  _BYTE v17[32];
  _OWORD v18[2];
  _QWORD v19[5];
  _OWORD v20[2];
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v19[3] = &type metadata for NullRequest;
  v19[4] = sub_1D42B65B0();
  v9 = sub_1D42B6F40();
  v19[0] = v9;
  *(double *)(v9 + 16) = a3;
  *(_DWORD *)(v9 + 24) = a1;
  *(double *)(v9 + 32) = a4;
  *(_BYTE *)(v9 + 40) = a2 & 1;
  *(_BYTE *)(v9 + 41) = HIBYTE(a2) & 1;
  sub_1D42B6E7C();
  sub_1D42B6D94();
  sub_1D42B705C();
  sub_1D42B5528(v19, (uint64_t)&type metadata for NullRequest);
  sub_1D42B6F38();
  v11 = v10;
  swift_release();
  if (v4)
    goto LABEL_2;
  objc_opt_self();
  sub_1D42B6D38();
  v14 = sub_1D42B6CFC(&type metadata for NullRequest, sel_propertyListWithData_options_format_error_);
  sub_1D42B6E74();
  v15 = 0;
  if (!&type metadata for NullRequest)
  {
    sub_1D42B6E84();
    sub_1D42B6F30();
    sub_1D42B6F54();
    sub_1D42B6CCC();
LABEL_2:
    v12 = v19;
    return sub_1D42B5400((uint64_t)v12);
  }
  sub_1D451B208();
  sub_1D42B6E6C();
  sub_1D441FC00((uint64_t)v17, v18);
  sub_1D42B5464((uint64_t)v17);
  sub_1D42B6CCC();
  sub_1D42B293C(v18, v20);
  sub_1D42B5400((uint64_t)v19);
  sub_1D42B6F5C((uint64_t)v20);
  v16 = (void *)sub_1D42B6D28();
  sub_1D42B6D48((uint64_t)v16, sel_encodeObject_forKey_);

  v12 = v20;
  return sub_1D42B5400((uint64_t)v12);
}

uint64_t sub_1D42AF2D8(int a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v8;
  void *v9;
  double *v10;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  void *v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  double v50;
  int v51;
  double v52;
  ValueMetadata *v53;
  _OWORD v54[2];
  uint64_t v55;

  v55 = *MEMORY[0x1E0C80C00];
  v53 = &type metadata for DetectSignalThresholdRequest;
  sub_1D42B6538();
  sub_1D42B6F64();
  v50 = a2;
  v51 = a1;
  v52 = a3;
  sub_1D42B6E7C();
  sub_1D42B6D94();
  sub_1D42B705C();
  sub_1D42B5528(&v50, (uint64_t)&type metadata for DetectSignalThresholdRequest);
  sub_1D4519A74();
  v9 = v8;
  sub_1D42B6F8C();
  if (v3)
    goto LABEL_2;
  objc_opt_self();
  sub_1D42B7008();
  sub_1D42B6ECC();
  v19 = sub_1D42B6C58(v12, sel_propertyListWithData_options_format_error_, v13, v14, v15, v16, v17, v18, v39, v42);
  sub_1D42B6E74();
  sub_1D42B6E8C(v20, v21, v22, v23, v24, v25, v26, v27, v40, v43);
  if (!v4)
  {
    sub_1D42B6E84();
    sub_1D42B71D4();
    sub_1D42B7124();
    sub_1D42B6ED8();
LABEL_2:
    v10 = &v50;
    return sub_1D42B5400((uint64_t)v10);
  }
  sub_1D42B6DA0();
  v28 = sub_1D42B6E6C();
  v36 = sub_1D42B7038(v28, v29, v30, v31, v32, v33, v34, v35, v41, v44, v45, v46, v47, v48, v49);
  sub_1D42B6E54((uint64_t)v36, v37);
  sub_1D42B6ED8();
  sub_1D42B293C(&v49, v54);
  sub_1D42B5400((uint64_t)&v50);
  sub_1D42B71DC((uint64_t)v54);
  v38 = (void *)sub_1D42B7018();
  sub_1D42B7028((uint64_t)v38, sel_encodeObject_forKey_);

  v10 = (double *)v54;
  return sub_1D42B5400((uint64_t)v10);
}

#error "1D42AF544: call analysis failed (funcsize=82)"

void sub_1D42AF5CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D42B0364(a1, a2, a3, a4, &type metadata for NullResult, sub_1D42B63A4);
  sub_1D42B6F28();
}

#error "1D42AF6EC: call analysis failed (funcsize=83)"

void sub_1D42AF774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D42B0A04(a1, a2, a3, &type metadata for EstimateSpeechDistanceRequest, sub_1D42B61DC);
  sub_1D42B6F28();
}

void sub_1D42AF7C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D42AFA18(a1, a2, a3, a4, &unk_1E97A4AB0, sub_1D42B6164);
  sub_1D42B6F28();
}

#error "1D42AF868: call analysis failed (funcsize=79)"

void sub_1D42AF960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D42AFEE8(a1, a2, a3, a4, &unk_1E97A2BF0, sub_1D42B5FE4, &unk_1E97B3DC0, sub_1D42B603C);
  sub_1D42B6F28();
}

void sub_1D42AF9C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D42AFA18(a1, a2, a3, a4, &type metadata for ExceptionRequest, sub_1D42B5F6C);
  sub_1D42B6F28();
}

#error "1D42AFA50: call analysis failed (funcsize=84)"

#error "1D42AFBB4: call analysis failed (funcsize=77)"

#error "1D42AFD9C: call analysis failed (funcsize=98)"

void sub_1D42AFE30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D42B0870(a1, a2, a3, a4, &unk_1E97A4C18, sub_1D42B5DF8);
  sub_1D42B6F28();
}

void sub_1D42AFE84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D42AFEE8(a1, a2, a3, a4, &unk_1E97A98C0, sub_1D42B5D3C, &unk_1E97B3D70, sub_1D42B5D94);
  sub_1D42B6F28();
}

#error "1D42AFFE8: call analysis failed (funcsize=100)"

#error "1D42B013C: call analysis failed (funcsize=81)"

#error "1D42B0288: call analysis failed (funcsize=81)"

void sub_1D42B0310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D42B0364(a1, a2, a3, a4, &unk_1E97A8D88, sub_1D42B5A54);
  sub_1D42B6F28();
}

#error "1D42B038C: call analysis failed (funcsize=79)"

#error "1D42B0570: call analysis failed (funcsize=83)"

uint64_t sub_1D42B05F8(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  void *v30;
  _QWORD v31[10];

  v31[9] = *MEMORY[0x1E0C80C00];
  v31[3] = &type metadata for SoundActionsCommand;
  v31[4] = sub_1D42B5938();
  v8 = sub_1D42B6F40();
  v31[0] = v8;
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = a3;
  *(double *)(v8 + 40) = a4;
  sub_1D42B6E7C();
  sub_1D42B6D94();
  swift_bridgeObjectRetain();
  v9 = sub_1D4519A80();
  sub_1D42B5528(v31, (uint64_t)&type metadata for SoundActionsCommand);
  sub_1D42B6F38();
  sub_1D42B70F0();
  if (!v9)
  {
    objc_opt_self();
    sub_1D42B6D38();
    sub_1D42B6ECC();
    v18 = sub_1D42B6C58(v11, sel_propertyListWithData_options_format_error_, v12, v13, v14, v15, v16, v17, v27, v29);
    sub_1D42B6E74();
    sub_1D42B6E8C(v19, v20, v21, v22, v23, v24, v25, v26, v28, v30);
    sub_1D42B6E84();
    sub_1D42B6F30();
    sub_1D42B6F54();
    sub_1D42B6CCC();
  }
  return sub_1D42B5400((uint64_t)v31);
}

void sub_1D42B07B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D42AFEE8(a1, a2, a3, a4, &type metadata for FeaturePrint, sub_1D42B587C, &unk_1E97B3CA8, sub_1D42B58D4);
  sub_1D42B6F28();
}

void sub_1D42B081C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D42B0870(a1, a2, a3, a4, &type metadata for AudioOffsetResult, sub_1D42B57F8);
  sub_1D42B6F28();
}

#error "1D42B0898: call analysis failed (funcsize=79)"

void sub_1D42B09B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D42B0A04(a1, a2, a3, &type metadata for EstimateAudioOffsetRequest, sub_1D42B5780);
  sub_1D42B6F28();
}

#error "1D42B0AC0: call analysis failed (funcsize=84)"

void sub_1D42B0B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D42B0364(a1, a2, a3, a4, &type metadata for SignalThresholdResult, sub_1D42B56FC);
  sub_1D42B6F28();
}

void sub_1D42B0BA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D42B0A04(a1, a2, a3, &unk_1E979B3D8, sub_1D42B5684);
  sub_1D42B6F28();
}

#error "1D42B0CB8: call analysis failed (funcsize=79)"

#error "1D42B0E84: call analysis failed (funcsize=117)"

void sub_1D42B0F1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D42B0A04(a1, a2, a3, &unk_1E97A7FD8, sub_1D42B5588);
  sub_1D42B6F28();
}

uint64_t sub_1D42B0F70@<X0>(void *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  int v10;
  _BYTE *v11;
  _QWORD v12[4];
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  _BYTE v18[32];

  v5 = (void *)sub_1D451A6C8();
  v6 = objc_msgSend(a1, sel_decodePropertyListForKey_, v5);

  if (v6)
  {
    sub_1D451B208();
    swift_unknownObjectRelease();
  }
  else
  {
    v13 = 0u;
    v14 = 0u;
  }
  sub_1D42B54A4((uint64_t)&v13, (uint64_t)v18);
  sub_1D42B28B4((uint64_t)v18, (uint64_t)&v13);
  if (!*((_QWORD *)&v14 + 1))
  {
    sub_1D42B5464((uint64_t)&v13);
    goto LABEL_9;
  }
  v7 = sub_1D42B28FC((uint64_t *)&unk_1EFE403D0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    sub_1D42B54EC();
    swift_allocError();
    *v11 = 2;
    swift_willThrow();
    return sub_1D42B5464((uint64_t)v18);
  }
  v12[3] = v7;
  sub_1D42AC7C4(v12, (uint64_t)&v13);
  sub_1D42B5464((uint64_t)v18);
  result = sub_1D42B5400((uint64_t)v12);
  if (!v2)
  {
    v9 = v16;
    v10 = v17;
    *(_OWORD *)a2 = v13;
    *(_OWORD *)(a2 + 16) = v14;
    *(_QWORD *)(a2 + 32) = v15;
    *(_QWORD *)(a2 + 40) = v9;
    *(_DWORD *)(a2 + 48) = v10;
  }
  return result;
}

uint64_t sub_1D42B10F4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;

  v1 = sub_1D42B6FFC();
  v2 = sub_1D42B6FD8(v1, sel_decodePropertyListForKey_);
  sub_1D42B70A0();
  if (v0)
  {
    sub_1D42B6FF0();
    v3 = sub_1D42B70A8();
  }
  else
  {
    sub_1D42B7118();
  }
  v11 = sub_1D42B6FCC(v3, v4, v5, v6, v7, v8, v9, v10, v47, v50, v52, v54, v57);
  v19 = sub_1D42B6FE4(v11, v12, v13, v14, v15, v16, v17, v18, v48, v51, v53, v55, v58);
  if (!v56)
  {
    sub_1D42B7098(v19, v20, v21, v22, v23, v24, v25, v26, v49);
    goto LABEL_8;
  }
  sub_1D42B28FC((uint64_t *)&unk_1EFE403D0);
  if ((sub_1D42B6E2C() & 1) == 0)
  {
LABEL_8:
    sub_1D42B54EC();
    v40 = sub_1D42B6D0C();
    v42 = sub_1D42B6C70(v40, v41);
    sub_1D42B6DC4(v42, v43, v44, v45);
    return sub_1D42B7218();
  }
  sub_1D42B6EE4();
  v28 = sub_1D42AC968(v27);
  v32 = sub_1D42B6DC4((uint64_t)v28, v29, v30, v31);
  sub_1D42B6E10(v32, v33, v34, v35, v36, v37, v38, v39, v49);
  return sub_1D42B7218();
}

uint64_t sub_1D42B1204()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;

  v1 = sub_1D42B6FFC();
  v2 = sub_1D42B6FD8(v1, sel_decodePropertyListForKey_);
  sub_1D42B70A0();
  if (v0)
  {
    sub_1D42B6FF0();
    v3 = sub_1D42B70A8();
  }
  else
  {
    sub_1D42B7118();
  }
  v11 = sub_1D42B6FCC(v3, v4, v5, v6, v7, v8, v9, v10, v47, v50, v52, v54, v57);
  v19 = sub_1D42B6FE4(v11, v12, v13, v14, v15, v16, v17, v18, v48, v51, v53, v55, v58);
  if (!v56)
  {
    sub_1D42B7098(v19, v20, v21, v22, v23, v24, v25, v26, v49);
    goto LABEL_8;
  }
  sub_1D42B28FC((uint64_t *)&unk_1EFE403D0);
  if ((sub_1D42B6E2C() & 1) == 0)
  {
LABEL_8:
    sub_1D42B54EC();
    v40 = sub_1D42B6D0C();
    v42 = sub_1D42B6C70(v40, v41);
    sub_1D42B6DC4(v42, v43, v44, v45);
    return sub_1D42B7218();
  }
  sub_1D42B6EE4();
  v28 = sub_1D42ACAD0(v27);
  v32 = sub_1D42B6DC4((uint64_t)v28, v29, v30, v31);
  sub_1D42B6E10(v32, v33, v34, v35, v36, v37, v38, v39, v49);
  return sub_1D42B7218();
}

void sub_1D42B1308()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  char v34;

  v3 = sub_1D42B6D18();
  v4 = sub_1D42B6DB8(v3, sel_decodePropertyListForKey_);
  sub_1D42B6EBC();
  if (v2)
  {
    sub_1D42B6DE0();
    v5 = sub_1D42B6EC4();
  }
  else
  {
    v9 = sub_1D42B6F48();
  }
  v10 = sub_1D42B6DEC(v5, v6, v7, v8, v9);
  v14 = sub_1D42B6DD4(v10, v11, v12, v13);
  if (!*((_QWORD *)&v32 + 1))
  {
    sub_1D42B6DC4(v14, v15, v16, v17);
    goto LABEL_9;
  }
  sub_1D42B28FC((uint64_t *)&unk_1EFE403D0);
  if ((sub_1D42B6C80() & 1) == 0)
  {
LABEL_9:
    sub_1D42B54EC();
    v28 = sub_1D42B6D0C();
    sub_1D42B6C70(v28, v29);
    sub_1D42B6DCC();
    goto LABEL_10;
  }
  sub_1D42B6C98();
  sub_1D42ACC24(v18, v19);
  v20 = sub_1D42B6DCC();
  sub_1D42B6E10(v20, v21, v22, v23, v24, v25, v26, v27, v30);
  if (!v1)
  {
    *(_OWORD *)v0 = v31;
    *(_OWORD *)(v0 + 16) = v32;
    *(_OWORD *)(v0 + 32) = v33;
    *(_BYTE *)(v0 + 48) = v34;
  }
LABEL_10:
  sub_1D42B6E5C();
}

void sub_1D42B13E4(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1D42B235C(a1, a2, a3, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1D42ACDB0);
}

void sub_1D42B1400()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  __int128 v31;
  char v32;
  uint64_t v33;
  __int128 v34;

  v3 = sub_1D42B6D18();
  v4 = sub_1D42B6DB8(v3, sel_decodePropertyListForKey_);
  sub_1D42B6EBC();
  if (v2)
  {
    sub_1D42B6DE0();
    v5 = sub_1D42B6EC4();
  }
  else
  {
    v9 = sub_1D42B6F48();
  }
  v10 = sub_1D42B6DEC(v5, v6, v7, v8, v9);
  v14 = sub_1D42B6DD4(v10, v11, v12, v13);
  if (!v33)
  {
    sub_1D42B6DC4(v14, v15, v16, v17);
    goto LABEL_9;
  }
  sub_1D42B28FC((uint64_t *)&unk_1EFE403D0);
  if ((sub_1D42B6C80() & 1) == 0)
  {
LABEL_9:
    sub_1D42B54EC();
    v28 = sub_1D42B6D0C();
    sub_1D42B6C70(v28, v29);
    sub_1D42B6DCC();
    goto LABEL_10;
  }
  sub_1D42B6C98();
  sub_1D42ACF4C(v18, v19);
  v20 = sub_1D42B6DCC();
  sub_1D42B6E10(v20, v21, v22, v23, v24, v25, v26, v27, v30);
  if (!v1)
  {
    *(_OWORD *)v0 = v31;
    *(_BYTE *)(v0 + 16) = v32;
    *(_QWORD *)(v0 + 24) = v33;
    *(_OWORD *)(v0 + 32) = v34;
  }
LABEL_10:
  sub_1D42B7170();
}

void sub_1D42B14E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D42B26E4(a1, a2, a3, (void (*)(uint64_t, unint64_t))sub_1D42AC358);
}

void sub_1D42B1500()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  __int128 v27;
  __int128 v28;

  v3 = sub_1D42B6D18();
  v4 = sub_1D42B6DB8(v3, sel_decodePropertyListForKey_);
  sub_1D42B6EBC();
  if (v2)
  {
    sub_1D42B7250();
    v5 = sub_1D42B6EC4();
  }
  else
  {
    v27 = 0u;
    v28 = 0u;
  }
  v7 = sub_1D42B7244(v5, v6);
  v9 = sub_1D42B720C(v7, v8);
  if (!*((_QWORD *)&v28 + 1))
  {
    sub_1D42B6E54(v9, v10);
    goto LABEL_9;
  }
  v11 = sub_1D42B28FC((uint64_t *)&unk_1EFE403D0);
  if ((sub_1D42B6DAC() & 1) == 0)
  {
LABEL_9:
    sub_1D42B54EC();
    v18 = sub_1D42B6D0C();
    v20 = sub_1D42B6C70(v18, v19);
    sub_1D42B71A0(v20, v21, v22, v23, v24, v25);
    goto LABEL_10;
  }
  *((_QWORD *)&v28 + 1) = v11;
  *(_QWORD *)&v27 = v26;
  v12 = sub_1D42AD0E0(&v27, &v26);
  sub_1D42B71A0(v12, v13, v14, v15, v16, v17);
  sub_1D42B5400((uint64_t)&v27);
  if (!v1)
    *v0 = v26;
LABEL_10:
  sub_1D42B71C4();
}

void sub_1D42B15F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  double v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  double v49;
  uint64_t v50;
  double v51;
  uint64_t v52;
  double v53;
  uint64_t v54;
  double v55;
  __int128 v56;
  double v57;
  double v58;
  uint64_t v59;
  double v60;
  double v61;

  v3 = sub_1D42B6D18();
  v4 = sub_1D42B6DB8(v3, sel_decodePropertyListForKey_);
  sub_1D42B6EBC();
  if (v2)
  {
    sub_1D42B6DE0();
    v5 = sub_1D42B6EC4();
  }
  else
  {
    v9 = sub_1D42B6F48();
  }
  v10 = sub_1D42B6DEC(v5, v6, v7, v8, v9);
  v14 = sub_1D42B6DD4(v10, v11, v12, v13);
  if (v57 == 0.0)
  {
    sub_1D42B6DC4(v14, v15, v16, v17);
    goto LABEL_9;
  }
  sub_1D42B28FC((uint64_t *)&unk_1EFE403D0);
  if ((sub_1D42B6C80() & 1) == 0)
  {
LABEL_9:
    sub_1D42B54EC();
    v40 = sub_1D42B6D0C();
    sub_1D42B6C70(v40, v41);
    sub_1D42B6DCC();
    goto LABEL_10;
  }
  sub_1D42B6C98();
  sub_1D42AD25C(v18, v19);
  v20 = sub_1D42B6DCC();
  sub_1D42B6E10(v20, v21, v22, v23, v24, v25, v26, v27, v42);
  if (!v1)
  {
    v36 = sub_1D42B7134(v28, v29, v30, v31, v32, v33, v34, v35, v43, v45, v47, v49, v51, v53, v55, v57, v58, v60, v61);
    sub_1D42B6E94(v37, v36, v44, v46, v48, v50, v52, v54, v56, v59);
    *(_QWORD *)(v0 + 56) = v38;
    *(_QWORD *)(v0 + 64) = v39;
  }
LABEL_10:
  sub_1D42B7088();
}

void sub_1D42B16C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  double v39;
  uint64_t v40;

  v3 = sub_1D42B6D18();
  v4 = sub_1D42B6DB8(v3, sel_decodePropertyListForKey_);
  sub_1D42B6EBC();
  if (v2)
  {
    sub_1D42B6DE0();
    v5 = sub_1D42B6EC4();
  }
  else
  {
    v9 = sub_1D42B6F48();
  }
  v10 = sub_1D42B6DEC(v5, v6, v7, v8, v9);
  v14 = sub_1D42B6DD4(v10, v11, v12, v13);
  if (!*((_QWORD *)&v38 + 1))
  {
    sub_1D42B6DC4(v14, v15, v16, v17);
    goto LABEL_9;
  }
  sub_1D42B28FC((uint64_t *)&unk_1EFE403D0);
  if ((sub_1D42B6C80() & 1) == 0)
  {
LABEL_9:
    sub_1D42B54EC();
    v29 = sub_1D42B6D0C();
    sub_1D42B6C70(v29, v30);
    sub_1D42B6DCC();
    goto LABEL_10;
  }
  sub_1D42B6C98();
  sub_1D42AD408(v18, v19);
  v20 = sub_1D42B6DCC();
  sub_1D42B6E10(v20, v21, v22, v23, v24, v25, v26, v27, v31);
  if (!v1)
  {
    sub_1D42B6F04(v36, v32, v33, v34, v35, v36, v37, v38, v39);
    *(_QWORD *)(v0 + 48) = v40;
    *(_QWORD *)(v0 + 56) = v28;
  }
LABEL_10:
  sub_1D42B6E5C();
}

uint64_t sub_1D42B17A8()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;

  v1 = sub_1D42B6FFC();
  v2 = sub_1D42B6FD8(v1, sel_decodePropertyListForKey_);
  sub_1D42B70A0();
  if (v0)
  {
    sub_1D42B6FF0();
    v3 = sub_1D42B70A8();
  }
  else
  {
    sub_1D42B7118();
  }
  v11 = sub_1D42B6FCC(v3, v4, v5, v6, v7, v8, v9, v10, v46, v49, v51, v53, v56);
  v19 = sub_1D42B6FE4(v11, v12, v13, v14, v15, v16, v17, v18, v47, v50, v52, v54, v57);
  if (!v55)
  {
    sub_1D42B7098(v19, v20, v21, v22, v23, v24, v25, v26, v48);
    goto LABEL_8;
  }
  v0 = sub_1D42B28FC((uint64_t *)&unk_1EFE403D0);
  if ((sub_1D42B6E2C() & 1) == 0)
  {
LABEL_8:
    sub_1D42B54EC();
    v39 = sub_1D42B6D0C();
    v41 = sub_1D42B6C70(v39, v40);
    sub_1D42B6DC4(v41, v42, v43, v44);
    return v0;
  }
  sub_1D42B6EE4();
  v0 = (uint64_t)sub_1D42AD5B4(v27);
  v31 = sub_1D42B6DC4(v0, v28, v29, v30);
  sub_1D42B6E10(v31, v32, v33, v34, v35, v36, v37, v38, v48);
  return v0;
}

void sub_1D42B1894()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  __int128 v40;

  v3 = sub_1D42B6D18();
  v4 = sub_1D42B6DB8(v3, sel_decodePropertyListForKey_);
  sub_1D42B6EBC();
  if (v2)
  {
    sub_1D42B6DE0();
    v5 = sub_1D42B6EC4();
  }
  else
  {
    v9 = sub_1D42B6F48();
  }
  v10 = sub_1D42B6DEC(v5, v6, v7, v8, v9);
  v14 = sub_1D42B6DD4(v10, v11, v12, v13);
  if (!*((_QWORD *)&v38 + 1))
  {
    sub_1D42B6DC4(v14, v15, v16, v17);
    goto LABEL_9;
  }
  sub_1D42B28FC((uint64_t *)&unk_1EFE403D0);
  if ((sub_1D42B6C80() & 1) == 0)
  {
LABEL_9:
    sub_1D42B54EC();
    v29 = sub_1D42B6D0C();
    sub_1D42B6C70(v29, v30);
    sub_1D42B6DCC();
    goto LABEL_10;
  }
  sub_1D42B6C98();
  sub_1D42AD6E0(v18, v19);
  v20 = sub_1D42B6DCC();
  sub_1D42B6E10(v20, v21, v22, v23, v24, v25, v26, v27, v31);
  if (!v1)
  {
    sub_1D42B7064(v36, v32, v33, v34, v35, v36, v37, v38, v39);
    *(_OWORD *)(v0 + 48) = v40;
    *(_QWORD *)(v0 + 64) = v28;
  }
LABEL_10:
  sub_1D42B7088();
}

uint64_t sub_1D42B1974()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;

  v1 = sub_1D42B6FFC();
  v2 = sub_1D42B6FD8(v1, sel_decodePropertyListForKey_);
  sub_1D42B70A0();
  if (v0)
  {
    sub_1D42B6FF0();
    v3 = sub_1D42B70A8();
  }
  else
  {
    sub_1D42B7118();
  }
  v11 = sub_1D42B6FCC(v3, v4, v5, v6, v7, v8, v9, v10, v46, v49, v51, v53, v56);
  v19 = sub_1D42B6FE4(v11, v12, v13, v14, v15, v16, v17, v18, v47, v50, v52, v54, v57);
  if (!v55)
  {
    sub_1D42B7098(v19, v20, v21, v22, v23, v24, v25, v26, v48);
    goto LABEL_8;
  }
  v0 = sub_1D42B28FC((uint64_t *)&unk_1EFE403D0);
  if ((sub_1D42B6E2C() & 1) == 0)
  {
LABEL_8:
    sub_1D42B54EC();
    v39 = sub_1D42B6D0C();
    v41 = sub_1D42B6C70(v39, v40);
    sub_1D42B6DC4(v41, v42, v43, v44);
    return v0;
  }
  sub_1D42B6EE4();
  v0 = (uint64_t)sub_1D42AD88C(v27);
  v31 = sub_1D42B6DC4(v0, v28, v29, v30);
  sub_1D42B6E10(v31, v32, v33, v34, v35, v36, v37, v38, v48);
  return v0;
}

void sub_1D42B1A68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;

  v3 = sub_1D42B6D18();
  v4 = sub_1D42B6DB8(v3, sel_decodePropertyListForKey_);
  sub_1D42B6EBC();
  if (v2)
  {
    sub_1D42B6DE0();
    v5 = sub_1D42B6EC4();
  }
  else
  {
    v9 = sub_1D42B6F48();
  }
  v10 = sub_1D42B6DEC(v5, v6, v7, v8, v9);
  v14 = sub_1D42B6DD4(v10, v11, v12, v13);
  if (!*((_QWORD *)&v39 + 1))
  {
    sub_1D42B6DC4(v14, v15, v16, v17);
    goto LABEL_9;
  }
  sub_1D42B28FC((uint64_t *)&unk_1EFE403D0);
  if ((sub_1D42B6C80() & 1) == 0)
  {
LABEL_9:
    sub_1D42B54EC();
    v30 = sub_1D42B6D0C();
    sub_1D42B6C70(v30, v31);
    sub_1D42B6DCC();
    goto LABEL_10;
  }
  sub_1D42B6C98();
  sub_1D42AD9C8(v18, v19);
  v20 = sub_1D42B6DCC();
  sub_1D42B6E10(v20, v21, v22, v23, v24, v25, v26, v27, v32);
  if (!v1)
  {
    sub_1D42B7064(v37, v33, v34, v35, v36, v37, v38, v39, v40);
    *(_BYTE *)(v0 + 48) = v28;
    *(_QWORD *)(v0 + 56) = v29;
  }
LABEL_10:
  sub_1D42B6E5C();
}

void sub_1D42B1B48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;

  v3 = sub_1D42B6D18();
  v4 = sub_1D42B6DB8(v3, sel_decodePropertyListForKey_);
  sub_1D42B6EBC();
  if (v2)
  {
    sub_1D42B6DE0();
    v5 = sub_1D42B6EC4();
  }
  else
  {
    v9 = sub_1D42B6F48();
  }
  v10 = sub_1D42B6DEC(v5, v6, v7, v8, v9);
  v14 = sub_1D42B6DD4(v10, v11, v12, v13);
  if (!*((_QWORD *)&v33 + 1))
  {
    sub_1D42B6DC4(v14, v15, v16, v17);
    goto LABEL_9;
  }
  sub_1D42B28FC((uint64_t *)&unk_1EFE403D0);
  if ((sub_1D42B6C80() & 1) == 0)
  {
LABEL_9:
    sub_1D42B54EC();
    v28 = sub_1D42B6D0C();
    sub_1D42B6C70(v28, v29);
    sub_1D42B6DCC();
    goto LABEL_10;
  }
  sub_1D42B6C98();
  sub_1D42ADB74(v18, v19);
  v20 = sub_1D42B6DCC();
  sub_1D42B6E10(v20, v21, v22, v23, v24, v25, v26, v27, v30);
  if (!v1)
  {
    *(_QWORD *)v0 = v31;
    *(_QWORD *)(v0 + 8) = v32;
    *(_OWORD *)(v0 + 16) = v33;
    *(_QWORD *)(v0 + 32) = v34;
    *(_OWORD *)(v0 + 40) = v35;
    *(_QWORD *)(v0 + 56) = v36;
  }
LABEL_10:
  sub_1D42B6E5C();
}

uint64_t sub_1D42B1C3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  __int128 v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  char v41;
  uint64_t v42;

  v3 = sub_1D42B6D18();
  v4 = sub_1D42B6DB8(v3, sel_decodePropertyListForKey_);
  sub_1D42B6EBC();
  if (v2)
  {
    sub_1D42B6DE0();
    v5 = sub_1D42B6EC4();
  }
  else
  {
    v9 = sub_1D42B6F48();
  }
  v10 = sub_1D42B6DEC(v5, v6, v7, v8, v9);
  v14 = sub_1D42B6DD4(v10, v11, v12, v13);
  if (!v34)
  {
    sub_1D42B6DC4(v14, v15, v16, v17);
    goto LABEL_9;
  }
  sub_1D42B28FC((uint64_t *)&unk_1EFE403D0);
  if ((sub_1D42B6C80() & 1) == 0)
  {
LABEL_9:
    sub_1D42B54EC();
    v29 = sub_1D42B6D0C();
    sub_1D42B6C70(v29, v30);
    return sub_1D42B6DCC();
  }
  sub_1D42B6C98();
  sub_1D42ADD18(v18, v19);
  v20 = sub_1D42B6DCC();
  result = sub_1D42B6E10(v20, v21, v22, v23, v24, v25, v26, v27, v31);
  if (!v1)
  {
    *(_OWORD *)v0 = v32;
    *(_BYTE *)(v0 + 16) = v33;
    *(_QWORD *)(v0 + 24) = v34;
    *(_QWORD *)(v0 + 32) = v35;
    *(_QWORD *)(v0 + 40) = v36;
    *(_QWORD *)(v0 + 48) = v37;
    *(_OWORD *)(v0 + 56) = v38;
    *(_OWORD *)(v0 + 72) = v39;
    *(_OWORD *)(v0 + 88) = v40;
    *(_BYTE *)(v0 + 104) = v41;
    *(_QWORD *)(v0 + 112) = v42;
  }
  return result;
}

void sub_1D42B1D64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  uint64_t v41;
  char v42;

  v3 = sub_1D42B6D18();
  v4 = sub_1D42B6DB8(v3, sel_decodePropertyListForKey_);
  sub_1D42B6EBC();
  if (v2)
  {
    sub_1D42B6DE0();
    v5 = sub_1D42B6EC4();
  }
  else
  {
    v9 = sub_1D42B6F48();
  }
  v10 = sub_1D42B6DEC(v5, v6, v7, v8, v9);
  v14 = sub_1D42B6DD4(v10, v11, v12, v13);
  if (!v33)
  {
    sub_1D42B6DC4(v14, v15, v16, v17);
    goto LABEL_9;
  }
  sub_1D42B28FC((uint64_t *)&unk_1EFE403D0);
  if ((sub_1D42B6C80() & 1) == 0)
  {
LABEL_9:
    sub_1D42B54EC();
    v28 = sub_1D42B6D0C();
    sub_1D42B6C70(v28, v29);
    sub_1D42B6DCC();
    goto LABEL_10;
  }
  sub_1D42B6C98();
  sub_1D42ADEE4(v18, v19);
  v20 = sub_1D42B6DCC();
  sub_1D42B6E10(v20, v21, v22, v23, v24, v25, v26, v27, v30);
  if (!v1)
  {
    *(_OWORD *)v0 = v31;
    *(_QWORD *)(v0 + 16) = v32;
    *(_QWORD *)(v0 + 24) = v33;
    *(_OWORD *)(v0 + 32) = v34;
    *(_BYTE *)(v0 + 48) = v35;
    *(_BYTE *)(v0 + 49) = v36;
    *(_BYTE *)(v0 + 50) = v37;
    *(_BYTE *)(v0 + 51) = v38;
    *(_BYTE *)(v0 + 52) = v39;
    *(_BYTE *)(v0 + 53) = v40;
    *(_QWORD *)(v0 + 56) = v41;
    *(_BYTE *)(v0 + 64) = v42;
  }
LABEL_10:
  sub_1D42B7088();
}

void sub_1D42B1E80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  __int128 v31;
  char v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v3 = sub_1D42B6D18();
  v4 = sub_1D42B6DB8(v3, sel_decodePropertyListForKey_);
  sub_1D42B6EBC();
  if (v2)
  {
    sub_1D42B6DE0();
    v5 = sub_1D42B6EC4();
  }
  else
  {
    v9 = sub_1D42B6F48();
  }
  v10 = sub_1D42B6DEC(v5, v6, v7, v8, v9);
  v14 = sub_1D42B6DD4(v10, v11, v12, v13);
  if (!v34)
  {
    sub_1D42B6DC4(v14, v15, v16, v17);
    goto LABEL_9;
  }
  sub_1D42B28FC((uint64_t *)&unk_1EFE403D0);
  if ((sub_1D42B6C80() & 1) == 0)
  {
LABEL_9:
    sub_1D42B54EC();
    v28 = sub_1D42B6D0C();
    sub_1D42B6C70(v28, v29);
    sub_1D42B6DCC();
    goto LABEL_10;
  }
  sub_1D42B6C98();
  sub_1D42AE0B0(v18, v19);
  v20 = sub_1D42B6DCC();
  sub_1D42B6E10(v20, v21, v22, v23, v24, v25, v26, v27, v30);
  if (!v1)
  {
    *(_OWORD *)v0 = v31;
    *(_BYTE *)(v0 + 16) = v32;
    *(_DWORD *)(v0 + 20) = v33;
    *(_QWORD *)(v0 + 24) = v34;
    *(_QWORD *)(v0 + 32) = v35;
    *(_QWORD *)(v0 + 40) = v36;
  }
LABEL_10:
  sub_1D42B7170();
}

void sub_1D42B1F74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  double v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  double v52;
  __int128 v53;
  double v54;
  double v55;
  uint64_t v56;
  double v57;
  double v58;

  v2 = sub_1D42B6D18();
  v3 = sub_1D42B6DB8(v2, sel_decodePropertyListForKey_);
  sub_1D42B6EBC();
  if (v1)
  {
    sub_1D42B6DE0();
    v4 = sub_1D42B6EC4();
  }
  else
  {
    v8 = sub_1D42B6F48();
  }
  v9 = sub_1D42B6DEC(v4, v5, v6, v7, v8);
  v13 = sub_1D42B6DD4(v9, v10, v11, v12);
  if (v54 == 0.0)
  {
    sub_1D42B6DC4(v13, v14, v15, v16);
    goto LABEL_9;
  }
  sub_1D42B28FC((uint64_t *)&unk_1EFE403D0);
  if ((sub_1D42B6C80() & 1) == 0)
  {
LABEL_9:
    sub_1D42B54EC();
    v37 = sub_1D42B6D0C();
    sub_1D42B6C70(v37, v38);
    sub_1D42B6DCC();
    goto LABEL_10;
  }
  sub_1D42B6C98();
  sub_1D42AE254(v17, v18);
  v19 = sub_1D42B6DCC();
  sub_1D42B6E10(v19, v20, v21, v22, v23, v24, v25, v26, v39);
  if (!v0)
  {
    v35 = sub_1D42B7134(v27, v28, v29, v30, v31, v32, v33, v34, v40, v42, v44, v46, v48, v50, v52, v54, v55, v57, v58);
    sub_1D42B6E94(v36, v35, v41, v43, v45, v47, v49, v51, v53, v56);
  }
LABEL_10:
  sub_1D42B6E5C();
}

double sub_1D42B2040()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;

  v3 = sub_1D42B6FFC();
  v4 = sub_1D42B6FD8(v3, sel_decodePropertyListForKey_);
  sub_1D42B70A0();
  if (v0)
  {
    sub_1D42B6FF0();
    v5 = sub_1D42B70A8();
  }
  else
  {
    sub_1D42B7118();
  }
  v13 = sub_1D42B6FCC(v5, v6, v7, v8, v9, v10, v11, v12, v50, v53, v55, v57, v60);
  v21 = sub_1D42B6FE4(v13, v14, v15, v16, v17, v18, v19, v20, v51, v54, v56, v58, v61);
  if (!v59)
  {
    sub_1D42B7098(v21, v22, v23, v24, v25, v26, v27, v28, v52);
    goto LABEL_10;
  }
  sub_1D42B28FC((uint64_t *)&unk_1EFE403D0);
  if ((sub_1D42B6E2C() & 1) == 0)
  {
LABEL_10:
    sub_1D42B54EC();
    v43 = sub_1D42B6D0C();
    v45 = sub_1D42B6C70(v43, v44);
    sub_1D42B6DC4(v45, v46, v47, v48);
    return v2;
  }
  sub_1D42B6EE4();
  v34 = sub_1D42AE3F8(v29);
  if (v1)
  {
    v35 = sub_1D42B6DC4(v30, v31, v32, v33, v34);
  }
  else
  {
    v2 = v34;
    v35 = sub_1D42B6DC4(v30, v31, v32, v33);
  }
  sub_1D42B6E10(v35, v36, v37, v38, v39, v40, v41, v42, v52);
  return v2;
}

void sub_1D42B2158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;

  v3 = sub_1D42B6D18();
  v4 = sub_1D42B6DB8(v3, sel_decodePropertyListForKey_);
  sub_1D42B6EBC();
  if (v2)
  {
    sub_1D42B6DE0();
    v5 = sub_1D42B6EC4();
  }
  else
  {
    v9 = sub_1D42B6F48();
  }
  v10 = sub_1D42B6DEC(v5, v6, v7, v8, v9);
  v14 = sub_1D42B6DD4(v10, v11, v12, v13);
  if (!*((_QWORD *)&v33 + 1))
  {
    sub_1D42B6DC4(v14, v15, v16, v17);
    goto LABEL_9;
  }
  sub_1D42B28FC((uint64_t *)&unk_1EFE403D0);
  if ((sub_1D42B6C80() & 1) == 0)
  {
LABEL_9:
    sub_1D42B54EC();
    v28 = sub_1D42B6D0C();
    sub_1D42B6C70(v28, v29);
    sub_1D42B6DCC();
    goto LABEL_10;
  }
  sub_1D42B6C98();
  sub_1D42AE55C(v18, v19);
  v20 = sub_1D42B6DCC();
  sub_1D42B6E10(v20, v21, v22, v23, v24, v25, v26, v27, v30);
  if (!v1)
  {
    *(_QWORD *)v0 = v31;
    *(_QWORD *)(v0 + 8) = v32;
    *(_OWORD *)(v0 + 16) = v33;
    *(_QWORD *)(v0 + 32) = v34;
    *(_OWORD *)(v0 + 40) = v35;
    *(_QWORD *)(v0 + 56) = v36;
  }
LABEL_10:
  sub_1D42B6E5C();
}

void sub_1D42B224C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  double v38;
  __int128 v39;

  v3 = sub_1D42B6D18();
  v4 = sub_1D42B6DB8(v3, sel_decodePropertyListForKey_);
  sub_1D42B6EBC();
  if (v2)
  {
    sub_1D42B6DE0();
    v5 = sub_1D42B6EC4();
  }
  else
  {
    v9 = sub_1D42B6F48();
  }
  v10 = sub_1D42B6DEC(v5, v6, v7, v8, v9);
  v14 = sub_1D42B6DD4(v10, v11, v12, v13);
  if (!*((_QWORD *)&v37 + 1))
  {
    sub_1D42B6DC4(v14, v15, v16, v17);
    goto LABEL_9;
  }
  sub_1D42B28FC((uint64_t *)&unk_1EFE403D0);
  if ((sub_1D42B6C80() & 1) == 0)
  {
LABEL_9:
    sub_1D42B54EC();
    v28 = sub_1D42B6D0C();
    sub_1D42B6C70(v28, v29);
    sub_1D42B6DCC();
    goto LABEL_10;
  }
  sub_1D42B6C98();
  sub_1D42AE700(v18, v19);
  v20 = sub_1D42B6DCC();
  sub_1D42B6E10(v20, v21, v22, v23, v24, v25, v26, v27, v30);
  if (!v1)
  {
    sub_1D42B6F04(v35, v31, v32, v33, v34, v35, v36, v37, v38);
    *(_OWORD *)(v0 + 48) = v39;
  }
LABEL_10:
  sub_1D42B6E5C();
}

void sub_1D42B2324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D42B26E4(a1, a2, a3, (void (*)(uint64_t, unint64_t))sub_1D42AC5A8);
}

void sub_1D42B2340(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1D42B235C(a1, a2, a3, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1D42AE9CC);
}

void sub_1D42B235C(uint64_t a1, uint64_t a2, void *a3, void (*a4)(uint64_t *__return_ptr, uint64_t *))
{
  uint64_t v4;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24[3];
  uint64_t v25;
  uint64_t v26[2];
  __int128 v27;
  double v28;
  _BYTE v29[32];

  v7 = (void *)sub_1D451A6C8();
  v8 = objc_msgSend(a3, sel_decodePropertyListForKey_, v7);

  if (v8)
  {
    sub_1D451B208();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_1D42B6F48();
  }
  sub_1D42B54A4((uint64_t)v26, (uint64_t)v29);
  v9 = sub_1D42B28B4((uint64_t)v29, (uint64_t)v26);
  if (!*((_QWORD *)&v27 + 1))
  {
    sub_1D42B6DC4(v9, v10, v11, v12);
    goto LABEL_9;
  }
  v13 = sub_1D42B28FC((uint64_t *)&unk_1EFE403D0);
  if ((sub_1D42B6E2C() & 1) == 0)
  {
LABEL_9:
    sub_1D42B54EC();
    v22 = sub_1D42B6D0C();
    sub_1D42B6C70(v22, v23);
    sub_1D42B5464((uint64_t)v29);
    return;
  }
  v25 = v13;
  a4(v26, v24);
  v14 = sub_1D42B5464((uint64_t)v29);
  sub_1D42B6E10(v14, v15, v16, v17, v18, v19, v20, v21, v24[0]);
  if (!v4)
    sub_1D42B6F04(v26[0], v24[0], v24[1], v24[2], v25, v26[0], v26[1], v27, v28);
}

void sub_1D42B24A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D42B26E4(a1, a2, a3, (void (*)(uint64_t, unint64_t))sub_1D42AC628);
}

void sub_1D42B24C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  double v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  double v52;
  uint64_t v53;
  double v54;
  __int128 v55;
  double v56;
  double v57;
  uint64_t v58;
  double v59;
  double v60;
  uint64_t v61;
  __int128 v62;

  v3 = sub_1D42B6D18();
  v4 = sub_1D42B6DB8(v3, sel_decodePropertyListForKey_);
  sub_1D42B6EBC();
  if (v2)
  {
    sub_1D42B6DE0();
    v5 = sub_1D42B6EC4();
  }
  else
  {
    v9 = sub_1D42B6F48();
  }
  v10 = sub_1D42B6DEC(v5, v6, v7, v8, v9);
  v14 = sub_1D42B6DD4(v10, v11, v12, v13);
  if (v56 == 0.0)
  {
    sub_1D42B6DC4(v14, v15, v16, v17);
    goto LABEL_9;
  }
  sub_1D42B28FC((uint64_t *)&unk_1EFE403D0);
  if ((sub_1D42B6C80() & 1) == 0)
  {
LABEL_9:
    sub_1D42B54EC();
    v39 = sub_1D42B6D0C();
    sub_1D42B6C70(v39, v40);
    sub_1D42B6DCC();
    return;
  }
  sub_1D42B6C98();
  sub_1D42AEB68(v18, v19);
  v20 = sub_1D42B6DCC();
  sub_1D42B6E10(v20, v21, v22, v23, v24, v25, v26, v27, v41);
  if (!v1)
  {
    v36 = sub_1D42B7134(v28, v29, v30, v31, v32, v33, v34, v35, v42, v44, v46, v48, v50, v52, v54, v56, v57, v59, v60);
    sub_1D42B6E94(v37, v36, v43, v45, v47, v49, v51, v53, v55, v58);
    *(_QWORD *)(v0 + 56) = v38;
    *(_QWORD *)(v0 + 64) = v61;
    *(_OWORD *)(v0 + 72) = v62;
  }
}

uint64_t sub_1D42B25B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;

  v2 = sub_1D42B6FFC();
  v3 = sub_1D42B6FD8(v2, sel_decodePropertyListForKey_);
  sub_1D42B70A0();
  if (v0)
  {
    sub_1D42B6FF0();
    v4 = sub_1D42B70A8();
  }
  else
  {
    sub_1D42B7118();
  }
  v12 = sub_1D42B6FCC(v4, v5, v6, v7, v8, v9, v10, v11, v48, v51, v53, v55, v58);
  v20 = sub_1D42B6FE4(v12, v13, v14, v15, v16, v17, v18, v19, v49, v52, v54, v56, v59);
  if (!v57)
  {
    sub_1D42B7098(v20, v21, v22, v23, v24, v25, v26, v27, v50);
    goto LABEL_10;
  }
  v0 = sub_1D42B28FC((uint64_t *)&unk_1EFE403D0);
  if ((sub_1D42B6E2C() & 1) == 0)
  {
LABEL_10:
    sub_1D42B54EC();
    v41 = sub_1D42B6D0C();
    v43 = sub_1D42B6C70(v41, v42);
    sub_1D42B6DC4(v43, v44, v45, v46);
    return v0;
  }
  sub_1D42B6EE4();
  v29 = sub_1D42AED24(v28);
  if (!v1)
    v0 = (uint64_t)v29;
  v33 = sub_1D42B6DC4((uint64_t)v29, v30, v31, v32);
  sub_1D42B6E10(v33, v34, v35, v36, v37, v38, v39, v40, v50);
  return v0;
}

void sub_1D42B26C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D42B26E4(a1, a2, a3, (void (*)(uint64_t, unint64_t))sub_1D42AC744);
}

void sub_1D42B26E4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, unint64_t))
{
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;

  v6 = sub_1D451A6C8();
  v7 = sub_1D42B6DB8(v6, sel_decodePropertyListForKey_);
  sub_1D42B6EBC();
  if (a3)
  {
    sub_1D42B7250();
    v8 = sub_1D42B6EC4();
  }
  else
  {
    v30 = 0u;
    v31 = 0u;
  }
  v10 = sub_1D42B7244(v8, v9);
  v12 = sub_1D42B720C(v10, v11);
  if (!*((_QWORD *)&v31 + 1))
  {
    sub_1D42B6E54(v12, v13);
    goto LABEL_8;
  }
  v14 = sub_1D42B28FC((uint64_t *)&unk_1EFE403D0);
  if ((sub_1D42B6DAC() & 1) == 0)
  {
LABEL_8:
    sub_1D42B54EC();
    v21 = sub_1D42B6D0C();
    v23 = sub_1D42B6C70(v21, v22);
    sub_1D42B71A0(v23, v24, v25, v26, v27, v28);
    goto LABEL_9;
  }
  *((_QWORD *)&v31 + 1) = v14;
  *(_QWORD *)&v30 = v29;
  v15 = sub_1D42AE8A4(&v30, a4);
  sub_1D42B71A0(v15, v16, v17, v18, v19, v20);
  sub_1D42B5400((uint64_t)&v30);
LABEL_9:
  sub_1D42B71C4();
}

void sub_1D42B27D8(uint64_t a1, uint64_t a2)
{
  sub_1D44844DC(a1, a2);
}

void sub_1D42B27EC(uint64_t a1, uint64_t a2)
{
  sub_1D4484534(a1, a2);
}

void sub_1D42B2800(uint64_t a1, uint64_t a2)
{
  sub_1D4484584(a1, a2);
}

void sub_1D42B2814(uint64_t a1, uint64_t a2)
{
  sub_1D44845DC(a1, a2);
}

void sub_1D42B2828(uint64_t a1, uint64_t a2)
{
  sub_1D4484634(a1, a2);
}

void sub_1D42B283C(uint64_t a1, uint64_t a2)
{
  sub_1D448469C(a1, a2);
}

void sub_1D42B2850(uint64_t a1, uint64_t a2)
{
  sub_1D4484704(a1, a2);
}

void sub_1D42B2864(uint64_t a1, uint64_t a2)
{
  sub_1D4484754(a1, a2);
}

void sub_1D42B2878(uint64_t a1, uint64_t a2)
{
  sub_1D44847A4(a1, a2);
}

void sub_1D42B288C(uint64_t a1, uint64_t a2)
{
  sub_1D44847F4(a1, a2);
}

void sub_1D42B28A0(uint64_t a1, uint64_t a2)
{
  sub_1D4484844(a1, a2);
}

uint64_t sub_1D42B28B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D42B28FC(&qword_1EFE47160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D42B28FC(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1D825E404]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

_OWORD *sub_1D42B293C(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1D42B294C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t type metadata accessor for SNLKFSResult()
{
  return objc_opt_self();
}

uint64_t method lookup function for SNLKFSResult()
{
  return swift_lookUpClassMethod();
}

_WORD *sub_1D42B29B4(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t sub_1D42B29C4(unsigned __int16 *a1, int a2)
{
  int v2;
  int v3;
  int v4;

  if (!a2)
    return 0;
  if ((a2 + 0xFFFF) <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if ((a2 + 0xFFFF) < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 0xFFFF;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        return 0;
      return (*a1 | (v4 << 16)) - 0xFFFF;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 0xFFFF;
  }
  return 0;
}

uint64_t sub_1D42B2A34(_WORD *a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 0xFFFF) <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if ((a3 + 0xFFFF) < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (!a2)
    return ((uint64_t (*)(void))((char *)sub_1D42B2AAC + 4 * byte_1D4522335[v4]))();
  *a1 = a2 - 1;
  return ((uint64_t (*)(void))((char *)sub_1D42B2A8C + 4 * byte_1D4522330[v4]))();
}

uint64_t sub_1D42B2A8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1D42B2AAC(uint64_t result)
{
  *(_BYTE *)(result + 2) = 0;
  return result;
}

uint64_t sub_1D42B2AB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1D42B2ABC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1D42B2AC4(uint64_t result)
{
  *(_WORD *)(result + 2) = 0;
  return result;
}

uint64_t sub_1D42B2ACC(uint64_t result)
{
  *(_DWORD *)(result + 2) = 0;
  return result;
}

void type metadata accessor for snaop_sdf_results_formatter_node_t(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE49018);
}

__n128 initializeWithCopy for LogMelParameters(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for LogMelParameters(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 52))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 24);
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LogMelParameters(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 52) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 52) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = a2 + 1;
  }
  return result;
}

void type metadata accessor for SNLogMelParameters(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE49020);
}

__n128 sub_1D42B2BBC(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void type metadata accessor for snaop_sdf_async_output_node_t(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE49028);
}

_QWORD *initializeBufferWithCopyOfBuffer for MovieRemix.DSPParameterTuple(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t storeEnumTagSinglePayload for MovieRemix.DSPParameterTuple(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

void type metadata accessor for os_unfair_recursive_lock_s(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE49030);
}

void type metadata accessor for SNFeaturePrintType(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE49038);
}

void type metadata accessor for SNClassifierIdentifier(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE49040);
}

__n128 sub_1D42B2C54(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for snaop_sdf_memcpy_node_t(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE49048);
}

_QWORD *sub_1D42B2C74(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for MovieRemix.DSPParameterTuple(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

void type metadata accessor for snaop_sdf_ebank_node_t(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE49050);
}

_DWORD *sub_1D42B2CB4(_DWORD *result, _DWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t sub_1D42B2CC0(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 4))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1D42B2CE0(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 4) = v3;
  return result;
}

void type metadata accessor for snaop_sdf_int16_to_float_node_t(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE49058);
}

void *sub_1D42B2D1C(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x48E0uLL);
}

uint64_t sub_1D42B2D24(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 18656))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1D42B2D48(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 18648) = 0;
    *(_QWORD *)(result + 18640) = 0;
    *(_QWORD *)(result + 18632) = 0;
    *(_QWORD *)(result + 18624) = 0;
    *(_QWORD *)(result + 18616) = 0;
    *(_QWORD *)(result + 18608) = 0;
    *(_QWORD *)(result + 18600) = 0;
    *(_QWORD *)(result + 18592) = 0;
    *(_QWORD *)(result + 18584) = 0;
    *(_QWORD *)(result + 18576) = 0;
    *(_QWORD *)(result + 18568) = 0;
    *(_QWORD *)(result + 18560) = 0;
    *(_QWORD *)(result + 18552) = 0;
    *(_QWORD *)(result + 18544) = 0;
    *(_QWORD *)(result + 18536) = 0;
    *(_QWORD *)(result + 18528) = 0;
    *(_QWORD *)(result + 18520) = 0;
    *(_QWORD *)(result + 18512) = 0;
    *(_QWORD *)(result + 18504) = 0;
    *(_QWORD *)(result + 18496) = 0;
    *(_QWORD *)(result + 18488) = 0;
    *(_QWORD *)(result + 18480) = 0;
    *(_QWORD *)(result + 18472) = 0;
    *(_QWORD *)(result + 18464) = 0;
    *(_QWORD *)(result + 18456) = 0;
    *(_QWORD *)(result + 18448) = 0;
    *(_QWORD *)(result + 18440) = 0;
    *(_QWORD *)(result + 18432) = 0;
    *(_QWORD *)(result + 18424) = 0;
    *(_QWORD *)(result + 18416) = 0;
    *(_QWORD *)(result + 18408) = 0;
    *(_QWORD *)(result + 18400) = 0;
    *(_QWORD *)(result + 18392) = 0;
    *(_QWORD *)(result + 18384) = 0;
    *(_QWORD *)(result + 18376) = 0;
    *(_QWORD *)(result + 18368) = 0;
    *(_QWORD *)(result + 18360) = 0;
    *(_QWORD *)(result + 18352) = 0;
    *(_QWORD *)(result + 18344) = 0;
    *(_QWORD *)(result + 18336) = 0;
    *(_QWORD *)(result + 18328) = 0;
    *(_QWORD *)(result + 18320) = 0;
    *(_QWORD *)(result + 18312) = 0;
    *(_QWORD *)(result + 18304) = 0;
    *(_QWORD *)(result + 18296) = 0;
    *(_QWORD *)(result + 18288) = 0;
    *(_QWORD *)(result + 18280) = 0;
    *(_QWORD *)(result + 18272) = 0;
    *(_QWORD *)(result + 18264) = 0;
    *(_QWORD *)(result + 18256) = 0;
    *(_QWORD *)(result + 18248) = 0;
    *(_QWORD *)(result + 18240) = 0;
    *(_QWORD *)(result + 18232) = 0;
    *(_QWORD *)(result + 18224) = 0;
    *(_QWORD *)(result + 18216) = 0;
    *(_QWORD *)(result + 18208) = 0;
    *(_QWORD *)(result + 18200) = 0;
    *(_QWORD *)(result + 18192) = 0;
    *(_QWORD *)(result + 18184) = 0;
    *(_QWORD *)(result + 18176) = 0;
    *(_QWORD *)(result + 18168) = 0;
    *(_QWORD *)(result + 18160) = 0;
    *(_QWORD *)(result + 18152) = 0;
    *(_QWORD *)(result + 18144) = 0;
    *(_QWORD *)(result + 18136) = 0;
    *(_QWORD *)(result + 18128) = 0;
    *(_QWORD *)(result + 18120) = 0;
    *(_QWORD *)(result + 18112) = 0;
    *(_QWORD *)(result + 18104) = 0;
    *(_QWORD *)(result + 18096) = 0;
    *(_QWORD *)(result + 18088) = 0;
    *(_QWORD *)(result + 18080) = 0;
    *(_QWORD *)(result + 18072) = 0;
    *(_QWORD *)(result + 18064) = 0;
    *(_QWORD *)(result + 18056) = 0;
    *(_QWORD *)(result + 18048) = 0;
    *(_QWORD *)(result + 18040) = 0;
    *(_QWORD *)(result + 18032) = 0;
    *(_QWORD *)(result + 18024) = 0;
    *(_QWORD *)(result + 18016) = 0;
    *(_QWORD *)(result + 18008) = 0;
    *(_QWORD *)(result + 18000) = 0;
    *(_QWORD *)(result + 17992) = 0;
    *(_QWORD *)(result + 17984) = 0;
    *(_QWORD *)(result + 17976) = 0;
    *(_QWORD *)(result + 17968) = 0;
    *(_QWORD *)(result + 17960) = 0;
    *(_QWORD *)(result + 17952) = 0;
    *(_QWORD *)(result + 17944) = 0;
    *(_QWORD *)(result + 17936) = 0;
    *(_QWORD *)(result + 17928) = 0;
    *(_QWORD *)(result + 17920) = 0;
    *(_QWORD *)(result + 17912) = 0;
    *(_QWORD *)(result + 17904) = 0;
    *(_QWORD *)(result + 17896) = 0;
    *(_QWORD *)(result + 17888) = 0;
    *(_QWORD *)(result + 17880) = 0;
    *(_QWORD *)(result + 17872) = 0;
    *(_QWORD *)(result + 17864) = 0;
    *(_QWORD *)(result + 17856) = 0;
    *(_QWORD *)(result + 17848) = 0;
    *(_QWORD *)(result + 17840) = 0;
    *(_QWORD *)(result + 17832) = 0;
    *(_QWORD *)(result + 17824) = 0;
    *(_QWORD *)(result + 17816) = 0;
    *(_QWORD *)(result + 17808) = 0;
    *(_QWORD *)(result + 17800) = 0;
    *(_QWORD *)(result + 17792) = 0;
    *(_QWORD *)(result + 17784) = 0;
    *(_QWORD *)(result + 17776) = 0;
    *(_QWORD *)(result + 17768) = 0;
    *(_QWORD *)(result + 17760) = 0;
    *(_QWORD *)(result + 17752) = 0;
    *(_QWORD *)(result + 17744) = 0;
    *(_QWORD *)(result + 17736) = 0;
    *(_QWORD *)(result + 17728) = 0;
    *(_QWORD *)(result + 17720) = 0;
    *(_QWORD *)(result + 17712) = 0;
    *(_QWORD *)(result + 17704) = 0;
    *(_QWORD *)(result + 17696) = 0;
    *(_QWORD *)(result + 17688) = 0;
    *(_QWORD *)(result + 17680) = 0;
    *(_QWORD *)(result + 17672) = 0;
    *(_QWORD *)(result + 17664) = 0;
    *(_QWORD *)(result + 17656) = 0;
    *(_QWORD *)(result + 17648) = 0;
    *(_QWORD *)(result + 17640) = 0;
    *(_QWORD *)(result + 17632) = 0;
    *(_QWORD *)(result + 17624) = 0;
    *(_QWORD *)(result + 17616) = 0;
    *(_QWORD *)(result + 17608) = 0;
    *(_QWORD *)(result + 17600) = 0;
    *(_QWORD *)(result + 17592) = 0;
    *(_QWORD *)(result + 17584) = 0;
    *(_QWORD *)(result + 17576) = 0;
    *(_QWORD *)(result + 17568) = 0;
    *(_QWORD *)(result + 17560) = 0;
    *(_QWORD *)(result + 17552) = 0;
    *(_QWORD *)(result + 17544) = 0;
    *(_QWORD *)(result + 17536) = 0;
    *(_QWORD *)(result + 17528) = 0;
    *(_QWORD *)(result + 17520) = 0;
    *(_QWORD *)(result + 17512) = 0;
    *(_QWORD *)(result + 17504) = 0;
    *(_QWORD *)(result + 17496) = 0;
    *(_QWORD *)(result + 17488) = 0;
    *(_QWORD *)(result + 17480) = 0;
    *(_QWORD *)(result + 17472) = 0;
    *(_QWORD *)(result + 17464) = 0;
    *(_QWORD *)(result + 17456) = 0;
    *(_QWORD *)(result + 17448) = 0;
    *(_QWORD *)(result + 17440) = 0;
    *(_QWORD *)(result + 17432) = 0;
    *(_QWORD *)(result + 17424) = 0;
    *(_QWORD *)(result + 17416) = 0;
    *(_QWORD *)(result + 17408) = 0;
    *(_QWORD *)(result + 17400) = 0;
    *(_QWORD *)(result + 17392) = 0;
    *(_QWORD *)(result + 17384) = 0;
    *(_QWORD *)(result + 17376) = 0;
    *(_QWORD *)(result + 17368) = 0;
    *(_QWORD *)(result + 17360) = 0;
    *(_QWORD *)(result + 17352) = 0;
    *(_QWORD *)(result + 17344) = 0;
    *(_QWORD *)(result + 17336) = 0;
    *(_QWORD *)(result + 17328) = 0;
    *(_QWORD *)(result + 17320) = 0;
    *(_QWORD *)(result + 17312) = 0;
    *(_QWORD *)(result + 17304) = 0;
    *(_QWORD *)(result + 17296) = 0;
    *(_QWORD *)(result + 17288) = 0;
    *(_QWORD *)(result + 17280) = 0;
    *(_QWORD *)(result + 17272) = 0;
    *(_QWORD *)(result + 17264) = 0;
    *(_QWORD *)(result + 17256) = 0;
    *(_QWORD *)(result + 17248) = 0;
    *(_QWORD *)(result + 17240) = 0;
    *(_QWORD *)(result + 17232) = 0;
    *(_QWORD *)(result + 17224) = 0;
    *(_QWORD *)(result + 17216) = 0;
    *(_QWORD *)(result + 17208) = 0;
    *(_QWORD *)(result + 17200) = 0;
    *(_QWORD *)(result + 17192) = 0;
    *(_QWORD *)(result + 17184) = 0;
    *(_QWORD *)(result + 17176) = 0;
    *(_QWORD *)(result + 17168) = 0;
    *(_QWORD *)(result + 17160) = 0;
    *(_QWORD *)(result + 17152) = 0;
    *(_QWORD *)(result + 17144) = 0;
    *(_QWORD *)(result + 17136) = 0;
    *(_QWORD *)(result + 17128) = 0;
    *(_QWORD *)(result + 17120) = 0;
    *(_QWORD *)(result + 17112) = 0;
    *(_QWORD *)(result + 17104) = 0;
    *(_QWORD *)(result + 17096) = 0;
    *(_QWORD *)(result + 17088) = 0;
    *(_QWORD *)(result + 17080) = 0;
    *(_QWORD *)(result + 17072) = 0;
    *(_QWORD *)(result + 17064) = 0;
    *(_QWORD *)(result + 17056) = 0;
    *(_QWORD *)(result + 17048) = 0;
    *(_QWORD *)(result + 17040) = 0;
    *(_QWORD *)(result + 17032) = 0;
    *(_QWORD *)(result + 17024) = 0;
    *(_QWORD *)(result + 17016) = 0;
    *(_QWORD *)(result + 17008) = 0;
    *(_QWORD *)(result + 17000) = 0;
    *(_QWORD *)(result + 16992) = 0;
    *(_QWORD *)(result + 16984) = 0;
    *(_QWORD *)(result + 16976) = 0;
    *(_QWORD *)(result + 16968) = 0;
    *(_QWORD *)(result + 16960) = 0;
    *(_QWORD *)(result + 16952) = 0;
    *(_QWORD *)(result + 16944) = 0;
    *(_QWORD *)(result + 16936) = 0;
    *(_QWORD *)(result + 16928) = 0;
    *(_QWORD *)(result + 16920) = 0;
    *(_QWORD *)(result + 16912) = 0;
    *(_QWORD *)(result + 16904) = 0;
    *(_QWORD *)(result + 16896) = 0;
    *(_QWORD *)(result + 16888) = 0;
    *(_QWORD *)(result + 16880) = 0;
    *(_QWORD *)(result + 16872) = 0;
    *(_QWORD *)(result + 16864) = 0;
    *(_QWORD *)(result + 16856) = 0;
    *(_QWORD *)(result + 16848) = 0;
    *(_QWORD *)(result + 16840) = 0;
    *(_QWORD *)(result + 16832) = 0;
    *(_QWORD *)(result + 16824) = 0;
    *(_QWORD *)(result + 16816) = 0;
    *(_QWORD *)(result + 16808) = 0;
    *(_QWORD *)(result + 16800) = 0;
    *(_QWORD *)(result + 16792) = 0;
    *(_QWORD *)(result + 16784) = 0;
    *(_QWORD *)(result + 16776) = 0;
    *(_QWORD *)(result + 16768) = 0;
    *(_QWORD *)(result + 16760) = 0;
    *(_QWORD *)(result + 16752) = 0;
    *(_QWORD *)(result + 16744) = 0;
    *(_QWORD *)(result + 16736) = 0;
    *(_QWORD *)(result + 16728) = 0;
    *(_QWORD *)(result + 16720) = 0;
    *(_QWORD *)(result + 16712) = 0;
    *(_QWORD *)(result + 16704) = 0;
    *(_QWORD *)(result + 16696) = 0;
    *(_QWORD *)(result + 16688) = 0;
    *(_QWORD *)(result + 16680) = 0;
    *(_QWORD *)(result + 16672) = 0;
    *(_QWORD *)(result + 16664) = 0;
    *(_QWORD *)(result + 16656) = 0;
    *(_QWORD *)(result + 16344) = 0;
    *(_QWORD *)(result + 16392) = 0;
    *(_QWORD *)(result + 0x4000) = 0;
    *(_QWORD *)(result + 16376) = 0;
    *(_QWORD *)(result + 16368) = 0;
    *(_QWORD *)(result + 16360) = 0;
    *(_QWORD *)(result + 16352) = 0;
    *(_QWORD *)(result + 16440) = 0;
    *(_QWORD *)(result + 16432) = 0;
    *(_QWORD *)(result + 16424) = 0;
    *(_QWORD *)(result + 16416) = 0;
    *(_QWORD *)(result + 16408) = 0;
    *(_QWORD *)(result + 16400) = 0;
    *(_QWORD *)(result + 16488) = 0;
    *(_QWORD *)(result + 16480) = 0;
    *(_QWORD *)(result + 16472) = 0;
    *(_QWORD *)(result + 16464) = 0;
    *(_QWORD *)(result + 16456) = 0;
    *(_QWORD *)(result + 16448) = 0;
    *(_QWORD *)(result + 16536) = 0;
    *(_QWORD *)(result + 16528) = 0;
    *(_QWORD *)(result + 16520) = 0;
    *(_QWORD *)(result + 16512) = 0;
    *(_QWORD *)(result + 16504) = 0;
    *(_QWORD *)(result + 16496) = 0;
    *(_QWORD *)(result + 16584) = 0;
    *(_QWORD *)(result + 16576) = 0;
    *(_QWORD *)(result + 16568) = 0;
    *(_QWORD *)(result + 16560) = 0;
    *(_QWORD *)(result + 16552) = 0;
    *(_QWORD *)(result + 16544) = 0;
    *(_QWORD *)(result + 16648) = 0;
    *(_QWORD *)(result + 16624) = 0;
    *(_QWORD *)(result + 16616) = 0;
    *(_QWORD *)(result + 16608) = 0;
    *(_QWORD *)(result + 16600) = 0;
    *(_QWORD *)(result + 16592) = 0;
    *(_QWORD *)(result + 16640) = 0;
    *(_QWORD *)(result + 16632) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 12536) = 0u;
    *(_OWORD *)(result + 12520) = 0u;
    *(_OWORD *)(result + 12504) = 0u;
    *(_OWORD *)(result + 12488) = 0u;
    *(_OWORD *)(result + 12472) = 0u;
    *(_OWORD *)(result + 12456) = 0u;
    *(_OWORD *)(result + 12440) = 0u;
    *(_OWORD *)(result + 12424) = 0u;
    *(_OWORD *)(result + 12408) = 0u;
    *(_OWORD *)(result + 12392) = 0u;
    *(_OWORD *)(result + 12376) = 0u;
    *(_OWORD *)(result + 12360) = 0u;
    *(_OWORD *)(result + 12344) = 0u;
    *(_OWORD *)(result + 12328) = 0u;
    *(_OWORD *)(result + 12312) = 0u;
    *(_OWORD *)(result + 12296) = 0u;
    *(_OWORD *)(result + 8440) = 0u;
    *(_OWORD *)(result + 8424) = 0u;
    *(_OWORD *)(result + 8408) = 0u;
    *(_OWORD *)(result + 8392) = 0u;
    *(_OWORD *)(result + 8376) = 0u;
    *(_OWORD *)(result + 8360) = 0u;
    *(_OWORD *)(result + 8344) = 0u;
    *(_OWORD *)(result + 8328) = 0u;
    *(_OWORD *)(result + 8312) = 0u;
    *(_OWORD *)(result + 8296) = 0u;
    *(_OWORD *)(result + 8280) = 0u;
    *(_OWORD *)(result + 8264) = 0u;
    *(_OWORD *)(result + 8248) = 0u;
    *(_OWORD *)(result + 8232) = 0u;
    *(_OWORD *)(result + 8216) = 0u;
    *(_OWORD *)(result + 8200) = 0u;
    *(_OWORD *)(result + 4344) = 0u;
    *(_OWORD *)(result + 4328) = 0u;
    *(_OWORD *)(result + 4312) = 0u;
    *(_OWORD *)(result + 4296) = 0u;
    *(_OWORD *)(result + 4280) = 0u;
    *(_OWORD *)(result + 4264) = 0u;
    *(_OWORD *)(result + 4248) = 0u;
    *(_OWORD *)(result + 4232) = 0u;
    *(_OWORD *)(result + 4216) = 0u;
    *(_OWORD *)(result + 4200) = 0u;
    *(_OWORD *)(result + 4184) = 0u;
    *(_OWORD *)(result + 4168) = 0u;
    *(_OWORD *)(result + 4152) = 0u;
    *(_OWORD *)(result + 4136) = 0u;
    *(_OWORD *)(result + 4120) = 0u;
    *(_OWORD *)(result + 4104) = 0u;
    *(_OWORD *)(result + 4088) = 0u;
    *(_OWORD *)(result + 4072) = 0u;
    *(_OWORD *)(result + 4056) = 0u;
    *(_OWORD *)(result + 4040) = 0u;
    *(_OWORD *)(result + 4024) = 0u;
    *(_OWORD *)(result + 4008) = 0u;
    *(_OWORD *)(result + 3992) = 0u;
    *(_OWORD *)(result + 3976) = 0u;
    *(_OWORD *)(result + 3960) = 0u;
    *(_OWORD *)(result + 3944) = 0u;
    *(_OWORD *)(result + 3928) = 0u;
    *(_OWORD *)(result + 3912) = 0u;
    *(_OWORD *)(result + 3896) = 0u;
    *(_OWORD *)(result + 3880) = 0u;
    *(_OWORD *)(result + 3864) = 0u;
    *(_OWORD *)(result + 3848) = 0u;
    *(_OWORD *)(result + 3832) = 0u;
    *(_OWORD *)(result + 3816) = 0u;
    *(_OWORD *)(result + 3800) = 0u;
    *(_OWORD *)(result + 3784) = 0u;
    *(_OWORD *)(result + 3768) = 0u;
    *(_OWORD *)(result + 3752) = 0u;
    *(_OWORD *)(result + 3736) = 0u;
    *(_OWORD *)(result + 3720) = 0u;
    *(_OWORD *)(result + 3704) = 0u;
    *(_OWORD *)(result + 3688) = 0u;
    *(_OWORD *)(result + 3672) = 0u;
    *(_OWORD *)(result + 3656) = 0u;
    *(_OWORD *)(result + 3640) = 0u;
    *(_OWORD *)(result + 3624) = 0u;
    *(_OWORD *)(result + 3608) = 0u;
    *(_OWORD *)(result + 3592) = 0u;
    *(_OWORD *)(result + 3576) = 0u;
    *(_OWORD *)(result + 3560) = 0u;
    *(_OWORD *)(result + 3544) = 0u;
    *(_OWORD *)(result + 3528) = 0u;
    *(_OWORD *)(result + 3512) = 0u;
    *(_OWORD *)(result + 3496) = 0u;
    *(_OWORD *)(result + 3480) = 0u;
    *(_OWORD *)(result + 3464) = 0u;
    *(_OWORD *)(result + 3448) = 0u;
    *(_OWORD *)(result + 3432) = 0u;
    *(_OWORD *)(result + 3416) = 0u;
    *(_OWORD *)(result + 3400) = 0u;
    *(_OWORD *)(result + 3384) = 0u;
    *(_OWORD *)(result + 3368) = 0u;
    *(_OWORD *)(result + 3352) = 0u;
    *(_OWORD *)(result + 3336) = 0u;
    *(_OWORD *)(result + 3320) = 0u;
    *(_OWORD *)(result + 3304) = 0u;
    *(_OWORD *)(result + 3288) = 0u;
    *(_OWORD *)(result + 3272) = 0u;
    *(_OWORD *)(result + 3256) = 0u;
    *(_OWORD *)(result + 3240) = 0u;
    *(_OWORD *)(result + 3224) = 0u;
    *(_OWORD *)(result + 3208) = 0u;
    *(_OWORD *)(result + 3192) = 0u;
    *(_OWORD *)(result + 3176) = 0u;
    *(_OWORD *)(result + 3160) = 0u;
    *(_OWORD *)(result + 3144) = 0u;
    *(_OWORD *)(result + 3128) = 0u;
    *(_OWORD *)(result + 3112) = 0u;
    *(_OWORD *)(result + 3096) = 0u;
    *(_OWORD *)(result + 3080) = 0u;
    *(_OWORD *)(result + 3064) = 0u;
    *(_OWORD *)(result + 3048) = 0u;
    *(_OWORD *)(result + 3032) = 0u;
    *(_OWORD *)(result + 3016) = 0u;
    *(_OWORD *)(result + 3000) = 0u;
    *(_OWORD *)(result + 2984) = 0u;
    *(_OWORD *)(result + 2968) = 0u;
    *(_OWORD *)(result + 2952) = 0u;
    *(_OWORD *)(result + 2936) = 0u;
    *(_OWORD *)(result + 2920) = 0u;
    *(_OWORD *)(result + 2904) = 0u;
    *(_OWORD *)(result + 2888) = 0u;
    *(_OWORD *)(result + 2872) = 0u;
    *(_OWORD *)(result + 2856) = 0u;
    *(_OWORD *)(result + 2840) = 0u;
    *(_OWORD *)(result + 2824) = 0u;
    *(_OWORD *)(result + 2808) = 0u;
    *(_OWORD *)(result + 2792) = 0u;
    *(_OWORD *)(result + 2776) = 0u;
    *(_OWORD *)(result + 2760) = 0u;
    *(_OWORD *)(result + 2744) = 0u;
    *(_OWORD *)(result + 2728) = 0u;
    *(_OWORD *)(result + 2712) = 0u;
    *(_OWORD *)(result + 2696) = 0u;
    *(_OWORD *)(result + 2680) = 0u;
    *(_OWORD *)(result + 2664) = 0u;
    *(_OWORD *)(result + 2648) = 0u;
    *(_OWORD *)(result + 2632) = 0u;
    *(_OWORD *)(result + 2616) = 0u;
    *(_OWORD *)(result + 2600) = 0u;
    *(_OWORD *)(result + 2584) = 0u;
    *(_OWORD *)(result + 2568) = 0u;
    *(_OWORD *)(result + 2552) = 0u;
    *(_OWORD *)(result + 2536) = 0u;
    *(_OWORD *)(result + 2520) = 0u;
    *(_OWORD *)(result + 2504) = 0u;
    *(_OWORD *)(result + 2488) = 0u;
    *(_OWORD *)(result + 2472) = 0u;
    *(_OWORD *)(result + 2456) = 0u;
    *(_OWORD *)(result + 2440) = 0u;
    *(_OWORD *)(result + 2424) = 0u;
    *(_OWORD *)(result + 2408) = 0u;
    *(_OWORD *)(result + 2392) = 0u;
    *(_OWORD *)(result + 2376) = 0u;
    *(_OWORD *)(result + 2360) = 0u;
    *(_OWORD *)(result + 2344) = 0u;
    *(_OWORD *)(result + 2328) = 0u;
    *(_OWORD *)(result + 2312) = 0u;
    *(_OWORD *)(result + 2296) = 0u;
    *(_OWORD *)(result + 2280) = 0u;
    *(_OWORD *)(result + 2264) = 0u;
    *(_OWORD *)(result + 2248) = 0u;
    *(_OWORD *)(result + 2232) = 0u;
    *(_OWORD *)(result + 2216) = 0u;
    *(_OWORD *)(result + 2200) = 0u;
    *(_OWORD *)(result + 2184) = 0u;
    *(_OWORD *)(result + 2168) = 0u;
    *(_OWORD *)(result + 2152) = 0u;
    *(_OWORD *)(result + 2136) = 0u;
    *(_OWORD *)(result + 2120) = 0u;
    *(_OWORD *)(result + 2104) = 0u;
    *(_OWORD *)(result + 2088) = 0u;
    *(_OWORD *)(result + 2072) = 0u;
    *(_OWORD *)(result + 2056) = 0u;
    *(_OWORD *)(result + 2040) = 0u;
    *(_OWORD *)(result + 2024) = 0u;
    *(_OWORD *)(result + 2008) = 0u;
    *(_OWORD *)(result + 1992) = 0u;
    *(_OWORD *)(result + 1976) = 0u;
    *(_OWORD *)(result + 1960) = 0u;
    *(_OWORD *)(result + 1944) = 0u;
    *(_OWORD *)(result + 1928) = 0u;
    *(_OWORD *)(result + 1912) = 0u;
    *(_OWORD *)(result + 1896) = 0u;
    *(_OWORD *)(result + 1880) = 0u;
    *(_OWORD *)(result + 1864) = 0u;
    *(_OWORD *)(result + 1848) = 0u;
    *(_OWORD *)(result + 1832) = 0u;
    *(_OWORD *)(result + 1816) = 0u;
    *(_OWORD *)(result + 1800) = 0u;
    *(_OWORD *)(result + 1784) = 0u;
    *(_OWORD *)(result + 1768) = 0u;
    *(_OWORD *)(result + 1752) = 0u;
    *(_OWORD *)(result + 1736) = 0u;
    *(_OWORD *)(result + 1720) = 0u;
    *(_OWORD *)(result + 1704) = 0u;
    *(_OWORD *)(result + 1688) = 0u;
    *(_OWORD *)(result + 1672) = 0u;
    *(_OWORD *)(result + 1656) = 0u;
    *(_OWORD *)(result + 1640) = 0u;
    *(_OWORD *)(result + 1624) = 0u;
    *(_OWORD *)(result + 1608) = 0u;
    *(_OWORD *)(result + 1592) = 0u;
    *(_OWORD *)(result + 1576) = 0u;
    *(_OWORD *)(result + 1560) = 0u;
    *(_OWORD *)(result + 1544) = 0u;
    *(_OWORD *)(result + 1528) = 0u;
    *(_OWORD *)(result + 1512) = 0u;
    *(_OWORD *)(result + 1496) = 0u;
    *(_OWORD *)(result + 1480) = 0u;
    *(_OWORD *)(result + 1464) = 0u;
    *(_OWORD *)(result + 1448) = 0u;
    *(_OWORD *)(result + 1432) = 0u;
    *(_OWORD *)(result + 1416) = 0u;
    *(_OWORD *)(result + 1400) = 0u;
    *(_OWORD *)(result + 1384) = 0u;
    *(_OWORD *)(result + 1368) = 0u;
    *(_OWORD *)(result + 1352) = 0u;
    *(_OWORD *)(result + 1336) = 0u;
    *(_OWORD *)(result + 1320) = 0u;
    *(_OWORD *)(result + 1304) = 0u;
    *(_OWORD *)(result + 1288) = 0u;
    *(_OWORD *)(result + 1272) = 0u;
    *(_OWORD *)(result + 1256) = 0u;
    *(_OWORD *)(result + 1240) = 0u;
    *(_OWORD *)(result + 1224) = 0u;
    *(_OWORD *)(result + 1208) = 0u;
    *(_OWORD *)(result + 1192) = 0u;
    *(_OWORD *)(result + 1176) = 0u;
    *(_OWORD *)(result + 1160) = 0u;
    *(_OWORD *)(result + 1144) = 0u;
    *(_OWORD *)(result + 1128) = 0u;
    *(_OWORD *)(result + 1112) = 0u;
    *(_OWORD *)(result + 1096) = 0u;
    *(_OWORD *)(result + 1080) = 0u;
    *(_OWORD *)(result + 1064) = 0u;
    *(_OWORD *)(result + 1048) = 0u;
    *(_OWORD *)(result + 1032) = 0u;
    *(_OWORD *)(result + 12840) = 0u;
    *(_OWORD *)(result + 12792) = 0u;
    *(_OWORD *)(result + 12776) = 0u;
    *(_OWORD *)(result + 12760) = 0u;
    *(_OWORD *)(result + 12744) = 0u;
    *(_OWORD *)(result + 12728) = 0u;
    *(_OWORD *)(result + 12712) = 0u;
    *(_OWORD *)(result + 12696) = 0u;
    *(_OWORD *)(result + 12680) = 0u;
    *(_OWORD *)(result + 12664) = 0u;
    *(_OWORD *)(result + 12648) = 0u;
    *(_OWORD *)(result + 12632) = 0u;
    *(_OWORD *)(result + 12616) = 0u;
    *(_OWORD *)(result + 12600) = 0u;
    *(_OWORD *)(result + 12584) = 0u;
    *(_OWORD *)(result + 12568) = 0u;
    *(_OWORD *)(result + 12552) = 0u;
    *(_OWORD *)(result + 8744) = 0u;
    *(_OWORD *)(result + 8728) = 0u;
    *(_OWORD *)(result + 8712) = 0u;
    *(_OWORD *)(result + 8840) = 0u;
    *(_OWORD *)(result + 8824) = 0u;
    *(_OWORD *)(result + 8808) = 0u;
    *(_OWORD *)(result + 8792) = 0u;
    *(_OWORD *)(result + 8776) = 0u;
    *(_OWORD *)(result + 8760) = 0u;
    *(_OWORD *)(result + 8952) = 0u;
    *(_OWORD *)(result + 8936) = 0u;
    *(_OWORD *)(result + 8904) = 0u;
    *(_OWORD *)(result + 8888) = 0u;
    *(_OWORD *)(result + 8872) = 0u;
    *(_OWORD *)(result + 8856) = 0u;
    *(_OWORD *)(result + 8920) = 0u;
    *(_OWORD *)(result + 9000) = 0u;
    *(_OWORD *)(result + 8984) = 0u;
    *(_OWORD *)(result + 8968) = 0u;
    *(_OWORD *)(result + 9096) = 0u;
    *(_OWORD *)(result + 9080) = 0u;
    *(_OWORD *)(result + 9064) = 0u;
    *(_OWORD *)(result + 9048) = 0u;
    *(_OWORD *)(result + 9032) = 0u;
    *(_OWORD *)(result + 9016) = 0u;
    *(_OWORD *)(result + 9208) = 0u;
    *(_OWORD *)(result + 9192) = 0u;
    *(_OWORD *)(result + 9160) = 0u;
    *(_OWORD *)(result + 9144) = 0u;
    *(_OWORD *)(result + 9128) = 0u;
    *(_OWORD *)(result + 9112) = 0u;
    *(_OWORD *)(result + 9176) = 0u;
    *(_OWORD *)(result + 9256) = 0u;
    *(_OWORD *)(result + 9240) = 0u;
    *(_OWORD *)(result + 9224) = 0u;
    *(_OWORD *)(result + 9352) = 0u;
    *(_OWORD *)(result + 9336) = 0u;
    *(_OWORD *)(result + 9320) = 0u;
    *(_OWORD *)(result + 9304) = 0u;
    *(_OWORD *)(result + 9288) = 0u;
    *(_OWORD *)(result + 9272) = 0u;
    *(_OWORD *)(result + 9464) = 0u;
    *(_OWORD *)(result + 9448) = 0u;
    *(_OWORD *)(result + 9416) = 0u;
    *(_OWORD *)(result + 9400) = 0u;
    *(_OWORD *)(result + 9384) = 0u;
    *(_OWORD *)(result + 9368) = 0u;
    *(_OWORD *)(result + 9432) = 0u;
    *(_OWORD *)(result + 9512) = 0u;
    *(_OWORD *)(result + 9496) = 0u;
    *(_OWORD *)(result + 9480) = 0u;
    *(_OWORD *)(result + 9608) = 0u;
    *(_OWORD *)(result + 9592) = 0u;
    *(_OWORD *)(result + 9576) = 0u;
    *(_OWORD *)(result + 9560) = 0u;
    *(_OWORD *)(result + 9544) = 0u;
    *(_OWORD *)(result + 9528) = 0u;
    *(_OWORD *)(result + 9720) = 0u;
    *(_OWORD *)(result + 9704) = 0u;
    *(_OWORD *)(result + 9672) = 0u;
    *(_OWORD *)(result + 9656) = 0u;
    *(_OWORD *)(result + 9640) = 0u;
    *(_OWORD *)(result + 9624) = 0u;
    *(_OWORD *)(result + 9688) = 0u;
    *(_OWORD *)(result + 9768) = 0u;
    *(_OWORD *)(result + 9752) = 0u;
    *(_OWORD *)(result + 9736) = 0u;
    *(_OWORD *)(result + 9864) = 0u;
    *(_OWORD *)(result + 9848) = 0u;
    *(_OWORD *)(result + 9832) = 0u;
    *(_OWORD *)(result + 9816) = 0u;
    *(_OWORD *)(result + 9800) = 0u;
    *(_OWORD *)(result + 9784) = 0u;
    *(_OWORD *)(result + 9976) = 0u;
    *(_OWORD *)(result + 9960) = 0u;
    *(_OWORD *)(result + 9928) = 0u;
    *(_OWORD *)(result + 9912) = 0u;
    *(_OWORD *)(result + 9896) = 0u;
    *(_OWORD *)(result + 9880) = 0u;
    *(_OWORD *)(result + 9944) = 0u;
    *(_OWORD *)(result + 10024) = 0u;
    *(_OWORD *)(result + 10008) = 0u;
    *(_OWORD *)(result + 9992) = 0u;
    *(_OWORD *)(result + 10120) = 0u;
    *(_OWORD *)(result + 10104) = 0u;
    *(_OWORD *)(result + 10088) = 0u;
    *(_OWORD *)(result + 10072) = 0u;
    *(_OWORD *)(result + 10056) = 0u;
    *(_OWORD *)(result + 10040) = 0u;
    *(_OWORD *)(result + 10232) = 0u;
    *(_OWORD *)(result + 10216) = 0u;
    *(_OWORD *)(result + 10184) = 0u;
    *(_OWORD *)(result + 10168) = 0u;
    *(_OWORD *)(result + 10152) = 0u;
    *(_OWORD *)(result + 10136) = 0u;
    *(_OWORD *)(result + 10200) = 0u;
    *(_OWORD *)(result + 10280) = 0u;
    *(_OWORD *)(result + 10264) = 0u;
    *(_OWORD *)(result + 10248) = 0u;
    *(_OWORD *)(result + 10376) = 0u;
    *(_OWORD *)(result + 10360) = 0u;
    *(_OWORD *)(result + 10344) = 0u;
    *(_OWORD *)(result + 10328) = 0u;
    *(_OWORD *)(result + 10312) = 0u;
    *(_OWORD *)(result + 10296) = 0u;
    *(_OWORD *)(result + 10488) = 0u;
    *(_OWORD *)(result + 10472) = 0u;
    *(_OWORD *)(result + 10440) = 0u;
    *(_OWORD *)(result + 10424) = 0u;
    *(_OWORD *)(result + 10408) = 0u;
    *(_OWORD *)(result + 10392) = 0u;
    *(_OWORD *)(result + 10456) = 0u;
    *(_OWORD *)(result + 10536) = 0u;
    *(_OWORD *)(result + 10520) = 0u;
    *(_OWORD *)(result + 10504) = 0u;
    *(_OWORD *)(result + 10632) = 0u;
    *(_OWORD *)(result + 10616) = 0u;
    *(_OWORD *)(result + 10600) = 0u;
    *(_OWORD *)(result + 10584) = 0u;
    *(_OWORD *)(result + 10568) = 0u;
    *(_OWORD *)(result + 10552) = 0u;
    *(_OWORD *)(result + 10744) = 0u;
    *(_OWORD *)(result + 10728) = 0u;
    *(_OWORD *)(result + 10696) = 0u;
    *(_OWORD *)(result + 10680) = 0u;
    *(_OWORD *)(result + 10664) = 0u;
    *(_OWORD *)(result + 10648) = 0u;
    *(_OWORD *)(result + 10712) = 0u;
    *(_OWORD *)(result + 10792) = 0u;
    *(_OWORD *)(result + 10776) = 0u;
    *(_OWORD *)(result + 10760) = 0u;
    *(_OWORD *)(result + 10888) = 0u;
    *(_OWORD *)(result + 10872) = 0u;
    *(_OWORD *)(result + 10856) = 0u;
    *(_OWORD *)(result + 10840) = 0u;
    *(_OWORD *)(result + 10824) = 0u;
    *(_OWORD *)(result + 10808) = 0u;
    *(_OWORD *)(result + 11000) = 0u;
    *(_OWORD *)(result + 10984) = 0u;
    *(_OWORD *)(result + 10952) = 0u;
    *(_OWORD *)(result + 10936) = 0u;
    *(_OWORD *)(result + 10920) = 0u;
    *(_OWORD *)(result + 10904) = 0u;
    *(_OWORD *)(result + 10968) = 0u;
    *(_OWORD *)(result + 11048) = 0u;
    *(_OWORD *)(result + 11032) = 0u;
    *(_OWORD *)(result + 11016) = 0u;
    *(_OWORD *)(result + 11144) = 0u;
    *(_OWORD *)(result + 11128) = 0u;
    *(_OWORD *)(result + 11112) = 0u;
    *(_OWORD *)(result + 11096) = 0u;
    *(_OWORD *)(result + 11080) = 0u;
    *(_OWORD *)(result + 11064) = 0u;
    *(_OWORD *)(result + 11256) = 0u;
    *(_OWORD *)(result + 11240) = 0u;
    *(_OWORD *)(result + 11208) = 0u;
    *(_OWORD *)(result + 11192) = 0u;
    *(_OWORD *)(result + 11176) = 0u;
    *(_OWORD *)(result + 11160) = 0u;
    *(_OWORD *)(result + 11224) = 0u;
    *(_OWORD *)(result + 11304) = 0u;
    *(_OWORD *)(result + 11288) = 0u;
    *(_OWORD *)(result + 11272) = 0u;
    *(_OWORD *)(result + 11400) = 0u;
    *(_OWORD *)(result + 11384) = 0u;
    *(_OWORD *)(result + 11368) = 0u;
    *(_OWORD *)(result + 11352) = 0u;
    *(_OWORD *)(result + 11336) = 0u;
    *(_OWORD *)(result + 11320) = 0u;
    *(_OWORD *)(result + 11512) = 0u;
    *(_OWORD *)(result + 11496) = 0u;
    *(_OWORD *)(result + 11464) = 0u;
    *(_OWORD *)(result + 11448) = 0u;
    *(_OWORD *)(result + 11432) = 0u;
    *(_OWORD *)(result + 11416) = 0u;
    *(_OWORD *)(result + 11480) = 0u;
    *(_OWORD *)(result + 11560) = 0u;
    *(_OWORD *)(result + 11544) = 0u;
    *(_OWORD *)(result + 11528) = 0u;
    *(_OWORD *)(result + 11656) = 0u;
    *(_OWORD *)(result + 11640) = 0u;
    *(_OWORD *)(result + 11624) = 0u;
    *(_OWORD *)(result + 11608) = 0u;
    *(_OWORD *)(result + 11592) = 0u;
    *(_OWORD *)(result + 11576) = 0u;
    *(_OWORD *)(result + 11768) = 0u;
    *(_OWORD *)(result + 11752) = 0u;
    *(_OWORD *)(result + 11720) = 0u;
    *(_OWORD *)(result + 11704) = 0u;
    *(_OWORD *)(result + 11688) = 0u;
    *(_OWORD *)(result + 11672) = 0u;
    *(_OWORD *)(result + 11736) = 0u;
    *(_OWORD *)(result + 11816) = 0u;
    *(_OWORD *)(result + 11800) = 0u;
    *(_OWORD *)(result + 11784) = 0u;
    *(_OWORD *)(result + 11912) = 0u;
    *(_OWORD *)(result + 11896) = 0u;
    *(_OWORD *)(result + 11880) = 0u;
    *(_OWORD *)(result + 11864) = 0u;
    *(_OWORD *)(result + 11848) = 0u;
    *(_OWORD *)(result + 11832) = 0u;
    *(_OWORD *)(result + 12024) = 0u;
    *(_OWORD *)(result + 12008) = 0u;
    *(_OWORD *)(result + 11976) = 0u;
    *(_OWORD *)(result + 11960) = 0u;
    *(_OWORD *)(result + 11944) = 0u;
    *(_OWORD *)(result + 11928) = 0u;
    *(_OWORD *)(result + 11992) = 0u;
    *(_OWORD *)(result + 12072) = 0u;
    *(_OWORD *)(result + 12056) = 0u;
    *(_OWORD *)(result + 12040) = 0u;
    *(_OWORD *)(result + 12168) = 0u;
    *(_OWORD *)(result + 12152) = 0u;
    *(_OWORD *)(result + 12136) = 0u;
    *(_OWORD *)(result + 12120) = 0u;
    *(_OWORD *)(result + 12104) = 0u;
    *(_OWORD *)(result + 12088) = 0u;
    *(_OWORD *)(result + 12248) = 0u;
    *(_OWORD *)(result + 12232) = 0u;
    *(_OWORD *)(result + 12216) = 0u;
    *(_OWORD *)(result + 12200) = 0u;
    *(_OWORD *)(result + 12184) = 0u;
    *(_OWORD *)(result + 12280) = 0u;
    *(_OWORD *)(result + 12264) = 0u;
    *(_OWORD *)(result + 1016) = 0u;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 12904) = 0u;
    *(_OWORD *)(result + 12888) = 0u;
    *(_OWORD *)(result + 12872) = 0u;
    *(_OWORD *)(result + 12856) = 0u;
    *(_OWORD *)(result + 12824) = 0u;
    *(_OWORD *)(result + 12808) = 0u;
    *(_OWORD *)(result + 13048) = 0u;
    *(_OWORD *)(result + 13032) = 0u;
    *(_OWORD *)(result + 12968) = 0u;
    *(_OWORD *)(result + 12952) = 0u;
    *(_OWORD *)(result + 12936) = 0u;
    *(_OWORD *)(result + 12920) = 0u;
    *(_OWORD *)(result + 13016) = 0u;
    *(_OWORD *)(result + 13000) = 0u;
    *(_OWORD *)(result + 12984) = 0u;
    *(_OWORD *)(result + 13064) = 0u;
    *(_OWORD *)(result + 13160) = 0u;
    *(_OWORD *)(result + 13144) = 0u;
    *(_OWORD *)(result + 13128) = 0u;
    *(_OWORD *)(result + 13112) = 0u;
    *(_OWORD *)(result + 13096) = 0u;
    *(_OWORD *)(result + 13080) = 0u;
    *(_OWORD *)(result + 13304) = 0u;
    *(_OWORD *)(result + 13288) = 0u;
    *(_OWORD *)(result + 13224) = 0u;
    *(_OWORD *)(result + 13208) = 0u;
    *(_OWORD *)(result + 13192) = 0u;
    *(_OWORD *)(result + 13176) = 0u;
    *(_OWORD *)(result + 13272) = 0u;
    *(_OWORD *)(result + 13256) = 0u;
    *(_OWORD *)(result + 13240) = 0u;
    *(_OWORD *)(result + 13320) = 0u;
    *(_OWORD *)(result + 13416) = 0u;
    *(_OWORD *)(result + 13400) = 0u;
    *(_OWORD *)(result + 13384) = 0u;
    *(_OWORD *)(result + 13368) = 0u;
    *(_OWORD *)(result + 13352) = 0u;
    *(_OWORD *)(result + 13336) = 0u;
    *(_OWORD *)(result + 13560) = 0u;
    *(_OWORD *)(result + 13544) = 0u;
    *(_OWORD *)(result + 13480) = 0u;
    *(_OWORD *)(result + 13464) = 0u;
    *(_OWORD *)(result + 13448) = 0u;
    *(_OWORD *)(result + 13432) = 0u;
    *(_OWORD *)(result + 13528) = 0u;
    *(_OWORD *)(result + 13512) = 0u;
    *(_OWORD *)(result + 13496) = 0u;
    *(_OWORD *)(result + 13576) = 0u;
    *(_OWORD *)(result + 13672) = 0u;
    *(_OWORD *)(result + 13656) = 0u;
    *(_OWORD *)(result + 13640) = 0u;
    *(_OWORD *)(result + 13624) = 0u;
    *(_OWORD *)(result + 13608) = 0u;
    *(_OWORD *)(result + 13592) = 0u;
    *(_OWORD *)(result + 13816) = 0u;
    *(_OWORD *)(result + 13800) = 0u;
    *(_OWORD *)(result + 13736) = 0u;
    *(_OWORD *)(result + 13720) = 0u;
    *(_OWORD *)(result + 13704) = 0u;
    *(_OWORD *)(result + 13688) = 0u;
    *(_OWORD *)(result + 13784) = 0u;
    *(_OWORD *)(result + 13768) = 0u;
    *(_OWORD *)(result + 13752) = 0u;
    *(_OWORD *)(result + 13832) = 0u;
    *(_OWORD *)(result + 13928) = 0u;
    *(_OWORD *)(result + 13912) = 0u;
    *(_OWORD *)(result + 13896) = 0u;
    *(_OWORD *)(result + 13880) = 0u;
    *(_OWORD *)(result + 13864) = 0u;
    *(_OWORD *)(result + 13848) = 0u;
    *(_OWORD *)(result + 14072) = 0u;
    *(_OWORD *)(result + 14056) = 0u;
    *(_OWORD *)(result + 13992) = 0u;
    *(_OWORD *)(result + 13976) = 0u;
    *(_OWORD *)(result + 13960) = 0u;
    *(_OWORD *)(result + 13944) = 0u;
    *(_OWORD *)(result + 14040) = 0u;
    *(_OWORD *)(result + 14024) = 0u;
    *(_OWORD *)(result + 14008) = 0u;
    *(_OWORD *)(result + 14088) = 0u;
    *(_OWORD *)(result + 14184) = 0u;
    *(_OWORD *)(result + 14168) = 0u;
    *(_OWORD *)(result + 14152) = 0u;
    *(_OWORD *)(result + 14136) = 0u;
    *(_OWORD *)(result + 14120) = 0u;
    *(_OWORD *)(result + 14104) = 0u;
    *(_OWORD *)(result + 14328) = 0u;
    *(_OWORD *)(result + 14312) = 0u;
    *(_OWORD *)(result + 14248) = 0u;
    *(_OWORD *)(result + 14232) = 0u;
    *(_OWORD *)(result + 14216) = 0u;
    *(_OWORD *)(result + 14200) = 0u;
    *(_OWORD *)(result + 14296) = 0u;
    *(_OWORD *)(result + 14280) = 0u;
    *(_OWORD *)(result + 14264) = 0u;
    *(_OWORD *)(result + 14344) = 0u;
    *(_OWORD *)(result + 14440) = 0u;
    *(_OWORD *)(result + 14424) = 0u;
    *(_OWORD *)(result + 14408) = 0u;
    *(_OWORD *)(result + 14392) = 0u;
    *(_OWORD *)(result + 14376) = 0u;
    *(_OWORD *)(result + 14360) = 0u;
    *(_OWORD *)(result + 14584) = 0u;
    *(_OWORD *)(result + 14568) = 0u;
    *(_OWORD *)(result + 14504) = 0u;
    *(_OWORD *)(result + 14488) = 0u;
    *(_OWORD *)(result + 14472) = 0u;
    *(_OWORD *)(result + 14456) = 0u;
    *(_OWORD *)(result + 14552) = 0u;
    *(_OWORD *)(result + 14536) = 0u;
    *(_OWORD *)(result + 14520) = 0u;
    *(_OWORD *)(result + 14600) = 0u;
    *(_OWORD *)(result + 14696) = 0u;
    *(_OWORD *)(result + 14680) = 0u;
    *(_OWORD *)(result + 14664) = 0u;
    *(_OWORD *)(result + 14648) = 0u;
    *(_OWORD *)(result + 14632) = 0u;
    *(_OWORD *)(result + 14616) = 0u;
    *(_OWORD *)(result + 14840) = 0u;
    *(_OWORD *)(result + 14824) = 0u;
    *(_OWORD *)(result + 14760) = 0u;
    *(_OWORD *)(result + 14744) = 0u;
    *(_OWORD *)(result + 14728) = 0u;
    *(_OWORD *)(result + 14712) = 0u;
    *(_OWORD *)(result + 14808) = 0u;
    *(_OWORD *)(result + 14792) = 0u;
    *(_OWORD *)(result + 14776) = 0u;
    *(_OWORD *)(result + 14856) = 0u;
    *(_OWORD *)(result + 14952) = 0u;
    *(_OWORD *)(result + 14936) = 0u;
    *(_OWORD *)(result + 14920) = 0u;
    *(_OWORD *)(result + 14904) = 0u;
    *(_OWORD *)(result + 14888) = 0u;
    *(_OWORD *)(result + 14872) = 0u;
    *(_OWORD *)(result + 15096) = 0u;
    *(_OWORD *)(result + 15080) = 0u;
    *(_OWORD *)(result + 15016) = 0u;
    *(_OWORD *)(result + 15000) = 0u;
    *(_OWORD *)(result + 14984) = 0u;
    *(_OWORD *)(result + 14968) = 0u;
    *(_OWORD *)(result + 15064) = 0u;
    *(_OWORD *)(result + 15048) = 0u;
    *(_OWORD *)(result + 15032) = 0u;
    *(_OWORD *)(result + 15112) = 0u;
    *(_OWORD *)(result + 15208) = 0u;
    *(_OWORD *)(result + 15192) = 0u;
    *(_OWORD *)(result + 15176) = 0u;
    *(_OWORD *)(result + 15160) = 0u;
    *(_OWORD *)(result + 15144) = 0u;
    *(_OWORD *)(result + 15128) = 0u;
    *(_OWORD *)(result + 15352) = 0u;
    *(_OWORD *)(result + 15336) = 0u;
    *(_OWORD *)(result + 15272) = 0u;
    *(_OWORD *)(result + 15256) = 0u;
    *(_OWORD *)(result + 15240) = 0u;
    *(_OWORD *)(result + 15224) = 0u;
    *(_OWORD *)(result + 15320) = 0u;
    *(_OWORD *)(result + 15304) = 0u;
    *(_OWORD *)(result + 15288) = 0u;
    *(_OWORD *)(result + 15368) = 0u;
    *(_OWORD *)(result + 15464) = 0u;
    *(_OWORD *)(result + 15448) = 0u;
    *(_OWORD *)(result + 15432) = 0u;
    *(_OWORD *)(result + 15416) = 0u;
    *(_OWORD *)(result + 15400) = 0u;
    *(_OWORD *)(result + 15384) = 0u;
    *(_OWORD *)(result + 15608) = 0u;
    *(_OWORD *)(result + 15592) = 0u;
    *(_OWORD *)(result + 15528) = 0u;
    *(_OWORD *)(result + 15512) = 0u;
    *(_OWORD *)(result + 15496) = 0u;
    *(_OWORD *)(result + 15480) = 0u;
    *(_OWORD *)(result + 15576) = 0u;
    *(_OWORD *)(result + 15560) = 0u;
    *(_OWORD *)(result + 15544) = 0u;
    *(_OWORD *)(result + 15624) = 0u;
    *(_OWORD *)(result + 15720) = 0u;
    *(_OWORD *)(result + 15704) = 0u;
    *(_OWORD *)(result + 15688) = 0u;
    *(_OWORD *)(result + 15672) = 0u;
    *(_OWORD *)(result + 15656) = 0u;
    *(_OWORD *)(result + 15640) = 0u;
    *(_OWORD *)(result + 15864) = 0u;
    *(_OWORD *)(result + 15848) = 0u;
    *(_OWORD *)(result + 15784) = 0u;
    *(_OWORD *)(result + 15768) = 0u;
    *(_OWORD *)(result + 15752) = 0u;
    *(_OWORD *)(result + 15736) = 0u;
    *(_OWORD *)(result + 15832) = 0u;
    *(_OWORD *)(result + 15816) = 0u;
    *(_OWORD *)(result + 15800) = 0u;
    *(_OWORD *)(result + 15880) = 0u;
    *(_OWORD *)(result + 15976) = 0u;
    *(_OWORD *)(result + 15960) = 0u;
    *(_OWORD *)(result + 15944) = 0u;
    *(_OWORD *)(result + 15928) = 0u;
    *(_OWORD *)(result + 15912) = 0u;
    *(_OWORD *)(result + 15896) = 0u;
    *(_OWORD *)(result + 16120) = 0u;
    *(_OWORD *)(result + 16104) = 0u;
    *(_OWORD *)(result + 16040) = 0u;
    *(_OWORD *)(result + 16024) = 0u;
    *(_OWORD *)(result + 16008) = 0u;
    *(_OWORD *)(result + 15992) = 0u;
    *(_OWORD *)(result + 16088) = 0u;
    *(_OWORD *)(result + 16072) = 0u;
    *(_OWORD *)(result + 16056) = 0u;
    *(_OWORD *)(result + 16136) = 0u;
    *(_OWORD *)(result + 16232) = 0u;
    *(_OWORD *)(result + 16216) = 0u;
    *(_OWORD *)(result + 16200) = 0u;
    *(_OWORD *)(result + 16184) = 0u;
    *(_OWORD *)(result + 16168) = 0u;
    *(_OWORD *)(result + 16152) = 0u;
    *(_OWORD *)(result + 16328) = 0u;
    *(_OWORD *)(result + 16312) = 0u;
    *(_OWORD *)(result + 16296) = 0u;
    *(_OWORD *)(result + 16280) = 0u;
    *(_OWORD *)(result + 16264) = 0u;
    *(_OWORD *)(result + 16248) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 8696) = 0u;
    *(_OWORD *)(result + 8680) = 0u;
    *(_OWORD *)(result + 8664) = 0u;
    *(_OWORD *)(result + 8648) = 0u;
    *(_OWORD *)(result + 8632) = 0u;
    *(_OWORD *)(result + 8616) = 0u;
    *(_OWORD *)(result + 8600) = 0u;
    *(_OWORD *)(result + 8584) = 0u;
    *(_OWORD *)(result + 8568) = 0u;
    *(_OWORD *)(result + 8552) = 0u;
    *(_OWORD *)(result + 8536) = 0u;
    *(_OWORD *)(result + 8520) = 0u;
    *(_OWORD *)(result + 8504) = 0u;
    *(_OWORD *)(result + 8488) = 0u;
    *(_OWORD *)(result + 8472) = 0u;
    *(_OWORD *)(result + 8456) = 0u;
    *(_OWORD *)(result + 8184) = 0u;
    *(_OWORD *)(result + 8168) = 0u;
    *(_OWORD *)(result + 8152) = 0u;
    *(_OWORD *)(result + 8136) = 0u;
    *(_OWORD *)(result + 8120) = 0u;
    *(_OWORD *)(result + 8104) = 0u;
    *(_OWORD *)(result + 8088) = 0u;
    *(_OWORD *)(result + 8072) = 0u;
    *(_OWORD *)(result + 8056) = 0u;
    *(_OWORD *)(result + 8040) = 0u;
    *(_OWORD *)(result + 8024) = 0u;
    *(_OWORD *)(result + 8008) = 0u;
    *(_OWORD *)(result + 7992) = 0u;
    *(_OWORD *)(result + 7976) = 0u;
    *(_OWORD *)(result + 7960) = 0u;
    *(_OWORD *)(result + 7944) = 0u;
    *(_OWORD *)(result + 7928) = 0u;
    *(_OWORD *)(result + 7912) = 0u;
    *(_OWORD *)(result + 7896) = 0u;
    *(_OWORD *)(result + 7880) = 0u;
    *(_OWORD *)(result + 7864) = 0u;
    *(_OWORD *)(result + 7848) = 0u;
    *(_OWORD *)(result + 7832) = 0u;
    *(_OWORD *)(result + 7816) = 0u;
    *(_OWORD *)(result + 7800) = 0u;
    *(_OWORD *)(result + 7784) = 0u;
    *(_OWORD *)(result + 7768) = 0u;
    *(_OWORD *)(result + 7752) = 0u;
    *(_OWORD *)(result + 7736) = 0u;
    *(_OWORD *)(result + 7720) = 0u;
    *(_OWORD *)(result + 7704) = 0u;
    *(_OWORD *)(result + 7688) = 0u;
    *(_OWORD *)(result + 7672) = 0u;
    *(_OWORD *)(result + 7656) = 0u;
    *(_OWORD *)(result + 7640) = 0u;
    *(_OWORD *)(result + 7624) = 0u;
    *(_OWORD *)(result + 7608) = 0u;
    *(_OWORD *)(result + 7592) = 0u;
    *(_OWORD *)(result + 7576) = 0u;
    *(_OWORD *)(result + 7560) = 0u;
    *(_OWORD *)(result + 7544) = 0u;
    *(_OWORD *)(result + 7528) = 0u;
    *(_OWORD *)(result + 7512) = 0u;
    *(_OWORD *)(result + 7496) = 0u;
    *(_OWORD *)(result + 7480) = 0u;
    *(_OWORD *)(result + 7464) = 0u;
    *(_OWORD *)(result + 7448) = 0u;
    *(_OWORD *)(result + 7432) = 0u;
    *(_OWORD *)(result + 7416) = 0u;
    *(_OWORD *)(result + 7400) = 0u;
    *(_OWORD *)(result + 7384) = 0u;
    *(_OWORD *)(result + 7368) = 0u;
    *(_OWORD *)(result + 7352) = 0u;
    *(_OWORD *)(result + 7336) = 0u;
    *(_OWORD *)(result + 7320) = 0u;
    *(_OWORD *)(result + 7304) = 0u;
    *(_OWORD *)(result + 7288) = 0u;
    *(_OWORD *)(result + 7272) = 0u;
    *(_OWORD *)(result + 7256) = 0u;
    *(_OWORD *)(result + 7240) = 0u;
    *(_OWORD *)(result + 7224) = 0u;
    *(_OWORD *)(result + 7208) = 0u;
    *(_OWORD *)(result + 7192) = 0u;
    *(_OWORD *)(result + 7176) = 0u;
    *(_OWORD *)(result + 7160) = 0u;
    *(_OWORD *)(result + 7144) = 0u;
    *(_OWORD *)(result + 7128) = 0u;
    *(_OWORD *)(result + 7112) = 0u;
    *(_OWORD *)(result + 7096) = 0u;
    *(_OWORD *)(result + 7080) = 0u;
    *(_OWORD *)(result + 7064) = 0u;
    *(_OWORD *)(result + 7048) = 0u;
    *(_OWORD *)(result + 7032) = 0u;
    *(_OWORD *)(result + 7016) = 0u;
    *(_OWORD *)(result + 7000) = 0u;
    *(_OWORD *)(result + 6984) = 0u;
    *(_OWORD *)(result + 6968) = 0u;
    *(_OWORD *)(result + 6952) = 0u;
    *(_OWORD *)(result + 6936) = 0u;
    *(_OWORD *)(result + 6920) = 0u;
    *(_OWORD *)(result + 6904) = 0u;
    *(_OWORD *)(result + 6888) = 0u;
    *(_OWORD *)(result + 6872) = 0u;
    *(_OWORD *)(result + 6856) = 0u;
    *(_OWORD *)(result + 6840) = 0u;
    *(_OWORD *)(result + 6824) = 0u;
    *(_OWORD *)(result + 6808) = 0u;
    *(_OWORD *)(result + 6792) = 0u;
    *(_OWORD *)(result + 6776) = 0u;
    *(_OWORD *)(result + 6760) = 0u;
    *(_OWORD *)(result + 6744) = 0u;
    *(_OWORD *)(result + 6728) = 0u;
    *(_OWORD *)(result + 6712) = 0u;
    *(_OWORD *)(result + 6696) = 0u;
    *(_OWORD *)(result + 6680) = 0u;
    *(_OWORD *)(result + 6664) = 0u;
    *(_OWORD *)(result + 6648) = 0u;
    *(_OWORD *)(result + 6632) = 0u;
    *(_OWORD *)(result + 6616) = 0u;
    *(_OWORD *)(result + 6600) = 0u;
    *(_OWORD *)(result + 6584) = 0u;
    *(_OWORD *)(result + 6568) = 0u;
    *(_OWORD *)(result + 6552) = 0u;
    *(_OWORD *)(result + 6536) = 0u;
    *(_OWORD *)(result + 6520) = 0u;
    *(_OWORD *)(result + 6504) = 0u;
    *(_OWORD *)(result + 6488) = 0u;
    *(_OWORD *)(result + 6472) = 0u;
    *(_OWORD *)(result + 6456) = 0u;
    *(_OWORD *)(result + 6440) = 0u;
    *(_OWORD *)(result + 6424) = 0u;
    *(_OWORD *)(result + 6408) = 0u;
    *(_OWORD *)(result + 6392) = 0u;
    *(_OWORD *)(result + 6376) = 0u;
    *(_OWORD *)(result + 6360) = 0u;
    *(_OWORD *)(result + 6344) = 0u;
    *(_OWORD *)(result + 6328) = 0u;
    *(_OWORD *)(result + 6312) = 0u;
    *(_OWORD *)(result + 6296) = 0u;
    *(_OWORD *)(result + 6280) = 0u;
    *(_OWORD *)(result + 6264) = 0u;
    *(_OWORD *)(result + 6248) = 0u;
    *(_OWORD *)(result + 6232) = 0u;
    *(_OWORD *)(result + 6216) = 0u;
    *(_OWORD *)(result + 6200) = 0u;
    *(_OWORD *)(result + 6184) = 0u;
    *(_OWORD *)(result + 6168) = 0u;
    *(_OWORD *)(result + 6152) = 0u;
    *(_OWORD *)(result + 6136) = 0u;
    *(_OWORD *)(result + 6120) = 0u;
    *(_OWORD *)(result + 6104) = 0u;
    *(_OWORD *)(result + 6088) = 0u;
    *(_OWORD *)(result + 6072) = 0u;
    *(_OWORD *)(result + 6056) = 0u;
    *(_OWORD *)(result + 6040) = 0u;
    *(_OWORD *)(result + 6024) = 0u;
    *(_OWORD *)(result + 6008) = 0u;
    *(_OWORD *)(result + 5992) = 0u;
    *(_OWORD *)(result + 5976) = 0u;
    *(_OWORD *)(result + 5960) = 0u;
    *(_OWORD *)(result + 5944) = 0u;
    *(_OWORD *)(result + 5928) = 0u;
    *(_OWORD *)(result + 5912) = 0u;
    *(_OWORD *)(result + 5896) = 0u;
    *(_OWORD *)(result + 5880) = 0u;
    *(_OWORD *)(result + 5864) = 0u;
    *(_OWORD *)(result + 5848) = 0u;
    *(_OWORD *)(result + 5832) = 0u;
    *(_OWORD *)(result + 5816) = 0u;
    *(_OWORD *)(result + 5800) = 0u;
    *(_OWORD *)(result + 5784) = 0u;
    *(_OWORD *)(result + 5768) = 0u;
    *(_OWORD *)(result + 5752) = 0u;
    *(_OWORD *)(result + 5736) = 0u;
    *(_OWORD *)(result + 5720) = 0u;
    *(_OWORD *)(result + 5704) = 0u;
    *(_OWORD *)(result + 5688) = 0u;
    *(_OWORD *)(result + 5672) = 0u;
    *(_OWORD *)(result + 5656) = 0u;
    *(_OWORD *)(result + 5640) = 0u;
    *(_OWORD *)(result + 5624) = 0u;
    *(_OWORD *)(result + 5608) = 0u;
    *(_OWORD *)(result + 5592) = 0u;
    *(_OWORD *)(result + 5576) = 0u;
    *(_OWORD *)(result + 5560) = 0u;
    *(_OWORD *)(result + 5544) = 0u;
    *(_OWORD *)(result + 5528) = 0u;
    *(_OWORD *)(result + 5512) = 0u;
    *(_OWORD *)(result + 5496) = 0u;
    *(_OWORD *)(result + 5480) = 0u;
    *(_OWORD *)(result + 5464) = 0u;
    *(_OWORD *)(result + 5448) = 0u;
    *(_OWORD *)(result + 5432) = 0u;
    *(_OWORD *)(result + 5416) = 0u;
    *(_OWORD *)(result + 5400) = 0u;
    *(_OWORD *)(result + 5384) = 0u;
    *(_OWORD *)(result + 5368) = 0u;
    *(_OWORD *)(result + 5352) = 0u;
    *(_OWORD *)(result + 5336) = 0u;
    *(_OWORD *)(result + 5320) = 0u;
    *(_OWORD *)(result + 5304) = 0u;
    *(_OWORD *)(result + 5288) = 0u;
    *(_OWORD *)(result + 5272) = 0u;
    *(_OWORD *)(result + 5256) = 0u;
    *(_OWORD *)(result + 5240) = 0u;
    *(_OWORD *)(result + 5224) = 0u;
    *(_OWORD *)(result + 5208) = 0u;
    *(_OWORD *)(result + 5192) = 0u;
    *(_OWORD *)(result + 5176) = 0u;
    *(_OWORD *)(result + 5160) = 0u;
    *(_OWORD *)(result + 5144) = 0u;
    *(_OWORD *)(result + 5128) = 0u;
    *(_OWORD *)(result + 5112) = 0u;
    *(_OWORD *)(result + 5096) = 0u;
    *(_OWORD *)(result + 5080) = 0u;
    *(_OWORD *)(result + 5064) = 0u;
    *(_OWORD *)(result + 5048) = 0u;
    *(_OWORD *)(result + 5032) = 0u;
    *(_OWORD *)(result + 5016) = 0u;
    *(_OWORD *)(result + 5000) = 0u;
    *(_OWORD *)(result + 4984) = 0u;
    *(_OWORD *)(result + 4968) = 0u;
    *(_OWORD *)(result + 4952) = 0u;
    *(_OWORD *)(result + 4936) = 0u;
    *(_OWORD *)(result + 4920) = 0u;
    *(_OWORD *)(result + 4904) = 0u;
    *(_OWORD *)(result + 4888) = 0u;
    *(_OWORD *)(result + 4872) = 0u;
    *(_OWORD *)(result + 4856) = 0u;
    *(_OWORD *)(result + 4840) = 0u;
    *(_OWORD *)(result + 4824) = 0u;
    *(_OWORD *)(result + 4808) = 0u;
    *(_OWORD *)(result + 4792) = 0u;
    *(_OWORD *)(result + 4776) = 0u;
    *(_OWORD *)(result + 4760) = 0u;
    *(_OWORD *)(result + 4744) = 0u;
    *(_OWORD *)(result + 4728) = 0u;
    *(_OWORD *)(result + 4712) = 0u;
    *(_OWORD *)(result + 4696) = 0u;
    *(_OWORD *)(result + 4680) = 0u;
    *(_OWORD *)(result + 4664) = 0u;
    *(_OWORD *)(result + 4648) = 0u;
    *(_OWORD *)(result + 4632) = 0u;
    *(_OWORD *)(result + 4616) = 0u;
    *(_OWORD *)(result + 4600) = 0u;
    *(_OWORD *)(result + 4584) = 0u;
    *(_OWORD *)(result + 4568) = 0u;
    *(_OWORD *)(result + 4552) = 0u;
    *(_OWORD *)(result + 4536) = 0u;
    *(_OWORD *)(result + 4520) = 0u;
    *(_OWORD *)(result + 4504) = 0u;
    *(_OWORD *)(result + 4488) = 0u;
    *(_OWORD *)(result + 4472) = 0u;
    *(_OWORD *)(result + 4456) = 0u;
    *(_OWORD *)(result + 4440) = 0u;
    *(_OWORD *)(result + 4424) = 0u;
    *(_OWORD *)(result + 4408) = 0u;
    *(_OWORD *)(result + 4392) = 0u;
    *(_OWORD *)(result + 4376) = 0u;
    *(_OWORD *)(result + 4360) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 18656) = v3;
  return result;
}

void type metadata accessor for snaop_soundprint_graph_runner_t(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE49060);
}

void type metadata accessor for snaop_async_sdf_node_view_t(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE49068);
}

uint64_t sub_1D42B43CC(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1D42B43EC(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 40) = v3;
  return result;
}

void type metadata accessor for snaop_sdf_async_input_node_t(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE49070);
}

__n128 sub_1D42B4434(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D42B4440(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1D42B4460(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for snaop_sdf_soundprint_node_t(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE49078);
}

uint64_t sub_1D42B44A0(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(_QWORD *)result = v2;
  return result;
}

void type metadata accessor for snaop_sampler_sdf_node_t(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE49080);
}

__n128 sub_1D42B44C8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

void type metadata accessor for snaop_unit_value_status_error_continuation_view_t(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE49088);
}

uint64_t initializeBufferWithCopyOfBuffer for TimeRange(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 sub_1D42B4520(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for TimeRange(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TimeRange(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 48) = v3;
  return result;
}

void type metadata accessor for CMTimeRange(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE49090);
}

uint64_t storeEnumTagSinglePayload for MovieRemix.Request(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for snaop_sdf_node_view_t(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE49098);
}

void type metadata accessor for SNDetectSpeechUtteranceRequestType(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE490A0);
}

uint64_t storeEnumTagSinglePayload for Time(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

void type metadata accessor for snaop_sdf_nth_sorted_node_t(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE490A8);
}

void type metadata accessor for IsolatedAudio_UseCaseID(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE490B0);
}

__n128 initializeWithTake for ComposedDetector(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CoreAudioTimestamp(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE490B8);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE490C0);
}

void type metadata accessor for CategoryOptions(uint64_t a1)
{
  sub_1D42B6BAC(a1, (unint64_t *)&unk_1EFE490C8);
}

void type metadata accessor for Mode(uint64_t a1)
{
  sub_1D42B6BAC(a1, (unint64_t *)&unk_1EFE40300);
}

void type metadata accessor for Category(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE490D8);
}

void type metadata accessor for AVAudioSessionAudioHardwareControlFlags(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE490E0);
}

void type metadata accessor for eSNAOPHIDSenderIds(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE490E8);
}

void type metadata accessor for eSNAOPHIDReportIds(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE490F0);
}

__n128 sub_1D42B46F0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

void type metadata accessor for CMTime(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE490F8);
}

void type metadata accessor for SNSoundIdentifier(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE49100);
}

uint64_t sub_1D42B472C(uint64_t a1, uint64_t a2)
{
  return a2 | a1;
}

void sub_1D42B4734(uint64_t *a1@<X8>)
{
  *a1 = sub_1D42C6578();
  sub_1D42B6E24();
}

uint64_t sub_1D42B4754@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t result;

  result = sub_1D42B472C(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_1D42B4780(uint64_t a1, uint64_t a2)
{
  return a2 & a1;
}

uint64_t sub_1D42B4788@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t result;

  result = sub_1D42B47B4(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_1D42B47B4(uint64_t a1, uint64_t a2)
{
  return a2 ^ a1;
}

BOOL sub_1D42B47BC(_QWORD *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & a2;
  if (v3 != a2)
    *v2 |= a2;
  *a1 = a2;
  return v3 != a2;
}

uint64_t sub_1D42B47E8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;

  result = sub_1D42B4818(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_1D42B4818(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = *v1 & a1;
  if (result)
    *v1 &= ~a1;
  return result;
}

uint64_t sub_1D42B483C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;

  result = sub_1D42B486C(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_1D42B486C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *v1 |= a1;
  return v2 & a1;
}

uint64_t sub_1D42B4884(uint64_t result)
{
  _QWORD *v1;

  *v1 |= result;
  return result;
}

uint64_t sub_1D42B4894(uint64_t result)
{
  _QWORD *v1;

  *v1 &= result;
  return result;
}

uint64_t sub_1D42B48A4(uint64_t *a1)
{
  return sub_1D42B48AC(*a1);
}

uint64_t sub_1D42B48AC(uint64_t result)
{
  _QWORD *v1;

  *v1 ^= result;
  return result;
}

uint64_t sub_1D42B48BC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t result;

  result = sub_1D42B48E8(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_1D42B48E8(uint64_t a1, uint64_t a2)
{
  return a2 & ~a1;
}

BOOL sub_1D42B48F0(uint64_t *a1)
{
  uint64_t *v1;

  return sub_1D42B48FC(*a1, *v1);
}

BOOL sub_1D42B48FC(uint64_t a1, uint64_t a2)
{
  return (a2 & ~a1) == 0;
}

BOOL sub_1D42B4908(uint64_t *a1)
{
  uint64_t *v1;

  return sub_1D42B4914(*a1, *v1);
}

BOOL sub_1D42B4914(uint64_t a1, uint64_t a2)
{
  return (a2 & a1) == 0;
}

BOOL sub_1D42B4920(uint64_t *a1)
{
  uint64_t *v1;

  return sub_1D42B492C(*a1, *v1);
}

BOOL sub_1D42B492C(uint64_t a1, uint64_t a2)
{
  return (a1 & ~a2) == 0;
}

BOOL sub_1D42B4938()
{
  uint64_t *v0;

  return sub_1D42B4940(*v0);
}

BOOL sub_1D42B4940(uint64_t a1)
{
  return a1 == 0;
}

uint64_t sub_1D42B494C()
{
  return sub_1D451B2E0();
}

uint64_t sub_1D42B4964(uint64_t *a1)
{
  return sub_1D42B496C(*a1);
}

uint64_t sub_1D42B496C(uint64_t result)
{
  _QWORD *v1;

  *v1 &= ~result;
  return result;
}

uint64_t sub_1D42B497C(uint64_t a1, id *a2)
{
  return sub_1D42B4990(a1, a2);
}

uint64_t sub_1D42B4990(uint64_t a1, id *a2)
{
  _QWORD *v2;
  uint64_t result;

  sub_1D42B7160(a1, a2);
  result = sub_1D451A6D4();
  *v2 = 0;
  return result;
}

uint64_t sub_1D42B49F4(uint64_t a1, id *a2)
{
  return sub_1D42B4A0C(a1, a2) & 1;
}

uint64_t sub_1D42B4A0C(uint64_t a1, id *a2)
{
  _QWORD *v2;
  char v3;

  sub_1D42B7160(a1, a2);
  v3 = sub_1D451A6E0();
  *v2 = 0;
  return v3 & 1;
}

void sub_1D42B4A7C()
{
  sub_1D451A6EC();
  sub_1D451A6C8();
  swift_bridgeObjectRelease();
  sub_1D42B6E24();
}

void sub_1D42B4AB0()
{
  uint64_t *v0;
  uint64_t v1;

  sub_1D42B6EF8();
  *v0 = sub_1D4357128();
  v0[1] = v1;
  sub_1D42B6E24();
}

void sub_1D42B4AD0()
{
  uint64_t *v0;

  sub_1D42B4C4C(*v0, (void (*)(uint64_t))MEMORY[0x1E0CB1940]);
}

void sub_1D42B4AF0(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_1D42B4A7C();
  *a1 = v2;
}

void sub_1D42B4B14()
{
  uint64_t *v0;
  uint64_t v1;

  sub_1D42B6EF8();
  *v0 = sub_1D42EF0D4();
  v0[1] = v1;
  sub_1D42B6E24();
}

void sub_1D42B4B34(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;

  sub_1D42B4B64();
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3 & 1;
}

void sub_1D42B4B6C()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = sub_1D42B6EF8();
  *v0 = nullsub_1(v1);
  sub_1D42B6E24();
}

void sub_1D42B4B8C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  sub_1D42B71E4(a1);
  sub_1D42B4B64();
  sub_1D42B71B4(v1, v2);
  sub_1D42B6E24();
}

void sub_1D42B4BB0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = sub_1D42B71E4(a1);
  *v1 = sub_1D42B4780(v3, *v2);
  sub_1D42B6E24();
}

BOOL sub_1D42B4BD4(_QWORD *a1, uint64_t *a2)
{
  return sub_1D42B47BC(a1, *a2);
}

uint64_t sub_1D42B4BDC(uint64_t *a1)
{
  return sub_1D42B4884(*a1);
}

uint64_t sub_1D42B4BE4(uint64_t *a1)
{
  return sub_1D42B4894(*a1);
}

_QWORD *sub_1D42B4BEC@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_1D42B4BFC(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

void sub_1D42B4C08()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_1D42B6EF8();
  *v0 = sub_1D43FABA8(v1);
  v0[1] = v2;
  sub_1D42B6E24();
}

BOOL sub_1D42B4C28(uint64_t *a1, uint64_t *a2)
{
  return sub_1D4334234(*a1, *a2);
}

uint64_t sub_1D42B4C34(_QWORD *a1, _QWORD *a2)
{
  return sub_1D4334240(*a1, *a2);
}

BOOL sub_1D42B4C40(int *a1, int *a2)
{
  return sub_1D4334244(*a1, *a2);
}

void sub_1D42B4C4C(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3;

  v3 = sub_1D451A6EC();
  a2(v3);
  sub_1D42B7204();
  sub_1D42B6E24();
}

uint64_t sub_1D42B4C7C()
{
  sub_1D451A6EC();
  sub_1D451A74C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42B4CBC(uint64_t a1)
{
  _QWORD *v1;

  return sub_1D4366AC4(a1, *v1);
}

_DWORD *sub_1D42B4CC4@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

void sub_1D42B4CD4(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

uint64_t sub_1D42B4CE0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1D42AC1B0(a1);
  *a2 = result;
  return result;
}

_QWORD *sub_1D42B4D04@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1D42B4D10()
{
  sub_1D42B4EF4(&qword_1EFE491A8, (uint64_t (*)(uint64_t))type metadata accessor for Category, (uint64_t)&unk_1D4522A30);
  sub_1D42B4EF4(&qword_1EFE491B0, (uint64_t (*)(uint64_t))type metadata accessor for Category, (uint64_t)&unk_1D45229D8);
  return sub_1D451B5F8();
}

uint64_t sub_1D42B4D94()
{
  sub_1D42B4EF4(&qword_1EFE49198, (uint64_t (*)(uint64_t))type metadata accessor for Mode, (uint64_t)&unk_1D4522B70);
  sub_1D42B4EF4(&qword_1EFE491A0, (uint64_t (*)(uint64_t))type metadata accessor for Mode, (uint64_t)&unk_1D4522B18);
  return sub_1D451B5F8();
}

uint64_t sub_1D42B4E18()
{
  sub_1D42B4EF4(&qword_1EFE491B8, (uint64_t (*)(uint64_t))type metadata accessor for SNSoundIdentifier, (uint64_t)&unk_1D4522820);
  sub_1D42B4EF4(&qword_1EFE491C0, (uint64_t (*)(uint64_t))type metadata accessor for SNSoundIdentifier, (uint64_t)&unk_1D45227C8);
  return sub_1D451B5F8();
}

void sub_1D42B4E9C()
{
  sub_1D42B4EF4(&qword_1EFE49108, (uint64_t (*)(uint64_t))type metadata accessor for SNSoundIdentifier, (uint64_t)&unk_1D4522790);
}

void sub_1D42B4EC8()
{
  sub_1D42B4EF4(&qword_1EFE49110, (uint64_t (*)(uint64_t))type metadata accessor for SNSoundIdentifier, (uint64_t)&unk_1D4522768);
}

void sub_1D42B4EF4(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = a2(255);
    atomic_store(MEMORY[0x1D825E41C](a3, v5), a1);
  }
  sub_1D42B6E24();
}

void sub_1D42B4F30()
{
  sub_1D42B4EF4(&qword_1EFE49118, (uint64_t (*)(uint64_t))type metadata accessor for SNSoundIdentifier, (uint64_t)&unk_1D45227F8);
}

uint64_t sub_1D42B4F5C()
{
  sub_1D42B4EF4(&qword_1EFE494C8, (uint64_t (*)(uint64_t))type metadata accessor for SNDetectorIdentifier, (uint64_t)&unk_1D4523294);
  sub_1D42B4EF4(&qword_1EFE494D0, (uint64_t (*)(uint64_t))type metadata accessor for SNDetectorIdentifier, (uint64_t)&unk_1D452323C);
  return sub_1D451B5F8();
}

uint64_t sub_1D42B4FE0()
{
  sub_1D42B4EF4(&qword_1EFE49188, (uint64_t (*)(uint64_t))type metadata accessor for SNClassifierIdentifier, (uint64_t)&unk_1D4522E88);
  sub_1D42B4EF4(&qword_1EFE49190, (uint64_t (*)(uint64_t))type metadata accessor for SNClassifierIdentifier, (uint64_t)&unk_1D4522E28);
  return sub_1D451B5F8();
}

uint64_t sub_1D42B5064@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1D451A6C8();
  result = sub_1D42B7204();
  *a1 = v2;
  return result;
}

uint64_t sub_1D42B50A4()
{
  sub_1D42B4EF4((unint64_t *)&unk_1EFE40480, (uint64_t (*)(uint64_t))type metadata accessor for MLModelMetadataKey, (uint64_t)&unk_1D45235A8);
  sub_1D42B4EF4(&qword_1EFE494C0, (uint64_t (*)(uint64_t))type metadata accessor for MLModelMetadataKey, (uint64_t)&unk_1D452345C);
  return sub_1D451B5F8();
}

void sub_1D42B5128()
{
  uint64_t *v0;

  sub_1D42B4C4C(*v0, (void (*)(uint64_t))MEMORY[0x1E0DEA950]);
}

uint64_t sub_1D42B5148()
{
  return sub_1D42B4C7C();
}

void sub_1D42B5160()
{
  sub_1D42B4EF4(&qword_1EFE49120, (uint64_t (*)(uint64_t))type metadata accessor for Category, (uint64_t)&unk_1D45229A0);
}

void sub_1D42B518C()
{
  sub_1D42B4EF4(&qword_1EFE49128, (uint64_t (*)(uint64_t))type metadata accessor for Category, (uint64_t)&unk_1D4522978);
}

void sub_1D42B51B8()
{
  sub_1D42B4EF4(&qword_1EFE49130, (uint64_t (*)(uint64_t))type metadata accessor for Category, (uint64_t)&unk_1D4522A08);
}

void sub_1D42B51E4()
{
  sub_1D42B4EF4(&qword_1EFE49138, (uint64_t (*)(uint64_t))type metadata accessor for Mode, (uint64_t)&unk_1D4522AE0);
}

void sub_1D42B5210()
{
  sub_1D42B4EF4((unint64_t *)&unk_1EFE49140, (uint64_t (*)(uint64_t))type metadata accessor for Mode, (uint64_t)&unk_1D4522AB8);
}

void sub_1D42B523C()
{
  sub_1D42B4EF4(&qword_1EFE402F8, (uint64_t (*)(uint64_t))type metadata accessor for Mode, (uint64_t)&unk_1D4522B48);
}

void sub_1D42B5268()
{
  sub_1D42B4EF4(&qword_1EFE49150, (uint64_t (*)(uint64_t))type metadata accessor for CategoryOptions, (uint64_t)&unk_1D4522C28);
}

void sub_1D42B5294()
{
  sub_1D42B4EF4(&qword_1EFE49158, (uint64_t (*)(uint64_t))type metadata accessor for CategoryOptions, (uint64_t)&unk_1D4522BF8);
}

void sub_1D42B52C0()
{
  sub_1D42B4EF4(&qword_1EFE49160, (uint64_t (*)(uint64_t))type metadata accessor for CategoryOptions, (uint64_t)&unk_1D4522C50);
}

void sub_1D42B52EC()
{
  sub_1D42B4EF4(&qword_1EFE49168, (uint64_t (*)(uint64_t))type metadata accessor for CategoryOptions, (uint64_t)&unk_1D4522C88);
}

void sub_1D42B5318()
{
  sub_1D42B4EF4(&qword_1EFE49170, (uint64_t (*)(uint64_t))type metadata accessor for SNClassifierIdentifier, (uint64_t)&unk_1D4522DEC);
}

void sub_1D42B5344()
{
  sub_1D42B4EF4(&qword_1EFE49178, (uint64_t (*)(uint64_t))type metadata accessor for SNClassifierIdentifier, (uint64_t)&unk_1D4522DC0);
}

void sub_1D42B5370()
{
  sub_1D42B4EF4(&qword_1EFE49180, (uint64_t (*)(uint64_t))type metadata accessor for SNClassifierIdentifier, (uint64_t)&unk_1D4522E5C);
}

unint64_t sub_1D42B539C()
{
  unint64_t result;

  result = qword_1EFE491C8;
  if (!qword_1EFE491C8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454E680, &type metadata for ModelFeatureConnection);
    atomic_store(result, (unint64_t *)&qword_1EFE491C8);
  }
  return result;
}

uint64_t sub_1D42B53D8()
{
  sub_1D42B71FC();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D42B5400(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1D42B5420(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1D42B5464(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D42B28FC(&qword_1EFE47160);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D42B54A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D42B28FC(&qword_1EFE47160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D42B54EC()
{
  unint64_t result;

  result = qword_1EFE491D0;
  if (!qword_1EFE491D0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453DAC4, &unk_1E979DD30);
    atomic_store(result, (unint64_t *)&qword_1EFE491D0);
  }
  return result;
}

_QWORD *sub_1D42B5528(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_1D42B554C()
{
  unint64_t result;

  result = qword_1EFE491E0;
  if (!qword_1EFE491E0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454E6A8, &type metadata for ModelFeatureConnection);
    atomic_store(result, (unint64_t *)&qword_1EFE491E0);
  }
  return result;
}

unint64_t sub_1D42B5588()
{
  unint64_t result;

  result = qword_1EFE49250;
  if (!qword_1EFE49250)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454EDA8, &unk_1E97A7FD8);
    atomic_store(result, (unint64_t *)&qword_1EFE49250);
  }
  return result;
}

unint64_t sub_1D42B55C4()
{
  unint64_t result;

  result = qword_1EFE569A0;
  if (!qword_1EFE569A0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454EDD0, &unk_1E97A7FD8);
    atomic_store(result, (unint64_t *)&qword_1EFE569A0);
  }
  return result;
}

unint64_t sub_1D42B5600()
{
  unint64_t result;

  result = qword_1EFE49260;
  if (!qword_1EFE49260)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454D980, &type metadata for AudioCorrelationResult);
    atomic_store(result, (unint64_t *)&qword_1EFE49260);
  }
  return result;
}

uint64_t sub_1D42B563C()
{
  return sub_1D42B6E34();
}

unint64_t sub_1D42B5648()
{
  unint64_t result;

  result = qword_1EFE49268;
  if (!qword_1EFE49268)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454D9A8, &type metadata for AudioCorrelationResult);
    atomic_store(result, (unint64_t *)&qword_1EFE49268);
  }
  return result;
}

unint64_t sub_1D42B5684()
{
  unint64_t result;

  result = qword_1EFE49270;
  if (!qword_1EFE49270)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454D278, &unk_1E979B3D8);
    atomic_store(result, (unint64_t *)&qword_1EFE49270);
  }
  return result;
}

unint64_t sub_1D42B56C0()
{
  unint64_t result;

  result = qword_1EFE56280;
  if (!qword_1EFE56280)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454D2A0, &unk_1E979B3D8);
    atomic_store(result, (unint64_t *)&qword_1EFE56280);
  }
  return result;
}

unint64_t sub_1D42B56FC()
{
  unint64_t result;

  result = qword_1EFE49280;
  if (!qword_1EFE49280)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454CAF0, &type metadata for SignalThresholdResult);
    atomic_store(result, (unint64_t *)&qword_1EFE49280);
  }
  return result;
}

uint64_t sub_1D42B5738()
{
  return sub_1D42B6E34();
}

unint64_t sub_1D42B5744()
{
  unint64_t result;

  result = qword_1EFE49288;
  if (!qword_1EFE49288)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454CB18, &type metadata for SignalThresholdResult);
    atomic_store(result, (unint64_t *)&qword_1EFE49288);
  }
  return result;
}

unint64_t sub_1D42B5780()
{
  unint64_t result;

  result = qword_1EFE49290;
  if (!qword_1EFE49290)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4543E54, &type metadata for EstimateAudioOffsetRequest);
    atomic_store(result, (unint64_t *)&qword_1EFE49290);
  }
  return result;
}

unint64_t sub_1D42B57BC()
{
  unint64_t result;

  result = qword_1EFE49298;
  if (!qword_1EFE49298)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4543E7C, &type metadata for EstimateAudioOffsetRequest);
    atomic_store(result, (unint64_t *)&qword_1EFE49298);
  }
  return result;
}

unint64_t sub_1D42B57F8()
{
  unint64_t result;

  result = qword_1EFE492A0;
  if (!qword_1EFE492A0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454393C, &type metadata for AudioOffsetResult);
    atomic_store(result, (unint64_t *)&qword_1EFE492A0);
  }
  return result;
}

uint64_t sub_1D42B5834()
{
  return sub_1D42B6E34();
}

unint64_t sub_1D42B5840()
{
  unint64_t result;

  result = qword_1EFE492A8;
  if (!qword_1EFE492A8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4543964, &type metadata for AudioOffsetResult);
    atomic_store(result, (unint64_t *)&qword_1EFE492A8);
  }
  return result;
}

unint64_t sub_1D42B587C()
{
  unint64_t result;

  result = qword_1EFE492B0;
  if (!qword_1EFE492B0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45401A8, &type metadata for FeaturePrint);
    atomic_store(result, (unint64_t *)&qword_1EFE492B0);
  }
  return result;
}

uint64_t sub_1D42B58B8()
{
  uint64_t v0;

  sub_1D42B7180();
  return swift_deallocObject();
}

uint64_t sub_1D42B58D4(uint64_t a1)
{
  id v2;

  v2 = *(id *)(a1 + 56);
  return a1;
}

unint64_t sub_1D42B58FC()
{
  unint64_t result;

  result = qword_1EFE492B8;
  if (!qword_1EFE492B8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45401D0, &type metadata for FeaturePrint);
    atomic_store(result, (unint64_t *)&qword_1EFE492B8);
  }
  return result;
}

unint64_t sub_1D42B5938()
{
  unint64_t result;

  result = qword_1EFE492C0;
  if (!qword_1EFE492C0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453F7CC, &type metadata for SoundActionsCommand);
    atomic_store(result, (unint64_t *)&qword_1EFE492C0);
  }
  return result;
}

uint64_t sub_1D42B5974()
{
  sub_1D42B71FC();
  return swift_deallocObject();
}

unint64_t sub_1D42B5994()
{
  unint64_t result;

  result = qword_1EFE492C8;
  if (!qword_1EFE492C8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453F7F4, &type metadata for SoundActionsCommand);
    atomic_store(result, (unint64_t *)&qword_1EFE492C8);
  }
  return result;
}

unint64_t sub_1D42B59D0()
{
  unint64_t result;

  result = qword_1EFE492D0;
  if (!qword_1EFE492D0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453EFCC, &unk_1E97A96F8);
    atomic_store(result, (unint64_t *)&qword_1EFE492D0);
  }
  return result;
}

uint64_t sub_1D42B5A0C()
{
  return sub_1D42B6E34();
}

unint64_t sub_1D42B5A18()
{
  unint64_t result;

  result = qword_1EFE51E90;
  if (!qword_1EFE51E90)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453EFF4, &unk_1E97A96F8);
    atomic_store(result, (unint64_t *)&qword_1EFE51E90);
  }
  return result;
}

unint64_t sub_1D42B5A54()
{
  unint64_t result;

  result = qword_1EFE492E0;
  if (!qword_1EFE492E0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453D354, &unk_1E97A8D88);
    atomic_store(result, (unint64_t *)&qword_1EFE492E0);
  }
  return result;
}

unint64_t sub_1D42B5A90()
{
  unint64_t result;

  result = qword_1EFE492E8;
  if (!qword_1EFE492E8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453D37C, &unk_1E97A8D88);
    atomic_store(result, (unint64_t *)&qword_1EFE492E8);
  }
  return result;
}

unint64_t sub_1D42B5ACC()
{
  unint64_t result;

  result = qword_1EFE492F0;
  if (!qword_1EFE492F0)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for AudioConfiguration, &type metadata for AudioConfiguration);
    atomic_store(result, (unint64_t *)&qword_1EFE492F0);
  }
  return result;
}

uint64_t sub_1D42B5B08()
{
  sub_1D42B71FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D42B5B38(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_1D42B5B80()
{
  unint64_t result;

  result = qword_1EFE4E460;
  if (!qword_1EFE4E460)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for AudioConfiguration, &type metadata for AudioConfiguration);
    atomic_store(result, (unint64_t *)&qword_1EFE4E460);
  }
  return result;
}

unint64_t sub_1D42B5BBC()
{
  unint64_t result;

  result = qword_1EFE49300;
  if (!qword_1EFE49300)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4538D24, &unk_1E979A2A0);
    atomic_store(result, (unint64_t *)&qword_1EFE49300);
  }
  return result;
}

uint64_t sub_1D42B5BF8()
{
  uint64_t v0;

  sub_1D42B5C3C(*(void **)(v0 + 16), *(id *)(v0 + 24), *(_BYTE *)(v0 + 32));
  sub_1D42B5C4C(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_BYTE *)(v0 + 120));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1D42B5C3C(void *a1, id a2, char a3)
{
  if ((a3 & 1) != 0)
    swift_bridgeObjectRelease();
  else

}

uint64_t sub_1D42B5C4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t result;

  if ((a7 & 1) == 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1D42B5C58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_QWORD *)(a1 + 72);
  v5 = *(_QWORD *)(a1 + 80);
  v6 = *(_QWORD *)(a1 + 88);
  v7 = *(_QWORD *)(a1 + 96);
  v8 = *(_BYTE *)(a1 + 104);
  sub_1D42B5CE4(*(void **)a1, *(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
  sub_1D42B5CF4(v2, v3, v4, v5, v6, v7, v8);
  swift_bridgeObjectRetain();
  return a1;
}

id sub_1D42B5CE4(void *a1, id a2, char a3)
{
  if ((a3 & 1) != 0)
    return (id)swift_bridgeObjectRetain();
  else
    return a1;
}

uint64_t sub_1D42B5CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t result;

  if ((a7 & 1) == 0)
    return swift_bridgeObjectRetain();
  return result;
}

unint64_t sub_1D42B5D00()
{
  unint64_t result;

  result = qword_1EFE49308;
  if (!qword_1EFE49308)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4538D4C, &unk_1E979A2A0);
    atomic_store(result, (unint64_t *)&qword_1EFE49308);
  }
  return result;
}

unint64_t sub_1D42B5D3C()
{
  unint64_t result;

  result = qword_1EFE49310;
  if (!qword_1EFE49310)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453EF14, &unk_1E97A98C0);
    atomic_store(result, (unint64_t *)&qword_1EFE49310);
  }
  return result;
}

uint64_t sub_1D42B5D78()
{
  uint64_t v0;

  sub_1D42B7180();
  return swift_deallocObject();
}

uint64_t sub_1D42B5D94(uint64_t a1)
{
  id v2;

  v2 = *(id *)(a1 + 48);
  return a1;
}

unint64_t sub_1D42B5DBC()
{
  unint64_t result;

  result = qword_1EFE49318;
  if (!qword_1EFE49318)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453EF3C, &unk_1E97A98C0);
    atomic_store(result, (unint64_t *)&qword_1EFE49318);
  }
  return result;
}

unint64_t sub_1D42B5DF8()
{
  unint64_t result;

  result = qword_1EFE49320;
  if (!qword_1EFE49320)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45281B4, &unk_1E97A4C18);
    atomic_store(result, (unint64_t *)&qword_1EFE49320);
  }
  return result;
}

unint64_t sub_1D42B5E34()
{
  unint64_t result;

  result = qword_1EFE49328;
  if (!qword_1EFE49328)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45281DC, &unk_1E97A4C18);
    atomic_store(result, (unint64_t *)&qword_1EFE49328);
  }
  return result;
}

unint64_t sub_1D42B5E70()
{
  unint64_t result;

  result = qword_1EFE49330;
  if (!qword_1EFE49330)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4532434, &unk_1E97A9C78);
    atomic_store(result, (unint64_t *)&qword_1EFE49330);
  }
  return result;
}

unint64_t sub_1D42B5EAC()
{
  unint64_t result;

  result = qword_1EFE49338;
  if (!qword_1EFE49338)
  {
    result = MEMORY[0x1D825E41C](&unk_1D453245C, &unk_1E97A9C78);
    atomic_store(result, (unint64_t *)&qword_1EFE49338);
  }
  return result;
}

unint64_t sub_1D42B5EE8()
{
  unint64_t result;

  result = qword_1EFE49340;
  if (!qword_1EFE49340)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452E7A0, &type metadata for SpeechDistanceResult);
    atomic_store(result, (unint64_t *)&qword_1EFE49340);
  }
  return result;
}

uint64_t sub_1D42B5F24()
{
  return sub_1D42B6E34();
}

unint64_t sub_1D42B5F30()
{
  unint64_t result;

  result = qword_1EFE49348;
  if (!qword_1EFE49348)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452E7C8, &type metadata for SpeechDistanceResult);
    atomic_store(result, (unint64_t *)&qword_1EFE49348);
  }
  return result;
}

unint64_t sub_1D42B5F6C()
{
  unint64_t result;

  result = qword_1EFE49350;
  if (!qword_1EFE49350)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452CFEC, &type metadata for ExceptionRequest);
    atomic_store(result, (unint64_t *)&qword_1EFE49350);
  }
  return result;
}

unint64_t sub_1D42B5FA8()
{
  unint64_t result;

  result = qword_1EFE49358;
  if (!qword_1EFE49358)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452D014, &type metadata for ExceptionRequest);
    atomic_store(result, (unint64_t *)&qword_1EFE49358);
  }
  return result;
}

unint64_t sub_1D42B5FE4()
{
  unint64_t result;

  result = qword_1EFE49360;
  if (!qword_1EFE49360)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4528914, &unk_1E97A2BF0);
    atomic_store(result, (unint64_t *)&qword_1EFE49360);
  }
  return result;
}

uint64_t sub_1D42B6020()
{
  swift_bridgeObjectRelease();
  sub_1D42B7180();
  return swift_deallocObject();
}

uint64_t sub_1D42B603C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_1D42B6064()
{
  unint64_t result;

  result = qword_1EFE4E0F0;
  if (!qword_1EFE4E0F0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452893C, &unk_1E97A2BF0);
    atomic_store(result, (unint64_t *)&qword_1EFE4E0F0);
  }
  return result;
}

unint64_t sub_1D42B60A0()
{
  unint64_t result;

  result = qword_1EFE49370;
  if (!qword_1EFE49370)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4529D1C, &type metadata for SoundActionsResult);
    atomic_store(result, (unint64_t *)&qword_1EFE49370);
  }
  return result;
}

uint64_t sub_1D42B60DC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D42B6100(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_1D42B6128()
{
  unint64_t result;

  result = qword_1EFE49378;
  if (!qword_1EFE49378)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4529D44, &type metadata for SoundActionsResult);
    atomic_store(result, (unint64_t *)&qword_1EFE49378);
  }
  return result;
}

unint64_t sub_1D42B6164()
{
  unint64_t result;

  result = qword_1EFE49380;
  if (!qword_1EFE49380)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4528064, &unk_1E97A4AB0);
    atomic_store(result, (unint64_t *)&qword_1EFE49380);
  }
  return result;
}

unint64_t sub_1D42B61A0()
{
  unint64_t result;

  result = qword_1EFE4AB40;
  if (!qword_1EFE4AB40)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452808C, &unk_1E97A4AB0);
    atomic_store(result, (unint64_t *)&qword_1EFE4AB40);
  }
  return result;
}

unint64_t sub_1D42B61DC()
{
  unint64_t result;

  result = qword_1EFE49390;
  if (!qword_1EFE49390)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4527A58, &type metadata for EstimateSpeechDistanceRequest);
    atomic_store(result, (unint64_t *)&qword_1EFE49390);
  }
  return result;
}

unint64_t sub_1D42B6218()
{
  unint64_t result;

  result = qword_1EFE49398;
  if (!qword_1EFE49398)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4527A80, &type metadata for EstimateSpeechDistanceRequest);
    atomic_store(result, (unint64_t *)&qword_1EFE49398);
  }
  return result;
}

unint64_t sub_1D42B6254()
{
  unint64_t result;

  result = qword_1EFE493A0;
  if (!qword_1EFE493A0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4526F54, &unk_1E979A700);
    atomic_store(result, (unint64_t *)&qword_1EFE493A0);
  }
  return result;
}

uint64_t sub_1D42B6290()
{
  uint64_t v0;

  sub_1D42B62C8(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_BYTE *)(v0 + 32));
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1D42B62C8(void *a1, void *a2, char a3)
{
  switch(a3)
  {
    case 2:

      break;
    case 1:
      swift_bridgeObjectRelease();
      break;
    case 0:

      break;
  }
}

uint64_t sub_1D42B62F4(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 40);
  sub_1D42B633C(*(id *)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRetain();
  v3 = v2;
  return a1;
}

id sub_1D42B633C(id result, void *a2, char a3)
{
  switch(a3)
  {
    case 2:
      return result;
    case 1:
      return (id)swift_bridgeObjectRetain();
    case 0:
      return a2;
  }
  return result;
}

unint64_t sub_1D42B6368()
{
  unint64_t result;

  result = qword_1EFE4A810;
  if (!qword_1EFE4A810)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4526F7C, &unk_1E979A700);
    atomic_store(result, (unint64_t *)&qword_1EFE4A810);
  }
  return result;
}

unint64_t sub_1D42B63A4()
{
  unint64_t result;

  result = qword_1EFE493B0;
  if (!qword_1EFE493B0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4526024, &type metadata for NullResult);
    atomic_store(result, (unint64_t *)&qword_1EFE493B0);
  }
  return result;
}

unint64_t sub_1D42B63E0()
{
  unint64_t result;

  result = qword_1EFE493B8;
  if (!qword_1EFE493B8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452604C, &type metadata for NullResult);
    atomic_store(result, (unint64_t *)&qword_1EFE493B8);
  }
  return result;
}

unint64_t sub_1D42B641C()
{
  unint64_t result;

  result = qword_1EFE493C0;
  if (!qword_1EFE493C0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4525BD0, &type metadata for TimeDurationConstraint);
    atomic_store(result, (unint64_t *)&qword_1EFE493C0);
  }
  return result;
}

uint64_t sub_1D42B6458()
{
  uint64_t v0;

  sub_1D42B5C4C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  return swift_deallocObject();
}

uint64_t sub_1D42B6488(uint64_t a1, uint64_t a2)
{
  initializeWithTake for TimeDurationConstraint(a2, a1);
  return a2;
}

uint64_t sub_1D42B64C4(uint64_t a1)
{
  sub_1D42B5CF4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
  return a1;
}

unint64_t sub_1D42B64FC()
{
  unint64_t result;

  result = qword_1EFE50650;
  if (!qword_1EFE50650)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4525BF8, &type metadata for TimeDurationConstraint);
    atomic_store(result, (unint64_t *)&qword_1EFE50650);
  }
  return result;
}

unint64_t sub_1D42B6538()
{
  unint64_t result;

  result = qword_1EFE493D0;
  if (!qword_1EFE493D0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4525898, &type metadata for DetectSignalThresholdRequest);
    atomic_store(result, (unint64_t *)&qword_1EFE493D0);
  }
  return result;
}

unint64_t sub_1D42B6574()
{
  unint64_t result;

  result = qword_1EFE493D8;
  if (!qword_1EFE493D8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45258C0, &type metadata for DetectSignalThresholdRequest);
    atomic_store(result, (unint64_t *)&qword_1EFE493D8);
  }
  return result;
}

unint64_t sub_1D42B65B0()
{
  unint64_t result;

  result = qword_1EFE493E0;
  if (!qword_1EFE493E0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4525074, &type metadata for NullRequest);
    atomic_store(result, (unint64_t *)&qword_1EFE493E0);
  }
  return result;
}

uint64_t sub_1D42B65EC()
{
  return sub_1D42B6E34();
}

unint64_t sub_1D42B65F8()
{
  unint64_t result;

  result = qword_1EFE493E8;
  if (!qword_1EFE493E8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452509C, &type metadata for NullRequest);
    atomic_store(result, (unint64_t *)&qword_1EFE493E8);
  }
  return result;
}

unint64_t sub_1D42B6634()
{
  unint64_t result;

  result = qword_1EFE493F0;
  if (!qword_1EFE493F0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454D1C0, &unk_1E979B538);
    atomic_store(result, (unint64_t *)&qword_1EFE493F0);
  }
  return result;
}

unint64_t sub_1D42B6670()
{
  unint64_t result;

  result = qword_1EFE493F8;
  if (!qword_1EFE493F8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454D1E8, &unk_1E979B538);
    atomic_store(result, (unint64_t *)&qword_1EFE493F8);
  }
  return result;
}

void type metadata accessor for TransportError(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE49400);
}

uint64_t sub_1D42B66C0(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_WORD *)(result + 4) = *((_WORD *)a2 + 2);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t sub_1D42B66D4(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 6))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1D42B66F4(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 6) = v3;
  return result;
}

void type metadata accessor for _SNAOPErrorDetails(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE49408);
}

uint64_t sub_1D42B6734(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_BYTE *)(result + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for ICACConnection.DomainError(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 5))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ICACConnection.DomainError(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 5) = v3;
  return result;
}

void type metadata accessor for _SNAOPClassfication(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE49410);
}

void type metadata accessor for SNAOPReadData(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE49418);
}

uint64_t getEnumTagSinglePayload for SNSystemConfiguration(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 12))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SNSystemConfiguration(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_DWORD *)(result + 8) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 12) = v3;
  return result;
}

void type metadata accessor for _SNAOPDataReadOut(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE49420);
}

void type metadata accessor for e5rt_tensor_desc_component_dtype_t(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE49428);
}

void type metadata accessor for MLMultiArrayDataType(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE49430);
}

void type metadata accessor for _NSRange(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE404C8);
}

void type metadata accessor for MLModelMetadataKey(uint64_t a1)
{
  sub_1D42B6BAC(a1, (unint64_t *)&unk_1EFE40350);
}

void type metadata accessor for CFArray(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE49438);
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE49440);
}

uint64_t getEnumTagSinglePayload for XPCPublisher(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCPublisher(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for AudioQueueChannelAssignment(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE49448);
}

void type metadata accessor for CFError(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE49450);
}

void type metadata accessor for snaop_status_t(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE49458);
}

uint64_t getEnumTagSinglePayload for MovieRemix.Request(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

void type metadata accessor for AudioBuffer(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE49460);
}

void type metadata accessor for SNLogMelSpectrumNormalizationStrategy(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE49468);
}

void type metadata accessor for SNLogMelType(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE49470);
}

void type metadata accessor for SNDetectorIdentifier(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE49478);
}

void type metadata accessor for MGProductType(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE49480);
}

void type metadata accessor for HIDReportType(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE49488);
}

void type metadata accessor for CMTimeFlags(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE49490);
}

void sub_1D42B69F8()
{
  sub_1D42B4EF4(&qword_1EFE49498, (uint64_t (*)(uint64_t))type metadata accessor for SNDetectorIdentifier, (uint64_t)&unk_1D4523204);
}

void sub_1D42B6A24()
{
  sub_1D42B4EF4(&qword_1EFE494A0, (uint64_t (*)(uint64_t))type metadata accessor for SNDetectorIdentifier, (uint64_t)&unk_1D45231DC);
}

void sub_1D42B6A50()
{
  sub_1D42B4EF4(&qword_1EFE494A8, (uint64_t (*)(uint64_t))type metadata accessor for SNDetectorIdentifier, (uint64_t)&unk_1D452326C);
}

void sub_1D42B6A7C()
{
  sub_1D42B4EF4(&qword_1EFE494B0, (uint64_t (*)(uint64_t))type metadata accessor for MLModelMetadataKey, (uint64_t)&unk_1D4523420);
}

void sub_1D42B6AA8()
{
  sub_1D42B4EF4(&qword_1EFE494B8, (uint64_t (*)(uint64_t))type metadata accessor for MLModelMetadataKey, (uint64_t)&unk_1D45233F4);
}

void sub_1D42B6AD4()
{
  sub_1D42B4EF4(&qword_1EFE40490, (uint64_t (*)(uint64_t))type metadata accessor for MLModelMetadataKey, (uint64_t)&unk_1D4523490);
}

__n128 initializeBufferWithCopyOfBuffer for Time(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for Time(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

void type metadata accessor for AudioBufferList(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE494D8);
}

void type metadata accessor for _SNAOPClassifierData8bit(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE494E0);
}

__n128 sub_1D42B6B5C(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

void type metadata accessor for snaop_ebank_t(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE494E8);
}

void type metadata accessor for eSNAOPHIDErrorType(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE494F0);
}

void type metadata accessor for e5rt_error_code_t(uint64_t a1)
{
  sub_1D42B6BAC(a1, &qword_1EFE494F8);
}

void sub_1D42B6BAC(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

id sub_1D42B6C58(int a1, const char *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  void *v10;
  uint64_t v11;

  return objc_msgSend(v10, a2, v11, 0, 0, &a10);
}

uint64_t sub_1D42B6C70(uint64_t a1, _BYTE *a2)
{
  *a2 = 2;
  return swift_willThrow();
}

uint64_t sub_1D42B6C80()
{
  return swift_dynamicCast();
}

uint64_t sub_1D42B6CCC()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1D42B5420(v1, v0);
}

uint64_t sub_1D42B6CD8(_QWORD *a1)
{
  uint64_t v1;

  sub_1D42B5528(a1, v1);
  return sub_1D4519A74();
}

id sub_1D42B6CFC(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2, 0, 0);
}

uint64_t sub_1D42B6D0C()
{
  return swift_allocError();
}

uint64_t sub_1D42B6D18()
{
  return sub_1D451A6C8();
}

uint64_t sub_1D42B6D28()
{
  return sub_1D451A6C8();
}

uint64_t sub_1D42B6D38()
{
  return sub_1D4519C3C();
}

id sub_1D42B6D48(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  return objc_msgSend(v2, a2, v4, v3);
}

uint64_t sub_1D42B6D58()
{
  return swift_release();
}

_OWORD *sub_1D42B6D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, __int128 a15)
{
  return sub_1D441FC00((uint64_t)&a11, &a15);
}

uint64_t sub_1D42B6D94()
{
  return swift_allocObject();
}

uint64_t sub_1D42B6DA0()
{
  return sub_1D451B208();
}

uint64_t sub_1D42B6DAC()
{
  return swift_dynamicCast();
}

id sub_1D42B6DB8(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

uint64_t sub_1D42B6DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  return sub_1D42B5464((uint64_t)va);
}

uint64_t sub_1D42B6DCC()
{
  uint64_t v0;

  return sub_1D42B5464(v0 - 64);
}

uint64_t sub_1D42B6DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  return sub_1D42B28B4(v4 - 64, (uint64_t)va);
}

uint64_t sub_1D42B6DE0()
{
  return sub_1D451B208();
}

uint64_t sub_1D42B6DEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  return sub_1D42B54A4((uint64_t)va, v4 - 64);
}

uint64_t sub_1D42B6DF8(uint64_t a1)
{
  uint64_t v1;

  sub_1D42B5400(a1);
  return sub_1D42FAD24(v1 - 104);
}

uint64_t sub_1D42B6E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1D42B5400((uint64_t)&a9);
}

uint64_t sub_1D42B6E18(uint64_t a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  return sub_1D42B5464((uint64_t)va);
}

uint64_t sub_1D42B6E2C()
{
  return swift_dynamicCast();
}

uint64_t sub_1D42B6E34()
{
  return swift_deallocObject();
}

uint64_t sub_1D42B6E54(uint64_t a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  return sub_1D42B5464((uint64_t)va);
}

uint64_t sub_1D42B6E6C()
{
  return swift_unknownObjectRelease();
}

void sub_1D42B6E74()
{
  void *v0;

}

uint64_t sub_1D42B6E7C()
{
  return sub_1D4519A8C();
}

uint64_t sub_1D42B6E84()
{
  return sub_1D4519AA4();
}

id sub_1D42B6E8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  return a10;
}

void sub_1D42B6E94(uint64_t a1@<X8>, double a2@<D0>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)v11 = a1;
  *(_QWORD *)(v11 + 8) = a8;
  *(_OWORD *)(v11 + 16) = a9;
  *(_QWORD *)(v11 + 32) = a10;
  *(_QWORD *)(v11 + 40) = v10;
  *(double *)(v11 + 48) = a2;
}

void sub_1D42B6EBC()
{
  void *v0;

}

uint64_t sub_1D42B6EC4()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1D42B6ED8()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1D42B5420(v1, v0);
}

uint64_t sub_1D42B6EF8()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

double sub_1D42B6F04@<D0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, __int128 a8, double a9)
{
  uint64_t v9;
  uint64_t v10;
  double result;

  *(_QWORD *)v10 = a1;
  *(_QWORD *)(v10 + 8) = a7;
  *(_OWORD *)(v10 + 16) = a8;
  result = a9;
  *(double *)(v10 + 32) = a9;
  *(_QWORD *)(v10 + 40) = v9;
  return result;
}

void sub_1D42B6F30()
{
  void *v0;

}

uint64_t sub_1D42B6F38()
{
  return sub_1D4519A74();
}

uint64_t sub_1D42B6F40()
{
  return swift_allocObject();
}

double sub_1D42B6F48()
{
  return 0.0;
}

uint64_t sub_1D42B6F54()
{
  return swift_willThrow();
}

uint64_t sub_1D42B6F5C(uint64_t a1)
{
  return sub_1D42FAD24(a1);
}

uint64_t sub_1D42B6F8C()
{
  return swift_release();
}

float sub_1D42B6F94@<S0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(float *)(v1 + a1 + 48);
}

uint64_t sub_1D42B6FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  return sub_1D42B54A4((uint64_t)&a9, (uint64_t)&a13);
}

id sub_1D42B6FD8(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

uint64_t sub_1D42B6FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  return sub_1D42B28B4((uint64_t)&a13, (uint64_t)&a9);
}

uint64_t sub_1D42B6FF0()
{
  return sub_1D451B208();
}

uint64_t sub_1D42B6FFC()
{
  return sub_1D451A6C8();
}

uint64_t sub_1D42B7008()
{
  return sub_1D4519C3C();
}

uint64_t sub_1D42B7018()
{
  return sub_1D451A6C8();
}

id sub_1D42B7028(uint64_t a1, const char *a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  return objc_msgSend(v3, a2, v2, v4);
}

_OWORD *sub_1D42B7038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, __int128 a15)
{
  return sub_1D441FC00((uint64_t)&a11, &a15);
}

uint64_t sub_1D42B7048(uint64_t a1)
{
  return sub_1D42B5400(a1);
}

uint64_t sub_1D42B705C()
{
  return sub_1D4519A80();
}

void sub_1D42B7064(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, __int128 a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)v10 = a1;
  *(_QWORD *)(v10 + 8) = a7;
  *(_OWORD *)(v10 + 16) = a8;
  *(_QWORD *)(v10 + 32) = a9;
  *(_QWORD *)(v10 + 40) = v9;
}

uint64_t sub_1D42B7098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1D42B5464((uint64_t)&a9);
}

void sub_1D42B70A0()
{
  void *v0;

}

uint64_t sub_1D42B70A8()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1D42B70B0(uint64_t a1)
{
  return a1 + 16;
}

void *sub_1D42B70C4(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  const void *v19;

  return memcpy((void *)(a1 + 16), v19, 0x48uLL);
}

uint64_t sub_1D42B70DC()
{
  return sub_1D4519A74();
}

uint64_t sub_1D42B70F0()
{
  return swift_release();
}

uint64_t sub_1D42B7104()
{
  return swift_getObjectType();
}

uint64_t sub_1D42B710C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;

  *(_QWORD *)(v15 - 72) = a9;
  return a6(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15);
}

double sub_1D42B7118()
{
  return 0.0;
}

uint64_t sub_1D42B7124()
{
  return swift_willThrow();
}

uint64_t sub_1D42B712C()
{
  return sub_1D4519A80();
}

double sub_1D42B7134(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, double a17, double a18, double a19)
{
  return a19;
}

void sub_1D42B7160(uint64_t a1, id *a2)
{

}

uint64_t sub_1D42B7180()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D42B7190()
{
  return sub_1D451A794();
}

uint64_t sub_1D42B71A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  return sub_1D42B5464((uint64_t)va);
}

uint64_t sub_1D42B71A8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D42B71B4(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = a2 & 1;
  return result;
}

void sub_1D42B71D4()
{
  void *v0;

}

uint64_t sub_1D42B71DC(uint64_t a1)
{
  return sub_1D42FAD24(a1);
}

uint64_t sub_1D42B71E4(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t sub_1D42B71F0()
{
  return swift_deallocPartialClassInstance();
}

uint64_t sub_1D42B71FC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42B7204()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42B720C(uint64_t a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  return sub_1D42B28B4((uint64_t)va1, (uint64_t)va);
}

uint64_t sub_1D42B7218()
{
  uint64_t v0;

  return v0;
}

void sub_1D42B722C()
{
  void *v0;

}

id sub_1D42B7238()
{
  objc_class *v0;

  return objc_allocWithZone(v0);
}

uint64_t sub_1D42B7244(uint64_t a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  return sub_1D42B54A4((uint64_t)va, (uint64_t)va1);
}

uint64_t sub_1D42B7250()
{
  return sub_1D451B208();
}

id sub_1D42B725C()
{
  return sub_1D42ABA44();
}

uint64_t sub_1D42B7268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B7284(a1, a2, a3, a4, (void (*)(_QWORD *, uint64_t, uint64_t))sub_1D42B8060);
}

uint64_t sub_1D42B7284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD *, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v7;
  _QWORD *inited;
  uint64_t v13;
  _BYTE *v15;

  v7 = v5;
  type metadata accessor for XPCProxyEncoder();
  inited = (_QWORD *)swift_initStackObject();
  inited[2] = 0;
  inited[3] = 0;
  inited[4] = a3;
  inited[5] = a4;
  swift_retain();
  a5(inited, a1, a2);
  if (!v5)
  {
    v13 = sub_1D42B783C();
    v7 = v13;
    if (v13)
    {
      swift_setDeallocating();
      sub_1D42B7DEC();
      sub_1D42B8E30();
      swift_deallocClassInstance();
      return v7;
    }
    sub_1D42B7F2C();
    sub_1D42B6D0C();
    *v15 = 0;
    swift_willThrow();
  }
  sub_1D42B8F48();
  return v7;
}

uint64_t sub_1D42B738C()
{
  return sub_1D42B783C();
}

uint64_t sub_1D42B73A0@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = a1();
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

_QWORD *sub_1D42B73D0(_QWORD *(*a1)(uint64_t *__return_ptr))
{
  uint64_t v1;
  _QWORD *result;
  uint64_t v3;

  result = a1(&v3);
  if (!v1)
    return (_QWORD *)v3;
  return result;
}

void sub_1D42B740C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;

  v4 = v0[4];
  v3 = v0[5];
  type metadata accessor for XPCProxyEncoder.UnkeyedContainer();
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = MEMORY[0x1E0DEE9D8];
  v5[3] = v4;
  v5[4] = v3;
  v6 = sub_1D42B8DB4();
  *(_QWORD *)(v6 + 16) = sub_1D42B8014;
  *(_QWORD *)(v6 + 24) = v5;
  v7 = sub_1D42B8DB4();
  *(_QWORD *)(v7 + 16) = sub_1D42B802C;
  *(_QWORD *)(v7 + 24) = v6;
  sub_1D42B8E8C();
  if (v0[2])
  {
    sub_1D42B8F70();
    v9 = sub_1D42B6D0C();
    sub_1D42B8EA0(v9, v10);
    sub_1D42B8F24();
    swift_willThrow();
    v0[2] = v2;
    v0[3] = v1;
    sub_1D42B8E7C();
    swift_release();
    swift_unexpectedError();
    __break(1u);
  }
  else
  {
    v8 = sub_1D42B8DB4();
    *(_QWORD *)(v8 + 16) = sub_1D42B7F00;
    *(_QWORD *)(v8 + 24) = v7;
    v0[2] = sub_1D42B8D94;
    v0[3] = v8;
    sub_1D42B8E7C();
    swift_retain();
    sub_1D42B8F24();
    sub_1D42B8E64();
  }
}

uint64_t sub_1D42B7524()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1D42B7558();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_1D42B7558()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(__int128 *__return_ptr, uint64_t);
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  sub_1D42B8E84();
  v2 = v0[2];
  v3 = *(_QWORD *)(v2 + 16);
  v4 = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v21 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1D42C70E8();
    v4 = v21;
    v5 = v2 + 40;
    while (1)
    {
      v6 = *(void (**)(__int128 *__return_ptr, uint64_t))(v5 - 8);
      v7 = swift_retain();
      v6(&v19, v7);
      if (v1)
        break;
      sub_1D42B8F48();
      v8 = v19;
      v9 = v20;
      v21 = v4;
      v10 = *(_QWORD *)(v4 + 16);
      if (v10 >= *(_QWORD *)(v4 + 24) >> 1)
      {
        v17 = v20;
        v18 = v19;
        sub_1D42C70E8();
        v9 = v17;
        v8 = v18;
        v4 = v21;
      }
      *(_QWORD *)(v4 + 16) = v10 + 1;
      v11 = v4 + 32 * v10;
      *(_OWORD *)(v11 + 32) = v8;
      *(_OWORD *)(v11 + 48) = v9;
      v5 += 16;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    sub_1D42B8F48();
  }
  else
  {
LABEL_9:
    v12 = sub_1D42B8DB4();
    *(_QWORD *)(v12 + 16) = v4;
    *(_QWORD *)(v12 + 24) = 0;
    v13 = sub_1D42B8DB4();
    *(_QWORD *)(v13 + 16) = &unk_1EFE495E8;
    *(_QWORD *)(v13 + 24) = v12;
    v15 = v0[3];
    v14 = v0[4];
    swift_retain_n();
    sub_1D42B7284((uint64_t)&unk_1EFE495F8, v13, v15, v14, (void (*)(_QWORD *, uint64_t, uint64_t))sub_1D42B864C);
    sub_1D42B8F50();
    swift_release();
    swift_release_n();
  }
  return sub_1D42B8F0C();
}

void sub_1D42B7714()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;

  v4 = v0[4];
  v3 = v0[5];
  type metadata accessor for XPCProxyEncoder.SingleValueContainer();
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = 0;
  v5[3] = 0;
  v5[4] = v4;
  v5[5] = v3;
  v6 = sub_1D42B8DB4();
  *(_QWORD *)(v6 + 16) = sub_1D42B7ECC;
  *(_QWORD *)(v6 + 24) = v5;
  sub_1D42B8E8C();
  if (v0[2])
  {
    sub_1D42B8F70();
    v8 = sub_1D42B6D0C();
    sub_1D42B8EA0(v8, v9);
    sub_1D42B8F24();
    swift_willThrow();
    v0[2] = v2;
    v0[3] = v1;
    sub_1D42B8E7C();
    swift_release();
    swift_unexpectedError();
    __break(1u);
  }
  else
  {
    v7 = sub_1D42B8DB4();
    *(_QWORD *)(v7 + 16) = sub_1D42B7F00;
    *(_QWORD *)(v7 + 24) = v6;
    v0[2] = sub_1D42B8D94;
    v0[3] = v7;
    sub_1D42B8E7C();
    swift_retain();
    sub_1D42B8F24();
    sub_1D42B8E64();
  }
}

uint64_t sub_1D42B7808()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1D42B783C();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_1D42B783C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;

  sub_1D42B8E84();
  v2 = *(void (**)(uint64_t))(v0 + 16);
  if (v2)
  {
    v3 = swift_retain();
    v2(v3);
    if (!v1)
      sub_1D42B8F50();
    sub_1D42B8F64();
  }
  return sub_1D42B8F0C();
}

uint64_t sub_1D42B78D8()
{
  sub_1D42B7B5C();
  return swift_deallocClassInstance();
}

uint64_t sub_1D42B78F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return swift_task_switch();
}

uint64_t sub_1D42B7910()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t *v12;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = 1;
  result = swift_beginAccess();
  v4 = 0;
  v5 = 0;
  v6 = 0;
  v8 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v9 = *(_QWORD *)(v8 + 16);
  if (v7 == v9)
    goto LABEL_4;
  if (v7 < v9)
  {
    v10 = v7 + 1;
    v11 = (_QWORD *)(v8 + 32 * v7);
    v5 = v11[6];
    v6 = v11[7];
    v2 = v11[4];
    v4 = v11[5];
    *(_QWORD *)(v1 + 24) = v10;
    sub_1D42B7FE4(v2);
LABEL_4:
    v12 = *(uint64_t **)(v0 + 40);
    *v12 = v2;
    v12[1] = v4;
    v12[2] = v5;
    v12[3] = v6;
    return sub_1D42B8E40(*(uint64_t (**)(void))(v0 + 8));
  }
  __break(1u);
  return result;
}

uint64_t sub_1D42B79B8(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 48) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 56) = v3;
  *v3 = v2;
  v3[1] = sub_1D42B7A20;
  return v5(v2 + 16);
}

uint64_t sub_1D42B7A20()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_1D42B8E20();
  *v2 = *v1;
  *(_QWORD *)(v3 + 64) = v0;
  swift_task_dealloc();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D42B7A70()
{
  uint64_t v0;
  _OWORD *v1;
  __int128 v2;

  v1 = *(_OWORD **)(v0 + 48);
  v2 = *(_OWORD *)(v0 + 32);
  *v1 = *(_OWORD *)(v0 + 16);
  v1[1] = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D42B7A88()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1D42B7A94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  type metadata accessor for XPCProxyEncoder();
  v3 = (_QWORD *)sub_1D42B6F40();
  sub_1D42B8DCC(v3);
  sub_1D42B8EB4();
  if (!v1)
  {
    v4 = sub_1D42B8DB4();
    *(_QWORD *)(v4 + 16) = sub_1D42B7ECC;
    *(_QWORD *)(v4 + 24) = v2;
    sub_1D42B8E84();
    swift_retain();
    sub_1D43A2408();
    v5 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
    sub_1D43A24B0(v5);
    v6 = *(_QWORD *)(v0 + 16);
    *(_QWORD *)(v6 + 16) = v5 + 1;
    v7 = v6 + 16 * v5;
    *(_QWORD *)(v7 + 32) = sub_1D42B7F00;
    *(_QWORD *)(v7 + 40) = v4;
    sub_1D42B8E7C();
  }
  swift_release();
  sub_1D42B8E4C();
}

uint64_t sub_1D42B7B5C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

void sub_1D42B7B80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;

  type metadata accessor for XPCProxyEncoder();
  v3 = (_QWORD *)sub_1D42B6F40();
  sub_1D42B8DCC(v3);
  sub_1D42B8EB4();
  if (!v1)
  {
    v4 = sub_1D42B8DB4();
    *(_QWORD *)(v4 + 16) = sub_1D42B7ECC;
    *(_QWORD *)(v4 + 24) = v2;
    sub_1D42B8E84();
    v5 = *(_QWORD *)(v0 + 16);
    if (!v5)
    {
      v8 = sub_1D42B8DB4();
      *(_QWORD *)(v8 + 16) = sub_1D42B7F00;
      *(_QWORD *)(v8 + 24) = v4;
      *(_QWORD *)(v0 + 16) = sub_1D42B7F14;
      *(_QWORD *)(v0 + 24) = v8;
      sub_1D42B8E7C();
      goto LABEL_5;
    }
    v6 = *(_QWORD *)(v0 + 24);
    sub_1D42B7F2C();
    sub_1D42B6D0C();
    *v7 = 1;
    swift_retain();
    swift_willThrow();
    *(_QWORD *)(v0 + 16) = v5;
    *(_QWORD *)(v0 + 24) = v6;
    sub_1D42B8E7C();
    swift_release();
  }
  swift_release();
LABEL_5:
  sub_1D42B8E4C();
}

uint64_t sub_1D42B7C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v15;

  v9 = (_QWORD *)sub_1D42B6F40();
  v9[2] = a1;
  v9[3] = a2;
  v9[4] = a3;
  v9[5] = a4;
  v10 = sub_1D42B8DB4();
  *(_QWORD *)(v10 + 16) = sub_1D42B7F9C;
  *(_QWORD *)(v10 + 24) = v9;
  sub_1D42B8E84();
  v11 = *(_QWORD *)(v4 + 16);
  if (v11)
  {
    v12 = *(_QWORD *)(v4 + 24);
    sub_1D42B7F2C();
    sub_1D42B6D0C();
    *v13 = 1;
    sub_1D42B8EDC();
    swift_willThrow();
    *(_QWORD *)(v4 + 16) = v11;
    *(_QWORD *)(v4 + 24) = v12;
    sub_1D42B8E7C();
    return swift_release();
  }
  else
  {
    v15 = sub_1D42B8DB4();
    *(_QWORD *)(v15 + 16) = sub_1D42B7FA8;
    *(_QWORD *)(v15 + 24) = v10;
    *(_QWORD *)(v4 + 16) = sub_1D42B8D94;
    *(_QWORD *)(v4 + 24) = v15;
    sub_1D42B8E7C();
    return sub_1D42B8EDC();
  }
}

uint64_t sub_1D42B7D90(uint64_t a1)
{
  sub_1D42B7FE4(a1);
  return a1;
}

uint64_t sub_1D42B7DD4()
{
  sub_1D42B7DEC();
  sub_1D42B8E30();
  return swift_deallocClassInstance();
}

uint64_t sub_1D42B7DEC()
{
  uint64_t v0;

  sub_1D42B7F68(*(_QWORD *)(v0 + 16));
  sub_1D42B8F2C();
  return v0;
}

uint64_t type metadata accessor for XPCProxyEncoder()
{
  return objc_opt_self();
}

uint64_t sub_1D42B7E30()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for XPCProxyEncoder.KeyedContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for XPCProxyEncoder.KeyedContainer);
}

uint64_t type metadata accessor for XPCProxyEncoder.UnkeyedContainer()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for XPCProxyEncoder.SingleValueContainer()
{
  return objc_opt_self();
}

uint64_t sub_1D42B7ECC()
{
  return sub_1D42B8F40();
}

uint64_t sub_1D42B7EE0()
{
  sub_1D42B8F98();
  return swift_deallocObject();
}

uint64_t sub_1D42B7F00@<X0>(uint64_t *a1@<X8>)
{
  return sub_1D42B8B54(a1);
}

_QWORD *sub_1D42B7F14()
{
  uint64_t v0;

  return sub_1D42B73D0(*(_QWORD *(**)(uint64_t *__return_ptr))(v0 + 16));
}

unint64_t sub_1D42B7F2C()
{
  unint64_t result;

  result = qword_1EFE4A650;
  if (!qword_1EFE4A650)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4527EF8, &type metadata for OptionalUtils.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4A650);
  }
  return result;
}

uint64_t sub_1D42B7F68(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_1D42B7F78()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
  {
    sub_1D42B8F98();
    sub_1D42B8F2C();
  }
  sub_1D42B8E30();
  return swift_deallocObject();
}

uint64_t sub_1D42B7F9C()
{
  uint64_t v0;

  return sub_1D42B7D90(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1D42B7FA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return result;
}

uint64_t sub_1D42B7FE4(uint64_t result)
{
  if (result)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1D42B8014()
{
  return sub_1D42B7524();
}

uint64_t sub_1D42B802C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  result = (*(uint64_t (**)(void))(v0 + 16))();
  if (v1)
    return v3;
  return result;
}

uint64_t sub_1D42B8060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  sub_1D42B7714();
  v6 = *(_QWORD *)(v5 + 32);
  v7 = *(_QWORD *)(v5 + 40);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = v6;
  v8[5] = v7;
  swift_retain_n();
  swift_retain();
  sub_1D42B7C80((uint64_t)&unk_1EFE49650, (uint64_t)v8, v6, v7);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1D42B811C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v6 + 64) = a1;
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EFE49658
                                                                                     + dword_1EFE49658);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 72) = v12;
  *v12 = v6;
  v12[1] = sub_1D42B81C0;
  return v14(v6 + 16, a3, a4, a2, a5, a6);
}

uint64_t sub_1D42B81C0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _OWORD *v3;
  __int128 v4;
  __int128 v5;
  uint64_t v7;

  v2 = *v1;
  v7 = *v1;
  sub_1D42B8F34(&v7);
  if (!v0)
  {
    v3 = *(_OWORD **)(v2 + 64);
    v4 = *(_OWORD *)(v2 + 16);
    v5 = *(_OWORD *)(v2 + 48);
    v3[1] = *(_OWORD *)(v2 + 32);
    v3[2] = v5;
    *v3 = v4;
  }
  return sub_1D42B8ED4((uint64_t (*)(void))v1[1]);
}

uint64_t sub_1D42B8214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t);

  v6[23] = a5;
  v6[24] = a6;
  v6[21] = a2;
  v6[22] = a3;
  v6[20] = a1;
  type metadata accessor for RemoteRequest();
  v8 = swift_task_alloc();
  v6[25] = v8;
  v11 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EFE4E408 + dword_1EFE4E408);
  v9 = (_QWORD *)swift_task_alloc();
  v6[26] = v9;
  *v9 = v6;
  v9[1] = sub_1D42B82B0;
  return v11(v8, a4);
}

uint64_t sub_1D42B82B0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v5)(uint64_t, _QWORD);

  v2 = *v1;
  *(_QWORD *)(v2 + 216) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1D42B8EC8();
    return swift_task_switch();
  }
  else
  {
    v5 = (uint64_t (*)(uint64_t, _QWORD))(**(int **)(v2 + 168) + *(_QWORD *)(v2 + 168));
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 224) = v4;
    *v4 = v2;
    v4[1] = sub_1D42B8364;
    return v5(v2 + 112, *(_QWORD *)(v2 + 200));
  }
}

uint64_t sub_1D42B8364()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_1D42B8E20();
  *v2 = *v1;
  *(_QWORD *)(v3 + 232) = v0;
  swift_task_dealloc();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D42B83B4()
{
  uint64_t v0;

  sub_1D42B8F7C();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D42B83DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 192);
  v4 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 32) = v4;
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 144);
  sub_1D430901C((uint64_t *)(v0 + 16), v2, v3, (uint64_t *)(v0 + 64));
  v5 = *(_QWORD *)(v0 + 200);
  if (v1)
  {
    sub_1D42B8C84((uint64_t *)(v0 + 16));
    sub_1D42B8C48(v5);
    sub_1D42B8F7C();
  }
  else
  {
    v6 = *(_OWORD **)(v0 + 160);
    sub_1D42B8C84((uint64_t *)(v0 + 16));
    sub_1D42B8C48(v5);
    v8 = *(_OWORD *)(v0 + 80);
    v7 = *(_OWORD *)(v0 + 96);
    *v6 = *(_OWORD *)(v0 + 64);
    v6[1] = v8;
    v6[2] = v7;
    swift_task_dealloc();
  }
  return sub_1D42B8E40(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D42B8490()
{
  uint64_t v0;

  sub_1D42B8C48(*(_QWORD *)(v0 + 200));
  sub_1D42B8F7C();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D42B84C0(int *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  v4 = (uint64_t (*)(uint64_t))((char *)a1 + *a1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 48) = v2;
  *v2 = v1;
  v2[1] = sub_1D42B8528;
  return v4(v1 + 16);
}

uint64_t sub_1D42B8528()
{
  sub_1D42B8E00();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D42B8564()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1D42B8578()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D42B8584(int *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)a1 + *a1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  v3 = sub_1D42B8EF0(v2);
  return v5(v3);
}

uint64_t sub_1D42B85E4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_1D42B8E20();
  *v2 = *v1;
  *(_QWORD *)(v3 + 32) = v0;
  swift_task_dealloc();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D42B8634()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1D42B8640()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D42B864C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[5];

  sub_1D42B7714();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a2;
  *(_QWORD *)(v5 + 24) = a3;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = &unk_1EFE49608;
  *(_QWORD *)(v6 + 24) = v5;
  v8[3] = sub_1D42B28FC(&qword_1EFE49620);
  v8[4] = sub_1D42B8AAC();
  v8[0] = &unk_1EFE49618;
  v8[1] = v6;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1D42B7B80();
  swift_release();
  sub_1D42B5400((uint64_t)v8);
  swift_release_n();
  return swift_release();
}

uint64_t sub_1D42B8750(int *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  v4 = (uint64_t (*)(uint64_t))((char *)a1 + *a1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 48) = v2;
  *v2 = v1;
  v2[1] = sub_1D42B87B8;
  return v4(v1 + 16);
}

uint64_t sub_1D42B87B8()
{
  sub_1D42B8E00();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D42B87F4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D42B8818()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = swift_task_alloc();
  v2 = (_QWORD *)sub_1D42B8F00(v1);
  v3 = sub_1D42B8EF0(v2);
  return sub_1D42B78F8(v3, v0);
}

uint64_t sub_1D42B8860()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = *(int **)(v0 + 16);
  v2 = swift_task_alloc();
  v3 = (_QWORD *)sub_1D42B8F00(v2);
  v4 = sub_1D42B8EF0(v3);
  return sub_1D42B79B8(v4, v1);
}

uint64_t sub_1D42B88B8(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_1D42B8D58;
  return sub_1D42B8750(a2);
}

uint64_t sub_1D42B8910(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(int **)(v1 + 16);
  v5 = swift_task_alloc();
  v6 = (_QWORD *)sub_1D42B8F00(v5);
  *v6 = v2;
  v6[1] = sub_1D42B8D54;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EFE49600 + dword_1EFE49600))(a1, v4);
}

uint64_t sub_1D42B897C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v5;

  *(_QWORD *)(v3 + 16) = a1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v5;
  *v5 = v3;
  v5[1] = sub_1D42B89D4;
  return sub_1D42B84C0(a3);
}

uint64_t sub_1D42B89D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;

  v10 = *v5;
  v13 = *v5;
  sub_1D42B8F34(&v13);
  if (!v4)
  {
    v11 = *(_QWORD **)(v10 + 16);
    *v11 = a1;
    v11[1] = a2;
    v11[2] = a3;
    v11[3] = a4;
  }
  return sub_1D42B8ED4((uint64_t (*)(void))v5[1]);
}

uint64_t sub_1D42B8A3C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);

  v1 = swift_task_alloc();
  v2 = (_QWORD *)sub_1D42B8F00(v1);
  *v2 = v0;
  v2[1] = sub_1D42B8D54;
  v3 = sub_1D42B8F84();
  return v4(v3);
}

unint64_t sub_1D42B8AAC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFE49628;
  if (!qword_1EFE49628)
  {
    v1 = sub_1D42B8B10(&qword_1EFE49620);
    v2[0] = &off_1E97ACAD0;
    v2[1] = &off_1E9799778;
    result = MEMORY[0x1D825E41C](&unk_1D45287F8, v1, v2);
    atomic_store(result, &qword_1EFE49628);
  }
  return result;
}

uint64_t sub_1D42B8B10(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1D825E410](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_1D42B8B54@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2)
  {
    *a1 = result;
    a1[1] = v5;
    a1[2] = v6;
    a1[3] = v7;
  }
  return result;
}

uint64_t sub_1D42B8B84()
{
  sub_1D42B8F98();
  sub_1D42B8F2C();
  sub_1D42B8E30();
  return swift_deallocObject();
}

uint64_t sub_1D42B8BA0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = v0[3];
  v4 = v0[4];
  v3 = v0[5];
  v5 = swift_task_alloc();
  v6 = (_QWORD *)sub_1D42B8F00(v5);
  *v6 = v1;
  v6[1] = sub_1D42B8C10;
  v7 = sub_1D42B8F84();
  return sub_1D42B811C(v7, v8, v9, v2, v4, v3);
}

uint64_t sub_1D42B8C10()
{
  uint64_t *v0;
  uint64_t v2;

  sub_1D42B8E20();
  v2 = *v0;
  swift_task_dealloc();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_1D42B8C48(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RemoteRequest();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_1D42B8C84(uint64_t *a1)
{
  uint64_t v2;

  v2 = a1[2];
  sub_1D42B8CDC(*a1, a1[1]);
  sub_1D42B8CF0(v2);
  return a1;
}

uint64_t sub_1D42B8CDC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1D42B5420(a1, a2);
  return a1;
}

uint64_t sub_1D42B8CF0(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1D42B8D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1D825E3A4](a1, v6, a5);
}

_QWORD *sub_1D42B8D94()
{
  return sub_1D42B7F14();
}

uint64_t sub_1D42B8DA8()
{
  return swift_task_switch();
}

uint64_t sub_1D42B8DB4()
{
  return swift_allocObject();
}

uint64_t sub_1D42B8DC0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1D42B8DCC(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  a1[2] = 0;
  a1[3] = 0;
  a1[4] = v3;
  a1[5] = v2;
  sub_1D42B5528(v1, v1[3]);
  return swift_retain();
}

uint64_t sub_1D42B8E00()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 56) = v0;
  return swift_task_dealloc();
}

void sub_1D42B8E20()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_1D42B8E30()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D42B8E40(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1D42B8E7C()
{
  return swift_endAccess();
}

uint64_t sub_1D42B8E84()
{
  return swift_beginAccess();
}

uint64_t sub_1D42B8E8C()
{
  return swift_beginAccess();
}

uint64_t sub_1D42B8EA0(uint64_t a1, _BYTE *a2)
{
  *a2 = 1;
  return swift_retain();
}

uint64_t sub_1D42B8EB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v0, v1, v2);
}

uint64_t sub_1D42B8ED4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1D42B8EDC()
{
  uint64_t v0;

  return sub_1D42B7FE4(v0);
}

uint64_t sub_1D42B8EF0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_1D42B8F00(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t sub_1D42B8F0C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D42B8F24()
{
  return swift_retain();
}

uint64_t sub_1D42B8F2C()
{
  return swift_release();
}

uint64_t sub_1D42B8F34@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_task_dealloc();
}

uint64_t sub_1D42B8F40()
{
  return sub_1D42B7808();
}

uint64_t sub_1D42B8F48()
{
  return swift_release();
}

uint64_t sub_1D42B8F64()
{
  uint64_t v0;

  return sub_1D42B7F68(v0);
}

unint64_t sub_1D42B8F70()
{
  return sub_1D42B7F2C();
}

uint64_t sub_1D42B8F7C()
{
  return swift_task_dealloc();
}

uint64_t sub_1D42B8F84()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D42B8F98()
{
  return swift_release();
}

uint64_t sub_1D42B8FA0(uint64_t a1, void (*a2)(_QWORD, _QWORD), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t AssociatedTypeWitness;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(void);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  void (*v81)(uint64_t *, uint64_t);
  uint64_t v82;
  void (*v83)(uint64_t, char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t (*v95)(uint64_t, uint64_t);
  void (*v96)(uint64_t);
  uint64_t (**v97)(void);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(uint64_t, uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void (*v111)(uint64_t, uint64_t, uint64_t);
  uint64_t v112;
  void (*v113)(uint64_t, uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(uint64_t);
  void (*v122)(void);
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(uint64_t);
  void (*v129)(uint64_t, uint64_t);
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  void (*v138)(void);
  uint64_t v139;
  void (*v140)(void);
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  void (*v144)(uint64_t, uint64_t);
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  void (*v148)(uint64_t, uint64_t);
  uint64_t v149;
  void (*v150)(uint64_t, uint64_t);
  void (*v151)(uint64_t);
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t AssociatedConformanceWitness;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t (*v168)(uint64_t, uint64_t);
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  _QWORD v177[4];
  void (*v178)(uint64_t, uint64_t);
  uint64_t v179;
  uint64_t v180;
  void (*v181)(void);
  void (*v182)(uint64_t);
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  void (*v188)(_QWORD, _QWORD);
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char v196[8];
  uint64_t v197;
  uint64_t v198;
  _QWORD v199[2];
  void (*v200)(_QWORD, _QWORD);
  char v201[8];
  uint64_t v202;
  uint64_t v203;
  _QWORD v204[2];
  uint64_t v205;
  uint64_t v206;
  unint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char v212[8];
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;

  v193 = a4;
  v188 = a2;
  v192 = a1;
  v9 = *(_QWORD *)(a4 + 8);
  v10 = sub_1D42BA2B4();
  v11 = sub_1D42BA2AC();
  v12 = sub_1D42BA2C8(v11, (uint64_t)&v195);
  MEMORY[0x1E0C80A78](v12);
  sub_1D42BA15C();
  sub_1D42BA170();
  MEMORY[0x1E0C80A78](v13);
  sub_1D42BA19C();
  sub_1D42BA180(v14);
  v171 = *(_QWORD *)(a6 + 8);
  v15 = sub_1D451AECC();
  sub_1D42BA240(v15, (uint64_t)v196);
  sub_1D42BA18C(v16);
  MEMORY[0x1E0C80A78](v17);
  sub_1D42BA15C();
  sub_1D42BA170();
  MEMORY[0x1E0C80A78](v18);
  sub_1D42BA19C();
  sub_1D42BA180(v19);
  v182 = *(void (**)(uint64_t))(v9 + 8);
  swift_getAssociatedTypeWitness();
  v194 = a5;
  v20 = sub_1D42BA2B4();
  v21 = sub_1D42BA2AC();
  v22 = sub_1D42BA2C8(v21, (uint64_t)&v184);
  MEMORY[0x1E0C80A78](v22);
  sub_1D42BA15C();
  sub_1D42BA170();
  MEMORY[0x1E0C80A78](v23);
  sub_1D42BA19C();
  sub_1D42BA180(v24);
  sub_1D42BA18C(*(_QWORD *)(v20 - 8));
  MEMORY[0x1E0C80A78](v25);
  sub_1D42BA15C();
  sub_1D42BA170();
  MEMORY[0x1E0C80A78](v26);
  sub_1D42BA19C();
  sub_1D42BA180(v27);
  v167 = v20;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v28 = sub_1D451AECC();
  sub_1D42BA240(v28, (uint64_t)&v183);
  sub_1D42BA18C(v29);
  MEMORY[0x1E0C80A78](v30);
  sub_1D42BA15C();
  sub_1D42BA170();
  MEMORY[0x1E0C80A78](v31);
  sub_1D42BA19C();
  sub_1D42BA180(v32);
  v33 = swift_checkMetadataState();
  sub_1D42BA240(v33, (uint64_t)&v214);
  sub_1D42BA18C(v34);
  MEMORY[0x1E0C80A78](v35);
  sub_1D42BA15C();
  sub_1D42BA170();
  MEMORY[0x1E0C80A78](v36);
  sub_1D42BA19C();
  sub_1D42BA180(v37);
  v195 = a6;
  sub_1D42BA260();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v168 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedTypeWitness - 8);
  sub_1D42BA1F0();
  MEMORY[0x1E0C80A78](v39);
  sub_1D42BA180((uint64_t)&v149 - v40);
  v177[3] = *(_QWORD *)(*(_QWORD *)(swift_getAssociatedConformanceWitness() + 8) + 16);
  v177[0] = AssociatedTypeWitness;
  v41 = swift_getAssociatedTypeWitness();
  sub_1D42BA240(v41, (uint64_t)v204);
  sub_1D42BA1F0();
  MEMORY[0x1E0C80A78](v42);
  sub_1D42BA180((uint64_t)&v149 - v43);
  v44 = *(void (**)(uint64_t, uint64_t))(v10 - 8);
  v179 = v10;
  MEMORY[0x1E0C80A78](v45);
  sub_1D42BA15C();
  sub_1D42BA170();
  MEMORY[0x1E0C80A78](v46);
  sub_1D42BA170();
  MEMORY[0x1E0C80A78](v47);
  sub_1D42BA170();
  MEMORY[0x1E0C80A78](v48);
  sub_1D42BA19C();
  sub_1D42BA180(v49);
  v50 = MEMORY[0x1E0DEB418];
  v181 = (void (*)(void))sub_1D42BA2AC();
  v51 = sub_1D451B160();
  sub_1D42BA240(v51, (uint64_t)v212);
  sub_1D42BA18C(v52);
  MEMORY[0x1E0C80A78](v53);
  sub_1D42BA15C();
  sub_1D42BA170();
  MEMORY[0x1E0C80A78](v54);
  sub_1D42BA19C();
  sub_1D42BA180(v55);
  swift_getAssociatedTypeWitness();
  sub_1D42BA1F0();
  v57 = MEMORY[0x1E0C80A78](v56);
  v58 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](v57);
  v60 = (char *)&v149 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42BA2C0(*(uint64_t (**)(void))(v58 + 16));
  v205 = 0;
  v61 = a3;
  v202 = a3;
  v203 = v193;
  sub_1D42BA280();
  v204[0] = v63;
  v204[1] = v62;
  v64 = sub_1D433962C((void (*)(_QWORD, _QWORD, _QWORD))&v205, (uint64_t)sub_1D42BA070, (uint64_t)v201, a3, v50, (uint64_t)v182);
  v182 = 0;
  v65 = *(uint64_t (**)(void))(v58 + 8);
  v172 = v60;
  sub_1D42BA2C0(v65);
  v209 = v64;
  v66 = v61;
  v67 = v179;
  sub_1D451ACC8();
  swift_getAssociatedConformanceWitness();
  sub_1D451AA40();
  sub_1D42BA08C(v67, v67);
  v178 = v44;
  sub_1D42BA1C8();
  sub_1D451A95C();
  v175 = v9;
  sub_1D451ACE0();
  sub_1D4445AC8();
  sub_1D42BA260();
  v68 = sub_1D451A998();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v211 = v68;
  v69 = sub_1D42B28FC(&qword_1EFE510F0);
  v70 = sub_1D451AA1C();
  v71 = sub_1D42BA0CC();
  v72 = MEMORY[0x1D825E41C](MEMORY[0x1E0DEAF38], v70);
  sub_1D451B898();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v209 = v205;
  v210 = v206;
  v197 = v66;
  v198 = v193;
  sub_1D42BA280();
  v199[0] = v74;
  v199[1] = v73;
  v200 = v188;
  v205 = v69;
  v206 = v70;
  v207 = v71;
  v208 = v72;
  v75 = v187;
  v76 = sub_1D451B424();
  MEMORY[0x1D825E41C](MEMORY[0x1E0DEC3A0], v76);
  v77 = v186;
  v78 = (uint64_t)v181;
  sub_1D451A86C();
  v79 = (uint64_t *)v180;
  v80 = v185;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v80 + 16))(v79, v77, v75);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v79, 1, v78) == 1)
  {
    v81 = *(void (**)(uint64_t *, uint64_t))(v80 + 8);
    v81(v79, v75);
    sub_1D451AE78();
    return ((uint64_t (*)(uint64_t, uint64_t))v81)(v77, v75);
  }
  v153 = v66;
  v82 = *v79;
  v83 = (void (*)(uint64_t, char *, uint64_t))*((_QWORD *)v178 + 4);
  v83(v173, (char *)v79 + *(int *)(v78 + 48), v67);
  v84 = v177[0];
  v180 = swift_getAssociatedConformanceWitness();
  sub_1D451B880();
  v85 = v176;
  sub_1D451B808();
  sub_1D42BA218();
  v86 = (uint64_t (*)(uint64_t, uint64_t))*((_QWORD *)v168 + 1);
  result = v86(v85, v84);
  if (__OFSUB__(v82, v188))
  {
    __break(1u);
    goto LABEL_11;
  }
  v168 = v86;
  v181 = (void (*)(void))v83;
  v88 = v192;
  v188 = (void (*)(_QWORD, _QWORD))(v82 - (_QWORD)v188);
  sub_1D451ADA0();
  v89 = v174;
  v90 = *(void (**)(uint64_t))(v174 + 16);
  v91 = sub_1D42BA24C();
  v93 = *(_QWORD *)(v92 - 256);
  v90(v91);
  sub_1D42BA2A0();
  v94 = sub_1D451ACA4();
  v95 = *(uint64_t (**)(uint64_t, uint64_t))(v89 + 8);
  result = v95(v88, v93);
  if (__OFSUB__(v94, v188))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v150 = (void (*)(uint64_t, uint64_t))v95;
  v152 = v94 - (_QWORD)v188;
  sub_1D42BA1C0((uint64_t)v199);
  v96 = v90;
  v97 = (uint64_t (**)(void))v178;
  sub_1D42BA2C0(*((uint64_t (**)(void))v178 + 2));
  sub_1D451ADA0();
  v98 = sub_1D42BA24C();
  v151 = v96;
  v96(v98);
  sub_1D42BA2A0();
  sub_1D42BA2C0(v97[1]);
  sub_1D42BA1C0((uint64_t)&v198);
  v99 = v165;
  sub_1D451AC98();
  v100 = v164;
  sub_1D451ACBC();
  v101 = v166;
  v102 = *(void (**)(uint64_t, uint64_t))(v166 + 8);
  v103 = v167;
  v102(v99, v167);
  sub_1D451ACE0();
  result = sub_1D451A65C();
  if ((result & 1) == 0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v104 = v161;
  v105 = *(int *)(v161 + 48);
  v106 = v100;
  v107 = v159;
  v178 = v102;
  v108 = v159 + v105;
  sub_1D42BA1B8(v159, v106);
  sub_1D42BA1B8(v108, v99);
  v109 = v162;
  v110 = v162 + *(int *)(v104 + 48);
  v111 = *(void (**)(uint64_t, uint64_t, uint64_t))(v101 + 16);
  v111(v162, v107, v103);
  v111(v110, v108, v103);
  v112 = v156;
  sub_1D42BA1B8(v156, v109);
  v113 = v178;
  v178(v110, v103);
  v114 = v109 + *(int *)(v104 + 48);
  sub_1D42BA1B8(v109, v107);
  sub_1D42BA1B8(v114, v108);
  v115 = v160;
  sub_1D42BA1B8(v112 + *(int *)(v160 + 36), v114);
  v113(v109, v103);
  v116 = v158;
  v117 = v157;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v158 + 32))(v157, v112, v115);
  sub_1D451AD94();
  (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v117, v115);
  sub_1D451B880();
  sub_1D451B808();
  v118 = v184;
  v119 = v191;
  sub_1D42BA218();
  sub_1D42BA1C0((uint64_t)&v191);
  sub_1D42BA1C0((uint64_t)&v208);
  LOBYTE(v115) = sub_1D42BA1DC();
  result = sub_1D42BA1C0((uint64_t)&v213);
  if ((v115 & 1) == 0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v120 = v169 + *(int *)(v170 + 48);
  v121 = v182;
  ((void (*)(uint64_t, uint64_t, uint64_t))v182)(v169, v119, v67);
  v122 = v181;
  ((void (*)(uint64_t, uint64_t, uint64_t))v181)(v120, v118, v67);
  v123 = v155;
  v124 = sub_1D42BA26C();
  v121(v124);
  v125 = sub_1D42BA1A8();
  v121(v125);
  v126 = v190;
  v127 = sub_1D42BA200();
  ((void (*)(uint64_t))v122)(v127);
  v128 = v121;
  v129 = v188;
  v188(v128, v67);
  v130 = sub_1D42BA26C();
  ((void (*)(uint64_t))v122)(v130);
  v131 = sub_1D42BA1A8();
  ((void (*)(uint64_t))v122)(v131);
  sub_1D42BA260();
  v122();
  v129(v123, v67);
  v132 = v154;
  sub_1D42BA2C0(*(uint64_t (**)(void))(v154 + 32));
  sub_1D42BA08C(v126, v126);
  sub_1D42BA1C8();
  sub_1D451A95C();
  sub_1D42BA1C0((uint64_t)v177);
  sub_1D4445AC8();
  v205 = v133;
  v134 = sub_1D451AA1C();
  MEMORY[0x1D825E41C](MEMORY[0x1E0DEAF50], v134);
  sub_1D451ADB8();
  v135 = v184;
  sub_1D42BA2C0(*(uint64_t (**)(void))(v132 + 8));
  v136 = v172;
  sub_1D42BA1C0((uint64_t)v199);
  sub_1D451AC98();
  sub_1D42BA1C0((uint64_t)&v198);
  sub_1D42BA2DC();
  sub_1D42BA1C0(v137);
  LOBYTE(v120) = sub_1D42BA1DC();
  result = sub_1D42BA1C0((uint64_t)&v213);
  if ((v120 & 1) != 0)
  {
    v138 = v181;
    ((void (*)(uint64_t, uint64_t, uint64_t))v181)(v169, v135, v67);
    sub_1D42BA2DC();
    v140 = *(void (**)(void))(v139 - 256);
    v140();
    v141 = sub_1D42BA228();
    ((void (*)(uint64_t))v140)(v141);
    v142 = sub_1D42BA1A8();
    ((void (*)(uint64_t))v140)(v142);
    v143 = sub_1D42BA200();
    ((void (*)(uint64_t))v138)(v143);
    v144 = v188;
    v188(v136, v67);
    v145 = sub_1D42BA228();
    ((void (*)(uint64_t))v138)(v145);
    v146 = sub_1D42BA1A8();
    ((void (*)(uint64_t))v138)(v146);
    sub_1D42BA260();
    v138();
    v144(v123, v67);
    sub_1D42BA1C0((uint64_t)&v217);
    sub_1D451ADAC();
    sub_1D42BA1C0((uint64_t)&v216);
    v147 = v190;
    v148 = v150;
    v150(v183, v190);
    v148(v189, v147);
    sub_1D42BA294((uint64_t)&v215);
    sub_1D42BA294((uint64_t)&v200);
    v81 = *(void (**)(uint64_t *, uint64_t))(v185 + 8);
    v75 = v187;
    v77 = v186;
    return ((uint64_t (*)(uint64_t, uint64_t))v81)(v77, v75);
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_1D42B9FF8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getAssociatedTypeWitness();
  result = sub_1D451ACA4();
  if (__OFADD__(v3, result))
    __break(1u);
  else
    *a2 = v3 + result;
  return result;
}

uint64_t sub_1D42BA070@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1D42B9FF8(a1, a2);
}

uint64_t sub_1D42BA08C(uint64_t a1, uint64_t a2)
{
  if (sub_1D42BA130(a2))
    return sub_1D42B28FC(&qword_1EFE40410);
  else
    return sub_1D451B7CC();
}

unint64_t sub_1D42BA0CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFE49660;
  if (!qword_1EFE49660)
  {
    v1 = sub_1D42B8B10(&qword_1EFE510F0);
    result = MEMORY[0x1D825E41C](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EFE49660);
  }
  return result;
}

BOOL sub_1D42BA110(_QWORD *a1)
{
  uint64_t v1;

  return *a1 > *(_QWORD *)(v1 + 48);
}

uint64_t _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t sub_1D42BA130(uint64_t a1)
{
  if (swift_isClassType())
    return a1;
  else
    return 0;
}

void sub_1D42BA170()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = v0;
}

void sub_1D42BA180(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
}

void sub_1D42BA18C(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
}

uint64_t sub_1D42BA1A8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D42BA1B8(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_1D42BA1C0@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 - 256))();
}

uint64_t sub_1D42BA1C8()
{
  return swift_allocObject();
}

uint64_t sub_1D42BA1DC()
{
  return sub_1D451A65C();
}

uint64_t sub_1D42BA200()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 552);
}

uint64_t sub_1D42BA218()
{
  return sub_1D451B1CC();
}

uint64_t sub_1D42BA228()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D42BA240@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 - 256) = result;
  return result;
}

uint64_t sub_1D42BA24C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 328);
}

uint64_t sub_1D42BA26C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D42BA294@<X0>(uint64_t a1@<X8>)
{
  uint64_t (*v1)(_QWORD, uint64_t);
  uint64_t v2;

  return v1(*(_QWORD *)(a1 - 256), v2);
}

uint64_t sub_1D42BA2A0()
{
  uint64_t (*v0)(uint64_t, _QWORD);
  uint64_t v1;

  return v0(v1 - 152, 0);
}

uint64_t sub_1D42BA2AC()
{
  return swift_getTupleTypeMetadata2();
}

uint64_t sub_1D42BA2B4()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1D42BA2C0@<X0>(uint64_t (*a1)(void)@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return a1();
}

uint64_t sub_1D42BA2C8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 - 256) = result;
  return result;
}

uint64_t sub_1D42BA2F0()
{
  return sub_1D451B964();
}

void sub_1D42BA314()
{
  sub_1D42BE9A8();
  sub_1D451B964();
  sub_1D451B994();
  sub_1D42BE978();
}

uint64_t _s13SoundAnalysis17_SNClassificationC20supportsSecureCodingSbvgZ_0()
{
  return 1;
}

uint64_t sub_1D42BA354()
{
  sub_1D451B958();
  sub_1D451B964();
  return sub_1D451B994();
}

uint64_t sub_1D42BA3A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1D451A614();
  sub_1D42BE7C8(v2 + *(int *)(a2 + 52));
  return sub_1D44584A4();
}

uint64_t sub_1D42BA420()
{
  if ((sub_1D451A698() & 1) != 0)
    type metadata accessor for SharedLogMelSpectrogram.Configuration();
  return 0;
}

BOOL sub_1D42BA51C(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_1D42BA52C()
{
  return sub_1D451B964();
}

uint64_t sub_1D42BA550(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000018 && a2 == 0x80000001D45507C0 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D45507E0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D42BA63C()
{
  return 2;
}

uint64_t sub_1D42BA644()
{
  sub_1D451B958();
  sub_1D451B964();
  return sub_1D451B994();
}

uint64_t sub_1D42BA688()
{
  return 0;
}

unint64_t sub_1D42BA694(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000013;
  else
    return 0xD000000000000018;
}

BOOL sub_1D42BA6D0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D42BA51C(*a1, *a2);
}

uint64_t sub_1D42BA6E8()
{
  return sub_1D42BA644();
}

uint64_t sub_1D42BA6FC()
{
  return sub_1D42BA52C();
}

uint64_t sub_1D42BA710()
{
  sub_1D451B958();
  sub_1D42BA52C();
  return sub_1D451B994();
}

unint64_t sub_1D42BA758()
{
  char *v0;

  return sub_1D42BA694(*v0);
}

uint64_t sub_1D42BA76C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D42BA550(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D42BA79C()
{
  return sub_1D42BA688();
}

uint64_t sub_1D42BA7C4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D42BA63C();
  *a1 = result;
  return result;
}

uint64_t sub_1D42BA7F4(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D4523B28, a1);
  return sub_1D451BA3C();
}

uint64_t sub_1D42BA828(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D4523B28, a1);
  return sub_1D451BA48();
}

void sub_1D42BA85C(uint64_t a1)
{
  _BYTE v2[72];

  sub_1D42BE9A8();
  sub_1D42BA3A0((uint64_t)v2, a1);
  sub_1D451B994();
  sub_1D42BE978();
}

void sub_1D42BA890(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  type metadata accessor for SharedLogMelSpectrogram.Configuration();
}

double sub_1D42BA908(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  char v5;
  int v6;
  int v7;
  uint64_t v8;
  double result;

  v8 = v2 + *(int *)(a1 + 52);
  *(_DWORD *)v8 = v6;
  *(_DWORD *)(v8 + 4) = v3;
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v1 + 8);
  *(_DWORD *)(v8 + 16) = v4;
  *(_DWORD *)(v8 + 20) = v7;
  *(_BYTE *)(v8 + 24) = v5;
  *(_OWORD *)(v8 + 28) = *(_OWORD *)(v1 + 28);
  result = *(double *)(v1 + 44);
  *(double *)(v8 + 44) = result;
  return result;
}

uint64_t sub_1D42BA968(uint64_t a1, uint64_t a2)
{
  _BYTE v4[72];

  sub_1D451B958();
  sub_1D42BA3A0((uint64_t)v4, a2);
  return sub_1D451B994();
}

uint64_t sub_1D42BA9A8()
{
  return sub_1D42BA420();
}

uint64_t sub_1D42BA9B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = sub_1D42B28FC(&qword_1EFE496F0);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  sub_1D42BE8F8();
  v3 = *(_QWORD *)(v0 + 16);
  v4 = (_QWORD *)swift_allocObject();
  v4[2] = sub_1D42BE1BC;
  v4[3] = v0;
  v4[4] = v3;
  sub_1D42BE9A0();
  sub_1D42BE984();
  sub_1D42B28FC((uint64_t *)&unk_1EFE4C9F0);
  sub_1D42BE210((unint64_t *)&unk_1EFE4F850, (uint64_t *)&unk_1EFE4C9F0, MEMORY[0x1E0C95D90]);
  sub_1D451A2C0();
  sub_1D42BE210(qword_1EFE496F8, &qword_1EFE496F0, MEMORY[0x1E0C96148]);
  v5 = sub_1D451A2E4();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  return v5;
}

uint64_t sub_1D42BAAD8()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SharedLogMelSpectrogram.Instance()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for SharedLogMelSpectrogram()
{
  return &type metadata for SharedLogMelSpectrogram;
}

uint64_t sub_1D42BAB2C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1D42BAB34()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1D42BABA8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  v8 = v7 & 0xFC | 3;
  v9 = v7 & 0x100000;
  if (v8 > 7 || v9 != 0 || ((v6 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 52 > 0x18)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v12 + ((v8 + 16) & ~v8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v13 = ((unint64_t)v4 + v6 + 3) & 0xFFFFFFFFFFFFFFFCLL;
    v14 = ((unint64_t)a2 + v6 + 3) & 0xFFFFFFFFFFFFFFFCLL;
    v16 = *(_OWORD *)(v14 + 16);
    v15 = *(_OWORD *)(v14 + 32);
    v17 = *(_OWORD *)v14;
    *(_DWORD *)(v13 + 48) = *(_DWORD *)(v14 + 48);
    *(_OWORD *)(v13 + 16) = v16;
    *(_OWORD *)(v13 + 32) = v15;
    *(_OWORD *)v13 = v17;
  }
  return v4;
}

uint64_t sub_1D42BAC68(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1D42BAC78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 3;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFFCLL;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFFCLL;
  v10 = *(_OWORD *)(v8 + 16);
  v9 = *(_OWORD *)(v8 + 32);
  v11 = *(_OWORD *)v8;
  *(_DWORD *)(v7 + 48) = *(_DWORD *)(v8 + 48);
  *(_OWORD *)(v7 + 16) = v10;
  *(_OWORD *)(v7 + 32) = v9;
  *(_OWORD *)v7 = v11;
  return a1;
}

uint64_t sub_1D42BACE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 3;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFFCLL;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFFCLL;
  *(_DWORD *)v7 = *(_DWORD *)v8;
  *(_DWORD *)(v7 + 4) = *(_DWORD *)(v8 + 4);
  *(_DWORD *)(v7 + 8) = *(_DWORD *)(v8 + 8);
  *(_DWORD *)(v7 + 12) = *(_DWORD *)(v8 + 12);
  *(_DWORD *)(v7 + 16) = *(_DWORD *)(v8 + 16);
  *(_DWORD *)(v7 + 20) = *(_DWORD *)(v8 + 20);
  *(_BYTE *)(v7 + 24) = *(_BYTE *)(v8 + 24);
  *(_DWORD *)(v7 + 28) = *(_DWORD *)(v8 + 28);
  *(_DWORD *)(v7 + 32) = *(_DWORD *)(v8 + 32);
  *(_DWORD *)(v7 + 36) = *(_DWORD *)(v8 + 36);
  *(_DWORD *)(v7 + 40) = *(_DWORD *)(v8 + 40);
  *(_DWORD *)(v7 + 44) = *(_DWORD *)(v8 + 44);
  *(_DWORD *)(v7 + 48) = *(_DWORD *)(v8 + 48);
  return a1;
}

uint64_t sub_1D42BADA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 3;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFFCLL;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFFCLL;
  v10 = *(_OWORD *)(v8 + 16);
  v9 = *(_OWORD *)(v8 + 32);
  v11 = *(_OWORD *)v8;
  *(_DWORD *)(v7 + 48) = *(_DWORD *)(v8 + 48);
  *(_OWORD *)(v7 + 16) = v10;
  *(_OWORD *)(v7 + 32) = v9;
  *(_OWORD *)v7 = v11;
  return a1;
}

uint64_t sub_1D42BAE0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 3;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFFCLL;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFFCLL;
  *(_DWORD *)v7 = *(_DWORD *)v8;
  *(_DWORD *)(v7 + 4) = *(_DWORD *)(v8 + 4);
  *(_DWORD *)(v7 + 8) = *(_DWORD *)(v8 + 8);
  *(_DWORD *)(v7 + 12) = *(_DWORD *)(v8 + 12);
  *(_DWORD *)(v7 + 16) = *(_DWORD *)(v8 + 16);
  *(_DWORD *)(v7 + 20) = *(_DWORD *)(v8 + 20);
  *(_BYTE *)(v7 + 24) = *(_BYTE *)(v8 + 24);
  *(_DWORD *)(v7 + 28) = *(_DWORD *)(v8 + 28);
  *(_DWORD *)(v7 + 32) = *(_DWORD *)(v8 + 32);
  *(_DWORD *)(v7 + 36) = *(_DWORD *)(v8 + 36);
  *(_DWORD *)(v7 + 40) = *(_DWORD *)(v8 + 40);
  *(_DWORD *)(v7 + 44) = *(_DWORD *)(v8 + 44);
  *(_DWORD *)(v7 + 48) = *(_DWORD *)(v8 + 48);
  return a1;
}

uint64_t sub_1D42BAEC8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v13;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0xFE)
    v7 = 254;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 >= 0xFE)
      return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, v6, v4);
    v13 = *(unsigned __int8 *)(((a1 + v8 + 3) & 0xFFFFFFFFFFFFFCLL) + 0x18);
    if (v13 >= 2)
      return ((v13 + 2147483646) & 0x7FFFFFFF) + 1;
    return 0;
  }
  if (((((v8 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 52) & 0xFFFFFFFC) != 0)
    v9 = 2;
  else
    v9 = a2 - v7 + 1;
  if (v9 >= 0x10000)
    v10 = 4;
  else
    v10 = 2;
  if (v9 < 0x100)
    v10 = 1;
  if (v9 >= 2)
    v11 = v10;
  else
    v11 = 0;
  return ((uint64_t (*)(void))((char *)&loc_1D42BAF44 + 4 * byte_1D45237D0[v11]))();
}

void sub_1D42BAFC4(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0xFEu)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 3) & 0xFFFFFFFC) == 0xFFFFFFCC)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
  }
  if (a2 > v6)
  {
    if (((*(_DWORD *)(v5 + 64) + 3) & 0xFFFFFFFC) != 0xFFFFFFCC)
    {
      v10 = ~v6 + a2;
      bzero(a1, ((*(_QWORD *)(v5 + 64) + 3) & 0xFFFFFFFFFFFFFFFCLL) + 52);
      *a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_1D42BB0B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  unint64_t v8;

  *(_BYTE *)(v5 + v6) = 0;
  if ((_DWORD)a2)
  {
    if (a3 < 0xFE)
    {
      v8 = (v5 + v4 + 3) & 0xFFFFFFFFFFFFFFFCLL;
      if (a2 > 0xFE)
      {
        *(_QWORD *)(v8 + 40) = 0;
        *(_OWORD *)(v8 + 24) = 0u;
        *(_OWORD *)(v8 + 8) = 0u;
        *(_DWORD *)(v8 + 48) = 0;
        *(_QWORD *)v8 = (a2 - 255);
      }
      else
      {
        *(_BYTE *)(v8 + 24) = a2 + 1;
      }
    }
    else
    {
      return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v5, a2, a3, a4);
    }
  }
  return result;
}

uint64_t _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

void type metadata accessor for SharedLogMelSpectrogram.Configuration()
{
  JUMPOUT(0x1D825E3A4);
}

void sub_1D42BB16C()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D42BB17C()
{
  sub_1D42BE910();
  type metadata accessor for SharedLogMelSpectrogram.Configuration.CodingKeys();
}

void sub_1D42BB1BC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  char v11;

  MEMORY[0x1D825E41C](&unk_1D4523B28, a1);
  v4 = *(_QWORD *)(sub_1D451B7A8() - 8);
  sub_1D42BE8BC();
  MEMORY[0x1E0C80A78]();
  sub_1D42BE8E8();
  sub_1D42B5528(v1, v1[3]);
  v5 = *(_QWORD *)(v3 - 200);
  sub_1D451BA24();
  *(_BYTE *)(v3 - 144) = 0;
  v6 = *(_QWORD *)(v3 - 152);
  sub_1D451B760();
  if (!v6)
  {
    *(float *)(v3 - 144) = sub_1D42BE7C8(v5 + *(int *)(v2 + 52));
    *(_DWORD *)(v3 - 140) = v7;
    *(_QWORD *)(v3 - 136) = *(_QWORD *)(v8 + 8);
    *(_DWORD *)(v3 - 128) = v9;
    *(_DWORD *)(v3 - 124) = v10;
    *(_BYTE *)(v3 - 120) = v11;
    *(_OWORD *)(v3 - 116) = *(_OWORD *)(v8 + 28);
    *(_QWORD *)(v3 - 100) = *(_QWORD *)(v8 + 44);
    *(_BYTE *)(v3 - 65) = 1;
    sub_1D42BB5D0();
    sub_1D451B760();
  }
  sub_1D42BE98C(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_1D42BE844();
}

void sub_1D42BB2F0()
{
  uint64_t v0;

  sub_1D42BE910();
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v0);
  sub_1D42BE768();
  type metadata accessor for SharedLogMelSpectrogram.Configuration.CodingKeys();
}

void sub_1D42BB35C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  MEMORY[0x1D825E41C](&unk_1D4523B28, a1);
  v6 = sub_1D451B6E8();
  *(_QWORD *)(v5 - 152) = v6;
  *(_QWORD *)(v5 - 200) = *(_QWORD *)(v6 - 8);
  sub_1D42BE8BC();
  MEMORY[0x1E0C80A78]();
  *(_QWORD *)(v5 - 160) = v1;
  *(_QWORD *)(v5 - 136) = v1;
  *(_QWORD *)(v5 - 128) = v2;
  *(_QWORD *)(v5 - 184) = v2;
  *(_QWORD *)(v5 - 120) = v3;
  *(_QWORD *)(v5 - 112) = v4;
  sub_1D42BE9B4();
}

void sub_1D42BB3C8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  char v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(_QWORD *)(a1 - 8);
  sub_1D42BE8BC();
  MEMORY[0x1E0C80A78]();
  sub_1D42BE8E8();
  sub_1D42B5528(v1, v1[3]);
  *(_QWORD *)(v4 - 168) = v3;
  v7 = *(_QWORD *)(v4 - 144);
  sub_1D451BA0C();
  if (v7)
  {
    sub_1D42BE944();
  }
  else
  {
    v8 = *(_QWORD *)(v4 - 192);
    *(_QWORD *)(v4 - 144) = v6;
    *(_BYTE *)(v4 - 136) = 0;
    v9 = *(_QWORD *)(v4 - 176);
    v10 = *(_QWORD *)(v4 - 160);
    sub_1D451B688();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v2, v9, v10);
    *(_BYTE *)(v4 - 65) = 1;
    sub_1D42BB594();
    sub_1D451B688();
    sub_1D42BE7E0();
    v11 = *(_DWORD *)(v4 - 132);
    v12 = *(_DWORD *)(v4 - 120);
    v13 = *(_DWORD *)(v4 - 116);
    v14 = *(_BYTE *)(v4 - 112);
    v15 = v2 + *(int *)(a1 + 52);
    *(_DWORD *)v15 = *(_DWORD *)(v4 - 136);
    *(_DWORD *)(v15 + 4) = v11;
    *(_QWORD *)(v15 + 8) = *(_QWORD *)(v4 - 128);
    *(_DWORD *)(v15 + 16) = v12;
    *(_DWORD *)(v15 + 20) = v13;
    *(_BYTE *)(v15 + 24) = v14;
    *(_OWORD *)(v15 + 28) = *(_OWORD *)(v4 - 108);
    *(_QWORD *)(v15 + 44) = *(_QWORD *)(v4 - 92);
    v16 = *(_QWORD *)(v4 - 144);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v16 + 16))(*(_QWORD *)(v4 - 208), v2, a1);
    sub_1D42BE944();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v2, a1);
  }
  sub_1D42BE844();
}

void sub_1D42BB554()
{
  sub_1D42BB2F0();
}

void sub_1D42BB574()
{
  sub_1D42BB17C();
}

void type metadata accessor for SharedLogMelSpectrogram.Configuration.CodingKeys()
{
  JUMPOUT(0x1D825E3A4);
}

unint64_t sub_1D42BB594()
{
  unint64_t result;

  result = qword_1EFE49668;
  if (!qword_1EFE49668)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4540EFC, &type metadata for LogMelParameters);
    atomic_store(result, (unint64_t *)&qword_1EFE49668);
  }
  return result;
}

unint64_t sub_1D42BB5D0()
{
  unint64_t result;

  result = qword_1EFE49670;
  if (!qword_1EFE49670)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4540ED4, &type metadata for LogMelParameters);
    atomic_store(result, (unint64_t *)&qword_1EFE49670);
  }
  return result;
}

uint64_t sub_1D42BB60C(void *__src)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE __dst[120];

  memcpy(__dst, __src, sizeof(__dst));
  sub_1D42BE934();
  sub_1D42BE984();
  sub_1D42B5B38((uint64_t)__src);
  sub_1D4471268();
  v3 = v2;
  sub_1D42BDEAC((uint64_t)__src);
  sub_1D42B8F48();
  swift_release();
  return v3;
}

uint64_t sub_1D42BB6BC()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_1D42B6F40();
  memcpy((void *)(v1 + 16), v0, 0x48uLL);
  sub_1D42BE9A0();
  sub_1D42BE38C((uint64_t)v0);
  sub_1D44715A4();
  v3 = v2;
  sub_1D42BE998();
  swift_release();
  return v3;
}

void sub_1D42BB78C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[6];

  sub_1D42BE910();
  v2 = v1;
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v7);
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v9, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v0, v4);
  v10 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v4;
  *(_QWORD *)(v11 + 24) = v2;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v11 + v10, (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = sub_1D42BE7A0();
  v14 = sub_1D42BE7A0();
  v15 = sub_1D42BE7A0();
  v16[2] = AssociatedTypeWitness;
  v16[3] = v13;
  v16[4] = v14;
  v16[5] = v15;
  sub_1D42BE9B4();
}

void sub_1D42BB8AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for SharedLogMelSpectrogram.Instance();
  v7 = MEMORY[0x1D825E41C](&unk_1D45238F8, a1);
  sub_1D44782C4(v1, v3, (uint64_t)sub_1D42BE178, v2, a1, v6, v7, v4 - 72);
  swift_release();
  sub_1D42BE998();
  sub_1D42BE844();
}

uint64_t sub_1D42BB920(uint64_t a1)
{
  return sub_1D42BB99C(a1);
}

uint64_t sub_1D42BB940(uint64_t a1, const void *a2)
{
  _BYTE __dst[72];

  memcpy(__dst, a2, sizeof(__dst));
  return sub_1D42BC1A0(a1, (uint64_t (*)(uint64_t *))sub_1D42BE458);
}

uint64_t sub_1D42BB99C(uint64_t a1)
{
  _QWORD v2[3];
  uint64_t v3;

  v2[2] = &v3;
  return sub_1D42BBAE0(a1, (uint64_t (*)(_QWORD *))sub_1D42BDEF4, (uint64_t)v2);
}

void sub_1D42BB9D0()
{
  swift_getAssociatedTypeWitness();
  sub_1D42BE7B4();
  sub_1D42BE7B4();
  sub_1D42BE7B4();
  sub_1D42BC7A0();
}

void sub_1D42BBAA0(void *a1)
{
  sub_1D439940C(a1);
}

void sub_1D42BBAC0(uint64_t a1, uint64_t a2)
{
  sub_1D43994BC(a1, a2);
}

uint64_t sub_1D42BBAE0(uint64_t a1, uint64_t (*a2)(_QWORD *), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int v25;
  uint64_t v26;
  int v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (**v41)@<X0>(uint64_t *@<X8>);
  uint64_t (**v42)@<X0>(uint64_t@<X0>, uint64_t *@<X1>, uint64_t *@<X8>);
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  int v54;
  int v55;
  int v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t (*v71)(_QWORD *);
  _QWORD __dst[12];
  char *v73;

  v70 = a3;
  v71 = a2;
  v63 = sub_1D42B28FC(&qword_1EFE49678);
  MEMORY[0x1E0C80A78](v63);
  v66 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_1D42B28FC(&qword_1EFE49680);
  v64 = *(_QWORD *)(v65 - 8);
  MEMORY[0x1E0C80A78](v65);
  v69 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_1D42B28FC(&qword_1EFE49688);
  MEMORY[0x1E0C80A78](v67);
  v68 = (uint64_t)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D42B28FC(&qword_1EFE49690);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D42B28FC(&qword_1EFE49698);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1D4519D20();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42B5B38(a1);
  v18 = v73;
  v19 = sub_1D42BCFD8(a1);
  if (v18)
    return sub_1D42BDEAC(a1);
  v58 = v9;
  v59 = v13;
  v60 = v11;
  v61 = v10;
  v73 = v17;
  v62 = v15;
  v57 = v14;
  v21 = v19;
  memcpy(__dst, (const void *)a1, 0x41uLL);
  __dst[9] = 1;
  __dst[10] = v21;
  v22 = v71(__dst);
  sub_1D42BDEAC(a1);
  sub_1D4519D14();
  v71 = (uint64_t (*)(_QWORD *))v22;
  __dst[0] = sub_1D4398FE0();
  sub_1D42B28FC((uint64_t *)&unk_1EFE4ACD0);
  v23 = sub_1D42B28FC(&qword_1EFE4C9D0);
  sub_1D42BE210(&qword_1EFE496A0, (uint64_t *)&unk_1EFE4ACD0, MEMORY[0x1E0C95D90]);
  v24 = v69;
  sub_1D451A308();
  result = swift_release();
  v25 = *(_DWORD *)(a1 + 104);
  LODWORD(v70) = *(_DWORD *)(a1 + 100);
  v56 = v25;
  v26 = (v25 + v70);
  if (__CFADD__(v25, (_DWORD)v70))
  {
    __break(1u);
  }
  else
  {
    v54 = *(_BYTE *)(a1 + 92) & 1;
    v27 = *(_DWORD *)(a1 + 88);
    v53 = *(_DWORD *)(a1 + 84);
    v28 = *(_DWORD *)(a1 + 72);
    v29 = *(_DWORD *)(a1 + 68);
    v55 = *(_DWORD *)(a1 + 116);
    v30 = *(unsigned int *)(a1 + 96);
    v31 = v64;
    v32 = *(_QWORD *)(a1 + 108);
    v33 = *(_QWORD *)(a1 + 76);
    v34 = (uint64_t)v66;
    v35 = v65;
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v66, v24, v65);
    v36 = v63;
    *(_QWORD *)(v34 + *(int *)(v63 + 60)) = v26;
    *(_QWORD *)(v34 + *(int *)(v36 + 64)) = v30;
    *(_QWORD *)(v34 + *(int *)(v36 + 68)) = v23;
    v37 = swift_allocObject();
    *(_DWORD *)(v37 + 16) = v29;
    *(_DWORD *)(v37 + 20) = v28;
    *(_QWORD *)(v37 + 24) = v33;
    *(_DWORD *)(v37 + 32) = v53;
    *(_DWORD *)(v37 + 36) = v27;
    *(_BYTE *)(v37 + 40) = v54;
    v38 = v70;
    *(_DWORD *)(v37 + 44) = v30;
    *(_DWORD *)(v37 + 48) = v38;
    *(_DWORD *)(v37 + 52) = v56;
    *(_QWORD *)(v37 + 56) = v32;
    *(_DWORD *)(v37 + 64) = v55;
    v39 = v68;
    sub_1D42BDF28(v34, v68);
    v40 = v67;
    v41 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v39 + *(int *)(v67 + 52));
    *v41 = sub_1D42BDF10;
    v41[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v37;
    v42 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t *@<X1>, uint64_t *@<X8>))(v39 + *(int *)(v40 + 56));
    *v42 = sub_1D42BDD1C;
    v42[1] = 0;
    sub_1D42BDFDC(v34, &qword_1EFE49678);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v24, v35);
    v43 = swift_allocObject();
    *(_QWORD *)(v43 + 16) = sub_1D42BD264;
    *(_QWORD *)(v43 + 24) = 0;
    sub_1D42B28FC(&qword_1EFE496A8);
    sub_1D42BE210(&qword_1EFE496B0, &qword_1EFE49688, (uint64_t)&unk_1D4544100);
    sub_1D42BE210(&qword_1EFE496B8, &qword_1EFE496A8, MEMORY[0x1E0C959F8]);
    v44 = (uint64_t)v58;
    sub_1D451A3C8();
    swift_release();
    sub_1D42BDFDC(v39, &qword_1EFE49688);
    __dst[0] = 0;
    __dst[1] = 0xE000000000000000;
    sub_1D451B400();
    swift_bridgeObjectRelease();
    __dst[0] = 0xD000000000000021;
    __dst[1] = 0x80000001D4550710;
    sub_1D42BDF9C();
    v45 = v73;
    v46 = v57;
    sub_1D451B7C0();
    sub_1D451A794();
    swift_bridgeObjectRelease();
    sub_1D451A794();
    v47 = v59;
    sub_1D44A458C();
    swift_bridgeObjectRelease();
    sub_1D42BDFDC(v44, &qword_1EFE49690);
    sub_1D42BE210(&qword_1EFE496C0, &qword_1EFE49698, MEMORY[0x1E0C957C0]);
    v48 = v61;
    v49 = sub_1D451A374();
    sub_1D42B28FC(&qword_1EFE496C8);
    swift_allocObject();
    v50 = sub_1D43AEFD8(v49);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v47, v48);
    __dst[0] = v50;
    sub_1D42BE210(&qword_1EFE496D0, &qword_1EFE496C8, (uint64_t)&unk_1D4537AC0);
    v51 = sub_1D451A2E4();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v45, v46);
    type metadata accessor for SharedLogMelSpectrogram.Instance();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v51;
  }
  return result;
}

uint64_t sub_1D42BC1A0(uint64_t a1, uint64_t (*a2)(uint64_t *))
{
  uint64_t v2;
  int *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  float v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t (**v32)@<X0>(uint64_t *@<X8>);
  uint64_t (**v33)@<X0>(uint64_t@<X0>, uint64_t *@<X1>, uint64_t *@<X8>);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;

  v5 = (int *)sub_1D42B28FC(&qword_1EFE49678);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_1D42B28FC(&qword_1EFE49680);
  v62 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_1D42B28FC(&qword_1EFE49688);
  MEMORY[0x1E0C80A78](v53);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1D42B28FC(&qword_1EFE49690);
  MEMORY[0x1E0C80A78](v12);
  v54 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1D42B28FC(&qword_1EFE49698);
  v56 = *(_QWORD *)(v14 - 8);
  v57 = v14;
  MEMORY[0x1E0C80A78](v14);
  v55 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1D4519D20();
  v58 = *(_QWORD *)(v16 - 8);
  v59 = v16;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1D42BD04C((float *)a1);
  if (!v2)
  {
    v60 = 1;
    v61 = result;
    v20 = a2(&v60);
    v49 = v18;
    sub_1D4519D14();
    v50 = v20;
    v60 = sub_1D4398FE0();
    v51 = sub_1D42B28FC((uint64_t *)&unk_1EFE4ACD0);
    v21 = sub_1D42B28FC(&qword_1EFE4C9D0);
    sub_1D42BE210(&qword_1EFE496A0, (uint64_t *)&unk_1EFE4ACD0, MEMORY[0x1E0C95D90]);
    v51 = v21;
    sub_1D451A308();
    result = swift_release();
    v22 = *(_DWORD *)(a1 + 32);
    v47 = *(_DWORD *)(a1 + 36);
    v48 = v22;
    v23 = (v47 + v22);
    if (__CFADD__(v47, v22))
    {
      __break(1u);
    }
    else
    {
      v24 = *(_BYTE *)(a1 + 24) & 1;
      v25 = *(_DWORD *)(a1 + 20);
      v44 = *(_DWORD *)(a1 + 16);
      v45 = v24;
      v43 = *(_DWORD *)(a1 + 4);
      v26 = *(float *)a1;
      v46 = *(_DWORD *)(a1 + 48);
      v27 = *(unsigned int *)(a1 + 28);
      v28 = v52;
      (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v7, v9, v52);
      *(_QWORD *)&v7[v5[15]] = v23;
      *(_QWORD *)&v7[v5[16]] = v27;
      *(_QWORD *)&v7[v5[17]] = v51;
      v29 = swift_allocObject();
      *(float *)(v29 + 16) = v26;
      *(_DWORD *)(v29 + 20) = v43;
      *(_QWORD *)(v29 + 24) = *(_QWORD *)(a1 + 8);
      *(_DWORD *)(v29 + 32) = v44;
      *(_DWORD *)(v29 + 36) = v25;
      *(_BYTE *)(v29 + 40) = v45;
      v30 = v48;
      *(_DWORD *)(v29 + 44) = v27;
      *(_DWORD *)(v29 + 48) = v30;
      *(_DWORD *)(v29 + 52) = v47;
      *(_QWORD *)(v29 + 56) = *(_QWORD *)(a1 + 40);
      *(_DWORD *)(v29 + 64) = v46;
      sub_1D42BDF28((uint64_t)v7, (uint64_t)v11);
      v31 = v53;
      v32 = (uint64_t (**)@<X0>(uint64_t *@<X8>))&v11[*(int *)(v53 + 52)];
      *v32 = sub_1D42BE750;
      v32[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v29;
      v33 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t *@<X1>, uint64_t *@<X8>))&v11[*(int *)(v31 + 56)];
      *v33 = sub_1D42BDD1C;
      v33[1] = 0;
      sub_1D42BDFDC((uint64_t)v7, &qword_1EFE49678);
      (*(void (**)(char *, uint64_t))(v62 + 8))(v9, v28);
      v34 = swift_allocObject();
      *(_QWORD *)(v34 + 16) = sub_1D42BD264;
      *(_QWORD *)(v34 + 24) = 0;
      sub_1D42B28FC(&qword_1EFE496A8);
      sub_1D42BE210(&qword_1EFE496B0, &qword_1EFE49688, (uint64_t)&unk_1D4544100);
      sub_1D42BE210(&qword_1EFE496B8, &qword_1EFE496A8, MEMORY[0x1E0C959F8]);
      v35 = (uint64_t)v54;
      sub_1D451A3C8();
      swift_release();
      sub_1D42BDFDC((uint64_t)v11, &qword_1EFE49688);
      v60 = 0;
      v61 = 0xE000000000000000;
      sub_1D451B400();
      swift_bridgeObjectRelease();
      v60 = 0xD000000000000021;
      v61 = 0x80000001D4550710;
      sub_1D42BDF9C();
      v36 = v49;
      v37 = v59;
      sub_1D451B7C0();
      sub_1D451A794();
      swift_bridgeObjectRelease();
      sub_1D451A794();
      v38 = v55;
      sub_1D44A458C();
      swift_bridgeObjectRelease();
      sub_1D42BDFDC(v35, &qword_1EFE49690);
      sub_1D42BE210(&qword_1EFE496C0, &qword_1EFE49698, MEMORY[0x1E0C957C0]);
      v39 = v57;
      v40 = sub_1D451A374();
      sub_1D42B28FC(&qword_1EFE496C8);
      swift_allocObject();
      v41 = sub_1D43AEFD8(v40);
      (*(void (**)(char *, uint64_t))(v56 + 8))(v38, v39);
      v60 = v41;
      sub_1D42BE210(&qword_1EFE496D0, &qword_1EFE496C8, (uint64_t)&unk_1D4537AC0);
      v42 = sub_1D451A2E4();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v36, v37);
      type metadata accessor for SharedLogMelSpectrogram.Instance();
      result = swift_allocObject();
      *(_QWORD *)(result + 16) = v42;
    }
  }
  return result;
}

void sub_1D42BC7A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D42B28FC(&qword_1EFE49678);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v0);
  sub_1D42BE768();
  sub_1D42BA180(v1);
  sub_1D42B28FC(&qword_1EFE49680);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v2);
  sub_1D42BE768();
  sub_1D42B28FC(&qword_1EFE49688);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v3);
  sub_1D42BE768();
  sub_1D42BA180(v4);
  sub_1D42B28FC(&qword_1EFE49690);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v5);
  sub_1D42BE768();
  sub_1D42BA180(v6);
  sub_1D42B28FC(&qword_1EFE49698);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v7);
  sub_1D42BE768();
  sub_1D42BA180(v8);
  sub_1D4519D20();
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v9);
  sub_1D42BE768();
  MEMORY[0x1E0C80A78](v10);
  sub_1D42BE8F8();
  type metadata accessor for SharedReformattedAudioSource.Configuration();
}

void sub_1D42BC948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1D42BE8BC();
  MEMORY[0x1E0C80A78](v17);
  *(_QWORD *)(v16 - 232) = (char *)&a9 - v18;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v10, v15, v14);
  *(_QWORD *)(v16 - 176) = v9;
  *(_QWORD *)(v16 - 168) = v14;
  *(_QWORD *)(v16 - 192) = v12;
  *(_QWORD *)(v16 - 184) = v11;
  sub_1D42BD0C0();
}

uint64_t sub_1D42BC9AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (!v1)
  {
    *(_QWORD *)(v4 - 160) = v3;
    sub_1D4398F50(v0, *(_QWORD *)(v4 - 168), *(_QWORD *)(v4 - 232));
  }
  return (*(uint64_t (**)(uint64_t, _QWORD))(v2 + 8))(v0, *(_QWORD *)(v4 - 168));
}

void sub_1D42BCAF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (**v21)@<X0>(uint64_t *@<X8>);
  uint64_t (**v22)@<X0>(uint64_t@<X0>, uint64_t *@<X1>, uint64_t *@<X8>);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = (int *)(*(_QWORD *)(v2 - 160) + *(int *)(a1 + 52));
  v5 = v3[8];
  v4 = v3[9];
  if (__CFADD__(v4, v5))
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v2 - 168) = *((unsigned __int8 *)v3 + 24);
    *(_DWORD *)(v2 - 160) = v3[12];
    v6 = v3[7];
    v7 = v3[5];
    v8 = v3[4];
    v9 = v3[1];
    v10 = *v3;
    v11 = *(_QWORD *)(v2 - 320);
    v12 = *((_QWORD *)v3 + 5);
    v13 = *((_QWORD *)v3 + 1);
    v14 = *(_QWORD *)(v2 - 304);
    v15 = v1;
    v16 = *(_QWORD *)(v2 - 312);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v14, v15, v16);
    v17 = *(int **)(v2 - 328);
    *(_QWORD *)(v14 + v17[15]) = (v4 + v5);
    *(_QWORD *)(v14 + v17[16]) = v6;
    *(_QWORD *)(v14 + v17[17]) = *(_QWORD *)(v2 - 232);
    v18 = sub_1D42B6F40();
    *(_DWORD *)(v18 + 16) = v10;
    *(_DWORD *)(v18 + 20) = v9;
    *(_QWORD *)(v18 + 24) = v13;
    *(_DWORD *)(v18 + 32) = v8;
    *(_DWORD *)(v18 + 36) = v7;
    *(_BYTE *)(v18 + 40) = *(_DWORD *)(v2 - 168);
    *(_WORD *)(v18 + 41) = *(_WORD *)(v2 - 67);
    *(_BYTE *)(v18 + 43) = *(_BYTE *)(v2 - 65);
    *(_DWORD *)(v18 + 44) = v6;
    *(_DWORD *)(v18 + 48) = v5;
    *(_DWORD *)(v18 + 52) = v4;
    *(_QWORD *)(v18 + 56) = v12;
    *(_DWORD *)(v18 + 64) = *(_DWORD *)(v2 - 160);
    v19 = *(_QWORD *)(v2 - 288);
    sub_1D42BDF28(v14, v19);
    v20 = *(_QWORD *)(v2 - 296);
    v21 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v19 + *(int *)(v20 + 52));
    *v21 = sub_1D42BE750;
    v21[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v18;
    v22 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t *@<X1>, uint64_t *@<X8>))(v19 + *(int *)(v20 + 56));
    *v22 = sub_1D42BDD1C;
    v22[1] = 0;
    sub_1D42BDFDC(v14, &qword_1EFE49678);
    (*(void (**)(_QWORD, uint64_t))(v11 + 8))(*(_QWORD *)(v2 - 208), v16);
    v23 = sub_1D42B6F40();
    *(_QWORD *)(v23 + 16) = sub_1D42BD264;
    *(_QWORD *)(v23 + 24) = 0;
    sub_1D42B28FC(&qword_1EFE496A8);
    sub_1D42BE210(&qword_1EFE496B0, &qword_1EFE49688, (uint64_t)&unk_1D4544100);
    sub_1D42BE210(&qword_1EFE496B8, &qword_1EFE496A8, MEMORY[0x1E0C959F8]);
    v24 = *(_QWORD *)(v2 - 280);
    sub_1D451A3C8();
    sub_1D42BE93C();
    sub_1D42BDFDC(v19, &qword_1EFE49688);
    *(_QWORD *)(v2 - 152) = 0;
    *(_QWORD *)(v2 - 144) = 0xE000000000000000;
    sub_1D451B400();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 - 152) = 0xD000000000000021;
    *(_QWORD *)(v2 - 144) = 0x80000001D4550710;
    sub_1D42BDF9C();
    v25 = *(_QWORD *)(v2 - 200);
    v26 = *(_QWORD *)(v2 - 240);
    sub_1D451B7C0();
    sub_1D451A794();
    sub_1D42BE8B4();
    sub_1D451A794();
    v27 = *(_QWORD *)(v2 - 272);
    sub_1D44A458C();
    sub_1D42BE8B4();
    sub_1D42BDFDC(v24, &qword_1EFE49690);
    sub_1D42BE210(&qword_1EFE496C0, &qword_1EFE49698, MEMORY[0x1E0C957C0]);
    v28 = *(_QWORD *)(v2 - 256);
    v29 = sub_1D451A374();
    sub_1D42B28FC(&qword_1EFE496C8);
    sub_1D42B6F40();
    v30 = sub_1D43AEFD8(v29);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 264) + 8))(v27, v28);
    *(_QWORD *)(v2 - 152) = v30;
    sub_1D42BE210(&qword_1EFE496D0, &qword_1EFE496C8, (uint64_t)&unk_1D4537AC0);
    v31 = sub_1D451A2E4();
    sub_1D42BE93C();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 248) + 8))(v25, v26);
    type metadata accessor for SharedLogMelSpectrogram.Instance();
    *(_QWORD *)(sub_1D42B6F40() + 16) = v31;
  }
  JUMPOUT(0x1D42BCA14);
}

void sub_1D42BCE74(void *a1)
{
  sub_1D42BE934();
  sub_1D42BB60C(a1);
  sub_1D42B8F48();
  sub_1D42BE888();
}

uint64_t sub_1D42BCEB4(void *a1)
{
  uint64_t v2;

  sub_1D42BE984();
  sub_1D42BE9A0();
  sub_1D42BE934();
  v2 = sub_1D42BB60C(a1);
  sub_1D42B8F48();
  sub_1D42BE998();
  swift_release();
  return v2;
}

void sub_1D42BCF1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;

  sub_1D42BE910();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  sub_1D42BE8BC();
  MEMORY[0x1E0C80A78](v10);
  sub_1D42BE8E8();
  (*(void (**)(uint64_t, uint64_t))(v3 + 16))(v5, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 40))(v7, AssociatedTypeWitness, v1);
  sub_1D42BE98C(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
  sub_1D42BE844();
}

uint64_t sub_1D42BCFD8(uint64_t a1)
{
  float v1;
  float v2;

  v1 = *(float *)(a1 + 68);
  v2 = truncf(v1);
  if (v1 > -9.2234e18 && v1 < 9.2234e18 && v1 == v2)
    return (uint64_t)v1;
  sub_1D42BE01C();
  swift_allocError();
  return swift_willThrow();
}

uint64_t sub_1D42BD04C(float *a1)
{
  float v1;
  float v2;

  v1 = *a1;
  v2 = truncf(*a1);
  if (*a1 > -9.2234e18 && v1 < 9.2234e18 && v1 == v2)
    return (uint64_t)v1;
  sub_1D42BE01C();
  swift_allocError();
  return swift_willThrow();
}

void sub_1D42BD0C0()
{
  type metadata accessor for SharedLogMelSpectrogram.Configuration();
}

uint64_t sub_1D42BD0EC(uint64_t a1)
{
  uint64_t v1;
  float v2;
  float v3;

  v2 = *(float *)(v1 + *(int *)(a1 + 52));
  v3 = truncf(v2);
  if (v2 > -9.2234e18 && v2 < 9.2234e18 && v2 == v3)
    return (uint64_t)v2;
  sub_1D42BE01C();
  swift_allocError();
  return swift_willThrow();
}

uint64_t sub_1D42BD158@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (((*(_QWORD *)(result + 16) | *(_QWORD *)(result + 8)) & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    result = sub_1D42BD1B4(0);
    *a2 = result;
    a2[1] = v3;
    a2[2] = v4;
    a2[3] = v5;
  }
  return result;
}

uint64_t sub_1D42BD1B4(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v2 = v1[2];
  v3 = v2 * result;
  if ((unsigned __int128)(v2 * (__int128)result) >> 64 != (v2 * result) >> 63)
  {
    __break(1u);
    goto LABEL_12;
  }
  v4 = v1[5];
  v5 = v3 + v4;
  if (__OFADD__(v3, v4))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v6 = v1[6];
  v7 = __OFADD__(v3, v6);
  v8 = v3 + v6;
  if (v7)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v8 < (uint64_t)v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if ((v5 & 0x8000000000000000) != 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v9 = *v1;
  v10 = *(_QWORD *)(*v1 + 16);
  if (v10 >= v5 && (uint64_t)v10 >= v8)
  {
    sub_1D42BE0D0((uint64_t)v1);
    return v9;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1D42BD264(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD v7[2];

  v2 = sub_1D42B28FC(&qword_1EFE557C0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[1] = *a1;
  sub_1D42B28FC((uint64_t *)&unk_1EFE557D0);
  sub_1D42BE210(&qword_1EFE496D8, (uint64_t *)&unk_1EFE557D0, MEMORY[0x1E0DEAF38]);
  sub_1D451A830();
  sub_1D42B28FC(&qword_1EFE49BB0);
  sub_1D451A140();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_1D42BD360(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  void *v8;
  uint64_t v9;
  char v10;

  sub_1D42BE77C(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  sub_1D42BE7F0();
  sub_1D42BCEB4(v8);
  sub_1D42BE928();
}

void sub_1D42BD384(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char v9[120];

  sub_1D42BE77C(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9[0]);
  sub_1D42BB99C((uint64_t)v9);
  sub_1D42BE9BC();
}

void sub_1D42BD3B0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v8;
  char __src[120];

  sub_1D42BE77C(a1, a2, a3, a4, a5, a6, a7, a8, v8, __src[0]);
  sub_1D42BB60C(__src);
  sub_1D42BE9BC();
}

void sub_1D42BD3DC(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  void *v8;
  uint64_t v9;
  char v10;

  sub_1D42BE77C(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  sub_1D42BE7F0();
  sub_1D42BCE74(v8);
  sub_1D42BE928();
}

void sub_1D42BD400(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;

  sub_1D42BD498(a1, a2);
  sub_1D42BE894();
  if (v2)
  {
    sub_1D42BE8B4();
    sub_1D42BE058();
    v3 = sub_1D42B6D0C();
    sub_1D42BE8D8(v3, v4);
  }
  sub_1D42BE888();
}

void sub_1D42BD44C(int *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;

  sub_1D42BD624(a1, a2, a3);
  sub_1D42BE894();
  if (v3)
  {
    sub_1D42BE8B4();
    sub_1D42BE058();
    v4 = sub_1D42B6D0C();
    sub_1D42BE8D8(v4, v5);
  }
  sub_1D42BE888();
}

uint64_t sub_1D42BD498(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v5 = 0;
  v6 = MEMORY[0x1E0DEE9D8];
  v7 = MEMORY[0x1E0DEE9D8];
  v8 = MEMORY[0x1E0DEE9D8];
  do
  {
    v9 = *(_DWORD *)(a1 + 4 * v5 + 32);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1D442F36C();
      v8 = v13;
    }
    v10 = *(_QWORD *)(v8 + 16);
    v11 = v10 + 1;
    if (v10 >= *(_QWORD *)(v8 + 24) >> 1)
    {
      sub_1D442F36C();
      v8 = v14;
    }
    *(_QWORD *)(v8 + 16) = v11;
    *(_DWORD *)(v8 + 4 * v10 + 32) = v9;
    if (v11 >= a2)
    {
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D442F350();
        v7 = v15;
      }
      v12 = *(_QWORD *)(v7 + 16);
      if (v12 >= *(_QWORD *)(v7 + 24) >> 1)
      {
        sub_1D442F350();
        v7 = v16;
      }
      *(_QWORD *)(v7 + 16) = v12 + 1;
      *(_QWORD *)(v7 + 8 * v12 + 32) = v8;
      swift_bridgeObjectRelease();
      v8 = v6;
    }
    ++v5;
  }
  while (v2 != v5);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1D42BD624(int *a1, uint64_t a2, uint64_t a3)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (!a1 || !a2)
    return MEMORY[0x1E0DEE9D8];
  v4 = a1;
  v5 = 4 * a2;
  v6 = MEMORY[0x1E0DEE9D8];
  v7 = MEMORY[0x1E0DEE9D8];
  v8 = MEMORY[0x1E0DEE9D8];
  do
  {
    v9 = *v4;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1D442F36C();
      v8 = v13;
    }
    v10 = *(_QWORD *)(v8 + 16);
    v11 = v10 + 1;
    if (v10 >= *(_QWORD *)(v8 + 24) >> 1)
    {
      sub_1D442F36C();
      v8 = v14;
    }
    *(_QWORD *)(v8 + 16) = v11;
    *(_DWORD *)(v8 + 4 * v10 + 32) = v9;
    if (v11 >= a3)
    {
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D442F350();
        v7 = v15;
      }
      v12 = *(_QWORD *)(v7 + 16);
      if (v12 >= *(_QWORD *)(v7 + 24) >> 1)
      {
        sub_1D442F350();
        v7 = v16;
      }
      *(_QWORD *)(v7 + 16) = v12 + 1;
      *(_QWORD *)(v7 + 8 * v12 + 32) = v8;
      swift_bridgeObjectRelease();
      v8 = v6;
    }
    ++v4;
    v5 -= 4;
  }
  while (v5);
  return v7;
}

void sub_1D42BD794()
{
  sub_1D42BE810();
  MEMORY[0x1D825E41C](&unk_1D452B918);
  _s14descr1E97B8181C21ServerEnvironmentImplVMa();
}

void sub_1D42BD7D0(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D452B81C, a1);
  sub_1D42BE85C();
  sub_1D42BE8C8();
}

void sub_1D42BD7EC()
{
  sub_1D42BE964();
  MEMORY[0x1D825E41C](&unk_1D452B838);
  sub_1D42BE820();
}

void sub_1D42BD810()
{
  sub_1D42BE958();
}

void sub_1D42BD818()
{
  sub_1D42BE810();
  MEMORY[0x1D825E41C](&unk_1D452B854);
  sub_1D42BE874();
}

void sub_1D42BD83C()
{
  sub_1D42BE94C();
}

uint64_t sub_1D42BD844(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20[2];
  uint64_t v21;

  v12 = sub_1D43E7C20(*(unsigned int **)(a5 + 16));
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
  }
  else
  {
    v5 = v12;
    v13 = sub_1D445967C((a4 >> 1) - a3, a5);
    if ((unsigned __int128)(v13 * (__int128)v5) >> 64 == (v13 * v5) >> 63)
    {
      v21 = a1;
      v14 = sub_1D44AFDAC(v13 * v5, 0.0);
      a1 = a2 + 4 * a3;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_10:
  sub_1D43830A4();
  v14 = v19;
LABEL_4:
  v15 = *(_QWORD *)(v14 + 16);
  v20[0] = v14 + 32;
  v20[1] = v15;
  sub_1D42BDAF4(v20, a1, (a4 >> 1) - a3, v21, a2, a3, a4, a5);
  if (v6)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = swift_bridgeObjectRetain();
    sub_1D42BD400(v16, v5);
    v5 = v17;
    swift_bridgeObjectRelease_n();
  }
  return v5;
}

uint64_t sub_1D42BD984(uint64_t a1, uint64_t a2)
{
  unsigned int *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t result;
  uint64_t v13;

  v4 = *(unsigned int **)(a2 + 16);
  v5 = sub_1D43E7C20(v4);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = sub_1D445967C(v6, a2);
  if ((unsigned __int128)(v7 * (__int128)v5) >> 64 == (v7 * v5) >> 63)
  {
    v8 = sub_1D44AFDAC(v7 * v5, 0.0);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  sub_1D43830A4();
  v8 = v13;
LABEL_3:
  if (HIDWORD(v6))
  {
    result = sub_1D451B550();
    __break(1u);
  }
  else
  {
    if (sub_1D44F33DC(v8 + 32, a1 + 32, v6, (uint64_t)v4))
    {
      v9 = swift_bridgeObjectRetain();
      sub_1D42BD400(v9, v5);
      v5 = v10;
      swift_bridgeObjectRelease_n();
    }
    else
    {
      sub_1D42BE094();
      swift_allocError();
      *v11 = 1;
      swift_willThrow();
      swift_bridgeObjectRelease();
    }
    return v5;
  }
  return result;
}

uint64_t sub_1D42BDAF4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unint64_t v9;
  uint64_t result;
  char v11;
  char *v12;

  v8 = *a1;
  if (!v8 || !a2)
  {
    v11 = 0;
    goto LABEL_9;
  }
  v9 = (a7 >> 1) - a6;
  if (__OFSUB__(a7 >> 1, a6))
  {
    __break(1u);
LABEL_12:
    result = sub_1D451B550();
    __break(1u);
    return result;
  }
  if ((v9 & 0x8000000000000000) != 0 || HIDWORD(v9))
    goto LABEL_12;
  result = sub_1D44F33DC(v8, a2, v9, *(_QWORD *)(a8 + 16));
  if ((_DWORD)result)
    return result;
  v11 = 1;
LABEL_9:
  sub_1D42BE094();
  swift_allocError();
  *v12 = v11;
  return swift_willThrow();
}

uint64_t sub_1D42BDC0C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t *a5)
{
  return sub_1D42BD844(a1, a2, a3, a4, *a5);
}

uint64_t sub_1D42BDC24(uint64_t a1, uint64_t *a2)
{
  return sub_1D42BD984(a1, *a2);
}

void sub_1D42BDC3C()
{
  sub_1D42BE964();
  MEMORY[0x1D825E41C](&unk_1D4545864);
  sub_1D42BE820();
}

void sub_1D42BDC60()
{
  sub_1D42BE958();
}

void sub_1D42BDC68()
{
  sub_1D42BE810();
  MEMORY[0x1D825E41C](&unk_1D4545880);
  sub_1D42BE874();
}

void sub_1D42BDC8C()
{
  sub_1D42BE94C();
}

void sub_1D42BDC94()
{
  sub_1D42BE810();
  MEMORY[0x1D825E41C](&unk_1D4545650);
  type metadata accessor for AudioStreamAnalyzerEnvironmentImpl();
}

void sub_1D42BDCD0(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D4545848, a1);
  sub_1D42BE85C();
  sub_1D42BE8C8();
}

void sub_1D42BDCEC()
{
  sub_1D44A5390();
}

uint64_t sub_1D42BDD04(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t sub_1D42BDD14(_QWORD *a1)
{
  return sub_1D44B5DBC(*a1);
}

uint64_t sub_1D42BDD1C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_1D42BDC0C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
  if (!v3)
    *a3 = result;
  return result;
}

void sub_1D42BDD54(void *__src)
{
  _BYTE __dst[88];

  memcpy(__dst, __src, sizeof(__dst));
  sub_1D42BBAA0(__dst);
}

uint64_t sub_1D42BDD9C@<X0>(void *__src@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  _BYTE __dst[120];

  memcpy(__dst, __src, sizeof(__dst));
  result = sub_1D42BB920((uint64_t)__dst);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1D42BDDF8@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1D42BDD9C(a1, a2);
}

uint64_t sub_1D42BDE1C@<X0>(void *__src@<X3>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  _BYTE __dst[120];

  memcpy(__dst, __src, sizeof(__dst));
  result = sub_1D4471F78();
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1D42BDE90@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1D42BDE1C(*(void **)(v1 + 32), a1);
}

uint64_t sub_1D42BDEAC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1D42BDEF4(void *a1)
{
  sub_1D42BDD54(a1);
}

uint64_t sub_1D42BDF10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1D446676C(v1 + 16, a1);
}

uint64_t sub_1D42BDF28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D42B28FC(&qword_1EFE49678);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D42BDF70()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D42BDF94(_QWORD *a1)
{
  return sub_1D42BDD14(a1);
}

unint64_t sub_1D42BDF9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFE4CB00;
  if (!qword_1EFE4CB00)
  {
    v1 = sub_1D4519D20();
    result = MEMORY[0x1D825E41C](MEMORY[0x1E0CB09F0], v1);
    atomic_store(result, (unint64_t *)&qword_1EFE4CB00);
  }
  return result;
}

uint64_t sub_1D42BDFDC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1D42B28FC(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1D42BE01C()
{
  unint64_t result;

  result = qword_1EFE496E0;
  if (!qword_1EFE496E0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4523AE8, &type metadata for SharedLogMelSpectrogramError);
    atomic_store(result, (unint64_t *)&qword_1EFE496E0);
  }
  return result;
}

unint64_t sub_1D42BE058()
{
  unint64_t result;

  result = qword_1EFE536F0;
  if (!qword_1EFE536F0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45299E4, &type metadata for CollectionUtils.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE536F0);
  }
  return result;
}

unint64_t sub_1D42BE094()
{
  unint64_t result;

  result = qword_1EFE496E8;
  if (!qword_1EFE496E8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4540E94, &type metadata for LogMelSpectrogramUtilsError);
    atomic_store(result, (unint64_t *)&qword_1EFE496E8);
  }
  return result;
}

uint64_t sub_1D42BE0D0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D42BE0F8(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 32) + 40))(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1D42BE120()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1D42BE178@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(void))(*(_QWORD *)(v1 + 24) + 24))();
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t sub_1D42BE1BC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
  return swift_retain();
}

uint64_t sub_1D42BE1D8()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1D42BE204()
{
  sub_1D42BDCEC();
}

uint64_t sub_1D42BE210(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_1D42B8B10(a2);
    result = MEMORY[0x1D825E41C](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D42BE250@<X0>(uint64_t a1@<X0>, const void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  __int128 v5;
  uint64_t result;
  _OWORD v7[3];
  int v8;
  _BYTE __dst[72];

  v5 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v5;
  v7[2] = *(_OWORD *)(a1 + 32);
  v8 = *(_DWORD *)(a1 + 48);
  memcpy(__dst, a2, sizeof(__dst));
  result = sub_1D42BB940((uint64_t)v7, __dst);
  if (!v3)
    *a3 = result;
  return result;
}

uint64_t sub_1D42BE2B4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D42BE308@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1D42BE250(a1, (const void *)(v2 + 16), a2);
}

uint64_t sub_1D42BE320@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(uint64_t *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v9;
  uint64_t v11;
  __int128 v12;
  uint64_t result;
  _OWORD v14[3];
  int v15;

  v11 = *a1;
  v12 = *(_OWORD *)(a4 + 16);
  v14[0] = *(_OWORD *)a4;
  v14[1] = v12;
  v14[2] = *(_OWORD *)(a4 + 32);
  v15 = *(_DWORD *)(a4 + 48);
  result = sub_1D44721A4(v11, a2, a3, (uint64_t *)v14, a5, a6, a7, a8);
  if (!v9)
    *a9 = result;
  return result;
}

uint64_t sub_1D42BE370@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, uint64_t *a6@<X8>)
{
  uint64_t v6;

  return sub_1D42BE320(a1, *(uint64_t (**)(uint64_t *))(v6 + 16), *(_QWORD *)(v6 + 24), *(_QWORD *)(v6 + 32), a2, a3, a4, a5, a6);
}

uint64_t sub_1D42BE38C(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void sub_1D42BE408(uint64_t *a1, const void *a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE __dst[72];

  v2 = *a1;
  v3 = a1[1];
  memcpy(__dst, a2, sizeof(__dst));
  sub_1D42BBAC0(v2, v3);
}

void sub_1D42BE458(uint64_t *a1)
{
  uint64_t v1;

  sub_1D42BE408(a1, *(const void **)(v1 + 16));
}

uint64_t getEnumTagSinglePayload for SharedLogMelSpectrogramError(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for SharedLogMelSpectrogramError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D42BE508 + 4 * byte_1D45237DF[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D42BE528 + 4 * byte_1D45237E4[v4]))();
}

_BYTE *sub_1D42BE508(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D42BE528(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D42BE530(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D42BE538(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D42BE540(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D42BE548(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1D42BE554()
{
  return 0;
}

ValueMetadata *type metadata accessor for SharedLogMelSpectrogramError()
{
  return &type metadata for SharedLogMelSpectrogramError;
}

uint64_t sub_1D42BE56C()
{
  return swift_allocateGenericValueMetadata();
}

_BYTE *initializeBufferWithCopyOfBuffer for SNKShotDatasetType(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for SNNullDetector.DomainError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = v6 - 2;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_1D42BE608(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D42BE654 + 4 * byte_1D45237EE[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D42BE688 + 4 * byte_1D45237E9[v4]))();
}

uint64_t sub_1D42BE688(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D42BE690(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D42BE698);
  return result;
}

uint64_t sub_1D42BE6A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D42BE6ACLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D42BE6B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D42BE6B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D42BE6C4(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1D42BE6CC(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

void sub_1D42BE6D8()
{
  JUMPOUT(0x1D825E41CLL);
}

unint64_t sub_1D42BE6EC()
{
  unint64_t result;

  result = qword_1EFE49780;
  if (!qword_1EFE49780)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4523AC0, &type metadata for SharedLogMelSpectrogramError);
    atomic_store(result, (unint64_t *)&qword_1EFE49780);
  }
  return result;
}

void sub_1D42BE728()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D42BE738()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D42BE750@<X0>(uint64_t *a1@<X8>)
{
  return sub_1D42BDF10(a1);
}

void *sub_1D42BE77C(void *__src, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char __dst)
{
  return memcpy(&__dst, __src, 0x78uLL);
}

uint64_t sub_1D42BE790()
{
  return swift_deallocObject();
}

uint64_t sub_1D42BE7A0()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1D42BE7B4()
{
  return swift_getAssociatedConformanceWitness();
}

float sub_1D42BE7C8@<S0>(uint64_t a1@<X8>)
{
  return *(float *)a1;
}

uint64_t sub_1D42BE7E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 8))(v0, *(_QWORD *)(v2 - 152));
}

__n128 sub_1D42BE7F0()
{
  uint64_t v0;
  uint64_t v1;
  __n128 result;
  __int128 v3;

  result = *(__n128 *)v0;
  v3 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 - 64) = *(_OWORD *)v0;
  *(_OWORD *)(v1 - 48) = v3;
  *(_QWORD *)(v1 - 32) = *(_QWORD *)(v0 + 32);
  return result;
}

void sub_1D42BE820()
{
  sub_1D42BB9D0();
}

void sub_1D42BE85C()
{
  sub_1D42BCF1C();
}

void sub_1D42BE874()
{
  sub_1D42BB78C();
}

uint64_t sub_1D42BE894()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42BE8A4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D42BE8B4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42BE8D8(uint64_t a1, _BYTE *a2)
{
  *a2 = 0;
  return swift_willThrow();
}

uint64_t sub_1D42BE934()
{
  return swift_retain();
}

uint64_t sub_1D42BE93C()
{
  return swift_release();
}

uint64_t sub_1D42BE944()
{
  uint64_t v0;

  return sub_1D42B5400(v0);
}

uint64_t sub_1D42BE984()
{
  return swift_retain();
}

uint64_t sub_1D42BE98C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_1D42BE998()
{
  return swift_release();
}

uint64_t sub_1D42BE9A0()
{
  return swift_retain();
}

uint64_t sub_1D42BE9A8()
{
  return sub_1D451B958();
}

void sub_1D42BE9B4()
{
  type metadata accessor for SharedLogMelSpectrogram.Configuration();
}

uint64_t sub_1D42BE9C8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD v4[7];

  sub_1D42CB818();
  v2 = (uint64_t)sub_1D42B5528(v1, v1[3]);
  sub_1D451BA00();
  if (v0)
  {
    sub_1D42BE944();
  }
  else
  {
    sub_1D42B5528(v4, v4[3]);
    sub_1D451B844();
    sub_1D42CA5D0(0, (unint64_t *)&unk_1EFE49790);
    v4[6] = MEMORY[0x1E0DEE9D8];
    sub_1D42B28FC(&qword_1EFE510F0);
    sub_1D42C141C();
    sub_1D42C1460();
    v2 = sub_1D451AF2C();
    sub_1D42B5400((uint64_t)v4);
    sub_1D42BE944();
  }
  return v2;
}

uint64_t sub_1D42BEACC(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  sub_1D42B5528(a1, a1[3]);
  sub_1D451BA18();
  sub_1D42CAEF0((uint64_t)v2, v3);
  sub_1D451B85C();
  return sub_1D42B5400((uint64_t)v2);
}

void sub_1D42BEB4C(uint64_t a1, void *a2)
{
  id v2;

  v2 = a2;
  sub_1D451B118();
  sub_1D42CB120(v2);
}

uint64_t sub_1D42BEB84(uint64_t a1)
{
  sub_1D42CB340(a1, (unint64_t *)&qword_1EFE404C0);
  return sub_1D451B10C() & 1;
}

void sub_1D42BEBD0(void *a1)
{
  void *v1;
  id v3;

  sub_1D42BE9A8();
  v3 = a1;
  sub_1D42CB350();

  sub_1D42CB230();
  sub_1D42BE978();
}

uint64_t sub_1D42BEC00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_1D42BE9C8();
  if (!v1)
    *a1 = result;
  return result;
}

uint64_t sub_1D42BEC28(_QWORD *a1)
{
  return sub_1D42BEACC(a1);
}

void sub_1D42BEC3C()
{
  void **v0;

  sub_1D42BEBD0(*v0);
}

void sub_1D42BEC44(uint64_t a1)
{
  void **v1;

  sub_1D42BEB4C(a1, *v1);
}

uint64_t sub_1D42BEC4C()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_1D451B958();
  v2 = v1;
  sub_1D451B118();

  return sub_1D451B994();
}

uint64_t sub_1D42BEC94(uint64_t *a1)
{
  return sub_1D42BEB84(*a1);
}

BOOL sub_1D42BECA0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D4334954(*a1, *a2);
}

uint64_t sub_1D42BECAC()
{
  sub_1D42CA538();
  return sub_1D451A8F0();
}

uint64_t sub_1D42BED08()
{
  sub_1D42CA538();
  return sub_1D451A8D8();
}

uint64_t sub_1D42BED54()
{
  unsigned __int8 *v0;

  return sub_1D4348648(*v0);
}

uint64_t sub_1D42BED5C(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1D4349518(a1, *v1);
}

uint64_t sub_1D42BED64(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1D4348824(a1, *v1);
}

SoundAnalysis::SNKShotLabel_optional __swiftcall SNKShotLabel.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (SoundAnalysis::SNKShotLabel_optional)rawValue;
}

uint64_t SNKShotLabel.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

BOOL sub_1D42BED90(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D42BA51C(*a1, *a2);
}

SoundAnalysis::SNKShotLabel_optional sub_1D42BED9C(Swift::Int *a1)
{
  return SNKShotLabel.init(rawValue:)(*a1);
}

void sub_1D42BEDA4(uint64_t *a1@<X8>)
{
  *a1 = SNKShotLabel.rawValue.getter();
  sub_1D42B6E24();
}

uint64_t sub_1D42BEDC4()
{
  sub_1D42CA4FC();
  return sub_1D451A8F0();
}

uint64_t sub_1D42BEE20()
{
  sub_1D42CA4FC();
  return sub_1D451A8D8();
}

void sub_1D42BEE6C()
{
  sub_1D4348720();
}

void sub_1D42BEE74(_BYTE *a1)
{
  objc_class *v1;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_super v10;

  v3 = sub_1D42CB9E4();
  v3[OBJC_IVAR___SNKShotLabel_impl] = *a1;
  v10.receiver = v3;
  v10.super_class = v1;
  sub_1D42CB364((uint64_t)v3, sel_init, v4, v5, v6, v7, v8, v9, v10);
  sub_1D42CB95C();
}

void sub_1D42BEEDC(char a1)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  objc_super v8;

  v1[OBJC_IVAR___SNKShotLabel_impl] = a1;
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for SNKShotLabelObjC();
  sub_1D42CB364((uint64_t)v8.super_class, sel_init, v2, v3, v4, v5, v6, v7, v8);
  sub_1D42B6F28();
}

uint64_t sub_1D42BEF54()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___SNKShotLabel_impl);
}

void SNKShotLabelObjC.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SNKShotLabelObjC.__deallocating_deinit(uint64_t a1)
{
  return sub_1D42C00E0(a1, type metadata accessor for SNKShotLabelObjC);
}

uint64_t type metadata accessor for SNKShotLabelObjC()
{
  return objc_opt_self();
}

void sub_1D42BEFC8()
{
  sub_1D42CB740();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D42CB47C();
  sub_1D451B988();
  sub_1D42CB904();
  sub_1D42CB8EC();
  sub_1D451B97C();
  sub_1D42CB8E4();
  sub_1D42CB36C();
  sub_1D42CB348();
  sub_1D42C9F88((uint64_t)&qword_1EFE49A80);
  sub_1D451A614();
  sub_1D42CB520();
}

uint64_t sub_1D42BF06C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[2];
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[2];
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *a1;
  v3 = a1[5];
  v10[1] = a1[1];
  v11 = *((_OWORD *)a1 + 1);
  v12 = a1[4];
  v13 = v3;
  v4 = *(_QWORD *)(a2 + 40);
  v6[0] = *(_QWORD *)a2;
  v6[1] = *(_QWORD *)(a2 + 8);
  v7 = *(_OWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = v4;
  v10[0] = v2;
  if (static TimeRange.== infix(_:_:)((uint64_t)v10, (uint64_t)v6))
  {
    sub_1D42CB36C();
    JUMPOUT(0x1D825B4ACLL);
  }
  return 0;
}

uint64_t sub_1D42BF110(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x676E6152656D6974 && a2 == 0xE900000000000065;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D42BF1F8(char a1)
{
  if ((a1 & 1) != 0)
    return 7107189;
  else
    return 0x676E6152656D6974;
}

uint64_t sub_1D42BF22C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1D42B28FC((uint64_t *)&unk_1EFE49AA0);
  sub_1D42CB1BC();
  MEMORY[0x1E0C80A78](v3);
  sub_1D42CB18C();
  sub_1D42B5528(a1, a1[3]);
  sub_1D42CA390();
  sub_1D42CB10C();
  sub_1D42CA408();
  sub_1D42CB7F0();
  if (!v1)
  {
    type metadata accessor for KShotSegment(0);
    sub_1D4519BC4();
    sub_1D42C9F88((uint64_t)&unk_1EFE49980);
    sub_1D42CB7F0();
  }
  return sub_1D42CB294();
}

void sub_1D42BF378()
{
  sub_1D42BE9A8();
  sub_1D451B988();
  sub_1D42CB644();
  sub_1D42CB47C();
  sub_1D42CB650();
  sub_1D42CB904();
  sub_1D42CB8EC();
  sub_1D451B97C();
  sub_1D42CB8E4();
  sub_1D42CB36C();
  sub_1D42CB348();
  sub_1D42C9F88((uint64_t)&qword_1EFE49A80);
  sub_1D451A614();
  sub_1D42CB230();
  sub_1D42CB414();
}

void sub_1D42BF438()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;

  sub_1D42BE910();
  v3 = v2;
  v22 = v4;
  v21 = sub_1D4519BC4();
  v23 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  sub_1D42CB210();
  v7 = v6 - v5;
  v25 = sub_1D42B28FC(&qword_1EFE49A88);
  v8 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  sub_1D42CB18C();
  v9 = type metadata accessor for KShotSegment(0);
  sub_1D42CB790();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42B5528(v3, v3[3]);
  sub_1D42CA390();
  v24 = v1;
  sub_1D451BA0C();
  if (!v0)
  {
    v26 = v3;
    sub_1D42CA3CC();
    v13 = v24;
    v14 = v25;
    sub_1D42CB1B4();
    v15 = v31;
    v16 = (uint64_t)v12;
    *(_QWORD *)v12 = v27;
    *((_QWORD *)v12 + 1) = v28;
    *((_OWORD *)v12 + 1) = v29;
    *((_QWORD *)v12 + 4) = v30;
    *((_QWORD *)v12 + 5) = v15;
    LOBYTE(v27) = 1;
    sub_1D42C9F88((uint64_t)&unk_1EFE49960);
    v17 = v7;
    v18 = v14;
    v19 = v21;
    sub_1D42CB1B4();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v13, v18);
    v20 = v22;
    v3 = v26;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v16 + *(int *)(v9 + 20), v17, v19);
    sub_1D42BF9C0(v16, v20);
  }
  sub_1D42B5400((uint64_t)v3);
  sub_1D42CBA44();
  sub_1D42BE844();
}

void sub_1D42BF654()
{
  sub_1D42C0CC0();
}

uint64_t sub_1D42BF66C()
{
  return sub_1D42BA52C();
}

uint64_t sub_1D42BF678()
{
  char *v0;

  return sub_1D42BF1F8(*v0);
}

uint64_t sub_1D42BF680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D42BF110(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D42BF6A4()
{
  return sub_1D42BA688();
}

uint64_t sub_1D42BF6C0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D42BA63C();
  *a1 = result;
  return result;
}

uint64_t sub_1D42BF6E4()
{
  sub_1D42CA390();
  return sub_1D451BA3C();
}

uint64_t sub_1D42BF70C()
{
  sub_1D42CA390();
  return sub_1D451BA48();
}

uint64_t sub_1D42BF73C()
{
  sub_1D451B958();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D4519BC4();
  sub_1D42C9F88((uint64_t)&qword_1EFE49A80);
  sub_1D451A614();
  return sub_1D451B994();
}

void sub_1D42BF844()
{
  sub_1D42BF438();
}

uint64_t sub_1D42BF858(_QWORD *a1)
{
  return sub_1D42BF22C(a1);
}

void sub_1D42BF870(uint64_t a1)
{
  objc_class *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  objc_super v11;

  v3 = sub_1D42CB9E4();
  v4 = sub_1D42C13D8(a1, (uint64_t)v3 + OBJC_IVAR___SNKShotSegment_impl);
  v11.receiver = v3;
  v11.super_class = v1;
  sub_1D42CB364(v4, sel_init, v5, v6, v7, v8, v9, v10, v11);
  sub_1D42C87B8(a1);
  sub_1D42CB758();
}

id SNKShotSegment.__allocating_init()()
{
  return objc_msgSend(sub_1D42CB9E4(), sel_init);
}

void SNKShotSegment.init()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  id v9;
  objc_super v10;

  sub_1D42CB914();
  type metadata accessor for KShotSegment(0);
  sub_1D42CB790();
  MEMORY[0x1E0C80A78](v1);
  sub_1D42CB210();
  v4 = v3 - v2;
  v5 = *MEMORY[0x1E0CA2E18];
  v6 = *(_DWORD *)(MEMORY[0x1E0CA2E18] + 8);
  v7 = *(_DWORD *)(MEMORY[0x1E0CA2E18] + 12);
  v8 = *(_QWORD *)(MEMORY[0x1E0CA2E18] + 16);
  v9 = v0;
  sub_1D4519B10();
  *(_QWORD *)v4 = v5;
  *(_DWORD *)(v4 + 8) = v6;
  *(_DWORD *)(v4 + 12) = v7;
  *(_QWORD *)(v4 + 16) = v8;
  *(_QWORD *)(v4 + 24) = v5;
  *(_DWORD *)(v4 + 32) = v6;
  *(_DWORD *)(v4 + 36) = v7;
  *(_QWORD *)(v4 + 40) = v8;
  sub_1D42BF9C0(v4, (uint64_t)v9 + OBJC_IVAR___SNKShotSegment_impl);

  v10.receiver = v9;
  v10.super_class = (Class)type metadata accessor for SNKShotSegment(0);
  objc_msgSendSuper2(&v10, sel_init);
  sub_1D42CB0F8();
}

uint64_t type metadata accessor for KShotSegment(uint64_t a1)
{
  return sub_1D42BFA18(a1, (uint64_t *)&unk_1EFE483F0);
}

uint64_t sub_1D42BF9C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for KShotSegment(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for SNKShotSegment(uint64_t a1)
{
  return sub_1D42BFA18(a1, qword_1EFE483D8);
}

uint64_t sub_1D42BFA18(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

double sub_1D42BFAC0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  double result;

  sub_1D42CB720(OBJC_IVAR___SNKShotSegment_impl);
  sub_1D42B8E84();
  v3 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 16);
  result = *(double *)(v1 + 32);
  *(double *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 40) = v3;
  return result;
}

double sub_1D42BFB74(double *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  v3 = *(_QWORD *)a1;
  v4 = *((_QWORD *)a1 + 2);
  v5 = *((_QWORD *)a1 + 3);
  v6 = *((_QWORD *)a1 + 5);
  sub_1D42CB720(OBJC_IVAR___SNKShotSegment_impl);
  sub_1D42B8E84();
  *(_QWORD *)v1 = v3;
  *(double *)(v1 + 8) = a1[1];
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v5;
  result = a1[4];
  *(double *)(v1 + 32) = result;
  *(_QWORD *)(v1 + 40) = v6;
  return result;
}

void sub_1D42BFBE4(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[12] = v1;
  sub_1D42BFAC0((uint64_t)v3);
  sub_1D42CB15C();
}

void sub_1D42BFC28(uint64_t **a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *a1;
  v2 = **a1;
  v3 = (*a1)[2];
  v4 = (*a1)[3];
  v5 = (*a1)[5];
  v6 = (_QWORD *)((*a1)[12] + OBJC_IVAR___SNKShotSegment_impl);
  v7 = (*a1)[1];
  v8 = (*a1)[4];
  sub_1D42B8E84();
  *v6 = v2;
  v6[1] = v7;
  v6[2] = v3;
  v6[3] = v4;
  v6[4] = v8;
  v6[5] = v5;
  free(v1);
}

void sub_1D42BFD40(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = type metadata accessor for KShotSegment(0);
  sub_1D42CB790();
  MEMORY[0x1E0C80A78](v4);
  sub_1D42CB18C();
  sub_1D42B8E84();
  v5 = sub_1D42CB9EC();
  sub_1D42C13D8(v5, v6);
  v7 = v1 + *(int *)(v3 + 20);
  v8 = sub_1D42CB348();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, v7, v8);
  sub_1D42CB15C();
}

void sub_1D42BFE4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1D42CB720(OBJC_IVAR___SNKShotSegment_impl);
  sub_1D42B8E84();
  sub_1D42CB36C();
  v4 = v1 + v3;
  v5 = sub_1D42CB348();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24))(v4, a1, v5);
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  sub_1D42CB7D0();
}

void sub_1D42BFEC0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_1D4519BC4();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  sub_1D42BFE4C((uint64_t)v4);
}

void sub_1D42BFF40(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[6] = v1;
  v4 = sub_1D42CB348();
  v3[7] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[8] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[9] = malloc(v6);
  v7 = malloc(v6);
  v3[10] = v7;
  sub_1D42BFD40((uint64_t)v7);
  sub_1D42CB15C();
}

void sub_1D42BFFB4()
{
  uint64_t v0;
  _QWORD *v1;
  char v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1D42CB914();
  v1 = *(_QWORD **)v0;
  v4 = *(void **)(*(_QWORD *)v0 + 72);
  v3 = *(void **)(*(_QWORD *)v0 + 80);
  if ((v2 & 1) != 0)
  {
    v5 = v1[7];
    v6 = v1[8];
    v7 = v1[6];
    (*(void (**)(_QWORD, _QWORD, uint64_t))(v6 + 16))(v1[9], v1[10], v5);
    v8 = v7 + OBJC_IVAR___SNKShotSegment_impl;
    sub_1D42B8E84();
    sub_1D42CB36C();
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 24))(v8 + v9, v4, v5);
    swift_endAccess();
    v10 = *(void (**)(void *, uint64_t))(v6 + 8);
    v10(v4, v5);
    v11 = sub_1D42CB9EC();
    ((void (*)(uint64_t))v10)(v11);
  }
  else
  {
    v12 = v1[7];
    v13 = v1[8];
    v14 = v1[6] + OBJC_IVAR___SNKShotSegment_impl;
    sub_1D42B8E84();
    sub_1D42CB36C();
    (*(void (**)(uint64_t, void *, uint64_t))(v13 + 24))(v14 + v15, v3, v12);
    swift_endAccess();
    (*(void (**)(void *, uint64_t))(v13 + 8))(v3, v12);
  }
  free(v3);
  free(v4);
  free(v1);
}

id SNKShotSegment.__deallocating_deinit()
{
  return sub_1D42C00E0(0, (uint64_t (*)(void))type metadata accessor for SNKShotSegment);
}

id sub_1D42C00E0(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

void sub_1D42C0120()
{
  id *v0;
  id v1;

  v1 = *v0;
  sub_1D42CB6FC();

  sub_1D451B964();
  sub_1D451B964();
  sub_1D42CB15C();
}

void sub_1D42C0168(uint64_t a1)
{
  sub_1D42CB340(a1, (unint64_t *)&qword_1EFE404C0);
  sub_1D42CB638();
  sub_1D42CB084();
}

uint64_t sub_1D42C01D0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 1635017060 && a2 == 0xE400000000000000;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x5474657361746164 && a2 == 0xEB00000000657079;
    if (v6 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6C6562616CLL && a2 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1D451B820();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1D42C031C(char a1)
{
  if (!a1)
    return 1635017060;
  if (a1 == 1)
    return 0x5474657361746164;
  return 0x6C6562616CLL;
}

void sub_1D42C0370()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D42BE910();
  sub_1D42CB9A8();
  sub_1D42B28FC(&qword_1EFE499E0);
  sub_1D42CB1BC();
  MEMORY[0x1E0C80A78](v1);
  sub_1D42CB5D0();
  sub_1D42CB248();
  sub_1D42CA144();
  sub_1D42CB10C();
  sub_1D42CB9A0();
  sub_1D42CB780();
  sub_1D42CB068();
  if (!v0)
  {
    sub_1D42CA1F8();
    sub_1D42CB068();
    sub_1D42CA234();
    sub_1D42CB068();
  }
  sub_1D42CB294();
  sub_1D42BE844();
}

void sub_1D42C0470()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_1D42BE9A8();
  v2 = v1;
  sub_1D42CB350();

  sub_1D42CB3DC();
  sub_1D451B964();
  sub_1D42CB230();
  sub_1D42CB708();
}

void sub_1D42C04BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char v16;
  char v17;

  sub_1D42BE910();
  sub_1D42CB818();
  v13 = v12;
  sub_1D42B28FC(&qword_1EFE499C0);
  sub_1D42CB4F8();
  MEMORY[0x1E0C80A78](v14);
  sub_1D42B5528(v10, v10[3]);
  sub_1D42CA144();
  sub_1D42CB4A8();
  if (v11)
  {
    sub_1D42BE944();
  }
  else
  {
    sub_1D42CA0CC();
    sub_1D42CB930();
    sub_1D42CB1B4();
    sub_1D42CA180();
    v15 = a10;
    sub_1D42CB1B4();
    sub_1D42CA1BC();
    sub_1D42CB1B4();
    sub_1D42CB3CC();
    *(_QWORD *)v13 = v15;
    *(_BYTE *)(v13 + 8) = v17;
    *(_BYTE *)(v13 + 9) = v16;
    sub_1D42B5400((uint64_t)v10);

  }
  sub_1D42CBA44();
  sub_1D42BE844();
}

id sub_1D42C0630@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  char v3;
  char v4;

  v2 = *(void **)(v1 + OBJC_IVAR___SNKShotFeaturizationStreamResult_impl);
  v3 = *(_BYTE *)(v1 + OBJC_IVAR___SNKShotFeaturizationStreamResult_impl + 8);
  v4 = *(_BYTE *)(v1 + OBJC_IVAR___SNKShotFeaturizationStreamResult_impl + 9);
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 9) = v4;
  return v2;
}

uint64_t sub_1D42C0658()
{
  char *v0;

  return sub_1D42C031C(*v0);
}

uint64_t sub_1D42C0660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D42C01D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D42C0684()
{
  sub_1D42CA144();
  return sub_1D451BA3C();
}

uint64_t sub_1D42C06AC()
{
  sub_1D42CA144();
  return sub_1D451BA48();
}

void sub_1D42C06D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  void *vars8;

  sub_1D42C04BC(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_1D42C06E8()
{
  sub_1D42C0370();
}

uint64_t sub_1D42C0704()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_1D451B958();
  v2 = v1;
  sub_1D451B118();

  sub_1D451B964();
  sub_1D451B964();
  return sub_1D451B994();
}

void SNKShotFeaturizationStreamResult.init()(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  objc_super v13;

  sub_1D42CB340(a1, (unint64_t *)&unk_1EFE49790);
  v3 = v2;
  v4 = v1;
  sub_1D42B28FC(&qword_1EFE510F0);
  sub_1D42CB810();
  sub_1D42CB768();
  v5 = sub_1D42CB0CC();
  if (v3)
  {
    sub_1D42CB5B8();
    swift_unexpectedError();
    __break(1u);
  }
  else
  {
    v6 = &v4[OBJC_IVAR___SNKShotFeaturizationStreamResult_impl];
    *(_QWORD *)v6 = v5;
    *((_WORD *)v6 + 4) = 0;

    v13.receiver = v4;
    v13.super_class = (Class)type metadata accessor for SNKShotFeaturizationStreamResult();
    sub_1D42CB364((uint64_t)v13.super_class, sel_init, v7, v8, v9, v10, v11, v12, v13);
    sub_1D42CB7D0();
  }
}

void sub_1D42C0860()
{
  uint64_t v0;

  sub_1D42C0630((uint64_t)&v0);
  sub_1D42B6F28();
}

void sub_1D42C08C8(uint64_t a1)
{
  sub_1D42CB1E4(a1, OBJC_IVAR___SNKShotFeaturizationStreamResult_impl);
}

void sub_1D42C08D4(id *a1)
{
  sub_1D42C08C8((uint64_t)*a1);
}

void (*sub_1D42C08FC(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  uint64_t v4;

  a1[1] = v1;
  sub_1D42C0630((uint64_t)&v4);
  *a1 = v4;
  return sub_1D42C0940;
}

void sub_1D42C0940(void **a1, char a2)
{
  sub_1D42C4CBC(a1, a2, (void (*)(void))sub_1D42C08C8);
}

void sub_1D42C097C()
{
  id v0;

  sub_1D42C0630((uint64_t)&v0);

  sub_1D42CB95C();
}

unint64_t sub_1D42C09D4(unint64_t result)
{
  uint64_t v1;

  if (result > 1)
    __break(1u);
  else
    *(_BYTE *)(v1 + OBJC_IVAR___SNKShotFeaturizationStreamResult_impl + 8) = result != 0;
  return result;
}

void sub_1D42C0A2C()
{
  char v0;
  char v1;
  id v2;
  char v3;

  type metadata accessor for SNKShotLabelObjC();
  sub_1D42C0630((uint64_t)&v2);
  v0 = v3;

  v1 = v0;
  sub_1D42BEE74(&v1);
}

void sub_1D42C0AC0(id a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR___SNKShotFeaturizationStreamResult_impl + 9) = *((_BYTE *)a1 + OBJC_IVAR___SNKShotLabel_impl);

}

id SNKShotFeaturizationStreamResult.__deallocating_deinit(uint64_t a1)
{
  return sub_1D42C00E0(a1, type metadata accessor for SNKShotFeaturizationStreamResult);
}

void sub_1D42C0AF8()
{
  id *v0;
  id v1;

  v1 = *v0;
  sub_1D42CB6FC();

  sub_1D451B988();
  sub_1D42CB47C();
  sub_1D451B97C();
  sub_1D42CB904();
  sub_1D42CB084();
}

BOOL sub_1D42C0B4C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;

  sub_1D42CB740();
  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_DWORD *)(v0 + 16);
  v3 = *(_DWORD *)(v0 + 20);
  v4 = *(_QWORD *)(v0 + 24);
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(_DWORD *)(v5 + 16);
  v8 = *(_DWORD *)(v5 + 20);
  v9 = *(_QWORD *)(v5 + 24);
  sub_1D42CB340(v0, (unint64_t *)&qword_1EFE404C0);
  if ((sub_1D42CB638() & 1) == 0)
    return 0;
  return v1 == v6 && v2 == v7 && v3 == v8 && v4 == v9;
}

uint64_t sub_1D42C0BD4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x72616C706D657865 && a2 == 0xE800000000000000;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D4550920)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_1D42C0CC0()
{
  sub_1D42BE9A8();
  sub_1D451B964();
  sub_1D42CB230();
  sub_1D42BE978();
}

uint64_t sub_1D42C0CF0(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000013;
  else
    return 0x72616C706D657865;
}

void sub_1D42C0D2C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D42CB9A8();
  sub_1D42B28FC(&qword_1EFE499A8);
  sub_1D42CB1BC();
  MEMORY[0x1E0C80A78](v1);
  sub_1D42CB5EC();
  sub_1D42CB248();
  sub_1D42CA090();
  sub_1D42CB10C();
  sub_1D42CB9A0();
  sub_1D42CB068();
  if (!v0)
  {
    sub_1D42CBA14();
    sub_1D42CA054();
    sub_1D42CB068();
  }
  sub_1D42CB294();
  sub_1D42CB3F8();
}

void sub_1D42C0E14()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_1D42BE9A8();
  v2 = v1;
  sub_1D42CB350();

  sub_1D42CB950();
  sub_1D42CB644();
  sub_1D42CB47C();
  sub_1D42CB650();
  sub_1D42CB230();
  sub_1D42CB2D0();
}

void sub_1D42C0E68()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D42BE910();
  sub_1D42CB818();
  v4 = v3;
  sub_1D42B28FC(&qword_1EFE49990);
  sub_1D42CB4F8();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42B5528(v0, v0[3]);
  sub_1D42CA090();
  sub_1D42CB4A8();
  if (v1)
  {
    sub_1D42BE944();
  }
  else
  {
    sub_1D42CA0CC();
    sub_1D42CB83C();
    sub_1D42CB1B4();
    v8 = v14;
    sub_1D42C9FC0();
    v9 = v8;
    sub_1D42CB83C();
    sub_1D42CB1B4();
    sub_1D42CB44C((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    v10 = v14;
    v11 = v16;
    v12 = v15;
    *v4 = v9;
    v4[1] = v10;
    v4[2] = v12;
    v4[3] = v11;
    sub_1D42B5400((uint64_t)v0);

  }
  sub_1D42CBA44();
  sub_1D42BE844();
}

id sub_1D42C0FA8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v1 + OBJC_IVAR___SNKShotFeaturizationStreamCompletion_impl;
  v3 = *(void **)(v1 + OBJC_IVAR___SNKShotFeaturizationStreamCompletion_impl);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___SNKShotFeaturizationStreamCompletion_impl + 8);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR___SNKShotFeaturizationStreamCompletion_impl + 24);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = *(_QWORD *)(v2 + 16);
  a1[3] = v5;
  return v3;
}

void sub_1D42C0FD0()
{
  sub_1D42CB824();
  sub_1D42CB3DC();
  sub_1D42CB230();
  sub_1D42BE978();
}

uint64_t sub_1D42C0FF4()
{
  char *v0;

  return sub_1D42C0CF0(*v0);
}

uint64_t sub_1D42C0FFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D42C0BD4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D42C1020()
{
  sub_1D42CA090();
  return sub_1D451BA3C();
}

uint64_t sub_1D42C1048()
{
  sub_1D42CA090();
  return sub_1D451BA48();
}

void sub_1D42C1070()
{
  sub_1D42C0E68();
}

void sub_1D42C1084()
{
  sub_1D42C0D2C();
}

uint64_t sub_1D42C10A0()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_1D451B958();
  v2 = v1;
  sub_1D451B118();

  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  return sub_1D451B994();
}

void SNKShotFeaturizationStreamCompletion.init()(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  objc_super v16;

  sub_1D42CB340(a1, (unint64_t *)&unk_1EFE49790);
  v3 = v2;
  v4 = v1;
  sub_1D42B28FC(&qword_1EFE510F0);
  sub_1D42CB810();
  sub_1D42CB768();
  v5 = sub_1D42CB0CC();
  if (v3)
  {
    sub_1D42CB5B8();
    swift_unexpectedError();
    __break(1u);
  }
  else
  {
    v6 = MEMORY[0x1E0CA2E18];
    v7 = *MEMORY[0x1E0CA2E18];
    v8 = *(_QWORD *)(MEMORY[0x1E0CA2E18] + 16);
    v9 = (uint64_t *)&v4[OBJC_IVAR___SNKShotFeaturizationStreamCompletion_impl];
    *v9 = v5;
    v9[1] = v7;
    v9[2] = *(_QWORD *)(v6 + 8);
    v9[3] = v8;

    v16.receiver = v4;
    v16.super_class = (Class)type metadata accessor for SNKShotFeaturizationStreamCompletion();
    sub_1D42CB364((uint64_t)v16.super_class, sel_init, v10, v11, v12, v13, v14, v15, v16);
    sub_1D42CB7D0();
  }
}

void sub_1D42C1234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  sub_1D42CB738(a1, a2, a3, a4, a5, a6, a7, a8, v8);
  sub_1D42CB95C();
}

void sub_1D42C1298(uint64_t a1)
{
  sub_1D42CB1E4(a1, OBJC_IVAR___SNKShotFeaturizationStreamCompletion_impl);
}

void sub_1D42C12A4(id *a1)
{
  sub_1D42C1298((uint64_t)*a1);
}

void (*sub_1D42C12CC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8))(void **a1, char a2)
{
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;

  a1[1] = v8;
  sub_1D42CB738((uint64_t)a1, a2, a3, a4, a5, a6, a7, a8, v11);
  *a1 = v12;
  return sub_1D42C130C;
}

void sub_1D42C130C(void **a1, char a2)
{
  sub_1D42C4CBC(a1, a2, (void (*)(void))sub_1D42C1298);
}

uint64_t sub_1D42C1324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  id v10;

  sub_1D42CB738(a1, a2, a3, a4, a5, a6, a7, a8, v9);

  return sub_1D42CB570();
}

uint64_t sub_1D42C1388(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4 = (_QWORD *)(v3 + OBJC_IVAR___SNKShotFeaturizationStreamCompletion_impl);
  v4[1] = result;
  v4[2] = a2;
  v4[3] = a3;
  return result;
}

uint64_t sub_1D42C13A8(uint64_t *a1)
{
  return sub_1D42C1388(*a1, a1[1], a1[2]);
}

uint64_t sub_1D42C13D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for KShotSegment(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D42C141C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFE497A0;
  if (!qword_1EFE497A0)
  {
    v1 = sub_1D42B8B10(&qword_1EFE510F0);
    result = MEMORY[0x1D825E41C](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EFE497A0);
  }
  return result;
}

unint64_t sub_1D42C1460()
{
  unint64_t result;

  result = qword_1EFE497A8;
  if (!qword_1EFE497A8)
  {
    result = MEMORY[0x1D825E41C](MEMORY[0x1E0DEB470], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1EFE497A8);
  }
  return result;
}

uint64_t type metadata accessor for SNKShotFeaturizationStreamResult()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for SNKShotFeaturizationStreamCompletion()
{
  return objc_opt_self();
}

double (*sub_1D42C14DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8))(uint64_t a1)
{
  uint64_t v8;
  uint64_t v10;
  id v11;
  double v12;

  *(_QWORD *)(a1 + 24) = v8;
  sub_1D42CB738(a1, a2, a3, a4, a5, a6, a7, a8, v10);

  sub_1D42CB800(v12);
  return sub_1D42C1530;
}

double sub_1D42C1530(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double result;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24) + OBJC_IVAR___SNKShotFeaturizationStreamCompletion_impl;
  *(_QWORD *)(v2 + 8) = *(_QWORD *)a1;
  result = *(double *)(a1 + 8);
  *(double *)(v2 + 16) = result;
  *(_QWORD *)(v2 + 24) = v1;
  return result;
}

id SNKShotFeaturizationStreamCompletion.__deallocating_deinit(uint64_t a1)
{
  return sub_1D42C00E0(a1, type metadata accessor for SNKShotFeaturizationStreamCompletion);
}

void sub_1D42C1570()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  sub_1D42CB460();
  v2 = v1;
  v3 = *v0;
  v4 = v0[2];
  v5 = (void *)v0[4];
  sub_1D42CB8FC();
  sub_1D42D6404(v2, v3);
  swift_bridgeObjectRelease();
  sub_1D42D63D0();
  sub_1D42CB9DC();
  sub_1D42D6404(v2, v4);
  swift_bridgeObjectRelease();
  sub_1D42D63D0();
  v6 = v5;
  sub_1D42CB6FC();

  sub_1D451B988();
  sub_1D451B97C();
  sub_1D42CB47C();
  sub_1D451B988();
  sub_1D42CB430();
}

BOOL sub_1D42C161C(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v20 = *(_QWORD *)(a1 + 8);
  v17 = *(_QWORD *)(a1 + 24);
  v18 = *(_QWORD *)(a1 + 16);
  v16 = *(_QWORD *)(a1 + 40);
  v3 = *(_DWORD *)(a1 + 48);
  v2 = *(_DWORD *)(a1 + 52);
  v4 = *(_QWORD *)(a1 + 56);
  v19 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_DWORD *)(a2 + 48);
  v9 = *(_DWORD *)(a2 + 52);
  v10 = *(_QWORD *)(a2 + 56);
  if ((sub_1D42FD5B4(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0)
    return 0;
  if ((sub_1D42FD6B8(v20, v19) & 1) == 0)
    return 0;
  if ((sub_1D42FD5B4(v18, v5) & 1) == 0)
    return 0;
  v11 = sub_1D42FD6B8(v17, v6);
  if ((v11 & 1) == 0)
    return 0;
  sub_1D42CB340(v11, (unint64_t *)&qword_1EFE404C0);
  if ((sub_1D451B10C() & 1) == 0)
    return 0;
  return v16 == v7 && v3 == v8 && v2 == v9 && v4 == v10;
}

uint64_t sub_1D42C175C(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  char v6;

  if (a1 == 0xD000000000000016 && a2 == 0x80000001D4550940 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D4550960 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001D4550980 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D45509A0 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = a1 == 0x72616C706D657865 && a2 == 0xE800000000000000;
    if (v5 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else if (a1 == 0xD000000000000013 && a2 == 0x80000001D4550920)
    {
      swift_bridgeObjectRelease();
      return 5;
    }
    else
    {
      v6 = sub_1D451B820();
      swift_bridgeObjectRelease();
      if ((v6 & 1) != 0)
        return 5;
      else
        return 6;
    }
  }
}

uint64_t sub_1D42C19A8()
{
  return 6;
}

uint64_t sub_1D42C19B0(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1D42C19EC + 4 * byte_1D4523B80[a1]))(0xD000000000000016, 0x80000001D4550940);
}

unint64_t sub_1D42C19EC()
{
  return 0xD000000000000012;
}

uint64_t sub_1D42C1A08()
{
  uint64_t v0;

  return v0 + 6;
}

void sub_1D42C1A58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1D42CB9A8();
  sub_1D42B28FC(&qword_1EFE49A28);
  sub_1D42CB1BC();
  MEMORY[0x1E0C80A78](v4);
  sub_1D42CB5EC();
  sub_1D42CB248();
  sub_1D42CA270();
  sub_1D42CB10C();
  sub_1D42CB9F8();
  sub_1D42CB928((uint64_t)&unk_1EFE49A30);
  sub_1D42CB068();
  if (!v1)
  {
    sub_1D42CBA14();
    sub_1D42CB9F8();
    sub_1D42CB928((uint64_t)&unk_1EFE49A38);
    sub_1D42CB068();
    sub_1D42CB874(2);
    sub_1D42CB068();
    sub_1D42CB874(3);
    sub_1D42CB068();
    sub_1D42CA108();
    sub_1D42CB068();
    sub_1D42CA054();
    sub_1D42CB068();
  }
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v0);
  sub_1D42CB3F8();
}

void sub_1D42C1C88()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  _BYTE v5[72];

  v1 = *v0;
  v2 = v0[2];
  v3 = (void *)v0[4];
  sub_1D42BE9A8();
  sub_1D42CB8FC();
  sub_1D42D6404((uint64_t)v5, v1);
  swift_bridgeObjectRelease();
  sub_1D42D63D0();
  sub_1D42CB9DC();
  sub_1D42D6404((uint64_t)v5, v2);
  swift_bridgeObjectRelease();
  sub_1D42D63D0();
  v4 = v3;
  sub_1D42CB350();

  sub_1D42CB650();
  sub_1D42CB47C();
  sub_1D42CB644();
  sub_1D42CB950();
  sub_1D42CB230();
  sub_1D42CB414();
}

void sub_1D42C1D34()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D42BE910();
  v2 = v1;
  v4 = v3;
  v5 = sub_1D42B28FC(&qword_1EFE499F8);
  MEMORY[0x1E0C80A78](v5);
  sub_1D42CB210();
  sub_1D42B5528(v2, v2[3]);
  sub_1D42CA270();
  sub_1D451BA0C();
  if (v0)
  {
    v6 = 0;
  }
  else
  {
    sub_1D42CB9F8();
    sub_1D42CB928((uint64_t)&unk_1EFE49A10);
    sub_1D42CB1F0();
    sub_1D42B28FC(&qword_1EFE49A18);
    sub_1D42CA2AC((uint64_t)&unk_1EFE49A20);
    v11 = v10;
    sub_1D42CB6CC();
    sub_1D42CB1F0();
    if (!v11)
    {
      swift_bridgeObjectRetain();
      sub_1D42CB1F0();
      v8 = 1;
      swift_bridgeObjectRetain();
      sub_1D42CB1F0();
      v12 = sub_1D42CA0CC();
      sub_1D42CB8FC();
      sub_1D42CB850();
      sub_1D42CB1F0();
      if (!v12)
      {
        sub_1D42C9FC0();
        v13 = v14;
        sub_1D42CB850();
        sub_1D42CB1F0();
        sub_1D42CB0E8();
        *v4 = v14;
        v4[1] = v14;
        v4[2] = v14;
        v4[3] = v14;
        v4[4] = v13;
        v4[5] = v14;
        v4[6] = v15;
        v4[7] = v16;
        sub_1D42CB9B4();

        swift_bridgeObjectRelease();
        sub_1D42CB8F4();
        sub_1D42CB5C8();
        sub_1D42B7204();
        goto LABEL_12;
      }
      sub_1D42CB0E8();
      sub_1D42CB300();
      sub_1D42CB624();
      sub_1D42CB944();
      sub_1D42CB8F4();
      v9 = 1;
      sub_1D42CB9B4();
      v7 = 1;
      goto LABEL_6;
    }
    sub_1D42CB0E8();
    sub_1D42CB300();
    v6 = 1;
  }
  sub_1D42CB9B4();
  if ((v6 & 1) == 0)
    goto LABEL_12;
  v7 = 0;
  v8 = 0;
  v9 = 0;
LABEL_6:
  sub_1D42CB338();
  if (v7)
  {
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
      goto LABEL_8;
LABEL_11:
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0)
      goto LABEL_12;
    goto LABEL_9;
  }
  if (v8)
    goto LABEL_11;
LABEL_8:
  if (v9)
LABEL_9:
    swift_bridgeObjectRelease();
LABEL_12:
  sub_1D42BE844();
}

id sub_1D42C20F8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v10;

  v2 = (_QWORD *)(v1 + OBJC_IVAR___SNKShotFeaturizationResult_impl);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR___SNKShotFeaturizationResult_impl);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___SNKShotFeaturizationResult_impl + 8);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR___SNKShotFeaturizationResult_impl + 16);
  v6 = v2[3];
  v7 = v2[5];
  v10 = (id)v2[4];
  v8 = v2[7];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v10;
  a1[5] = v7;
  a1[6] = v2[6];
  a1[7] = v8;
  swift_bridgeObjectRetain();
  sub_1D42CB7B8();
  sub_1D42CB6CC();
  sub_1D42CB7F8();
  return v10;
}

uint64_t sub_1D42C216C()
{
  unsigned __int8 *v0;

  return sub_1D42C19B0(*v0);
}

uint64_t sub_1D42C2174@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D42C175C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D42C2198@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D42C19A8();
  *a1 = result;
  return result;
}

uint64_t sub_1D42C21BC()
{
  sub_1D42CA270();
  return sub_1D451BA3C();
}

uint64_t sub_1D42C21E4()
{
  sub_1D42CA270();
  return sub_1D451BA48();
}

void sub_1D42C220C()
{
  sub_1D42C1D34();
}

void sub_1D42C2220()
{
  sub_1D42C1A58();
}

uint64_t sub_1D42C223C()
{
  sub_1D451B958();
  sub_1D42C1570();
  return sub_1D451B994();
}

void SNKShotFeaturizationResult.init()(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  objc_super v17;

  sub_1D42CB340(a1, (unint64_t *)&unk_1EFE49790);
  v3 = v2;
  v4 = MEMORY[0x1E0DEE9D8];
  v5 = v1;
  sub_1D42B28FC(&qword_1EFE510F0);
  sub_1D42CB810();
  sub_1D42CB768();
  v6 = sub_1D42CB0CC();
  if (v3)
  {
    sub_1D42CB5B8();
    swift_unexpectedError();
    __break(1u);
  }
  else
  {
    v7 = MEMORY[0x1E0CA2E68];
    v8 = *MEMORY[0x1E0CA2E68];
    v9 = *(_QWORD *)(MEMORY[0x1E0CA2E68] + 16);
    v10 = &v5[OBJC_IVAR___SNKShotFeaturizationResult_impl];
    *(_QWORD *)v10 = v4;
    *((_QWORD *)v10 + 1) = v4;
    *((_QWORD *)v10 + 2) = v4;
    *((_QWORD *)v10 + 3) = v4;
    *((_QWORD *)v10 + 4) = v6;
    *((_QWORD *)v10 + 5) = v8;
    *((_QWORD *)v10 + 6) = *(_QWORD *)(v7 + 8);
    *((_QWORD *)v10 + 7) = v9;

    v17.receiver = v5;
    v17.super_class = (Class)type metadata accessor for SNKShotFeaturizationResult();
    sub_1D42CB364((uint64_t)v17.super_class, sel_init, v11, v12, v13, v14, v15, v16, v17);
    sub_1D42CB6B8();
  }
}

uint64_t type metadata accessor for SNKShotFeaturizationResult()
{
  return objc_opt_self();
}

void sub_1D42C23C4(uint64_t a1, uint64_t a2)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;

  v2 = sub_1D42CB730(a1, a2);
  v3 = v16;
  sub_1D42CB718((uint64_t)v2, v4, v5, v6, v7, v8, v9, v10, v14, v15, v16, v17, v18, v19, v20);
  sub_1D42CB208();
  sub_1D42CB0C4();
  sub_1D42B7204();
  v11 = *(_QWORD *)(v3 + 16);
  if (v11)
  {
    sub_1D42CB284();
    v12 = 0;
    do
    {
      v13 = v12 + 1;
      sub_1D42CB2A4(v3 + 8 * v12);
      sub_1D42CB3B0();
      sub_1D42CB148();
      sub_1D42CB238();
      sub_1D42CB4F0();
      v12 = v13;
    }
    while (v11 != v13);
  }
  sub_1D42BE8B4();
  sub_1D42CB2D0();
}

uint64_t sub_1D42C2478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  sub_1D42CB484();
  if (!v3)
  {
    sub_1D42CB830();
    if (v2)
      goto LABEL_3;
LABEL_9:
    sub_1D42CB0C4();
    v5 = MEMORY[0x1E0DEE9D8];
LABEL_10:
    *(_QWORD *)(v0 + OBJC_IVAR___SNKShotFeaturizationResult_impl) = v5;
    return sub_1D42CB320();
  }
  v2 = sub_1D42CB138();
  if (!v2)
    goto LABEL_9;
LABEL_3:
  result = sub_1D42CB7C0();
  if ((v2 & 0x8000000000000000) == 0)
  {
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
        sub_1D42CB454();
      sub_1D42CB2A4(v1);
      sub_1D42CB7E0();
      sub_1D42CB608();
      sub_1D42CB770();
      sub_1D42CB4F0();
    }
    while (v2);
    v5 = v6;
    sub_1D42CB0C4();
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D42C2528()
{
  swift_bridgeObjectRetain();
  return sub_1D42C2478();
}

void sub_1D42C2550(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_1D42CB384(a1);
  sub_1D42C23C4(v2, v3);
  *v1 = v4;
  sub_1D42B6E24();
}

void sub_1D42C257C(uint64_t *a1, char a2)
{
  sub_1D42C50A8(a1, a2, (void (*)(uint64_t))sub_1D42C2478);
}

id sub_1D42C25A4(void *a1, uint64_t a2, void (*a3)(void), unint64_t *a4)
{
  id v6;
  void *v7;

  v6 = a1;
  a3();

  sub_1D42CA5D0(0, a4);
  v7 = (void *)sub_1D42CB6AC();
  sub_1D42CB208();
  return v7;
}

void sub_1D42C2604(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;

  v3 = sub_1D42CB730(a1, a2);
  v4 = v17;
  sub_1D42CB718((uint64_t)v3, v5, v6, v7, v8, v9, v10, v11, v14, v15, v16, v17, v18, v19, v20);
  sub_1D42CB208();
  sub_1D42CB0C4();
  sub_1D42B7204();
  v12 = *(_QWORD *)(v4 + 16);
  if (v12)
  {
    sub_1D42CB284();
    do
    {
      v13 = sub_1D42CB6E8();
      sub_1D42CBA2C(v13);
      sub_1D42CB3B0();
      sub_1D42CB148();
      sub_1D42CB238();
      sub_1D42CB4F0();
    }
    while (v12 != v2);
  }
  sub_1D42BE8B4();
  sub_1D42CB598();
}

void sub_1D42C26C0(void *a1, uint64_t a2, uint64_t a3, unint64_t *a4)
{
  id v5;
  void *v6;

  sub_1D42CA5D0(0, a4);
  sub_1D42CB994();
  v5 = a1;
  sub_1D42CB698();
  sub_1D42CB3A0(v6);
}

void sub_1D42C270C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  char v20;
  char v21;

  sub_1D42CB460();
  sub_1D42CB484();
  if (v17)
    goto LABEL_14;
  sub_1D42CB830();
  if (v13)
  {
    while (1)
    {
      sub_1D42CB580();
      if (v13 < 0)
        break;
      sub_1D42CB7A0();
      while (1)
      {
        if (v16)
          sub_1D42CB454();
        v18 = sub_1D42CB2A4(v12 + 8 * v14);
        v19 = sub_1D42CBA50(v18);

        if ((unint64_t)v19 > 1)
          break;
        sub_1D42CB9C8();
        if (v20)
        {
          sub_1D42CB538();
          v15 = a10;
        }
        sub_1D42CB550();
        if (v21)
        {
          sub_1D42CB0C4();
          v10 = a9;
          goto LABEL_16;
        }
      }
      __break(1u);
LABEL_14:
      v13 = sub_1D42CB138();
      if (!v13)
        goto LABEL_15;
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    sub_1D42CB0C4();
    v15 = MEMORY[0x1E0DEE9D8];
LABEL_16:
    *(_QWORD *)(v10 + OBJC_IVAR___SNKShotFeaturizationResult_impl + 8) = v15;
    sub_1D42CB268();
  }
}

void sub_1D42C27D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v0 = swift_bridgeObjectRetain();
  sub_1D42C270C(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);
}

void sub_1D42C27FC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_1D42CB384(a1);
  sub_1D42C2604(v2, v3);
  *v1 = v4;
  sub_1D42B6E24();
}

void sub_1D42C2828(uint64_t *a1, char a2)
{
  sub_1D42C50A8(a1, a2, (void (*)(uint64_t))sub_1D42C270C);
}

void sub_1D42C2850(uint64_t a1, uint64_t a2)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;

  v2 = sub_1D42CB730(a1, a2);
  v3 = v18;
  sub_1D42CB718((uint64_t)v2, v4, v5, v6, v7, v8, v9, v10, v14, v15, v16, v17, v18, v19, v20);
  sub_1D42CB208();
  sub_1D42CB0C4();
  sub_1D42B7204();
  v11 = *(_QWORD *)(v3 + 16);
  if (v11)
  {
    sub_1D42CB284();
    v12 = 0;
    do
    {
      v13 = v12 + 1;
      sub_1D42CB2A4(v3 + 8 * v12);
      sub_1D42CB3B0();
      sub_1D42CB148();
      sub_1D42CB238();
      sub_1D42CB4F0();
      v12 = v13;
    }
    while (v11 != v13);
  }
  sub_1D42BE8B4();
  sub_1D42CB2D0();
}

uint64_t sub_1D42C2904()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  sub_1D42CB484();
  if (!v3)
  {
    sub_1D42CB830();
    if (v2)
      goto LABEL_3;
LABEL_9:
    sub_1D42CB0C4();
    v5 = MEMORY[0x1E0DEE9D8];
LABEL_10:
    *(_QWORD *)(v0 + OBJC_IVAR___SNKShotFeaturizationResult_impl + 16) = v5;
    return sub_1D42CB320();
  }
  v2 = sub_1D42CB138();
  if (!v2)
    goto LABEL_9;
LABEL_3:
  result = sub_1D42CB7C0();
  if ((v2 & 0x8000000000000000) == 0)
  {
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
        sub_1D42CB454();
      sub_1D42CB2A4(v1);
      sub_1D42CB7E0();
      sub_1D42CB608();
      sub_1D42CB770();
      sub_1D42CB4F0();
    }
    while (v2);
    v5 = v6;
    sub_1D42CB0C4();
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D42C29B8()
{
  swift_bridgeObjectRetain();
  return sub_1D42C2904();
}

void sub_1D42C29E0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_1D42CB384(a1);
  sub_1D42C2850(v2, v3);
  *v1 = v4;
  sub_1D42B6E24();
}

void sub_1D42C2A0C(uint64_t *a1, char a2)
{
  sub_1D42C50A8(a1, a2, (void (*)(uint64_t))sub_1D42C2904);
}

void sub_1D42C2A34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;

  v3 = sub_1D42CB730(a1, a2);
  v4 = v19;
  sub_1D42CB718((uint64_t)v3, v5, v6, v7, v8, v9, v10, v11, v14, v15, v16, v17, v18, v19, v20);
  sub_1D42CB208();
  sub_1D42CB0C4();
  sub_1D42B7204();
  v12 = *(_QWORD *)(v4 + 16);
  if (v12)
  {
    sub_1D42CB284();
    do
    {
      v13 = sub_1D42CB6E8();
      sub_1D42CBA2C(v13);
      sub_1D42CB3B0();
      sub_1D42CB148();
      sub_1D42CB238();
      sub_1D42CB4F0();
    }
    while (v12 != v2);
  }
  sub_1D42BE8B4();
  sub_1D42CB598();
}

void sub_1D42C2AF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  char v20;
  char v21;

  sub_1D42CB460();
  sub_1D42CB484();
  if (v17)
    goto LABEL_14;
  sub_1D42CB830();
  if (v13)
  {
    while (1)
    {
      sub_1D42CB580();
      if (v13 < 0)
        break;
      sub_1D42CB7A0();
      while (1)
      {
        if (v16)
          sub_1D42CB454();
        v18 = sub_1D42CB2A4(v12 + 8 * v14);
        v19 = sub_1D42CBA50(v18);

        if ((unint64_t)v19 > 1)
          break;
        sub_1D42CB9C8();
        if (v20)
        {
          sub_1D42CB538();
          v15 = a10;
        }
        sub_1D42CB550();
        if (v21)
        {
          sub_1D42CB0C4();
          v10 = a9;
          goto LABEL_16;
        }
      }
      __break(1u);
LABEL_14:
      v13 = sub_1D42CB138();
      if (!v13)
        goto LABEL_15;
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    sub_1D42CB0C4();
    v15 = MEMORY[0x1E0DEE9D8];
LABEL_16:
    *(_QWORD *)(v10 + OBJC_IVAR___SNKShotFeaturizationResult_impl + 24) = v15;
    sub_1D42CB268();
  }
}

void sub_1D42C2BB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v0 = swift_bridgeObjectRetain();
  sub_1D42C2AF0(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);
}

void sub_1D42C2BE0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_1D42CB384(a1);
  sub_1D42C2A34(v2, v3);
  *v1 = v4;
  sub_1D42B6E24();
}

void sub_1D42C2C0C(uint64_t *a1, char a2)
{
  sub_1D42C50A8(a1, a2, (void (*)(uint64_t))sub_1D42C2AF0);
}

uint64_t sub_1D42C2C48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;

  sub_1D42CB90C(a1, a2, a3, a4, a5, a6, a7, a8, v9);
  swift_bridgeObjectRelease();
  sub_1D42CB0C4();
  sub_1D42B7204();
  sub_1D42BE8B4();
  return v10;
}

void sub_1D42C2CDC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___SNKShotFeaturizationResult_impl + 32);
  *(_QWORD *)(v1 + OBJC_IVAR___SNKShotFeaturizationResult_impl + 32) = a1;

}

void sub_1D42C2CF4(id *a1)
{
  sub_1D42C2CDC((uint64_t)*a1);
}

void sub_1D42C2D1C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = sub_1D42CB384(a1);
  *v1 = sub_1D42C2C48(v2, v3, v4, v5, v6, v7, v8, v9);
  sub_1D42B6E24();
}

void sub_1D42C2D48(void **a1, char a2)
{
  sub_1D42C4CBC(a1, a2, (void (*)(void))sub_1D42C2CDC);
}

uint64_t sub_1D42C2D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  void *v10;
  uint64_t v11;

  sub_1D42CB90C(a1, a2, a3, a4, a5, a6, a7, a8, v9);

  sub_1D42CB208();
  sub_1D42CB0C4();
  sub_1D42B7204();
  sub_1D42BE8B4();
  return v11;
}

uint64_t sub_1D42C2DF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D42C4044(a1, a2, a3, &OBJC_IVAR___SNKShotFeaturizationResult_impl);
}

uint64_t sub_1D42C2E00(uint64_t *a1)
{
  return sub_1D42C2DF4(*a1, a1[1], a1[2]);
}

double (*sub_1D42C2E30(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8))(uint64_t a1, uint64_t a2)
{
  uint64_t v8;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  a1[3] = v8;
  sub_1D42CB90C((uint64_t)a1, a2, a3, a4, a5, a6, a7, a8, v11);
  swift_bridgeObjectRelease();
  sub_1D42B7204();
  sub_1D42CB0C4();
  sub_1D42CB208();

  *a1 = v13;
  a1[1] = v14;
  a1[2] = v15;
  return sub_1D42C2EB4;
}

double sub_1D42C2EB4(uint64_t a1, uint64_t a2)
{
  return sub_1D42C4118(a1, a2, &OBJC_IVAR___SNKShotFeaturizationResult_impl);
}

id SNKShotFeaturizationResult.__deallocating_deinit(uint64_t a1)
{
  return sub_1D42C00E0(a1, type metadata accessor for SNKShotFeaturizationResult);
}

void sub_1D42C2F10()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D42CB460();
  swift_bridgeObjectRetain();
  v0 = sub_1D42CB9EC();
  sub_1D42D62A0(v0, v1);
  sub_1D42CB208();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D42CB8EC();
  sub_1D451B988();
  sub_1D42CB8E4();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D42CB430();
}

BOOL sub_1D42C2FD0(uint64_t a1, uint64_t a2)
{
  float v2;
  float v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  float v8;
  float v9;
  float v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  float v15;
  char v16;
  char v17;
  _BOOL8 result;
  int32x4_t v19;
  int32x4_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;

  v3 = *(float *)(a1 + 8);
  v2 = *(float *)(a1 + 12);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v23 = *(_OWORD *)(a1 + 48);
  v24 = *(_OWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(float *)(a1 + 64);
  v10 = *(float *)(a2 + 8);
  v9 = *(float *)(a2 + 12);
  v11 = *(_QWORD *)(a2 + 16);
  v12 = *(_QWORD *)(a2 + 32);
  v13 = *(_QWORD *)(a2 + 40);
  v21 = *(_OWORD *)(a2 + 48);
  v22 = *(_OWORD *)(a2 + 24);
  v14 = *(_QWORD *)(a2 + 56);
  v15 = *(float *)(a2 + 64);
  sub_1D42FD444(*(_QWORD *)a1, *(_QWORD *)a2);
  v17 = v16;
  result = 0;
  v19.i64[0] = v24;
  v19.i64[1] = v23;
  v20.i64[0] = v22;
  v20.i64[1] = v21;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_s32(v19, v20)), 0xFuLL))) & 1) != 0
    && v4 == v11
    && v5 == v12
    && v6 == v13
    && v7 == v14
    && v3 == v10
    && (v17 & 1) != 0
    && v2 == v9)
  {
    return v8 == v15;
  }
  return result;
}

uint64_t sub_1D42C30F8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x734C5255656C6966 && a2 == 0xE800000000000000;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D45509D0 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D45509F0 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D4550A10 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D4550A30 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D4550A50)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1D42C3344(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D42C3378 + 4 * byte_1D4523B86[a1]))(0x734C5255656C6966, 0xE800000000000000);
}

unint64_t sub_1D42C3378()
{
  return 0xD00000000000001ALL;
}

unint64_t sub_1D42C33A0()
{
  return 0xD000000000000010;
}

void sub_1D42C33F0()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D42CB8A0();
  sub_1D42CB9A8();
  sub_1D42B28FC(&qword_1EFE49970);
  sub_1D42CB1BC();
  MEMORY[0x1E0C80A78](v1);
  sub_1D42CB5D0();
  sub_1D42CB248();
  sub_1D42C9F4C();
  sub_1D42CB10C();
  sub_1D42B28FC(&qword_1EFE49950);
  sub_1D42C9FFC((uint64_t)&unk_1EFE49978);
  sub_1D42CB068();
  if (!v0)
  {
    sub_1D42CB3E8();
    sub_1D42CB3E8();
    sub_1D42CA054();
    sub_1D42CB068();
    sub_1D42CB068();
    sub_1D42CB3E8();
  }
  sub_1D42CB294();
  sub_1D42CB2AC();
}

uint64_t sub_1D42C35B0()
{
  sub_1D451B958();
  sub_1D42C2F10();
  return sub_1D451B994();
}

void sub_1D42C3630()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1D42CB8A0();
  sub_1D42CB818();
  v3 = v2;
  sub_1D42B28FC(&qword_1EFE49940);
  sub_1D42CB4F8();
  MEMORY[0x1E0C80A78](v4);
  sub_1D42CB210();
  sub_1D42B5528(v0, v0[3]);
  sub_1D42C9F4C();
  sub_1D451BA0C();
  if (v1)
  {
    sub_1D42BE944();
  }
  else
  {
    sub_1D42B28FC(&qword_1EFE49950);
    sub_1D42C9FFC((uint64_t)&unk_1EFE49958);
    sub_1D42CB1B4();
    v5 = v12;
    swift_bridgeObjectRetain();
    sub_1D42CB2E4();
    v7 = v6;
    LOBYTE(v12) = 2;
    sub_1D42CB2E4();
    v9 = v8;
    sub_1D42C9FC0();
    sub_1D42CB1B4();
    sub_1D42CB1B4();
    sub_1D42CB2E4();
    v11 = v10;
    sub_1D42CB220();
    *(_QWORD *)v3 = v5;
    *(_DWORD *)(v3 + 8) = v7;
    *(_DWORD *)(v3 + 12) = v9;
    *(_QWORD *)(v3 + 16) = v12;
    *(_QWORD *)(v3 + 24) = v13;
    *(_QWORD *)(v3 + 32) = v14;
    *(_QWORD *)(v3 + 40) = v12;
    *(_QWORD *)(v3 + 48) = v13;
    *(_QWORD *)(v3 + 56) = v14;
    *(_DWORD *)(v3 + 64) = v11;
    sub_1D42BE944();
    sub_1D42CB5C8();
  }
  sub_1D42CB2AC();
}

uint64_t sub_1D42C387C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  v2 = v1 + OBJC_IVAR___SNKShotSegmentationRequest_impl;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR___SNKShotSegmentationRequest_impl + 16);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___SNKShotSegmentationRequest_impl + 56);
  v5 = *(_DWORD *)(v1 + OBJC_IVAR___SNKShotSegmentationRequest_impl + 64);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SNKShotSegmentationRequest_impl);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(v2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(v2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(v2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  *(_DWORD *)(a1 + 64) = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D42C38CC()
{
  unsigned __int8 *v0;

  return sub_1D42C3344(*v0);
}

uint64_t sub_1D42C38D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D42C30F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D42C38F8()
{
  sub_1D42C9F4C();
  return sub_1D451BA3C();
}

uint64_t sub_1D42C3920()
{
  sub_1D42C9F4C();
  return sub_1D451BA48();
}

void sub_1D42C3948()
{
  sub_1D42C3630();
}

void sub_1D42C395C()
{
  sub_1D42C33F0();
}

uint64_t sub_1D42C3978()
{
  sub_1D451B958();
  sub_1D42C2F10();
  return sub_1D451B994();
}

id SNKShotSegmentationRequest.init()()
{
  void *v0;
  char *v1;
  CMTimeValue value;
  CMTimeEpoch epoch;
  uint64_t v4;
  CMTimeValue v5;
  CMTimeEpoch v6;
  uint64_t v7;
  char *v8;
  objc_super v10;
  CMTime v11;

  v1 = v0;
  CMTimeMake(&v11, 3, 2);
  value = v11.value;
  epoch = v11.epoch;
  v4 = *(_QWORD *)&v11.timescale;
  CMTimeMake(&v11, 15, 100);
  v5 = v11.value;
  v6 = v11.epoch;
  v7 = *(_QWORD *)&v11.timescale;
  v8 = &v1[OBJC_IVAR___SNKShotSegmentationRequest_impl];
  *(_QWORD *)v8 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)v8 + 1) = 0x42A0000041A00000;
  *((_QWORD *)v8 + 2) = value;
  *((_QWORD *)v8 + 3) = v4;
  *((_QWORD *)v8 + 4) = epoch;
  *((_QWORD *)v8 + 5) = v5;
  *((_QWORD *)v8 + 6) = v7;
  *((_QWORD *)v8 + 7) = v6;
  *((_DWORD *)v8 + 16) = 1061997773;

  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for SNKShotSegmentationRequest();
  return objc_msgSendSuper2(&v10, sel_init);
}

uint64_t sub_1D42C3B30()
{
  _QWORD v1[9];

  sub_1D42C387C((uint64_t)v1);
  return v1[0];
}

void sub_1D42C3B68(void *a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  id v5;
  void *v6;

  a4(0);
  sub_1D42CB994();
  v5 = a1;
  sub_1D42CB698();
  sub_1D42CB3A0(v6);
}

uint64_t sub_1D42C3BAC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR___SNKShotSegmentationRequest_impl) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42C3BC4()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return sub_1D42C3BAC(v0);
}

void (*sub_1D42C3BEC(uint64_t a1))(uint64_t *a1, char a2)
{
  _QWORD *v1;
  _QWORD v3[9];

  sub_1D42CB384(a1);
  sub_1D42C387C((uint64_t)v3);
  *v1 = v3[0];
  return sub_1D42C3C2C;
}

void sub_1D42C3C2C(uint64_t *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = sub_1D42CB7B8();
    sub_1D42C3BAC(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D42C3BAC(*a1);
    sub_1D42B6E24();
  }
}

void sub_1D42C3CA0()
{
  _BYTE v0[72];

  sub_1D42C387C((uint64_t)v0);
  sub_1D42CB988();
  sub_1D42CB678();
}

void sub_1D42C3CE8(float a1)
{
  uint64_t v1;

  *(float *)(v1 + OBJC_IVAR___SNKShotSegmentationRequest_impl + 8) = a1;
}

void sub_1D42C3CFC(uint64_t a1)
{
  uint64_t v1;
  int v2;
  _BYTE v4[72];

  *(_QWORD *)a1 = v1;
  sub_1D42C387C((uint64_t)v4);
  sub_1D42CB988();
  *(_DWORD *)(a1 + 8) = v2;
  sub_1D42CB390();
}

float sub_1D42C3D3C(uint64_t a1)
{
  float result;

  result = *(float *)(a1 + 8);
  *(float *)(*(_QWORD *)a1 + OBJC_IVAR___SNKShotSegmentationRequest_impl + 8) = result;
  return result;
}

void sub_1D42C3D90()
{
  _BYTE v0[72];

  sub_1D42C387C((uint64_t)v0);
  sub_1D42CB97C();
  sub_1D42CB678();
}

void sub_1D42C3DD8(float a1)
{
  uint64_t v1;

  *(float *)(v1 + OBJC_IVAR___SNKShotSegmentationRequest_impl + 12) = a1;
}

void sub_1D42C3DEC(uint64_t a1)
{
  uint64_t v1;
  int v2;
  _BYTE v4[72];

  *(_QWORD *)a1 = v1;
  sub_1D42C387C((uint64_t)v4);
  sub_1D42CB97C();
  *(_DWORD *)(a1 + 8) = v2;
  sub_1D42CB390();
}

float sub_1D42C3E2C(uint64_t a1)
{
  float result;

  result = *(float *)(a1 + 8);
  *(float *)(*(_QWORD *)a1 + OBJC_IVAR___SNKShotSegmentationRequest_impl + 12) = result;
  return result;
}

void sub_1D42C3E54()
{
  uint64_t v0;

  sub_1D42C387C((uint64_t)&v0);
  swift_bridgeObjectRelease();
  sub_1D42CB570();
  sub_1D42CB708();
}

uint64_t sub_1D42C3EB4(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4 = (_QWORD *)(v3 + OBJC_IVAR___SNKShotSegmentationRequest_impl);
  v4[2] = result;
  v4[3] = a2;
  v4[4] = a3;
  return result;
}

uint64_t sub_1D42C3ED4(uint64_t *a1)
{
  return sub_1D42C3EB4(*a1, a1[1], a1[2]);
}

void sub_1D42C3F04(uint64_t a1)
{
  uint64_t v1;
  _QWORD v2[4];

  *(_QWORD *)(a1 + 24) = v1;
  sub_1D42C387C((uint64_t)v2);
  swift_bridgeObjectRelease();
  sub_1D42CB800(*(double *)&v2[3]);
  sub_1D42CB708();
}

double sub_1D42C3F54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double result;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24) + OBJC_IVAR___SNKShotSegmentationRequest_impl;
  *(_QWORD *)(v2 + 16) = *(_QWORD *)a1;
  result = *(double *)(a1 + 8);
  *(double *)(v2 + 24) = result;
  *(_QWORD *)(v2 + 32) = v1;
  return result;
}

void sub_1D42C3F88(void *a1@<X0>, uint64_t (*a2)(void)@<X2>, uint64_t *a3@<X8>)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = a1;
  v6 = a2();
  v8 = v7;
  v10 = v9;

  *a3 = v6;
  a3[1] = v8;
  a3[2] = v10;
  sub_1D42CB084();
}

void sub_1D42C3FD8()
{
  _QWORD v0[5];

  sub_1D42C387C((uint64_t)v0);
  swift_bridgeObjectRelease();
  sub_1D42CB570();
  sub_1D42CB708();
}

uint64_t sub_1D42C4038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D42C4044(a1, a2, a3, &OBJC_IVAR___SNKShotSegmentationRequest_impl);
}

uint64_t sub_1D42C4044(uint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5 = (_QWORD *)(v4 + *a4);
  v5[5] = result;
  v5[6] = a2;
  v5[7] = a3;
  return result;
}

void sub_1D42C4060()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  int v2;
  int v3;
  uint64_t v4;

  sub_1D42CB12C();
  *(_QWORD *)v0 = v1();
  *(_DWORD *)(v0 + 8) = v2;
  *(_DWORD *)(v0 + 12) = v3;
  *(_QWORD *)(v0 + 16) = v4;
  sub_1D42B6E24();
}

uint64_t sub_1D42C408C(uint64_t *a1)
{
  return sub_1D42C4038(*a1, a1[1], a1[2]);
}

void sub_1D42C40BC(uint64_t a1)
{
  uint64_t v1;
  _QWORD v2[7];

  *(_QWORD *)(a1 + 24) = v1;
  sub_1D42C387C((uint64_t)v2);
  swift_bridgeObjectRelease();
  sub_1D42CB800(*(double *)&v2[6]);
  sub_1D42CB708();
}

double sub_1D42C410C(uint64_t a1, uint64_t a2)
{
  return sub_1D42C4118(a1, a2, &OBJC_IVAR___SNKShotSegmentationRequest_impl);
}

double sub_1D42C4118(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  double result;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24) + *a3;
  *(_QWORD *)(v4 + 40) = *(_QWORD *)a1;
  result = *(double *)(a1 + 8);
  *(double *)(v4 + 48) = result;
  *(_QWORD *)(v4 + 56) = v3;
  return result;
}

void sub_1D42C4174()
{
  _BYTE v0[72];

  sub_1D42C387C((uint64_t)v0);
  sub_1D42CB970();
  sub_1D42CB678();
}

void sub_1D42C41BC(float a1)
{
  uint64_t v1;

  *(float *)(v1 + OBJC_IVAR___SNKShotSegmentationRequest_impl + 64) = a1;
}

void sub_1D42C41D0(uint64_t a1)
{
  uint64_t v1;
  int v2;
  _BYTE v4[72];

  *(_QWORD *)a1 = v1;
  sub_1D42C387C((uint64_t)v4);
  sub_1D42CB970();
  *(_DWORD *)(a1 + 8) = v2;
  sub_1D42CB390();
}

float sub_1D42C4210(uint64_t a1)
{
  float result;

  result = *(float *)(a1 + 8);
  *(float *)(*(_QWORD *)a1 + OBJC_IVAR___SNKShotSegmentationRequest_impl + 64) = result;
  return result;
}

id SNKShotSegmentationRequest.__deallocating_deinit(uint64_t a1)
{
  return sub_1D42C00E0(a1, type metadata accessor for SNKShotSegmentationRequest);
}

void sub_1D42C4248(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;

  v5 = a2;
  sub_1D451B118();

  sub_1D42CB7F8();
  sub_1D42D6458(a1, a3);
  sub_1D42CB0C4();
  sub_1D451B964();
  sub_1D42CB15C();
}

void sub_1D42C42A0(uint64_t a1)
{
  sub_1D42CB340(a1, (unint64_t *)&qword_1EFE404C0);
  if ((sub_1D42CB638() & 1) != 0)
    sub_1D42FD720();
  sub_1D42CB084();
}

BOOL sub_1D42C4318(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_1D42C4328()
{
  return sub_1D451B964();
}

uint64_t sub_1D42C434C(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  char v7;

  if (a1 == 0xD000000000000011 && a2 == 0x80000001D4550A70 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v5 = a1 == 0x73746E656D676573 && a2 == 0xE800000000000000;
    if (v5 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x72616C706D657865 && a2 == 0xED00007865646E49)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = sub_1D451B820();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1D42C44B8()
{
  return 3;
}

void sub_1D42C44C0()
{
  sub_1D42BE9A8();
  sub_1D451B964();
  sub_1D42CB230();
  sub_1D42BE978();
}

uint64_t sub_1D42C44F0(char a1)
{
  if (!a1)
    return 0xD000000000000011;
  if (a1 == 1)
    return 0x73746E656D676573;
  return 0x72616C706D657865;
}

void sub_1D42C4558()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1D42BE910();
  v2 = v1;
  v3 = sub_1D42B28FC(&qword_1EFE49A68);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1D42CB210();
  v7 = v6 - v5;
  sub_1D42B5528(v2, v2[3]);
  sub_1D42CA2FC();
  sub_1D451BA24();
  sub_1D42CB9A0();
  sub_1D42CB780();
  sub_1D42CB7F0();
  if (!v0)
  {
    sub_1D42CBA14();
    sub_1D42B28FC(&qword_1EFE49A50);
    sub_1D42CA338((uint64_t)&unk_1EFE49A70);
    sub_1D42CB780();
    sub_1D42CB7F0();
    sub_1D451B754();
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  sub_1D42BE844();
}

void sub_1D42C46B8(void *a1, uint64_t a2)
{
  id v4;
  _BYTE v5[72];

  sub_1D42BE9A8();
  v4 = a1;
  sub_1D42CB350();

  sub_1D42CB7F8();
  sub_1D42D6458((uint64_t)v5, a2);
  sub_1D42CB0C4();
  sub_1D42CB3DC();
  sub_1D42CB230();
  sub_1D42CB708();
}

void sub_1D42C470C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;

  sub_1D42BE910();
  sub_1D42CB818();
  sub_1D42B28FC(&qword_1EFE49A40);
  sub_1D42CB4F8();
  MEMORY[0x1E0C80A78](v2);
  sub_1D42CB210();
  sub_1D42B5528(v0, v0[3]);
  sub_1D42CA2FC();
  sub_1D451BA0C();
  if (v1)
  {
    sub_1D42BE944();
  }
  else
  {
    sub_1D42CA0CC();
    sub_1D42CB930();
    sub_1D42CB1B4();
    sub_1D42B28FC(&qword_1EFE49A50);
    sub_1D42CBA14();
    sub_1D42CA338((uint64_t)&unk_1EFE49A58);
    v3 = v4;
    sub_1D42CB1B4();
    sub_1D42CB9DC();
    sub_1D451B67C();
    sub_1D42CB3BC();
    sub_1D42BE944();
    sub_1D42CB338();

  }
  sub_1D42CBA44();
}

uint64_t sub_1D42C48D4()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + OBJC_IVAR___SNKShotSegmentationResult_impl);
  sub_1D42CB6CC();
  return sub_1D42CB570();
}

BOOL sub_1D42C4914(char *a1, char *a2)
{
  return sub_1D42C4318(*a1, *a2);
}

void sub_1D42C4920()
{
  sub_1D42C44C0();
}

uint64_t sub_1D42C4938()
{
  return sub_1D42C4328();
}

uint64_t sub_1D42C4940()
{
  char *v0;

  return sub_1D42C44F0(*v0);
}

uint64_t sub_1D42C4948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D42C434C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D42C496C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D42C44B8();
  *a1 = result;
  return result;
}

uint64_t sub_1D42C4990()
{
  sub_1D42CA2FC();
  return sub_1D451BA3C();
}

uint64_t sub_1D42C49B8()
{
  sub_1D42CA2FC();
  return sub_1D451BA48();
}

void sub_1D42C49E0(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D42C470C();
  if (!v1)
  {
    *a1 = v3;
    a1[1] = v4;
    a1[2] = v5;
  }
}

void sub_1D42C4A0C()
{
  sub_1D42C4558();
}

void sub_1D42C4A28()
{
  uint64_t v0;

  sub_1D42C46B8(*(void **)v0, *(_QWORD *)(v0 + 8));
}

void sub_1D42C4A34(uint64_t a1)
{
  uint64_t v1;

  sub_1D42C4248(a1, *(void **)v1, *(_QWORD *)(v1 + 8));
}

uint64_t sub_1D42C4A40()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  _BYTE v5[72];

  v2 = *(void **)v0;
  v1 = *(_QWORD *)(v0 + 8);
  sub_1D451B958();
  v3 = v2;
  sub_1D451B118();

  swift_bridgeObjectRetain();
  sub_1D42D6458((uint64_t)v5, v1);
  swift_bridgeObjectRelease();
  sub_1D451B964();
  return sub_1D451B994();
}

void sub_1D42C4ABC(uint64_t *a1)
{
  sub_1D42C42A0(*a1);
}

void SNKShotSegmentationResult.init()(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  objc_super v14;

  sub_1D42CB340(a1, (unint64_t *)&unk_1EFE49790);
  v3 = v2;
  v4 = MEMORY[0x1E0DEE9D8];
  v5 = v1;
  sub_1D42B28FC(&qword_1EFE510F0);
  sub_1D42CB810();
  sub_1D42CB768();
  v6 = sub_1D42CB0CC();
  if (v3)
  {
    sub_1D42CB5B8();
    swift_unexpectedError();
    __break(1u);
  }
  else
  {
    v7 = (uint64_t *)&v5[OBJC_IVAR___SNKShotSegmentationResult_impl];
    *v7 = v6;
    v7[1] = v4;
    v7[2] = 0;

    v14.receiver = v5;
    v14.super_class = (Class)type metadata accessor for SNKShotSegmentationResult();
    sub_1D42CB364((uint64_t)v14.super_class, sel_init, v8, v9, v10, v11, v12, v13, v14);
    sub_1D42CB6B8();
  }
}

void sub_1D42C4BD4()
{
  sub_1D42C48D4();
  swift_bridgeObjectRelease();
  sub_1D42B6E24();
}

void sub_1D42C4C44(uint64_t a1)
{
  sub_1D42CB1E4(a1, OBJC_IVAR___SNKShotSegmentationResult_impl);
}

void sub_1D42C4C50(id *a1)
{
  sub_1D42C4C44((uint64_t)*a1);
}

void sub_1D42C4C78(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  sub_1D42CB384(a1);
  v2 = sub_1D42C48D4();
  swift_bridgeObjectRelease();
  *v1 = v2;
  sub_1D42B6E24();
}

void sub_1D42C4CB0(void **a1, char a2)
{
  sub_1D42C4CBC(a1, a2, (void (*)(void))sub_1D42C4C44);
}

void sub_1D42C4CBC(void **a1, char a2, void (*a3)(void))
{
  void *v4;
  id v5;

  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    v5 = v4;
    a3();
    sub_1D42CB120(v5);
  }
  else
  {
    ((void (*)(void *))a3)(v4);
    sub_1D42CB964();
  }
}

uint64_t sub_1D42C4D54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1D42CB740();
  v19 = v0;
  v20 = v1;
  v2 = type metadata accessor for KShotSegment(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  v9 = (void *)sub_1D42C48D4();
  v11 = v10;

  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1D451B49C();
    type metadata accessor for SNKShotSegment(0);
    v13 = v11 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v14 = *(_QWORD *)(v3 + 72);
    do
    {
      sub_1D42C13D8(v13, (uint64_t)v8);
      sub_1D42C13D8((uint64_t)v8, (uint64_t)v6);
      sub_1D42BF870((uint64_t)v6);
      sub_1D42C87B8((uint64_t)v8);
      sub_1D451B484();
      sub_1D451B4A8();
      sub_1D451B4B4();
      sub_1D451B490();
      v13 += v14;
      --v12;
    }
    while (v12);
    v15 = v18;
    sub_1D42CB208();
  }
  else
  {
    sub_1D42CB208();
    return MEMORY[0x1E0DEE9D8];
  }
  return v15;
}

void sub_1D42C4EBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D42CB740();
  v2 = v0;
  v4 = v3;
  v5 = type metadata accessor for KShotSegment(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1D42CB18C();
  if (!(v4 >> 62))
  {
    v7 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v7)
      goto LABEL_3;
LABEL_13:
    sub_1D42CB0C4();
    v9 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    *(_QWORD *)(v2 + OBJC_IVAR___SNKShotSegmentationResult_impl + 8) = v9;
    swift_bridgeObjectRelease();
    sub_1D42CB520();
    return;
  }
  v7 = sub_1D42CB138();
  if (!v7)
    goto LABEL_13;
LABEL_3:
  v16 = MEMORY[0x1E0DEE9D8];
  sub_1D42C7150(0, v7 & ~(v7 >> 63), 0);
  if ((v7 & 0x8000000000000000) == 0)
  {
    v15 = v0;
    v8 = 0;
    v9 = v16;
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
        v10 = (id)MEMORY[0x1D825CD78](v8, v4);
      else
        v10 = sub_1D42CB2A4(v4 + 8 * v8);
      v11 = v10;
      v12 = (uint64_t)v10 + OBJC_IVAR___SNKShotSegment_impl;
      sub_1D42B8E84();
      sub_1D42C13D8(v12, v1);

      v14 = *(_QWORD *)(v16 + 16);
      v13 = *(_QWORD *)(v16 + 24);
      if (v14 >= v13 >> 1)
        sub_1D42C7150(v13 > 1, v14 + 1, 1);
      ++v8;
      *(_QWORD *)(v16 + 16) = v14 + 1;
      sub_1D42BF9C0(v1, v16+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v14);
    }
    while (v7 != v8);
    sub_1D42CB0C4();
    v2 = v15;
    goto LABEL_14;
  }
  __break(1u);
}

void sub_1D42C5048()
{
  swift_bridgeObjectRetain();
  sub_1D42C4EBC();
}

void sub_1D42C5070(uint64_t a1)
{
  uint64_t *v1;

  sub_1D42CB384(a1);
  *v1 = sub_1D42C4D54();
  sub_1D42B6E24();
}

void sub_1D42C509C(uint64_t *a1, char a2)
{
  sub_1D42C50A8(a1, a2, (void (*)(uint64_t))sub_1D42C4EBC);
}

void sub_1D42C50A8(uint64_t *a1, char a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  if ((a2 & 1) != 0)
  {
    v4 = sub_1D42CB7F8();
    a3(v4);
    sub_1D42CB514();
  }
  else
  {
    a3(*a1);
    sub_1D42CB15C();
  }
}

id sub_1D42C5118()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  v0 = (void *)sub_1D42C48D4();
  v2 = v1;

  sub_1D42BE8B4();
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v2);
}

void sub_1D42C51A4(void *a1)
{
  uint64_t v1;
  id v2;

  v2 = objc_msgSend(a1, sel_integerValue);
  *(_QWORD *)(v1 + OBJC_IVAR___SNKShotSegmentationResult_impl + 16) = v2;
  sub_1D42CB630(a1);
}

void sub_1D42C51DC(id *a1)
{
  sub_1D42C51A4(*a1);
}

void sub_1D42C5204(uint64_t a1)
{
  id *v1;

  sub_1D42CB384(a1);
  *v1 = sub_1D42C5118();
  sub_1D42B6E24();
}

void sub_1D42C5230(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    sub_1D42C51A4(v3);
    sub_1D42CB120(v3);
  }
  else
  {
    sub_1D42C51A4(v2);
    sub_1D42CB964();
  }
}

id SNKShotSegmentationResult.__deallocating_deinit(uint64_t a1)
{
  return sub_1D42C00E0(a1, type metadata accessor for SNKShotSegmentationResult);
}

uint64_t static SNKShotFeaturizer.featurizeFiles(_:hallucinatorModelURL:queue:completionHandler:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t result;
  _QWORD v15[6];

  v8 = (void *)objc_opt_self();
  sub_1D42CB348();
  v9 = (void *)sub_1D42CB6AC();
  v10 = (void *)sub_1D4519B28();
  v11 = sub_1D42B6F40();
  *(_QWORD *)(v11 + 16) = a2;
  *(_QWORD *)(v11 + 24) = a3;
  v15[4] = sub_1D42C8818;
  v15[5] = v11;
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 1107296256;
  v15[2] = sub_1D42C54A0;
  v15[3] = &unk_1E97B33D8;
  v12 = _Block_copy(v15);
  swift_retain();
  swift_release();
  v13 = objc_msgSend(v8, sel_featurizeFiles_hallucinatorModelURL_queue_completionHandler_, v9, v10, a1, v12);
  sub_1D42CB8C4();

  result = swift_getObjectType();
  a4[3] = result;
  *a4 = a1;
  return result;
}

void sub_1D42C53D8(uint64_t a1, uint64_t a2, void (*a3)(void *, uint64_t))
{
  void *v5;
  void *v6;
  _BYTE v7[24];
  uint64_t v8;

  sub_1D42B28B4(a1, (uint64_t)v7);
  if (!v8)
  {
    sub_1D42B5464((uint64_t)v7);
    goto LABEL_6;
  }
  sub_1D42CA5D0(0, (unint64_t *)&qword_1EFE404C0);
  if (!swift_dynamicCast())
  {
LABEL_6:
    v5 = 0;
    goto LABEL_7;
  }
  type metadata accessor for SNKShotFeaturizationResult();
  v5 = (void *)swift_dynamicCastClass();
  if (!v5)

LABEL_7:
  a3(v5, a2);

}

uint64_t sub_1D42C54A0(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(__int128 *, void *);
  id v6;
  __int128 v8;
  __int128 v9;

  v5 = *(void (**)(__int128 *, void *))(a1 + 32);
  if (a2)
  {
    *((_QWORD *)&v9 + 1) = swift_getObjectType();
    *(_QWORD *)&v8 = a2;
  }
  else
  {
    v8 = 0u;
    v9 = 0u;
  }
  swift_retain();
  swift_unknownObjectRetain();
  v6 = a3;
  v5(&v8, a3);
  swift_release();

  return sub_1D42B5464((uint64_t)&v8);
}

uint64_t static SNKShotFeaturizer.featurizeFiles(_:hallucinatorModelURL:queue:resultHandler:completionHandler:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, _QWORD *a6@<X8>)
{
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t aBlock;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v11 = (void *)objc_opt_self();
  sub_1D42CB348();
  v12 = (void *)sub_1D42CB6AC();
  v13 = (void *)sub_1D4519B28();
  v14 = sub_1D42B6F40();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  aBlock = MEMORY[0x1E0C809B0];
  v16 = sub_1D42CBA20((uint64_t)sub_1D42C5864, v21, a1, MEMORY[0x1E0C809B0], 1107296256, v26, v28);
  swift_retain();
  swift_release();
  v17 = sub_1D42B6F40();
  *(_QWORD *)(v17 + 16) = a4;
  *(_QWORD *)(v17 + 24) = a5;
  v18 = sub_1D42CBA20((uint64_t)sub_1D42C54A0, v22, v24, aBlock, 1107296256, v27, v29);
  swift_retain();
  swift_release();
  v19 = objc_msgSend(v11, sel_featurizeFiles_hallucinatorModelURL_queue_resultHandler_completionHandler_, v12, v13, v25, v16, v18);
  sub_1D42CB8C4();
  _Block_release(v16);

  result = swift_getObjectType();
  a6[3] = result;
  *a6 = aBlock;
  return result;
}

void sub_1D42C57F8(uint64_t a1, void (*a2)())
{
  void *v3;
  _BYTE v4[32];

  sub_1D42B294C(a1, (uint64_t)v4);
  type metadata accessor for SNKShotFeaturizationStreamResult();
  swift_dynamicCast();
  a2();

}

uint64_t sub_1D42C5864(uint64_t a1, uint64_t a2)
{
  void (*v3)(_QWORD *);
  _QWORD v5[4];

  v3 = *(void (**)(_QWORD *))(a1 + 32);
  v5[3] = swift_getObjectType();
  v5[0] = a2;
  swift_retain();
  swift_unknownObjectRetain();
  v3(v5);
  swift_release();
  return sub_1D42B5400((uint64_t)v5);
}

void sub_1D42C58CC(uint64_t a1, uint64_t a2, void (*a3)(void *, uint64_t))
{
  void *v5;
  void *v6;
  _BYTE v7[24];
  uint64_t v8;

  sub_1D42B28B4(a1, (uint64_t)v7);
  if (v8)
  {
    type metadata accessor for SNKShotFeaturizationStreamCompletion();
    if (swift_dynamicCast())
      v5 = v6;
    else
      v5 = 0;
  }
  else
  {
    sub_1D42B5464((uint64_t)v7);
    v5 = 0;
  }
  a3(v5, a2);

}

void sub_1D42C5AD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void *v6;

  if (a2)
    v5 = sub_1D4519A98();
  else
    v5 = 0;
  v6 = (void *)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
  sub_1D42CB120(v6);
}

uint64_t static SNKShotFeaturizer.performSegmentationRequest(_:)(uint64_t a1)
{
  id v1;
  id v2;
  void *v4;
  uint64_t v5;
  _OWORD v6[2];
  __int128 v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  *(_QWORD *)&v6[0] = 0;
  v1 = objc_msgSend((id)objc_opt_self(), sel_performSegmentationRequest_error_, a1, v6);
  v2 = *(id *)&v6[0];
  if (v1)
  {
    sub_1D451B208();
    swift_unknownObjectRelease();
    sub_1D42B293C(&v7, v6);
    type metadata accessor for SNKShotSegmentationResult();
    swift_dynamicCast();
    return v5;
  }
  else
  {
    v4 = v2;
    sub_1D4519AA4();

    return swift_willThrow();
  }
}

uint64_t static SNKShotFeaturizer.featurize(urls:hallucinatorModelURL:resultHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[13] = a3;
  v4[14] = a4;
  v4[11] = a1;
  v4[12] = a2;
  return swift_task_switch();
}

uint64_t sub_1D42C5CC8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v0[13];
  v1 = v0[14];
  v4 = v0[11];
  v3 = v0[12];
  v0[7] = v0 + 10;
  v0[2] = v0;
  v0[3] = sub_1D42C5D40;
  v5 = swift_continuation_init();
  sub_1D42C5DB0(v5, v2, v1, v4, v3);
  return swift_continuation_await();
}

uint64_t sub_1D42C5D40()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if (!*(_QWORD *)(v1 + 48))
    return (*(uint64_t (**)(_QWORD))(v1 + 8))(*(_QWORD *)(v1 + 80));
  swift_willThrow();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1D42C5DB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  _QWORD v23[2];
  id v24;
  uint64_t v25;
  uint64_t aBlock;
  uint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  _QWORD *v31;

  v23[1] = a5;
  v25 = a1;
  v7 = sub_1D451A458();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 0;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = v11;
  v12[3] = a2;
  v12[4] = a3;
  v24 = (id)objc_opt_self();
  sub_1D4519BC4();
  swift_retain();
  swift_retain();
  v13 = sub_1D451A908();
  v14 = (void *)sub_1D4519B28();
  sub_1D42CA5D0(0, (unint64_t *)&qword_1EFE47A20);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF540], v7);
  v15 = (void *)sub_1D451AFE0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v30 = sub_1D42CA5C4;
  v31 = v12;
  v16 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v27 = 1107296256;
  v28 = sub_1D42C5864;
  v29 = &unk_1E97B4788;
  v17 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v25;
  v30 = sub_1D42CA614;
  v31 = (_QWORD *)v18;
  aBlock = v16;
  v27 = 1107296256;
  v28 = sub_1D42C54A0;
  v29 = &unk_1E97B47D8;
  v19 = _Block_copy(&aBlock);
  swift_release();
  v20 = (void *)v13;
  v21 = objc_msgSend(v24, sel_featurizeFiles_hallucinatorModelURL_queue_resultHandler_completionHandler_, v13, v14, v15, v17, v19);
  swift_release();
  _Block_release(v19);
  _Block_release(v17);

  swift_beginAccess();
  *(_QWORD *)(v11 + 16) = v21;
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_1D42C6054(uint64_t a1, uint64_t a2, void (*a3)())
{
  void *v6;
  void *v7;
  _BYTE v8[32];

  if ((sub_1D451AB54() & 1) != 0)
  {
    swift_beginAccess();
    v6 = *(void **)(a2 + 16);
    if (v6)
      objc_msgSend(v6, sel_cancel);
  }
  else
  {
    sub_1D42B294C(a1, (uint64_t)v8);
    type metadata accessor for SNKShotFeaturizationStreamResult();
    swift_dynamicCast();
    a3();

  }
}

uint64_t sub_1D42C6100(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t result;
  _QWORD *v7;
  id v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  _OWORD v12[2];

  result = sub_1D451AB54();
  if ((result & 1) == 0)
  {
    sub_1D42B28B4(a1, (uint64_t)&v10);
    if (v11)
    {
      sub_1D42B293C(&v10, v12);
      sub_1D42B294C((uint64_t)v12, (uint64_t)&v10);
      type metadata accessor for SNKShotFeaturizationStreamCompletion();
      swift_dynamicCast();
      **(_QWORD **)(*(_QWORD *)(a3 + 64) + 40) = v9;
      swift_continuation_throwingResume();
      return sub_1D42B5400((uint64_t)v12);
    }
    else
    {
      result = sub_1D42B5464((uint64_t)&v10);
      if (a2)
      {
        sub_1D42B28FC(&qword_1EFE49BB0);
        swift_allocError();
        *v7 = a2;
        v8 = a2;
        return swift_continuation_throwingResumeWithError();
      }
      else
      {
        __break(1u);
      }
    }
  }
  return result;
}

void SNKShotFeaturizer.init()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for SNKShotFeaturizer();
  sub_1D42CB364((uint64_t)v7.super_class, sel_init, v1, v2, v3, v4, v5, v6, v7);
  sub_1D42B6F28();
}

id SNKShotFeaturizer.__deallocating_deinit(uint64_t a1)
{
  return sub_1D42C00E0(a1, type metadata accessor for SNKShotFeaturizer);
}

void static SNKShotFeaturizer.writeToFile(_:segmentationResult:)()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  id v13[4];

  v13[3] = *(id *)MEMORY[0x1E0C80C00];
  v0 = (void *)sub_1D42C48D4();
  v2 = v1;
  v4 = v3;
  v5 = (void *)objc_opt_self();
  v13[1] = v2;
  v13[2] = v4;
  v6 = v0;
  sub_1D42CB7B8();
  v13[0] = 0;
  v7 = objc_msgSend(v5, sel_dataWithJSONObject_options_error_, sub_1D451B88C(), 0, v13);
  swift_unknownObjectRelease();
  v8 = v13[0];
  if (v7)
  {
    v9 = sub_1D4519C54();
    v11 = v10;

    sub_1D4519C78();
    sub_1D42B5420(v9, v11);
  }
  else
  {
    v12 = v8;
    sub_1D4519AA4();

    swift_willThrow();
  }
  swift_bridgeObjectRelease();

}

uint64_t static SNKShotFeaturizer.writeToFile(_:featurizationResult:)()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  void *v8;
  id v10[8];
  _QWORD v11[4];
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  sub_1D42C20F8(v11);
  v0 = (void *)objc_opt_self();
  v1 = v12;
  v10[1] = (id)v11[1];
  v10[2] = (id)v11[2];
  v10[3] = (id)v11[3];
  v10[4] = v12;
  v10[5] = v13;
  v10[6] = v14;
  v10[7] = v15;
  sub_1D42CB7B8();
  sub_1D42CB6CC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v2 = v1;
  v10[0] = 0;
  v3 = objc_msgSend(v0, sel_dataWithJSONObject_options_error_, sub_1D451B88C(), 0, v10);
  swift_unknownObjectRelease();
  v4 = v10[0];
  if (v3)
  {
    v5 = sub_1D4519C54();
    v7 = v6;

    sub_1D4519C78();
    sub_1D42B5420(v5, v7);
  }
  else
  {
    v8 = v4;
    sub_1D4519AA4();

    swift_willThrow();
  }

  sub_1D42CB5C8();
  swift_bridgeObjectRelease();
  sub_1D42B7204();
  return swift_bridgeObjectRelease();
}

char *sub_1D42C657C(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1D42CB03C();
    result = (char *)sub_1D42CB024();
    __break(1u);
  }
  else if (a3 != result || &result[40 * a2] <= a3)
  {
    return (char *)sub_1D42CB014(a3, result);
  }
  return result;
}

char *sub_1D42C65D8(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1D42CB03C();
    result = (char *)sub_1D42CB024();
    __break(1u);
  }
  else if (a3 != result || &result[32 * a2] <= a3)
  {
    return (char *)sub_1D42CB014(a3, result);
  }
  return result;
}

char *sub_1D42C6634(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1D42CB03C();
    result = (char *)sub_1D42CB024();
    __break(1u);
  }
  else if (a3 != result || &result[4 * a2] <= a3)
  {
    return (char *)sub_1D42CB014(a3, result);
  }
  return result;
}

uint64_t sub_1D42C6688(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if (a2 < 0)
  {
    result = sub_1D451B5D4();
    __break(1u);
  }
  else if (a3 < a1
         || (result = type metadata accessor for KShotSegment(0),
             a1 + *(_QWORD *)(*(_QWORD *)(result - 8) + 72) * a2 <= a3))
  {
    type metadata accessor for KShotSegment(0);
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (a3 != a1)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_1D42C6784(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1D451B5D4();
    __break(1u);
  }
  else if (__dst != __src || &__src[56 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 56 * a2);
  }
  return __src;
}

char *sub_1D42C6810(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1D451B5D4();
    __break(1u);
  }
  else if (__dst != __src || &__src[24 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 24 * a2);
  }
  return __src;
}

void sub_1D42C689C(uint64_t a1, uint64_t a2)
{
  void *v2;
  const void *v3;
  unint64_t v4;
  char v5;
  BOOL v6;

  if (a2 < 0)
  {
    sub_1D42CB03C();
    sub_1D42CB024();
    __break(1u);
  }
  else
  {
    sub_1D42CB8D0();
    if (v5)
      v6 = v4 > (unint64_t)v2;
    else
      v6 = 0;
    if (!v6)
      sub_1D42CB014(v2, v3);
  }
}

char *sub_1D42C68F4(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1D42CB03C();
    result = (char *)sub_1D42CB024();
    __break(1u);
  }
  else if (a3 != result || &result[16 * a2] <= a3)
  {
    return (char *)sub_1D42CB014(a3, result);
  }
  return result;
}

char *sub_1D42C6948(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1D42CB03C();
    result = (char *)sub_1D42CB024();
    __break(1u);
  }
  else if (a3 != result || &result[48 * a2] <= a3)
  {
    return (char *)sub_1D42CB014(a3, result);
  }
  return result;
}

char *sub_1D42C69A4(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1D451B5D4();
    __break(1u);
  }
  else if (__dst != __src || &__src[52 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 52 * a2);
  }
  return __src;
}

char *sub_1D42C6A2C(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1D42CB03C();
    result = (char *)sub_1D42CB024();
    __break(1u);
  }
  else if (a3 != result || &result[28 * a2] <= a3)
  {
    return (char *)sub_1D42CB2F8(a3, result, 28 * a2);
  }
  return result;
}

char *sub_1D42C6A94(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1D451B5D4();
    __break(1u);
  }
  else if (__dst != __src || &__src[40 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 40 * a2);
  }
  return __src;
}

char *sub_1D42C6B24(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1D42CB03C();
    result = (char *)sub_1D42CB024();
    __break(1u);
  }
  else if (a3 != result || &result[72 * a2] <= a3)
  {
    return (char *)sub_1D42CB014(a3, result);
  }
  return result;
}

char *sub_1D42C6B7C(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1D42CB03C();
    result = (char *)sub_1D42CB024();
    __break(1u);
  }
  else if (a3 != result || &result[8 * a2] <= a3)
  {
    return (char *)sub_1D42CB014(a3, result);
  }
  return result;
}

char *sub_1D42C6BD0(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1D451B5D4();
    __break(1u);
  }
  else if (__dst != __src || &__src[8 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 8 * a2);
  }
  return __src;
}

char *sub_1D42C6C54(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1D451B5D4();
    __break(1u);
  }
  else if (__dst != __src || &__src[32 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 32 * a2);
  }
  return __src;
}

unint64_t sub_1D42C6CD8(unint64_t result, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    sub_1D42CB03C();
    result = sub_1D42CB024();
    __break(1u);
  }
  else if (a3 >= result && result + 24 * a2 > a3)
  {
    if (a3 != result)
      return swift_arrayInitWithTakeBackToFront();
  }
  else
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  return result;
}

char *sub_1D42C6D5C(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1D451B5D4();
    __break(1u);
  }
  else if (__dst != __src || &__src[4 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 4 * a2);
  }
  return __src;
}

char *sub_1D42C6DE0(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1D451B5D4();
    __break(1u);
  }
  else if (__dst != __src || &__src[16 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 16 * a2);
  }
  return __src;
}

char *sub_1D42C6E68(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1D451B5D4();
    __break(1u);
  }
  else if (__dst != __src || &__src[48 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 48 * a2);
  }
  return __src;
}

void sub_1D42C6EF0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    sub_1D42CB03C();
    sub_1D42CB024();
    __break(1u);
  }
  else if (a3 < a1 || a1 + *(_QWORD *)(*(_QWORD *)(sub_1D42B28FC((uint64_t *)&unk_1EFE51980) - 8) + 72) * a2 <= a3)
  {
    sub_1D42B28FC((uint64_t *)&unk_1EFE51980);
    sub_1D42CBA00();
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (a3 == a1)
  {
    sub_1D42CB7D0();
  }
  else
  {
    sub_1D42CBA00();
    swift_arrayInitWithTakeBackToFront();
  }
}

char *sub_1D42C6FAC(char *result, size_t a2, char *a3)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    sub_1D42CB03C();
    result = (char *)sub_1D42CB024();
    __break(1u);
  }
  else if (a3 != result || &result[a2] <= a3)
  {
    return (char *)sub_1D42CB2F8(a3, result, a2);
  }
  return result;
}

char *sub_1D42C7004(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1D451B5D4();
    __break(1u);
  }
  else if (__dst != __src || &__src[24 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 24 * a2);
  }
  return __src;
}

char *sub_1D42C708C(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1D42CB03C();
    result = (char *)sub_1D42CB024();
    __break(1u);
  }
  else if (a3 != result || &result[160 * a2] <= a3)
  {
    return (char *)sub_1D42CB014(a3, result);
  }
  return result;
}

void sub_1D42C70E8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C81F8();
  *v0 = v1;
}

void sub_1D42C711C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C84A0();
  *v0 = v1;
}

size_t sub_1D42C7150(size_t a1, int64_t a2, char a3)
{
  uint64_t *v3;
  size_t result;

  result = sub_1D42C7C6C(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_1D42C716C(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = sub_1D42C7DAC(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

void sub_1D42C7188()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C7EB0();
  *v0 = v1;
}

void sub_1D42C71BC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C7EB0();
  *v0 = v1;
}

void sub_1D42C71F0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C8368();
  *v0 = v1;
}

void sub_1D42C7224()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C82B0();
  *v0 = v1;
}

void sub_1D42C7258()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C8554();
  *v0 = v1;
}

char *sub_1D42C728C(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = sub_1D42C7F40(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

char *sub_1D42C72A8(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = sub_1D42C8028(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

char *sub_1D42C72C4(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = sub_1D42C8110(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

void sub_1D42C72E0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C7EB0();
  *v0 = v1;
}

void sub_1D42C7314()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C81F8();
  *v0 = v1;
}

void sub_1D42C7348()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C85E4();
  *v0 = v1;
}

void sub_1D42C737C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C81F8();
  *v0 = v1;
}

void sub_1D42C73B0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C82B0();
  *v0 = v1;
}

void sub_1D42C73E4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C81F8();
  *v0 = v1;
}

void sub_1D42C7418()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C7EB0();
  *v0 = v1;
}

void sub_1D42C744C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C7EB0();
  *v0 = v1;
}

void sub_1D42C7480()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C7EB0();
  *v0 = v1;
}

void sub_1D42C74B4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C82B0();
  *v0 = v1;
}

void sub_1D42C74E8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C8368();
  *v0 = v1;
}

void sub_1D42C751C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C81F8();
  *v0 = v1;
}

void sub_1D42C7550()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C81F8();
  *v0 = v1;
}

void sub_1D42C7584()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C81F8();
  *v0 = v1;
}

void sub_1D42C75B8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C7EB0();
  *v0 = v1;
}

void sub_1D42C75EC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C82B0();
  *v0 = v1;
}

void sub_1D42C7620()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C7EB0();
  *v0 = v1;
}

void sub_1D42C7654()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C82B0();
  *v0 = v1;
}

void sub_1D42C7688()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C8404();
  *v0 = v1;
}

void sub_1D42C76BC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C8404();
  *v0 = v1;
}

void sub_1D42C76F0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C82B0();
  *v0 = v1;
}

void sub_1D42C7724()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C8368();
  *v0 = v1;
}

void sub_1D42C7758()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C81F8();
  *v0 = v1;
}

void sub_1D42C778C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C84A0();
  *v0 = v1;
}

void sub_1D42C77C0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C7EB0();
  *v0 = v1;
}

void sub_1D42C77F4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C84A0();
  *v0 = v1;
}

void sub_1D42C7828()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C82B0();
  *v0 = v1;
}

void sub_1D42C785C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C8554();
  *v0 = v1;
}

void sub_1D42C7890()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C82B0();
  *v0 = v1;
}

void sub_1D42C78C4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C8368();
  *v0 = v1;
}

void sub_1D42C78F8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C8368();
  *v0 = v1;
}

void sub_1D42C792C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C7EB0();
  *v0 = v1;
}

void sub_1D42C7960()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C8368();
  *v0 = v1;
}

void sub_1D42C7994()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C7EB0();
  *v0 = v1;
}

void sub_1D42C79C8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C7EB0();
  *v0 = v1;
}

void sub_1D42C79FC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C81F8();
  *v0 = v1;
}

void sub_1D42C7A30()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C7EB0();
  *v0 = v1;
}

void sub_1D42C7A64()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C81F8();
  *v0 = v1;
}

void sub_1D42C7A98()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C7EB0();
  *v0 = v1;
}

void sub_1D42C7ACC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C81F8();
  *v0 = v1;
}

void sub_1D42C7B00()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C8368();
  *v0 = v1;
}

void sub_1D42C7B34()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C82B0();
  *v0 = v1;
}

void sub_1D42C7B68()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C84A0();
  *v0 = v1;
}

void sub_1D42C7B9C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C85E4();
  *v0 = v1;
}

void sub_1D42C7BD0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C7EB0();
  *v0 = v1;
}

void sub_1D42C7C04()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C7EB0();
  *v0 = v1;
}

void sub_1D42C7C38()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42C8368();
  *v0 = v1;
}

size_t sub_1D42C7C6C(size_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_25:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1D42B28FC(&qword_1EFE49BB8);
  v10 = *(_QWORD *)(type metadata accessor for KShotSegment(0) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  result = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_24;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  v15 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for KShotSegment(0) - 8) + 80);
  v16 = (v15 + 32) & ~v15;
  v17 = (unint64_t)v13 + v16;
  v18 = a4 + v16;
  if ((v5 & 1) != 0)
  {
    sub_1D42C6688(v18, v8, v17);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1D44AB37C(v18, v8, v17);
  }
  swift_release();
  return (size_t)v13;
}

char *sub_1D42C7DAC(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_1D42B28FC(&qword_1EFE49B38);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_1D42C6784(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1D44AB428((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

void sub_1D42C7E94()
{
  sub_1D42C7EB0();
}

void sub_1D42C7EB0()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  _QWORD *v13;
  uint64_t v14;

  sub_1D42CB914();
  sub_1D42CB054();
  if ((v5 & 1) != 0)
  {
    sub_1D42CB074();
    if (v6 != v7)
    {
      sub_1D42CB1D8();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_1D42CB0B4();
    }
  }
  sub_1D42CB0A4();
  if (v4)
  {
    sub_1D42CB1D0(v8, v9, v10, v11, v12);
    v13 = (_QWORD *)sub_1D42B6F40();
    sub_1D42CB168(v13);
  }
  v14 = sub_1D42CB094();
  if ((v3 & 1) != 0)
  {
    v2(v14);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v14);
  }
  sub_1D42BE93C();
  sub_1D42CB0F8();
}

char *sub_1D42C7F40(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_1D42B28FC((uint64_t *)&unk_1EFE49880);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 52);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_1D42C69A4(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1D44AB674(v13, v8, v12);
  }
  swift_release();
  return v10;
}

char *sub_1D42C8028(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_1D42B28FC((uint64_t *)&unk_1EFE49890);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 28);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_1D42C6A2C(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1D44AB70C(v13, v8, v12);
  }
  swift_release();
  return v10;
}

char *sub_1D42C8110(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_1D42B28FC((uint64_t *)&unk_1EFE498B0);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_1D42C6948(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1D44AB7A4((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

void sub_1D42C81F8()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  const void *v13;
  size_t v14;
  uint64_t v15;

  sub_1D42CB054();
  if ((v5 & 1) != 0)
  {
    sub_1D42CB074();
    if (v6 != v7)
    {
      sub_1D42CB1D8();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_1D42CB0B4();
    }
  }
  sub_1D42CB0A4();
  if (v4)
  {
    sub_1D42CB1D0(v8, v9, v10, v11, v12);
    v13 = (const void *)sub_1D42B6F40();
    v14 = j__malloc_size(v13);
    sub_1D42CB1A4(v14 - 32);
  }
  v15 = sub_1D42CB094();
  if ((v3 & 1) != 0)
  {
    v2(v15);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v15);
  }
  sub_1D42BE93C();
  sub_1D42CB084();
}

void sub_1D42C8294()
{
  sub_1D42C82B0();
}

void sub_1D42C82B0()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  const void *v13;
  size_t v14;
  uint64_t v15;

  sub_1D42CB054();
  if ((v5 & 1) != 0)
  {
    sub_1D42CB074();
    if (v6 != v7)
    {
      sub_1D42CB1D8();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_1D42CB0B4();
    }
  }
  sub_1D42CB0A4();
  if (v4)
  {
    sub_1D42CB1D0(v8, v9, v10, v11, v12);
    v13 = (const void *)sub_1D42B6F40();
    v14 = j__malloc_size(v13);
    sub_1D42CB1A4(v14 - 32);
  }
  v15 = sub_1D42CB094();
  if ((v3 & 1) != 0)
  {
    v2(v15);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v15);
  }
  sub_1D42BE93C();
  sub_1D42CB084();
}

void sub_1D42C834C()
{
  sub_1D42C82B0();
}

void sub_1D42C8368()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  const void *v13;
  size_t v14;
  uint64_t v15;

  sub_1D42CB054();
  if ((v5 & 1) != 0)
  {
    sub_1D42CB074();
    if (v6 != v7)
    {
      sub_1D42CB1D8();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_1D42CB0B4();
    }
  }
  sub_1D42CB0A4();
  if (v4)
  {
    sub_1D42CB1D0(v8, v9, v10, v11, v12);
    v13 = (const void *)sub_1D42B6F40();
    v14 = j__malloc_size(v13);
    sub_1D42CB1A4(v14 - 32);
  }
  v15 = sub_1D42CB094();
  if ((v3 & 1) != 0)
  {
    v2(v15);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v15);
  }
  sub_1D42BE93C();
  sub_1D42CB084();
}

void sub_1D42C8404()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  const void *v13;
  size_t v14;
  uint64_t v15;

  sub_1D42CB054();
  if ((v5 & 1) != 0)
  {
    sub_1D42CB074();
    if (v6 != v7)
    {
      sub_1D42CB1D8();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_1D42CB0B4();
    }
  }
  sub_1D42CB0A4();
  if (v4)
  {
    sub_1D42CB1D0(v8, v9, v10, v11, v12);
    v13 = (const void *)sub_1D42B6F40();
    v14 = j__malloc_size(v13);
    sub_1D42CB1A4(v14 - 32);
  }
  v15 = sub_1D42CB094();
  if ((v3 & 1) != 0)
  {
    v2(v15);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v15);
  }
  sub_1D42BE93C();
  sub_1D42CB084();
}

void sub_1D42C84A0()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v16;

  sub_1D42CB054();
  if ((v6 & 1) != 0)
  {
    sub_1D42CB074();
    if (v7 != v8)
    {
      sub_1D42CB1D8();
      if (v7)
      {
        __break(1u);
        return;
      }
      sub_1D42CB0B4();
    }
  }
  sub_1D42CB0A4();
  if (v5)
  {
    sub_1D42CB1D0(v9, v10, v11, v12, v13);
    v14 = (_QWORD *)sub_1D42B6F40();
    v15 = j__malloc_size(v14);
    v14[2] = v4;
    v14[3] = 2 * v15 - 64;
  }
  v16 = sub_1D42CB094();
  if ((v3 & 1) != 0)
  {
    v2(v16);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v16);
  }
  sub_1D42BE93C();
  sub_1D42CB084();
}

void sub_1D42C8538()
{
  sub_1D42C7EB0();
}

void sub_1D42C8554()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  _QWORD *v13;
  uint64_t v14;

  sub_1D42CB914();
  sub_1D42CB054();
  if ((v5 & 1) != 0)
  {
    sub_1D42CB074();
    if (v6 != v7)
    {
      sub_1D42CB1D8();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_1D42CB0B4();
    }
  }
  sub_1D42CB0A4();
  if (v4)
  {
    sub_1D42CB1D0(v8, v9, v10, v11, v12);
    v13 = (_QWORD *)sub_1D42B6F40();
    sub_1D42CB168(v13);
  }
  v14 = sub_1D42CB094();
  if ((v3 & 1) != 0)
  {
    v2(v14);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v14);
  }
  sub_1D42BE93C();
  sub_1D42CB0F8();
}

void sub_1D42C85E4()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  _QWORD *v13;
  uint64_t v14;

  sub_1D42CB914();
  sub_1D42CB054();
  if ((v5 & 1) != 0)
  {
    sub_1D42CB074();
    if (v6 != v7)
    {
      sub_1D42CB1D8();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_1D42CB0B4();
    }
  }
  sub_1D42CB0A4();
  if (v4)
  {
    sub_1D42CB1D0(v8, v9, v10, v11, v12);
    v13 = (_QWORD *)sub_1D42B6F40();
    sub_1D42CB168(v13);
  }
  v14 = sub_1D42CB094();
  if ((v3 & 1) != 0)
  {
    v2(v14);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v14);
  }
  sub_1D42BE93C();
  sub_1D42CB0F8();
}

void sub_1D42C8674()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_1D42CB30C();
  v2 = sub_1D42CB494((uint64_t)v1);
  sub_1D42C8734(v2, v3);
  *(_QWORD *)(v0 + 32) = v4;
  sub_1D42CB15C();
}

void sub_1D42C86A8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_1D42CB30C();
  v2 = sub_1D42CB494((uint64_t)v1);
  sub_1D42C9F08(v2, v3);
  *(_QWORD *)(v0 + 32) = v4;
  sub_1D42CB15C();
}

void sub_1D42C86D8()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_1D42CB30C();
  v2 = (_QWORD *)sub_1D42CB494((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = sub_1D42CA444(v2, v3, v4);
  sub_1D42CB15C();
}

void sub_1D42C8708(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void sub_1D42C8734(uint64_t a1, uint64_t a2)
{
  id *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1D42CB65C(a1, a2);
  sub_1D42D2E5C(v6, v7, v8);
  if (v5)
    sub_1D42CBA38();
  *v2 = sub_1D42CB2A4(v3 + 8 * v4);
  sub_1D42CB15C();
}

uint64_t type metadata accessor for SNKShotSegmentationRequest()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for SNKShotSegmentationResult()
{
  return objc_opt_self();
}

uint64_t sub_1D42C87B8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for KShotSegment(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D42C87F4()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1D42C8818(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1D42C53D8(a1, a2, *(void (**)(void *, uint64_t))(v2 + 16));
}

uint64_t sub_1D42C8820(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D42C8830()
{
  return swift_release();
}

void sub_1D42C8838(uint64_t a1)
{
  uint64_t v1;

  sub_1D42C57F8(a1, *(void (**)())(v1 + 16));
}

void sub_1D42C8840(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1D42C58CC(a1, a2, *(void (**)(void *, uint64_t))(v2 + 16));
}

uint64_t type metadata accessor for SNKShotFeaturizer()
{
  return objc_opt_self();
}

unint64_t sub_1D42C886C()
{
  unint64_t result;

  result = qword_1EFE497E0;
  if (!qword_1EFE497E0)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for SNKShotDatasetType, &type metadata for SNKShotDatasetType);
    atomic_store(result, (unint64_t *)&qword_1EFE497E0);
  }
  return result;
}

unint64_t sub_1D42C88AC()
{
  unint64_t result;

  result = qword_1EFE497E8;
  if (!qword_1EFE497E8)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for SNKShotLabel, &type metadata for SNKShotLabel);
    atomic_store(result, (unint64_t *)&qword_1EFE497E8);
  }
  return result;
}

void sub_1D42C88E8(uint64_t a1@<X8>)
{
  sub_1D42BFAC0(a1);
  sub_1D42B6E24();
}

void sub_1D42C8904(double *a1)
{
  sub_1D42BFB74(a1);
  sub_1D42B6E24();
}

void sub_1D42C8920(uint64_t a1@<X8>)
{
  sub_1D42BFD40(a1);
  sub_1D42B6E24();
}

void sub_1D42C8940()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42CB12C();
  sub_1D42C0860();
  *v0 = v1;
  sub_1D42B6E24();
}

void sub_1D42C8964()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1D42CB12C();
  sub_1D42C1234(v1, v2, v3, v4, v5, v6, v7, v8);
  *v0 = v9;
  sub_1D42B6E24();
}

void sub_1D42C8988()
{
  sub_1D42C4060();
}

void sub_1D42C89A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D42CB12C();
  sub_1D42C23C4(v1, v2);
  *v0 = v3;
  sub_1D42B6E24();
}

void sub_1D42C89CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D42CB12C();
  sub_1D42C2604(v1, v2);
  *v0 = v3;
  sub_1D42B6E24();
}

void sub_1D42C89F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D42CB12C();
  sub_1D42C2850(v1, v2);
  *v0 = v3;
  sub_1D42B6E24();
}

void sub_1D42C8A14()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D42CB12C();
  sub_1D42C2A34(v1, v2);
  *v0 = v3;
  sub_1D42B6E24();
}

void sub_1D42C8A38()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1D42CB12C();
  *v0 = sub_1D42C2C48(v1, v2, v3, v4, v5, v6, v7, v8);
  sub_1D42B6E24();
}

void sub_1D42C8A5C()
{
  sub_1D42C4060();
}

void sub_1D42C8A7C()
{
  uint64_t *v0;

  sub_1D42CB12C();
  *v0 = sub_1D42C3B30();
  sub_1D42B6E24();
}

void sub_1D42C8AA0()
{
  _DWORD *v0;
  int v1;

  sub_1D42CB12C();
  sub_1D42C3CA0();
  *v0 = v1;
  sub_1D42B6E24();
}

void sub_1D42C8AC0(float *a1)
{
  sub_1D42C3CE8(*a1);
  sub_1D42B6E24();
}

void sub_1D42C8AE0()
{
  _DWORD *v0;
  int v1;

  sub_1D42CB12C();
  sub_1D42C3D90();
  *v0 = v1;
  sub_1D42B6E24();
}

void sub_1D42C8B00(float *a1)
{
  sub_1D42C3DD8(*a1);
  sub_1D42B6E24();
}

void sub_1D42C8B20()
{
  sub_1D42C4060();
}

void sub_1D42C8B40()
{
  sub_1D42C4060();
}

void sub_1D42C8B60()
{
  _DWORD *v0;
  int v1;

  sub_1D42CB12C();
  sub_1D42C4174();
  *v0 = v1;
  sub_1D42B6E24();
}

void sub_1D42C8B80(float *a1)
{
  sub_1D42C41BC(*a1);
  sub_1D42B6E24();
}

void sub_1D42C8BA0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1D42CB12C();
  sub_1D42C4BD4();
  *v0 = v1;
  sub_1D42B6E24();
}

void sub_1D42C8BC4()
{
  uint64_t *v0;

  sub_1D42CB12C();
  *v0 = sub_1D42C4D54();
  sub_1D42B6E24();
}

void sub_1D42C8BE8()
{
  id *v0;

  sub_1D42CB12C();
  *v0 = sub_1D42C5118();
  sub_1D42B6E24();
}

void type metadata accessor for SNKShotDatasetType()
{
  sub_1D42CB35C();
}

void type metadata accessor for SNKShotLabel()
{
  sub_1D42CB35C();
}

uint64_t method lookup function for SNKShotLabelObjC()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1D42C8C38()
{
  return type metadata accessor for SNKShotSegment(0);
}

uint64_t sub_1D42C8C40()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for KShotSegment(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for SNKShotSegment()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SNKShotSegment.timeRange.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of SNKShotSegment.timeRange.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD *);
  _QWORD v5[2];
  __int128 v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(uint64_t (**)(_QWORD *))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x80);
  v5[0] = *(_QWORD *)a1;
  v5[1] = *(_QWORD *)(a1 + 8);
  v6 = *(_OWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = v2;
  return v3(v5);
}

uint64_t dispatch thunk of SNKShotSegment.timeRange.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of SNKShotSegment.url.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of SNKShotSegment.url.setter()
{
  return sub_1D42CB508(*MEMORY[0x1E0DEEDD8]);
}

uint64_t dispatch thunk of SNKShotSegment.url.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t method lookup function for SNKShotFeaturizationStreamResult()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for SNKShotFeaturizationStreamCompletion()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SNKShotFeaturizationStreamCompletion.inferenceWindowSize.getter()
{
  uint64_t *v0;

  return sub_1D42CB1FC(*v0);
}

uint64_t dispatch thunk of SNKShotFeaturizationStreamCompletion.inferenceWindowSize.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t method lookup function for SNKShotFeaturizationResult()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SNKShotFeaturizationResult.validationDataLabels.getter()
{
  uint64_t *v0;

  return sub_1D42CB4E4(*v0);
}

uint64_t dispatch thunk of SNKShotFeaturizationResult.validationDataLabels.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of SNKShotFeaturizationResult.validationDataLabels.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of SNKShotFeaturizationResult.exemplar.getter()
{
  uint64_t *v0;

  return sub_1D42CB4C0(*v0);
}

uint64_t dispatch thunk of SNKShotFeaturizationResult.exemplar.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of SNKShotFeaturizationResult.exemplar.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of SNKShotFeaturizationResult.inferenceWindowSize.getter()
{
  uint64_t *v0;

  return sub_1D42CB4CC(*v0);
}

uint64_t dispatch thunk of SNKShotFeaturizationResult.inferenceWindowSize.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of SNKShotFeaturizationResult.inferenceWindowSize.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t method lookup function for SNKShotSegmentationRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SNKShotSegmentationRequest.backgroundEnergyPercentile.getter()
{
  uint64_t *v0;

  return sub_1D42CB1FC(*v0);
}

uint64_t dispatch thunk of SNKShotSegmentationRequest.backgroundEnergyPercentile.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of SNKShotSegmentationRequest.foregroundEnergyPercentile.getter()
{
  uint64_t *v0;

  return sub_1D42CB4D8(*v0);
}

uint64_t dispatch thunk of SNKShotSegmentationRequest.foregroundEnergyPercentile.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of SNKShotSegmentationRequest.hangoverDuration.getter()
{
  uint64_t *v0;

  return sub_1D42CB4E4(*v0);
}

uint64_t dispatch thunk of SNKShotSegmentationRequest.hangoverDuration.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of SNKShotSegmentationRequest.minSegmentDuration.getter()
{
  uint64_t *v0;

  return sub_1D42CB4C0(*v0);
}

uint64_t dispatch thunk of SNKShotSegmentationRequest.minSegmentDuration.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of SNKShotSegmentationRequest.similarityThreshold.getter()
{
  uint64_t *v0;

  return sub_1D42CB4CC(*v0);
}

uint64_t dispatch thunk of SNKShotSegmentationRequest.similarityThreshold.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t method lookup function for SNKShotSegmentationResult()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SNKShotSegmentationResult.exemplarEmbedding.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of SNKShotSegmentationResult.exemplarEmbedding.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of SNKShotSegmentationResult.exemplarEmbedding.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of SNKShotSegmentationResult.segments.getter()
{
  uint64_t *v0;

  return sub_1D42CB1FC(*v0);
}

uint64_t dispatch thunk of SNKShotSegmentationResult.segments.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of SNKShotSegmentationResult.segments.modify()
{
  return sub_1D42CB508(*MEMORY[0x1E0DEEDD8]);
}

uint64_t dispatch thunk of SNKShotSegmentationResult.exemplarIndex.getter()
{
  uint64_t *v0;

  return sub_1D42CB4D8(*v0);
}

uint64_t dispatch thunk of SNKShotSegmentationResult.exemplarIndex.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of SNKShotSegmentationResult.exemplarIndex.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t sub_1D42C90C0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42C90C8(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D42C9124(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  return a1;
}

void *sub_1D42C91C0(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x44uLL);
}

uint64_t sub_1D42C91C8(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  return a1;
}

uint64_t sub_1D42C9234(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 68))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1D42C9274(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 68) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 68) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for KShotSegmentationRequest()
{
  sub_1D42CB35C();
}

uint64_t sub_1D42C92D4(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v4 = v3;
  return a1;
}

uint64_t sub_1D42C9310(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

__n128 initializeWithTake for MovieRemix.FinalResult(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D42C937C(uint64_t a1, _QWORD *a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = a2[3];
  return a1;
}

uint64_t getEnumTagSinglePayload for SNFileSystem.InflightTask(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SNFileSystem.InflightTask(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for KShotFeaturizationStreamCompletion()
{
  sub_1D42CB35C();
}

uint64_t sub_1D42C9454(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  v4 = v3;
  return a1;
}

void sub_1D42C9490(id *a1)
{

}

uint64_t sub_1D42C9498(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  return a1;
}

uint64_t sub_1D42C94E8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t sub_1D42C94FC(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  return a1;
}

uint64_t sub_1D42C9540(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 10))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1D42C9580(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 10) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 10) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for KShotFeaturizationStreamResult()
{
  sub_1D42CB35C();
}

void sub_1D42C95CC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

uint64_t sub_1D42C960C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = v5;
  return a1;
}

uint64_t sub_1D42C9684(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a2 + 32);
  v5 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

__n128 initializeWithTake for FileServerInfo(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_1D42C9758(uint64_t a1, uint64_t a2)
{
  void *v4;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t sub_1D42C97D4(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1D42C9814(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for KShotFeaturizationResult()
{
  sub_1D42CB35C();
}

uint64_t sub_1D42C9874(id *a1)
{

  return swift_bridgeObjectRelease();
}

void sub_1D42C989C(_QWORD *a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *(void **)a2;
  v3 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v3;
  a1[2] = *(_QWORD *)(a2 + 16);
  v4 = v2;
  sub_1D42CB6CC();
  sub_1D42B6E24();
}

uint64_t sub_1D42C98D0(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

uint64_t sub_1D42C9930(uint64_t a1, uint64_t a2)
{

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticAudioSourceInstance(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticAudioSourceInstance(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for KShotSegmentationResult()
{
  sub_1D42CB35C();
}

_QWORD *sub_1D42C9A00(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  __int128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v10 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v5;
    a1[2] = *((_OWORD *)a2 + 2);
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_1D4519BC4();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_1D42C9A90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_1D4519BC4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_OWORD *sub_1D42C9AC8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1D4519BC4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  return a1;
}

uint64_t sub_1D42C9B2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v4 = *(int *)(a3 + 20);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1D4519BC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *sub_1D42C9BC0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1D4519BC4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_1D42C9C24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v4 = *(int *)(a3 + 20);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1D4519BC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1D42C9CA0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D42C9CAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = sub_1D42CB348();
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v4, a2, v5);
}

uint64_t sub_1D42C9CE0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D42C9CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 20);
  v6 = sub_1D42CB348();
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v5, a2, a2, v6);
}

uint64_t sub_1D42C9D24()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D4519BC4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1D42C9D98()
{
  sub_1D42C9F88((uint64_t)&unk_1EFE497F8);
}

unint64_t sub_1D42C9DC8()
{
  unint64_t result;

  result = qword_1EFE49800;
  if (!qword_1EFE49800)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45240E8, &unk_1E97A7A38);
    atomic_store(result, (unint64_t *)&qword_1EFE49800);
  }
  return result;
}

unint64_t sub_1D42C9E08()
{
  unint64_t result;

  result = qword_1EFE49808;
  if (!qword_1EFE49808)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45241A0, &unk_1E97A8778);
    atomic_store(result, (unint64_t *)&qword_1EFE49808);
  }
  return result;
}

unint64_t sub_1D42C9E48()
{
  unint64_t result;

  result = qword_1EFE49810;
  if (!qword_1EFE49810)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4524258, &unk_1E97AB458);
    atomic_store(result, (unint64_t *)&qword_1EFE49810);
  }
  return result;
}

unint64_t sub_1D42C9E88()
{
  unint64_t result;

  result = qword_1EFE49818;
  if (!qword_1EFE49818)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4524310, &unk_1E97ABAD0);
    atomic_store(result, (unint64_t *)&qword_1EFE49818);
  }
  return result;
}

unint64_t sub_1D42C9EC8()
{
  unint64_t result;

  result = qword_1EFE49820;
  if (!qword_1EFE49820)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45243C8, &unk_1E97A8898);
    atomic_store(result, (unint64_t *)&qword_1EFE49820);
  }
  return result;
}

void sub_1D42C9F08(uint64_t a1, uint64_t a2)
{
  id *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1D42CB65C(a1, a2);
  sub_1D42D2E5C(v6, v7, v8);
  if (v5)
    sub_1D42CBA38();
  *v2 = sub_1D42CB2A4(v3 + 8 * v4);
  sub_1D42CB15C();
}

unint64_t sub_1D42C9F4C()
{
  unint64_t result;

  result = qword_1EFE49948;
  if (!qword_1EFE49948)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4524B38, &type metadata for KShotSegmentationRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49948);
  }
  return result;
}

void sub_1D42C9F88(uint64_t a1)
{
  unint64_t *v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (!sub_1D42CBA5C(a1))
  {
    v4 = v3;
    v5 = v2(255);
    atomic_store(MEMORY[0x1D825E41C](v4, v5), v1);
  }
  sub_1D42B6E24();
}

unint64_t sub_1D42C9FC0()
{
  unint64_t result;

  result = qword_1EFE49F00;
  if (!qword_1EFE49F00)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for Time, &type metadata for Time);
    atomic_store(result, (unint64_t *)&qword_1EFE49F00);
  }
  return result;
}

void sub_1D42C9FFC(uint64_t a1)
{
  if (!sub_1D42CBA5C(a1))
  {
    sub_1D42B8B10(&qword_1EFE49950);
    sub_1D42CB9BC();
    sub_1D42CB684();
  }
  sub_1D42CB6D4();
}

unint64_t sub_1D42CA054()
{
  unint64_t result;

  result = qword_1EFE49F30;
  if (!qword_1EFE49F30)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for Time, &type metadata for Time);
    atomic_store(result, (unint64_t *)&qword_1EFE49F30);
  }
  return result;
}

unint64_t sub_1D42CA090()
{
  unint64_t result;

  result = qword_1EFE49998;
  if (!qword_1EFE49998)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4524AE8, &type metadata for KShotFeaturizationStreamCompletion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49998);
  }
  return result;
}

unint64_t sub_1D42CA0CC()
{
  unint64_t result;

  result = qword_1EFE499A0;
  if (!qword_1EFE499A0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4524AC0, &unk_1E979BF18);
    atomic_store(result, (unint64_t *)&qword_1EFE499A0);
  }
  return result;
}

unint64_t sub_1D42CA108()
{
  unint64_t result;

  result = qword_1EFE499B0;
  if (!qword_1EFE499B0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4524A98, &unk_1E979BF18);
    atomic_store(result, (unint64_t *)&qword_1EFE499B0);
  }
  return result;
}

unint64_t sub_1D42CA144()
{
  unint64_t result;

  result = qword_1EFE499C8;
  if (!qword_1EFE499C8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4524A48, &type metadata for KShotFeaturizationStreamResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE499C8);
  }
  return result;
}

unint64_t sub_1D42CA180()
{
  unint64_t result;

  result = qword_1EFE499D0;
  if (!qword_1EFE499D0)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for SNKShotDatasetType, &type metadata for SNKShotDatasetType);
    atomic_store(result, (unint64_t *)&qword_1EFE499D0);
  }
  return result;
}

unint64_t sub_1D42CA1BC()
{
  unint64_t result;

  result = qword_1EFE499D8;
  if (!qword_1EFE499D8)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for SNKShotLabel, &type metadata for SNKShotLabel);
    atomic_store(result, (unint64_t *)&qword_1EFE499D8);
  }
  return result;
}

unint64_t sub_1D42CA1F8()
{
  unint64_t result;

  result = qword_1EFE499E8;
  if (!qword_1EFE499E8)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for SNKShotDatasetType, &type metadata for SNKShotDatasetType);
    atomic_store(result, (unint64_t *)&qword_1EFE499E8);
  }
  return result;
}

unint64_t sub_1D42CA234()
{
  unint64_t result;

  result = qword_1EFE499F0;
  if (!qword_1EFE499F0)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for SNKShotLabel, &type metadata for SNKShotLabel);
    atomic_store(result, (unint64_t *)&qword_1EFE499F0);
  }
  return result;
}

unint64_t sub_1D42CA270()
{
  unint64_t result;

  result = qword_1EFE49A00;
  if (!qword_1EFE49A00)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45249F8, &type metadata for KShotFeaturizationResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49A00);
  }
  return result;
}

void sub_1D42CA2AC(uint64_t a1)
{
  unint64_t *v1;
  uint64_t *v2;
  void (*v3)(void);
  void (*v4)(void);
  uint64_t v5;

  if (!sub_1D42CBA5C(a1))
  {
    v4 = v3;
    sub_1D42B8B10(v2);
    v4();
    v5 = sub_1D42CB9EC();
    atomic_store(MEMORY[0x1D825E41C](v5), v1);
  }
  sub_1D42CB758();
}

unint64_t sub_1D42CA2FC()
{
  unint64_t result;

  result = qword_1EFE49A48;
  if (!qword_1EFE49A48)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45249A8, &type metadata for KShotSegmentationResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49A48);
  }
  return result;
}

void sub_1D42CA338(uint64_t a1)
{
  if (!sub_1D42CBA5C(a1))
  {
    sub_1D42B8B10(&qword_1EFE49A50);
    sub_1D42CB9BC();
    sub_1D42CB684();
  }
  sub_1D42CB6D4();
}

unint64_t sub_1D42CA390()
{
  unint64_t result;

  result = qword_1EFE49A90;
  if (!qword_1EFE49A90)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4524958, &type metadata for KShotSegment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49A90);
  }
  return result;
}

unint64_t sub_1D42CA3CC()
{
  unint64_t result;

  result = qword_1EFE49EE0;
  if (!qword_1EFE49EE0)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for TimeRange, &type metadata for TimeRange);
    atomic_store(result, (unint64_t *)&qword_1EFE49EE0);
  }
  return result;
}

unint64_t sub_1D42CA408()
{
  unint64_t result;

  result = qword_1EFE49F20;
  if (!qword_1EFE49F20)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for TimeRange, &type metadata for TimeRange);
    atomic_store(result, (unint64_t *)&qword_1EFE49F20);
  }
  return result;
}

void (*sub_1D42CA444(_QWORD *a1, uint64_t a2, uint64_t a3))(id *)
{
  unint64_t v6;
  id v7;

  v6 = a3 & 0xC000000000000001;
  sub_1D42D2E5C(a2, (a3 & 0xC000000000000001) == 0, a3);
  if (v6)
    v7 = (id)MEMORY[0x1D825CD78](a2, a3);
  else
    v7 = *(id *)(a3 + 8 * a2 + 32);
  *a1 = v7;
  return sub_1D42CAF20;
}

uint64_t sub_1D42CA4B0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1D42CA4D4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

void sub_1D42CA4E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1D42C5AD8(a1, a2, *(_QWORD *)(v2 + 16));
}

unint64_t sub_1D42CA4FC()
{
  unint64_t result;

  result = qword_1EFE49B18;
  if (!qword_1EFE49B18)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for SNKShotLabel, &type metadata for SNKShotLabel);
    atomic_store(result, (unint64_t *)&qword_1EFE49B18);
  }
  return result;
}

unint64_t sub_1D42CA538()
{
  unint64_t result;

  result = qword_1EFE49B20;
  if (!qword_1EFE49B20)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for SNKShotDatasetType, &type metadata for SNKShotDatasetType);
    atomic_store(result, (unint64_t *)&qword_1EFE49B20);
  }
  return result;
}

uint64_t sub_1D42CA574()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D42CA598()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1D42CA5C4(uint64_t a1)
{
  uint64_t v1;

  sub_1D42C6054(a1, *(_QWORD *)(v1 + 16), *(void (**)())(v1 + 24));
}

void sub_1D42CA5D0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    objc_opt_self();
    atomic_store(swift_getObjCClassMetadata(), a2);
  }
  sub_1D42B6E24();
}

uint64_t sub_1D42CA604()
{
  return swift_deallocObject();
}

uint64_t sub_1D42CA614(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_1D42C6100(a1, a2, *(_QWORD *)(v2 + 16));
}

ValueMetadata *type metadata accessor for KShotSegment.CodingKeys()
{
  return &type metadata for KShotSegment.CodingKeys;
}

_BYTE *sub_1D42CA634(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for KShotSegmentationResult.CodingKeys()
{
  return &type metadata for KShotSegmentationResult.CodingKeys;
}

ValueMetadata *type metadata accessor for KShotFeaturizationResult.CodingKeys()
{
  return &type metadata for KShotFeaturizationResult.CodingKeys;
}

uint64_t _s13SoundAnalysis23KShotSegmentationResultV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_1D42CB898(-1);
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_1D42CB898((*a1 | (v4 << 8)) - 3);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_1D42CB898((*a1 | (v4 << 8)) - 3);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_1D42CB898((*a1 | (v4 << 8)) - 3);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return sub_1D42CB898(v8);
}

uint64_t _s13SoundAnalysis23KShotSegmentationResultV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D42CA734 + 4 * byte_1D4523B91[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D42CA768 + 4 * byte_1D4523B8C[v4]))();
}

uint64_t sub_1D42CA76C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D42CA774);
  return result;
}

uint64_t sub_1D42CA77C(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D42CA784);
  return sub_1D42CB888();
}

ValueMetadata *type metadata accessor for KShotFeaturizationStreamResult.CodingKeys()
{
  return &type metadata for KShotFeaturizationStreamResult.CodingKeys;
}

uint64_t _s13SoundAnalysis18SNKShotDatasetTypeOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_1D42CB898(-1);
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_1D42CB898((*a1 | (v4 << 8)) - 2);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_1D42CB898((*a1 | (v4 << 8)) - 2);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_1D42CB898((*a1 | (v4 << 8)) - 2);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return sub_1D42CB898(v8);
}

uint64_t _s13SoundAnalysis18SNKShotDatasetTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D42CA874 + 4 * byte_1D4523B9B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D42CA8A8 + 4 * byte_1D4523B96[v4]))();
}

uint64_t sub_1D42CA8AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D42CA8B4);
  return result;
}

uint64_t sub_1D42CA8BC(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D42CA8C4);
  return sub_1D42CB888();
}

ValueMetadata *type metadata accessor for KShotFeaturizationStreamCompletion.CodingKeys()
{
  return &type metadata for KShotFeaturizationStreamCompletion.CodingKeys;
}

uint64_t _s13SoundAnalysis24KShotFeaturizationResultV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_1D42CB898(-1);
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_1D42CB898((*a1 | (v4 << 8)) - 6);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_1D42CB898((*a1 | (v4 << 8)) - 6);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_1D42CB898((*a1 | (v4 << 8)) - 6);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return sub_1D42CB898(v8);
}

uint64_t _s13SoundAnalysis24KShotFeaturizationResultV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D42CA9B4 + 4 * byte_1D4523BA5[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D42CA9E8 + 4 * byte_1D4523BA0[v4]))();
}

uint64_t sub_1D42CA9EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D42CA9F4);
  return result;
}

uint64_t sub_1D42CA9FC(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D42CAA04);
  return sub_1D42CB888();
}

ValueMetadata *type metadata accessor for KShotSegmentationRequest.CodingKeys()
{
  return &type metadata for KShotSegmentationRequest.CodingKeys;
}

void type metadata accessor for MultiArray()
{
  sub_1D42CB35C();
}

unint64_t sub_1D42CAA34()
{
  unint64_t result;

  result = qword_1EFE49BC8;
  if (!qword_1EFE49BC8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45244A0, &unk_1E979BF18);
    atomic_store(result, (unint64_t *)&qword_1EFE49BC8);
  }
  return result;
}

unint64_t sub_1D42CAA74()
{
  unint64_t result;

  result = qword_1EFE49BD0;
  if (!qword_1EFE49BD0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4524598, &type metadata for KShotSegmentationRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49BD0);
  }
  return result;
}

unint64_t sub_1D42CAAB4()
{
  unint64_t result;

  result = qword_1EFE49BD8;
  if (!qword_1EFE49BD8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4524650, &type metadata for KShotFeaturizationStreamCompletion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49BD8);
  }
  return result;
}

unint64_t sub_1D42CAAF4()
{
  unint64_t result;

  result = qword_1EFE49BE0;
  if (!qword_1EFE49BE0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4524708, &type metadata for KShotFeaturizationStreamResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49BE0);
  }
  return result;
}

unint64_t sub_1D42CAB34()
{
  unint64_t result;

  result = qword_1EFE49BE8;
  if (!qword_1EFE49BE8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45247C0, &type metadata for KShotFeaturizationResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49BE8);
  }
  return result;
}

unint64_t sub_1D42CAB74()
{
  unint64_t result;

  result = qword_1EFE49BF0;
  if (!qword_1EFE49BF0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4524878, &type metadata for KShotSegmentationResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49BF0);
  }
  return result;
}

unint64_t sub_1D42CABB4()
{
  unint64_t result;

  result = qword_1EFE49BF8;
  if (!qword_1EFE49BF8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4524930, &type metadata for KShotSegment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49BF8);
  }
  return result;
}

unint64_t sub_1D42CABF4()
{
  unint64_t result;

  result = qword_1EFE49C00;
  if (!qword_1EFE49C00)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45248A0, &type metadata for KShotSegment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49C00);
  }
  return result;
}

unint64_t sub_1D42CAC34()
{
  unint64_t result;

  result = qword_1EFE49C08;
  if (!qword_1EFE49C08)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45248C8, &type metadata for KShotSegment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49C08);
  }
  return result;
}

unint64_t sub_1D42CAC74()
{
  unint64_t result;

  result = qword_1EFE49C10;
  if (!qword_1EFE49C10)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45247E8, &type metadata for KShotSegmentationResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49C10);
  }
  return result;
}

unint64_t sub_1D42CACB4()
{
  unint64_t result;

  result = qword_1EFE49C18;
  if (!qword_1EFE49C18)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4524810, &type metadata for KShotSegmentationResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49C18);
  }
  return result;
}

unint64_t sub_1D42CACF4()
{
  unint64_t result;

  result = qword_1EFE49C20;
  if (!qword_1EFE49C20)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4524730, &type metadata for KShotFeaturizationResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49C20);
  }
  return result;
}

unint64_t sub_1D42CAD34()
{
  unint64_t result;

  result = qword_1EFE49C28;
  if (!qword_1EFE49C28)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4524758, &type metadata for KShotFeaturizationResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49C28);
  }
  return result;
}

unint64_t sub_1D42CAD74()
{
  unint64_t result;

  result = qword_1EFE49C30;
  if (!qword_1EFE49C30)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4524678, &type metadata for KShotFeaturizationStreamResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49C30);
  }
  return result;
}

unint64_t sub_1D42CADB4()
{
  unint64_t result;

  result = qword_1EFE49C38;
  if (!qword_1EFE49C38)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45246A0, &type metadata for KShotFeaturizationStreamResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49C38);
  }
  return result;
}

unint64_t sub_1D42CADF4()
{
  unint64_t result;

  result = qword_1EFE49C40;
  if (!qword_1EFE49C40)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45245C0, &type metadata for KShotFeaturizationStreamCompletion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49C40);
  }
  return result;
}

unint64_t sub_1D42CAE34()
{
  unint64_t result;

  result = qword_1EFE49C48;
  if (!qword_1EFE49C48)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45245E8, &type metadata for KShotFeaturizationStreamCompletion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49C48);
  }
  return result;
}

unint64_t sub_1D42CAE74()
{
  unint64_t result;

  result = qword_1EFE49C50;
  if (!qword_1EFE49C50)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4524508, &type metadata for KShotSegmentationRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49C50);
  }
  return result;
}

unint64_t sub_1D42CAEB4()
{
  unint64_t result;

  result = qword_1EFE49C58;
  if (!qword_1EFE49C58)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4524530, &type metadata for KShotSegmentationRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49C58);
  }
  return result;
}

uint64_t sub_1D42CAEF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

void *sub_1D42CB014@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  size_t v2;

  return memmove(__dst, a2, v2);
}

uint64_t sub_1D42CB024()
{
  return sub_1D451B5D4();
}

uint64_t sub_1D42CB068()
{
  return sub_1D451B760();
}

uint64_t sub_1D42CB094()
{
  uint64_t v0;

  return v0 + 32;
}

uint64_t sub_1D42CB0C4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42CB0CC()
{
  return sub_1D451AF2C();
}

uint64_t sub_1D42CB0E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_1D42CB10C()
{
  return sub_1D451BA24();
}

void sub_1D42CB120(id a1)
{

}

uint64_t sub_1D42CB138()
{
  return sub_1D451B5A4();
}

uint64_t sub_1D42CB148()
{
  return sub_1D451B4A8();
}

size_t sub_1D42CB168(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  size_t result;

  result = j__malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / v2);
  return result;
}

void sub_1D42CB1A4(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = 2 * (a1 / v1);
}

uint64_t sub_1D42CB1B4()
{
  return sub_1D451B688();
}

uint64_t sub_1D42CB1D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return sub_1D42B28FC(a5);
}

void sub_1D42CB1E4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v3;

  v3 = *(void **)(v2 + a2);
  *(_QWORD *)(v2 + a2) = a1;

}

uint64_t sub_1D42CB1F0()
{
  return sub_1D451B688();
}

uint64_t sub_1D42CB1FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))((v1 & a1) + 0x88))();
}

uint64_t sub_1D42CB208()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42CB220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1D42CB230()
{
  return sub_1D451B994();
}

uint64_t sub_1D42CB238()
{
  return sub_1D451B4B4();
}

_QWORD *sub_1D42CB248()
{
  _QWORD *v0;

  return sub_1D42B5528(v0, v0[3]);
}

uint64_t sub_1D42CB268()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42CB284()
{
  return sub_1D451B49C();
}

uint64_t sub_1D42CB294()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

id sub_1D42CB2A4@<X0>(uint64_t a1@<X8>)
{
  return *(id *)(a1 + 32);
}

uint64_t sub_1D42CB2E4()
{
  return sub_1D451B670();
}

void *sub_1D42CB2F8@<X0>(void *a1@<X0>, const void *a2@<X1>, size_t a3@<X8>)
{
  return memmove(a1, a2, a3);
}

uint64_t sub_1D42CB300()
{
  return swift_bridgeObjectRelease();
}

void *sub_1D42CB30C()
{
  return malloc(0x28uLL);
}

uint64_t sub_1D42CB320()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42CB338()
{
  return swift_bridgeObjectRelease();
}

void sub_1D42CB340(uint64_t a1, unint64_t *a2)
{
  sub_1D42CA5D0(0, a2);
}

uint64_t sub_1D42CB348()
{
  return sub_1D4519BC4();
}

uint64_t sub_1D42CB350()
{
  return sub_1D451B118();
}

id sub_1D42CB364(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  return objc_msgSendSuper2(&a9, a2);
}

uint64_t sub_1D42CB36C()
{
  return type metadata accessor for KShotSegment(0);
}

uint64_t sub_1D42CB384(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(result + 8) = v1;
  return result;
}

void sub_1D42CB3A0(id a1)
{

}

uint64_t sub_1D42CB3B0()
{
  return sub_1D451B484();
}

uint64_t sub_1D42CB3BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1D42CB3CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1D42CB3DC()
{
  return sub_1D451B964();
}

uint64_t sub_1D42CB3E8()
{
  return sub_1D451B748();
}

uint64_t sub_1D42CB44C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

void sub_1D42CB454()
{
  JUMPOUT(0x1D825CD78);
}

uint64_t sub_1D42CB47C()
{
  return sub_1D451B97C();
}

uint64_t sub_1D42CB494(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t sub_1D42CB4A8()
{
  return sub_1D451BA0C();
}

uint64_t sub_1D42CB4C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))((v1 & a1) + 0xD0))();
}

uint64_t sub_1D42CB4CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))((v1 & a1) + 0xE8))();
}

uint64_t sub_1D42CB4D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))((v1 & a1) + 0xA0))();
}

uint64_t sub_1D42CB4E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))((v1 & a1) + 0xB8))();
}

uint64_t sub_1D42CB4F0()
{
  return sub_1D451B490();
}

uint64_t sub_1D42CB508@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))((a1 & v1) + 0x98))();
}

uint64_t sub_1D42CB514()
{
  return swift_bridgeObjectRelease();
}

void sub_1D42CB538()
{
  sub_1D42C711C();
}

void sub_1D42CB550()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = v2;
  *(_BYTE *)(v3 + v0 + 32) = v1 != 0;
}

uint64_t sub_1D42CB570()
{
  uint64_t v0;

  return v0;
}

void sub_1D42CB580()
{
  sub_1D42C711C();
}

uint64_t sub_1D42CB5B0()
{
  return 0;
}

uint64_t sub_1D42CB5B8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D42CB5C8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42CB608()
{
  return sub_1D451B4A8();
}

void sub_1D42CB61C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{

}

uint64_t sub_1D42CB624()
{
  return swift_bridgeObjectRelease();
}

void sub_1D42CB630(id a1)
{

}

uint64_t sub_1D42CB638()
{
  return sub_1D451B10C();
}

uint64_t sub_1D42CB644()
{
  return sub_1D451B97C();
}

uint64_t sub_1D42CB650()
{
  return sub_1D451B988();
}

uint64_t sub_1D42CB65C(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1D42CB684()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D42CB698()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;

  return v0(v1);
}

uint64_t sub_1D42CB6AC()
{
  return sub_1D451A908();
}

uint64_t sub_1D42CB6CC()
{
  return swift_bridgeObjectRetain();
}

id sub_1D42CB6E8()
{
  uint64_t v0;

  return objc_allocWithZone(*(Class *)(v0 + 2024));
}

uint64_t sub_1D42CB6FC()
{
  return sub_1D451B118();
}

void sub_1D42CB718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{

}

uint64_t sub_1D42CB720@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return v1 + a1;
}

id sub_1D42CB730(uint64_t a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  return sub_1D42C20F8((uint64_t *)va);
}

id sub_1D42CB738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1D42C0FA8(&a9);
}

unint64_t sub_1D42CB768()
{
  return sub_1D42C1460();
}

uint64_t sub_1D42CB770()
{
  return sub_1D451B4B4();
}

uint64_t sub_1D42CB780()
{
  uint64_t v0;

  return v0 - 72;
}

uint64_t sub_1D42CB7B8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D42CB7C0()
{
  return sub_1D451B49C();
}

uint64_t sub_1D42CB7E0()
{
  return sub_1D451B484();
}

uint64_t sub_1D42CB7F0()
{
  return sub_1D451B760();
}

uint64_t sub_1D42CB7F8()
{
  return swift_bridgeObjectRetain();
}

void sub_1D42CB800(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)v1 = v2;
  *(double *)(v1 + 8) = a1;
  *(_QWORD *)(v1 + 16) = v3;
}

unint64_t sub_1D42CB810()
{
  return sub_1D42C141C();
}

uint64_t sub_1D42CB824()
{
  return sub_1D451B958();
}

uint64_t sub_1D42CB864(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D42CB86C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D42CB874@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 81) = a1;
  return v1 - 112;
}

_BYTE *sub_1D42CB888@<X0>(_BYTE *result@<X0>, char a2@<W8>)
{
  *result = a2;
  return result;
}

uint64_t sub_1D42CB890(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D42CB898@<X0>(int a1@<W8>)
{
  return (a1 + 1);
}

void sub_1D42CB8C4()
{
  const void *v0;

  _Block_release(v0);
}

uint64_t sub_1D42CB8E4()
{
  return sub_1D451B988();
}

uint64_t sub_1D42CB8EC()
{
  return sub_1D451B97C();
}

uint64_t sub_1D42CB8F4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42CB8FC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D42CB904()
{
  return sub_1D451B988();
}

id sub_1D42CB90C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1D42C20F8(&a9);
}

void sub_1D42CB928(uint64_t a1)
{
  sub_1D42CA2AC(a1);
}

uint64_t sub_1D42CB944()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42CB950()
{
  return sub_1D451B988();
}

uint64_t sub_1D42CB970()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42CB97C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42CB988()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42CB994()
{
  return sub_1D451A92C();
}

unint64_t sub_1D42CB9A0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 81) = 0;
  return sub_1D42CA108();
}

uint64_t sub_1D42CB9B4()
{
  uint64_t v0;

  return sub_1D42B5400(v0);
}

void sub_1D42CB9BC()
{
  uint64_t v0;

  sub_1D42C9F88(v0);
}

uint64_t sub_1D42CB9DC()
{
  return swift_bridgeObjectRetain();
}

id sub_1D42CB9E4()
{
  objc_class *v0;

  return objc_allocWithZone(v0);
}

uint64_t sub_1D42CB9EC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D42CB9F8()
{
  uint64_t *v0;

  return sub_1D42B28FC(v0);
}

uint64_t sub_1D42CBA00()
{
  uint64_t v0;

  return v0;
}

void sub_1D42CBA14()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 81) = 1;
}

void *sub_1D42CBA20@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, char aBlock, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  a6 = a1;
  a7 = v7;
  return _Block_copy(&aBlock);
}

id sub_1D42CBA2C(void *a1)
{
  uint64_t v1;
  uint64_t v2;

  return objc_msgSend(a1, (SEL)(v2 + 94), v1);
}

void sub_1D42CBA38()
{
  JUMPOUT(0x1D825CD78);
}

id sub_1D42CBA50(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, (SEL)(v1 + 840));
}

uint64_t sub_1D42CBA5C(uint64_t a1)
{
  return *(_QWORD *)a1;
}

id sub_1D42CBA68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _DWORD *v7;
  id v8;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  id result;
  void *v19;
  int exclaveCapability;
  uint64_t v21;

  v5 = v4;
  *(_DWORD *)(v4 + 48) = 1936614497;
  *(_QWORD *)(v4 + 72) = 0;
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 32) = a3;
  *(_QWORD *)(v4 + 40) = a4;
  type metadata accessor for SafeLock();
  v6 = swift_allocObject();
  swift_retain();
  swift_retain();
  v7 = (_DWORD *)sub_1D42CC940();
  *v7 = 0;
  *(_QWORD *)(v6 + 16) = v7;
  *(_QWORD *)(v4 + 56) = v6;
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFF1B0]), sel_initWithIsolatedAudioUseCaseID_, 1936614497);
  if (!v8)
  {
    sub_1D42CC898();
    swift_allocError();
    *(_DWORD *)v21 = 0;
    *(_BYTE *)(v21 + 4) = 1;
    swift_willThrow();
    swift_release();
    sub_1D42BE998();
    swift_release();
    swift_release();
    swift_release();
    swift_deallocPartialClassInstance();
    return (id)v5;
  }
  v9 = v8;
  if (qword_1EFE40338 != -1)
    swift_once();
  v10 = sub_1D451A014();
  sub_1D42CC880(v10, (uint64_t)qword_1EFEA7700);
  v11 = sub_1D4519FFC();
  v12 = sub_1D451AF74();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)sub_1D42CC940();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_1D42A7000, v11, v12, "AVAudioSecureSession created for soundAnalysis", v13, 2u);
    sub_1D42CC934();
  }

  *(_QWORD *)(v4 + 64) = v9;
  v14 = v9;
  RegisterForIsolatedAudio();
  v15 = sub_1D4519FFC();
  v16 = sub_1D451AF74();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)sub_1D42CC940();
    *(_WORD *)v17 = 0;
    _os_log_impl(&dword_1D42A7000, v15, v16, "IsolatedCoreAudioClient RegisterForIsolatedAudio called", v17, 2u);
    sub_1D42CC934();
  }

  result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    v19 = result;
    exclaveCapability = MobileGestalt_get_exclaveCapability();

    if (exclaveCapability)
      SetAudioLapseHandler();
    swift_release();
    sub_1D42BE998();

    return (id)v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D42CBD14(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  if (a3)
  {
    v5 = result;
    swift_retain();
    RequestIsolatedAudio();
    v6 = *(void (**)(uint64_t, uint64_t))(a3 + 16);
    swift_retain();
    v6(v5, a2);
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D42CBD90(uint64_t result, uint64_t a2)
{
  int v2;
  void (*v3)(void *);
  void *v4;
  uint64_t v5;

  if (a2)
  {
    v2 = result;
    v3 = *(void (**)(void *))(a2 + 32);
    sub_1D42CC898();
    swift_retain();
    v4 = (void *)swift_allocError();
    *(_DWORD *)v5 = v2;
    *(_BYTE *)(v5 + 4) = 0;
    swift_retain();
    v3(v4);

    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1D42CBE2C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  unsigned int v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  id v17;
  id v18[2];

  v18[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = *(void **)(v0 + 64);
  v2 = *MEMORY[0x1E0CFEFE0];
  v3 = *MEMORY[0x1E0CFF0B0];
  v18[0] = 0;
  v4 = objc_msgSend(v1, sel_setCategory_mode_options_error_, v2, v3, 0, v18);
  v5 = v18[0];
  if (!v4)
    goto LABEL_10;
  v6 = qword_1EFE40338;
  v7 = v18[0];
  if (v6 != -1)
    swift_once();
  v8 = sub_1D451A014();
  sub_1D42CC880(v8, (uint64_t)qword_1EFEA7700);
  v9 = sub_1D4519FFC();
  v10 = sub_1D451AF74();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_1D42A7000, v9, v10, "AVAudioSecureSession mode set to soundRecognition", v11, 2u);
    MEMORY[0x1D825E524](v11, -1, -1);
  }

  v18[0] = 0;
  v12 = objc_msgSend(v1, sel_setActive_error_, 1, v18);
  v5 = v18[0];
  if (v12)
  {
    v13 = v18[0];
    v14 = sub_1D4519FFC();
    v15 = sub_1D451AF74();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_1D42A7000, v14, v15, "AVAudioSecureSession setActive TRUE", v16, 2u);
      MEMORY[0x1D825E524](v16, -1, -1);
    }

  }
  else
  {
LABEL_10:
    v17 = v5;
    sub_1D4519AA4();

    swift_willThrow();
  }
}

void sub_1D42CC038()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  NSObject *v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  os_log_type_t v15;
  uint8_t *v16;
  _QWORD *v17;
  id v18;
  void *v19;
  id v20[2];

  v1 = v0;
  v20[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = *(void **)(v0 + 64);
  v20[0] = 0;
  if (objc_msgSend(v2, sel_setActive_error_, 0, v20))
  {
    v3 = qword_1EFE40338;
    v4 = v20[0];
    if (v3 != -1)
      swift_once();
    v5 = sub_1D451A014();
    sub_1D42CC880(v5, (uint64_t)qword_1EFEA7700);
    v6 = sub_1D4519FFC();
    v7 = sub_1D451AF74();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_1D42A7000, v6, v7, "AVAudioSecureSession setActive FALSE", v8, 2u);
      MEMORY[0x1D825E524](v8, -1, -1);
    }

    v9 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    -[NSObject removeObserver:](v9, sel_removeObserver_, v1);
  }
  else
  {
    v10 = v20[0];
    v11 = (void *)sub_1D4519AA4();

    swift_willThrow();
    if (qword_1EFE40338 != -1)
      swift_once();
    v12 = sub_1D451A014();
    sub_1D42CC880(v12, (uint64_t)qword_1EFEA7700);
    v13 = v11;
    v14 = v11;
    v9 = sub_1D4519FFC();
    v15 = sub_1D451AF74();
    if (os_log_type_enabled(v9, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v16 = 138412290;
      v18 = v11;
      v19 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v20[0] = v19;
      sub_1D451B1A8();
      *v17 = v19;

      _os_log_impl(&dword_1D42A7000, v9, v15, "Secure session deactivation failed with error:%@", v16, 0xCu);
      sub_1D42B28FC((uint64_t *)&unk_1EFE50850);
      swift_arrayDestroy();
      MEMORY[0x1D825E524](v17, -1, -1);
      MEMORY[0x1D825E524](v16, -1, -1);

      return;
    }

  }
}

uint64_t sub_1D42CC344()
{
  uint64_t v0;
  os_unfair_lock_s *v1;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)(v0 + 56) + 16);
  swift_retain();
  os_unfair_lock_lock(v1);
  sub_1D42CC3A4(v0);
  os_unfair_lock_unlock(v1);
  return swift_release();
}

void sub_1D42CC3A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  int started;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;

  v3 = *(_QWORD *)(a1 + 72);
  if (v3)
  {
    if (v3 < 1)
      goto LABEL_7;
    if (qword_1EFE40338 != -1)
      goto LABEL_18;
    while (1)
    {
      v4 = sub_1D451A014();
      sub_1D42CC880(v4, (uint64_t)qword_1EFEA7700);
      v5 = sub_1D4519FFC();
      v6 = sub_1D451AF74();
      if (os_log_type_enabled(v5, v6))
      {
        v7 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v7 = 0;
        _os_log_impl(&dword_1D42A7000, v5, v6, "IsolatedCoreAudioClient StartIsolatedAudio() called when audio already running", v7, 2u);
        MEMORY[0x1D825E524](v7, -1, -1);
      }

LABEL_7:
      v8 = *(_QWORD *)(a1 + 72);
      v9 = __OFADD__(v8, 1);
      v10 = v8 + 1;
      if (!v9)
        break;
      __break(1u);
LABEL_18:
      swift_once();
    }
    *(_QWORD *)(a1 + 72) = v10;
  }
  else
  {
    sub_1D42CBE2C();
    if (!v1)
    {
      started = StartIsolatedAudio();
      if (qword_1EFE40338 != -1)
        swift_once();
      v12 = sub_1D451A014();
      sub_1D42CC880(v12, (uint64_t)qword_1EFEA7700);
      v13 = sub_1D4519FFC();
      v14 = sub_1D451AF74();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v15 = 67109120;
        sub_1D451B1A8();
        _os_log_impl(&dword_1D42A7000, v13, v14, "IsolatedCoreAudioClient StartIsolatedAudio() called with status %d", v15, 8u);
        MEMORY[0x1D825E524](v15, -1, -1);
      }

      if (started == sub_1D451A08C())
        goto LABEL_7;
      sub_1D42CC898();
      swift_allocError();
      *(_DWORD *)v16 = 1;
      *(_BYTE *)(v16 + 4) = 1;
      swift_willThrow();
    }
  }
}

uint64_t sub_1D42CC5E4()
{
  uint64_t v0;
  os_unfair_lock_s *v1;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)(v0 + 56) + 16);
  swift_retain();
  os_unfair_lock_lock(v1);
  sub_1D42CC63C(v0);
  os_unfair_lock_unlock(v1);
  return swift_release();
}

void sub_1D42CC63C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;

  v2 = *(_QWORD *)(a1 + 72);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
LABEL_9:
    swift_once();
    goto LABEL_4;
  }
  v1 = a1;
  *(_QWORD *)(a1 + 72) = v4;
  if (v4)
    goto LABEL_7;
  StopIsolatedAudio();
  if (qword_1EFE40338 != -1)
    goto LABEL_9;
LABEL_4:
  v5 = sub_1D451A014();
  sub_1D42CC880(v5, (uint64_t)qword_1EFEA7700);
  v6 = sub_1D4519FFC();
  v7 = sub_1D451AF74();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1D42A7000, v6, v7, "IsolatedCoreAudioClient StopIsolatedAudio() called", v8, 2u);
    MEMORY[0x1D825E524](v8, -1, -1);
  }

  sub_1D42CC038();
  v4 = *(_QWORD *)(v1 + 72);
LABEL_7:
  *(_QWORD *)(v1 + 72) = v4 & ~(v4 >> 63);
}

uint64_t sub_1D42CC74C()
{
  uint64_t v0;

  StopIsolatedAudio();
  swift_release();
  swift_release();
  swift_release();

  return v0;
}

uint64_t sub_1D42CC784()
{
  sub_1D42CC74C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ICACConnection()
{
  return objc_opt_self();
}

uint64_t sub_1D42CC7C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_1D42CC344();
  if (v2)
  {
    sub_1D42BE998();
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(_QWORD *)(v1 + 16) = a1;
  }
  return v1;
}

uint64_t sub_1D42CC828()
{
  sub_1D42CC5E4();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ICACIOSession()
{
  return objc_opt_self();
}

uint64_t sub_1D42CC880(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

unint64_t sub_1D42CC898()
{
  unint64_t result;

  result = qword_1EFE49C60[0];
  if (!qword_1EFE49C60[0])
  {
    result = MEMORY[0x1D825E41C](&unk_1D4524C14, &type metadata for ICACConnection.DomainError);
    atomic_store(result, qword_1EFE49C60);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ICACConnection.DomainError(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_BYTE *)(result + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t sub_1D42CC8E8(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 4))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1D42CC904(uint64_t result, int a2)
{
  char v2;

  if (a2)
  {
    *(_DWORD *)result = a2 - 1;
    v2 = 1;
  }
  else
  {
    v2 = 0;
  }
  *(_BYTE *)(result + 4) = v2;
  return result;
}

ValueMetadata *type metadata accessor for ICACConnection.DomainError()
{
  return &type metadata for ICACConnection.DomainError;
}

void sub_1D42CC934()
{
  JUMPOUT(0x1D825E524);
}

uint64_t sub_1D42CC940()
{
  return swift_slowAlloc();
}

uint64_t sub_1D42CC948()
{
  return sub_1D451A614();
}

uint64_t sub_1D42CC958()
{
  return sub_1D451A698() & 1;
}

uint64_t sub_1D42CC980(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000018 && a2 == 0x80000001D45507C0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1D451B820();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1D42CCA04()
{
  sub_1D451B958();
  sub_1D451B964();
  return sub_1D451B994();
}

unint64_t sub_1D42CCA44()
{
  return 0xD000000000000018;
}

void sub_1D42CCA60()
{
  sub_1D42CD4F4();
}

void sub_1D42CCA9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;

  MEMORY[0x1D825E41C](&unk_1D4524EC8, a1);
  v10 = sub_1D451B7A8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&a9 - v12;
  sub_1D42B5528(v9, v9[3]);
  sub_1D451BA24();
  sub_1D451B760();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_1D42BE844();
}

uint64_t sub_1D42CCB68()
{
  sub_1D451B958();
  sub_1D42CC948();
  return sub_1D451B994();
}

void sub_1D42CCBAC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[12];

  v8[5] = a3;
  v8[4] = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8[6] = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[8] = v4;
  v8[9] = v5;
  v8[10] = v6;
  v8[11] = v7;
  sub_1D42CD4F4();
}

void sub_1D42CCC28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  MEMORY[0x1D825E41C](&unk_1D4524EC8, a1);
  v6 = sub_1D451B6E8();
  *(_QWORD *)(v5 - 120) = v6;
  *(_QWORD *)(v5 - 168) = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  *(_QWORD *)(v5 - 160) = v1;
  *(_QWORD *)(v5 - 152) = v4;
  *(_QWORD *)(v5 - 112) = v1;
  *(_QWORD *)(v5 - 104) = v4;
  *(_QWORD *)(v5 - 96) = v3;
  *(_QWORD *)(v5 - 88) = v2;
  type metadata accessor for SharedSoundPrint100k.Configuration();
}

void sub_1D42CCC98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v12 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v14 = (char *)&a9 - v13;
  sub_1D42B5528(v9, v9[3]);
  v15 = *(_QWORD *)(v10 - 72);
  sub_1D451BA0C();
  if (!v15)
  {
    v16 = v14;
    *(_QWORD *)(v10 - 176) = v12;
    *(_QWORD *)(v10 - 72) = a1;
    v17 = *(_QWORD *)(v10 - 160);
    v19 = *(_QWORD *)(v10 - 144);
    v18 = *(_QWORD *)(v10 - 136);
    sub_1D451B688();
    sub_1D42CD4E4();
    (*(void (**)(char *, _QWORD, uint64_t))(v19 + 32))(v16, *(_QWORD *)(v10 - 128), v17);
    (*(void (**)(uint64_t, char *, _QWORD))(*(_QWORD *)(v10 - 176) + 32))(v18, v16, *(_QWORD *)(v10 - 72));
  }
  sub_1D42B5400((uint64_t)v9);
  sub_1D42BE844();
}

uint64_t sub_1D42CCD8C()
{
  return _s13SoundAnalysis17_SNClassificationC20supportsSecureCodingSbvgZ_0();
}

uint64_t sub_1D42CCD9C()
{
  return sub_1D42CCA04();
}

uint64_t sub_1D42CCDAC()
{
  return sub_1D42BA2F0();
}

uint64_t sub_1D42CCDBC()
{
  sub_1D451B958();
  sub_1D42BA2F0();
  return sub_1D451B994();
}

unint64_t sub_1D42CCE00()
{
  return sub_1D42CCA44();
}

uint64_t sub_1D42CCE10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D42CC980(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D42CCE44()
{
  return sub_1D42BA688();
}

uint64_t sub_1D42CCE68@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s13SoundAnalysis17_SNClassificationC20supportsSecureCodingSbvgZ_0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D42CCE9C(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D4524EC8, a1);
  return sub_1D451BA3C();
}

uint64_t sub_1D42CCED0(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D4524EC8, a1);
  return sub_1D451BA48();
}

void sub_1D42CCF04(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1D42CCBAC(a1, *(_QWORD *)(a2 + 16), a3);
}

void sub_1D42CCF24()
{
  sub_1D42CCA60();
}

uint64_t sub_1D42CCF40()
{
  sub_1D451B958();
  sub_1D42CC948();
  return sub_1D451B994();
}

uint64_t sub_1D42CCF80()
{
  return sub_1D42CC958();
}

uint64_t type metadata accessor for SharedSoundPrint100k.Instance()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for SharedSoundPrint100k()
{
  return &type metadata for SharedSoundPrint100k;
}

uint64_t sub_1D42CCFC0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1D42CD02C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1D42CD09C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))();
  return a1;
}

uint64_t sub_1D42CD0CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_1D42CD0FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_1D42CD12C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_1D42CD15C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1D42CD20C + 4 * byte_1D4524C60[(v8 - 1)]))();
}

void sub_1D42CD258(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0u;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

void type metadata accessor for SharedSoundPrint100k.Configuration()
{
  JUMPOUT(0x1D825E3A4);
}

void sub_1D42CD40C()
{
  JUMPOUT(0x1D825E41CLL);
}

void type metadata accessor for SharedSoundPrint100k.Configuration.CodingKeys()
{
  JUMPOUT(0x1D825E3A4);
}

uint64_t sub_1D42CD428(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D42CD468 + 4 * byte_1D4524C6E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D42CD488 + 4 * byte_1D4524C73[v4]))();
}

_BYTE *sub_1D42CD468(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D42CD488(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D42CD490(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D42CD498(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D42CD4A0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D42CD4A8(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_1D42CD4B4()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D42CD4C4()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D42CD4D4()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D42CD4E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8))(v1, *(_QWORD *)(v2 - 120));
}

void sub_1D42CD4F4()
{
  type metadata accessor for SharedSoundPrint100k.Configuration.CodingKeys();
}

uint64_t sub_1D42CD500()
{
  sub_1D42CFC6C();
  sub_1D451B97C();
  sub_1D42CFC6C();
  sub_1D451B970();
  return sub_1D451B970();
}

BOOL sub_1D42CD560(int a1, int a2, int a3, unsigned int a4, double a5, double a6, double a7, double a8)
{
  _BOOL4 v9;

  v9 = a5 != a7 || a1 != a3;
  if (a6 != a8)
    v9 = 1;
  return ((v9 | a2 ^ a4 | ((a2 ^ a4) >> 8)) & 1) == 0;
}

uint64_t sub_1D42CD58C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v7;

  v2 = a1 == 0x6152656C706D6173 && a2 == 0xEA00000000006574;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7A69536B636F6C62 && a2 == 0xE900000000000065;
    if (v6 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000016 && a2 == 0x80000001D4550CC0 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x80000001D4550CE0 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else if (a1 == 0xD000000000000014 && a2 == 0x80000001D4550D00)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else
    {
      v7 = sub_1D451B820();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 4;
      else
        return 5;
    }
  }
}

uint64_t sub_1D42CD7A0()
{
  return 5;
}

uint64_t sub_1D42CD7A8()
{
  sub_1D451B958();
  sub_1D451B964();
  return sub_1D451B994();
}

uint64_t sub_1D42CD7EC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D42CD824 + 4 * byte_1D4524F90[a1]))(0x6152656C706D6173, 0xEA00000000006574);
}

uint64_t sub_1D42CD824()
{
  return 0x7A69536B636F6C62;
}

unint64_t sub_1D42CD840()
{
  return 0xD000000000000016;
}

uint64_t sub_1D42CD894(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = sub_1D42B28FC(&qword_1EFE49D30);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1D42CB210();
  v7 = v6 - v5;
  sub_1D42B5528(a1, a1[3]);
  sub_1D42CF774();
  sub_1D451BA24();
  sub_1D42CFBF4();
  if (!v1)
  {
    sub_1D451B790();
    sub_1D42CFBF4();
    sub_1D42CFBE4();
    sub_1D42CFBE4();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1D42CDA00()
{
  sub_1D42BE9A8();
  sub_1D42CD500();
  return sub_1D42CB230();
}

uint64_t sub_1D42CDA5C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1D42B28FC(&qword_1EFE49D20);
  MEMORY[0x1E0C80A78](v2);
  sub_1D42CB210();
  sub_1D42B5528(a1, a1[3]);
  sub_1D42CF774();
  sub_1D451BA0C();
  sub_1D42CFBB4();
  v3 = sub_1D451B6B8();
  sub_1D42CFBB4();
  sub_1D42CFBC4();
  sub_1D42CFBC4();
  sub_1D42CFC04();
  sub_1D42B5400((uint64_t)a1);
  return v3;
}

uint64_t sub_1D42CDBEC()
{
  return sub_1D42CD7A8();
}

uint64_t sub_1D42CDBF4()
{
  sub_1D451B958();
  sub_1D451B964();
  return sub_1D451B994();
}

uint64_t sub_1D42CDC34()
{
  unsigned __int8 *v0;

  return sub_1D42CD7EC(*v0);
}

uint64_t sub_1D42CDC3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D42CD58C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D42CDC60@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D42CD7A0();
  *a1 = result;
  return result;
}

uint64_t sub_1D42CDC84()
{
  sub_1D42CF774();
  return sub_1D451BA3C();
}

uint64_t sub_1D42CDCAC()
{
  sub_1D42CF774();
  return sub_1D451BA48();
}

uint64_t sub_1D42CDCD4()
{
  return sub_1D42CDA00();
}

uint64_t sub_1D42CDCFC()
{
  return sub_1D42CD500();
}

uint64_t sub_1D42CDD24()
{
  sub_1D451B958();
  sub_1D42CD500();
  return sub_1D451B994();
}

uint64_t sub_1D42CDD9C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  __int16 v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_1D42CDA5C(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = v6;
    *(_DWORD *)(a2 + 8) = result;
    *(_QWORD *)(a2 + 16) = v7;
    *(_BYTE *)(a2 + 24) = v5 & 1;
    *(_BYTE *)(a2 + 25) = HIBYTE(v5) & 1;
  }
  return result;
}

uint64_t sub_1D42CDDDC(_QWORD *a1)
{
  return sub_1D42CD894(a1);
}

BOOL sub_1D42CDE14(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;

  if (*(_BYTE *)(a1 + 25))
    v2 = 256;
  else
    v2 = 0;
  if (*(_BYTE *)(a2 + 25))
    v3 = 256;
  else
    v3 = 0;
  return sub_1D42CD560(*(_DWORD *)(a1 + 8), v2 | *(unsigned __int8 *)(a1 + 24), *(_DWORD *)(a2 + 8), v3 | *(unsigned __int8 *)(a2 + 24), *(double *)a1, *(double *)(a1 + 16), *(double *)a2, *(double *)(a2 + 16));
}

double sub_1D42CDE80()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR___SNNullRequest_impl);
}

void sub_1D42CDEB0(double a1)
{
  uint64_t v1;

  *(double *)(v1 + OBJC_IVAR___SNNullRequest_impl) = a1;
}

uint64_t sub_1D42CDEE0()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + OBJC_IVAR___SNNullRequest_impl + 8);
}

uint64_t sub_1D42CDF18(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + OBJC_IVAR___SNNullRequest_impl + 8) = result;
  return result;
}

double sub_1D42CDF4C()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR___SNNullRequest_impl + 16);
}

void sub_1D42CDF80(double a1)
{
  uint64_t v1;

  *(double *)(v1 + OBJC_IVAR___SNNullRequest_impl + 16) = a1;
}

uint64_t sub_1D42CDFB8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___SNNullRequest_impl + 24);
}

uint64_t sub_1D42CDFF0(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR___SNNullRequest_impl + 24) = result;
  return result;
}

uint64_t sub_1D42CE028()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___SNNullRequest_impl + 25);
}

uint64_t sub_1D42CE060(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR___SNNullRequest_impl + 25) = result;
  return result;
}

uint64_t sub_1D42CE074()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t result;

  sub_1D42CFC38();
  v4 = *(_BYTE *)(v3 + 24);
  v5 = *(_BYTE *)(v3 + 25);
  type metadata accessor for SNNullDetector();
  result = sub_1D42B6F40();
  *(_QWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = v0;
  *(_QWORD *)(result + 24) = v1;
  *(_QWORD *)(result + 32) = v2;
  *(_BYTE *)(result + 44) = v4;
  *(_BYTE *)(result + 45) = v5;
  return result;
}

id sub_1D42CE0E0()
{
  char *v0;
  objc_class *v1;
  char *v2;
  objc_super v4;

  v1 = (objc_class *)sub_1D42B7104();
  v2 = &v0[OBJC_IVAR___SNNullRequest_impl];
  *(_QWORD *)v2 = 0;
  *((_DWORD *)v2 + 2) = 1;
  *((_QWORD *)v2 + 2) = 0;
  *((_WORD *)v2 + 12) = 1;
  v4.receiver = v0;
  v4.super_class = v1;
  return objc_msgSendSuper2(&v4, sel_init);
}

id SNNullRequest.copy(with:)@<X0>(_QWORD *a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  objc_class *v5;
  uint64_t v6;
  char v7;
  char v8;
  Class v9;
  char *v10;
  char *v11;
  id result;
  objc_super v13;

  v5 = (objc_class *)sub_1D42B7104();
  sub_1D42CFC38();
  v7 = *(_BYTE *)(v6 + 24);
  v8 = *(_BYTE *)(v6 + 25);
  v10 = (char *)objc_allocWithZone(v9);
  v11 = &v10[OBJC_IVAR___SNNullRequest_impl];
  *(_QWORD *)v11 = v2;
  *((_DWORD *)v11 + 2) = v1;
  *((_QWORD *)v11 + 2) = v3;
  v11[24] = v7;
  v11[25] = v8;
  v13.receiver = v10;
  v13.super_class = v5;
  result = objc_msgSendSuper2(&v13, sel_init);
  a1[3] = v5;
  *a1 = result;
  return result;
}

uint64_t SNNullRequest.hash.getter()
{
  sub_1D42BE9A8();
  sub_1D42CD500();
  return sub_1D42CB230();
}

BOOL SNNullRequest.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  double v3;
  int v4;
  double v5;
  int v6;
  int v7;
  double v8;
  int v9;
  double v10;
  int v11;
  int v12;
  int v13;
  int v14;
  BOOL v15;
  char *v17;
  _BYTE v18[32];
  _OWORD v19[2];
  __int128 v20;
  uint64_t v21;

  sub_1D42B7104();
  sub_1D42B28B4(a1, (uint64_t)&v20);
  if (v21)
  {
    sub_1D42B293C(&v20, v19);
    sub_1D42B294C((uint64_t)v19, (uint64_t)v18);
    if (swift_dynamicCast() && v17)
    {
      v3 = *(double *)(v1 + OBJC_IVAR___SNNullRequest_impl);
      v4 = *(_DWORD *)(v1 + OBJC_IVAR___SNNullRequest_impl + 8);
      v5 = *(double *)(v1 + OBJC_IVAR___SNNullRequest_impl + 16);
      v6 = *(unsigned __int8 *)(v1 + OBJC_IVAR___SNNullRequest_impl + 24);
      v7 = *(unsigned __int8 *)(v1 + OBJC_IVAR___SNNullRequest_impl + 25);
      v8 = *(double *)&v17[OBJC_IVAR___SNNullRequest_impl];
      v9 = *(_DWORD *)&v17[OBJC_IVAR___SNNullRequest_impl + 8];
      v10 = *(double *)&v17[OBJC_IVAR___SNNullRequest_impl + 16];
      v11 = v17[OBJC_IVAR___SNNullRequest_impl + 24];
      v12 = v17[OBJC_IVAR___SNNullRequest_impl + 25];

      if (v7)
        v13 = 256;
      else
        v13 = 0;
      if (v12)
        v14 = 256;
      else
        v14 = 0;
      v15 = sub_1D42CD560(v4, v13 | v6, v9, v14 | v11, v3, v5, v8, v10);
    }
    else
    {
      v15 = 0;
    }
    sub_1D42B5400((uint64_t)v19);
  }
  else
  {
    return 0;
  }
  return v15;
}

id SNNullRequest.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return SNNullRequest.init(coder:)(a1);
}

id SNNullRequest.init(coder:)(void *a1)
{
  void *v1;
  void *v2;
  objc_class *v4;
  id v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  __int16 v13;
  char *v14;
  char *v15;
  id v16;
  objc_super v18;

  v2 = v1;
  v4 = (objc_class *)sub_1D42CFC30();
  v5 = v2;
  v6 = sub_1D42B10F4();
  v8 = v7;
  v9 = v6;
  v11 = v10;
  v13 = v12;

  v14 = (char *)objc_allocWithZone(v4);
  v15 = &v14[OBJC_IVAR___SNNullRequest_impl];
  *(_QWORD *)v15 = v8;
  *((_DWORD *)v15 + 2) = v9;
  *((_QWORD *)v15 + 2) = v11;
  v15[24] = v13 & 1;
  v15[25] = HIBYTE(v13) & 1;
  v18.receiver = v14;
  v18.super_class = v4;
  v16 = objc_msgSendSuper2(&v18, sel_init);

  sub_1D42CFC30();
  sub_1D42CFB94();
  return v16;
}

Swift::Void __swiftcall SNNullRequest.encode(with:)(NSCoder with)
{
  uint64_t v1;
  __int16 v2;

  if (*(_BYTE *)(v1 + OBJC_IVAR___SNNullRequest_impl + 25))
    v2 = 256;
  else
    v2 = 0;
  sub_1D42AF0D8(*(_DWORD *)(v1 + OBJC_IVAR___SNNullRequest_impl + 8), v2 | *(unsigned __int8 *)(v1 + OBJC_IVAR___SNNullRequest_impl + 24), *(double *)(v1 + OBJC_IVAR___SNNullRequest_impl), *(double *)(v1 + OBJC_IVAR___SNNullRequest_impl + 16));
}

uint64_t static SNNullRequest.supportsSecureCoding.getter()
{
  return 1;
}

id SNNullRequest.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_1D42B7104();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

_UNKNOWN **sub_1D42CE71C()
{
  uint64_t v0;
  _UNKNOWN **result;

  result = (_UNKNOWN **)sub_1D42CE074();
  if (v0)
    return &off_1E97A0758;
  return result;
}

uint64_t sub_1D42CE744()
{
  sub_1D42BE9A8();
  sub_1D451B964();
  return sub_1D42CB230();
}

uint64_t sub_1D42CE77C()
{
  return sub_1D42CE744();
}

id sub_1D42CE784(int a1, char a2, double a3)
{
  void *v3;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v30;
  __int128 v31;
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v7 = objc_opt_self();
  *(_QWORD *)&v31 = 0;
  v8 = sub_1D45001AC(v7, (uint64_t)&v31);
  if (v8)
  {
    v9 = (id)v31;
    sub_1D451A6C8();
    v10 = sub_1D42CFB78();
    v14 = sub_1D44FD014(v10, v11, v12, v13);

    v15 = (void *)v31;
    if (v14)
    {
      v16 = (id)v31;
      if ((a2 & 1) != 0)
      {
        v15 = (void *)sub_1D451A6C8();
        *(_QWORD *)&v31 = 0;
        v17 = sub_1D44FD534(v7, v8, v15, 1, (uint64_t)&v31);
      }
      else
      {
        sub_1D451A6C8();
        v20 = sub_1D42CFB78();
        v17 = sub_1D44FD2A4(v20, v21, v22, v23);
      }
      v24 = v17;

      if (v24)
      {
        v25 = (id)v31;
        if ((~*(_QWORD *)&a3 & 0x7FF0000000000000) != 0)
        {
          if (a3 > -1.0)
          {
            if (a3 < 4294967300.0)
            {
              sub_1D450053C(a3, a1, 1, (uint64_t)&v31);
              v30 = 0;
              if (!sub_1D45002DC(v7, v8, v14, v24, 0, 0, &v31, (uint64_t)&v30))
              {
                v28 = v30;
                sub_1D4519AA4();

                sub_1D42B6F54();
                goto LABEL_19;
              }
              if (a3 > -9.22337204e18)
              {
                if (a3 < 9.22337204e18)
                {
                  v26 = v30;
                  sub_1D44F3DE8((uint64_t)v8);
                  sub_1D44F44A0((uint64_t)v8);

LABEL_19:
                  return v8;
                }
LABEL_25:
                __break(1u);
              }
LABEL_24:
              __break(1u);
              goto LABEL_25;
            }
LABEL_23:
            __break(1u);
            goto LABEL_24;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_23;
      }
      v27 = (id)v31;
      sub_1D4519AA4();

      sub_1D42B6F54();
    }
    else
    {
      v19 = (id)v31;
      sub_1D4519AA4();

      sub_1D42B6F54();
    }

  }
  else
  {
    v18 = (id)v31;
    sub_1D4519AA4();

    sub_1D42B6F54();
  }
  return v8;
}

CMTimeValue sub_1D42CEA64(void *a1, int64_t a2)
{
  CMTimeValue value;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  id v13;
  int64_t v14;
  int32_t v15;
  uint64_t v16;
  CMTimeEpoch epoch;
  int32_t v18;
  id v19;
  uint64_t v21;
  char *v22;
  double v23;
  double v24;
  CMTimeValue v25;
  char *v26;
  CMTimeRange v27;
  CMTime duration;
  CMTime start;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  CMTimeRange v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  if (*(_BYTE *)(v3 + 45) != 1)
  {
    v6 = v3;
    v9 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SNNullResult()), sel_init);
    v10 = objc_opt_self();
    v27.start.value = 0;
    v11 = (char *)sub_1D4500E1C(v10, a1, (uint64_t)&v27);
    value = v27.start.value;
    if (v11)
    {
      v12 = v11;
      v13 = (id)v27.start.value;
      v14 = sub_1D451B928();
      v15 = sub_1D42CFC90();
      if (v15 < 0)
      {
        __break(1u);
      }
      else
      {
        v26 = v9;
        CMTimeMake(&v27.start, v14, v15);
        value = v27.start.value;
        v16 = *(_QWORD *)&v27.start.timescale;
        epoch = v27.start.epoch;
        v18 = sub_1D42CFC90();
        if ((v18 & 0x80000000) == 0)
        {
          CMTimeMake(&v27.start, a2, v18);
          duration = v27.start;
          start.value = value;
          *(_QWORD *)&start.timescale = v16;
          start.epoch = epoch;
          CMTimeRangeMake(&v27, &start, &duration);
          v35 = v27;
          sub_1D42CFC24();
          if (!v4)
          {
            sub_1D451AEE4();
            sub_1D42CFC24();
            sub_1D451AEF0();
            v21 = v34;
            v22 = &v26[OBJC_IVAR___SNNullResult_impl];
            *(_QWORD *)v22 = v30;
            *((_QWORD *)v22 + 1) = v31;
            *((_OWORD *)v22 + 1) = v32;
            *((_QWORD *)v22 + 4) = v33;
            *((_QWORD *)v22 + 5) = v21;
            v23 = *(double *)(v6 + 32) * (double)a2;
            v24 = v23 / (double)sub_1D42CFC90() * 1000000.0;
            if ((~*(_QWORD *)&v24 & 0x7FF0000000000000) != 0)
            {
              if (v24 > -1.0)
              {
                if (v24 < 4294967300.0)
                {
                  usleep(v24);
                  sub_1D42B28FC(&qword_1EFE40410);
                  v25 = sub_1D42B6F40();
                  *(_OWORD *)(v25 + 16) = xmmword_1D4525300;
                  *(_QWORD *)(v25 + 32) = v26;
                  v27.start.value = v25;
                  sub_1D451A950();
                  value = v27.start.value;

                  return value;
                }
LABEL_20:
                __break(1u);
              }
LABEL_19:
              __break(1u);
              goto LABEL_20;
            }
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }

LABEL_10:
          return value;
        }
      }
      __break(1u);
      goto LABEL_18;
    }
    v12 = v9;
    v19 = (id)v27.start.value;
    sub_1D4519AA4();

    swift_willThrow();
    goto LABEL_10;
  }
  sub_1D42CF5C8();
  sub_1D42B6D0C();
  *v5 = 0;
  swift_willThrow();
  return value;
}

id sub_1D42CED84()
{
  uint64_t v0;
  void *v1;
  _BYTE *v3;

  v1 = *(void **)(v0 + 16);
  if (v1)
    return v1;
  sub_1D42CF5C8();
  sub_1D42B6D0C();
  *v3 = 1;
  return (id)swift_willThrow();
}

void sub_1D42CEDDC(double a1)
{
  double *v1;
  uint64_t v2;
  double v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v3 = *v1;
  if (v1[3] <= 0.0)
    v4 = a1;
  else
    v4 = v1[3];
  v5 = sub_1D42B6F40();
  *(double *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v1;
  *(double *)(v5 + 32) = v3;
  sub_1D42BE934();
  v6 = sub_1D42CEEA4();
  swift_release();
  if (!v2)
  {
    v7 = (void *)*((_QWORD *)v1 + 2);
    *((_QWORD *)v1 + 2) = v6;

  }
}

id sub_1D42CEE70@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>, double a3@<D0>)
{
  uint64_t v3;
  id result;

  result = sub_1D42CE784(*(_DWORD *)(a1 + 40), *(_BYTE *)(a1 + 44), a3);
  if (!v3)
    *a2 = result;
  return result;
}

uint64_t sub_1D42CEEA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char aBlock[8];
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;

  sub_1D42CFBD4();
  v32 = *MEMORY[0x1E0C80C00];
  objc_opt_self();
  v2 = sub_1D42B6F40();
  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = v0;
  v30 = sub_1D42CF68C;
  v31 = v2;
  sub_1D42CFC78((uint64_t)sub_1D42CF3AC, v25, MEMORY[0x1E0C809B0], 1107296256, v28, v29);
  sub_1D42BE934();
  v3 = sub_1D42CFC14();
  *(_QWORD *)aBlock = 0;
  v5 = sub_1D42CFB6C(v3, v4, (uint64_t)aBlock);
  sub_1D42CFBA8();
  v6 = *(id *)aBlock;
  if (v0)
  {
    sub_1D42CFC60();
    v7 = sub_1D42B70A8();
    sub_1D42CFC4C(v7);
    sub_1D42CF6AC();
    v8 = sub_1D42CFC84();
    if ((v8 & 1) != 0)
    {
      sub_1D42CFC58(v8, v9, v10, v11, v12, v13, v14);
      return v26;
    }
    else
    {
      sub_1D42CF6E8();
      v16 = sub_1D42B6D0C();
      v18 = sub_1D42CFB5C(v16, v17);
      return sub_1D42CFC58(v18, v19, v20, v21, v22, v23, v24);
    }
  }
  else
  {
    sub_1D42CFC1C();
    sub_1D42CFC98();
    return sub_1D42B7124();
  }
}

uint64_t sub_1D42CEFFC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  id aBlock[6];
  _BYTE v12[32];
  uint64_t v13;

  sub_1D42CFBD4();
  v13 = *MEMORY[0x1E0C80C00];
  objc_opt_self();
  v2 = (_QWORD *)sub_1D42B6F40();
  v2[2] = v1;
  v2[3] = v0;
  aBlock[4] = sub_1D42CF76C;
  aBlock[5] = v2;
  aBlock[0] = (id)MEMORY[0x1E0C809B0];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_1D42CF3AC;
  aBlock[3] = &unk_1E97B3790;
  _Block_copy(aBlock);
  sub_1D42BE934();
  v3 = sub_1D42CFC14();
  aBlock[0] = 0;
  v5 = sub_1D42CFB6C(v3, v4, (uint64_t)aBlock);
  sub_1D42CFBA8();
  v6 = aBlock[0];
  if (v0)
  {
    sub_1D451B208();
    sub_1D42B70A8();
    sub_1D42B294C((uint64_t)v12, (uint64_t)aBlock);
    sub_1D42B28FC(&qword_1EFE49D18);
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_1D42B5400((uint64_t)v12);
      return v10;
    }
    else
    {
      sub_1D42CF6E8();
      v8 = sub_1D42B6D0C();
      sub_1D42CFB5C(v8, v9);
      return sub_1D42B5400((uint64_t)v12);
    }
  }
  else
  {
    sub_1D42CFC1C();
    sub_1D42CFC98();
    return sub_1D42B7124();
  }
}

uint64_t sub_1D42CF184()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  char aBlock[8];
  uint64_t v20;
  uint64_t v21;
  void (*v22)();
  uint64_t v23;
  uint64_t v24;

  sub_1D42CFBD4();
  v24 = *MEMORY[0x1E0C80C00];
  objc_opt_self();
  v2 = sub_1D42B6F40();
  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = v0;
  v22 = sub_1D42CF81C;
  v23 = v2;
  sub_1D42CFC78((uint64_t)sub_1D42CF3AC, v18, MEMORY[0x1E0C809B0], 1107296256, v20, v21);
  sub_1D42BE934();
  v3 = sub_1D42CFC14();
  *(_QWORD *)aBlock = 0;
  v5 = sub_1D42CFB6C(v3, v4, (uint64_t)aBlock);
  sub_1D42CFBA8();
  v6 = *(id *)aBlock;
  if (v0)
  {
    sub_1D42CFC60();
    v7 = sub_1D42B70A8();
    sub_1D42CFC4C(v7);
    v8 = sub_1D42CFC84();
    if ((v8 & 1) == 0)
    {
      sub_1D42CF6E8();
      v16 = sub_1D42B6D0C();
      v8 = sub_1D42CFB5C(v16, v17);
    }
    return sub_1D42CFC58(v8, v9, v10, v11, v12, v13, v14);
  }
  else
  {
    sub_1D42CFC1C();
    sub_1D42CFC98();
    return sub_1D42B7124();
  }
}

void sub_1D42CF2D8()
{
  uint64_t v0;
  id v1;
  void *v2;
  _QWORD *v3;

  v1 = sub_1D42CED84();
  if (!v0)
  {
    v2 = v1;
    v3 = sub_1D44F65F4((uint64_t)v1);

    if (!v3)
      __break(1u);
  }
}

uint64_t sub_1D42CF330()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

CMTimeValue sub_1D42CF354(void *a1, int64_t a2)
{
  return sub_1D42CEA64(a1, a2);
}

unint64_t sub_1D42CF368()
{
  return 0xF000000000000007;
}

void sub_1D42CF370()
{
  sub_1D42CF2D8();
}

void sub_1D42CF384(double a1)
{
  sub_1D42CEDDC(a1);
}

id sub_1D42CF398()
{
  return sub_1D42CED84();
}

id sub_1D42CF3AC(uint64_t a1, uint64_t a2)
{
  void (*v3)(_QWORD *__return_ptr, uint64_t);
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD v12[3];
  uint64_t v13;

  v3 = *(void (**)(_QWORD *__return_ptr, uint64_t))(a1 + 32);
  sub_1D42BE934();
  v3(v12, a2);
  swift_release();
  v4 = v13;
  if (!v13)
    return 0;
  v5 = sub_1D42B5528(v12, v13);
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1D42CB210();
  v9 = v8 - v7;
  (*(void (**)(uint64_t))(v6 + 16))(v8 - v7);
  v10 = (void *)sub_1D451B814();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v4);
  sub_1D42B5400((uint64_t)v12);
  return v10;
}

uint64_t type metadata accessor for SNNullRequest()
{
  return objc_opt_self();
}

uint64_t method lookup function for SNNullRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for SNNullDetector()
{
  return objc_opt_self();
}

__n128 initializeWithCopy for NullRequest(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for NullRequest(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 26))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 24);
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NullRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 26) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 26) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for NullRequest()
{
  return &type metadata for NullRequest;
}

unint64_t sub_1D42CF58C()
{
  unint64_t result;

  result = qword_1EFE49D00;
  if (!qword_1EFE49D00)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452504C, &type metadata for NullRequest);
    atomic_store(result, (unint64_t *)&qword_1EFE49D00);
  }
  return result;
}

unint64_t sub_1D42CF5C8()
{
  unint64_t result;

  result = qword_1EFE49D08;
  if (!qword_1EFE49D08)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45252AC, &type metadata for SNNullDetector.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE49D08);
  }
  return result;
}

uint64_t sub_1D42CF604()
{
  swift_release();
  return swift_deallocObject();
}

id sub_1D42CF628@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1D42CEE70(*(_QWORD *)(v1 + 24), a1, *(double *)(v1 + 16));
}

void sub_1D42CF644(uint64_t a1, uint64_t a2)
{
  swift_retain();
  sub_1D43EC438(a1, a2);
}

void sub_1D42CF68C(uint64_t a1)
{
  uint64_t v1;

  sub_1D42CF644(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1D42CF694(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D42CF6A4()
{
  return swift_release();
}

unint64_t sub_1D42CF6AC()
{
  unint64_t result;

  result = qword_1EFE47A08;
  if (!qword_1EFE47A08)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFE47A08);
  }
  return result;
}

unint64_t sub_1D42CF6E8()
{
  unint64_t result;

  result = qword_1EFE49D10;
  if (!qword_1EFE49D10)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454E598, &type metadata for DSPGraphUtils.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE49D10);
  }
  return result;
}

void sub_1D42CF724(uint64_t a1, uint64_t a2)
{
  swift_retain();
  sub_1D43EC4B4(a1, a2);
}

void sub_1D42CF76C(uint64_t a1)
{
  uint64_t v1;

  sub_1D42CF724(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1D42CF774()
{
  unint64_t result;

  result = qword_1EFE49D28;
  if (!qword_1EFE49D28)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452525C, &type metadata for NullRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49D28);
  }
  return result;
}

void sub_1D42CF7B0()
{
  swift_retain();
  sub_1D43EC524();
}

uint64_t sub_1D42CF7F8()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1D42CF81C()
{
  sub_1D42CF7B0();
}

uint64_t getEnumTagSinglePayload for NullRequest.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 4) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v5 = v6 - 5;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for NullRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D42CF8F8 + 4 * byte_1D4524F9A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D42CF92C + 4 * byte_1D4524F95[v4]))();
}

uint64_t sub_1D42CF92C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D42CF934(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D42CF93CLL);
  return result;
}

uint64_t sub_1D42CF948(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D42CF950);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D42CF954(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D42CF95C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NullRequest.CodingKeys()
{
  return &type metadata for NullRequest.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for SNNullDetector.DomainError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D42CF9C4 + 4 * byte_1D4524FA4[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D42CF9F8 + 4 * byte_1D4524F9F[v4]))();
}

uint64_t sub_1D42CF9F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D42CFA00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D42CFA08);
  return result;
}

uint64_t sub_1D42CFA14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D42CFA1CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D42CFA20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D42CFA28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SNNullDetector.DomainError()
{
  return &type metadata for SNNullDetector.DomainError;
}

unint64_t sub_1D42CFA48()
{
  unint64_t result;

  result = qword_1EFE49D38;
  if (!qword_1EFE49D38)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452517C, &type metadata for SNNullDetector.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE49D38);
  }
  return result;
}

unint64_t sub_1D42CFA88()
{
  unint64_t result;

  result = qword_1EFE49D40;
  if (!qword_1EFE49D40)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4525234, &type metadata for NullRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49D40);
  }
  return result;
}

unint64_t sub_1D42CFAC8()
{
  unint64_t result;

  result = qword_1EFE49D48;
  if (!qword_1EFE49D48)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45251A4, &type metadata for NullRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49D48);
  }
  return result;
}

unint64_t sub_1D42CFB08()
{
  unint64_t result;

  result = qword_1EFE49D50;
  if (!qword_1EFE49D50)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45251CC, &type metadata for NullRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49D50);
  }
  return result;
}

uint64_t sub_1D42CFB5C(uint64_t a1, _BYTE *a2)
{
  char v2;

  *a2 = v2;
  return swift_willThrow();
}

id sub_1D42CFB6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v4;

  return sub_1D44FCF34(v4, v3, a3);
}

uint64_t sub_1D42CFB78()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D42CFB94()
{
  return swift_deallocPartialClassInstance();
}

void sub_1D42CFBA8()
{
  const void *v0;

  _Block_release(v0);
}

uint64_t sub_1D42CFBB4()
{
  return sub_1D451B664();
}

uint64_t sub_1D42CFBC4()
{
  return sub_1D451B658();
}

uint64_t sub_1D42CFBE4()
{
  return sub_1D451B730();
}

uint64_t sub_1D42CFBF4()
{
  return sub_1D451B73C();
}

uint64_t sub_1D42CFC04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1D42CFC14()
{
  return swift_release();
}

uint64_t sub_1D42CFC1C()
{
  return sub_1D4519AA4();
}

uint64_t sub_1D42CFC24()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_1D42CFC30()
{
  return swift_getObjectType();
}

uint64_t sub_1D42CFC4C(uint64_t a1, ...)
{
  uint64_t v2;
  va_list va;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  va_list va1;

  va_start(va1, a1);
  va_start(va, a1);
  v2 = va_arg(va1, _QWORD);
  v4 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  return sub_1D42B294C((uint64_t)va1, (uint64_t)va);
}

uint64_t sub_1D42CFC58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  return sub_1D42B5400((uint64_t)va);
}

uint64_t sub_1D42CFC60()
{
  return sub_1D451B208();
}

uint64_t sub_1D42CFC6C()
{
  return sub_1D451B988();
}

void *sub_1D42CFC78@<X0>(uint64_t a1@<X8>, uint64_t a2, char aBlock, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  a5 = a1;
  a6 = v6;
  return _Block_copy(&aBlock);
}

uint64_t sub_1D42CFC84()
{
  return swift_dynamicCast();
}

uint64_t sub_1D42CFC90()
{
  uint64_t v0;

  return sub_1D44F2078(v0);
}

void sub_1D42CFC98()
{
  void *v0;

}

void sub_1D42CFCA0()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)v0;
  v2 = *(void **)(v0 + 8);
  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
  {
    sub_1D451B964();
    sub_1D451A74C();
  }
  else
  {
    sub_1D451B964();
    objc_msgSend(v1, sel_hash);
    sub_1D451B964();
    sub_1D42B5C3C(v1, v2, 0);
  }
}

uint64_t sub_1D42CFD24(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  char v4;
  void *v5;
  void *v6;
  char v7;
  unsigned __int8 v9;
  void *v10;
  void *v11;
  char v12;

  v3 = *(void **)a1;
  v2 = *(void **)(a1 + 8);
  v4 = *(_BYTE *)(a1 + 16);
  v6 = *(void **)a2;
  v5 = *(void **)(a2 + 8);
  v7 = *(_BYTE *)(a2 + 16);
  if ((v4 & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 16) & 1) != 0)
    {
      if (v3 == v6 && v2 == v5)
        v9 = 1;
      else
        v9 = sub_1D42D1158();
      sub_1D42B5CE4(v3, v2, 1);
      sub_1D42B5CE4(v6, v5, 1);
      sub_1D42B5C3C(v3, v2, 1);
      v10 = v6;
      v11 = v5;
      v12 = 1;
      goto LABEL_13;
    }
  }
  else if ((*(_BYTE *)(a2 + 16) & 1) == 0)
  {
    sub_1D42D10D4();
    sub_1D42D10F4();
    sub_1D42D10F4();
    sub_1D42D10D4();
    v9 = objc_msgSend(v3, sel_isEqual_, v6);
    sub_1D42B5C3C(v3, v2, 0);
    sub_1D42D10E4();
    sub_1D42D10E4();
    v10 = v3;
    v11 = v2;
    v12 = 0;
LABEL_13:
    sub_1D42B5C3C(v10, v11, v12);
    return v9 & 1;
  }
  sub_1D42B5CE4(*(void **)a1, v2, v4);
  sub_1D42B5CE4(v6, v5, v7);
  sub_1D42B5C3C(v3, v2, v4);
  sub_1D42B5C3C(v6, v5, v7);
  v9 = 0;
  return v9 & 1;
}

uint64_t sub_1D42CFE6C()
{
  return 12383;
}

uint64_t sub_1D42CFE78(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C65646F4D6C6DLL && a2 == 0xE700000000000000;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D4550D80)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D42CFF64(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000014;
  else
    return 0x6C65646F4D6C6DLL;
}

uint64_t sub_1D42CFFA0(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1D42D1158();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void sub_1D42D0004()
{
  sub_1D42BE9A8();
  sub_1D42D1094();
  sub_1D42CB230();
  sub_1D42BE978();
}

void sub_1D42D0028(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;

  v3 = sub_1D42B28FC(&qword_1EFE49DB8);
  v18 = *(_QWORD *)(v3 - 8);
  v19 = v3;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v4);
  sub_1D42CB210();
  v7 = v6 - v5;
  v8 = sub_1D42B28FC(&qword_1EFE49DC0);
  v16 = *(_QWORD *)(v8 - 8);
  v17 = v8;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v9);
  sub_1D42CB210();
  v12 = v11 - v10;
  sub_1D42B28FC(&qword_1EFE49DC8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v13);
  sub_1D42CB210();
  v14 = *(void **)v1;
  v20 = *(void **)(v1 + 8);
  v15 = *(_BYTE *)(v1 + 16);
  sub_1D42B5528(a1, a1[3]);
  sub_1D42D0B70();
  sub_1D451BA24();
  if ((v15 & 1) != 0)
  {
    sub_1D42D114C();
    sub_1D451B6F4();
    sub_1D42B28FC(&qword_1EFE49D90);
    sub_1D42D0C24(&qword_1EFE49DD0, MEMORY[0x1E0DEA970], (uint64_t)&protocol conformance descriptor for <> RawRepresentableWrapper<A>);
    sub_1D451B760();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v7, v19);
    sub_1D42D10A0();
  }
  else
  {
    sub_1D42D0BE8();
    v14;
    sub_1D451B6F4();
    sub_1D42B28FC(&qword_1EFE49DA8);
    sub_1D42D0C84(&qword_1EFE49DD8, (uint64_t)&unk_1D4540694);
    sub_1D451B760();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v12, v17);
    sub_1D42D10A0();
    sub_1D42B5C3C(v14, v20, 0);
  }
  sub_1D42BE844();
}

uint64_t sub_1D42D0288()
{
  uint64_t v0;
  void *v1;
  void *v2;
  char v3;

  v1 = *(void **)v0;
  v2 = *(void **)(v0 + 8);
  v3 = *(_BYTE *)(v0 + 16);
  sub_1D42BE9A8();
  if ((v3 & 1) != 0)
  {
    sub_1D451B964();
    sub_1D451A74C();
  }
  else
  {
    sub_1D42D1094();
    objc_msgSend(v1, sel_hash);
    sub_1D451B964();
    sub_1D42B5C3C(v1, v2, 0);
  }
  return sub_1D42CB230();
}

void sub_1D42D0310(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t);
  _QWORD *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  sub_1D42B28FC(&qword_1EFE49D68);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v3);
  sub_1D42CB210();
  v29 = sub_1D42B28FC(&qword_1EFE49D70);
  MEMORY[0x1E0C80A78](v29);
  sub_1D42CB210();
  v4 = sub_1D42B28FC(&qword_1EFE49D78);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1D42CB210();
  v8 = v7 - v6;
  sub_1D42B5528(a1, a1[3]);
  sub_1D42D0B70();
  sub_1D451BA0C();
  if (v32)
    goto LABEL_10;
  v27 = a1;
  v33 = v5;
  v9 = sub_1D451B6D0();
  v10 = *(_QWORD *)(v9 + 16);
  v11 = v4;
  if (!v10)
  {
LABEL_8:
    v17 = sub_1D451B460();
    swift_allocError();
    v19 = v18;
    sub_1D42B28FC(&qword_1EFE49ED0);
    *v19 = &type metadata for ClassifierVariant;
    sub_1D451B61C();
    sub_1D451B454();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v19, *MEMORY[0x1E0DEC450], v17);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v8, v11);
    a1 = v27;
LABEL_10:
    v20 = (uint64_t)a1;
    goto LABEL_11;
  }
  v12 = *(_BYTE *)(v9 + 32);
  sub_1D43B7948(1, v10, v9, v9 + 32, 0, (2 * v10) | 1);
  v14 = v13;
  v16 = v15;
  swift_bridgeObjectRelease();
  if (v14 != v16 >> 1)
  {
    v11 = v4;
    goto LABEL_8;
  }
  if ((v12 & 1) != 0)
  {
    sub_1D42D114C();
    sub_1D42D110C();
    sub_1D451B610();
    sub_1D42B28FC(&qword_1EFE49D90);
    sub_1D42D0C24(&qword_1EFE49D98, MEMORY[0x1E0DEA9A0], (uint64_t)&protocol conformance descriptor for <> RawRepresentableWrapper<A>);
    sub_1D42D10B4();
    v21 = sub_1D42D1124();
    v22(v21);
    sub_1D42D1104();
    sub_1D42D10C4();
    v23 = v30;
    v24 = v31;
  }
  else
  {
    LOBYTE(v30) = 0;
    sub_1D42D0BE8();
    sub_1D42D110C();
    sub_1D451B610();
    sub_1D42B28FC(&qword_1EFE49DA8);
    sub_1D42D0C84(&qword_1EFE49DB0, (uint64_t)&unk_1D45406BC);
    sub_1D42D10B4();
    v25 = sub_1D42D1138();
    v26(v25);
    sub_1D42D1104();
    sub_1D42D10C4();
    v24 = 0;
    v23 = v30;
  }
  v20 = (uint64_t)a1;
  *(_QWORD *)a2 = v23;
  *(_QWORD *)(a2 + 8) = v24;
  *(_BYTE *)(a2 + 16) = v12;
LABEL_11:
  sub_1D42B5400(v20);
  sub_1D42BE844();
}

void sub_1D42D06E4()
{
  sub_1D42D0004();
}

uint64_t sub_1D42D0700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D42CFFA0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D42D0728()
{
  return sub_1D42BA688();
}

uint64_t sub_1D42D0740@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s13SoundAnalysis17_SNClassificationC20supportsSecureCodingSbvgZ_0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D42D0768()
{
  sub_1D42D0BAC();
  return sub_1D451BA3C();
}

uint64_t sub_1D42D0790()
{
  sub_1D42D0BAC();
  return sub_1D451BA48();
}

uint64_t sub_1D42D07B8()
{
  return sub_1D42BA644();
}

uint64_t sub_1D42D07C0()
{
  char *v0;

  return sub_1D42CFF64(*v0);
}

uint64_t sub_1D42D07C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D42CFE78(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D42D07EC()
{
  sub_1D42D0B70();
  return sub_1D451BA3C();
}

uint64_t sub_1D42D0814()
{
  sub_1D42D0B70();
  return sub_1D451BA48();
}

void sub_1D42D083C()
{
  sub_1D451B958();
  sub_1D42D1094();
  sub_1D42CB230();
  sub_1D42BE978();
}

uint64_t sub_1D42D0864()
{
  sub_1D42D0BE8();
  return sub_1D451BA3C();
}

uint64_t sub_1D42D088C()
{
  sub_1D42D0BE8();
  return sub_1D451BA48();
}

void sub_1D42D08B4(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1D42D0310(a1, a2);
}

void sub_1D42D08C8(_QWORD *a1)
{
  sub_1D42D0028(a1);
}

uint64_t sub_1D42D08E4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  char v3;

  v1 = *(void **)v0;
  v2 = *(void **)(v0 + 8);
  v3 = *(_BYTE *)(v0 + 16);
  sub_1D451B958();
  sub_1D451B964();
  if ((v3 & 1) != 0)
  {
    sub_1D451A74C();
  }
  else
  {
    objc_msgSend(v1, sel_hash);
    sub_1D451B964();
    sub_1D42B5C3C(v1, v2, 0);
  }
  return sub_1D451B994();
}

void destroy for ClassifierVariant(uint64_t a1)
{
  sub_1D42B5C3C(*(void **)a1, *(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s13SoundAnalysis17ClassifierVariantOwCP_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  char v5;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1D42B5CE4(*(void **)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ClassifierVariant(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  char v5;
  void *v6;
  void *v7;
  char v8;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1D42B5CE4(*(void **)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1D42B5C3C(v6, v7, v8);
  return a1;
}

__n128 initializeWithTake for ClassifierVariant(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ClassifierVariant(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_1D42B5C3C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClassifierVariant(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClassifierVariant(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1D42D0B0C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1D42D0B14(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ClassifierVariant()
{
  return &type metadata for ClassifierVariant;
}

unint64_t sub_1D42D0B34()
{
  unint64_t result;

  result = qword_1EFE49D60;
  if (!qword_1EFE49D60)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4525350, &type metadata for ClassifierVariant);
    atomic_store(result, (unint64_t *)&qword_1EFE49D60);
  }
  return result;
}

unint64_t sub_1D42D0B70()
{
  unint64_t result;

  result = qword_1EFE49D80;
  if (!qword_1EFE49D80)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4525728, &type metadata for ClassifierVariant.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49D80);
  }
  return result;
}

unint64_t sub_1D42D0BAC()
{
  unint64_t result;

  result = qword_1EFE49D88;
  if (!qword_1EFE49D88)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45256D8, &type metadata for ClassifierVariant.ClassifierIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49D88);
  }
  return result;
}

unint64_t sub_1D42D0BE8()
{
  unint64_t result;

  result = qword_1EFE49DA0;
  if (!qword_1EFE49DA0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4525688, &type metadata for ClassifierVariant.MlModelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49DA0);
  }
  return result;
}

uint64_t sub_1D42D0C24(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = sub_1D42B8B10(&qword_1EFE49D90);
    v8 = a2;
    result = MEMORY[0x1D825E41C](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D42D0C84(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1D42B8B10(&qword_1EFE49DA8);
    result = MEMORY[0x1D825E41C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ClassifierVariant.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D42D0D14 + 4 * byte_1D4525315[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D42D0D48 + 4 * byte_1D4525310[v4]))();
}

uint64_t sub_1D42D0D48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D42D0D50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D42D0D58);
  return result;
}

uint64_t sub_1D42D0D64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D42D0D6CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D42D0D70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D42D0D78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClassifierVariant.CodingKeys()
{
  return &type metadata for ClassifierVariant.CodingKeys;
}

ValueMetadata *type metadata accessor for ClassifierVariant.MlModelCodingKeys()
{
  return &type metadata for ClassifierVariant.MlModelCodingKeys;
}

uint64_t _s13SoundAnalysis17ClassifierVariantO17MlModelCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D42D0DEC + 4 * byte_1D452531A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D42D0E0C + 4 * byte_1D452531F[v4]))();
}

_BYTE *sub_1D42D0DEC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D42D0E0C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D42D0E14(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D42D0E1C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D42D0E24(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D42D0E2C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ClassifierVariant.ClassifierIdentifierCodingKeys()
{
  return &type metadata for ClassifierVariant.ClassifierIdentifierCodingKeys;
}

unint64_t sub_1D42D0E4C()
{
  unint64_t result;

  result = qword_1EFE49DE0;
  if (!qword_1EFE49DE0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45254F0, &type metadata for ClassifierVariant.ClassifierIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49DE0);
  }
  return result;
}

unint64_t sub_1D42D0E8C()
{
  unint64_t result;

  result = qword_1EFE49DE8;
  if (!qword_1EFE49DE8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45255A8, &type metadata for ClassifierVariant.MlModelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49DE8);
  }
  return result;
}

unint64_t sub_1D42D0ECC()
{
  unint64_t result;

  result = qword_1EFE49DF0;
  if (!qword_1EFE49DF0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4525660, &type metadata for ClassifierVariant.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49DF0);
  }
  return result;
}

unint64_t sub_1D42D0F0C()
{
  unint64_t result;

  result = qword_1EFE49DF8;
  if (!qword_1EFE49DF8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4525518, &type metadata for ClassifierVariant.MlModelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49DF8);
  }
  return result;
}

unint64_t sub_1D42D0F4C()
{
  unint64_t result;

  result = qword_1EFE49E00;
  if (!qword_1EFE49E00)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4525540, &type metadata for ClassifierVariant.MlModelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49E00);
  }
  return result;
}

unint64_t sub_1D42D0F8C()
{
  unint64_t result;

  result = qword_1EFE49E08;
  if (!qword_1EFE49E08)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4525460, &type metadata for ClassifierVariant.ClassifierIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49E08);
  }
  return result;
}

unint64_t sub_1D42D0FCC()
{
  unint64_t result;

  result = qword_1EFE49E10;
  if (!qword_1EFE49E10)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4525488, &type metadata for ClassifierVariant.ClassifierIdentifierCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49E10);
  }
  return result;
}

unint64_t sub_1D42D100C()
{
  unint64_t result;

  result = qword_1EFE49E18;
  if (!qword_1EFE49E18)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45255D0, &type metadata for ClassifierVariant.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49E18);
  }
  return result;
}

unint64_t sub_1D42D104C()
{
  unint64_t result;

  result = qword_1EFE49E20;
  if (!qword_1EFE49E20)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45255F8, &type metadata for ClassifierVariant.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49E20);
  }
  return result;
}

uint64_t sub_1D42D1094()
{
  return sub_1D451B964();
}

uint64_t sub_1D42D10A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 112) + 8))(v1, v0);
}

uint64_t sub_1D42D10B4()
{
  return sub_1D451B688();
}

uint64_t sub_1D42D10C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

id sub_1D42D10D4()
{
  void *v0;
  void *v1;

  return sub_1D42B5CE4(v1, v0, 0);
}

void sub_1D42D10E4()
{
  void *v0;
  void *v1;

  sub_1D42B5C3C(v1, v0, 0);
}

id sub_1D42D10F4()
{
  void *v0;
  void *v1;

  return sub_1D42B5CE4(v1, v0, 0);
}

uint64_t sub_1D42D1104()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1D42D1124()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D42D1138()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_1D42D114C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 96) = 1;
  return sub_1D42D0BAC();
}

uint64_t sub_1D42D1158()
{
  return sub_1D451B820();
}

uint64_t sub_1D42D1164()
{
  sub_1D42CFC6C();
  sub_1D451B97C();
  return sub_1D42CFC6C();
}

BOOL sub_1D42D11A8(int a1, int a2, double a3, double a4, double a5, double a6)
{
  _BOOL4 v7;

  v7 = a3 == a5 && a1 == a2;
  return a4 == a6 && v7;
}

uint64_t sub_1D42D11C0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v7;

  v2 = a1 == 0x6152656C706D6173 && a2 == 0xEA00000000006574;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7A69536B636F6C62 && a2 == 0xE900000000000065;
    if (v6 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x80000001D4550DB0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = sub_1D451B820();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1D42D1324(char a1)
{
  if (!a1)
    return 0x6152656C706D6173;
  if (a1 == 1)
    return 0x7A69536B636F6C62;
  return 0xD000000000000012;
}

uint64_t sub_1D42D1388(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = sub_1D42B28FC(&qword_1EFE49E70);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D42B5528(a1, a1[3]);
  sub_1D42D2EC4();
  sub_1D451BA24();
  v8[15] = 0;
  sub_1D42CFBF4();
  if (!v1)
  {
    v8[14] = 1;
    sub_1D451B790();
    v8[13] = 2;
    sub_1D42CFBF4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_1D42D14BC()
{
  sub_1D42BE9A8();
  sub_1D42D1164();
  sub_1D42CB230();
  sub_1D42CB390();
}

uint64_t sub_1D42D1500(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v4;

  v2 = sub_1D42B28FC(&qword_1EFE49E60);
  MEMORY[0x1E0C80A78](v2);
  sub_1D42B5528(a1, a1[3]);
  sub_1D42D2EC4();
  sub_1D451BA0C();
  sub_1D42CFBB4();
  v4 = sub_1D451B6B8();
  sub_1D42CFBB4();
  sub_1D42CFC04();
  sub_1D42B5400((uint64_t)a1);
  return v4;
}

uint64_t sub_1D42D1650()
{
  char *v0;

  return sub_1D42D1324(*v0);
}

uint64_t sub_1D42D1658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D42D11C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D42D167C()
{
  sub_1D42D2EC4();
  return sub_1D451BA3C();
}

uint64_t sub_1D42D16A4()
{
  sub_1D42D2EC4();
  return sub_1D451BA48();
}

void sub_1D42D16CC()
{
  sub_1D42D14BC();
}

uint64_t sub_1D42D16DC()
{
  return sub_1D42D1164();
}

uint64_t sub_1D42D16EC()
{
  sub_1D451B958();
  sub_1D42D1164();
  return sub_1D451B994();
}

uint64_t sub_1D42D1744@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_1D42D1500(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = v5;
    *(_DWORD *)(a2 + 8) = result;
    *(_QWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1D42D1774(_QWORD *a1)
{
  return sub_1D42D1388(a1);
}

BOOL sub_1D42D1794(uint64_t a1, uint64_t a2)
{
  return sub_1D42D11A8(*(_DWORD *)(a1 + 8), *(_DWORD *)(a2 + 8), *(double *)a1, *(double *)(a1 + 16), *(double *)a2, *(double *)(a2 + 16));
}

double sub_1D42D17D8()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR___SNDetectSignalThresholdRequest_impl);
}

void sub_1D42D1808(double a1)
{
  uint64_t v1;

  *(double *)(v1 + OBJC_IVAR___SNDetectSignalThresholdRequest_impl) = a1;
}

uint64_t sub_1D42D1838()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + OBJC_IVAR___SNDetectSignalThresholdRequest_impl + 8);
}

uint64_t sub_1D42D1870(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + OBJC_IVAR___SNDetectSignalThresholdRequest_impl + 8) = result;
  return result;
}

double sub_1D42D18A4()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR___SNDetectSignalThresholdRequest_impl + 16);
}

void sub_1D42D18D8(double a1)
{
  uint64_t v1;

  *(double *)(v1 + OBJC_IVAR___SNDetectSignalThresholdRequest_impl + 16) = a1;
}

uint64_t sub_1D42D18EC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  sub_1D42CFC38();
  type metadata accessor for SNDetectSignalThresholdRequestImpl();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = v1;
  *(_DWORD *)(result + 32) = v0;
  *(_QWORD *)(result + 40) = v2;
  return result;
}

id sub_1D42D1948()
{
  char *v0;
  objc_class *v1;
  char *v2;
  objc_super v4;

  v1 = (objc_class *)sub_1D42B7104();
  v2 = &v0[OBJC_IVAR___SNDetectSignalThresholdRequest_impl];
  *(_QWORD *)v2 = 0;
  *((_DWORD *)v2 + 2) = 1;
  *((_QWORD *)v2 + 2) = 0;
  v4.receiver = v0;
  v4.super_class = v1;
  return objc_msgSendSuper2(&v4, sel_init);
}

id SNDetectSignalThresholdRequest.copy(with:)@<X0>(_QWORD *a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  objc_class *v5;
  Class v6;
  char *v7;
  char *v8;
  id result;
  objc_super v10;

  v5 = (objc_class *)sub_1D42B7104();
  sub_1D42CFC38();
  v7 = (char *)objc_allocWithZone(v6);
  v8 = &v7[OBJC_IVAR___SNDetectSignalThresholdRequest_impl];
  *(_QWORD *)v8 = v2;
  *((_DWORD *)v8 + 2) = v1;
  *((_QWORD *)v8 + 2) = v3;
  v10.receiver = v7;
  v10.super_class = v5;
  result = objc_msgSendSuper2(&v10, sel_init);
  a1[3] = v5;
  *a1 = result;
  return result;
}

void SNDetectSignalThresholdRequest.hash.getter()
{
  sub_1D42BE9A8();
  sub_1D42D1164();
  sub_1D42CB230();
  sub_1D42CB390();
}

BOOL SNDetectSignalThresholdRequest.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  double v3;
  int v4;
  double v5;
  double v6;
  int v7;
  double v8;
  _BOOL8 v10;
  char *v12;
  _BYTE v13[32];
  _OWORD v14[2];
  __int128 v15;
  uint64_t v16;

  sub_1D42B7104();
  sub_1D42B28B4(a1, (uint64_t)&v15);
  if (!v16)
    return 0;
  sub_1D42B293C(&v15, v14);
  sub_1D42B294C((uint64_t)v14, (uint64_t)v13);
  if (!swift_dynamicCast() || !v12)
    goto LABEL_8;
  v3 = *(double *)(v1 + OBJC_IVAR___SNDetectSignalThresholdRequest_impl);
  v4 = *(_DWORD *)(v1 + OBJC_IVAR___SNDetectSignalThresholdRequest_impl + 8);
  v5 = *(double *)(v1 + OBJC_IVAR___SNDetectSignalThresholdRequest_impl + 16);
  v6 = *(double *)&v12[OBJC_IVAR___SNDetectSignalThresholdRequest_impl];
  v7 = *(_DWORD *)&v12[OBJC_IVAR___SNDetectSignalThresholdRequest_impl + 8];
  v8 = *(double *)&v12[OBJC_IVAR___SNDetectSignalThresholdRequest_impl + 16];

  if (v3 == v6 && v4 == v7)
    v10 = v5 == v8;
  else
LABEL_8:
    v10 = 0;
  sub_1D42B5400((uint64_t)v14);
  return v10;
}

id SNDetectSignalThresholdRequest.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return SNDetectSignalThresholdRequest.init(coder:)(a1);
}

id SNDetectSignalThresholdRequest.init(coder:)(void *a1)
{
  void *v1;
  void *v2;
  objc_class *v4;
  id v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  id v14;
  objc_super v16;

  v2 = v1;
  v4 = (objc_class *)sub_1D42CFC30();
  v5 = v2;
  v6 = sub_1D42B1204();
  v8 = v7;
  v9 = v6;
  v11 = v10;

  v12 = (char *)objc_allocWithZone(v4);
  v13 = &v12[OBJC_IVAR___SNDetectSignalThresholdRequest_impl];
  *(_QWORD *)v13 = v8;
  *((_DWORD *)v13 + 2) = v9;
  *((_QWORD *)v13 + 2) = v11;
  v16.receiver = v12;
  v16.super_class = v4;
  v14 = objc_msgSendSuper2(&v16, sel_init);

  sub_1D42CFC30();
  sub_1D42D3244();
  return v14;
}

Swift::Void __swiftcall SNDetectSignalThresholdRequest.encode(with:)(NSCoder with)
{
  uint64_t v1;

  sub_1D42AF2D8(*(_DWORD *)(v1 + OBJC_IVAR___SNDetectSignalThresholdRequest_impl + 8), *(double *)(v1 + OBJC_IVAR___SNDetectSignalThresholdRequest_impl), *(double *)(v1 + OBJC_IVAR___SNDetectSignalThresholdRequest_impl + 16));
}

uint64_t static SNDetectSignalThresholdRequest.supportsSecureCoding.getter()
{
  return 1;
}

id SNDetectSignalThresholdRequest.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_1D42B7104();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

_UNKNOWN **sub_1D42D1ED0()
{
  uint64_t v0;
  _UNKNOWN **result;

  result = (_UNKNOWN **)sub_1D42D18EC();
  if (v0)
    return &off_1E97ABBD0;
  return result;
}

id sub_1D42D1EF8(int a1, double a2, double a3)
{
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  float v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v25;
  __int128 v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v6 = objc_opt_self();
  *(_QWORD *)&v26 = 0;
  v7 = sub_1D45001AC(v6, (uint64_t)&v26);
  if (!v7)
  {
    v19 = (id)v26;
    sub_1D4519AA4();

    sub_1D42B6F54();
    return v7;
  }
  v8 = (id)v26;
  v9 = (void *)sub_1D451A6C8();
  *(_QWORD *)&v26 = 0;
  v10 = sub_1D44FD014(v6, v7, v9, (uint64_t)&v26);

  if (!v10)
  {
    v20 = (id)v26;
    sub_1D4519AA4();

    sub_1D42B6F54();
LABEL_18:

    return v7;
  }
  v11 = (id)v26;
  v12 = (void *)sub_1D42D3220();
  *(_QWORD *)&v26 = 0;
  v13 = sub_1D44FDB18(v6, v7, v12, 1, (uint64_t)&v26);

  v14 = (void *)v26;
  if (!v13)
  {
    v21 = (id)v26;
    sub_1D4519AA4();

    sub_1D42B6F54();
    goto LABEL_18;
  }
  *(_QWORD *)&v26 = 0;
  v16 = v14;
  v15 = a3;
  if (!sub_1D44FE3EC(v15, v6, v13, (uint64_t)&v26))
  {
    v22 = (id)v26;
    sub_1D4519AA4();

LABEL_17:
    sub_1D42B6F54();

    goto LABEL_18;
  }
  if ((~*(_QWORD *)&a2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (a2 <= -1.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (a2 >= 4294967300.0)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v17 = (id)v26;
  sub_1D450053C(a2, a1, 1, (uint64_t)&v26);
  v25 = 0;
  if (!sub_1D45002DC(v6, v7, v10, v13, 0, 0, &v26, (uint64_t)&v25))
  {
    v23 = v25;
    sub_1D4519AA4();

    goto LABEL_17;
  }
  if (a2 <= -9.22337204e18)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
  }
  if (a2 >= 9.22337204e18)
    goto LABEL_24;
  v18 = v25;
  sub_1D44F3DE8((uint64_t)v7);
  sub_1D44F44A0((uint64_t)v7);

  return v7;
}

uint64_t sub_1D42D21F8(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  _BYTE *v24;
  uint64_t v26;
  id v27[2];

  v27[1] = *(id *)MEMORY[0x1E0C80C00];
  v6 = objc_opt_self();
  v27[0] = 0;
  v7 = sub_1D44FE5B4(v6, a1, (uint64_t)v27);
  v8 = v27[0];
  if (!v7)
  {
    v23 = v27[0];
LABEL_15:
    sub_1D4519AA4();

    goto LABEL_16;
  }
  v9 = v7;
  sub_1D42B28FC((uint64_t *)&unk_1EFE49E50);
  v10 = sub_1D451A92C();
  v11 = v8;

  v27[0] = 0;
  v12 = sub_1D44FE820(v6, a1, (uint64_t)v27);
  v13 = v27[0];
  if (!v12)
  {
    v23 = v27[0];
    sub_1D42CB8F4();
    goto LABEL_15;
  }
  v14 = v12;
  v15 = sub_1D451A92C();
  v16 = v13;

  if (*(_QWORD *)(v10 + 16) != 1
    || (v17 = *(_QWORD *)(v10 + 32), *(_QWORD *)(v17 + 16) != 1)
    || *(_QWORD *)(v15 + 16) != 1
    || *(_QWORD *)(*(_QWORD *)(v15 + 32) + 16) != 1)
  {
    sub_1D42D3258();
    sub_1D42CB8F4();
    sub_1D42D2E04();
    sub_1D42B6D0C();
    *v24 = 0;
LABEL_16:
    swift_willThrow();
    return a3;
  }
  swift_bridgeObjectRetain();
  sub_1D42CB8F4();
  if (!*(_QWORD *)(v17 + 16))
  {
    __break(1u);
    goto LABEL_19;
  }
  v18 = *(_QWORD *)(v17 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(v15 + 32);
  swift_bridgeObjectRetain();
  sub_1D42D3258();
  if (!*(_QWORD *)(v19 + 16))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v20 = *(_QWORD *)(v19 + 32);
  swift_bridgeObjectRetain();
  v21 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v21);
  sub_1D42D269C(v18, v20, (void (*)(void *, id))sub_1D42D2E40);
  a3 = v22;
  sub_1D42D3258();
  sub_1D42CB8F4();
  if (!v3)
  {
    if (!(a3 >> 62))
    {
      swift_bridgeObjectRetain();
      sub_1D451B868();
      swift_bridgeObjectRelease();
      return a3;
    }
LABEL_20:
    swift_bridgeObjectRetain();
    sub_1D42B28FC(&qword_1EFE4C690);
    v26 = sub_1D451B568();
    swift_bridgeObjectRelease_n();
    return v26;
  }
  return a3;
}

uint64_t sub_1D42D24C0(void *a1, void *a2, uint64_t a3, void (*a4)(CMTimeValue, uint64_t, CMTimeEpoch))
{
  uint64_t v4;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t result;
  int64_t v11;
  CMTimeValue value;
  uint64_t timescale;
  uint64_t flags;
  CMTimeEpoch epoch;
  CMTimeValue v16;
  void (*v17)(CMTimeValue, uint64_t, CMTimeEpoch);
  CMTimeEpoch v18;
  objc_class *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  CMTime v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  CMTimeValue v31;
  int v32;
  int v33;
  CMTimeEpoch v34;
  CMTimeValue v35;
  uint64_t v36;
  CMTimeEpoch v37;

  v8 = objc_msgSend(a1, sel_integerValue);
  v9 = objc_msgSend(a2, sel_integerValue);
  result = sub_1D44F2078(a3);
  if ((result & 0x80000000) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  result = (uint64_t)CMTimeMake(&v25, (int64_t)v8, result);
  v11 = v9 - v8;
  if (__OFSUB__(v9, v8))
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  value = v25.value;
  timescale = v25.timescale;
  flags = v25.flags;
  epoch = v25.epoch;
  result = sub_1D44F2078(a3);
  if ((result & 0x80000000) != 0)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  CMTimeMake(&v25, v11, result);
  v16 = v25.value;
  v17 = a4;
  v18 = v25.epoch;
  v19 = (objc_class *)type metadata accessor for SNSignalThresholdResult();
  v20 = *(_QWORD *)&v25.timescale;
  v24 = (char *)objc_msgSend(objc_allocWithZone(v19), sel_init);
  v31 = value;
  v32 = timescale;
  v33 = flags;
  v34 = epoch;
  v35 = v16;
  v36 = v20;
  v37 = v18;
  v17(value, timescale | (flags << 32), epoch);
  if (v4)
  {

    return (uint64_t)v24;
  }
  else
  {
    v21 = sub_1D451AEE4();
    ((void (*)(uint64_t))v17)(v21);
    sub_1D451AEF0();
    v22 = v30;
    result = (uint64_t)v24;
    v23 = &v24[OBJC_IVAR___SNSignalThresholdResult_impl];
    *(_QWORD *)v23 = v26;
    *((_QWORD *)v23 + 1) = v27;
    *((_OWORD *)v23 + 1) = v28;
    *((_QWORD *)v23 + 4) = v29;
    *((_QWORD *)v23 + 5) = v22;
  }
  return result;
}

void sub_1D42D269C(unint64_t a1, unint64_t a2, void (*a3)(void *, id))
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t i;
  uint64_t v18;
  unint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;

  v4 = v3;
  v6 = a1;
  v26 = a1 >> 62;
  if (a1 >> 62)
    goto LABEL_68;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v31 = a2 >> 62;
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      v8 = (void *)sub_1D451B5A4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v8 = *(void **)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if ((uint64_t)v8 >= v7)
      v9 = v7;
    else
      v9 = (uint64_t)v8;
    sub_1D451B49C();
    if (v9 < 0)
    {
      __break(1u);
LABEL_71:

      __break(1u);
      return;
    }
    v28 = v6;
    if (!v9)
      break;
    v25 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v26)
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v27 = sub_1D451B5A4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v27 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v12 = 0;
    v32 = v6 & 0xC000000000000001;
    v11 = a2 & 0xFFFFFFFFFFFFFF8;
    v30 = a2 & 0xC000000000000001;
    while (v9 != v12)
    {
      if (v27 == v12)
        goto LABEL_60;
      if (v32)
      {
        v13 = (id)MEMORY[0x1D825CD78](v12, v6);
      }
      else
      {
        if (v12 >= *(_QWORD *)(v25 + 16))
          goto LABEL_67;
        v13 = *(id *)(v6 + 8 * v12 + 32);
      }
      v8 = v13;
      if (v31)
      {
        swift_bridgeObjectRetain();
        v14 = sub_1D451B5A4();
        swift_bridgeObjectRelease();
      }
      else
      {
        v14 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      if (v12 == v14)
        goto LABEL_71;
      if (v30)
      {
        v15 = (id)MEMORY[0x1D825CD78](v12, a2);
      }
      else
      {
        if (v12 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_61;
        v15 = *(id *)(a2 + 8 * v12 + 32);
      }
      v16 = v15;
      a3(v8, v15);
      if (v4)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        goto LABEL_58;
      }
      ++v12;

      sub_1D451B484();
      sub_1D451B4A8();
      sub_1D451B4B4();
      sub_1D451B490();
      v6 = v28;
      if (v9 == v12)
      {
        v10 = v25;
        goto LABEL_33;
      }
    }
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    swift_bridgeObjectRetain();
    v7 = sub_1D451B5A4();
    swift_bridgeObjectRelease();
  }
  v10 = v6 & 0xFFFFFFFFFFFFFF8;
  v32 = v6 & 0xC000000000000001;
  v11 = a2 & 0xFFFFFFFFFFFFFF8;
  v30 = a2 & 0xC000000000000001;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_33:
  for (i = v9 + 4; ; ++i)
  {
    if (v26)
    {
      swift_bridgeObjectRetain();
      v18 = sub_1D451B5A4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v18 = *(_QWORD *)(v10 + 16);
    }
    v19 = i - 4;
    if (i - 4 == v18)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    if (v32)
    {
      v20 = (id)MEMORY[0x1D825CD78](i - 4, v6);
    }
    else
    {
      if ((v19 & 0x8000000000000000) != 0)
        goto LABEL_62;
      if (v19 >= *(_QWORD *)(v10 + 16))
        goto LABEL_63;
      v20 = *(id *)(v6 + 8 * i);
    }
    v21 = v20;
    if (__OFADD__(v19, 1))
      goto LABEL_64;
    if (v31)
    {
      swift_bridgeObjectRetain();
      v22 = sub_1D451B5A4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v22 = *(_QWORD *)(v11 + 16);
    }
    if (v19 == v22)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    if (v30)
    {
      v23 = (id)MEMORY[0x1D825CD78](i - 4, a2);
    }
    else
    {
      if ((v19 & 0x8000000000000000) != 0)
        goto LABEL_65;
      if (v19 >= *(_QWORD *)(v11 + 16))
        goto LABEL_66;
      v23 = *(id *)(a2 + 8 * i);
    }
    v24 = v23;
    a3(v21, v23);
    if (v4)
      break;

    sub_1D451B484();
    sub_1D451B4A8();
    sub_1D451B4B4();
    sub_1D451B490();
    v6 = v28;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

LABEL_58:
  swift_release();
}

id sub_1D42D2B6C()
{
  uint64_t v0;
  void *v1;
  _BYTE *v3;

  v1 = *(void **)(v0 + 16);
  if (v1)
    return v1;
  sub_1D42D2E04();
  sub_1D42B6D0C();
  *v3 = 1;
  return (id)swift_willThrow();
}

void sub_1D42D2BC4(double a1)
{
  double *v1;
  uint64_t v2;
  double v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v3 = *v1;
  if (v1[3] <= 0.0)
    v4 = a1;
  else
    v4 = v1[3];
  v5 = swift_allocObject();
  *(double *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v1;
  *(double *)(v5 + 32) = v3;
  swift_retain();
  v6 = sub_1D42CEEA4();
  swift_release();
  if (!v2)
  {
    v7 = (void *)*((_QWORD *)v1 + 2);
    *((_QWORD *)v1 + 2) = v6;

  }
}

id sub_1D42D2C60@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>, double a3@<D0>)
{
  uint64_t v3;
  id result;

  result = sub_1D42D1EF8(*(_DWORD *)(a1 + 32), a3, *(double *)(a1 + 40));
  if (!v3)
    *a2 = result;
  return result;
}

id sub_1D42D2C94()
{
  uint64_t v0;
  id result;
  void *v2;
  void *v3;
  id v4;

  result = sub_1D42D2B6C();
  if (!v0)
  {
    v2 = result;
    v3 = (void *)sub_1D42D3220();
    v4 = sub_1D44F590C(v2, v3);

    return v4;
  }
  return result;
}

uint64_t sub_1D42D2CF4()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_1D42D2D18(void *a1, uint64_t a2, unint64_t a3)
{
  return sub_1D42D21F8(a1, a2, a3);
}

id sub_1D42D2D2C()
{
  return sub_1D42D2C94();
}

void sub_1D42D2D40(double a1)
{
  sub_1D42D2BC4(a1);
}

id sub_1D42D2D54()
{
  return sub_1D42D2B6C();
}

uint64_t type metadata accessor for SNDetectSignalThresholdRequest()
{
  return objc_opt_self();
}

uint64_t method lookup function for SNDetectSignalThresholdRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for SNDetectSignalThresholdRequestImpl()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for DetectSignalThresholdRequest()
{
  return &type metadata for DetectSignalThresholdRequest;
}

unint64_t sub_1D42D2DC8()
{
  unint64_t result;

  result = qword_1EFE49E40;
  if (!qword_1EFE49E40)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4525870, &type metadata for DetectSignalThresholdRequest);
    atomic_store(result, (unint64_t *)&qword_1EFE49E40);
  }
  return result;
}

unint64_t sub_1D42D2E04()
{
  unint64_t result;

  result = qword_1EFE49E48;
  if (!qword_1EFE49E48)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4525AD8, &type metadata for SNDetectSignalThresholdRequestImpl.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE49E48);
  }
  return result;
}

uint64_t sub_1D42D2E40(void *a1, void *a2)
{
  uint64_t v2;

  return sub_1D42D24C0(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(CMTimeValue, uint64_t, CMTimeEpoch))(v2 + 24));
}

unint64_t sub_1D42D2E60(unint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1D42D2E84()
{
  swift_release();
  return swift_deallocObject();
}

id sub_1D42D2EA8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1D42D2C60(*(_QWORD *)(v1 + 24), a1, *(double *)(v1 + 16));
}

unint64_t sub_1D42D2EC4()
{
  unint64_t result;

  result = qword_1EFE49E68;
  if (!qword_1EFE49E68)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4525A88, &type metadata for DetectSignalThresholdRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49E68);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DetectSignalThresholdRequest.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 2) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v5 = v6 - 3;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for DetectSignalThresholdRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D42D2FD4 + 4 * byte_1D4525785[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D42D3008 + 4 * byte_1D4525780[v4]))();
}

uint64_t sub_1D42D3008(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D42D3010(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D42D3018);
  return result;
}

uint64_t sub_1D42D3024(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D42D302CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D42D3030(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D42D3038(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DetectSignalThresholdRequest.CodingKeys()
{
  return &type metadata for DetectSignalThresholdRequest.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for SNDetectSignalThresholdRequestImpl.DomainError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D42D30A0 + 4 * byte_1D452578F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D42D30D4 + 4 * byte_1D452578A[v4]))();
}

uint64_t sub_1D42D30D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D42D30DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D42D30E4);
  return result;
}

uint64_t sub_1D42D30F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D42D30F8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D42D30FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D42D3104(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SNDetectSignalThresholdRequestImpl.DomainError()
{
  return &type metadata for SNDetectSignalThresholdRequestImpl.DomainError;
}

unint64_t sub_1D42D3124()
{
  unint64_t result;

  result = qword_1EFE49E78;
  if (!qword_1EFE49E78)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45259A8, &type metadata for SNDetectSignalThresholdRequestImpl.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE49E78);
  }
  return result;
}

unint64_t sub_1D42D3164()
{
  unint64_t result;

  result = qword_1EFE49E80;
  if (!qword_1EFE49E80)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4525A60, &type metadata for DetectSignalThresholdRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49E80);
  }
  return result;
}

unint64_t sub_1D42D31A4()
{
  unint64_t result;

  result = qword_1EFE49E88;
  if (!qword_1EFE49E88)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45259D0, &type metadata for DetectSignalThresholdRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49E88);
  }
  return result;
}

unint64_t sub_1D42D31E4()
{
  unint64_t result;

  result = qword_1EFE49E90;
  if (!qword_1EFE49E90)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45259F8, &type metadata for DetectSignalThresholdRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49E90);
  }
  return result;
}

uint64_t sub_1D42D3220()
{
  return sub_1D451A6C8();
}

uint64_t sub_1D42D3244()
{
  return swift_deallocPartialClassInstance();
}

uint64_t sub_1D42D3258()
{
  return swift_bridgeObjectRelease();
}

void sub_1D42D3260()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 48) & 1) != 0)
  {
    sub_1D451B964();
    sub_1D451B988();
    sub_1D451B97C();
    sub_1D451B97C();
    sub_1D451B988();
    sub_1D451B988();
    sub_1D451B97C();
    sub_1D451B97C();
    sub_1D451B988();
    sub_1D42CB520();
  }
  else
  {
    sub_1D451B964();
    sub_1D42D6590();
  }
}

BOOL sub_1D42D331C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[7];

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v40 = *(_QWORD *)(a1 + 16);
  v41 = *(_QWORD *)(a1 + 24);
  v39 = *(_QWORD *)(a1 + 32);
  v42 = *(_QWORD *)(a1 + 40);
  v4 = *(_BYTE *)(a1 + 48);
  v5 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  if ((v4 & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 48) & 1) != 0)
    {
      v37 = HIDWORD(*(_QWORD *)(a2 + 8));
      v10 = sub_1D42D71E0();
      v12 = v11;
      sub_1D42B5C4C(v10, v13, v40, v41, v39, v42, 1);
      sub_1D42B5C4C(v5, v12, v7, v6, v9, v8, 1);
      v50[0] = v2;
      v50[1] = v3;
      v50[2] = v40;
      v50[3] = v41;
      v50[4] = v39;
      v50[5] = v42;
      v43 = v5;
      v44 = v12;
      v45 = v37;
      v46 = v7;
      v47 = v6;
      v48 = v9;
      v49 = v8;
      return static TimeRange.== infix(_:_:)((uint64_t)v50, (uint64_t)&v43);
    }
LABEL_6:
    sub_1D42D70F0();
    sub_1D42B5CF4(v16, v17, v18, v19, v20, v21, v22);
    v23 = sub_1D42D71E0();
    sub_1D42B5C4C(v23, v24, v40, v41, v39, v42, v4);
    sub_1D42D70F0();
    sub_1D42B5C4C(v25, v26, v27, v28, v29, v30, v31);
    return 0;
  }
  v15 = *(_QWORD *)(a2 + 8);
  if ((*(_BYTE *)(a2 + 48) & 1) != 0)
  {
    swift_bridgeObjectRetain();
    goto LABEL_6;
  }
  v38 = sub_1D42FE558(v2, *(_QWORD *)a2);
  sub_1D42B5CF4(v5, v15, v7, v6, v9, v8, 0);
  v33 = sub_1D42D71E0();
  sub_1D42B5CF4(v33, v34, v40, v41, v39, v42, 0);
  v35 = sub_1D42D71E0();
  sub_1D42D7200(v35, v36, v40, v41, v39, v42);
  sub_1D42D7200(v5, v15, v7, v6, v9, v8);
  return v38 & 1;
}

uint64_t sub_1D42D353C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x746172656D756E65 && a2 == 0xEA00000000006465;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65676E6172 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D42D362C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x65676E6172;
  else
    return 0x746172656D756E65;
}

uint64_t sub_1D42D3664(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1D451B820();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void sub_1D42D36D0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = sub_1D42B28FC(&qword_1EFE49F08);
  v18 = *(_QWORD *)(v4 - 8);
  v19 = v4;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v5);
  sub_1D42BE768();
  v15 = v6;
  v7 = sub_1D42B28FC(&qword_1EFE49F10);
  v16 = *(_QWORD *)(v7 - 8);
  v17 = v7;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v8);
  sub_1D42CB210();
  v11 = v10 - v9;
  v12 = sub_1D42B28FC(&qword_1EFE49F18);
  v20 = *(_QWORD *)(v12 - 8);
  v21 = v12;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v13);
  sub_1D42D7108();
  v14 = *(_BYTE *)(v1 + 48);
  sub_1D42B5528(a1, a1[3]);
  sub_1D42D6910();
  sub_1D451BA24();
  if ((v14 & 1) != 0)
  {
    sub_1D42D7170();
    sub_1D42D722C();
    sub_1D42CA408();
    sub_1D42D71F4();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v15, v19);
  }
  else
  {
    sub_1D42D6988();
    sub_1D42D722C();
    sub_1D42B28FC(&qword_1EFE49EF0);
    sub_1D42D69C4(&qword_1EFE49F28, (uint64_t (*)(void))sub_1D42CA054, MEMORY[0x1E0DEAF10]);
    sub_1D42D71F4();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v11, v17);
  }
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v2, v21);
  sub_1D42BE844();
}

void sub_1D42D392C()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 48);
  sub_1D42BE9A8();
  if ((v1 & 1) != 0)
  {
    sub_1D42D7194();
    sub_1D451B988();
    sub_1D451B97C();
    sub_1D451B97C();
    sub_1D42CB650();
    sub_1D42D71AC();
    sub_1D451B97C();
    sub_1D42D71A0();
    sub_1D42CB950();
  }
  else
  {
    sub_1D42D1094();
    sub_1D42D6590();
  }
  sub_1D42CB230();
  sub_1D42CB414();
}

void sub_1D42D39D0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  char v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;

  sub_1D42B28FC(&qword_1EFE49EB0);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v4);
  sub_1D42BE768();
  v26 = v5;
  v25 = sub_1D42B28FC(&qword_1EFE49EB8);
  MEMORY[0x1E0C80A78](v25);
  sub_1D42CB210();
  v6 = sub_1D42B28FC(&qword_1EFE49EC0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  sub_1D42CB18C();
  sub_1D42B5528(a1, a1[3]);
  sub_1D42D6910();
  sub_1D451BA0C();
  if (v30)
    goto LABEL_7;
  v23 = a1;
  v8 = sub_1D451B6D0();
  v9 = *(_QWORD *)(v8 + 16);
  if (!v9
    || (v10 = *(_BYTE *)(v8 + 32),
        sub_1D43B7948(1, v9, v8, v8 + 32, 0, (2 * v9) | 1),
        v12 = v11,
        v14 = v13,
        swift_bridgeObjectRelease(),
        v12 != v14 >> 1))
  {
    v15 = sub_1D451B460();
    sub_1D42B6D0C();
    v17 = v16;
    sub_1D42B28FC(&qword_1EFE49ED0);
    *v17 = &type metadata for TimeDurationConstraint;
    sub_1D451B61C();
    sub_1D451B454();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v17, *MEMORY[0x1E0DEC450], v15);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v2, v6);
    a1 = v23;
LABEL_7:
    v18 = (uint64_t)a1;
    goto LABEL_8;
  }
  if ((v10 & 1) != 0)
  {
    sub_1D42D7170();
    sub_1D42D7220();
    v22 = v10;
    sub_1D42CA3CC();
    sub_1D451B688();
    sub_1D42D7130(v26);
    sub_1D42D1104();
    sub_1D42D717C(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
    v19 = v27;
    v20 = v28;
    v21 = v29;
  }
  else
  {
    LOBYTE(v27) = 0;
    sub_1D42D6988();
    sub_1D42D7220();
    v22 = v10;
    sub_1D42B28FC(&qword_1EFE49EF0);
    sub_1D42D69C4(&qword_1EFE49EF8, (uint64_t (*)(void))sub_1D42C9FC0, MEMORY[0x1E0DEAF40]);
    sub_1D451B688();
    sub_1D42D70DC();
    sub_1D42D1104();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v2, v6);
    *(_QWORD *)&v19 = v27;
    v20 = 0uLL;
    v21 = 0uLL;
  }
  v18 = (uint64_t)v23;
  *(_OWORD *)a2 = v19;
  *(_OWORD *)(a2 + 16) = v20;
  *(_OWORD *)(a2 + 32) = v21;
  *(_BYTE *)(a2 + 48) = v22;
LABEL_8:
  sub_1D42B5400(v18);
  sub_1D42BE844();
}

uint64_t sub_1D42D3DC8()
{
  char *v0;

  return sub_1D42D362C(*v0);
}

uint64_t sub_1D42D3DD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D42D353C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D42D3DF4()
{
  sub_1D42D6910();
  return sub_1D451BA3C();
}

uint64_t sub_1D42D3E1C()
{
  sub_1D42D6910();
  return sub_1D451BA48();
}

uint64_t sub_1D42D3E44()
{
  sub_1D42D6988();
  return sub_1D451BA3C();
}

uint64_t sub_1D42D3E6C()
{
  sub_1D42D6988();
  return sub_1D451BA48();
}

uint64_t sub_1D42D3E94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D42D3664(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D42D3EBC()
{
  sub_1D42D694C();
  return sub_1D451BA3C();
}

uint64_t sub_1D42D3EE4()
{
  sub_1D42D694C();
  return sub_1D451BA48();
}

uint64_t sub_1D42D3F14()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 48);
  sub_1D451B958();
  sub_1D451B964();
  if ((v1 & 1) != 0)
  {
    sub_1D451B988();
    sub_1D451B97C();
    sub_1D451B97C();
    sub_1D451B988();
    sub_1D451B988();
    sub_1D451B97C();
    sub_1D451B97C();
    sub_1D451B988();
  }
  else
  {
    sub_1D42D6590();
  }
  return sub_1D451B994();
}

void sub_1D42D4008(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1D42D39D0(a1, a2);
}

void sub_1D42D401C(_QWORD *a1)
{
  sub_1D42D36D0(a1);
}

void sub_1D42D4034(unint64_t a1)
{
  objc_class *v2;
  id v3;

  v2 = (objc_class *)sub_1D42CFC30();
  if (!a1)
    a1 = MEMORY[0x1E0DEE9D8];
  v3 = objc_allocWithZone(v2);
  sub_1D42D40CC(a1);
  sub_1D42CFC30();
  sub_1D42D70AC();
  sub_1D42B6E24();
}

id sub_1D42D40CC(unint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  char *v27;
  id result;
  char *v29;
  objc_class *v30;
  objc_super v31;
  uint64_t v32[3];
  uint64_t v33;

  v2 = v1;
  v30 = (objc_class *)sub_1D42B7104();
  if (a1 >> 62)
  {
    v29 = v1;
    v4 = sub_1D451B5A4();
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v5 = v1;
  }
  v6 = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v33 = MEMORY[0x1E0DEE9D8];
    sub_1D42C71BC();
    if (v4 < 0)
    {
      __break(1u);
      result = (id)swift_release();
      __break(1u);
      return result;
    }
    v7 = 0;
    v8 = v33;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v9 = (id)MEMORY[0x1D825CD78](v7, a1);
      else
        v9 = *(id *)(a1 + 8 * v7 + 32);
      v10 = v9;
      objc_msgSend(v9, sel_CMTimeValue);
      v11 = v32[0];
      v12 = v32[1];
      v13 = v32[2];

      v33 = v8;
      v14 = *(_QWORD *)(v8 + 16);
      if (v14 >= *(_QWORD *)(v8 + 24) >> 1)
      {
        sub_1D42C71BC();
        v8 = v33;
      }
      *(_QWORD *)(v8 + 16) = v14 + 1;
      v15 = (_QWORD *)(v8 + 24 * v14);
      v15[4] = v11;
      ++v7;
      v15[5] = v12;
      v15[6] = v13;
    }
    while (v4 != v7);
    sub_1D42CB0C4();
    v6 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    sub_1D42CB0C4();
    v8 = MEMORY[0x1E0DEE9D8];
  }
  v32[0] = v8;
  swift_bridgeObjectRetain();
  sub_1D42D5228(v32);
  swift_bridgeObjectRelease();
  v16 = v32[0];
  v17 = *(_QWORD *)(v32[0] + 16);
  if (v17)
  {
    v32[0] = v6;
    sub_1D42C7188();
    v18 = 0;
    v19 = v32[0];
    v20 = *(_QWORD *)(v32[0] + 16);
    v21 = 24 * v20;
    do
    {
      v22 = *(_QWORD *)(v16 + v18 + 32);
      v23 = *(_QWORD *)(v16 + v18 + 40);
      v24 = *(_QWORD *)(v16 + v18 + 48);
      v32[0] = v19;
      v25 = v20 + 1;
      if (v20 >= *(_QWORD *)(v19 + 24) >> 1)
      {
        sub_1D42C7188();
        v19 = v32[0];
      }
      *(_QWORD *)(v19 + 16) = v25;
      v26 = (_QWORD *)(v19 + v21 + v18);
      v26[4] = v22;
      v26[5] = v23;
      v26[6] = v24;
      v18 += 24;
      v20 = v25;
      --v17;
    }
    while (v17);
    swift_release();
  }
  else
  {
    swift_release();
    v19 = MEMORY[0x1E0DEE9D8];
  }
  v27 = &v2[OBJC_IVAR____SNTimeDurationConstraint_impl];
  *(_QWORD *)v27 = v19;
  *(_OWORD *)(v27 + 8) = 0u;
  *(_OWORD *)(v27 + 24) = 0u;
  *(_OWORD *)(v27 + 33) = 0u;

  v31.receiver = v2;
  v31.super_class = v30;
  return objc_msgSendSuper2(&v31, sel_init);
}

void sub_1D42D4384(_OWORD *a1)
{
  char *v1;
  objc_class *v3;
  char *v4;
  __int128 v5;
  objc_super v6;

  v3 = (objc_class *)sub_1D42B7104();
  v4 = &v1[OBJC_IVAR____SNTimeDurationConstraint_impl];
  v5 = a1[1];
  *(_OWORD *)v4 = *a1;
  *((_OWORD *)v4 + 1) = v5;
  *((_OWORD *)v4 + 2) = a1[2];
  v4[48] = 1;
  v6.receiver = v1;
  v6.super_class = v3;
  objc_msgSendSuper2(&v6, sel_init);
  sub_1D42CB964();
}

void sub_1D42D4430(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  char v4;
  char *v5;
  __int128 v6;
  objc_super v7;

  v3 = (char *)sub_1D42CB9E4();
  v4 = *(_BYTE *)(a1 + 48);
  v5 = &v3[OBJC_IVAR____SNTimeDurationConstraint_impl];
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v5 = *(_OWORD *)a1;
  *((_OWORD *)v5 + 1) = v6;
  *((_OWORD *)v5 + 2) = *(_OWORD *)(a1 + 32);
  v5[48] = v4;
  v7.receiver = v3;
  v7.super_class = v1;
  objc_msgSendSuper2(&v7, sel_init);
  sub_1D42CB964();
}

void _SNTimeDurationConstraint.copy(with:)(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11[6];
  char v12;

  v3 = sub_1D42B7104();
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____SNTimeDurationConstraint_impl + 8);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____SNTimeDurationConstraint_impl + 16);
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____SNTimeDurationConstraint_impl + 24);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____SNTimeDurationConstraint_impl + 32);
  v8 = *(_QWORD *)(v1 + OBJC_IVAR____SNTimeDurationConstraint_impl + 40);
  v9 = *(_BYTE *)(v1 + OBJC_IVAR____SNTimeDurationConstraint_impl + 48);
  v11[0] = *(_QWORD *)(v1 + OBJC_IVAR____SNTimeDurationConstraint_impl);
  v11[1] = v4;
  v11[2] = v5;
  v11[3] = v6;
  v11[4] = v7;
  v11[5] = v8;
  v12 = v9;
  sub_1D42B5CF4(v11[0], v4, v5, v6, v7, v8, v9);
  sub_1D42D4430((uint64_t)v11);
  a1[3] = v3;
  *a1 = v10;
  sub_1D42D7120();
}

void _SNTimeDurationConstraint.hash.getter()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_BYTE *)(v0 + OBJC_IVAR____SNTimeDurationConstraint_impl + 48);
  sub_1D42BE9A8();
  if ((v1 & 1) != 0)
  {
    sub_1D42D7194();
    sub_1D42CB950();
    sub_1D451B97C();
    sub_1D42D71A0();
    sub_1D42D71AC();
    sub_1D42CB650();
    sub_1D451B97C();
    sub_1D451B97C();
    sub_1D451B988();
  }
  else
  {
    sub_1D42D1094();
    sub_1D42D6590();
    v2 = sub_1D42D70C0();
    sub_1D42B5CF4(v2, v3, v4, v5, v6, v7, 0);
  }
  sub_1D42CB230();
  v8 = sub_1D42D70C0();
  sub_1D42B5C4C(v8, v9, v10, v11, v12, v13, v1);
  sub_1D42CB414();
}

BOOL _SNTimeDurationConstraint.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  char *v3;
  char v4;
  __int128 v5;
  char v6;
  BOOL v7;
  _OWORD v9[3];
  char v10;
  _OWORD v11[3];
  char v12;
  _OWORD v13[2];
  __int128 v14;
  uint64_t v15;

  sub_1D42B7104();
  sub_1D42B28B4(a1, (uint64_t)&v14);
  if (v15)
  {
    sub_1D42B293C(&v14, v13);
    sub_1D42B294C((uint64_t)v13, (uint64_t)v11);
    if (swift_dynamicCast() && (v3 = *(char **)&v9[0]) != 0)
    {
      v4 = *(_BYTE *)(v1 + OBJC_IVAR____SNTimeDurationConstraint_impl + 48);
      v5 = *(_OWORD *)(v1 + OBJC_IVAR____SNTimeDurationConstraint_impl + 16);
      v11[0] = *(_OWORD *)(v1 + OBJC_IVAR____SNTimeDurationConstraint_impl);
      v11[1] = v5;
      v11[2] = *(_OWORD *)(v1 + OBJC_IVAR____SNTimeDurationConstraint_impl + 32);
      v12 = v4;
      v6 = *(_BYTE *)(*(_QWORD *)&v9[0] + OBJC_IVAR____SNTimeDurationConstraint_impl + 48);
      v9[0] = *(_OWORD *)(*(_QWORD *)&v9[0] + OBJC_IVAR____SNTimeDurationConstraint_impl);
      v9[1] = *(_OWORD *)&v3[OBJC_IVAR____SNTimeDurationConstraint_impl + 16];
      v9[2] = *(_OWORD *)&v3[OBJC_IVAR____SNTimeDurationConstraint_impl + 32];
      v10 = v6;
      v7 = sub_1D42D331C((uint64_t)v11, (uint64_t)v9);

    }
    else
    {
      v7 = 0;
    }
    sub_1D42B5400((uint64_t)v13);
  }
  else
  {
    return 0;
  }
  return v7;
}

void _SNTimeDurationConstraint.__allocating_init(coder:)(void *a1)
{
  sub_1D42CB9E4();
  _SNTimeDurationConstraint.init(coder:)(a1);
  sub_1D42B6E24();
}

uint64_t _SNTimeDurationConstraint.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;

  v3 = v1;
  sub_1D42B1308();
  sub_1D42CFC30();

  sub_1D42D4430((uint64_t)&v7);
  v5 = v4;

  swift_deallocPartialClassInstance();
  return v5;
}

Swift::Void __swiftcall _SNTimeDurationConstraint.encode(with:)(NSCoder with)
{
  uint64_t v1;
  _BYTE v3[56];

  sub_1D42B6488(v1 + OBJC_IVAR____SNTimeDurationConstraint_impl, (uint64_t)v3);
  sub_1D42D65E8((uint64_t)v3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D42B5CF4);
  sub_1D42AF47C(v3, 1819307369, 0xE400000000000000, with.super.isa);
  sub_1D42D65E8((uint64_t)v3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D42B5C4C);
  sub_1D42D7120();
}

uint64_t static _SNTimeDurationConstraint.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t sub_1D42D4A18()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR____SNTimeDurationConstraint_impl + 48))
    return 2;
  else
    return 1;
}

void sub_1D42D4A90(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = v1 + OBJC_IVAR____SNTimeDurationConstraint_impl;
  if ((*(_BYTE *)(v1 + OBJC_IVAR____SNTimeDurationConstraint_impl + 48) & 1) != 0)
  {
    v3 = *(_DWORD *)(v2 + 32);
    v4 = *(_DWORD *)(v2 + 36);
    v5 = *(_DWORD *)(v2 + 8);
    v6 = *(_DWORD *)(v2 + 12);
  }
  else
  {
    v2 = MEMORY[0x1E0CA2E40];
    v5 = *(_DWORD *)(MEMORY[0x1E0CA2E40] + 8);
    v6 = *(_DWORD *)(MEMORY[0x1E0CA2E40] + 12);
    v3 = *(_DWORD *)(MEMORY[0x1E0CA2E40] + 32);
    v4 = *(_DWORD *)(MEMORY[0x1E0CA2E40] + 36);
  }
  v7 = *(_QWORD *)(v2 + 40);
  v9 = *(_QWORD *)(v2 + 16);
  v8 = *(_QWORD *)(v2 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v2;
  *(_DWORD *)(a1 + 8) = v5;
  *(_DWORD *)(a1 + 12) = v6;
  *(_QWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v8;
  *(_DWORD *)(a1 + 32) = v3;
  *(_DWORD *)(a1 + 36) = v4;
  *(_QWORD *)(a1 + 40) = v7;
}

uint64_t sub_1D42D4B34()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[3];
  uint64_t v17;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____SNTimeDurationConstraint_impl);
  if ((*(_BYTE *)(v0 + OBJC_IVAR____SNTimeDurationConstraint_impl + 48) & 1) != 0)
    return MEMORY[0x1E0DEE9D8];
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v14 = v1[2];
    v15 = v1[1];
    v5 = v1[4];
    v13 = v1[3];
    v6 = v1[5];
    v17 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1D451B49C();
    v7 = (void *)objc_opt_self();
    v8 = (uint64_t *)(v3 + 48);
    do
    {
      v9 = *v8;
      v10 = *(v8 - 1);
      v16[0] = *(v8 - 2);
      v16[1] = v10;
      v16[2] = v9;
      v11 = objc_msgSend(v7, sel_valueWithCMTime_, v16);
      sub_1D451B484();
      sub_1D451B4A8();
      sub_1D451B4B4();
      sub_1D451B490();
      v8 += 3;
      --v4;
    }
    while (v4);
    v2 = v17;
    sub_1D42D7200(v3, v15, v14, v13, v5, v6);
  }
  return v2;
}

id _SNTimeDurationConstraint.__allocating_init()()
{
  return objc_msgSend(sub_1D42CB9E4(), sel_init);
}

void _SNTimeDurationConstraint.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id _SNTimeDurationConstraint.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_1D42B7104();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D42D4D24()
{
  void *v0;
  id v1;
  uint64_t v3;

  v1 = objc_msgSend(v0, sel_impl);
  sub_1D451B208();
  swift_unknownObjectRelease();
  type metadata accessor for _SNTimeDurationConstraint();
  swift_dynamicCast();
  return v3;
}

uint64_t sub_1D42D4D98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t *v21;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  _OWORD v33[2];
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;

  v2 = sub_1D451B9D0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1D42CB210();
  v6 = v5 - v4;
  type metadata accessor for SNLogMelParameters(0);
  *((_QWORD *)&v35 + 1) = v7;
  v8 = swift_allocObject();
  *(_QWORD *)&v34 = v8;
  v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v8 + 32) = v9;
  *(_OWORD *)(v8 + 48) = *(_OWORD *)(a1 + 32);
  *(_DWORD *)(v8 + 64) = *(_DWORD *)(a1 + 48);
  sub_1D451B9A0();
  v10 = sub_1D451B9C4();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
  swift_retain();
  sub_1D451B4F0();
  swift_release();
  sub_1D42D7188();
  v37 = v10;
  if (*((_QWORD *)&v36 + 1))
  {
    v11 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v32 = v34;
      v33[0] = v35;
      v33[1] = v36;
      v26 = v34;
      sub_1D42B294C((uint64_t)v33, (uint64_t)&v27);
      if (!swift_dynamicCast())
        break;
      v29 = v23;
      v30 = v24;
      v31 = v25;
      sub_1D42D7018((uint64_t)&v32, &qword_1EFE49F98);
      if (*((_QWORD *)&v30 + 1))
      {
        v26 = v29;
        v27 = v30;
        v28 = v31;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D42D7208();
          v11 = v16;
        }
        v12 = *(_QWORD *)(v11 + 16);
        if (v12 >= *(_QWORD *)(v11 + 24) >> 1)
        {
          sub_1D42D7208();
          v11 = v17;
        }
        *(_QWORD *)(v11 + 16) = v12 + 1;
        v13 = v11 + 40 * v12;
        v14 = v26;
        v15 = v27;
        *(_QWORD *)(v13 + 64) = v28;
        *(_OWORD *)(v13 + 32) = v14;
        *(_OWORD *)(v13 + 48) = v15;
      }
      else
      {
        sub_1D42D7018((uint64_t)&v29, &qword_1EFE49F88);
      }
      sub_1D42D7188();
      if (!*((_QWORD *)&v36 + 1))
        goto LABEL_14;
    }
    v25 = 0;
    v24 = 0u;
    v23 = 0u;
    sub_1D42D7018((uint64_t)&v23, &qword_1EFE49F88);
    v18 = *((_QWORD *)&v32 + 1);
    v26 = v32;
    sub_1D42B294C((uint64_t)v33, (uint64_t)&v27);
    if (v18)
    {
      swift_bridgeObjectRetain();
      sub_1D42B5400((uint64_t)&v27);
      *(_QWORD *)&v26 = 0;
      *((_QWORD *)&v26 + 1) = 0xE000000000000000;
      sub_1D451B400();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v26 = 0xD000000000000029;
      *((_QWORD *)&v26 + 1) = 0x80000001D4550EE0;
      sub_1D451A794();
      swift_bridgeObjectRelease();
      v20 = *((_QWORD *)&v26 + 1);
      v19 = v26;
    }
    else
    {
      sub_1D42B5400((uint64_t)&v27);
      v20 = 0x80000001D4550EB0;
      v19 = 0xD000000000000026;
    }
    sub_1D42D6FDC();
    sub_1D42B6D0C();
    *v21 = v19;
    v21[1] = v20;
    swift_willThrow();
    sub_1D42D7018((uint64_t)&v32, &qword_1EFE49F98);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    v11 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    swift_release();
    swift_release();
  }
  return v11;
}

uint64_t sub_1D42D518C(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  _BYTE v5[40];

  result = sub_1D42D4D98(a1);
  if (!v1)
  {
    v3 = *(_QWORD *)(result + 16);
    if (v3)
    {
      v4 = result + 32;
      sub_1D42D71EC();
      do
      {
        sub_1D42D6F5C(v4, (uint64_t)v5);
        sub_1D451B3AC();
        sub_1D42D6F98((uint64_t)v5);
        v4 += 40;
        --v3;
      }
      while (v3);
      return swift_bridgeObjectRelease_n();
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_1D42D5228(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1D42DC88C();
    v2 = v3;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v4;
  sub_1D42D5290(v5);
  *a1 = v2;
}

void sub_1D42D5290(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  unint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  uint64_t v52;
  char v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;

  v3 = a1[1];
  v4 = sub_1D451B7B4();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_1D42D5918(0, v3, 1, a1);
      return;
    }
    goto LABEL_126;
  }
  v5 = v4;
  sub_1D43E2B18(v3 / 2);
  v96 = v6;
  v97 = v3;
  v99 = v7;
  v94 = a1;
  if (v3 <= 0)
  {
    v100 = MEMORY[0x1E0DEE9D8];
    v27 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_92:
    if (v27 < 2)
    {
LABEL_103:
      swift_bridgeObjectRelease();
      if (v3 >= -1)
      {
        *(_QWORD *)(v96 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_131;
    }
    v86 = *v94;
    while (1)
    {
      v87 = v27 - 2;
      if (v27 < 2)
        break;
      if (!v86)
        goto LABEL_135;
      v88 = v100;
      v89 = *(_QWORD *)(v100 + 32 + 16 * v87);
      v90 = *(_QWORD *)(v100 + 32 + 16 * (v27 - 1) + 8);
      sub_1D42D59FC(v86 + 24 * v89, v86 + 24 * *(_QWORD *)(v100 + 32 + 16 * (v27 - 1)), v86 + 24 * v90, v99);
      if (v1)
        goto LABEL_88;
      if (v90 < v89)
        goto LABEL_121;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D4333298(v100);
        v88 = v93;
      }
      if (v87 >= *(_QWORD *)(v88 + 16))
        goto LABEL_122;
      v91 = (_QWORD *)(v88 + 32 + 16 * v87);
      *v91 = v89;
      v91[1] = v90;
      v92 = *(_QWORD *)(v88 + 16);
      if (v27 > v92)
        goto LABEL_123;
      memmove((void *)(v88 + 32 + 16 * (v27 - 1)), (const void *)(v88 + 32 + 16 * v27), 16 * (v92 - v27));
      v100 = v88;
      *(_QWORD *)(v88 + 16) = v92 - 1;
      v27 = v92 - 1;
      v3 = v97;
      if (v92 <= 2)
        goto LABEL_103;
    }
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
    return;
  }
  v95 = v5;
  v8 = 0;
  v9 = *a1;
  v100 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v10 = v8++;
    if (v8 < v3)
    {
      v11 = sub_1D451B058();
      v8 = v10 + 2;
      if (v10 + 2 < v3)
      {
        v12 = v9 + 64 + 24 * v10;
        while (((v11 ^ sub_1D451B058()) & 1) == 0)
        {
          v12 += 24;
          if (++v8 >= v3)
          {
            v8 = v3;
            break;
          }
        }
      }
      if ((v11 & 1) != 0)
      {
        if (v8 < v10)
          goto LABEL_128;
        if (v10 < v8)
        {
          v13 = 24 * v8;
          v14 = 24 * v10;
          v15 = v8;
          v16 = v10;
          do
          {
            if (v16 != --v15)
            {
              if (!v9)
                goto LABEL_134;
              v17 = v9 + v14;
              v18 = v9 + v13;
              v19 = *(_QWORD *)(v9 + v14);
              v20 = *(_QWORD *)(v9 + v14 + 16);
              v21 = *(_QWORD *)(v9 + v14 + 8);
              v22 = *(_QWORD *)(v9 + v13 - 8);
              *(_OWORD *)v17 = *(_OWORD *)(v9 + v13 - 24);
              *(_QWORD *)(v17 + 16) = v22;
              *(_QWORD *)(v18 - 24) = v19;
              *(_QWORD *)(v18 - 16) = v21;
              *(_QWORD *)(v18 - 8) = v20;
            }
            ++v16;
            v13 -= 24;
            v14 += 24;
          }
          while (v16 < v15);
        }
      }
    }
    if (v8 >= v3)
      goto LABEL_27;
    if (__OFSUB__(v8, v10))
      goto LABEL_125;
    if (v8 - v10 >= v95)
      goto LABEL_27;
    if (__OFADD__(v10, v95))
      goto LABEL_129;
    if (v10 + v95 >= v3)
      v23 = v3;
    else
      v23 = v10 + v95;
    if (v23 < v10)
      goto LABEL_130;
    if (v8 == v23)
    {
LABEL_27:
      v24 = v100;
    }
    else
    {
      v75 = v9 + 16 + 24 * v8;
      v24 = v100;
      v98 = v23;
      do
      {
        v76 = v10;
        v77 = v10;
        v78 = v75;
        do
        {
          v79 = v78 - 40;
          if ((sub_1D451B058() & 1) == 0)
            break;
          if (!v9)
            goto LABEL_132;
          v80 = *(_QWORD *)(v78 - 24);
          *(_QWORD *)(v78 - 24) = *(_QWORD *)v78;
          v78 -= 24;
          v81 = *(_QWORD *)(v78 + 8);
          v82 = *(_DWORD *)(v78 + 16);
          v83 = *(_DWORD *)(v78 + 20);
          *(_OWORD *)(v79 + 24) = *(_OWORD *)v79;
          *(_QWORD *)(v79 + 40) = v80;
          *(_QWORD *)(v78 - 16) = v81;
          *(_DWORD *)(v78 - 8) = v82;
          *(_DWORD *)(v78 - 4) = v83;
          ++v77;
        }
        while (v8 != v77);
        ++v8;
        v75 += 24;
        v10 = v76;
      }
      while (v8 != v98);
      v8 = v98;
    }
    if (v8 < v10)
      goto LABEL_124;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1D43331B0(0, *(_QWORD *)(v24 + 16) + 1, 1, (char *)v24);
      v24 = v84;
    }
    v26 = *(_QWORD *)(v24 + 16);
    v25 = *(_QWORD *)(v24 + 24);
    v27 = v26 + 1;
    if (v26 >= v25 >> 1)
    {
      sub_1D43331B0(v25 > 1, v26 + 1, 1, (char *)v24);
      v24 = v85;
    }
    *(_QWORD *)(v24 + 16) = v27;
    v28 = v24 + 32;
    v29 = (uint64_t *)(v24 + 32 + 16 * v26);
    *v29 = v10;
    v29[1] = v8;
    v100 = v24;
    if (v26)
      break;
    v27 = 1;
LABEL_76:
    v3 = v97;
    if (v8 >= v97)
      goto LABEL_92;
  }
  while (1)
  {
    v30 = v27 - 1;
    if (v27 >= 4)
    {
      v35 = v28 + 16 * v27;
      v36 = *(_QWORD *)(v35 - 64);
      v37 = *(_QWORD *)(v35 - 56);
      v41 = __OFSUB__(v37, v36);
      v38 = v37 - v36;
      if (v41)
        goto LABEL_109;
      v40 = *(_QWORD *)(v35 - 48);
      v39 = *(_QWORD *)(v35 - 40);
      v41 = __OFSUB__(v39, v40);
      v33 = v39 - v40;
      v34 = v41;
      if (v41)
        goto LABEL_110;
      v42 = v27 - 2;
      v43 = (uint64_t *)(v28 + 16 * (v27 - 2));
      v45 = *v43;
      v44 = v43[1];
      v41 = __OFSUB__(v44, v45);
      v46 = v44 - v45;
      if (v41)
        goto LABEL_111;
      v41 = __OFADD__(v33, v46);
      v47 = v33 + v46;
      if (v41)
        goto LABEL_113;
      if (v47 >= v38)
      {
        v65 = (uint64_t *)(v28 + 16 * v30);
        v67 = *v65;
        v66 = v65[1];
        v41 = __OFSUB__(v66, v67);
        v68 = v66 - v67;
        if (v41)
          goto LABEL_119;
        v58 = v33 < v68;
        goto LABEL_65;
      }
    }
    else
    {
      if (v27 != 3)
      {
        v59 = *(_QWORD *)(v24 + 32);
        v60 = *(_QWORD *)(v24 + 40);
        v41 = __OFSUB__(v60, v59);
        v52 = v60 - v59;
        v53 = v41;
        goto LABEL_59;
      }
      v32 = *(_QWORD *)(v24 + 32);
      v31 = *(_QWORD *)(v24 + 40);
      v41 = __OFSUB__(v31, v32);
      v33 = v31 - v32;
      v34 = v41;
    }
    if ((v34 & 1) != 0)
      goto LABEL_112;
    v42 = v27 - 2;
    v48 = (uint64_t *)(v28 + 16 * (v27 - 2));
    v50 = *v48;
    v49 = v48[1];
    v51 = __OFSUB__(v49, v50);
    v52 = v49 - v50;
    v53 = v51;
    if (v51)
      goto LABEL_114;
    v54 = (uint64_t *)(v28 + 16 * v30);
    v56 = *v54;
    v55 = v54[1];
    v41 = __OFSUB__(v55, v56);
    v57 = v55 - v56;
    if (v41)
      goto LABEL_116;
    if (__OFADD__(v52, v57))
      goto LABEL_118;
    if (v52 + v57 >= v33)
    {
      v58 = v33 < v57;
LABEL_65:
      if (v58)
        v30 = v42;
      goto LABEL_67;
    }
LABEL_59:
    if ((v53 & 1) != 0)
      goto LABEL_115;
    v61 = (uint64_t *)(v28 + 16 * v30);
    v63 = *v61;
    v62 = v61[1];
    v41 = __OFSUB__(v62, v63);
    v64 = v62 - v63;
    if (v41)
      goto LABEL_117;
    if (v64 < v52)
      goto LABEL_76;
LABEL_67:
    v69 = v30 - 1;
    if (v30 - 1 >= v27)
    {
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
      goto LABEL_120;
    }
    if (!v9)
      goto LABEL_133;
    v70 = (uint64_t *)(v28 + 16 * v69);
    v71 = *v70;
    v72 = (_QWORD *)(v28 + 16 * v30);
    v73 = v72[1];
    sub_1D42D59FC(v9 + 24 * *v70, v9 + 24 * *v72, v9 + 24 * v73, v99);
    if (v1)
      break;
    if (v73 < v71)
      goto LABEL_106;
    if (v30 > *(_QWORD *)(v100 + 16))
      goto LABEL_107;
    *v70 = v71;
    *(_QWORD *)(v28 + 16 * v69 + 8) = v73;
    v74 = *(_QWORD *)(v100 + 16);
    if (v30 >= v74)
      goto LABEL_108;
    v24 = v100;
    v27 = v74 - 1;
    memmove((void *)(v28 + 16 * v30), v72 + 2, 16 * (v74 - 1 - v30));
    *(_QWORD *)(v100 + 16) = v74 - 1;
    if (v74 <= 2)
      goto LABEL_76;
  }
LABEL_88:
  swift_bridgeObjectRelease();
  if (v97 < -1)
    goto LABEL_127;
  *(_QWORD *)(v96 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t sub_1D42D5918(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 24 * a3 + 16;
    while (2)
    {
      v9 = v6;
      v10 = v8;
      do
      {
        v11 = v10 - 40;
        result = sub_1D451B058();
        if ((result & 1) == 0)
          break;
        if (!v7)
        {
          __break(1u);
          return result;
        }
        v12 = *(_QWORD *)(v10 - 24);
        *(_QWORD *)(v10 - 24) = *(_QWORD *)v10;
        v10 -= 24;
        result = *(_QWORD *)(v10 + 8);
        v13 = *(_DWORD *)(v10 + 16);
        v14 = *(_DWORD *)(v10 + 20);
        *(_OWORD *)(v11 + 24) = *(_OWORD *)v11;
        *(_QWORD *)(v11 + 40) = v12;
        *(_QWORD *)(v10 - 16) = result;
        *(_DWORD *)(v10 - 8) = v13;
        *(_DWORD *)(v10 - 4) = v14;
        ++v9;
      }
      while (v4 != v9);
      ++v4;
      v8 += 24;
      if (v4 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_1D42D59FC(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v14;
  BOOL v15;
  __int128 v16;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  BOOL v22;
  BOOL v23;
  __int128 v24;

  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 24;
  v10 = a3 - a2;
  v11 = (uint64_t)(a3 - a2) / 24;
  if (v9 >= v11)
  {
    sub_1D42C689C(a2, (uint64_t)(a3 - a2) / 24);
    v12 = a4 + 24 * v11;
    if (v7 >= v6 || v10 < 24)
      goto LABEL_39;
    v19 = a3 - 24;
    while (1)
    {
      v20 = v19 + 24;
      v21 = v6 - 24;
      if ((sub_1D451B058() & 1) != 0)
      {
        v22 = v20 != v6 || v19 >= v6;
        v6 -= 24;
        if (!v22)
          goto LABEL_35;
      }
      else
      {
        v23 = v20 != v12 || v19 >= v12;
        v21 = v12 - 24;
        v12 -= 24;
        if (!v23)
          goto LABEL_35;
      }
      v24 = *(_OWORD *)v21;
      *(_QWORD *)(v19 + 16) = *(_QWORD *)(v21 + 16);
      *(_OWORD *)v19 = v24;
LABEL_35:
      v19 -= 24;
      if (v6 <= v7 || v12 <= a4)
        goto LABEL_39;
    }
  }
  sub_1D42C689C(a1, (a2 - a1) / 24);
  v12 = a4 + 24 * v9;
  if (v6 < a3 && v8 >= 24)
  {
    while ((sub_1D451B058() & 1) == 0)
    {
      v14 = a4;
      v15 = v7 == a4;
      a4 += 24;
      if (!v15)
        goto LABEL_11;
LABEL_12:
      v7 += 24;
      if (a4 >= v12 || v6 >= a3)
        goto LABEL_39;
    }
    v14 = v6;
    v15 = v7 == v6;
    v6 += 24;
    if (v15)
      goto LABEL_12;
LABEL_11:
    v16 = *(_OWORD *)v14;
    *(_QWORD *)(v7 + 16) = *(_QWORD *)(v14 + 16);
    *(_OWORD *)v7 = v16;
    goto LABEL_12;
  }
LABEL_39:
  sub_1D42C689C(a4, (uint64_t)(v12 - a4) / 24);
  return 1;
}

void sub_1D42D5BA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D42D7054();
  if (v0)
  {
    v2 = v1 + 32;
    do
    {
      ++v2;
      sub_1D451B970();
      --v0;
    }
    while (v0);
  }
  sub_1D42CB15C();
}

uint64_t sub_1D42D5BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_1D42D708C();
  if (v3)
    __asm { BR              X9 }
  return result;
}

void sub_1D42D6090()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D42D7054();
  if (v0)
  {
    v2 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1D42D7140();
      swift_bridgeObjectRelease();
      v2 += 16;
      --v0;
    }
    while (v0);
  }
  sub_1D42CB084();
}

uint64_t sub_1D42D60DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  result = sub_1D42D7054();
  if (v0)
  {
    v3 = v1 + 56;
    do
    {
      swift_bridgeObjectRetain();
      sub_1D42D7140();
      sub_1D451B988();
      sub_1D451B964();
      result = swift_bridgeObjectRelease();
      v3 += 32;
      --v0;
    }
    while (v0);
  }
  return result;
}

void sub_1D42D6154()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D42D7054();
  if (v0)
  {
    v2 = v1 + 32;
    do
    {
      v2 += 8;
      sub_1D451B988();
      --v0;
    }
    while (v0);
  }
  sub_1D42CB15C();
}

void sub_1D42D6190()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1D42D7054();
  if (v0)
  {
    v2 = 0;
    v3 = v1 + 32;
    do
    {
      v4 = *(_QWORD *)(v3 + 8 * v2);
      sub_1D451B964();
      v5 = *(_QWORD *)(v4 + 16);
      if (v5)
      {
        v6 = v4 + 32;
        do
        {
          v6 += 8;
          sub_1D451B964();
          --v5;
        }
        while (v5);
      }
      ++v2;
    }
    while (v2 != v0);
  }
  sub_1D42CB084();
}

void sub_1D42D61F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D42D7054();
  if (v0)
  {
    v2 = v1 + 32;
    do
    {
      v2 += 8;
      sub_1D451B964();
      --v0;
    }
    while (v0);
  }
  sub_1D42CB15C();
}

void sub_1D42D6224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D42D7054();
  if (v0)
  {
    v2 = v1 + 40;
    do
    {
      sub_1D451B964();
      sub_1D451B964();
      v2 += 16;
      --v0;
    }
    while (v0);
  }
  sub_1D42CB15C();
}

void sub_1D42D6264()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D42D7054();
  if (v0)
  {
    v2 = v1 + 32;
    do
    {
      v2 += 4;
      sub_1D451B97C();
      --v0;
    }
    while (v0);
  }
  sub_1D42CB15C();
}

void sub_1D42D62A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v5 = sub_1D4519BC4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1D42CB18C();
  sub_1D42B28FC(qword_1EFE47450);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v7);
  sub_1D42D7108();
  v8 = *(_QWORD *)(a2 + 16);
  sub_1D451B964();
  if (v8)
  {
    v9 = a2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v10 = *(_QWORD *)(v6 + 72);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    while (1)
    {
      v11(v3, v9, v5);
      sub_1D42D7214(v3, 0);
      if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v3, 1, v5) == 1)
        break;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v2, v3, v5);
      sub_1D42D68D0();
      sub_1D451A614();
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2, v5);
      v9 += v10;
      if (!--v8)
        goto LABEL_5;
    }
  }
  else
  {
LABEL_5:
    sub_1D42D7214(v3, 1);
  }
  sub_1D42CB520();
}

void sub_1D42D63D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D42D7054();
  if (v0)
  {
    v2 = v1 + 32;
    do
    {
      ++v2;
      sub_1D451B964();
      --v0;
    }
    while (v0);
  }
  sub_1D42CB15C();
}

void sub_1D42D6404(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void **v4;
  void *v5;
  id v6;

  v3 = *(_QWORD *)(a2 + 16);
  sub_1D42D708C();
  if (v3)
  {
    v4 = (void **)(a2 + 32);
    do
    {
      v5 = *v4++;
      v6 = v5;
      sub_1D451B118();

      --v3;
    }
    while (v3);
  }
  sub_1D42CB15C();
}

void sub_1D42D6458(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = type metadata accessor for KShotSegment(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1D42CB18C();
  v6 = *(_QWORD *)(a2 + 16);
  sub_1D42D708C();
  if (v6)
  {
    v7 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v8 = *(_QWORD *)(v5 + 72);
    do
    {
      sub_1D42C13D8(v7, v2);
      sub_1D451B988();
      sub_1D451B97C();
      sub_1D451B97C();
      sub_1D451B988();
      sub_1D451B988();
      sub_1D451B97C();
      sub_1D451B97C();
      sub_1D451B988();
      sub_1D4519BC4();
      sub_1D42D68D0();
      sub_1D451A614();
      sub_1D42C87B8(v2);
      v7 += v8;
      --v6;
    }
    while (v6);
  }
  sub_1D42CB520();
}

void sub_1D42D6590()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D42D7054();
  if (v0)
  {
    v2 = v1 + 48;
    do
    {
      v2 += 24;
      sub_1D451B988();
      sub_1D451B97C();
      sub_1D451B97C();
      sub_1D451B988();
      --v0;
    }
    while (v0);
  }
  sub_1D42CB084();
}

void sub_1D42D65E8(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 48));
  sub_1D42B6E24();
}

uint64_t type metadata accessor for _SNTimeDurationConstraint()
{
  return objc_opt_self();
}

uint64_t method lookup function for _SNTimeDurationConstraint()
{
  return swift_lookUpClassMethod();
}

uint64_t destroy for TimeDurationConstraint(uint64_t a1)
{
  return sub_1D42B5C4C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t initializeWithCopy for TimeDurationConstraint(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_1D42B5CF4(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  return a1;
}

uint64_t assignWithCopy for TimeDurationConstraint(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_1D42B5CF4(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  v16 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  sub_1D42B5C4C(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

__n128 initializeWithTake for TimeDurationConstraint(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for TimeDurationConstraint(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  __int128 v11;

  v3 = *(_BYTE *)(a2 + 48);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_BYTE *)(a1 + 48);
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = v3;
  sub_1D42B5C4C(v4, v6, v5, v7, v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for TimeDurationConstraint(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 49))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 48);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TimeDurationConstraint(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = -(char)a2;
  }
  return result;
}

uint64_t sub_1D42D686C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 48);
}

uint64_t sub_1D42D6874(uint64_t result, char a2)
{
  *(_BYTE *)(result + 48) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for TimeDurationConstraint()
{
  return &type metadata for TimeDurationConstraint;
}

unint64_t sub_1D42D6894()
{
  unint64_t result;

  result = qword_1EFE49EA8;
  if (!qword_1EFE49EA8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4525BA8, &type metadata for TimeDurationConstraint);
    atomic_store(result, (unint64_t *)&qword_1EFE49EA8);
  }
  return result;
}

unint64_t sub_1D42D68D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFE49A80;
  if (!qword_1EFE49A80)
  {
    v1 = sub_1D4519BC4();
    result = MEMORY[0x1D825E41C](MEMORY[0x1E0CB0018], v1);
    atomic_store(result, (unint64_t *)&qword_1EFE49A80);
  }
  return result;
}

unint64_t sub_1D42D6910()
{
  unint64_t result;

  result = qword_1EFE49EC8;
  if (!qword_1EFE49EC8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4525F60, &type metadata for TimeDurationConstraint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49EC8);
  }
  return result;
}

unint64_t sub_1D42D694C()
{
  unint64_t result;

  result = qword_1EFE49ED8;
  if (!qword_1EFE49ED8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4525F10, &type metadata for TimeDurationConstraint.RangeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49ED8);
  }
  return result;
}

unint64_t sub_1D42D6988()
{
  unint64_t result;

  result = qword_1EFE49EE8;
  if (!qword_1EFE49EE8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4525EC0, &type metadata for TimeDurationConstraint.EnumeratedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49EE8);
  }
  return result;
}

uint64_t sub_1D42D69C4(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = sub_1D42B8B10(&qword_1EFE49EF0);
    v8 = a2();
    result = MEMORY[0x1D825E41C](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D42D6A2C()
{
  unint64_t result;

  result = qword_1EFE47310;
  if (!qword_1EFE47310)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFE47310);
  }
  return result;
}

void sub_1D42D6A68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D42D7054();
  if (v0)
  {
    v2 = v1 + 32;
    do
    {
      v2 += 4;
      sub_1D451B97C();
      --v0;
    }
    while (v0);
  }
  sub_1D42CB15C();
}

void sub_1D42D6A9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D42D7054();
  if (v0)
  {
    v2 = v1 + 36;
    do
    {
      sub_1D451B97C();
      sub_1D451B97C();
      v2 += 8;
      --v0;
    }
    while (v0);
  }
  sub_1D42CB15C();
}

uint64_t storeEnumTagSinglePayload for TimeDurationConstraint.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D42D6B2C + 4 * byte_1D4525B2E[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D42D6B60 + 4 * byte_1D4525B29[v4]))();
}

uint64_t sub_1D42D6B60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D42D6B68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D42D6B70);
  return result;
}

uint64_t sub_1D42D6B7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D42D6B84);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D42D6B88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D42D6B90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TimeDurationConstraint.CodingKeys()
{
  return &type metadata for TimeDurationConstraint.CodingKeys;
}

ValueMetadata *type metadata accessor for TimeDurationConstraint.EnumeratedCodingKeys()
{
  return &type metadata for TimeDurationConstraint.EnumeratedCodingKeys;
}

uint64_t _s13SoundAnalysis22TimeDurationConstraintO20EnumeratedCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D42D6C00 + 4 * byte_1D4525B33[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D42D6C20 + 4 * byte_1D4525B38[v4]))();
}

_BYTE *sub_1D42D6C00(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D42D6C20(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D42D6C28(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D42D6C30(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D42D6C38(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D42D6C40(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TimeDurationConstraint.RangeCodingKeys()
{
  return &type metadata for TimeDurationConstraint.RangeCodingKeys;
}

unint64_t sub_1D42D6C60()
{
  unint64_t result;

  result = qword_1EFE49F40;
  if (!qword_1EFE49F40)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4525D28, &type metadata for TimeDurationConstraint.RangeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49F40);
  }
  return result;
}

unint64_t sub_1D42D6CA0()
{
  unint64_t result;

  result = qword_1EFE49F48;
  if (!qword_1EFE49F48)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4525DE0, &type metadata for TimeDurationConstraint.EnumeratedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49F48);
  }
  return result;
}

unint64_t sub_1D42D6CE0()
{
  unint64_t result;

  result = qword_1EFE49F50;
  if (!qword_1EFE49F50)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4525E98, &type metadata for TimeDurationConstraint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49F50);
  }
  return result;
}

unint64_t sub_1D42D6D20()
{
  unint64_t result;

  result = qword_1EFE49F58;
  if (!qword_1EFE49F58)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4525D50, &type metadata for TimeDurationConstraint.EnumeratedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49F58);
  }
  return result;
}

unint64_t sub_1D42D6D60()
{
  unint64_t result;

  result = qword_1EFE49F60;
  if (!qword_1EFE49F60)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4525D78, &type metadata for TimeDurationConstraint.EnumeratedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49F60);
  }
  return result;
}

unint64_t sub_1D42D6DA0()
{
  unint64_t result;

  result = qword_1EFE49F68;
  if (!qword_1EFE49F68)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4525C98, &type metadata for TimeDurationConstraint.RangeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49F68);
  }
  return result;
}

unint64_t sub_1D42D6DE0()
{
  unint64_t result;

  result = qword_1EFE49F70;
  if (!qword_1EFE49F70)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4525CC0, &type metadata for TimeDurationConstraint.RangeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49F70);
  }
  return result;
}

unint64_t sub_1D42D6E20()
{
  unint64_t result;

  result = qword_1EFE49F78;
  if (!qword_1EFE49F78)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4525E08, &type metadata for TimeDurationConstraint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49F78);
  }
  return result;
}

unint64_t sub_1D42D6E60()
{
  unint64_t result;

  result = qword_1EFE49F80;
  if (!qword_1EFE49F80)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4525E30, &type metadata for TimeDurationConstraint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49F80);
  }
  return result;
}

uint64_t sub_1D42D6E9C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t result;

  switch(a4 >> 28)
  {
    case 1u:
    case 3u:
    case 4u:
    case 6u:
    case 7u:
      goto LABEL_2;
    case 2u:
      swift_bridgeObjectRelease();
LABEL_2:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D42D6EFC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t result;

  switch(a4 >> 28)
  {
    case 1u:
    case 3u:
    case 4u:
    case 6u:
    case 7u:
      goto LABEL_2;
    case 2u:
      swift_bridgeObjectRetain();
LABEL_2:
      result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D42D6F5C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_1D42D6F98(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

uint64_t sub_1D42D6FCC()
{
  return swift_deallocObject();
}

unint64_t sub_1D42D6FDC()
{
  unint64_t result;

  result = qword_1EFE49F90;
  if (!qword_1EFE49F90)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452CE84, &type metadata for HashableUtilsError);
    atomic_store(result, (unint64_t *)&qword_1EFE49F90);
  }
  return result;
}

void sub_1D42D7018(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1D42B28FC(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  sub_1D42B6E24();
}

uint64_t sub_1D42D7054()
{
  return sub_1D451B964();
}

uint64_t sub_1D42D7068()
{
  return sub_1D451B964();
}

uint64_t sub_1D42D708C()
{
  return sub_1D451B964();
}

uint64_t sub_1D42D7094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned int a15)
{
  uint64_t v15;
  uint64_t v16;

  return sub_1D42D6E9C(v16, v15, a13, a15);
}

uint64_t sub_1D42D70AC()
{
  return swift_deallocPartialClassInstance();
}

uint64_t sub_1D42D70C0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D42D70DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 192) + 8))(v0, v1);
}

uint64_t sub_1D42D7130(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 160) + 8))(a1, v1);
}

uint64_t sub_1D42D7140()
{
  return sub_1D451A74C();
}

uint64_t sub_1D42D7150()
{
  return sub_1D451A74C();
}

uint64_t sub_1D42D7160()
{
  return sub_1D451A74C();
}

unint64_t sub_1D42D7170()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 128) = 1;
  return sub_1D42D694C();
}

uint64_t sub_1D42D717C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_1D42D7188()
{
  return sub_1D451B5E0();
}

uint64_t sub_1D42D7194()
{
  return sub_1D451B964();
}

uint64_t sub_1D42D71A0()
{
  return sub_1D451B97C();
}

uint64_t sub_1D42D71AC()
{
  return sub_1D451B988();
}

uint64_t sub_1D42D71B8()
{
  return sub_1D451B964();
}

uint64_t sub_1D42D71C4()
{
  uint64_t v0;

  return v0;
}

void sub_1D42D71D8()
{
  void *v0;

}

uint64_t sub_1D42D71E0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D42D71EC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D42D71F4()
{
  return sub_1D451B760();
}

uint64_t sub_1D42D7200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1D42B5C4C(a1, a2, a3, a4, a5, a6, 0);
}

void sub_1D42D7208()
{
  sub_1D442F2A0();
}

uint64_t sub_1D42D7214(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(a1, a2, 1, v2);
}

uint64_t sub_1D42D7220()
{
  return sub_1D451B610();
}

uint64_t sub_1D42D722C()
{
  return sub_1D451B6F4();
}

double SNNullResult.timeRange.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = v1 + OBJC_IVAR___SNNullResult_impl;
  *(_QWORD *)v3 = *(_QWORD *)a1;
  *(_QWORD *)(v3 + 8) = *(_QWORD *)(a1 + 8);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(a1 + 16);
  result = *(double *)(a1 + 32);
  *(double *)(v3 + 32) = result;
  *(_QWORD *)(v3 + 40) = v2;
  return result;
}

uint64_t sub_1D42D7270()
{
  sub_1D42D8410();
  sub_1D451B988();
  sub_1D42D8408();
  sub_1D42CB47C();
  sub_1D42D83F4();
  sub_1D42CB904();
  sub_1D42CB8EC();
  sub_1D42D83EC();
  return sub_1D42CB8E4();
}

BOOL sub_1D42D72D8(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1D42D83FC((uint64_t)a1, (uint64_t)a2, a3, a4, a5, a6, a7, a8, *a2, a2[1], a2[2], a2[3], a2[4], a2[5], *a1);
}

uint64_t sub_1D42D7344(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x676E6152656D6974 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1D451B820();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1D42D73D4()
{
  return 0x676E6152656D6974;
}

void sub_1D42D73F0(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = v1;
  v4 = sub_1D42B28FC((uint64_t *)&unk_1EFE49FC8);
  v11 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  v8 = v2[2];
  v9 = v2[3];
  v10 = v2[5];
  sub_1D42B5528(a1, a1[3]);
  sub_1D42D822C();
  sub_1D451BA24();
  v12 = v7;
  v13 = v2[1];
  v14 = v8;
  v15 = v9;
  v16 = v2[4];
  v17 = v10;
  sub_1D42CA408();
  sub_1D451B760();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v4);
  sub_1D42BE844();
}

void sub_1D42D7510()
{
  sub_1D42D8410();
  sub_1D42BE9A8();
  sub_1D42CB950();
  sub_1D42D8408();
  sub_1D42CB47C();
  sub_1D42D83F4();
  sub_1D42CB904();
  sub_1D42CB8EC();
  sub_1D42D83EC();
  sub_1D42CB8E4();
  sub_1D451B994();
  sub_1D42CB414();
}

void sub_1D42D7588(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  _QWORD v13[2];
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  v5 = sub_1D42B28FC(&qword_1EFE49FB0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42B5528(a1, a1[3]);
  sub_1D42D822C();
  sub_1D451BA0C();
  if (!v2)
  {
    sub_1D42CA3CC();
    sub_1D451B688();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v9 = v16;
    v10 = v13[1];
    v11 = v15;
    v12 = v14;
    *(_QWORD *)a2 = v13[0];
    *(_QWORD *)(a2 + 8) = v10;
    *(_OWORD *)(a2 + 16) = v12;
    *(_QWORD *)(a2 + 32) = v11;
    *(_QWORD *)(a2 + 40) = v9;
  }
  sub_1D42B5400((uint64_t)a1);
  sub_1D42BE844();
}

uint64_t sub_1D42D76BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D42D7344(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D42D76E4()
{
  sub_1D42D822C();
  return sub_1D451BA3C();
}

uint64_t sub_1D42D770C()
{
  sub_1D42D822C();
  return sub_1D451BA48();
}

uint64_t sub_1D42D773C()
{
  sub_1D451B958();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  return sub_1D451B994();
}

void sub_1D42D7800(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1D42D7588(a1, a2);
}

void sub_1D42D7814(_QWORD *a1)
{
  sub_1D42D73F0(a1);
}

double SNNullResult.timeRange.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = v1 + OBJC_IVAR___SNNullResult_impl;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR___SNNullResult_impl + 40);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SNNullResult_impl);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(v2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v2 + 16);
  result = *(double *)(v2 + 32);
  *(double *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 40) = v3;
  return result;
}

double (*SNNullResult.timeRange.modify(_QWORD *a1))(void **a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[6] = v1;
  SNNullResult.timeRange.getter((uint64_t)v3);
  return sub_1D42D795C;
}

double sub_1D42D795C(void **a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  double result;

  v1 = *a1;
  v2 = v1[5];
  v3 = v1[6] + OBJC_IVAR___SNNullResult_impl;
  v4 = v1[1];
  v5 = v1[4];
  v6 = *((_OWORD *)v1 + 1);
  *(_QWORD *)v3 = *v1;
  *(_QWORD *)(v3 + 8) = v4;
  *(_OWORD *)(v3 + 16) = v6;
  *(_QWORD *)(v3 + 32) = v5;
  *(_QWORD *)(v3 + 40) = v2;
  free(v1);
  return result;
}

id sub_1D42D7998()
{
  char *v0;
  objc_class *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  objc_super v6;

  v1 = (objc_class *)sub_1D42B7104();
  v2 = MEMORY[0x1E0CA2E40];
  v3 = *(_QWORD *)(MEMORY[0x1E0CA2E40] + 40);
  v4 = &v0[OBJC_IVAR___SNNullResult_impl];
  *(_QWORD *)v4 = *MEMORY[0x1E0CA2E40];
  *((_QWORD *)v4 + 1) = *(_QWORD *)(v2 + 8);
  *((_OWORD *)v4 + 1) = *(_OWORD *)(v2 + 16);
  *((_QWORD *)v4 + 4) = *(_QWORD *)(v2 + 32);
  *((_QWORD *)v4 + 5) = v3;
  v6.receiver = v0;
  v6.super_class = v1;
  return objc_msgSendSuper2(&v6, sel_init);
}

id sub_1D42D7A24()
{
  uint64_t v0;
  objc_class *v1;
  char *v2;
  uint64_t v3;
  char *v4;
  objc_super v6;

  v2 = (char *)sub_1D42B7238();
  v3 = *(_QWORD *)(v0 + 40);
  v4 = &v2[OBJC_IVAR___SNNullResult_impl];
  *(_QWORD *)v4 = *(_QWORD *)v0;
  *((_QWORD *)v4 + 1) = *(_QWORD *)(v0 + 8);
  *((_OWORD *)v4 + 1) = *(_OWORD *)(v0 + 16);
  *((_QWORD *)v4 + 4) = *(_QWORD *)(v0 + 32);
  *((_QWORD *)v4 + 5) = v3;
  v6.receiver = v2;
  v6.super_class = v1;
  return objc_msgSendSuper2(&v6, sel_init);
}

id SNNullResult.copy(with:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  id result;

  v3 = sub_1D42B7104();
  sub_1D42D83C4(v1 + OBJC_IVAR___SNNullResult_impl);
  result = sub_1D42D7A24();
  a1[3] = v3;
  *a1 = result;
  return result;
}

void SNNullResult.hash.getter()
{
  sub_1D42BE9A8();
  sub_1D42CB950();
  sub_1D42D8408();
  sub_1D42CB47C();
  sub_1D42D83F4();
  sub_1D42CB904();
  sub_1D42CB8EC();
  sub_1D42D83EC();
  sub_1D42CB8E4();
  sub_1D451B994();
  sub_1D42CB414();
}

BOOL SNNullResult.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD v28[2];
  __int128 v29;
  uint64_t v30;

  sub_1D42B7104();
  sub_1D42B28B4(a1, (uint64_t)&v29);
  if (v30)
  {
    sub_1D42B293C(&v29, v28);
    sub_1D42B294C((uint64_t)v28, (uint64_t)v24);
    if (swift_dynamicCast() && (v3 = v18) != 0)
    {
      v4 = *(_QWORD *)(v1 + OBJC_IVAR___SNNullResult_impl + 40);
      v5 = (uint64_t)&v18[OBJC_IVAR___SNNullResult_impl];
      v6 = *(_QWORD *)&v18[OBJC_IVAR___SNNullResult_impl];
      v24[0] = *(_QWORD *)(v1 + OBJC_IVAR___SNNullResult_impl);
      v24[1] = *(_QWORD *)(v1 + OBJC_IVAR___SNNullResult_impl + 8);
      v25 = *(_OWORD *)(v1 + OBJC_IVAR___SNNullResult_impl + 16);
      v26 = *(_QWORD *)(v1 + OBJC_IVAR___SNNullResult_impl + 32);
      v27 = v4;
      v19 = v6;
      sub_1D42D83C4(v5);
      v16 = sub_1D42D83FC(v7, v8, v9, v10, v11, v12, v13, v14, v19, v20, v21, v22, v23, v15, v24[0]);

    }
    else
    {
      v16 = 0;
    }
    sub_1D42B5400((uint64_t)v28);
  }
  else
  {
    return 0;
  }
  return v16;
}

id SNNullResult.__allocating_init(coder:)()
{
  void *v0;

  sub_1D42B7238();
  return SNNullResult.init(coder:)(v0);
}

id SNNullResult.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  id v4;

  v3 = v1;
  sub_1D42B13E4(1819307369, 0xE400000000000000, a1);
  swift_getObjectType();

  v4 = sub_1D42D7A24();
  sub_1D42D83E0();
  return v4;
}

Swift::Void __swiftcall SNNullResult.encode(with:)(NSCoder with)
{
  uint64_t v1;
  __int128 v2;
  _OWORD v3[3];

  v2 = *(_OWORD *)(v1 + OBJC_IVAR___SNNullResult_impl + 16);
  v3[0] = *(_OWORD *)(v1 + OBJC_IVAR___SNNullResult_impl);
  v3[1] = v2;
  v3[2] = *(_OWORD *)(v1 + OBJC_IVAR___SNNullResult_impl + 32);
  sub_1D42AF5CC((uint64_t)v3, 1819307369, 0xE400000000000000, (uint64_t)with.super.isa);
}

uint64_t static SNNullResult.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t SNNullResult.description.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  _QWORD v12[6];
  objc_super v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[6];

  v13.receiver = v0;
  v13.super_class = (Class)sub_1D42B7104();
  v3 = objc_msgSendSuper2(&v13, sel_description);
  sub_1D451A6EC();
  sub_1D42B722C();
  v14 = v1;
  v15 = v2;
  sub_1D451A794();
  SNNullResult.timeRange.getter((uint64_t)v16);
  v4 = v16[0];
  v5 = v16[2];
  v6 = v16[3];
  v7 = v16[5];
  v8 = (void *)objc_opt_self();
  v12[0] = v4;
  v12[1] = v16[1];
  v12[2] = v5;
  v12[3] = v6;
  v12[4] = v16[4];
  v12[5] = v7;
  v9 = objc_msgSend(v8, sel_valueWithCMTimeRange_, v12);
  v10 = objc_msgSend(v9, sel_description);
  sub_1D451A6EC();
  sub_1D42B722C();
  sub_1D451A794();

  swift_bridgeObjectRelease();
  return v14;
}

id SNNullResult.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_1D42B7104();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

double sub_1D42D815C@<D0>(uint64_t a1@<X8>)
{
  return SNNullResult.timeRange.getter(a1);
}

double sub_1D42D817C(uint64_t a1)
{
  return SNNullResult.timeRange.setter(a1);
}

uint64_t type metadata accessor for SNNullResult()
{
  return objc_opt_self();
}

uint64_t method lookup function for SNNullResult()
{
  return swift_lookUpClassMethod();
}

__n128 initializeWithCopy for TimeRange(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for NullResult()
{
  return &type metadata for NullResult;
}

unint64_t sub_1D42D81F0()
{
  unint64_t result;

  result = qword_1EFE49FA8;
  if (!qword_1EFE49FA8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4525FFC, &type metadata for NullResult);
    atomic_store(result, (unint64_t *)&qword_1EFE49FA8);
  }
  return result;
}

unint64_t sub_1D42D822C()
{
  unint64_t result;

  result = qword_1EFE49FB8;
  if (!qword_1EFE49FB8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4526178, &type metadata for NullResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49FB8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for NullResult.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D42D82A8 + 4 * byte_1D4525FB0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D42D82C8 + 4 * byte_1D4525FB5[v4]))();
}

_BYTE *sub_1D42D82A8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D42D82C8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D42D82D0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D42D82D8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D42D82E0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D42D82E8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for NullResult.CodingKeys()
{
  return &type metadata for NullResult.CodingKeys;
}

unint64_t sub_1D42D8308()
{
  unint64_t result;

  result = qword_1EFE49FD8;
  if (!qword_1EFE49FD8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4526150, &type metadata for NullResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49FD8);
  }
  return result;
}

unint64_t sub_1D42D8348()
{
  unint64_t result;

  result = qword_1EFE49FE0;
  if (!qword_1EFE49FE0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45260C0, &type metadata for NullResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE49FE0);
  }
  return result;
}

unint64_t sub_1D42D8388()
{
  unint64_t result;

  result = qword_1EFE49FE8[0];
  if (!qword_1EFE49FE8[0])
  {
    result = MEMORY[0x1D825E41C](&unk_1D45260E8, &type metadata for NullResult.CodingKeys);
    atomic_store(result, qword_1EFE49FE8);
  }
  return result;
}

double sub_1D42D83C4@<D0>(uint64_t a1@<X8>)
{
  return *(double *)(a1 + 32);
}

uint64_t sub_1D42D83E0()
{
  return swift_deallocPartialClassInstance();
}

uint64_t sub_1D42D83EC()
{
  return sub_1D451B97C();
}

uint64_t sub_1D42D83F4()
{
  return sub_1D451B988();
}

BOOL sub_1D42D83FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  return static TimeRange.== infix(_:_:)((uint64_t)&a15, (uint64_t)&a9);
}

uint64_t sub_1D42D8408()
{
  return sub_1D451B97C();
}

void static Tools.printModelInfo(url:)(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  __n128 *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  __n128 *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _DWORD *v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  __n128 *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __n128 v94;
  uint64_t v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  void *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  __int128 v176;
  uint64_t v177;
  unint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char v183;
  uint64_t v184;
  unint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;

  v2 = sub_1D4457ED4(a1);
  if (!v1)
  {
    v4 = v2;
    v5 = v3;
    if (v3 < 0)
    {
      v7 = (_QWORD *)(v3 & 0x7FFFFFFFFFFFFFFFLL);
      sub_1D42B28FC(qword_1EFE40540);
      v8 = sub_1D42D8C20();
      v176 = xmmword_1D45261D0;
      v9 = MEMORY[0x1E0DEA968];
      *(_OWORD *)(v8 + 16) = xmmword_1D45261D0;
      *(_QWORD *)(v8 + 56) = v9;
      *(_QWORD *)(v8 + 32) = 0x6C65646F4D203545;
      *(_QWORD *)(v8 + 40) = 0xE800000000000000;
      swift_retain();
      swift_retain();
      sub_1D42D8BFC();
      sub_1D42B7204();
      v10 = (__n128 *)sub_1D42D8C10();
      sub_1D42D8C90(v10, v11, v12, v13, v14, v15, v16, v17, v117, v123, v129, v135, v141, v147, v153, v158, v163, v169, v18);
      *(_QWORD *)(v19 + 32) = 10;
      *(_QWORD *)(v19 + 40) = 0xE100000000000000;
      sub_1D42D8BFC();
      sub_1D42B7204();
      v20 = (__n128 *)sub_1D42D8C10();
      sub_1D42D8C90(v20, v21, v22, v23, v24, v25, v26, v27, v118, v124, v130, v136, v142, v148, v154, v159, v164, v170, v28);
      strcpy((char *)(v29 + 32), "Input names:");
      *(_BYTE *)(v29 + 45) = 0;
      *(_WORD *)(v29 + 46) = -5120;
      sub_1D42D8BFC();
      sub_1D42B7204();
      sub_1D436C124(*(_QWORD *)(v5 + 16));
      v31 = sub_1D436C170(v30);
      v151 = v5 & 0x7FFFFFFFFFFFFFFFLL;
      v157 = v5;
      v162 = v4;
      v167 = 0;
      v174 = (uint64_t)v31;
      v69 = v31[2];
      v70 = v9;
      if (v69)
      {
        v71 = v31 + 5;
        do
        {
          v72 = sub_1D42D8C10();
          sub_1D42D8C2C(v72, v73, v74, v75, v76, v77, v78, v79, v119, v125, v131, v137, v143, v151, v157, (uint64_t)v162, v167, v174, v176);
          sub_1D42D8C74();
          sub_1D42CB338();
          sub_1D42D8C6C();
          v80 = v177;
          v81 = v178;
          v7[7] = v70;
          v7[4] = v80;
          v7[5] = v81;
          sub_1D42D8BFC();
          swift_bridgeObjectRelease();
          v71 += 2;
          --v69;
        }
        while (v69);
      }
      swift_bridgeObjectRelease();
      v82 = sub_1D42D8C10();
      *(_OWORD *)(v82 + 16) = v176;
      *(_QWORD *)(v82 + 56) = v70;
      *(_QWORD *)(v82 + 32) = 10;
      *(_QWORD *)(v82 + 40) = 0xE100000000000000;
      sub_1D42D8BFC();
      sub_1D42B7204();
      v83 = sub_1D42D8C10();
      *(_OWORD *)(v83 + 16) = v176;
      *(_QWORD *)(v83 + 56) = v70;
      strcpy((char *)(v83 + 32), "Output names:");
      *(_WORD *)(v83 + 46) = -4864;
      sub_1D42D8BFC();
      sub_1D42B7204();
      sub_1D436C0BC(*(_QWORD *)(v151 + 16));
      if (v167)
      {
        sub_1D42D8B00(v162, v157);
        swift_release();
        swift_release();
        return;
      }
      v85 = sub_1D436C108(v84);
      v168 = 0;
      v175 = (uint64_t)v85;
      v104 = v85[2];
      if (v104)
      {
        v105 = v85 + 5;
        do
        {
          v106 = sub_1D42D8C10();
          sub_1D42D8C2C(v106, v107, v108, v109, v110, v111, v112, v113, v119, v125, v131, v137, v143, v151, v157, (uint64_t)v162, v168, v175, v176);
          sub_1D42D8C74();
          sub_1D42CB338();
          sub_1D42D8C6C();
          v114 = v177;
          v115 = v178;
          v7[7] = v70;
          v7[4] = v114;
          v7[5] = v115;
          sub_1D42D8BFC();
          swift_bridgeObjectRelease();
          v105 += 2;
          --v104;
        }
        while (v104);
      }
      swift_bridgeObjectRelease();
      v116 = sub_1D42D8C10();
      *(_OWORD *)(v116 + 16) = v176;
      *(_QWORD *)(v116 + 56) = v70;
      *(_QWORD *)(v116 + 32) = 10;
      *(_QWORD *)(v116 + 40) = 0xE100000000000000;
      sub_1D42D8BFC();
      sub_1D42D8B00(v162, v157);
      swift_release();
      swift_release();
    }
    else
    {
      v6 = objc_allocWithZone((Class)SNClassifySoundRequest);
      v32 = sub_1D42D8B2C(v4);
      sub_1D42B28FC(qword_1EFE40540);
      v33 = sub_1D42D8C20();
      *(_OWORD *)(v33 + 16) = xmmword_1D45261D0;
      v34 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v33 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v33 + 32) = 0xD00000000000001CLL;
      *(_QWORD *)(v33 + 40) = 0x80000001D4550F40;
      sub_1D42D8BFC();
      sub_1D42B7204();
      SNClassifySoundRequest.windowDurationConstraint.getter((uint64_t)&v177);
      v35 = v177;
      if ((v183 & 1) != 0)
      {
        v184 = v177;
        v185 = v178;
        v186 = v179;
        v187 = v180;
        v188 = v181;
        v189 = v182;
        v36 = (__n128 *)sub_1D42D8C10();
        sub_1D42D8C4C(v36, v37, v38, v39, v40, v41, v42, v43, v117, v123, v129, v135, v141, (uint64_t)v32, v5, (uint64_t)v4, 0, v169, v44);
        *(_QWORD *)(v45 + 32) = 0xD00000000000001ELL;
        *(_QWORD *)(v45 + 40) = 0x80000001D4550F60;
        sub_1D42D8BFC();
        sub_1D42B7204();
        v46 = sub_1D42D8C10();
        *(_OWORD *)(v46 + 16) = xmmword_1D45261D0;
        sub_1D4344508();
        sub_1D451A794();
        sub_1D42CB5C8();
        sub_1D42D8C6C();
        *(_QWORD *)(v46 + 56) = v34;
        *(_QWORD *)(v46 + 32) = 538976288;
        *(_QWORD *)(v46 + 40) = 0xE400000000000000;
        sub_1D42D8BFC();
        swift_bridgeObjectRelease();
      }
      else
      {
        v127 = v178;
        v133 = v179;
        v139 = v180;
        v145 = v181;
        v172 = v182;
        v47 = (__n128 *)sub_1D42D8C10();
        sub_1D42D8C4C(v47, v48, v49, v50, v51, v52, v53, v54, v117, v127, v133, v139, v145, (uint64_t)v32, v5, (uint64_t)v4, 0, v172, v55);
        *(_QWORD *)(v56 + 32) = 0xD00000000000001FLL;
        *(_QWORD *)(v56 + 40) = 0x80000001D4550F80;
        sub_1D42D8BFC();
        sub_1D42B7204();
        v60 = v35;
        v61 = *(_QWORD *)(v35 + 16);
        if (v61)
        {
          v122 = v60;
          v62 = (_DWORD *)(v60 + 40);
          do
          {
            v63 = *((_QWORD *)v62 - 1);
            v64 = *v62;
            v62 += 6;
            v65 = sub_1D42D8C10();
            *(_OWORD *)(v65 + 16) = xmmword_1D45261D0;
            v190 = v63;
            sub_1D451B7C0();
            sub_1D42D8C6C();
            LODWORD(v190) = v64;
            sub_1D451B7C0();
            sub_1D451A794();
            sub_1D42CB338();
            sub_1D451A794();
            sub_1D42CB338();
            sub_1D42D8C6C();
            *(_QWORD *)(v65 + 56) = MEMORY[0x1E0DEA968];
            *(_QWORD *)(v65 + 32) = 538976288;
            *(_QWORD *)(v65 + 40) = 0xE400000000000000;
            sub_1D42D8BFC();
            sub_1D42CB5C8();
            --v61;
          }
          while (v61);
          sub_1D42D8C84(v122, v128, v134, v140, v146, v66, v67, v68, v122, v128, v134, v140, v146, v150, v156, v161, v166, v173);
          v32 = (id)v149;
          v34 = MEMORY[0x1E0DEA968];
        }
        else
        {
          sub_1D42D8C84(v60, v128, v134, v140, v146, v57, v58, v59, v121, v128, v134, v140, v146, v150, v156, v161, v166, v173);
        }
      }
      v86 = (__n128 *)sub_1D42D8C10();
      sub_1D42D8C4C(v86, v87, v88, v89, v90, v91, v92, v93, v120, v126, v132, v138, v144, v149, v155, v160, v165, v171, v94);
      *(_QWORD *)(v95 + 32) = 0xA3A736C6562614CLL;
      *(_QWORD *)(v95 + 40) = 0xE800000000000000;
      sub_1D42D8BFC();
      sub_1D42B7204();
      v96 = objc_msgSend(v32, sel_knownClassifications);
      v97 = sub_1D451A92C();

      v98 = v34;
      v99 = *(_QWORD *)(v97 + 16);
      if (v99)
      {
        v100 = v97 + 40;
        do
        {
          v101 = sub_1D42D8C20();
          *(_OWORD *)(v101 + 16) = xmmword_1D45261D0;
          v177 = 2236461;
          v178 = 0xE300000000000000;
          swift_bridgeObjectRetain();
          sub_1D451A794();
          sub_1D42CB5C8();
          sub_1D451A794();
          v102 = v177;
          v103 = v178;
          *(_QWORD *)(v101 + 56) = v98;
          *(_QWORD *)(v101 + 32) = v102;
          *(_QWORD *)(v101 + 40) = v103;
          sub_1D42D8BFC();
          sub_1D42CB338();
          v100 += 16;
          --v99;
        }
        while (v99);
      }
      sub_1D42D8CA4();

      sub_1D42D8CA4();
    }
    swift_bridgeObjectRelease();
  }
}

void sub_1D42D8B00(void *a1, uint64_t a2)
{
  if (a2 < 0)
  {
    swift_release();
    swift_release();
  }
  else
  {

  }
}

id sub_1D42D8B2C(void *a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x1E0C80C00];
  v7[0] = 0;
  v3 = objc_msgSend(v1, sel_initWithMLModel_error_, a1, v7);
  if (v3)
  {
    v4 = v7[0];
  }
  else
  {
    v5 = v7[0];
    sub_1D4519AA4();

    swift_willThrow();
  }

  return v3;
}

ValueMetadata *type metadata accessor for Tools()
{
  return &type metadata for Tools;
}

uint64_t sub_1D42D8BFC()
{
  return sub_1D451B940();
}

uint64_t sub_1D42D8C10()
{
  return swift_allocObject();
}

uint64_t sub_1D42D8C20()
{
  return swift_allocObject();
}

uint64_t sub_1D42D8C2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, __int128 a19)
{
  *(_OWORD *)(a1 + 16) = a19;
  return swift_bridgeObjectRetain();
}

__n128 sub_1D42D8C4C(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, __n128 a19)
{
  unint64_t v19;
  __n128 result;

  result = a19;
  a1[1] = a19;
  a1[3].n128_u64[1] = v19;
  return result;
}

void sub_1D42D8C60()
{
  void *v0;
  uint64_t v1;

  sub_1D42D8B00(v0, v1);
}

uint64_t sub_1D42D8C6C()
{
  return sub_1D451A794();
}

uint64_t sub_1D42D8C74()
{
  return sub_1D451A794();
}

uint64_t sub_1D42D8C84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return sub_1D42B5C4C(a1, a2, a3, a4, a5, a18, 0);
}

__n128 sub_1D42D8C90(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, __n128 a19)
{
  unint64_t v19;
  __n128 result;

  result = a19;
  a1[1] = a19;
  a1[3].n128_u64[1] = v19;
  return result;
}

void sub_1D42D8CA4()
{
  void *v0;
  uint64_t v1;

  sub_1D42D8B00(v0, v1);
}

uint64_t sub_1D42D8CB0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1D42D8CFC()
{
  uint64_t v0;

  v0 = sub_1D42B6F40();
  sub_1D42D8D2C();
  return v0;
}

_QWORD *sub_1D42D8D2C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _DWORD *v5;

  v0[2] = sub_1D451B28C();
  v0[3] = v1;
  v0[4] = v2;
  v0[5] = v3;
  type metadata accessor for SafeLock();
  v4 = sub_1D42B6F40();
  v5 = (_DWORD *)swift_slowAlloc();
  *v5 = 0;
  *(_QWORD *)(v4 + 16) = v5;
  v0[6] = v4;
  return v0;
}

uint64_t sub_1D42D8D88()
{
  uint64_t v0;
  os_unfair_lock_s *v1;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)(v0 + 48) + 16);
  swift_retain();
  os_unfair_lock_lock(v1);
  sub_1D42D8DF0(v0);
  os_unfair_lock_unlock(v1);
  return swift_release();
}

uint64_t sub_1D42D8DF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  sub_1D451B298();
  sub_1D451B268();
  return swift_endAccess();
}

uint64_t sub_1D42D8E9C()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_1D42D8EC0()
{
  sub_1D42D8E9C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Queue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Queue);
}

uint64_t sub_1D42D8EEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  uint64_t v7;

  v6 = (_QWORD *)sub_1D42B6F40();
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = a1;
  swift_retain();
  v7 = sub_1D451A428();
  swift_release();
  return v7;
}

uint64_t sub_1D42D8F6C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D42D8F90()
{
  return sub_1D42D8D88();
}

uint64_t sub_1D42D8FB0(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t result;
  _BYTE *v9;
  _BYTE *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  int64_t v35;
  unint64_t v36;
  unsigned int v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  int64_t v42;
  unsigned int v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  if (v5 >= v4)
    v6 = *(_QWORD *)(a1 + 16);
  else
    v6 = *(_QWORD *)(a2 + 16);
  v53 = MEMORY[0x1E0DEE9D8];
  sub_1D42C728C(0, v6, 0);
  v7 = v53;
  v33 = v5;
  v34 = v4;
  v32 = a2;
  v35 = v6;
  if (v6)
  {
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    v9 = (_BYTE *)(a2 + 56);
    v10 = (_BYTE *)(a1 + 56);
    while (v4)
    {
      if (!v5)
        goto LABEL_33;
      if ((*v10 & 1) != 0 || (*v9 & 1) != 0)
      {
LABEL_30:
        v7 = v32;
        sub_1D42B7F2C();
        swift_allocError();
        *v31 = 0;
        swift_willThrow();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v7;
      }
      v42 = v6;
      result = sub_1D451B094();
      v11 = 0uLL;
      v12 = 0uLL;
      v13 = 0uLL;
      if ((result & 1) != 0)
      {
        v37 = result;
        sub_1D451AEF0();
        result = v37;
        v11 = v50;
        v12 = v51;
        v13 = v52;
      }
      v15 = *(_QWORD *)(v53 + 16);
      v14 = *(_QWORD *)(v53 + 24);
      if (v15 >= v14 >> 1)
      {
        v17 = result;
        v45 = v13;
        v38 = v12;
        v40 = v11;
        sub_1D42C728C((char *)(v14 > 1), v15 + 1, 1);
        v12 = v38;
        v11 = v40;
        v13 = v45;
        result = v17;
      }
      *(_QWORD *)(v53 + 16) = v15 + 1;
      v16 = v53 + 52 * v15;
      *(_OWORD *)(v16 + 32) = v11;
      *(_OWORD *)(v16 + 48) = v12;
      --v5;
      *(_OWORD *)(v16 + 64) = v13;
      *(_BYTE *)(v16 + 80) = (result ^ 1) & 1;
      --v4;
      v9 += 28;
      v10 += 28;
      --v6;
      if (v42 == 1)
        goto LABEL_17;
    }
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
LABEL_17:
  v19 = v33;
  v18 = v34;
  if (v34 > v33)
  {
    v20 = v35;
    v21 = 28 * v35;
    v23 = v32;
    v22 = a1;
    v46 = 28 * v35;
    while (v20 < v18)
    {
      if (v19 == v20)
        goto LABEL_29;
      if (v20 >= v19)
        goto LABEL_35;
      if ((*(_BYTE *)(v22 + v21 + 56) & 1) != 0 || (*(_BYTE *)(v23 + v21 + 56) & 1) != 0)
        goto LABEL_30;
      v36 = v20;
      result = sub_1D451B094();
      v24 = 0uLL;
      v25 = 0uLL;
      v26 = 0uLL;
      if ((result & 1) != 0)
      {
        v43 = result;
        sub_1D451AEF0();
        result = v43;
        v24 = v47;
        v25 = v48;
        v26 = v49;
      }
      v28 = *(_QWORD *)(v53 + 16);
      v27 = *(_QWORD *)(v53 + 24);
      v19 = v33;
      if (v28 >= v27 >> 1)
      {
        v30 = result;
        v41 = v25;
        v44 = v24;
        v39 = v26;
        sub_1D42C728C((char *)(v27 > 1), v28 + 1, 1);
        v26 = v39;
        v25 = v41;
        v24 = v44;
        result = v30;
      }
      v20 = v36 + 1;
      *(_QWORD *)(v53 + 16) = v28 + 1;
      v29 = v53 + 52 * v28;
      *(_OWORD *)(v29 + 32) = v24;
      *(_OWORD *)(v29 + 48) = v25;
      *(_OWORD *)(v29 + 64) = v26;
      *(_BYTE *)(v29 + 80) = (result ^ 1) & 1;
      v23 += 28;
      v22 += 28;
      v18 = v34;
      v21 = v46;
      if (v34 == v36 + 1)
        goto LABEL_29;
    }
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    return result;
  }
LABEL_29:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t *sub_1D42D9358@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  int v10;
  uint64_t v11;

  if ((unsigned __int128)(*result * (__int128)(int)result[1]) >> 64 == (*result * (int)result[1]) >> 63)
  {
    if ((unsigned __int128)(result[3] * (__int128)(int)result[4]) >> 64 == (result[3] * (int)result[4]) >> 63)
    {
      v3 = sub_1D451B04C();
      v5 = v4;
      v7 = v6;
      v8 = HIDWORD(v4);
      result = (uint64_t *)sub_1D451B04C();
      *(_QWORD *)a2 = v3;
      *(_DWORD *)(a2 + 8) = v5;
      *(_DWORD *)(a2 + 12) = v8;
      *(_QWORD *)(a2 + 16) = v7;
      *(_QWORD *)(a2 + 24) = result;
      *(_DWORD *)(a2 + 32) = v9;
      *(_DWORD *)(a2 + 36) = v10;
      *(_QWORD *)(a2 + 40) = v11;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

CMTimeRange *sub_1D42D94D8@<X0>(CMTimeRange *result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  CMTimeValue value;
  uint64_t timescale;
  CMTimeValue v6;
  CMTimeScale v7;
  CMTimeFlags flags;
  CMTimeEpoch epoch;
  CMTimeFlags v10;
  CMTimeEpoch v11;
  CMTimeValue v12;
  uint64_t v13;
  int64_t v14;
  CMTimeEpoch v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  CMTimeEpoch v25;
  CMTimeValue v26;
  CMTime v27;
  CMTime start;
  CMTimeRange range;

  value = result->duration.value;
  timescale = result->duration.timescale;
  if ((unsigned __int128)(value * (__int128)result->duration.timescale) >> 64 == (value * timescale) >> 63)
  {
    v6 = result->start.value;
    v7 = result->start.timescale;
    flags = result->start.flags;
    epoch = result->start.epoch;
    v10 = result->duration.flags;
    v11 = result->duration.epoch;
    if (value * timescale < 0)
    {
      if ((a2 & 1) == 0)
      {
LABEL_8:
        *(_QWORD *)a3 = v6;
        *(_DWORD *)(a3 + 8) = v7;
        *(_DWORD *)(a3 + 12) = flags;
        *(_QWORD *)(a3 + 16) = epoch;
        *(_QWORD *)(a3 + 24) = value;
        *(_DWORD *)(a3 + 32) = timescale;
        *(_DWORD *)(a3 + 36) = v10;
        *(_QWORD *)(a3 + 40) = v11;
        return result;
      }
    }
    else if ((a2 & 1) != 0)
    {
      goto LABEL_8;
    }
    range.start.value = result->start.value;
    range.start.timescale = v7;
    range.start.flags = flags;
    range.start.epoch = epoch;
    range.duration.value = value;
    range.duration.timescale = timescale;
    range.duration.flags = v10;
    range.duration.epoch = v11;
    result = (CMTimeRange *)CMTimeRangeGetEnd(&start, &range);
    if (value != 0x8000000000000000)
    {
      v12 = start.value;
      v13 = *(_QWORD *)&start.timescale;
      v14 = -value;
      v15 = start.epoch;
      CMTimeMake(&range.start, v14, timescale);
      v24 = sub_1D42DCE44(v16, v17, v18, v19, v20, v21, v22, v23, *(double *)&v27.value, *(double *)&v27.timescale, *(double *)&v27.epoch, *(double *)&start.value, *(double *)&start.timescale, *(double *)&start.epoch, *(double *)&range.start.value, *(double *)&range.start.timescale);
      v27.epoch = v25;
      start.value = v12;
      *(_QWORD *)&start.timescale = v13;
      start.epoch = v15;
      v27.value = v26;
      *(double *)&v27.timescale = v24;
      result = CMTimeRangeMake(&range, &start, &v27);
      v6 = range.start.value;
      v7 = range.start.timescale;
      flags = range.start.flags;
      epoch = range.start.epoch;
      value = range.duration.value;
      LODWORD(timescale) = range.duration.timescale;
      v10 = range.duration.flags;
      v11 = range.duration.epoch;
      goto LABEL_8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

CMTimeValue sub_1D42D95E8(CMTimeValue result, int a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  CMTime v6;
  uint64_t v7;
  uint64_t v8;

  if (result < 0 && (a4 & 1) != 0 || a2 < 0 && (a4 & 1) == 0)
  {
    if (result == 0x8000000000000000)
    {
      __break(1u);
    }
    else if (a2 != 0x80000000)
    {
      v7 = v4;
      v8 = v5;
      CMTimeMake(&v6, -result, -a2);
      return v6.value;
    }
    __break(1u);
  }
  return result;
}

double sub_1D42D965C(CMTimeRange *a1, char a2, char a3)
{
  CMTimeValue v4;
  unint64_t v5;
  CMTimeScale v6;
  CMTimeEpoch v7;
  CMTimeEpoch v8;
  unint64_t v9;
  CMTimeValue v10;
  CMTimeEpoch v11;
  CMTimeScale v12;
  CMTimeFlags v13;
  CMTimeRange *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  CMTimeRange v31;
  CMTime duration;
  CMTime start;
  CMTimeValue v34;
  uint64_t v35;
  uint64_t v36;
  CMTimeValue v37;
  uint64_t v38;
  uint64_t v39;

  sub_1D42D94D8(a1, a2, (uint64_t)&v34);
  v4 = sub_1D42D95E8(v34, v35, v36, a3);
  v6 = v5;
  v8 = v7;
  v9 = HIDWORD(v5);
  v10 = sub_1D42D95E8(v37, v38, v39, a3);
  duration.epoch = v11;
  start.value = v4;
  start.timescale = v6;
  start.flags = v9;
  start.epoch = v8;
  duration.value = v10;
  duration.timescale = v12;
  duration.flags = v13;
  v14 = CMTimeRangeMake(&v31, &start, &duration);
  return sub_1D42DCD6C((uint64_t)v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v31.start.value, *(double *)&v31.start.timescale, *(__int128 *)&v31.start.epoch,
           *(uint64_t *)&v31.duration.timescale,
           v31.duration.epoch);
}

void sub_1D42D9780(CMTimeRange *a1, CMTimeRange *a2, uint64_t a3, _QWORD *a4)
{
  CMTimeScale v5;
  CMTimeFlags v6;
  CMTimeEpoch v7;
  uint64_t v8;
  uint64_t v9;
  CMTimeValue value;
  CMTimeScale timescale;
  CMTimeFlags flags;
  CMTimeEpoch epoch;
  CMTimeValue v14;
  unint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  CMTimeValue v20;
  CMTimeScale v21;
  CMTimeFlags v22;
  CMTimeEpoch v23;
  CMTimeValue v24;
  CMTimeScale v25;
  CMTimeScale v26;
  CMTimeFlags v27;
  CMTimeEpoch v28;
  CMTimeValue v29;
  CMTimeEpoch v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  CMTimeValue v35;
  CMTimeEpoch v36;
  uint64_t v37;
  CMTimeValue v38;
  uint64_t v39;
  CMTimeValue v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  void (*v44)(_QWORD *, CMTimeRange *, _BYTE *, CMTime *);
  unint64_t v45;
  CMTimeEpoch v46;
  CMTimeValue v47;
  CMTimeEpoch v48;
  CMTimeFlags v49;
  CMTimeEpoch v50;
  CMTimeScale v51;
  CMTimeValue v52;
  CMTimeValue v53;
  CMTimeEpoch v54;
  CMTimeEpoch v55;
  CMTimeValue v56;
  CMTimeEpoch v57;
  CMTimeFlags v58;
  CMTimeScale v59;
  CMTimeValue v60;
  CMTimeFlags v62;
  CMTimeScale v63;
  CMTimeEpoch v64;
  CMTimeFlags v65;
  CMTimeFlags v66;
  CMTimeScale v67;
  CMTime end;
  CMTimeValue v69;
  uint64_t v70;
  CMTimeEpoch v71;
  _BYTE duration[32];
  uint64_t v73;
  CMTimeEpoch v74;
  CMTimeRange start;
  CMTimeValue v76;
  uint64_t v77;
  uint64_t v78;
  CMTimeValue v79;
  uint64_t v80;
  uint64_t v81;
  CMTimeRange v82;

  sub_1D42D94D8(a2, 1, (uint64_t)&v76);
  start.start.value = sub_1D42D95E8(v76, v77, v78, 0);
  start.start.timescale = v5;
  start.start.flags = v6;
  start.start.epoch = v7;
  *(_QWORD *)duration = sub_1D42D95E8(v79, v80, v81, 0);
  *(_QWORD *)&duration[8] = v8;
  *(_QWORD *)&duration[16] = v9;
  CMTimeRangeMake(&v82, &start.start, (CMTime *)duration);
  value = v82.start.value;
  timescale = v82.start.timescale;
  flags = v82.start.flags;
  epoch = v82.start.epoch;
  v53 = v82.duration.value;
  v51 = v82.duration.timescale;
  v49 = v82.duration.flags;
  v48 = v82.duration.epoch;
  sub_1D42D94D8(a1, 1, (uint64_t)&v82);
  v14 = sub_1D42D95E8(v82.start.value, v82.start.timescale, v82.start.epoch, 0);
  v16 = v15;
  v18 = v17;
  v19 = HIDWORD(v15);
  v20 = sub_1D42D95E8(v82.duration.value, v82.duration.timescale, v82.duration.epoch, 0);
  *(_QWORD *)duration = v14;
  *(_QWORD *)&duration[8] = __PAIR64__(v19, v16);
  *(_QWORD *)&duration[16] = v18;
  end.value = v20;
  end.timescale = v21;
  end.flags = v22;
  end.epoch = v23;
  CMTimeRangeMake(&start, (CMTime *)duration, &end);
  v24 = start.start.value;
  v25 = start.start.timescale;
  v47 = start.duration.value;
  v26 = start.duration.timescale;
  v27 = start.duration.flags;
  v28 = start.duration.epoch;
  v66 = start.start.flags;
  v64 = start.start.epoch;
  *(_QWORD *)duration = value;
  *(_QWORD *)&duration[8] = __PAIR64__(flags, timescale);
  *(_QWORD *)&duration[16] = epoch;
  if (CMTimeCompare(&start.start, (CMTime *)duration) < 0)
  {
    *(_QWORD *)duration = v24;
    *(_QWORD *)&duration[8] = __PAIR64__(v66, v25);
    *(_QWORD *)&duration[16] = v64;
    end.value = value;
    end.timescale = timescale;
    end.flags = flags;
    end.epoch = epoch;
  }
  else
  {
    *(_QWORD *)duration = v24;
    *(_QWORD *)&duration[8] = __PAIR64__(v66, v25);
    *(_QWORD *)&duration[16] = v64;
    end.value = v24;
    end.timescale = v25;
    end.flags = v66;
    end.epoch = v64;
  }
  CMTimeRangeFromTimeToTime(&start, (CMTime *)duration, &end);
  v60 = start.start.value;
  v58 = start.start.flags;
  v59 = start.start.timescale;
  v56 = start.duration.value;
  v57 = start.start.epoch;
  v62 = start.duration.flags;
  v63 = start.duration.timescale;
  v55 = start.duration.epoch;
  start.start.value = v24;
  start.start.timescale = v25;
  start.start.flags = v66;
  start.start.epoch = v64;
  start.duration.value = v47;
  start.duration.timescale = v26;
  start.duration.flags = v27;
  start.duration.epoch = v28;
  CMTimeRangeGetEnd((CMTime *)duration, &start);
  v46 = v28;
  v45 = __PAIR64__(v27, v26);
  v29 = *(_QWORD *)duration;
  v30 = *(_QWORD *)&duration[16];
  v31 = *(_QWORD *)&duration[8];
  start.start.value = value;
  start.start.timescale = timescale;
  start.start.flags = flags;
  start.start.epoch = epoch;
  start.duration.value = v53;
  start.duration.timescale = v51;
  start.duration.flags = v49;
  start.duration.epoch = v48;
  CMTimeRangeGetEnd((CMTime *)duration, &start);
  start.start.value = v29;
  *(_QWORD *)&start.start.timescale = v31;
  start.start.epoch = v30;
  if (CMTimeCompare(&start.start, (CMTime *)duration) < 1)
  {
    start.start.value = v24;
    start.start.timescale = v25;
    start.start.flags = v66;
    start.start.epoch = v64;
    start.duration.value = v47;
    *(_QWORD *)&start.duration.timescale = v45;
    start.duration.epoch = v46;
  }
  else
  {
    start.start.value = value;
    start.start.timescale = timescale;
    start.start.flags = flags;
    start.start.epoch = epoch;
    start.duration.value = v53;
    start.duration.timescale = v51;
    start.duration.flags = v49;
    start.duration.epoch = v48;
  }
  CMTimeRangeGetEnd((CMTime *)duration, &start);
  v32 = *(_QWORD *)duration;
  v33 = *(_QWORD *)&duration[16];
  v34 = *(_QWORD *)&duration[8];
  start.start.value = v24;
  start.start.timescale = v25;
  start.start.flags = v66;
  start.start.epoch = v64;
  start.duration.value = v47;
  *(_QWORD *)&start.duration.timescale = v45;
  start.duration.epoch = v46;
  CMTimeRangeGetEnd((CMTime *)duration, &start);
  v35 = *(_QWORD *)duration;
  v36 = *(_QWORD *)&duration[16];
  v37 = *(_QWORD *)&duration[8];
  *(_QWORD *)duration = v32;
  *(_QWORD *)&duration[8] = v34;
  *(_QWORD *)&duration[16] = v33;
  end.value = v35;
  *(_QWORD *)&end.timescale = v37;
  end.epoch = v36;
  CMTimeRangeFromTimeToTime(&start, (CMTime *)duration, &end);
  v38 = start.start.value;
  v67 = start.start.timescale;
  v65 = start.start.flags;
  v52 = start.duration.value;
  v54 = start.start.epoch;
  v39 = *(_QWORD *)&start.duration.timescale;
  v50 = start.duration.epoch;
  start.start.value = v60;
  *(_QWORD *)&start.start.timescale = __PAIR64__(v58, v59);
  start.start.epoch = v57;
  start.duration.value = v56;
  *(_QWORD *)&start.duration.timescale = __PAIR64__(v62, v63);
  start.duration.epoch = v55;
  CMTimeRangeGetEnd((CMTime *)duration, &start);
  end.value = v38;
  end.timescale = v67;
  end.flags = v65;
  end.epoch = v54;
  CMTimeRangeFromTimeToTime(&start, (CMTime *)duration, &end);
  v40 = start.start.value;
  v41 = *(_QWORD *)&start.start.timescale;
  v42 = *(_QWORD *)&start.duration.timescale;
  v43 = *(_OWORD *)&start.start.epoch;
  v44 = (void (*)(_QWORD *, CMTimeRange *, _BYTE *, CMTime *))a4[2];
  v74 = start.duration.epoch;
  start.start.value = v60;
  start.start.timescale = v59;
  start.start.flags = v58;
  start.start.epoch = v57;
  start.duration.value = v56;
  start.duration.timescale = v63;
  start.duration.flags = v62;
  start.duration.epoch = v55;
  *(_QWORD *)duration = v40;
  *(_QWORD *)&duration[8] = v41;
  *(_OWORD *)&duration[16] = v43;
  v73 = v42;
  end.value = v38;
  end.timescale = v67;
  end.flags = v65;
  end.epoch = v54;
  v69 = v52;
  v70 = v39;
  v71 = v50;
  v44(a4, &start, duration, &end);
  _Block_release(a4);
}

uint64_t sub_1D42D9CDC(CMTimeRange *a1, CMTimeRange *a2, uint64_t a3, uint64_t a4)
{
  CMTimeValue v5;
  unint64_t v6;
  CMTimeScale v7;
  CMTimeEpoch v8;
  CMTimeEpoch v9;
  unint64_t v10;
  CMTimeValue v11;
  CMTimeScale v12;
  CMTimeFlags v13;
  CMTimeEpoch v14;
  CMTimeValue value;
  CMTimeScale timescale;
  CMTimeFlags flags;
  CMTimeEpoch epoch;
  CMTimeValue v19;
  unint64_t v20;
  CMTimeEpoch v21;
  CMTimeEpoch v22;
  unint64_t v23;
  CMTimeValue v24;
  CMTimeEpoch v25;
  CMTimeScale v26;
  CMTimeFlags v27;
  CMTimeValue v28;
  CMTimeScale v29;
  CMTimeFlags v30;
  CMTimeScale v31;
  CMTimeEpoch v32;
  CMTimeValue v33;
  CMTimeEpoch v34;
  uint64_t v35;
  CMTimeValue v36;
  CMTimeEpoch v37;
  uint64_t v38;
  CMTimeValue v39;
  uint64_t v40;
  uint64_t v41;
  CMTimeValue v42;
  CMTimeEpoch v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  CMTimeFlags v48;
  CMTimeEpoch v49;
  CMTimeValue v50;
  CMTimeEpoch v51;
  CMTimeEpoch v52;
  CMTimeFlags v53;
  CMTimeValue v54;
  CMTimeScale v55;
  CMTimeEpoch v56;
  CMTimeValue v57;
  CMTimeFlags v58;
  CMTimeScale v59;
  CMTimeValue v60;
  CMTimeEpoch v61;
  CMTimeFlags v62;
  CMTimeScale v63;
  CMTimeValue v64;
  CMTimeEpoch v66;
  CMTimeFlags v67;
  CMTimeEpoch v68;
  CMTimeScale v69;
  CMTimeFlags v70;
  CMTimeValue v71;
  CMTimeRange range;
  CMTimeValue v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  CMTimeEpoch v77;
  CMTimeValue v78;
  CMTimeScale v79;
  CMTimeFlags v80;
  CMTimeEpoch v81;
  CMTimeValue v82;
  uint64_t v83;
  CMTimeEpoch v84;
  CMTime end;
  CMTime duration;
  CMTimeValue v87;
  uint64_t v88;
  uint64_t v89;
  CMTimeValue v90;
  uint64_t v91;
  uint64_t v92;
  CMTime start;
  CMTimeValue v94;
  uint64_t v95;
  uint64_t v96;

  sub_1D42D94D8(a2, 1, (uint64_t)&v87);
  v5 = sub_1D42D95E8(v87, v88, v89, 0);
  v7 = v6;
  v9 = v8;
  v10 = HIDWORD(v6);
  v11 = sub_1D42D95E8(v90, v91, v92, 0);
  start.value = v5;
  start.timescale = v7;
  start.flags = v10;
  start.epoch = v9;
  duration.value = v11;
  duration.timescale = v12;
  duration.flags = v13;
  duration.epoch = v14;
  CMTimeRangeMake(&range, &start, &duration);
  value = range.start.value;
  timescale = range.start.timescale;
  flags = range.start.flags;
  epoch = range.start.epoch;
  v57 = range.duration.value;
  v55 = range.duration.timescale;
  v53 = range.duration.flags;
  v51 = range.duration.epoch;
  sub_1D42D94D8(a1, 1, (uint64_t)&start);
  v19 = sub_1D42D95E8(start.value, start.timescale, start.epoch, 0);
  LODWORD(v5) = v20;
  v22 = v21;
  v23 = HIDWORD(v20);
  v24 = sub_1D42D95E8(v94, v95, v96, 0);
  end.epoch = v25;
  duration.value = v19;
  duration.timescale = v5;
  duration.flags = v23;
  duration.epoch = v22;
  end.value = v24;
  end.timescale = v26;
  end.flags = v27;
  CMTimeRangeMake(&range, &duration, &end);
  v28 = range.start.value;
  v29 = range.start.timescale;
  v50 = range.duration.value;
  v31 = range.duration.timescale;
  v30 = range.duration.flags;
  v32 = range.duration.epoch;
  v70 = range.start.flags;
  v68 = range.start.epoch;
  duration.value = value;
  duration.timescale = timescale;
  duration.flags = flags;
  duration.epoch = epoch;
  if (CMTimeCompare(&range.start, &duration) < 0)
  {
    end.epoch = epoch;
    duration.value = v28;
    duration.timescale = v29;
    duration.flags = v70;
    duration.epoch = v68;
    end.value = value;
    end.timescale = timescale;
    end.flags = flags;
  }
  else
  {
    duration.timescale = v29;
    duration.flags = v70;
    duration.epoch = v68;
    end.value = v28;
    end.timescale = v29;
    end.flags = v70;
    end.epoch = v68;
    duration.value = v28;
  }
  CMTimeRangeFromTimeToTime(&range, &duration, &end);
  v64 = range.start.value;
  v62 = range.start.flags;
  v63 = range.start.timescale;
  v60 = range.duration.value;
  v61 = range.start.epoch;
  v59 = range.duration.timescale;
  v67 = range.duration.flags;
  v66 = range.duration.epoch;
  range.start.value = v28;
  range.start.timescale = v29;
  range.start.flags = v70;
  range.start.epoch = v68;
  range.duration.value = v50;
  range.duration.timescale = v31;
  range.duration.flags = v30;
  range.duration.epoch = v32;
  CMTimeRangeGetEnd(&duration, &range);
  v49 = v32;
  v48 = v30;
  v33 = duration.value;
  v34 = duration.epoch;
  v35 = *(_QWORD *)&duration.timescale;
  range.start.value = value;
  range.start.timescale = timescale;
  range.start.flags = flags;
  range.start.epoch = epoch;
  range.duration.value = v57;
  range.duration.timescale = v55;
  range.duration.flags = v53;
  range.duration.epoch = v51;
  CMTimeRangeGetEnd(&duration, &range);
  range.start.value = v33;
  *(_QWORD *)&range.start.timescale = v35;
  range.start.epoch = v34;
  if (CMTimeCompare(&range.start, &duration) < 1)
  {
    range.start.value = v28;
    range.start.timescale = v29;
    range.start.flags = v70;
    range.start.epoch = v68;
    range.duration.value = v50;
    range.duration.timescale = v31;
    range.duration.flags = v48;
    range.duration.epoch = v49;
  }
  else
  {
    range.start.value = value;
    range.start.timescale = timescale;
    range.start.flags = flags;
    range.start.epoch = epoch;
    range.duration.value = v57;
    range.duration.timescale = v55;
    range.duration.flags = v53;
    range.duration.epoch = v51;
  }
  CMTimeRangeGetEnd(&duration, &range);
  v36 = duration.value;
  v37 = duration.epoch;
  v38 = *(_QWORD *)&duration.timescale;
  range.start.value = v28;
  range.start.timescale = v29;
  range.start.flags = v70;
  range.start.epoch = v68;
  range.duration.value = v50;
  *(_QWORD *)&range.duration.timescale = __PAIR64__(v48, v31);
  range.duration.epoch = v49;
  CMTimeRangeGetEnd(&duration, &range);
  v39 = duration.value;
  v40 = *(_QWORD *)&duration.timescale;
  end.epoch = duration.epoch;
  duration.value = v36;
  *(_QWORD *)&duration.timescale = v38;
  duration.epoch = v37;
  end.value = v39;
  *(_QWORD *)&end.timescale = v40;
  CMTimeRangeFromTimeToTime(&range, &duration, &end);
  v69 = range.start.timescale;
  v58 = range.start.flags;
  v54 = range.duration.value;
  v56 = range.start.epoch;
  v41 = *(_QWORD *)&range.duration.timescale;
  v52 = range.duration.epoch;
  v71 = range.start.value;
  range.start.value = v64;
  *(_QWORD *)&range.start.timescale = __PAIR64__(v62, v63);
  range.start.epoch = v61;
  range.duration.value = v60;
  *(_QWORD *)&range.duration.timescale = __PAIR64__(v67, v59);
  range.duration.epoch = v66;
  CMTimeRangeGetEnd(&duration, &range);
  end.value = v71;
  end.timescale = v69;
  end.flags = v58;
  end.epoch = v56;
  CMTimeRangeFromTimeToTime(&range, &duration, &end);
  v42 = range.start.value;
  v43 = range.duration.epoch;
  v44 = *(_QWORD *)&range.start.timescale;
  v45 = *(_QWORD *)&range.duration.timescale;
  v46 = *(_OWORD *)&range.start.epoch;
  range.start.value = v64;
  range.start.timescale = v63;
  range.start.flags = v62;
  range.start.epoch = v61;
  range.duration.value = v60;
  range.duration.timescale = v59;
  range.duration.flags = v67;
  range.duration.epoch = v66;
  v73 = v42;
  v74 = v44;
  v75 = v46;
  v76 = v45;
  v77 = v43;
  v78 = v71;
  v79 = v69;
  v80 = v58;
  v81 = v56;
  v82 = v54;
  v83 = v41;
  v84 = v52;
  sub_1D42DC884((uint64_t)&range);
  return sub_1D42DC820((uint64_t)&range, a4);
}

double sub_1D42DA1C4(CMTimeRange *a1, CMTimeRange *a2, uint64_t a3, uint64_t a4)
{
  CMTimeScale v5;
  CMTimeFlags v6;
  CMTimeEpoch v7;
  CMTimeScale v8;
  CMTimeFlags v9;
  CMTimeEpoch v10;
  CMTimeValue value;
  CMTimeScale timescale;
  CMTimeFlags flags;
  CMTimeEpoch epoch;
  CMTimeValue v15;
  unint64_t v16;
  CMTimeScale v17;
  CMTimeEpoch v18;
  CMTimeEpoch v19;
  unint64_t v20;
  CMTimeValue v21;
  CMTimeEpoch v22;
  CMTimeScale v23;
  CMTimeFlags v24;
  CMTimeValue v25;
  CMTimeScale v26;
  CMTimeFlags v27;
  CMTimeScale v28;
  CMTimeEpoch v29;
  uint64_t v30;
  uint64_t v31;
  CMTimeValue v32;
  CMTimeEpoch v33;
  uint64_t v34;
  CMTimeValue v35;
  CMTimeEpoch v36;
  uint64_t v37;
  CMTimeValue v38;
  uint64_t v39;
  CMTimeValue v40;
  uint64_t v41;
  CMTimeEpoch v42;
  CMTimeEpoch v43;
  double result;
  uint64_t v45;
  __int128 v46;
  CMTimeValue v47;
  CMTimeScale v48;
  CMTimeValue v49;
  CMTimeEpoch v50;
  CMTimeValue v51;
  CMTimeEpoch v52;
  CMTimeValue v53;
  CMTimeEpoch v54;
  CMTimeFlags v55;
  CMTimeScale v56;
  CMTimeValue v57;
  CMTimeEpoch v59;
  CMTimeFlags v60;
  CMTimeRange start;
  CMTime end;
  CMTime duration;
  CMTimeValue v64;
  uint64_t v65;
  uint64_t v66;
  CMTimeValue v67;
  uint64_t v68;
  uint64_t v69;
  CMTimeRange v70;

  sub_1D42D94D8(a2, 1, (uint64_t)&v64);
  start.start.value = sub_1D42D95E8(v64, v65, v66, 0);
  start.start.timescale = v5;
  start.start.flags = v6;
  start.start.epoch = v7;
  duration.value = sub_1D42D95E8(v67, v68, v69, 0);
  duration.timescale = v8;
  duration.flags = v9;
  duration.epoch = v10;
  CMTimeRangeMake(&v70, &start.start, &duration);
  value = v70.start.value;
  timescale = v70.start.timescale;
  flags = v70.start.flags;
  epoch = v70.start.epoch;
  v57 = v70.duration.value;
  v55 = v70.duration.flags;
  v56 = v70.duration.timescale;
  v54 = v70.duration.epoch;
  sub_1D42D94D8(a1, 1, (uint64_t)&v70);
  v15 = sub_1D42D95E8(v70.start.value, v70.start.timescale, v70.start.epoch, 0);
  v17 = v16;
  v19 = v18;
  v20 = HIDWORD(v16);
  v21 = sub_1D42D95E8(v70.duration.value, v70.duration.timescale, v70.duration.epoch, 0);
  end.epoch = v22;
  duration.value = v15;
  duration.timescale = v17;
  duration.flags = v20;
  duration.epoch = v19;
  end.value = v21;
  end.timescale = v23;
  end.flags = v24;
  CMTimeRangeMake(&start, &duration, &end);
  v25 = start.start.value;
  v26 = start.start.timescale;
  v47 = start.duration.value;
  v28 = start.duration.timescale;
  v27 = start.duration.flags;
  v29 = start.duration.epoch;
  v60 = start.start.flags;
  v59 = start.start.epoch;
  duration.value = value;
  duration.timescale = timescale;
  duration.flags = flags;
  duration.epoch = epoch;
  if (CMTimeCompare(&start.start, &duration) < 0)
  {
    end.epoch = epoch;
    duration.value = v25;
    duration.timescale = v26;
    duration.flags = v60;
    duration.epoch = v59;
    end.value = value;
    end.timescale = timescale;
    end.flags = flags;
  }
  else
  {
    duration.timescale = v26;
    duration.flags = v60;
    duration.epoch = v59;
    end.value = v25;
    end.timescale = v26;
    end.flags = v60;
    end.epoch = v59;
    duration.value = v25;
  }
  CMTimeRangeFromTimeToTime(&start, &duration, &end);
  v30 = *(_QWORD *)&start.start.timescale;
  v52 = start.start.epoch;
  v53 = start.start.value;
  v31 = *(_QWORD *)&start.duration.timescale;
  v50 = start.duration.epoch;
  v51 = start.duration.value;
  v49 = v25;
  start.start.value = v25;
  v48 = v26;
  start.start.timescale = v26;
  start.start.flags = v60;
  start.start.epoch = v59;
  start.duration.value = v47;
  start.duration.timescale = v28;
  start.duration.flags = v27;
  start.duration.epoch = v29;
  CMTimeRangeGetEnd(&duration, &start);
  v32 = duration.value;
  v33 = duration.epoch;
  v34 = *(_QWORD *)&duration.timescale;
  start.start.value = value;
  start.start.timescale = timescale;
  start.start.flags = flags;
  start.start.epoch = epoch;
  start.duration.value = v57;
  start.duration.timescale = v56;
  start.duration.flags = v55;
  start.duration.epoch = v54;
  CMTimeRangeGetEnd(&duration, &start);
  start.start.value = v32;
  *(_QWORD *)&start.start.timescale = v34;
  start.start.epoch = v33;
  if (CMTimeCompare(&start.start, &duration) < 1)
  {
    start.start.value = v49;
    start.start.timescale = v48;
    start.start.flags = v60;
    start.start.epoch = v59;
    start.duration.value = v47;
    *(_QWORD *)&start.duration.timescale = __PAIR64__(v27, v28);
    start.duration.epoch = v29;
  }
  else
  {
    start.start.value = value;
    start.start.timescale = timescale;
    start.start.flags = flags;
    start.start.epoch = epoch;
    start.duration.value = v57;
    start.duration.timescale = v56;
    start.duration.flags = v55;
    start.duration.epoch = v54;
  }
  CMTimeRangeGetEnd(&duration, &start);
  v35 = duration.value;
  v36 = duration.epoch;
  v37 = *(_QWORD *)&duration.timescale;
  start.start.value = v49;
  *(_QWORD *)&start.start.timescale = __PAIR64__(v60, v48);
  start.start.epoch = v59;
  start.duration.value = v47;
  *(_QWORD *)&start.duration.timescale = __PAIR64__(v27, v28);
  start.duration.epoch = v29;
  CMTimeRangeGetEnd(&duration, &start);
  v38 = duration.value;
  v39 = *(_QWORD *)&duration.timescale;
  end.epoch = duration.epoch;
  duration.value = v35;
  *(_QWORD *)&duration.timescale = v37;
  duration.epoch = v36;
  end.value = v38;
  *(_QWORD *)&end.timescale = v39;
  CMTimeRangeFromTimeToTime(&start, &duration, &end);
  v40 = start.start.value;
  v41 = *(_QWORD *)&start.start.timescale;
  v42 = start.start.epoch;
  start.start.value = v53;
  *(_QWORD *)&start.start.timescale = v30;
  start.start.epoch = v52;
  start.duration.value = v51;
  *(_QWORD *)&start.duration.timescale = v31;
  start.duration.epoch = v50;
  CMTimeRangeGetEnd(&duration, &start);
  end.epoch = v42;
  end.value = v40;
  *(_QWORD *)&end.timescale = v41;
  CMTimeRangeFromTimeToTime(&start, &duration, &end);
  v43 = start.duration.epoch;
  result = *(double *)&start.start.timescale;
  v45 = *(_QWORD *)&start.duration.timescale;
  v46 = *(_OWORD *)&start.start.epoch;
  *(_QWORD *)a4 = start.start.value;
  *(double *)(a4 + 8) = result;
  *(_OWORD *)(a4 + 16) = v46;
  *(_QWORD *)(a4 + 32) = v45;
  *(_QWORD *)(a4 + 40) = v43;
  return result;
}

uint64_t sub_1D42DA6B0@<X0>(CMTimeRange *a1@<X0>, CMTimeRange *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[148];
  _BYTE v21[148];
  _BYTE v22[148];
  _QWORD v23[2];
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;

  sub_1D42DC7F4(v21);
  sub_1D42DC820((uint64_t)v21, (uint64_t)v20);
  sub_1D42D9CDC(a1, a2, v3, (uint64_t)v20);
  sub_1D42DC820((uint64_t)v20, (uint64_t)v22);
  sub_1D42DC820((uint64_t)v22, (uint64_t)v23);
  result = sub_1D42DC868((uint64_t)v23);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v8 = v34;
    v9 = v23[1];
    v10 = v25;
    v11 = v27;
    v12 = v29;
    v13 = v31;
    v14 = v33;
    v15 = v24;
    v16 = v26;
    v17 = v28;
    v18 = v30;
    v19 = v32;
    *(_QWORD *)a3 = v23[0];
    *(_QWORD *)(a3 + 8) = v9;
    *(_OWORD *)(a3 + 16) = v15;
    *(_QWORD *)(a3 + 32) = v10;
    *(_OWORD *)(a3 + 40) = v16;
    *(_QWORD *)(a3 + 56) = v11;
    *(_OWORD *)(a3 + 64) = v17;
    *(_QWORD *)(a3 + 80) = v12;
    *(_OWORD *)(a3 + 88) = v18;
    *(_QWORD *)(a3 + 104) = v13;
    *(_OWORD *)(a3 + 112) = v19;
    *(_QWORD *)(a3 + 128) = v14;
    *(_QWORD *)(a3 + 136) = v8;
  }
  return result;
}

double sub_1D42DA7A4(CMTimeRange *a1, CMTimeRange *a2)
{
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  uint64_t v23;
  double v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;

  v3 = *(_DWORD *)(MEMORY[0x1E0CA2E18] + 8);
  v4 = *(_DWORD *)(MEMORY[0x1E0CA2E18] + 12);
  v5 = *(_QWORD *)(MEMORY[0x1E0CA2E18] + 16);
  v23 = *MEMORY[0x1E0CA2E18];
  v24 = COERCE_DOUBLE(__PAIR64__(v4, v3));
  *(_QWORD *)&v25 = v5;
  *((_QWORD *)&v25 + 1) = v23;
  v26 = __PAIR64__(v4, v3);
  v27 = v5;
  v6 = sub_1D42DA1C4(a1, a2, v2, (uint64_t)&v23);
  return sub_1D42DCD6C(v7, v8, v9, v10, v11, v12, v13, v14, v6, v15, v16, v17, v18, v19, v20, v21, v23, v24, v25,
           v26,
           v27);
}

void sub_1D42DA8B4(CMTimeValue a1@<X0>, uint64_t a2@<X1>, CMTimeEpoch a3@<X2>, CMTimeValue *a4@<X3>, uint64_t a5@<X8>)
{
  CMTimeEpoch v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  CMTimeValue v17;
  CMTimeEpoch v18;
  CMTimeValue v19;
  CMTimeEpoch v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  CMTimeRange v34;
  CMTime duration;
  CMTime rhs;

  v7 = a4[2];
  v34.start.value = *a4;
  *(_QWORD *)&v34.start.timescale = a4[1];
  v34.start.epoch = v7;
  rhs.value = a1;
  *(_QWORD *)&rhs.timescale = a2;
  rhs.epoch = a3;
  CMTimeAdd(&duration, &v34.start, &rhs);
  v16 = sub_1D42DCE44(v8, v9, v10, v11, v12, v13, v14, v15, *(double *)&v34.start.value, *(double *)&v34.start.timescale, *(double *)&v34.start.epoch, *(double *)&v34.duration.value, *(double *)&v34.duration.timescale, *(double *)&v34.duration.epoch, *(double *)&duration.value, *(double *)&duration.timescale);
  v17 = a4[3];
  v18 = a4[5];
  rhs.value = v19;
  *(double *)&rhs.timescale = v16;
  rhs.epoch = v20;
  duration.value = v17;
  *(_QWORD *)&duration.timescale = a4[4];
  duration.epoch = v18;
  CMTimeRangeMake(&v34, &rhs, &duration);
  v29 = sub_1D42DCE1C(v21, v22, v23, v24, v25, v26, v27, v28, *(double *)&v34.start.value, *(double *)&v34.start.timescale);
  *(_QWORD *)a5 = v30;
  *(double *)(a5 + 8) = v29;
  *(_OWORD *)(a5 + 16) = v31;
  *(_QWORD *)(a5 + 32) = v32;
  *(_QWORD *)(a5 + 40) = v33;
}

uint64_t sub_1D42DA9EC(uint64_t a1, uint64_t a2, CMTimeEpoch a3, uint64_t a4)
{
  CMTimeScale v4;
  CMTimeValue v5;
  uint64_t v6;
  CMTimeFlags v7;
  uint64_t v8;
  uint64_t v9;
  CMTimeEpoch *v10;
  CMTimeValue v11;
  CMTimeEpoch v12;
  CMTimeValue value;
  uint64_t v14;
  CMTimeEpoch epoch;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  CMTime v21;
  CMTime rhs;
  CMTime lhs;
  uint64_t v24;

  v8 = *(_QWORD *)(a4 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    sub_1D42DCE94();
    v24 = v9;
    sub_1D42C71BC();
    v10 = (CMTimeEpoch *)(v6 + 48);
    do
    {
      v11 = *(v10 - 2);
      v12 = *v10;
      *(_QWORD *)&lhs.timescale = *(v10 - 1);
      lhs.epoch = v12;
      rhs.value = v5;
      rhs.timescale = v4;
      rhs.flags = v7;
      rhs.epoch = a3;
      lhs.value = v11;
      CMTimeAdd(&v21, &lhs, &rhs);
      value = v21.value;
      v14 = *(_QWORD *)&v21.timescale;
      epoch = v21.epoch;
      v24 = v9;
      v17 = *(_QWORD *)(v9 + 16);
      v16 = *(_QWORD *)(v9 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1D42DCE78(v16);
        sub_1D42C71BC();
        v9 = v24;
      }
      *(_QWORD *)(v9 + 16) = v17 + 1;
      v18 = (_QWORD *)(v9 + 24 * v17);
      v18[4] = value;
      v10 += 3;
      v18[5] = v14;
      v18[6] = epoch;
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_1D42DAB08(uint64_t a1, uint64_t a2, CMTimeEpoch a3, uint64_t a4)
{
  CMTimeScale v4;
  CMTimeValue v5;
  uint64_t v6;
  CMTimeFlags v7;
  uint64_t v8;
  uint64_t v9;
  CMTimeEpoch *v10;
  CMTimeEpoch v11;
  CMTimeValue v12;
  CMTimeEpoch v13;
  uint64_t v14;
  CMTimeEpoch epoch;
  CMTimeValue value;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  CMTimeEpoch v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v26;
  CMTimeRange lhs;
  CMTime duration;
  CMTime rhs;
  uint64_t v31;

  v8 = *(_QWORD *)(a4 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    sub_1D42DCE94();
    v31 = v9;
    sub_1D42C7258();
    v10 = (CMTimeEpoch *)(v6 + 72);
    do
    {
      v11 = *(v10 - 3);
      v12 = *(v10 - 2);
      v13 = *v10;
      lhs.start.value = *(v10 - 5);
      *(_QWORD *)&lhs.start.timescale = *(v10 - 4);
      lhs.start.epoch = v11;
      rhs.value = v5;
      rhs.timescale = v4;
      rhs.flags = v7;
      rhs.epoch = a3;
      v14 = *(v10 - 1);
      CMTimeAdd(&duration, &lhs.start, &rhs);
      epoch = duration.epoch;
      duration.epoch = v13;
      rhs.value = duration.value;
      *(_QWORD *)&rhs.timescale = *(_QWORD *)&duration.timescale;
      rhs.epoch = epoch;
      duration.value = v12;
      *(_QWORD *)&duration.timescale = v14;
      CMTimeRangeMake(&lhs, &rhs, &duration);
      value = lhs.start.value;
      v17 = *(_QWORD *)&lhs.start.timescale;
      v18 = *(_OWORD *)&lhs.start.epoch;
      v19 = *(_QWORD *)&lhs.duration.timescale;
      v20 = lhs.duration.epoch;
      v31 = v9;
      v22 = *(_QWORD *)(v9 + 16);
      v21 = *(_QWORD *)(v9 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1D42DCE78(v21);
        v26 = v24;
        sub_1D42C7258();
        v18 = v26;
        v9 = v31;
      }
      *(_QWORD *)(v9 + 16) = v22 + 1;
      v23 = v9 + 48 * v22;
      *(_QWORD *)(v23 + 32) = value;
      v10 += 6;
      *(_QWORD *)(v23 + 40) = v17;
      *(_OWORD *)(v23 + 48) = v18;
      *(_QWORD *)(v23 + 64) = v19;
      *(_QWORD *)(v23 + 72) = v20;
      --v8;
    }
    while (v8);
  }
  return v9;
}

id sub_1D42DAC78(void *a1)
{
  id v2;
  id result;
  double v4;
  CMTime v5;

  v2 = objc_msgSend(a1, sel_sampleTime);
  result = objc_msgSend(a1, sel_sampleRate);
  if ((~*(_QWORD *)&v4 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v4 <= -2147483650.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v4 < 2147483650.0)
  {
    CMTimeMake(&v5, (int64_t)v2, (int)v4);
    return (id)v5.value;
  }
LABEL_7:
  __break(1u);
  return result;
}

CMTimeEpoch sub_1D42DAD10(CMTimeValue a1, uint64_t a2, CMTimeEpoch value, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  id v10;
  id v11;
  int32_t v13;
  int32_t v14;
  int32_t v15;
  CMTime v16;
  CMTime time;

  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithLongLong_, a4);
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInt_, a5);
  sub_1D4442D80();
  if (v5)
  {

  }
  else
  {
    sub_1D4442D80();
    sub_1D42DC694(v11);
    v14 = v13;
    sub_1D42DC694(v10);
    time.value = a1;
    *(_QWORD *)&time.timescale = a2;
    time.epoch = value;
    CMTimeMultiplyByRatio(&v16, &time, v14, v15);
    value = v16.value;

  }
  return value;
}

_QWORD *sub_1D42DAE28@<X0>(_QWORD *(*a1)(uint64_t *__return_ptr)@<X1>, uint64_t a2@<X8>)
{
  _QWORD *result;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;

  result = a1(&v11);
  v4 = v12;
  v5 = v13;
  v6 = v14;
  v7 = v15;
  v8 = v16;
  v9 = v17;
  v10 = v18;
  *(_QWORD *)a2 = v11;
  *(_DWORD *)(a2 + 8) = v4;
  *(_DWORD *)(a2 + 12) = v5;
  *(_QWORD *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 24) = v7;
  *(_DWORD *)(a2 + 32) = v8;
  *(_DWORD *)(a2 + 36) = v9;
  *(_QWORD *)(a2 + 40) = v10;
  return result;
}

CMTimeEpoch sub_1D42DAEDC(CMTimeValue a1, uint64_t a2, CMTimeEpoch a3, uint64_t a4, uint64_t a5, CMTimeEpoch a6, CMTimeValue a7, int a8, CMTimeEpoch a9, CMTimeRoundingMethod method)
{
  uint64_t v10;
  CMTime *v13;
  CMTime *v14;
  CMTime *v15;
  CMTimeEpoch result;
  uint64_t v17;
  CMTimeEpoch v18;
  void *v19;
  int32_t v20;
  int32_t v21;
  CMTimeEpoch epoch;
  CMTime *v23;
  CMTime *v24;
  CMTime *v25;
  CMTimeValue v27;
  uint64_t v28;
  CMTimeEpoch v29;
  CMTime v30;
  CMTime time;
  CMTimeValue v32;

  v30.epoch = a9;
  time.value = a1;
  *(_QWORD *)&time.timescale = a2;
  time.epoch = a3;
  v32 = a7;
  v30.value = a7;
  sub_1D42DCEA8();
  CMTimeSubtract(v15, v13, v14);
  type metadata accessor for SNTimeUtils();
  result = sub_1D42DAD10(v27, v28, v29, a4, a5);
  if (!v10)
  {
    time.value = result;
    *(_QWORD *)&time.timescale = v17;
    time.epoch = v18;
    CMTimeConvertScale(&v30, &time, 1, method);
    v19 = (void *)sub_1D451B934();
    sub_1D42DC694(v19);
    v21 = v20;

    time.value = a4;
    *(_QWORD *)&time.timescale = a5;
    time.epoch = a6;
    CMTimeMultiply(&v30, &time, v21);
    epoch = v30.epoch;
    v30.epoch = a9;
    time.value = v30.value;
    *(_QWORD *)&time.timescale = *(_QWORD *)&v30.timescale;
    time.epoch = epoch;
    v30.value = v32;
    sub_1D42DCEA8();
    CMTimeAdd(v25, v23, v24);
    return v27;
  }
  return result;
}

double sub_1D42DB024@<D0>(CMTimeValue a1@<X0>, uint64_t a2@<X1>, CMTimeEpoch a3@<X2>, CMTimeValue a4@<X3>, uint64_t a5@<X4>, CMTimeEpoch a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, CMTimeEpoch a10, CMTimeRoundingMethod method)
{
  CMTimeEpoch v18;
  CMTimeValue v19;
  CMTimeEpoch v20;
  unint64_t v21;
  CMTimeEpoch v22;
  double result;
  CMTimeValue v24;
  CMTimeScale v25;
  CMTimeEpoch v26;
  unint64_t v27;
  CMTimeEpoch epoch;
  uint64_t v29;
  __int128 v30;
  CMTimeEpoch v31;
  CMTimeRange time1;
  CMTime end;
  CMTime time2;
  uint64_t v37;

  type metadata accessor for SNTimeUtils();
  v18 = a3;
  v31 = a3;
  v19 = a1;
  v20 = sub_1D42DAEDC(a4, a5, a6, a7, a8, a10, a1, a2, v31, method);
  if (!v37)
  {
    v24 = v20;
    v25 = v21;
    v26 = v22;
    time1.start.value = v19;
    v27 = HIDWORD(v21);
    *(_QWORD *)&time1.start.timescale = a2;
    time1.start.epoch = v18;
    time2.value = v20;
    *(_QWORD *)&time2.timescale = v21;
    time2.epoch = v22;
    if (CMTimeCompare(&time1.start, &time2) < 1)
    {
      end.epoch = v26;
      time2.value = v19;
      *(_QWORD *)&time2.timescale = a2;
      time2.epoch = v18;
      end.value = v24;
      end.timescale = v25;
      end.flags = v27;
      CMTimeRangeFromTimeToTime(&time1, &time2, &end);
      epoch = time1.duration.epoch;
      result = *(double *)&time1.start.timescale;
      v29 = *(_QWORD *)&time1.duration.timescale;
      v30 = *(_OWORD *)&time1.start.epoch;
      *(_QWORD *)a9 = time1.start.value;
      *(double *)(a9 + 8) = result;
      *(_OWORD *)(a9 + 16) = v30;
      *(_QWORD *)(a9 + 32) = v29;
      *(_QWORD *)(a9 + 40) = epoch;
    }
    else
    {
      sub_1D42DCEE8();
      sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 1, 0, 0xD00000000000001ELL, 0x80000001D4551100);
      sub_1D42DCEF0();
    }
  }
  return result;
}

void sub_1D42DB1B8(CMTimeValue a1, uint64_t a2, CMTimeEpoch a3, CMTimeValue a4, uint64_t a5, CMTimeEpoch a6, uint64_t a7, uint64_t a8, CMTimeEpoch a9, CMTimeRoundingMethod a10, uint64_t (*a11)(_QWORD *))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  CMTimeValue value;
  uint64_t v15;
  CMTimeScale timescale;
  CMTimeFlags flags;
  CMTimeEpoch epoch;
  CMTimeValue v19;
  CMTimeEpoch v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  CMTimeRange *v24;
  CMTime *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  CMTime time1;
  CMTime time2;
  _QWORD v34[3];
  CMTime v35;

  sub_1D42DB024(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t)v34, a9, a10);
  if (!v11)
  {
    v12 = v34[0];
    v13 = v34[1];
    v15 = v34[2];
    value = v35.value;
    timescale = v35.timescale;
    flags = v35.flags;
    epoch = v35.epoch;
    v19 = *MEMORY[0x1E0CA2E68];
    v20 = *(_QWORD *)(MEMORY[0x1E0CA2E68] + 16);
    time1 = v35;
    time2.value = v19;
    *(_QWORD *)&time2.timescale = *(_QWORD *)(MEMORY[0x1E0CA2E68] + 8);
    time2.epoch = v20;
    v21 = CMTimeCompare(&time1, &time2);
    if ((int)v21 >= 1)
      v21 = a11(v34);
    sub_1D42DCEC8(v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v12, v13, v15, value, __SPAIR64__(flags, timescale), epoch, time2.value);
  }
}

uint64_t sub_1D42DB2A0(uint64_t a1, CMTimeValue a2, unint64_t a3, CMTimeEpoch a4)
{
  CMTimeScale v5;
  CMTimeValue v8;
  CMTimeEpoch v9;
  unint64_t v10;
  uint64_t result;
  __int128 v12;
  CMTime time;
  CMTimeRange range;

  v5 = a3;
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 40);
  time.epoch = a4;
  range.start.value = v8;
  v10 = HIDWORD(a3);
  *(_QWORD *)&range.start.timescale = *(_QWORD *)(a1 + 8);
  *(_OWORD *)&range.start.epoch = *(_OWORD *)(a1 + 16);
  *(_QWORD *)&range.duration.timescale = *(_QWORD *)(a1 + 32);
  range.duration.epoch = v9;
  time.value = a2;
  *(_QWORD *)&time.timescale = a3;
  result = CMTimeRangeContainsTime(&range, &time);
  if (!(_DWORD)result)
  {
    sub_1D42DCEE8();
    range.start.value = 0;
    *(_QWORD *)&range.start.timescale = 0xE000000000000000;
    sub_1D451B400();
    time.value = range.start.value;
    *(_QWORD *)&time.timescale = *(_QWORD *)&range.start.timescale;
    sub_1D451A794();
    range.start.value = a2;
    range.start.timescale = v5;
    range.start.flags = v10;
    range.start.epoch = a4;
    type metadata accessor for CMTime(0);
    sub_1D42DCDDC();
    sub_1D451A794();
    v12 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)&range.start.value = *(_OWORD *)a1;
    *(_OWORD *)&range.start.epoch = v12;
    *(_OWORD *)&range.duration.timescale = *(_OWORD *)(a1 + 32);
    type metadata accessor for CMTimeRange(0);
    sub_1D42DCDDC();
    sub_1D451A794();
    sub_1D42DCD98(time.value, (uint64_t)"com.apple.SoundAnalysis");
    sub_1D42CB208();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1D42DB410(uint64_t result, int a2)
{
  if (*(_DWORD *)(result + 8) != a2 || *(_DWORD *)(result + 32) != a2)
  {
    sub_1D42DCEE8();
    sub_1D451B400();
    sub_1D451A794();
    sub_1D451B7C0();
    sub_1D451A794();
    sub_1D42CB208();
    sub_1D42DCD98(0, (uint64_t)"com.apple.SoundAnalysis");
    sub_1D42CB208();
    return swift_willThrow();
  }
  return result;
}

void sub_1D42DB4F0(CMTimeValue a1, uint64_t a2, CMTimeEpoch a3, unint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  CMTimeValue value;
  uint64_t v12;
  CMTimeEpoch epoch;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  CMTime v19;
  CMTime time;
  uint64_t v21;

  sub_1D44ACD80(0, a4);
  v6 = v5;
  v7 = *(_QWORD *)(v5 + 16);
  if (v7)
  {
    v21 = MEMORY[0x1E0DEE9D8];
    sub_1D42C71BC();
    v8 = 0;
    v9 = v21;
    while (1)
    {
      v10 = *(_QWORD *)(v6 + 8 * v8 + 32);
      if (v10 >> 31)
        break;
      time.value = a1;
      *(_QWORD *)&time.timescale = a2;
      time.epoch = a3;
      CMTimeMultiply(&v19, &time, v10);
      value = v19.value;
      v12 = *(_QWORD *)&v19.timescale;
      epoch = v19.epoch;
      v21 = v9;
      v15 = *(_QWORD *)(v9 + 16);
      v14 = *(_QWORD *)(v9 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1D42DCE78(v14);
        sub_1D42C71BC();
        v9 = v21;
      }
      *(_QWORD *)(v9 + 16) = v15 + 1;
      v16 = (_QWORD *)(v9 + 24 * v15);
      v16[4] = value;
      ++v8;
      v16[5] = v12;
      v16[6] = epoch;
      if (v7 == v8)
      {
        sub_1D42BE998();
        return;
      }
    }
    __break(1u);
  }
  else
  {
    sub_1D42BE998();
  }
}

uint64_t sub_1D42DB634(CMTimeValue a1, uint64_t a2, CMTimeEpoch a3, CMTimeValue *a4)
{
  uint64_t v4;
  uint64_t v8;
  CMTimeValue v9;
  uint64_t v10;
  CMTimeEpoch v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  CMTime *v15;
  int32_t v16;
  CMTime *v17;
  CMTime *v18;
  CMTimeValue value;
  uint64_t v20;
  uint64_t v21;
  CMTimeRange *v22;
  CMTime *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  CMTime *v28;
  int32_t v29;
  CMTime *v30;
  CMTimeValue v31;
  unint64_t v32;
  CMTimeValue v33;
  uint64_t v34;
  CMTimeEpoch epoch;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  CMTime time;
  CMTime v41;

  v9 = *a4;
  v8 = a4[1];
  v10 = v8;
  v11 = a4[2];
  v12 = a4[3];
  v13 = a4[4];
  v14 = a4[5];
  type metadata accessor for SNTimeUtils();
  sub_1D42DCE34(v9, v8, v11);
  if (v4)
    return a3;
  sub_1D42DCDBC();
  v18 = CMTimeConvertScale(v17, v15, v16, kCMTimeRoundingMethod_RoundTowardPositiveInfinity);
  value = v41.value;
  sub_1D42DCEC8((uint64_t)v18, v20, v21, v22, v23, v24, v25, v26, v37, v38, v39, v9, v10, v11, v12, v13, v14, v41.value);
  sub_1D42DCE34(v41.value, *(uint64_t *)&v41.timescale, v41.epoch);
  sub_1D42DCDBC();
  CMTimeConvertScale(v30, v28, v29, kCMTimeRoundingMethod_RoundTowardNegativeInfinity);
  v31 = v41.value - value;
  if (v41.value < value)
    return MEMORY[0x1E0DEE9D8];
  if (__OFSUB__(v41.value, value))
  {
    __break(1u);
    goto LABEL_13;
  }
  v32 = v31 + 1;
  if (__OFADD__(v31, 1))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (value < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (value > 0x7FFFFFFF)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  time.value = a1;
  *(_QWORD *)&time.timescale = a2;
  time.epoch = a3;
  CMTimeMultiply(&v41, &time, value);
  if ((v32 & 0x8000000000000000) == 0)
  {
    v33 = v41.value;
    v34 = *(_QWORD *)&v41.timescale;
    epoch = v41.epoch;
    sub_1D42DB4F0(a1, a2, a3, v32);
    a3 = sub_1D42DA9EC(v33, v34, epoch, v36);
    sub_1D42CB208();
    return a3;
  }
LABEL_16:
  sub_1D42DCED4();
  result = sub_1D451B550();
  __break(1u);
  return result;
}

uint64_t sub_1D42DB7F8(CMTimeValue *a1, CMTimeValue a2, uint64_t a3, CMTimeEpoch a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t result;
  uint64_t v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;

  v7 = sub_1D42DB634(a2, a3, a4, a1);
  if (!v4)
  {
    v8 = v7;
    sub_1D42B28FC(&qword_1EFE4A088);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1D4526260;
    sub_1D42B28FC(&qword_1EFE51960);
    v10 = sub_1D42DCEBC();
    v11 = *(_OWORD *)a1;
    *(_OWORD *)(v10 + 16) = xmmword_1D45261D0;
    *(_OWORD *)(v10 + 32) = v11;
    *(_QWORD *)(v10 + 48) = a1[2];
    *(_QWORD *)(inited + 32) = v10;
    *(_QWORD *)(inited + 40) = v8;
    v12 = sub_1D42DCEBC();
    *(_OWORD *)(v12 + 16) = xmmword_1D45261D0;
    *(_QWORD *)(v12 + 32) = sub_1D451AEE4();
    *(_DWORD *)(v12 + 40) = v13;
    *(_DWORD *)(v12 + 44) = v14;
    *(_QWORD *)(v12 + 48) = v15;
    *(_QWORD *)(inited + 48) = v12;
    swift_bridgeObjectRetain();
    v16 = MEMORY[0x1E0DEE9D8];
    for (i = 32; i != 56; i += 8)
    {
      v18 = *(_QWORD *)(inited + i);
      v19 = *(_QWORD *)(v18 + 16);
      v20 = *(_QWORD *)(v16 + 16);
      if (__OFADD__(v20, v19))
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        sub_1D42DCED4();
        result = sub_1D451B5D4();
        __break(1u);
        return result;
      }
      swift_bridgeObjectRetain();
      sub_1D42DCE84();
      if (!swift_isUniquelyReferenced_nonNull_native() || v20 + v19 > *(_QWORD *)(v16 + 24) >> 1)
      {
        sub_1D442F644();
        v16 = v21;
      }
      if (*(_QWORD *)(v18 + 16))
      {
        v22 = *(_QWORD *)(v16 + 16);
        if ((*(_QWORD *)(v16 + 24) >> 1) - v22 < v19)
          goto LABEL_38;
        v23 = (void *)(v16 + 24 * v22 + 32);
        if (v18 + 32 < (unint64_t)v23 + 24 * v19 && (unint64_t)v23 < v18 + 32 + 24 * v19)
          goto LABEL_40;
        memcpy(v23, (const void *)(v18 + 32), 24 * v19);
        if (v19)
        {
          v25 = *(_QWORD *)(v16 + 16);
          v26 = __OFADD__(v25, v19);
          v27 = v25 + v19;
          if (v26)
            goto LABEL_39;
          *(_QWORD *)(v16 + 16) = v27;
        }
      }
      else if (v19)
      {
        goto LABEL_37;
      }
      sub_1D42CB8F4();
      swift_bridgeObjectRelease();
    }
    sub_1D42CB5C8();
    swift_setDeallocating();
    sub_1D43476A0();
    v28 = sub_1D42DCE84();
    v29 = sub_1D42DCB30(v28, 1);
    sub_1D42CB208();
    sub_1D448CE3C(v29);
    v31 = v30;
    swift_release();
    sub_1D42DCE84();
    v32 = sub_1D42DC420(1, v16);
    sub_1D448CE3C(v32);
    v34 = v33;
    v35 = swift_bridgeObjectRelease();
    v39 = *(_QWORD *)(v34 + 16);
    v40 = *(_QWORD *)(v31 + 16);
    if (v39 <= v40)
      v41 = *(_QWORD *)(v31 + 16);
    else
      v41 = *(_QWORD *)(v34 + 16);
    sub_1D42DCDF0(v35, v36, v37, v38, v39 - v41);
    sub_1D44B42A0();
    sub_1D42DCDF0(v42, v43, v44, v45, v40 - v41);
    sub_1D44B42A0();
    v57 = sub_1D42D8FB0(v34, v31);
    swift_bridgeObjectRelease();
    sub_1D42CB8F4();
    sub_1D42CB5C8();
    v47 = *(_QWORD *)(v57 + 16);
    if (v47)
    {
      v48 = (_BYTE *)(swift_bridgeObjectRetain() + 80);
      v5 = MEMORY[0x1E0DEE9D8];
      do
      {
        if ((*v48 & 1) == 0)
        {
          v50 = *((_QWORD *)v48 - 6);
          v49 = *((_QWORD *)v48 - 5);
          v58 = *((_OWORD *)v48 - 2);
          v52 = *((_QWORD *)v48 - 2);
          v51 = *((_QWORD *)v48 - 1);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1D42DCE6C();
            v5 = v55;
          }
          v53 = *(_QWORD *)(v5 + 16);
          if (v53 >= *(_QWORD *)(v5 + 24) >> 1)
          {
            sub_1D42DCE6C();
            v5 = v56;
          }
          *(_QWORD *)(v5 + 16) = v53 + 1;
          v54 = v5 + 48 * v53;
          *(_QWORD *)(v54 + 32) = v50;
          *(_QWORD *)(v54 + 40) = v49;
          *(_OWORD *)(v54 + 48) = v58;
          *(_QWORD *)(v54 + 64) = v52;
          *(_QWORD *)(v54 + 72) = v51;
        }
        v48 += 52;
        --v47;
      }
      while (v47);
      swift_bridgeObjectRelease();
    }
    else
    {
      v5 = MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
  }
  return v5;
}

int64_t sub_1D42DBBDC(CMTimeValue *a1, CMTimeValue a2, uint64_t a3, CMTimeEpoch a4, uint64_t a5, uint64_t timescale, CMTimeEpoch a7)
{
  uint64_t v7;
  int64_t result;
  CMTimeValue value;
  CMTimeEpoch epoch;
  uint64_t v18;
  CMTimeEpoch v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  CMTimeValue v29;
  CMTimeValue v30;
  CMTimeEpoch v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  CMTimeValue v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  CMTimeRange v46;
  CMTime duration;
  CMTime rhs;
  CMTimeValue v49[2];
  __int128 v50;
  uint64_t v51;
  uint64_t v52;

  result = -a5;
  if (__OFSUB__(0, a5))
  {
    __break(1u);
  }
  else
  {
    CMTimeMake(&v46.start, result, timescale);
    value = v46.start.value;
    epoch = v46.start.epoch;
    v18 = *(_QWORD *)&v46.start.timescale;
    v19 = a1[2];
    v46.start.value = *a1;
    *(_QWORD *)&v46.start.timescale = a1[1];
    v46.start.epoch = v19;
    rhs.value = value;
    *(_QWORD *)&rhs.timescale = v18;
    rhs.epoch = epoch;
    CMTimeAdd(&duration, &v46.start, &rhs);
    v28 = sub_1D42DCE44(v20, v21, v22, v23, v24, v25, v26, v27, *(double *)&v46.start.value, *(double *)&v46.start.timescale, *(double *)&v46.start.epoch, *(double *)&v46.duration.value, *(double *)&v46.duration.timescale, *(double *)&v46.duration.epoch, *(double *)&duration.value, *(double *)&duration.timescale);
    v29 = a1[3];
    duration.epoch = a1[5];
    rhs.value = v30;
    *(double *)&rhs.timescale = v28;
    rhs.epoch = v31;
    duration.value = v29;
    *(_QWORD *)&duration.timescale = a1[4];
    CMTimeRangeMake(&v46, &rhs, &duration);
    v40 = sub_1D42DCE1C(v32, v33, v34, v35, v36, v37, v38, v39, *(double *)&v46.start.value, *(double *)&v46.start.timescale);
    v49[0] = v41;
    *(double *)&v49[1] = v40;
    v50 = v42;
    v51 = v43;
    v52 = v44;
    v45 = sub_1D42DB7F8(v49, a2, a3, a4);
    if (!v7)
    {
      a7 = sub_1D42DAB08(a5, timescale, a7, v45);
      sub_1D42CB8F4();
    }
    return a7;
  }
  return result;
}

CMTimeEpoch sub_1D42DBD24(uint64_t a1, uint64_t a2, CMTimeEpoch a3, uint64_t a4, CMTime *a5, CMTime *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;
  CMTimeScale v11;
  CMTimeFlags v12;
  uint64_t v13;
  CMTimeEpoch result;
  uint64_t v15;
  uint64_t v16;
  CMTime *v17;
  CMTime *v18;
  CMTime *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t method;
  uint64_t methoda;
  uint64_t v26;
  uint64_t v27;
  CMTime v28;
  CMTime rhs;
  CMTime lhs;
  CMTimeValue v31;

  lhs.epoch = a3;
  v10 = *(_QWORD *)a4;
  v11 = *(_DWORD *)(a4 + 8);
  v12 = *(_DWORD *)(a4 + 12);
  v13 = *(_QWORD *)(a4 + 16);
  *(_QWORD *)&lhs.timescale = a2;
  v31 = v10;
  sub_1D42DCE04(a1, a2, a3, (CMTime *)a4, a5, a6, a7, a8, v22, method, v26, v28.value, *(uint64_t *)&v28.timescale, v28.epoch, v10, __SPAIR64__(v12, v11), v13, a1);
  result = sub_1D42DAEDC(v28.value, v28.timescale | ((unint64_t)v28.flags << 32), v28.epoch, *(_QWORD *)(a4 + 24), *(_QWORD *)(a4 + 32), *(_QWORD *)(a4 + 40), *MEMORY[0x1E0CA2E68], *(_QWORD *)(MEMORY[0x1E0CA2E68] + 8), *(_QWORD *)(MEMORY[0x1E0CA2E68] + 16), kCMTimeRoundingMethod_RoundTowardNegativeInfinity);
  if (!v8)
  {
    sub_1D42DCE04(result, v15, v16, v17, v18, v19, v20, v21, v23, methoda, v27, v28.value, *(uint64_t *)&v28.timescale, v28.epoch, result, v15, v16, v28.value);
    rhs = v28;
    lhs.value = v31;
    lhs.timescale = v11;
    lhs.flags = v12;
    lhs.epoch = v13;
    CMTimeAdd(&v28, &lhs, &rhs);
    return v28.value;
  }
  return result;
}

uint64_t sub_1D42DBE40(CMTimeValue *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  int64_t v7;
  uint64_t v8;
  CMTime *v9;
  CMTime *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  CMTimeEpoch v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v4 = (uint64_t)a2;
  v5 = sub_1D42DBBDC(a1, a2[3], a2[4], a2[5], *a2, a2[1], a2[2]);
  if (!v3)
  {
    v7 = v5;
    v8 = *(_QWORD *)(v5 + 16);
    if (v8)
    {
      v29 = MEMORY[0x1E0DEE9D8];
      sub_1D42C7258();
      v2 = v29;
      v28 = v4;
      v13 = (uint64_t *)(v7 + 72);
      do
      {
        v14 = *(v13 - 2);
        v15 = *(v13 - 1);
        v16 = *v13;
        v17 = sub_1D42DBD24(*(v13 - 5), *(v13 - 4), *(v13 - 3), v4, v9, v10, v11, v12);
        v19 = v18;
        v21 = v20;
        v23 = *(_QWORD *)(v29 + 16);
        v22 = *(_QWORD *)(v29 + 24);
        v24 = v23 + 1;
        if (v23 >= v22 >> 1)
        {
          sub_1D42DCE78(v22);
          v27 = v26;
          sub_1D42C7258();
          v24 = v27;
        }
        *(_QWORD *)(v29 + 16) = v24;
        v25 = (_QWORD *)(v29 + 48 * v23);
        v25[4] = v17;
        v25[5] = v19;
        v25[6] = v21;
        v25[7] = v14;
        v25[8] = v15;
        v25[9] = v16;
        v13 += 6;
        --v8;
        v4 = v28;
      }
      while (v8);
      sub_1D42DCE8C();
    }
    else
    {
      sub_1D42DCE8C();
      return MEMORY[0x1E0DEE9D8];
    }
  }
  return v2;
}

char *sub_1D42DBFC0(unsigned int a1, id a2)
{
  char *result;
  BOOL v5;
  char *v6;
  double v7;

  result = (char *)objc_msgSend(a2, sel_sampleTime);
  v5 = __OFADD__(result, a1);
  v6 = &result[a1];
  if (v5)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(a2, sel_sampleRate);
    return (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C89B10]), sel_initWithSampleTime_atRate_, v6, v7);
  }
  return result;
}

void sub_1D42DC034()
{
  mach_error_t v0;
  mach_timebase_info v1[2];

  v1[1] = *(mach_timebase_info *)MEMORY[0x1E0C80C00];
  v1[0] = 0;
  v0 = mach_timebase_info(v1);
  sub_1D44C84C4(v0);
}

void sub_1D42DC0A4(unint64_t a1)
{
  uint64_t v1;
  int v3;
  unsigned int v4;

  sub_1D42DC034();
  if (!v1)
  {
    if (is_mul_ok(1000 * v4, a1))
    {
      if (v3)
        return;
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void static SNTimeUtils.timestampToDate(machContinuousTime:)(uint64_t a1)
{
  uint64_t v1;
  BOOL v3;
  uint64_t v4;

  if (!mach_get_times() && (v3 = a1 == 0, v4 = -a1, v4 != 0 && v3))
  {
    type metadata accessor for SNTimeUtils();
    sub_1D42DC24C(v4);
    if (!v1)
      sub_1D4519CB4();
  }
  else
  {
    sub_1D42DC1F0();
    swift_allocError();
    sub_1D42DCEF0();
  }
}

unint64_t sub_1D42DC1F0()
{
  unint64_t result;

  result = qword_1EFE4A070;
  if (!qword_1EFE4A070)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452630C, &type metadata for SNTimeUtils.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4A070);
  }
  return result;
}

uint64_t type metadata accessor for SNTimeUtils()
{
  return objc_opt_self();
}

void sub_1D42DC24C(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;

  sub_1D42DC034();
  if (!v1)
  {
    if (a1 < 0)
    {
      __break(1u);
    }
    else if (((unsigned __int128)v3 * a1) >> 64 == (v3 * a1) >> 63)
    {
      if (HIDWORD(v3))
        return;
LABEL_8:
      __break(1u);
      return;
    }
    __break(1u);
    goto LABEL_8;
  }
}

id SNTimeUtils.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id SNTimeUtils.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SNTimeUtils();
  return objc_msgSendSuper2(&v2, sel_init);
}

id SNTimeUtils.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SNTimeUtils();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t storeEnumTagSinglePayload for SNTimeUtils.DomainError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D42DC384 + 4 * byte_1D4526270[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D42DC3A4 + 4 * byte_1D4526275[v4]))();
}

_BYTE *sub_1D42DC384(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D42DC3A4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D42DC3AC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D42DC3B4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D42DC3BC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D42DC3C4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SNTimeUtils.DomainError()
{
  return &type metadata for SNTimeUtils.DomainError;
}

unint64_t sub_1D42DC3E4()
{
  unint64_t result;

  result = qword_1EFE4A078;
  if (!qword_1EFE4A078)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45262E4, &type metadata for SNTimeUtils.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4A078);
  }
  return result;
}

uint64_t sub_1D42DC420(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if (result < 0)
    goto LABEL_31;
  if (!result)
    return a2;
  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
LABEL_27:
    swift_bridgeObjectRelease();
    swift_release();
    return v8;
  }
  v3 = 0;
  v4 = 0;
  v5 = (uint64_t *)(a2 + 48);
  v6 = v2 - 1;
  v7 = MEMORY[0x1E0DEE9D8];
  v8 = MEMORY[0x1E0DEE9D8];
  v23 = a2;
  v24 = v2 - 1;
  v26 = result;
  do
  {
    v9 = *(v5 - 1);
    v10 = *v5;
    v11 = *(_QWORD *)(v7 + 16);
    v27 = *(v5 - 2);
    if ((uint64_t)v11 < result)
    {
      v12 = a2;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D42C71BC();
        v6 = v24;
      }
      v13 = *(_QWORD *)(v7 + 16);
      a2 = v12;
      if (v13 >= *(_QWORD *)(v7 + 24) >> 1)
      {
        sub_1D42C71BC();
        a2 = v12;
        v6 = v24;
      }
      *(_QWORD *)(v7 + 16) = v13 + 1;
      v14 = (_QWORD *)(v7 + 24 * v13);
      result = v26;
      v14[4] = v27;
      v14[5] = v9;
      v14[6] = v10;
LABEL_20:
      if (v6 == v3)
        goto LABEL_27;
      goto LABEL_24;
    }
    if (v4 >= v11)
      goto LABEL_29;
    v25 = *v5;
    v15 = (_QWORD *)(v7 + 24 * v4);
    v16 = v15[4];
    v17 = v15[5];
    v18 = v15[6];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1D42C71BC();
      v6 = v24;
    }
    v19 = *(_QWORD *)(v8 + 16);
    if (v19 >= *(_QWORD *)(v8 + 24) >> 1)
    {
      sub_1D42C71BC();
      v6 = v24;
    }
    *(_QWORD *)(v8 + 16) = v19 + 1;
    v20 = (_QWORD *)(v8 + 24 * v19);
    v20[4] = v16;
    v20[5] = v17;
    v20[6] = v18;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1D42DC88C();
      v7 = v21;
    }
    a2 = v23;
    result = v26;
    if (v4 >= *(_QWORD *)(v7 + 16))
      goto LABEL_30;
    v22 = (_QWORD *)(v7 + 24 * v4);
    v22[4] = v27;
    v22[5] = v9;
    v22[6] = v25;
    if ((uint64_t)++v4 < v26)
      goto LABEL_20;
    if (v6 == v3)
      goto LABEL_27;
    v4 = 0;
LABEL_24:
    ++v3;
    v5 += 3;
  }
  while (v3 < *(_QWORD *)(a2 + 16));
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

void sub_1D42DC694(void *a1)
{
  id v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;

  v2 = objc_msgSend(sub_1D42DCE14(), sel_initWithLongLong_, 0x7FFFFFFFLL);
  v3 = objc_msgSend(sub_1D42DCE14(), sel_initWithLongLong_, 0xFFFFFFFF80000000);
  v4 = sub_1D42DCE54((uint64_t)v3, sel_compare_);
  v5 = v2;
  if (v4 != (id)1)
  {
    if (sub_1D42DCE60((uint64_t)v2, sel_compare_) == (id)-1)
      v5 = v3;
    else
      v5 = a1;
  }
  v6 = (uint64_t)objc_msgSend(v5, sel_longLongValue);

  if (v6 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v6 > 0x7FFFFFFF)
LABEL_9:
    __break(1u);
}

id sub_1D42DC758(void *a1)
{
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v2 = objc_msgSend(sub_1D42DCE14(), sel_initWithLongLong_, 0x7FFFFFFFFFFFFFFFLL);
  v3 = objc_msgSend(sub_1D42DCE14(), sel_initWithLongLong_, 0x8000000000000000);
  v4 = sub_1D42DCE54((uint64_t)v3, sel_compare_);
  v5 = v2;
  if (v4 != (id)1)
  {
    if (sub_1D42DCE60((uint64_t)v2, sel_compare_) == (id)-1)
      v5 = v3;
    else
      v5 = a1;
  }
  v6 = objc_msgSend(v5, sel_longLongValue);

  return v6;
}

void sub_1D42DC7F4(_BYTE *a1)
{
  bzero(a1, 0x90uLL);
  a1[144] = 1;
}

uint64_t sub_1D42DC820(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D42B28FC(&qword_1EFE4A080);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D42DC868(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 144))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1D42DC884(uint64_t result)
{
  *(_BYTE *)(result + 144) = 0;
  return result;
}

void sub_1D42DC88C()
{
  sub_1D42C7E94();
}

void sub_1D42DC8A0()
{
  sub_1D42C8294();
}

void sub_1D42DC8B4()
{
  sub_1D42C834C();
}

void sub_1D42DC8C8()
{
  sub_1D42C8538();
}

uint64_t sub_1D42DC8DC(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t result;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  BOOL v24;
  uint64_t v25;
  void *v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  void *v30;
  uint64_t v31;
  _QWORD v32[2];

  v5 = swift_retain();
  v6 = a1(v5);
  sub_1D42BE998();
  v32[0] = v6;
  v32[1] = a3;
  v7 = swift_retain();
  v8 = (void *)MEMORY[0x1D825DB34](v7);
  v9 = *(void **)(v6 + 16);
  v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v11 = 0;
  if (v9)
  {
    v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
    while (1)
    {
      v30 = v9;
      sub_1D4468C20(&v30, (uint64_t)v32, &v31);
      v13 = v31;
      objc_autoreleasePoolPop(v8);
      result = sub_1D42B8F48();
      if (!v13)
        break;
      if (!v11)
      {
        v15 = v10[3];
        if ((uint64_t)((v15 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_28;
        v16 = v15 & 0xFFFFFFFFFFFFFFFELL;
        if (v16 <= 1)
          v17 = 1;
        else
          v17 = v16;
        sub_1D42B28FC(&qword_1EFE40410);
        v18 = (_QWORD *)swift_allocObject();
        v19 = (uint64_t)(j__malloc_size(v18) - 32) / 8;
        v18[2] = v17;
        v18[3] = (2 * v19) | 1;
        v20 = (unint64_t)(v18 + 4);
        v21 = v10[3];
        v22 = v21 >> 1;
        if (v10[2])
        {
          if (v18 != v10 || v20 >= (unint64_t)&v10[v22 + 4])
            memmove(v18 + 4, v10 + 4, 8 * v22);
          v10[2] = 0;
        }
        v12 = (_QWORD *)(v20 + 8 * v22);
        v11 = (v19 & 0x7FFFFFFFFFFFFFFFLL) - (v21 >> 1);
        result = swift_release();
        v10 = v18;
      }
      v24 = __OFSUB__(v11--, 1);
      if (v24)
      {
        __break(1u);
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      *v12++ = v13;
      v25 = swift_retain();
      v8 = (void *)MEMORY[0x1D825DB34](v25);
      v9 = *(void **)(v6 + 16);
      if (!v9)
        goto LABEL_21;
    }
  }
  else
  {
LABEL_21:
    sub_1D42B28FC(&qword_1EFE4A098);
    sub_1D42DCD28();
    v26 = (void *)swift_allocError();
    swift_willThrow();
    objc_autoreleasePoolPop(v8);
    sub_1D42B8F48();

  }
  sub_1D446AF80();
  result = sub_1D42B8F48();
  v27 = v10[3];
  if (v27 < 2)
    return (uint64_t)v10;
  v28 = v27 >> 1;
  v24 = __OFSUB__(v28, v11);
  v29 = v28 - v11;
  if (!v24)
  {
    v10[2] = v29;
    return (uint64_t)v10;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1D42DCB30(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  BOOL v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;

  v2 = *(_QWORD *)(result + 16);
  if (a2 < 1)
  {
    v3 = 0;
  }
  else
  {
    if (!v2)
    {
      v6 = 0;
      v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_32:
      v23 = v5[3];
      if (v23 < 2)
        return (uint64_t)v5;
      v24 = v23 >> 1;
      v22 = __OFSUB__(v24, v6);
      v25 = v24 - v6;
      if (!v22)
      {
        v5[2] = v25;
        return (uint64_t)v5;
      }
      goto LABEL_38;
    }
    v3 = a2;
    if ((unint64_t)a2 >= 2)
    {
      v4 = 1;
      v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      while (v2 != v4)
      {
        if (a2 == ++v4)
          goto LABEL_11;
      }
      goto LABEL_12;
    }
    v3 = 1;
  }
LABEL_11:
  v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v7 = v2 - v3;
  if (v2 == v3)
  {
LABEL_12:
    v6 = 0;
    goto LABEL_32;
  }
  if (v2 > v3)
  {
    result = swift_bridgeObjectRetain();
    v6 = 0;
    v8 = (uint64_t *)(result + 24 * v3 + 48);
    v9 = v5 + 4;
    while (1)
    {
      v10 = *(v8 - 2);
      v11 = *(v8 - 1);
      v12 = *v8;
      if (!v6)
      {
        v13 = v5[3];
        if ((uint64_t)((v13 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_37;
        v14 = v13 & 0xFFFFFFFFFFFFFFFELL;
        if (v14 <= 1)
          v15 = 1;
        else
          v15 = v14;
        sub_1D42B28FC(&qword_1EFE51960);
        v16 = (_QWORD *)swift_allocObject();
        v17 = (uint64_t)(j__malloc_size(v16) - 32) / 24;
        v16[2] = v15;
        v16[3] = 2 * v17;
        v18 = (unint64_t)(v16 + 4);
        v19 = v5[3];
        v20 = v19 >> 1;
        if (v5[2])
        {
          if (v16 != v5 || v18 >= (unint64_t)&v5[3 * v20 + 4])
            memmove(v16 + 4, v5 + 4, 24 * v20);
          v5[2] = 0;
        }
        v9 = (_QWORD *)(v18 + 24 * v20);
        v6 = (v17 & 0x7FFFFFFFFFFFFFFFLL) - (v19 >> 1);
        result = swift_release();
        v5 = v16;
      }
      v22 = __OFSUB__(v6--, 1);
      if (v22)
        break;
      v8 += 3;
      *v9 = v10;
      v9[1] = v11;
      v9[2] = v12;
      v9 += 3;
      if (!--v7)
      {
        result = swift_bridgeObjectRelease();
        goto LABEL_32;
      }
    }
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_1D42DCD28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFE4A0A0;
  if (!qword_1EFE4A0A0)
  {
    v1 = sub_1D42B8B10(&qword_1EFE4A098);
    result = MEMORY[0x1D825E41C](&unk_1D45447C0, v1);
    atomic_store(result, (unint64_t *)&qword_1EFE4A0A0);
  }
  return result;
}

double sub_1D42DCD6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, uint64_t a17, double a18, __int128 a19, uint64_t a20,uint64_t a21)
{
  uint64_t v13;
  double result;

  result = a18;
  *(_QWORD *)v13 = a17;
  *(double *)(v13 + 8) = a18;
  *(_OWORD *)(v13 + 16) = a19;
  *(_QWORD *)(v13 + 32) = a20;
  *(_QWORD *)(v13 + 40) = a21;
  return result;
}

id sub_1D42DCD98@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  unint64_t v2;

  return sub_1D43EC59C(0xD000000000000017, (a2 - 32) | 0x8000000000000000, 1, 0, a1, v2);
}

uint64_t sub_1D42DCDDC()
{
  return sub_1D451B514();
}

void sub_1D42DCDF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1D44AFE44(0, 0, 0, 1, a5);
}

CMTime *sub_1D42DCE04(uint64_t a1, uint64_t a2, uint64_t a3, CMTime *a4, CMTime *rhs, CMTime *lhs, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t rhsa, uint64_t rhs_8, uint64_t rhs_16, uint64_t lhsa)
{
  return CMTimeSubtract((CMTime *)&a12, (CMTime *)&lhsa, (CMTime *)&rhsa);
}

id sub_1D42DCE14()
{
  uint64_t v0;

  return objc_allocWithZone(*(Class *)(v0 + 2024));
}

double sub_1D42DCE1C(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  return a10;
}

CMTimeEpoch sub_1D42DCE34(CMTimeValue a1, uint64_t a2, CMTimeEpoch a3)
{
  uint64_t v3;
  uint64_t v4;

  return sub_1D42DAD10(a1, a2, a3, v4, v3);
}

double sub_1D42DCE44(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16)
{
  return a16;
}

id sub_1D42DCE54(uint64_t a1, const char *a2)
{
  uint64_t v2;
  void *v3;

  return objc_msgSend(v3, a2, v2);
}

id sub_1D42DCE60(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

void sub_1D42DCE6C()
{
  sub_1D442F58C();
}

BOOL sub_1D42DCE78@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_1D42DCE84()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D42DCE8C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42DCEBC()
{
  return swift_allocObject();
}

CMTime *sub_1D42DCEC8(uint64_t a1, uint64_t a2, uint64_t a3, CMTimeRange *range, CMTime *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t rangea, uint64_t range_8, uint64_t range_16, uint64_t range_24, uint64_t range_32, uint64_t range_40, uint64_t a18)
{
  return CMTimeRangeGetEnd((CMTime *)&a18, (CMTimeRange *)&rangea);
}

uint64_t sub_1D42DCEE8()
{
  return type metadata accessor for SNError();
}

uint64_t sub_1D42DCEF0()
{
  return swift_willThrow();
}

void sub_1D42DCEFC(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_retain();
  swift_bridgeObjectRetain();
  sub_1D44ACE3C();
  v6 = v5;
  swift_bridgeObjectRelease();
  v7 = sub_1D436FCBC(a1, v6);
  swift_release();
  swift_release();
  if (!v2)
    *a2 = v7;
  sub_1D42DD1D8();
}

uint64_t sub_1D42DCF80@<X0>(uint64_t *a1@<X0>, __int128 *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t inited;
  __int128 v8;
  uint64_t result;
  __int128 v10;

  v5 = *a1;
  v6 = a1[1];
  sub_1D42B28FC((uint64_t *)&unk_1EFE519D0);
  inited = swift_initStackObject();
  v10 = *a2;
  v8 = v10;
  *(_OWORD *)(inited + 16) = xmmword_1D45261D0;
  *(_OWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 48) = v5;
  *(_QWORD *)(inited + 56) = v6;
  sub_1D42DD1B0((uint64_t)&v10);
  sub_1D42DD16C(v5, v6);
  result = sub_1D451A5E4();
  *a3 = result;
  return result;
}

void sub_1D42DD024(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  _BYTE *v12;

  v4 = *a1;
  if (!*(_QWORD *)(*a1 + 16))
    goto LABEL_5;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  v7 = sub_1D4366B34(v5, v6);
  if ((v8 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    sub_1D42B7F2C();
    swift_allocError();
    *v12 = 0;
    swift_willThrow();
    goto LABEL_6;
  }
  v9 = (uint64_t *)(*(_QWORD *)(v4 + 56) + 16 * v7);
  v10 = *v9;
  v11 = v9[1];
  sub_1D42DD16C(*v9, v11);
  swift_bridgeObjectRelease();
  *a3 = v10;
  a3[1] = v11;
LABEL_6:
  sub_1D42DD1D8();
}

uint64_t sub_1D42DD0D0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  sub_1D42B5528(a1, v1);
  return (*(uint64_t (**)(uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t *@<X8>), _QWORD, _QWORD, uint64_t, uint64_t))(v2 + 8))(sub_1D42DD140, 0, MEMORY[0x1E0CB0338], v1, v2);
}

uint64_t sub_1D42DD140@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = sub_1D43C3A7C(a1, a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1D42DD16C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_1D42DD1B0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D42DD1E8()
{
  uint64_t v0;

  sub_1D42E33F8(&qword_1EFE4A398, &qword_1EFE4A358);
  v0 = sub_1D451A374();
  sub_1D42B28FC(&qword_1EFE4A360);
  swift_allocObject();
  return sub_1D43AEFD8(v0);
}

void sub_1D42DD264()
{
  sub_1D42E0C1C();
}

void sub_1D42DD280(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1D42E30E4(*(_QWORD *)(v1 + 32) + 120, a1, &qword_1EFE4A0F8);
}

void sub_1D42DD2A8()
{
  sub_1D42E4000();
  sub_1D42B6E24();
}

uint64_t sub_1D42DD2C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 360) = a1;
  *(_QWORD *)(v2 + 368) = a2;
  return sub_1D42E39F0();
}

uint64_t sub_1D42DD2D4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  _QWORD *v7;
  _QWORD *v8;

  sub_1D42E39FC();
  if (qword_1EFE478B8 != -1)
    swift_once();
  sub_1D42E3B9C();
  if (v1)
  {
    if (qword_1EFE48E58 != -1)
      swift_once();
    v3 = qword_1EFEA7770;
    v2 = qword_1EFEA7778;
    v4 = qword_1EFEA7780;
    v5 = qword_1EFEA7788;
    *(_QWORD *)(v0 + 376) = qword_1EFEA7778;
    *(_QWORD *)(v0 + 384) = v5;
    *(_QWORD *)(v0 + 392) = qword_1EFEA7790;
    if ((byte_1EFEA7798 & 1) != 0)
    {
      *(_QWORD *)(v0 + 344) = v3;
      sub_1D42E3CE4();
      sub_1D42B28FC(&qword_1EFE49BB0);
      sub_1D42E3CD4();
      return sub_1D42B8E40(*(uint64_t (**)(void))(v0 + 8));
    }
    else
    {
      sub_1D42E3AD8(v2, v4);
      swift_retain();
      sub_1D42B8F24();
      sub_1D42E3CA4();
      v8 = (_QWORD *)sub_1D42E3CEC();
      *(_QWORD *)(v0 + 432) = v8;
      *v8 = v0;
      v8[1] = sub_1D42DD4B4;
      return sub_1D42E385C(v0 + 144, v0 + 64);
    }
  }
  else
  {
    if (qword_1EFE48E80 != -1)
      swift_once();
    *(_QWORD *)(v0 + 400) = qword_1EFEA77E8;
    sub_1D42BE934();
    v7 = (_QWORD *)sub_1D42E3CAC();
    *(_QWORD *)(v0 + 408) = v7;
    sub_1D42E3D3C(v7, (uint64_t)sub_1D42DD450);
    return sub_1D42E3848();
  }
}

uint64_t sub_1D42DD450()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_1D42E3F94();
  v2[52] = v3;
  v2[53] = v4;
  sub_1D42E3CC4();
  if (v1)
    v2[69] = v1;
  else
    v2[56] = v0;
  sub_1D42B8EC8();
  return sub_1D42E380C();
}

uint64_t sub_1D42DD4B4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_1D42E3E3C();
  sub_1D42E3E84(v2);
  *(_QWORD *)(v0 + 440) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release();
    sub_1D42B8F48();
    sub_1D42BE93C();
  }
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D42DD518()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_1D42E3BD0();
  sub_1D42B28FC(&qword_1EFE4A148);
  if (sub_1D42E3B30())
  {
    sub_1D42B5400(v0 + 144);
    v1 = *(_QWORD *)(v0 + 320);
    v2 = *(_QWORD *)(v0 + 360);
    *(_OWORD *)v2 = *(_OWORD *)(v0 + 304);
    *(_QWORD *)(v2 + 16) = v1;
    v3 = (uint64_t (*)(void))sub_1D42E3DD0();
  }
  else
  {
    sub_1D42E2DD0();
    sub_1D42B6D0C();
    sub_1D42E3BB8();
    v3 = (uint64_t (*)(void))sub_1D42E3B60();
  }
  return sub_1D42E3A2C(v3);
}

uint64_t sub_1D42DD5A8()
{
  uint64_t v0;

  swift_release();
  sub_1D42B8F48();
  sub_1D42BE93C();
  return sub_1D42E39E4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D42DD5E0()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  sub_1D42E39FC();
  v1 = objc_msgSend(*(id *)(v0 + 416), sel_remoteObjectProxy);
  sub_1D42E3BAC();
  sub_1D42E3CB4();
  sub_1D42B28FC(&qword_1EFE4A128);
  sub_1D42E39D0();
  *(_QWORD *)(v0 + 456) = *(_QWORD *)(v0 + 352);
  v2 = (_QWORD *)sub_1D42B6F40();
  *(_QWORD *)(v0 + 464) = v2;
  sub_1D42E3D08(v2);
  sub_1D42E38AC();
  sub_1D42E3CDC();
  v3 = (_QWORD *)sub_1D42E3CBC();
  *(_QWORD *)(v0 + 472) = v3;
  *v3 = v0;
  v3[1] = sub_1D42DD6A4;
  v4 = sub_1D42E3AEC((uint64_t)&unk_1EFE4A230);
  return sub_1D42E3820(v4, v5, v6, v7, v8);
}

uint64_t sub_1D42DD6A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_1D42E3EE0();
  sub_1D42E3E84(v4);
  v3[60] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v3[61] = v0;
    v3[62] = v2;
  }
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D42DD700()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  sub_1D42E3C44();
  v2 = v0[61];
  v1 = v0[62];
  v3 = (void *)v0[52];
  swift_release();
  sub_1D42CFC14();
  sub_1D42E3CCC();
  v4 = sub_1D42B6F40();
  v0[63] = v4;
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v2;

  sub_1D42CFC14();
  sub_1D42BE998();
  v5 = (_QWORD *)sub_1D42E3968();
  v0[64] = v5;
  *v5 = v0;
  v5[1] = sub_1D42DD790;
  v6 = sub_1D42E3B00();
  return sub_1D42E3894(v6, v7, v8);
}

uint64_t sub_1D42DD790()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_1D42B8E20();
  *v2 = *v1;
  *(_QWORD *)(v3 + 520) = v0;
  swift_task_dealloc();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D42DD7E0()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[52];
  swift_release();
  sub_1D42E3BC4();
  sub_1D42B70A8();

  v0[69] = v0[60];
  sub_1D42B8EC8();
  return sub_1D42E380C();
}

uint64_t sub_1D42DD830()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  _QWORD *v4;

  sub_1D42E3C44();
  sub_1D42E3F40((uint64_t)(v0 + 2), (uint64_t)(v0 + 41));
  type metadata accessor for XPCDataDecoder();
  v1 = sub_1D42B6F40();
  sub_1D42E3F40((uint64_t)(v0 + 41), v1 + 16);
  sub_1D42E3F40((uint64_t)(v0 + 4), (uint64_t)(v0 + 27));
  type metadata accessor for XPCProxyDecoder();
  v2 = sub_1D42B6F40();
  sub_1D42E3F40((uint64_t)(v0 + 27), v2 + 16);
  type metadata accessor for XPCDecoder();
  inited = swift_initStackObject();
  v0[66] = inited;
  *(_QWORD *)(inited + 16) = v1;
  *(_QWORD *)(inited + 24) = v2;
  sub_1D42E2EBC((uint64_t)(v0 + 41));
  sub_1D42E2EFC(v0 + 27);
  swift_retain();
  v4 = (_QWORD *)sub_1D42E3CAC();
  v0[67] = (uint64_t)v4;
  *v4 = v0;
  v4[1] = sub_1D42DD93C;
  return sub_1D43AB6AC((uint64_t)(v0 + 35), inited);
}

uint64_t sub_1D42DD93C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_1D42B8E20();
  *v2 = *v1;
  *(_QWORD *)(v3 + 544) = v0;
  swift_task_dealloc();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D42DD98C()
{
  uint64_t v0;

  swift_release();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D42DD9B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  __int128 v6;

  v1 = *(_QWORD *)(v0 + 296);
  v6 = *(_OWORD *)(v0 + 280);
  v2 = swift_setDeallocating();
  sub_1D4376FD4(v2);
  sub_1D42E3F50();
  sub_1D42B8C84((uint64_t *)(v0 + 16));
  sub_1D42CFC14();
  v3 = *(_QWORD *)(v0 + 360);
  *(_OWORD *)v3 = v6;
  *(_QWORD *)(v3 + 16) = v1;
  v4 = (uint64_t (*)(void))sub_1D42E3DD0();
  return sub_1D42B8E40(v4);
}

uint64_t sub_1D42DDA30()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_setDeallocating();
  sub_1D4376FD4(v1);
  sub_1D42E3F50();
  sub_1D42CFC14();
  sub_1D42B8C84((uint64_t *)(v0 + 16));
  return sub_1D42E3A2C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D42DDA80()
{
  uint64_t v0;

  sub_1D42E3FF8();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D42DDAA8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[29] = a1;
  v2[30] = a2;
  v2[31] = type metadata accessor for AccessibilitySoundActions.Session();
  v2[32] = sub_1D42E3C80();
  sub_1D42B28FC(&qword_1EFE4A210);
  v2[33] = sub_1D42E3C80();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D42DDAFC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D42E39FC();
  if (qword_1EFE478B8 != -1)
    swift_once();
  sub_1D42E3B9C();
  if (v2)
  {
    if (qword_1EFE48E58 != -1)
      swift_once();
    v3 = sub_1D42E3EB4();
    if ((v5 & 1) != 0)
    {
      *(_QWORD *)(v1 + 216) = v0;
      sub_1D42E3CE4();
      sub_1D42B28FC(&qword_1EFE49BB0);
      sub_1D42E3CD4();
      sub_1D42E3E64();
      sub_1D42E3E54();
      return sub_1D42B8E40(*(uint64_t (**)(void))(v1 + 8));
    }
    else
    {
      sub_1D42E3AD8(v3, v4);
      swift_retain();
      sub_1D42B8F24();
      sub_1D42E3CA4();
      v8 = (_QWORD *)sub_1D42E3CEC();
      *(_QWORD *)(v1 + 328) = v8;
      v9 = sub_1D42E3A70(v8);
      return sub_1D42E385C(v9, v10);
    }
  }
  else
  {
    if (qword_1EFE48E80 != -1)
      swift_once();
    *(_QWORD *)(v1 + 296) = qword_1EFEA77E8;
    sub_1D42BE934();
    v7 = (_QWORD *)sub_1D42E3CAC();
    *(_QWORD *)(v1 + 304) = v7;
    sub_1D42E3D3C(v7, (uint64_t)sub_1D42DDC5C);
    return sub_1D42E3848();
  }
}

uint64_t sub_1D42DDC5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v6;

  v6 = (_QWORD *)*v4;
  v6[39] = a1;
  v6[40] = a3;
  sub_1D42E3CC4();
  if (v3)
    v6[55] = v3;
  else
    v6[43] = a2;
  sub_1D42B8EC8();
  return sub_1D42E380C();
}

uint64_t sub_1D42DDCCC()
{
  uint64_t v0;

  sub_1D42E3D68();
  if (!v0)
  {
    sub_1D42E3FA8();
    sub_1D42B8F48();
    sub_1D42BE93C();
  }
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D42DDD18()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  sub_1D42E3BD0();
  sub_1D42B28FC(&qword_1EFE4A148);
  v1 = sub_1D42E3E24();
  v4 = v0[33];
  v5 = v0[31];
  if ((_DWORD)v1)
  {
    v6 = sub_1D42E3E90(v1, v2, v3, v5);
    sub_1D42E3FB4(v6, v7, (uint64_t (*)(_QWORD))type metadata accessor for AccessibilitySoundActions.Session);
    sub_1D42E3E4C();
    sub_1D42E3E5C();
    v8 = (uint64_t (*)(void))sub_1D42E3DD0();
  }
  else
  {
    sub_1D42E3EF8(v1, v2, v3, v5);
    sub_1D42D7018(v4, &qword_1EFE4A210);
    sub_1D42E2DD0();
    sub_1D42B6D0C();
    sub_1D42E3BB8();
    sub_1D42B5400((uint64_t)(v0 + 18));
    sub_1D42E3E4C();
    sub_1D42E3E5C();
    v8 = (uint64_t (*)(void))v0[1];
  }
  return sub_1D42B8E40(v8);
}

uint64_t sub_1D42DDDD8()
{
  _QWORD *v0;
  id v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  sub_1D42E39FC();
  v1 = objc_msgSend((id)sub_1D42E3F64(), sel_remoteObjectProxy);
  sub_1D42E3BAC();
  sub_1D42E3CB4();
  sub_1D42B28FC(&qword_1EFE4A128);
  sub_1D42E39D0();
  v0[44] = v0[28];
  v2 = (_QWORD *)sub_1D42B6F40();
  v0[45] = v2;
  sub_1D42E3D08(v2);
  sub_1D42E38AC();
  sub_1D42E3CDC();
  v3 = (_QWORD *)sub_1D42E3CBC();
  v0[46] = v3;
  *v3 = v0;
  v3[1] = sub_1D42DDE90;
  v4 = sub_1D42E3AEC((uint64_t)&unk_1EFE4A218);
  return sub_1D42E3820(v4, v5, v6, v7, v8);
}

uint64_t sub_1D42DDE90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D42E3D14();
  if (!v1)
  {
    *(_QWORD *)(v3 + 384) = v0;
    *(_QWORD *)(v3 + 392) = v2;
  }
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D42DDEDC()
{
  uint64_t v0;
  int8x16_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int8x16_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);

  sub_1D42E3DA8();
  sub_1D42CFC14();
  sub_1D42E3CCC();
  v1 = (int8x16_t *)sub_1D42B6F40();
  sub_1D42E3DF4(v1, v2, v3, v4, v5, v6, v7, v8, v9);
  sub_1D42CFC14();
  sub_1D42BE998();
  v10 = (_QWORD *)sub_1D42E3968();
  *(_QWORD *)(v0 + 408) = v10;
  v11 = sub_1D42E3A10(v10);
  return sub_1D42E393C(v11, v12, v13);
}

uint64_t sub_1D42DDF50()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  sub_1D42E3D88();
  if (v1)
  {
    sub_1D42B8EC8();
    return sub_1D42E380C();
  }
  else
  {
    v3 = (_QWORD *)sub_1D42E3A4C();
    *(_QWORD *)(v0 + 424) = v3;
    v4 = sub_1D42E3F28(v3);
    return sub_1D42E3CFC(v4, v5, v6);
  }
}

uint64_t sub_1D42DDFB4()
{
  void *v0;
  uint64_t v1;

  sub_1D42E3F80();
  sub_1D42E3BC4();
  sub_1D42B70A8();

  *(_QWORD *)(v1 + 440) = *(_QWORD *)(v1 + 376);
  sub_1D42B8EC8();
  return sub_1D42E380C();
}

uint64_t sub_1D42DDFFC()
{
  uint64_t v0;

  sub_1D42E3D48();
  if (!v0)
    sub_1D42E3F78();
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D42DE040()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  v0 = sub_1D42E3F18();
  sub_1D42E3FD4(v0, v1, (uint64_t (*)(_QWORD))type metadata accessor for AccessibilitySoundActions.Session);
  sub_1D42E3E4C();
  sub_1D42E3E5C();
  v2 = (uint64_t (*)(void))sub_1D42E3DD0();
  return sub_1D42E39E4(v2);
}

uint64_t sub_1D42DE078(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 240) = a1;
  return sub_1D42E39F0();
}

uint64_t sub_1D42DE088()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D42E39FC();
  if (qword_1EFE478B8 != -1)
    swift_once();
  sub_1D42E3B9C();
  if (v1)
  {
    if (qword_1EFE48E58 != -1)
      swift_once();
    v2 = sub_1D42E3B14();
    if ((v4 & 1) != 0)
    {
      sub_1D42E3B50();
      sub_1D42B28FC(&qword_1EFE49BB0);
      sub_1D42E3CD4();
      return sub_1D42E39BC(*(uint64_t (**)(void))(v0 + 8));
    }
    else
    {
      sub_1D42E3AD8(v2, v3);
      swift_retain();
      sub_1D42B8F24();
      sub_1D42E3CA4();
      v7 = sub_1D42E3CEC();
      v8 = (_QWORD *)sub_1D42E3E78(v7);
      v9 = sub_1D42E3A70(v8);
      return sub_1D42E385C(v9, v10);
    }
  }
  else
  {
    if (qword_1EFE48E80 != -1)
      swift_once();
    *(_QWORD *)(v0 + 272) = qword_1EFEA77E8;
    sub_1D42BE934();
    v6 = (_QWORD *)sub_1D42E3CAC();
    *(_QWORD *)(v0 + 280) = v6;
    sub_1D42E3D3C(v6, (uint64_t)sub_1D42DE1CC);
    return sub_1D42E3848();
  }
}

uint64_t sub_1D42DE1CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D42E38C8(a1, a2, a3);
  if (v4)
    *(_QWORD *)(v5 + 424) = v4;
  else
    *(_QWORD *)(v5 + 320) = v3;
  sub_1D42B8EC8();
  return sub_1D42E380C();
}

uint64_t sub_1D42DE218()
{
  uint64_t v0;

  sub_1D42E399C();
  if (!v0)
  {
    sub_1D42E3C74();
    sub_1D42B8F48();
    sub_1D42BE93C();
  }
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D42DE264()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t (*v3)(void);

  sub_1D42E3AA0();
  sub_1D42B28FC(&qword_1EFE4A148);
  if (sub_1D42E3B30())
  {
    v0 = sub_1D42E3B7C();
    return sub_1D42E3A3C(v0, v1);
  }
  else
  {
    sub_1D42E2DD0();
    sub_1D42B6D0C();
    sub_1D42E3BB8();
    v3 = (uint64_t (*)(void))sub_1D42E3B60();
    return sub_1D42E3A2C(v3);
  }
}

uint64_t sub_1D42DE2D0()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  sub_1D42E39FC();
  v1 = objc_msgSend((id)sub_1D42E3C08(), sel_remoteObjectProxy);
  sub_1D42E3BAC();
  sub_1D42E3CB4();
  sub_1D42B28FC(&qword_1EFE4A128);
  sub_1D42E39D0();
  sub_1D42E3DE8();
  v2 = (_QWORD *)sub_1D42B6F40();
  sub_1D42E3C1C(v2);
  sub_1D42E38AC();
  sub_1D42E3CDC();
  v3 = (_QWORD *)sub_1D42E3CBC();
  *(_QWORD *)(v0 + 344) = v3;
  sub_1D42E3C94(v3, (uint64_t)sub_1D42DE374);
  v4 = sub_1D42E3AEC((uint64_t)&unk_1EFE4A1D8);
  return sub_1D42E3820(v4, v5, v6, v7, v8);
}

uint64_t sub_1D42DE374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D42E3914();
  if (!v1)
  {
    *(_QWORD *)(v3 + 360) = v0;
    *(_QWORD *)(v3 + 368) = v2;
  }
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D42DE3C0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1D42E3C44();
  sub_1D42E3A88();
  sub_1D42CFC14();
  sub_1D42E3CCC();
  v0 = sub_1D42B6F40();
  sub_1D42E3BF8(v0);
  sub_1D42CFC14();
  sub_1D42BE998();
  v1 = sub_1D42E3968();
  v2 = (_QWORD *)sub_1D42E3E6C(v1);
  v3 = sub_1D42E3A10(v2);
  return sub_1D42E3894(v3, v4, v5);
}

uint64_t sub_1D42DE424()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1D42E397C();
  if (v1)
  {
    sub_1D42B8EC8();
    return sub_1D42E380C();
  }
  else
  {
    v3 = (_QWORD *)sub_1D42E3A4C();
    *(_QWORD *)(v0 + 400) = v3;
    v4 = sub_1D42E3C30(v3, (uint64_t)sub_1D42DE4C8);
    return sub_1D42E3AB8(v4, v5);
  }
}

uint64_t sub_1D42DE484()
{
  void *v0;

  sub_1D42E3C68();
  sub_1D42E3BC4();
  sub_1D42B70A8();

  sub_1D42E3DDC();
  sub_1D42B8EC8();
  return sub_1D42E380C();
}

uint64_t sub_1D42DE4C8()
{
  uint64_t v0;

  sub_1D42E3948();
  if (!v0)
    sub_1D42E3C5C();
  sub_1D42B8EC8();
  return sub_1D42E380C();
}

uint64_t sub_1D42DE514(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 240) = a1;
  return sub_1D42E39F0();
}

uint64_t sub_1D42DE524()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D42E39FC();
  if (qword_1EFE478B8 != -1)
    swift_once();
  sub_1D42E3B9C();
  if (v1)
  {
    if (qword_1EFE48E58 != -1)
      swift_once();
    v2 = sub_1D42E3B14();
    if ((v4 & 1) != 0)
    {
      sub_1D42E3B50();
      sub_1D42B28FC(&qword_1EFE49BB0);
      sub_1D42E3CD4();
      return sub_1D42E39BC(*(uint64_t (**)(void))(v0 + 8));
    }
    else
    {
      sub_1D42E3AD8(v2, v3);
      swift_retain();
      sub_1D42B8F24();
      sub_1D42E3CA4();
      v7 = sub_1D42E3CEC();
      v8 = (_QWORD *)sub_1D42E3E78(v7);
      v9 = sub_1D42E3A70(v8);
      return sub_1D42E385C(v9, v10);
    }
  }
  else
  {
    if (qword_1EFE48E80 != -1)
      swift_once();
    *(_QWORD *)(v0 + 272) = qword_1EFEA77E8;
    sub_1D42BE934();
    v6 = (_QWORD *)sub_1D42E3CAC();
    *(_QWORD *)(v0 + 280) = v6;
    sub_1D42E3D3C(v6, (uint64_t)sub_1D42DE668);
    return sub_1D42E3848();
  }
}

uint64_t sub_1D42DE668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D42E38C8(a1, a2, a3);
  if (v4)
    *(_QWORD *)(v5 + 424) = v4;
  else
    *(_QWORD *)(v5 + 320) = v3;
  sub_1D42B8EC8();
  return sub_1D42E380C();
}

uint64_t sub_1D42DE6B4()
{
  uint64_t v0;

  sub_1D42E399C();
  if (!v0)
  {
    sub_1D42E3C74();
    sub_1D42B8F48();
    sub_1D42BE93C();
  }
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D42DE700()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t (*v3)(void);

  sub_1D42E3AA0();
  sub_1D42B28FC(&qword_1EFE4A148);
  if (sub_1D42E3B30())
  {
    v0 = sub_1D42E3B7C();
    return sub_1D42E3A3C(v0, v1);
  }
  else
  {
    sub_1D42E2DD0();
    sub_1D42B6D0C();
    sub_1D42E3BB8();
    v3 = (uint64_t (*)(void))sub_1D42E3B60();
    return sub_1D42E3A2C(v3);
  }
}

uint64_t sub_1D42DE76C()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  sub_1D42E39FC();
  v1 = objc_msgSend((id)sub_1D42E3C08(), sel_remoteObjectProxy);
  sub_1D42E3BAC();
  sub_1D42E3CB4();
  sub_1D42B28FC(&qword_1EFE4A128);
  sub_1D42E39D0();
  sub_1D42E3DE8();
  v2 = (_QWORD *)sub_1D42B6F40();
  sub_1D42E3C1C(v2);
  sub_1D42E38AC();
  sub_1D42E3CDC();
  v3 = (_QWORD *)sub_1D42E3CBC();
  *(_QWORD *)(v0 + 344) = v3;
  sub_1D42E3C94(v3, (uint64_t)sub_1D42DE810);
  v4 = sub_1D42E3AEC((uint64_t)&unk_1EFE4A1C0);
  return sub_1D42E3820(v4, v5, v6, v7, v8);
}

uint64_t sub_1D42DE810()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D42E3914();
  if (!v1)
  {
    *(_QWORD *)(v3 + 360) = v0;
    *(_QWORD *)(v3 + 368) = v2;
  }
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D42DE85C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1D42E3C44();
  sub_1D42E3A88();
  sub_1D42CFC14();
  sub_1D42E3CCC();
  v0 = sub_1D42B6F40();
  sub_1D42E3BF8(v0);
  sub_1D42CFC14();
  sub_1D42BE998();
  v1 = sub_1D42E3968();
  v2 = (_QWORD *)sub_1D42E3E6C(v1);
  v3 = sub_1D42E3A10(v2);
  return sub_1D42E3894(v3, v4, v5);
}

uint64_t sub_1D42DE8C0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1D42E397C();
  if (v1)
  {
    sub_1D42B8EC8();
    return sub_1D42E380C();
  }
  else
  {
    v3 = (_QWORD *)sub_1D42E3A4C();
    *(_QWORD *)(v0 + 400) = v3;
    v4 = sub_1D42E3C30(v3, (uint64_t)sub_1D42DE4C8);
    return sub_1D42E3AB8(v4, v5);
  }
}

uint64_t sub_1D42DE920(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 240) = a1;
  return sub_1D42E39F0();
}

uint64_t sub_1D42DE930()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D42E39FC();
  if (qword_1EFE478B8 != -1)
    swift_once();
  sub_1D42E3B9C();
  if (v1)
  {
    if (qword_1EFE48E58 != -1)
      swift_once();
    v2 = sub_1D42E3B14();
    if ((v4 & 1) != 0)
    {
      sub_1D42E3B50();
      sub_1D42B28FC(&qword_1EFE49BB0);
      sub_1D42E3CD4();
      return sub_1D42E39BC(*(uint64_t (**)(void))(v0 + 8));
    }
    else
    {
      sub_1D42E3AD8(v2, v3);
      swift_retain();
      sub_1D42B8F24();
      sub_1D42E3CA4();
      v7 = sub_1D42E3CEC();
      v8 = (_QWORD *)sub_1D42E3E78(v7);
      v9 = sub_1D42E3A70(v8);
      return sub_1D42E385C(v9, v10);
    }
  }
  else
  {
    if (qword_1EFE48E80 != -1)
      swift_once();
    *(_QWORD *)(v0 + 272) = qword_1EFEA77E8;
    sub_1D42BE934();
    v6 = (_QWORD *)sub_1D42E3CAC();
    *(_QWORD *)(v0 + 280) = v6;
    sub_1D42E3D3C(v6, (uint64_t)sub_1D42DEA74);
    return sub_1D42E3848();
  }
}

uint64_t sub_1D42DEA74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D42E38C8(a1, a2, a3);
  if (v4)
    *(_QWORD *)(v5 + 424) = v4;
  else
    *(_QWORD *)(v5 + 320) = v3;
  sub_1D42B8EC8();
  return sub_1D42E380C();
}

uint64_t sub_1D42DEAC0()
{
  uint64_t v0;

  sub_1D42E399C();
  if (!v0)
  {
    sub_1D42E3C74();
    sub_1D42B8F48();
    sub_1D42BE93C();
  }
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D42DEB0C()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t (*v3)(void);

  sub_1D42E3AA0();
  sub_1D42B28FC(&qword_1EFE4A148);
  if (sub_1D42E3B30())
  {
    v0 = sub_1D42E3B7C();
    return sub_1D42E3A3C(v0, v1);
  }
  else
  {
    sub_1D42E2DD0();
    sub_1D42B6D0C();
    sub_1D42E3BB8();
    v3 = (uint64_t (*)(void))sub_1D42E3B60();
    return sub_1D42E3A2C(v3);
  }
}

uint64_t sub_1D42DEB78()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  sub_1D42E39FC();
  v1 = objc_msgSend((id)sub_1D42E3C08(), sel_remoteObjectProxy);
  sub_1D42E3BAC();
  sub_1D42E3CB4();
  sub_1D42B28FC(&qword_1EFE4A128);
  sub_1D42E39D0();
  sub_1D42E3DE8();
  v2 = (_QWORD *)sub_1D42B6F40();
  sub_1D42E3C1C(v2);
  sub_1D42E38AC();
  sub_1D42E3CDC();
  v3 = (_QWORD *)sub_1D42E3CBC();
  *(_QWORD *)(v0 + 344) = v3;
  sub_1D42E3C94(v3, (uint64_t)sub_1D42DEC1C);
  v4 = sub_1D42E3AEC((uint64_t)&unk_1EFE4A1A8);
  return sub_1D42E3820(v4, v5, v6, v7, v8);
}

uint64_t sub_1D42DEC1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D42E3914();
  if (!v1)
  {
    *(_QWORD *)(v3 + 360) = v0;
    *(_QWORD *)(v3 + 368) = v2;
  }
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D42DEC68()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1D42E3C44();
  sub_1D42E3A88();
  sub_1D42CFC14();
  sub_1D42E3CCC();
  v0 = sub_1D42B6F40();
  sub_1D42E3BF8(v0);
  sub_1D42CFC14();
  sub_1D42BE998();
  v1 = sub_1D42E3968();
  v2 = (_QWORD *)sub_1D42E3E6C(v1);
  v3 = sub_1D42E3A10(v2);
  return sub_1D42E3894(v3, v4, v5);
}

uint64_t sub_1D42DECCC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1D42E397C();
  if (v1)
  {
    sub_1D42B8EC8();
    return sub_1D42E380C();
  }
  else
  {
    v3 = (_QWORD *)sub_1D42E3A4C();
    *(_QWORD *)(v0 + 400) = v3;
    v4 = sub_1D42E3C30(v3, (uint64_t)sub_1D42DE4C8);
    return sub_1D42E3AB8(v4, v5);
  }
}

uint64_t sub_1D42DED2C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 240) = a1;
  return sub_1D42E39F0();
}

uint64_t sub_1D42DED3C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D42E39FC();
  if (qword_1EFE478B8 != -1)
    swift_once();
  sub_1D42E3B9C();
  if (v1)
  {
    if (qword_1EFE48E58 != -1)
      swift_once();
    v2 = sub_1D42E3B14();
    if ((v4 & 1) != 0)
    {
      sub_1D42E3B50();
      sub_1D42B28FC(&qword_1EFE49BB0);
      sub_1D42E3CD4();
      return sub_1D42E39BC(*(uint64_t (**)(void))(v0 + 8));
    }
    else
    {
      sub_1D42E3AD8(v2, v3);
      swift_retain();
      sub_1D42B8F24();
      sub_1D42E3CA4();
      v7 = sub_1D42E3CEC();
      v8 = (_QWORD *)sub_1D42E3E78(v7);
      v9 = sub_1D42E3A70(v8);
      return sub_1D42E385C(v9, v10);
    }
  }
  else
  {
    if (qword_1EFE48E80 != -1)
      swift_once();
    *(_QWORD *)(v0 + 272) = qword_1EFEA77E8;
    sub_1D42BE934();
    v6 = (_QWORD *)sub_1D42E3CAC();
    *(_QWORD *)(v0 + 280) = v6;
    sub_1D42E3D3C(v6, (uint64_t)sub_1D42DEE80);
    return sub_1D42E3848();
  }
}

uint64_t sub_1D42DEE80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D42E38C8(a1, a2, a3);
  if (v4)
    *(_QWORD *)(v5 + 424) = v4;
  else
    *(_QWORD *)(v5 + 320) = v3;
  sub_1D42B8EC8();
  return sub_1D42E380C();
}

uint64_t sub_1D42DEECC()
{
  uint64_t v0;

  sub_1D42E399C();
  if (!v0)
  {
    sub_1D42E3C74();
    sub_1D42B8F48();
    sub_1D42BE93C();
  }
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D42DEF18()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t (*v3)(void);

  sub_1D42E3AA0();
  sub_1D42B28FC(&qword_1EFE4A148);
  if (sub_1D42E3B30())
  {
    v0 = sub_1D42E3B7C();
    return sub_1D42E3A3C(v0, v1);
  }
  else
  {
    sub_1D42E2DD0();
    sub_1D42B6D0C();
    sub_1D42E3BB8();
    v3 = (uint64_t (*)(void))sub_1D42E3B60();
    return sub_1D42E3A2C(v3);
  }
}

uint64_t sub_1D42DEF84()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  sub_1D42E39FC();
  v1 = objc_msgSend((id)sub_1D42E3C08(), sel_remoteObjectProxy);
  sub_1D42E3BAC();
  sub_1D42E3CB4();
  sub_1D42B28FC(&qword_1EFE4A128);
  sub_1D42E39D0();
  sub_1D42E3DE8();
  v2 = (_QWORD *)sub_1D42B6F40();
  sub_1D42E3C1C(v2);
  sub_1D42E38AC();
  sub_1D42E3CDC();
  v3 = (_QWORD *)sub_1D42E3CBC();
  *(_QWORD *)(v0 + 344) = v3;
  sub_1D42E3C94(v3, (uint64_t)sub_1D42DF028);
  v4 = sub_1D42E3AEC((uint64_t)&unk_1EFE4A190);
  return sub_1D42E3820(v4, v5, v6, v7, v8);
}

uint64_t sub_1D42DF028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D42E3914();
  if (!v1)
  {
    *(_QWORD *)(v3 + 360) = v0;
    *(_QWORD *)(v3 + 368) = v2;
  }
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D42DF074()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1D42E3C44();
  sub_1D42E3A88();
  sub_1D42CFC14();
  sub_1D42E3CCC();
  v0 = sub_1D42B6F40();
  sub_1D42E3BF8(v0);
  sub_1D42CFC14();
  sub_1D42BE998();
  v1 = sub_1D42E3968();
  v2 = (_QWORD *)sub_1D42E3E6C(v1);
  v3 = sub_1D42E3A10(v2);
  return sub_1D42E3894(v3, v4, v5);
}

uint64_t sub_1D42DF0D8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1D42E397C();
  if (v1)
  {
    sub_1D42B8EC8();
    return sub_1D42E380C();
  }
  else
  {
    v3 = (_QWORD *)sub_1D42E3A4C();
    *(_QWORD *)(v0 + 400) = v3;
    v4 = sub_1D42E3C30(v3, (uint64_t)sub_1D42DE4C8);
    return sub_1D42E3AB8(v4, v5);
  }
}

uint64_t sub_1D42DF138(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 240) = a1;
  return sub_1D42E39F0();
}

uint64_t sub_1D42DF148()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D42E39FC();
  if (qword_1EFE478B8 != -1)
    swift_once();
  sub_1D42E3B9C();
  if (v1)
  {
    if (qword_1EFE48E58 != -1)
      swift_once();
    v2 = sub_1D42E3B14();
    if ((v4 & 1) != 0)
    {
      sub_1D42E3B50();
      sub_1D42B28FC(&qword_1EFE49BB0);
      sub_1D42E3CD4();
      return sub_1D42E39BC(*(uint64_t (**)(void))(v0 + 8));
    }
    else
    {
      sub_1D42E3AD8(v2, v3);
      swift_retain();
      sub_1D42B8F24();
      sub_1D42E3CA4();
      v7 = sub_1D42E3CEC();
      v8 = (_QWORD *)sub_1D42E3E78(v7);
      v9 = sub_1D42E3A70(v8);
      return sub_1D42E385C(v9, v10);
    }
  }
  else
  {
    if (qword_1EFE48E80 != -1)
      swift_once();
    *(_QWORD *)(v0 + 272) = qword_1EFEA77E8;
    sub_1D42BE934();
    v6 = (_QWORD *)sub_1D42E3CAC();
    *(_QWORD *)(v0 + 280) = v6;
    sub_1D42E3D3C(v6, (uint64_t)sub_1D42DF28C);
    return sub_1D42E3848();
  }
}

uint64_t sub_1D42DF28C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D42E38C8(a1, a2, a3);
  if (v4)
    *(_QWORD *)(v5 + 424) = v4;
  else
    *(_QWORD *)(v5 + 320) = v3;
  sub_1D42B8EC8();
  return sub_1D42E380C();
}

uint64_t sub_1D42DF2D8()
{
  uint64_t v0;

  sub_1D42E399C();
  if (!v0)
  {
    sub_1D42E3C74();
    sub_1D42B8F48();
    sub_1D42BE93C();
  }
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D42DF324()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t (*v3)(void);

  sub_1D42E3AA0();
  sub_1D42B28FC(&qword_1EFE4A148);
  if (sub_1D42E3B30())
  {
    v0 = sub_1D42E3B7C();
    return sub_1D42E3A3C(v0, v1);
  }
  else
  {
    sub_1D42E2DD0();
    sub_1D42B6D0C();
    sub_1D42E3BB8();
    v3 = (uint64_t (*)(void))sub_1D42E3B60();
    return sub_1D42E3A2C(v3);
  }
}

uint64_t sub_1D42DF390()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  sub_1D42E39FC();
  v1 = objc_msgSend((id)sub_1D42E3C08(), sel_remoteObjectProxy);
  sub_1D42E3BAC();
  sub_1D42E3CB4();
  sub_1D42B28FC(&qword_1EFE4A128);
  sub_1D42E39D0();
  sub_1D42E3DE8();
  v2 = (_QWORD *)sub_1D42B6F40();
  sub_1D42E3C1C(v2);
  sub_1D42E38AC();
  sub_1D42E3CDC();
  v3 = (_QWORD *)sub_1D42E3CBC();
  *(_QWORD *)(v0 + 344) = v3;
  sub_1D42E3C94(v3, (uint64_t)sub_1D42DF434);
  v4 = sub_1D42E3AEC((uint64_t)&unk_1EFE4A178);
  return sub_1D42E3820(v4, v5, v6, v7, v8);
}

uint64_t sub_1D42DF434()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D42E3914();
  if (!v1)
  {
    *(_QWORD *)(v3 + 360) = v0;
    *(_QWORD *)(v3 + 368) = v2;
  }
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D42DF480()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1D42E3C44();
  sub_1D42E3A88();
  sub_1D42CFC14();
  sub_1D42E3CCC();
  v0 = sub_1D42B6F40();
  sub_1D42E3BF8(v0);
  sub_1D42CFC14();
  sub_1D42BE998();
  v1 = sub_1D42E3968();
  v2 = (_QWORD *)sub_1D42E3E6C(v1);
  v3 = sub_1D42E3A10(v2);
  return sub_1D42E3894(v3, v4, v5);
}

uint64_t sub_1D42DF4E4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1D42E397C();
  if (v1)
  {
    sub_1D42B8EC8();
    return sub_1D42E380C();
  }
  else
  {
    v3 = (_QWORD *)sub_1D42E3A4C();
    *(_QWORD *)(v0 + 400) = v3;
    v4 = sub_1D42E3C30(v3, (uint64_t)sub_1D42DE4C8);
    return sub_1D42E3AB8(v4, v5);
  }
}

uint64_t sub_1D42DF544(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 240) = a1;
  return sub_1D42E39F0();
}

uint64_t sub_1D42DF554()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D42E39FC();
  if (qword_1EFE478B8 != -1)
    swift_once();
  sub_1D42E3B9C();
  if (v1)
  {
    if (qword_1EFE48E58 != -1)
      swift_once();
    v2 = sub_1D42E3B14();
    if ((v4 & 1) != 0)
    {
      sub_1D42E3B50();
      sub_1D42B28FC(&qword_1EFE49BB0);
      sub_1D42E3CD4();
      return sub_1D42E39BC(*(uint64_t (**)(void))(v0 + 8));
    }
    else
    {
      sub_1D42E3AD8(v2, v3);
      swift_retain();
      sub_1D42B8F24();
      sub_1D42E3CA4();
      v7 = sub_1D42E3CEC();
      v8 = (_QWORD *)sub_1D42E3E78(v7);
      v9 = sub_1D42E3A70(v8);
      return sub_1D42E385C(v9, v10);
    }
  }
  else
  {
    if (qword_1EFE48E80 != -1)
      swift_once();
    *(_QWORD *)(v0 + 272) = qword_1EFEA77E8;
    sub_1D42BE934();
    v6 = (_QWORD *)sub_1D42E3CAC();
    *(_QWORD *)(v0 + 280) = v6;
    sub_1D42E3D3C(v6, (uint64_t)sub_1D42DF698);
    return sub_1D42E3848();
  }
}

uint64_t sub_1D42DF698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D42E38C8(a1, a2, a3);
  if (v4)
    *(_QWORD *)(v5 + 424) = v4;
  else
    *(_QWORD *)(v5 + 320) = v3;
  sub_1D42B8EC8();
  return sub_1D42E380C();
}

uint64_t sub_1D42DF6E4()
{
  uint64_t v0;

  sub_1D42E399C();
  if (!v0)
  {
    sub_1D42E3C74();
    sub_1D42B8F48();
    sub_1D42BE93C();
  }
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D42DF730()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t (*v3)(void);

  sub_1D42E3AA0();
  sub_1D42B28FC(&qword_1EFE4A148);
  if (sub_1D42E3B30())
  {
    v0 = sub_1D42E3B7C();
    return sub_1D42E3A3C(v0, v1);
  }
  else
  {
    sub_1D42E2DD0();
    sub_1D42B6D0C();
    sub_1D42E3BB8();
    v3 = (uint64_t (*)(void))sub_1D42E3B60();
    return sub_1D42E3A2C(v3);
  }
}

uint64_t sub_1D42DF79C()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  sub_1D42E39FC();
  v1 = objc_msgSend((id)sub_1D42E3C08(), sel_remoteObjectProxy);
  sub_1D42E3BAC();
  sub_1D42E3CB4();
  sub_1D42B28FC(&qword_1EFE4A128);
  sub_1D42E39D0();
  sub_1D42E3DE8();
  v2 = (_QWORD *)sub_1D42B6F40();
  sub_1D42E3C1C(v2);
  sub_1D42E38AC();
  sub_1D42E3CDC();
  v3 = (_QWORD *)sub_1D42E3CBC();
  *(_QWORD *)(v0 + 344) = v3;
  sub_1D42E3C94(v3, (uint64_t)sub_1D42DF840);
  v4 = sub_1D42E3AEC((uint64_t)&unk_1EFE4A160);
  return sub_1D42E3820(v4, v5, v6, v7, v8);
}

uint64_t sub_1D42DF840()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D42E3914();
  if (!v1)
  {
    *(_QWORD *)(v3 + 360) = v0;
    *(_QWORD *)(v3 + 368) = v2;
  }
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D42DF88C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1D42E3C44();
  sub_1D42E3A88();
  sub_1D42CFC14();
  sub_1D42E3CCC();
  v0 = sub_1D42B6F40();
  sub_1D42E3BF8(v0);
  sub_1D42CFC14();
  sub_1D42BE998();
  v1 = sub_1D42E3968();
  v2 = (_QWORD *)sub_1D42E3E6C(v1);
  v3 = sub_1D42E3A10(v2);
  return sub_1D42E3894(v3, v4, v5);
}

uint64_t sub_1D42DF8F0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1D42E397C();
  if (v1)
  {
    sub_1D42B8EC8();
    return sub_1D42E380C();
  }
  else
  {
    v3 = (_QWORD *)sub_1D42E3A4C();
    *(_QWORD *)(v0 + 400) = v3;
    v4 = sub_1D42E3C30(v3, (uint64_t)sub_1D42DE4C8);
    return sub_1D42E3AB8(v4, v5);
  }
}

uint64_t sub_1D42DF950(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 240) = a1;
  return sub_1D42E39F0();
}

uint64_t sub_1D42DF960()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D42E39FC();
  if (qword_1EFE478B8 != -1)
    swift_once();
  sub_1D42E3B9C();
  if (v1)
  {
    if (qword_1EFE48E58 != -1)
      swift_once();
    v2 = sub_1D42E3B14();
    if ((v4 & 1) != 0)
    {
      sub_1D42E3B50();
      sub_1D42B28FC(&qword_1EFE49BB0);
      sub_1D42E3CD4();
      return sub_1D42E39BC(*(uint64_t (**)(void))(v0 + 8));
    }
    else
    {
      sub_1D42E3AD8(v2, v3);
      swift_retain();
      sub_1D42B8F24();
      sub_1D42E3CA4();
      v7 = sub_1D42E3CEC();
      v8 = (_QWORD *)sub_1D42E3E78(v7);
      v9 = sub_1D42E3A70(v8);
      return sub_1D42E385C(v9, v10);
    }
  }
  else
  {
    if (qword_1EFE48E80 != -1)
      swift_once();
    *(_QWORD *)(v0 + 272) = qword_1EFEA77E8;
    sub_1D42BE934();
    v6 = (_QWORD *)sub_1D42E3CAC();
    *(_QWORD *)(v0 + 280) = v6;
    sub_1D42E3D3C(v6, (uint64_t)sub_1D42DFAA4);
    return sub_1D42E3848();
  }
}

uint64_t sub_1D42DFAA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D42E38C8(a1, a2, a3);
  if (v4)
    *(_QWORD *)(v5 + 424) = v4;
  else
    *(_QWORD *)(v5 + 320) = v3;
  sub_1D42B8EC8();
  return sub_1D42E380C();
}

uint64_t sub_1D42DFAF0()
{
  uint64_t v0;

  sub_1D42E399C();
  if (!v0)
  {
    sub_1D42E3C74();
    sub_1D42B8F48();
    sub_1D42BE93C();
  }
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D42DFB3C()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t (*v3)(void);

  sub_1D42E3AA0();
  sub_1D42B28FC(&qword_1EFE4A148);
  if (sub_1D42E3B30())
  {
    v0 = sub_1D42E3B7C();
    return sub_1D42E3A3C(v0, v1);
  }
  else
  {
    sub_1D42E2DD0();
    sub_1D42B6D0C();
    sub_1D42E3BB8();
    v3 = (uint64_t (*)(void))sub_1D42E3B60();
    return sub_1D42E3A2C(v3);
  }
}

uint64_t sub_1D42DFBA8()
{
  uint64_t v0;

  swift_release();
  sub_1D42B8F48();
  sub_1D42BE93C();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D42DFBE8()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  sub_1D42E39FC();
  v1 = objc_msgSend((id)sub_1D42E3C08(), sel_remoteObjectProxy);
  sub_1D42E3BAC();
  sub_1D42E3CB4();
  sub_1D42B28FC(&qword_1EFE4A128);
  sub_1D42E39D0();
  sub_1D42E3DE8();
  v2 = (_QWORD *)sub_1D42B6F40();
  sub_1D42E3C1C(v2);
  sub_1D42E38AC();
  sub_1D42E3CDC();
  v3 = (_QWORD *)sub_1D42E3CBC();
  *(_QWORD *)(v0 + 344) = v3;
  sub_1D42E3C94(v3, (uint64_t)sub_1D42DFC8C);
  v4 = sub_1D42E3AEC((uint64_t)&unk_1EFE4A130);
  return sub_1D42E3820(v4, v5, v6, v7, v8);
}

uint64_t sub_1D42DFC8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D42E3914();
  if (!v1)
  {
    *(_QWORD *)(v3 + 360) = v0;
    *(_QWORD *)(v3 + 368) = v2;
  }
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D42DFCD8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1D42E3C44();
  sub_1D42E3A88();
  sub_1D42CFC14();
  sub_1D42E3CCC();
  v0 = sub_1D42B6F40();
  sub_1D42E3BF8(v0);
  sub_1D42CFC14();
  sub_1D42BE998();
  v1 = sub_1D42E3968();
  v2 = (_QWORD *)sub_1D42E3E6C(v1);
  v3 = sub_1D42E3A10(v2);
  return sub_1D42E3894(v3, v4, v5);
}

uint64_t sub_1D42DFD3C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1D42E397C();
  if (v1)
  {
    sub_1D42B8EC8();
    return sub_1D42E380C();
  }
  else
  {
    v3 = (_QWORD *)sub_1D42E3A4C();
    *(_QWORD *)(v0 + 400) = v3;
    v4 = sub_1D42E3C30(v3, (uint64_t)sub_1D42DFDE0);
    return sub_1D42E3AB8(v4, v5);
  }
}

uint64_t sub_1D42DFD9C()
{
  void *v0;

  sub_1D42E3C68();
  sub_1D42E3BC4();
  sub_1D42B70A8();

  sub_1D42E3DDC();
  sub_1D42B8EC8();
  return sub_1D42E380C();
}

uint64_t sub_1D42DFDE0()
{
  uint64_t v0;

  sub_1D42E3948();
  if (!v0)
    sub_1D42E3C5C();
  sub_1D42B8EC8();
  return sub_1D42E380C();
}

uint64_t sub_1D42DFE2C()
{
  uint64_t v0;

  sub_1D42E3F5C();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D42DFE54()
{
  uint64_t v0;

  sub_1D42E3F5C();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 416));
}

uint64_t sub_1D42DFE88()
{
  uint64_t v0;

  sub_1D42E3F5C();
  sub_1D42E3FCC();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D42DFEB8()
{
  uint64_t v0;

  swift_release();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D42DFEE4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[29] = a1;
  v2[30] = a2;
  v2[31] = type metadata accessor for AccessibilitySoundRecognition.Session(0);
  v2[32] = sub_1D42E3C80();
  sub_1D42B28FC(&qword_1EFE4A1F0);
  v2[33] = sub_1D42E3C80();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D42DFF38()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D42E39FC();
  if (qword_1EFE478B8 != -1)
    swift_once();
  sub_1D42E3B9C();
  if (v2)
  {
    if (qword_1EFE48E58 != -1)
      swift_once();
    v3 = sub_1D42E3EB4();
    if ((v5 & 1) != 0)
    {
      *(_QWORD *)(v1 + 216) = v0;
      sub_1D42E3CE4();
      sub_1D42B28FC(&qword_1EFE49BB0);
      sub_1D42E3CD4();
      sub_1D42E3E64();
      sub_1D42E3E54();
      return sub_1D42B8E40(*(uint64_t (**)(void))(v1 + 8));
    }
    else
    {
      sub_1D42E3AD8(v3, v4);
      swift_retain();
      sub_1D42B8F24();
      sub_1D42E3CA4();
      v8 = (_QWORD *)sub_1D42E3CEC();
      *(_QWORD *)(v1 + 328) = v8;
      v9 = sub_1D42E3A70(v8);
      return sub_1D42E385C(v9, v10);
    }
  }
  else
  {
    if (qword_1EFE48E80 != -1)
      swift_once();
    *(_QWORD *)(v1 + 296) = qword_1EFEA77E8;
    sub_1D42BE934();
    v7 = (_QWORD *)sub_1D42E3CAC();
    *(_QWORD *)(v1 + 304) = v7;
    sub_1D42E3D3C(v7, (uint64_t)sub_1D42E0098);
    return sub_1D42E3848();
  }
}

uint64_t sub_1D42E0098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v6;

  v6 = (_QWORD *)*v4;
  v6[39] = a1;
  v6[40] = a3;
  sub_1D42E3CC4();
  if (v3)
    v6[55] = v3;
  else
    v6[43] = a2;
  sub_1D42B8EC8();
  return sub_1D42E380C();
}

uint64_t sub_1D42E0108()
{
  uint64_t v0;

  sub_1D42E3D68();
  if (!v0)
  {
    sub_1D42E3FA8();
    sub_1D42B8F48();
    sub_1D42BE93C();
  }
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D42E0154()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  sub_1D42E3BD0();
  sub_1D42B28FC(&qword_1EFE4A148);
  v1 = sub_1D42E3E24();
  v4 = v0[33];
  v5 = v0[31];
  if ((_DWORD)v1)
  {
    v6 = sub_1D42E3E90(v1, v2, v3, v5);
    sub_1D42E3FB4(v6, v7, type metadata accessor for AccessibilitySoundRecognition.Session);
    sub_1D42E3E4C();
    sub_1D42E3E5C();
    v8 = (uint64_t (*)(void))sub_1D42E3DD0();
  }
  else
  {
    sub_1D42E3EF8(v1, v2, v3, v5);
    sub_1D42D7018(v4, &qword_1EFE4A1F0);
    sub_1D42E2DD0();
    sub_1D42B6D0C();
    sub_1D42E3BB8();
    sub_1D42B5400((uint64_t)(v0 + 18));
    sub_1D42E3E4C();
    sub_1D42E3E5C();
    v8 = (uint64_t (*)(void))v0[1];
  }
  return sub_1D42B8E40(v8);
}

uint64_t sub_1D42E0214()
{
  uint64_t v0;

  swift_release();
  sub_1D42B8F48();
  sub_1D42BE93C();
  sub_1D42E3E64();
  sub_1D42E3E54();
  return sub_1D42E39E4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D42E0254()
{
  _QWORD *v0;
  id v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  sub_1D42E39FC();
  v1 = objc_msgSend((id)sub_1D42E3F64(), sel_remoteObjectProxy);
  sub_1D42E3BAC();
  sub_1D42E3CB4();
  sub_1D42B28FC(&qword_1EFE4A128);
  sub_1D42E39D0();
  v0[44] = v0[28];
  v2 = (_QWORD *)sub_1D42B6F40();
  v0[45] = v2;
  sub_1D42E3D08(v2);
  sub_1D42E38AC();
  sub_1D42E3CDC();
  v3 = (_QWORD *)sub_1D42E3CBC();
  v0[46] = v3;
  *v3 = v0;
  v3[1] = sub_1D42E030C;
  v4 = sub_1D42E3AEC((uint64_t)&unk_1EFE4A1F8);
  return sub_1D42E3820(v4, v5, v6, v7, v8);
}

uint64_t sub_1D42E030C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D42E3D14();
  if (!v1)
  {
    *(_QWORD *)(v3 + 384) = v0;
    *(_QWORD *)(v3 + 392) = v2;
  }
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D42E0358()
{
  uint64_t v0;
  int8x16_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int8x16_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);

  sub_1D42E3DA8();
  sub_1D42CFC14();
  sub_1D42E3CCC();
  v1 = (int8x16_t *)sub_1D42B6F40();
  sub_1D42E3DF4(v1, v2, v3, v4, v5, v6, v7, v8, v9);
  sub_1D42CFC14();
  sub_1D42BE998();
  v10 = (_QWORD *)sub_1D42E3968();
  *(_QWORD *)(v0 + 408) = v10;
  v11 = sub_1D42E3A10(v10);
  return sub_1D42E393C(v11, v12, v13);
}

uint64_t sub_1D42E03CC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  sub_1D42E3D88();
  if (v1)
  {
    sub_1D42B8EC8();
    return sub_1D42E380C();
  }
  else
  {
    v3 = (_QWORD *)sub_1D42E3A4C();
    *(_QWORD *)(v0 + 424) = v3;
    v4 = sub_1D42E3F28(v3);
    return sub_1D42E3CFC(v4, v5, v6);
  }
}

uint64_t sub_1D42E0430()
{
  void *v0;
  uint64_t v1;

  sub_1D42E3F80();
  sub_1D42E3BC4();
  sub_1D42B70A8();

  *(_QWORD *)(v1 + 440) = *(_QWORD *)(v1 + 376);
  sub_1D42B8EC8();
  return sub_1D42E380C();
}

uint64_t sub_1D42E0478()
{
  uint64_t v0;

  sub_1D42E3D48();
  if (!v0)
    sub_1D42E3F78();
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D42E04BC()
{
  uint64_t v0;

  sub_1D42E3FF8();
  sub_1D42E3E64();
  sub_1D42E3E54();
  return sub_1D42E39E4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D42E04EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  v0 = sub_1D42E3F18();
  sub_1D42E3FD4(v0, v1, type metadata accessor for AccessibilitySoundRecognition.Session);
  sub_1D42E3E4C();
  sub_1D42E3E5C();
  v2 = (uint64_t (*)(void))sub_1D42E3DD0();
  return sub_1D42E39E4(v2);
}

uint64_t sub_1D42E0524()
{
  uint64_t v0;

  sub_1D42E3FF8();
  sub_1D42E3FCC();
  sub_1D42E3E64();
  sub_1D42E3E54();
  return sub_1D42E39E4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D42E055C()
{
  uint64_t v0;

  swift_release();
  sub_1D42E3E64();
  sub_1D42E3E54();
  return sub_1D42E39E4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D42E0590(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 248) = a1;
  *(_QWORD *)(v2 + 256) = a2;
  return sub_1D42E39F0();
}

uint64_t sub_1D42E05A0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  _QWORD *v6;
  _QWORD *v7;

  sub_1D42E39FC();
  if (qword_1EFE478B8 != -1)
    swift_once();
  sub_1D42E3B9C();
  if (v1)
  {
    if (qword_1EFE48E58 != -1)
      swift_once();
    v2 = qword_1EFEA7778;
    v3 = qword_1EFEA7780;
    v4 = qword_1EFEA7788;
    *(_QWORD *)(v0 + 264) = qword_1EFEA7778;
    *(_QWORD *)(v0 + 272) = v4;
    *(_QWORD *)(v0 + 280) = qword_1EFEA7790;
    if ((byte_1EFEA7798 & 1) != 0)
    {
      sub_1D42E3B50();
      sub_1D42B28FC(&qword_1EFE49BB0);
      sub_1D42E3CD4();
      return sub_1D42B8E40(*(uint64_t (**)(void))(v0 + 8));
    }
    else
    {
      sub_1D42E3AD8(v2, v3);
      swift_retain();
      sub_1D42B8F24();
      sub_1D42E3CA4();
      v7 = (_QWORD *)sub_1D42E3CEC();
      *(_QWORD *)(v0 + 320) = v7;
      *v7 = v0;
      v7[1] = sub_1D42E0778;
      return sub_1D42E385C(v0 + 144, v0 + 64);
    }
  }
  else
  {
    if (qword_1EFE48E80 != -1)
      swift_once();
    *(_QWORD *)(v0 + 288) = qword_1EFEA77E8;
    sub_1D42BE934();
    v6 = (_QWORD *)sub_1D42E3CAC();
    *(_QWORD *)(v0 + 296) = v6;
    sub_1D42E3D3C(v6, (uint64_t)sub_1D42E0714);
    return sub_1D42E3848();
  }
}

uint64_t sub_1D42E0714()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_1D42E3F94();
  v2[38] = v3;
  v2[39] = v4;
  sub_1D42E3CC4();
  if (v1)
    v2[54] = v1;
  else
    v2[42] = v0;
  sub_1D42B8EC8();
  return sub_1D42E380C();
}

uint64_t sub_1D42E0778()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_1D42E3E3C();
  sub_1D42E3E84(v2);
  *(_QWORD *)(v0 + 328) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release();
    sub_1D42B8F48();
    sub_1D42BE93C();
  }
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D42E07DC()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_1D42E3BD0();
  sub_1D42B28FC(&qword_1EFE4A148);
  if (sub_1D42E3B30())
  {
    sub_1D42B5400(v0 + 144);
    **(_QWORD **)(v0 + 248) = *(_QWORD *)(v0 + 240);
    v1 = (uint64_t (*)(void))sub_1D42E3DD0();
  }
  else
  {
    sub_1D42E2DD0();
    sub_1D42B6D0C();
    sub_1D42E3BB8();
    v1 = (uint64_t (*)(void))sub_1D42E3B60();
  }
  return sub_1D42E3A2C(v1);
}

uint64_t sub_1D42E0860()
{
  uint64_t v0;

  swift_release();
  sub_1D42B8F48();
  sub_1D42BE93C();
  return sub_1D42E39E4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D42E0898()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  sub_1D42E39FC();
  v1 = objc_msgSend(*(id *)(v0 + 304), sel_remoteObjectProxy);
  sub_1D42E3BAC();
  sub_1D42E3CB4();
  sub_1D42B28FC(&qword_1EFE4A128);
  sub_1D42E39D0();
  *(_QWORD *)(v0 + 344) = *(_QWORD *)(v0 + 232);
  v2 = (_QWORD *)sub_1D42B6F40();
  *(_QWORD *)(v0 + 352) = v2;
  sub_1D42E3D08(v2);
  sub_1D42E38AC();
  sub_1D42E3CDC();
  v3 = (_QWORD *)sub_1D42E3CBC();
  *(_QWORD *)(v0 + 360) = v3;
  *v3 = v0;
  v3[1] = sub_1D42E095C;
  v4 = sub_1D42E3AEC((uint64_t)&unk_1EFE4A3A8);
  return sub_1D42E3820(v4, v5, v6, v7, v8);
}

uint64_t sub_1D42E095C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_1D42E3EE0();
  sub_1D42E3E84(v4);
  v3[46] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v3[47] = v0;
    v3[48] = v2;
  }
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D42E09B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  sub_1D42E3C44();
  v2 = v0[47];
  v1 = v0[48];
  v3 = (void *)v0[38];
  swift_release();
  sub_1D42CFC14();
  sub_1D42E3CCC();
  v4 = sub_1D42B6F40();
  v0[49] = v4;
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v2;

  sub_1D42CFC14();
  sub_1D42BE998();
  v5 = (_QWORD *)sub_1D42E3968();
  v0[50] = v5;
  *v5 = v0;
  v5[1] = sub_1D42E0A48;
  v6 = sub_1D42E3B00();
  return sub_1D42E3894(v6, v7, v8);
}

uint64_t sub_1D42E0A48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v5)(void);

  sub_1D42E3948();
  if (v0)
  {
    sub_1D42B8EC8();
    return sub_1D42E380C();
  }
  else
  {
    v4 = (_QWORD *)sub_1D42E3968();
    *(_QWORD *)(v1 + 416) = v4;
    *v4 = v2;
    v4[1] = sub_1D42E0B14;
    return sub_1D42E3CFC(v1 + 216, v1 + 16, v5);
  }
}

uint64_t sub_1D42E0AC4()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[38];
  swift_release();
  sub_1D42E3BC4();
  sub_1D42B70A8();

  v0[54] = v0[46];
  sub_1D42B8EC8();
  return sub_1D42E380C();
}

uint64_t sub_1D42E0B14()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_1D42E3E3C();
  sub_1D42E3E84(v2);
  *(_QWORD *)(v0 + 424) = v1;
  swift_task_dealloc();
  if (!v1)
    sub_1D42E3F78();
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D42E0B68()
{
  uint64_t v0;

  sub_1D42E4008();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D42E0B90()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_1D42E4008();
  **(_QWORD **)(v0 + 248) = *(_QWORD *)(v0 + 216);
  v1 = (uint64_t (*)(void))sub_1D42E3DD0();
  return sub_1D42B8DC0(v1);
}

uint64_t sub_1D42E0BC0()
{
  uint64_t v0;

  sub_1D42E4008();
  sub_1D42E3FCC();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D42E0BF0()
{
  uint64_t v0;

  swift_release();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1D42E0C1C()
{
  sub_1D451B958();
  sub_1D42E4000();
  sub_1D451B994();
  sub_1D42BE978();
}

void sub_1D42E0C50()
{
  sub_1D451B958();
  sub_1D42E4000();
  sub_1D451B994();
  sub_1D42BE978();
}

_QWORD *sub_1D42E0C80(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  void *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (**v13)@<X0>(uint64_t *@<X8>);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  _QWORD *result;
  void *v84;
  int exclaveCapability;
  uint64_t v86;
  BOOL v87;
  id v88;
  id v89;
  char v90;
  id v91;
  char v92;
  BOOL v93;
  char v94;
  uint64_t v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  _QWORD *v106;
  uint64_t v107;
  void (*v108)(uint64_t, uint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t (**v116)@<X0>(uint64_t@<X8>);
  _QWORD *v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  unint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t (**v134)@<X0>(uint64_t *@<X8>);
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  void (*v144)(char *, uint64_t);
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t (**v172)@<X0>(uint64_t *@<X8>);
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  _QWORD v181[2];
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  _QWORD v185[5];
  char v186;
  uint64_t v187;
  unint64_t v188;
  char v189[8];
  uint64_t v190;
  char v191[8];
  char v192[8];
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;

  v4 = v2;
  v193 = a2;
  v184 = a1;
  v174 = *v2;
  v5 = sub_1D42B28FC(&qword_1EFE4A248);
  sub_1D42BA240(v5, (uint64_t)&v195);
  sub_1D42BA18C(v6);
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1D42B28FC(&qword_1EFE4A250);
  v182 = *(_QWORD *)(v8 - 8);
  v183 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v145 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F7C0);
  sub_1D42BA18C(*(_QWORD *)(v11 - 8));
  MEMORY[0x1E0C80A78](v12);
  sub_1D42BE768();
  v172 = v13;
  v14 = sub_1D451A0B0();
  sub_1D42BA240(v14, (uint64_t)v192);
  sub_1D42BA18C(v15);
  MEMORY[0x1E0C80A78](v16);
  sub_1D42BE768();
  sub_1D42BA180(v17);
  v18 = sub_1D42B28FC((uint64_t *)&unk_1EFE55C10);
  MEMORY[0x1E0C80A78](v18);
  sub_1D42BE768();
  sub_1D42BA180(v19);
  v20 = sub_1D42B28FC(&qword_1EFE4A258);
  sub_1D42BA240(v20, (uint64_t)&v182);
  sub_1D42BA18C(v21);
  MEMORY[0x1E0C80A78](v22);
  sub_1D42BE768();
  sub_1D42BA180(v23);
  v24 = sub_1D42B28FC(&qword_1EFE4A260);
  v25 = sub_1D42BA240(v24, (uint64_t)&v179);
  MEMORY[0x1E0C80A78](v25);
  sub_1D42BE768();
  sub_1D42BA180(v26);
  v27 = sub_1D42B28FC(&qword_1EFE4A268);
  v28 = sub_1D42BA240(v27, (uint64_t)v181);
  v153 = v29;
  MEMORY[0x1E0C80A78](v28);
  sub_1D42BA180((uint64_t)&v145 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v154 = v31;
  MEMORY[0x1E0C80A78](v32);
  sub_1D42BA180((uint64_t)&v145 - v33);
  v34 = sub_1D42B28FC(&qword_1EFE55F60);
  sub_1D42BA240(v34, (uint64_t)&v187);
  sub_1D42BA18C(v35);
  MEMORY[0x1E0C80A78](v36);
  sub_1D42BE768();
  sub_1D42BA180(v37);
  v38 = sub_1D42B28FC(&qword_1EFE4A270);
  sub_1D42BA240(v38, (uint64_t)v189);
  sub_1D42BA18C(v39);
  MEMORY[0x1E0C80A78](v40);
  sub_1D42BE768();
  sub_1D42BA180(v41);
  v42 = sub_1D42B28FC(&qword_1EFE55AF0);
  sub_1D42BA240(v42, (uint64_t)&v190);
  sub_1D42BA18C(v43);
  MEMORY[0x1E0C80A78](v44);
  sub_1D42BE768();
  sub_1D42BA180(v45);
  v46 = sub_1D42B28FC(&qword_1EFE4A278);
  sub_1D42BA240(v46, (uint64_t)v191);
  sub_1D42BA18C(v47);
  MEMORY[0x1E0C80A78](v48);
  sub_1D42BE768();
  v167 = v49;
  v50 = sub_1D4519D20();
  v51 = sub_1D42BA240(v50, (uint64_t)&v194);
  v177 = v52;
  v53 = *(_QWORD *)(v52 + 64);
  v54 = MEMORY[0x1E0C80A78](v51);
  v156 = (char *)&v145 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = MEMORY[0x1E0C80A78](v54);
  v175 = (char *)&v145 - v56;
  MEMORY[0x1E0C80A78](v55);
  sub_1D42BA180((uint64_t)&v145 - v57);
  sub_1D42B28FC(&qword_1EFE4A280);
  v58 = sub_1D42B6F40();
  v59 = (void *)objc_opt_self();
  *(_QWORD *)(v58 + 16) = sub_1D42E3A60(v59);
  sub_1D42B28FC(&qword_1EFE4A288);
  sub_1D42B6F40();
  v60 = sub_1D42E3B40();
  v4[3] = sub_1D4312B70(v60);
  sub_1D42B28FC(&qword_1EFE4A290);
  sub_1D42B6F40();
  v61 = (void *)sub_1D42E3BDC();
  *(_QWORD *)(v58 + 16) = sub_1D42E3A60(v61);
  sub_1D42B28FC(&qword_1EFE4A298);
  sub_1D42B6F40();
  v62 = sub_1D42E3B40();
  v4[4] = sub_1D4312B70(v62);
  sub_1D42B28FC(&qword_1EFE4A2A0);
  sub_1D42B6F40();
  v63 = (void *)sub_1D42E3BDC();
  *(_QWORD *)(v58 + 16) = sub_1D42E3A60(v63);
  sub_1D42B28FC(&qword_1EFE4A2A8);
  sub_1D42B6F40();
  v64 = sub_1D42E3B40();
  v4[5] = sub_1D4312B70(v64);
  sub_1D42B28FC(&qword_1EFE4A2B0);
  sub_1D42B6F40();
  v65 = (void *)sub_1D42E3BDC();
  *(_QWORD *)(v58 + 16) = sub_1D42E3A60(v65);
  sub_1D42B28FC(&qword_1EFE4A2B8);
  sub_1D42B6F40();
  v66 = sub_1D42E3B40();
  v4[6] = sub_1D4312B70(v66);
  sub_1D42B28FC(&qword_1EFE4A2C0);
  sub_1D42B6F40();
  v67 = (void *)sub_1D42E3BDC();
  *(_QWORD *)(v58 + 16) = sub_1D42E3A60(v67);
  sub_1D42B28FC(&qword_1EFE4A2C8);
  sub_1D42B6F40();
  v68 = sub_1D42E3B40();
  v4[7] = sub_1D4312B70(v68);
  sub_1D42B28FC(&qword_1EFE4A2D0);
  sub_1D42B6F40();
  v69 = (void *)sub_1D42E3BDC();
  *(_QWORD *)(v58 + 16) = sub_1D42E3A60(v69);
  sub_1D42B28FC(&qword_1EFE4A2D8);
  sub_1D42B6F40();
  v70 = sub_1D42E3B40();
  v4[8] = sub_1D4312B70(v70);
  sub_1D42B28FC(&qword_1EFE4A2E0);
  sub_1D42B6F40();
  v71 = (void *)sub_1D42E3BDC();
  *(_QWORD *)(v58 + 16) = sub_1D42E3A60(v71);
  sub_1D42B28FC(&qword_1EFE4A2E8);
  sub_1D42B6F40();
  v72 = sub_1D42E3B40();
  v4[9] = sub_1D4312B70(v72);
  sub_1D42B28FC(&qword_1EFE4A2F0);
  sub_1D42B6F40();
  v73 = (void *)sub_1D42E3BDC();
  *(_QWORD *)(v58 + 16) = sub_1D42E3A60(v73);
  sub_1D42B28FC(&qword_1EFE4A2F8);
  sub_1D42B6F40();
  v74 = sub_1D42E3B40();
  v4[10] = sub_1D4312B70(v74);
  sub_1D42B28FC(&qword_1EFE4A300);
  sub_1D42B6F40();
  v75 = (void *)sub_1D42E3BDC();
  *(_QWORD *)(v58 + 16) = sub_1D42E3A60(v75);
  sub_1D42B28FC(&qword_1EFE4A308);
  sub_1D42B6F40();
  v76 = sub_1D42E3B40();
  v4[11] = sub_1D4312B70(v76);
  sub_1D42B28FC(&qword_1EFE4A310);
  sub_1D42B6F40();
  v77 = (void *)sub_1D42E3BDC();
  *(_QWORD *)(v58 + 16) = sub_1D42E3A60(v77);
  sub_1D42B28FC(&qword_1EFE4A318);
  sub_1D42B6F40();
  v78 = sub_1D42E3B40();
  v4[12] = sub_1D4312B70(v78);
  sub_1D42B28FC(&qword_1EFE4A320);
  sub_1D42B6F40();
  v79 = (void *)sub_1D42E3BDC();
  *(_QWORD *)(v58 + 16) = sub_1D42E3A60(v79);
  sub_1D42B28FC(&qword_1EFE4A328);
  sub_1D42B6F40();
  v80 = sub_1D42E3B40();
  v4[13] = sub_1D4312B70(v80);
  sub_1D42B28FC(&qword_1EFE4A330);
  sub_1D42B6F40();
  v81 = (void *)sub_1D42E3BDC();
  *(_QWORD *)(v58 + 16) = sub_1D42E3A60(v81);
  sub_1D42B28FC(&qword_1EFE4A338);
  sub_1D42B6F40();
  v82 = sub_1D42E3B40();
  v4[14] = sub_1D4312B70(v82);
  result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    v84 = result;
    exclaveCapability = MobileGestalt_get_exclaveCapability();

    if (exclaveCapability)
    {
      v86 = MGGetProductType();
      v87 = sub_1D4380234(v86);
    }
    else
    {
      v87 = 0;
    }
    v146 = v11;
    if (qword_1EFE47240 != -1)
      swift_once();
    v88 = objc_msgSend((id)qword_1EFE47238, sel_dictionaryRepresentation);
    sub_1D451A5CC();

    v89 = sub_1D4457124();
    if (v3)
    {

      swift_bridgeObjectRelease();
      if (!v87)
        goto LABEL_18;
    }
    else
    {
      v91 = v89;
      v92 = v90;
      swift_bridgeObjectRelease();
      v93 = v91 != 0;
      if ((v92 & 1) != 0)
        v93 = v87;
      if (!v93)
        goto LABEL_18;
    }
    if (qword_1EFE478B8 != -1)
      swift_once();
    sub_1D42E3B9C();
    if (v94)
    {
      v98 = sub_1D441F880();
      v185[3] = type metadata accessor for SoundAnalysisService.Service();
      v185[4] = &off_1E979B228;
      v185[0] = v98;
      v186 = 0;
      sub_1D42E31D0((uint64_t)v185, (uint64_t)&v187, &qword_1EFE4A0F8);
      sub_1D42E31D0((uint64_t)&v187, (uint64_t)&v190, &qword_1EFE4A0F8);
      sub_1D42B28FC(&qword_1EFE4A358);
      swift_allocObject();
      v99 = sub_1D451A230();
      type metadata accessor for ICACConnection();
      sub_1D42B6F40();
      swift_retain_n();
      v183 = (uint64_t)sub_1D42CBA68((uint64_t)sub_1D42E2F68, v99, (uint64_t)sub_1D42E2F70, v99);
      sub_1D4519D14();
      sub_1D4519D14();
      v187 = sub_1D42DD1E8();
      sub_1D42CB9F8();
      sub_1D42E3F8C(&qword_1EFE4A368);
      v100 = v148;
      sub_1D451A3A4();
      sub_1D42E3F48();
      v187 = 0;
      v188 = 0xE000000000000000;
      sub_1D451B400();
      sub_1D451A794();
      sub_1D42E2F78(&qword_1EFE4CB00, 255, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
      v181[1] = v101;
      sub_1D451B7C0();
      sub_1D42E3FEC();
      sub_1D42D3258();
      sub_1D42E3FE0();
      v102 = v187;
      v103 = v188;
      v104 = sub_1D42B6F40();
      *(_BYTE *)(v104 + 16) = 0;
      *(_QWORD *)(v104 + 24) = v102;
      *(_QWORD *)(v104 + 32) = v103;
      *(_QWORD *)(v104 + 40) = 230;
      v105 = (_QWORD *)sub_1D42B6F40();
      v105[2] = 0;
      v105[3] = sub_1D42E2FF8;
      v105[4] = v104;
      v106 = (_QWORD *)sub_1D42B6F40();
      v106[2] = sub_1D42E3048;
      v106[3] = v105;
      v106[4] = 230;
      v107 = v150;
      v108 = *(void (**)(uint64_t, uint64_t, uint64_t))(v150 + 16);
      v182 = 0;
      v109 = v152;
      v181[0] = v99;
      v108(v152, v100, v151);
      v110 = v147;
      v111 = (_QWORD *)(v109 + *(int *)(v147 + 52));
      *v111 = sub_1D43D6F9C;
      v111[1] = 0;
      v112 = (_QWORD *)(v109 + *(int *)(v110 + 56));
      *v112 = sub_1D42E3094;
      v112[1] = v106;
      sub_1D42D717C(*(uint64_t (**)(uint64_t, uint64_t))(v107 + 8));
      v113 = sub_1D42B6F40();
      *(_OWORD *)(v113 + 16) = xmmword_1D4526350;
      *(_QWORD *)(v113 + 32) = 46;
      v114 = v157;
      sub_1D42E30E4(v109, v157, &qword_1EFE4A260);
      v115 = v149;
      v116 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v114 + *(int *)(v149 + 52));
      *v116 = sub_1D42E29F4;
      v116[1] = 0;
      v117 = (_QWORD *)(v114 + *(int *)(v115 + 56));
      *v117 = sub_1D42E30B0;
      v117[1] = v113;
      sub_1D42D7018(v109, &qword_1EFE4A260);
      v118 = v155;
      sub_1D42E30E4(v114, v155, &qword_1EFE4A268);
      v119 = (*(unsigned __int8 *)(v153 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v153 + 80);
      v120 = swift_allocObject();
      v121 = v183;
      *(_QWORD *)(v120 + 16) = sub_1D42E30CC;
      *(_QWORD *)(v120 + 24) = v121;
      sub_1D42E31D0(v118, v120 + v119, &qword_1EFE4A268);
      swift_retain();
      v174 = sub_1D42B28FC(&qword_1EFE4A370);
      sub_1D42E33F8(&qword_1EFE4A378, &qword_1EFE4A370);
      v122 = v158;
      sub_1D451A2C0();
      sub_1D42D7018(v114, &qword_1EFE4A268);
      v123 = v161;
      sub_1D44AF640();
      v124 = sub_1D44AF854();
      sub_1D42D7018(v123, (uint64_t *)&unk_1EFE55C10);
      (*(void (**)(uint64_t, uint64_t))(v159 + 8))(v122, v160);
      v185[0] = v124;
      v125 = v177;
      v126 = v156;
      v127 = v180;
      (*(void (**)(char *, char *, uint64_t))(v177 + 16))(v156, v179, v180);
      sub_1D42E30E4((uint64_t)&v190, (uint64_t)&v187, &qword_1EFE4A0F8);
      v128 = (*(unsigned __int8 *)(v125 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80);
      v129 = (v53 + v128 + 7) & 0xFFFFFFFFFFFFFFF8;
      v130 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v125 + 32))(v130 + v128, v126, v127);
      sub_1D42E31D0((uint64_t)&v187, v130 + v129, &qword_1EFE4A0F8);
      v131 = v162;
      sub_1D451A3A4();
      swift_release();
      swift_release();
      v132 = v170;
      v133 = v171;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v178 + 104))(v170, *MEMORY[0x1E0C958B0], v171);
      v134 = v172;
      *v172 = sub_1D42E227C;
      v134[1] = 0;
      v135 = v173;
      v136 = v146;
      (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), _QWORD, uint64_t))(v173 + 104))(v134, *MEMORY[0x1E0C958F0], v146);
      sub_1D42E33F8(&qword_1EFE4A380, &qword_1EFE4A270);
      v137 = v164;
      sub_1D451A380();
      (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), uint64_t))(v135 + 8))(v134, v136);
      (*(void (**)(uint64_t, uint64_t))(v178 + 8))(v132, v133);
      (*(void (**)(uint64_t, uint64_t))(v163 + 8))(v131, v137);
      v187 = 0;
      v188 = 0xE000000000000000;
      sub_1D451B400();
      swift_bridgeObjectRelease();
      v187 = 0xD00000000000001ALL;
      v188 = 0x80000001D4551470;
      v138 = v175;
      v139 = v180;
      sub_1D451B7C0();
      sub_1D42E3FEC();
      sub_1D42D3258();
      sub_1D42E3FE0();
      v140 = v167;
      v141 = v176;
      sub_1D44A4A8C();
      sub_1D42D3258();
      (*(void (**)(uint64_t, uint64_t))(v165 + 8))(v141, v166);
      sub_1D42E33F8(&qword_1EFE4A388, &qword_1EFE4A278);
      v142 = v169;
      v143 = sub_1D451A2E4();
      swift_release_n();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v168 + 8))(v140, v142);
      v144 = *(void (**)(char *, uint64_t))(v177 + 8);
      v144(v138, v139);
      v144(v179, v139);
LABEL_19:
      sub_1D42E30E4((uint64_t)&v190, (uint64_t)(v4 + 15), &qword_1EFE4A0F8);
      v4[21] = v143;
      type metadata accessor for SNAOPUtils.Analytics();
      sub_1D42B6F40();
      swift_retain();
      v97 = v193;
      swift_retain();
      v4[2] = sub_1D43C4A68(v184, v97);
      sub_1D42E3F48();
      swift_release();
      sub_1D42D7018((uint64_t)&v190, &qword_1EFE4A0F8);
      return v4;
    }
LABEL_18:
    sub_1D42E2F2C();
    v95 = swift_allocError();
    swift_willThrow();
    v190 = v95;
    v192[0] = 1;
    sub_1D42B28FC(&qword_1EFE49BB0);
    v187 = MEMORY[0x1E0DEE9D8];
    sub_1D42CB9F8();
    sub_1D42E3F8C(&qword_1EFE55870);
    sub_1D451A830();
    sub_1D451A140();
    sub_1D42D717C(*(uint64_t (**)(uint64_t, uint64_t))(v181[0] + 8));
    sub_1D42E33F8(&qword_1EFE4A350, &qword_1EFE4A250);
    v96 = (id)v183;
    v143 = sub_1D451A2E4();
    (*(void (**)(char *, id))(v182 + 8))(v10, v96);
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D42E1EA0()
{
  return sub_1D451A218();
}

void sub_1D42E1ED4(void *a1)
{
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  id v10;
  uint64_t v11;

  if (qword_1EFE40338 != -1)
    swift_once();
  v2 = sub_1D451A014();
  sub_1D42CC880(v2, (uint64_t)qword_1EFEA7700);
  v3 = a1;
  v4 = a1;
  v5 = sub_1D4519FFC();
  v6 = sub_1D451AF74();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    v9 = a1;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    sub_1D451B1A8();
    *v8 = v11;

    _os_log_impl(&dword_1D42A7000, v5, v6, "Received ICAC Lapse Callback with error: %@", v7, 0xCu);
    sub_1D42B28FC((uint64_t *)&unk_1EFE50850);
    swift_arrayDestroy();
    MEMORY[0x1D825E524](v8, -1, -1);
    MEMORY[0x1D825E524](v7, -1, -1);
  }
  else
  {

  }
  v10 = a1;
  swift_willThrow();
  sub_1D451A218();

}

uint64_t sub_1D42E20B0@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  id v3;

  v2 = *(void **)result;
  if ((*(_BYTE *)(result + 8) & 1) != 0)
  {
    v3 = v2;
    sub_1D42B28FC(&qword_1EFE49BB0);
    return swift_willThrowTypedImpl();
  }
  else
  {
    *a2 = v2;
  }
  return result;
}

uint64_t sub_1D42E210C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  type metadata accessor for ICACIOSession();
  swift_allocObject();
  v3 = swift_retain();
  result = sub_1D42CC7C4(v3);
  if (!v1)
    *a1 = result;
  return result;
}

uint64_t sub_1D42E216C()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1D4519CF0();
  sub_1D42E2BB0(v0, v1, (void (*)(uint64_t))sub_1D42E335C);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42E21E0(uint64_t a1)
{
  __int128 v2[2];
  char v3;
  _QWORD v4[5];

  sub_1D42E30E4(a1, (uint64_t)v2, &qword_1EFE4A0F8);
  if ((v3 & 1) != 0)
  {
    sub_1D42B28FC(&qword_1EFE49BB0);
    return swift_willThrowTypedImpl();
  }
  else
  {
    sub_1D42E33E0(v2, (uint64_t)v4);
    sub_1D42B5528(v4, v4[3]);
    sub_1D44D4FB4();
    return sub_1D42B5400((uint64_t)v4);
  }
}

uint64_t sub_1D42E227C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_1D42E3320();
  result = swift_allocError();
  *a1 = result;
  return result;
}

uint64_t sub_1D42E22B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  swift_retain();
  sub_1D42CB9F8();
  sub_1D42E3F8C(&qword_1EFE4A108);
  sub_1D451A374();
  sub_1D42B28FC(&qword_1EFE4A110);
  sub_1D42B6F40();
  v0 = sub_1D42E3B40();
  sub_1D43AEFD8(v0);
  swift_release();
  sub_1D42E33F8(&qword_1EFE4A118, &qword_1EFE4A110);
  v1 = sub_1D451A2E4();
  sub_1D42E3F48();
  type metadata accessor for SharedSecureMicrophone.Instance();
  result = sub_1D42B6F40();
  *(_QWORD *)(result + 16) = v1;
  return result;
}

_QWORD *sub_1D42E23B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;

  if (qword_1EFE48F28 != -1)
    swift_once();
  v0 = qword_1EFEA7A90;
  v1 = *(_QWORD *)algn_1EFEA7A98;
  type metadata accessor for AnalysisServerEnvironmentSharedImpl();
  v2 = sub_1D42B6F40();
  sub_1D42BE934();
  result = sub_1D42E0C80(v0, v1);
  qword_1EFEA7748 = v2;
  byte_1EFEA7750 = 0;
  return result;
}

uint64_t sub_1D42E2450()
{
  uint64_t v0;

  swift_release();
  sub_1D42B8F98();
  sub_1D42E4010();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1D42D7018(v0 + 120, &qword_1EFE4A0F8);
  swift_release();
  return v0;
}

uint64_t sub_1D42E24DC()
{
  sub_1D42E2450();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AnalysisServerEnvironmentSharedImpl()
{
  return objc_opt_self();
}

void type metadata accessor for AnalysisClientEnvironment()
{
  sub_1D42CB35C();
}

uint64_t sub_1D42E2528()
{
  return swift_retain();
}

void sub_1D42E2530(uint64_t *a1@<X8>)
{
  *a1 = sub_1D42E2528();
  sub_1D42B6E24();
}

uint64_t sub_1D42E2550@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *v1;
  v2 = v1[1];
  v4 = *((_BYTE *)v1 + 16);
  v5 = v1[3];
  v6 = v1[4];
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  swift_retain();
  sub_1D42E3CA4();
  return swift_retain();
}

uint64_t sub_1D42E258C()
{
  uint64_t (**v0)(void);

  return (*v0)();
}

uint64_t sub_1D42E25AC()
{
  return sub_1D42E258C();
}

void sub_1D42E25C0(uint64_t a1@<X8>)
{
  _QWORD *v1;

  sub_1D42E30E4(*v1 + 120, a1, &qword_1EFE4A0F8);
}

void sub_1D42E25E8(uint64_t a1@<X8>)
{
  sub_1D42DD280(a1);
}

_QWORD *sub_1D42E2620(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;
  char v23;

  v1 = *((_QWORD *)a1 + 2);
  v2 = *((_QWORD *)a1 + 3);
  v3 = *((_BYTE *)a1 + 48);
  v4 = *((_BYTE *)a1 + 49);
  v5 = *((_BYTE *)a1 + 50);
  v6 = *((_BYTE *)a1 + 51);
  v7 = *((_BYTE *)a1 + 52);
  v8 = *((_BYTE *)a1 + 53);
  v9 = *((_QWORD *)a1 + 7);
  v10 = *((_BYTE *)a1 + 64);
  v12 = *a1;
  v13 = v1;
  v14 = v2;
  v15 = a1[2];
  v16 = v3;
  v17 = v4;
  v18 = v5;
  v19 = v6;
  v20 = v7;
  v21 = v8;
  v22 = v9;
  v23 = v10;
  return sub_1D44A4D8C((uint64_t)&v12);
}

uint64_t sub_1D42E2698()
{
  return swift_retain();
}

uint64_t sub_1D42E26A4()
{
  return swift_retain();
}

uint64_t sub_1D42E26B0()
{
  return swift_retain();
}

uint64_t sub_1D42E26BC()
{
  return swift_retain();
}

unint64_t sub_1D42E26CC()
{
  unint64_t result;

  result = qword_1EFE4A0A8;
  if (!qword_1EFE4A0A8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454C538, &unk_1E97A7E10);
    atomic_store(result, (unint64_t *)&qword_1EFE4A0A8);
  }
  return result;
}

unint64_t sub_1D42E270C()
{
  unint64_t result;

  result = qword_1EFE4A0B0;
  if (!qword_1EFE4A0B0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454C510, &unk_1E97A7E10);
    atomic_store(result, (unint64_t *)&qword_1EFE4A0B0);
  }
  return result;
}

unint64_t sub_1D42E274C()
{
  unint64_t result;

  result = qword_1EFE4A0B8;
  if (!qword_1EFE4A0B8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D454C4D0, &unk_1E97A7E10);
    atomic_store(result, (unint64_t *)&qword_1EFE4A0B8);
  }
  return result;
}

void sub_1D42E2788(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  sub_1D42E2F78(&qword_1EFE4A0C0, a2, (void (*)(uint64_t))type metadata accessor for AnalysisServerEnvironmentSharedImpl);
  *(_QWORD *)(a1 + 8) = v3;
}

void sub_1D42E27C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  sub_1D42E2F78(&qword_1EFE4A0C8, a2, (void (*)(uint64_t))type metadata accessor for AnalysisServerEnvironmentSharedImpl);
  *(_QWORD *)(a1 + 8) = v3;
}

_UNKNOWN **sub_1D42E2800()
{
  return &off_1E97A7E80;
}

void sub_1D42E280C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  sub_1D42E2F78(&qword_1EFE4A0D0, a2, (void (*)(uint64_t))type metadata accessor for AnalysisServerEnvironmentSharedImpl);
  *(_QWORD *)(a1 + 8) = v3;
}

void sub_1D42E2848(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  sub_1D42E2F78(&qword_1EFE4A0D8, a2, (void (*)(uint64_t))type metadata accessor for AnalysisServerEnvironmentSharedImpl);
  *(_QWORD *)(a1 + 8) = v3;
}

void sub_1D42E2884(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  sub_1D42E2F78(&qword_1EFE4A0E0, a2, (void (*)(uint64_t))type metadata accessor for AnalysisServerEnvironmentSharedImpl);
  *(_QWORD *)(a1 + 8) = v3;
}

void sub_1D42E28C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  sub_1D42E2F78(&qword_1EFE4A0E8, a2, (void (*)(uint64_t))type metadata accessor for AnalysisServerEnvironmentSharedImpl);
  *(_QWORD *)(a1 + 8) = v3;
}

void sub_1D42E28FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  sub_1D42E2F78(&qword_1EFE4A0F0, a2, (void (*)(uint64_t))type metadata accessor for AnalysisServerEnvironmentSharedImpl);
  *(_QWORD *)(a1 + 8) = v3;
}

uint64_t sub_1D42E2938(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  *(_QWORD *)(v3 + 64) = a1;
  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)a3 + *a3);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 72) = v5;
  *v5 = v3;
  v5[1] = sub_1D42E29AC;
  return v7(v3 + 16, a2);
}

uint64_t sub_1D42E29AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _OWORD *v4;
  __int128 v5;
  __int128 v6;

  sub_1D42E3E3C();
  sub_1D42E3E84(v3);
  swift_task_dealloc();
  if (!v1)
  {
    v4 = *(_OWORD **)(v0 + 64);
    v5 = *(_OWORD *)(v0 + 32);
    v6 = *(_OWORD *)(v0 + 48);
    *v4 = *(_OWORD *)(v0 + 16);
    v4[1] = v5;
    v4[2] = v6;
  }
  return sub_1D42E39E4(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_1D42E29F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;
  uint64_t v4;
  uint64_t v5;

  result = sub_1D43D72D0();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1D42E2A2C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t))
{
  uint64_t v15;
  void (*v16)(uint64_t@<X0>, uint64_t@<X1>, uint64_t *@<X8>);
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, _QWORD *);
  uint64_t v19;
  uint64_t v20;
  void (*v22)(uint64_t, uint64_t, _QWORD *);
  uint64_t v23;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;

  if (a5)
  {
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = a5;
    *(_QWORD *)(v15 + 24) = a6;
    v16 = sub_1D42E33C8;
    if (a7)
    {
LABEL_3:
      v17 = swift_allocObject();
      *(_QWORD *)(v17 + 16) = a7;
      *(_QWORD *)(v17 + 24) = a8;
      v18 = sub_1D42E33C0;
      goto LABEL_6;
    }
  }
  else
  {
    v16 = sub_1D43E6EA0;
    if (a7)
      goto LABEL_3;
  }
  v18 = (void (*)(uint64_t, uint64_t, _QWORD *))sub_1D43E6F08;
LABEL_6:
  v22 = v18;
  v26 = a2;
  v27 = a3;
  v28 = a4;
  sub_1D42E33B0(a5);
  sub_1D42E33B0(a7);
  v16(a1, (uint64_t)&v26, &v29);
  v19 = swift_release();
  if (!v23)
  {
    v20 = v29;
    a9(v19);
    v26 = a2;
    v27 = a3;
    v28 = a4;
    v29 = v20;
    v22(a1, (uint64_t)&v26, &v29);
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1D42E2BB0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v6 = sub_1D4519FB4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFE472E0 != -1)
    swift_once();
  v10 = sub_1D42CC880(v6, (uint64_t)qword_1EFEA7728);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  swift_bridgeObjectRetain();
  sub_1D42E2A2C((uint64_t)v9, (uint64_t)"AudioBufferProcessed", 20, 2, (uint64_t)sub_1D42E3398, v11, 0, 0, a3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return swift_release();
}

uint64_t sub_1D42E2D0C()
{
  uint64_t v0;
  _QWORD *v1;

  sub_1D42E39FC();
  sub_1D42E3AC4();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  sub_1D42E38F4(v1);
  return sub_1D42E3834();
}

uint64_t sub_1D42E2D4C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  sub_1D42E39FC();
  sub_1D42E3BE8();
  v0 = sub_1D42E3CF4();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D42E3870(v1);
  return sub_1D42E3820(v2, v3, v4, v5, v6);
}

uint64_t sub_1D42E2D8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_1D42E2DD0()
{
  unint64_t result;

  result = qword_1EFE4A150;
  if (!qword_1EFE4A150)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4526C54, &unk_1E979AB70);
    atomic_store(result, (unint64_t *)&qword_1EFE4A150);
  }
  return result;
}

uint64_t sub_1D42E2E24()
{
  sub_1D42B8F98();
  return swift_deallocObject();
}

uint64_t sub_1D42E2E44()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  sub_1D42E39FC();
  sub_1D42E3BE8();
  v0 = sub_1D42E3CF4();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D42E3870(v1);
  return sub_1D42E3820(v2, v3, v4, v5, v6);
}

void sub_1D42E2E8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = a3(0);
  sub_1D42E3E0C(v3);
  sub_1D42B6E24();
}

uint64_t sub_1D42E2EBC(uint64_t a1)
{
  sub_1D42E2EE8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_1D42E2EE8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1D42DD16C(a1, a2);
  return a1;
}

uint64_t *sub_1D42E2EFC(uint64_t *a1)
{
  sub_1D42B7FE4(*a1);
  return a1;
}

unint64_t sub_1D42E2F2C()
{
  unint64_t result;

  result = qword_1EFE4A340;
  if (!qword_1EFE4A340)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4526C14, &unk_1E979AF88);
    atomic_store(result, (unint64_t *)&qword_1EFE4A340);
  }
  return result;
}

uint64_t sub_1D42E2F68()
{
  return sub_1D42E1EA0();
}

void sub_1D42E2F70(void *a1)
{
  sub_1D42E1ED4(a1);
}

void sub_1D42E2F78(_QWORD *a1, uint64_t a2, void (*a3)(uint64_t))
{
  if (!*a1)
  {
    a3(a2);
    sub_1D42E3FC0();
  }
  sub_1D42B6E24();
}

uint64_t sub_1D42E2FAC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t result;

  result = sub_1D43AE964(*a1, a2, a3);
  *a4 = result;
  return result;
}

uint64_t sub_1D42E2FD4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D42E2FF8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1D42E2FAC(a1, a2, *(_BYTE *)(v3 + 16), a3);
}

uint64_t sub_1D42E3008@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void (*a5)(uint64_t *__return_ptr, uint64_t *)@<X4>, uint64_t *a6@<X8>)
{
  uint64_t result;

  result = sub_1D43AE8A0(*a1, a2, a3, a4, a5);
  *a6 = result;
  return result;
}

uint64_t sub_1D42E3030()
{
  sub_1D42E4010();
  sub_1D42E3F08();
  return swift_deallocObject();
}

uint64_t sub_1D42E3048@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_1D42E3008(a1, a2, a3, *(_QWORD *)(v4 + 16), *(void (**)(uint64_t *__return_ptr, uint64_t *))(v4 + 24), a4);
}

_QWORD *sub_1D42E3054@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, _QWORD *(*a3)(uint64_t *__return_ptr, uint64_t *, _QWORD, uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  _QWORD *result;

  result = sub_1D43AE714(*a1, a2, a3, a4, a5);
  *a6 = result;
  return result;
}

uint64_t sub_1D42E307C()
{
  sub_1D42B8F98();
  sub_1D42E3F08();
  return swift_deallocObject();
}

_QWORD *sub_1D42E3094@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  return sub_1D42E3054(a1, a2, *(_QWORD *(**)(uint64_t *__return_ptr, uint64_t *, _QWORD, uint64_t))(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), a3);
}

uint64_t sub_1D42E30A0()
{
  sub_1D42E3F08();
  return swift_deallocObject();
}

void sub_1D42E30B0(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  sub_1D43D6FAC(a1, a2, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), a3);
}

uint64_t sub_1D42E30CC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1D42E210C(a1);
}

void sub_1D42E30E4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = sub_1D42E3ED0(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v3, v4, v5);
  sub_1D42B6E24();
}

uint64_t sub_1D42E3118()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1D42B28FC(&qword_1EFE4A268) - 8) + 80);
  v2 = (v1 + 32) & ~v1;
  sub_1D42B8F98();
  v3 = sub_1D42B28FC(&qword_1EFE4A258);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  sub_1D42B28FC(&qword_1EFE4A260);
  sub_1D42E3DC4();
  sub_1D42E3DC4();
  sub_1D42E3DC4();
  sub_1D42E3DC4();
  return swift_deallocObject();
}

void sub_1D42E31D0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_1D42E3ED0(a1, a2, a3);
  sub_1D42E3E0C(v3);
  sub_1D42B6E24();
}

void sub_1D42E31F0()
{
  sub_1D42B28FC(&qword_1EFE4A268);
  sub_1D44A5E64();
}

void sub_1D42E3228(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  sub_1D42B6E24();
}

uint64_t sub_1D42E3234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  id *v5;

  v1 = sub_1D4519D20();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v5 = (id *)(v0 + v4);
  if ((*(_BYTE *)(v0 + v4 + 40) & 1) != 0)

  else
    sub_1D42B5400((uint64_t)v5);
  return swift_deallocObject();
}

uint64_t sub_1D42E32B4()
{
  sub_1D4519D20();
  return sub_1D42E216C();
}

unint64_t sub_1D42E3320()
{
  unint64_t result;

  result = qword_1EFE4A390;
  if (!qword_1EFE4A390)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4526BD4, &unk_1E979AEF8);
    atomic_store(result, (unint64_t *)&qword_1EFE4A390);
  }
  return result;
}

uint64_t sub_1D42E335C()
{
  uint64_t v0;

  return sub_1D42E21E0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1D42E3374()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D42E3398()
{
  return sub_1D43E7258();
}

uint64_t sub_1D42E33B0(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

void sub_1D42E33C0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;

  sub_1D43E6ED4(a1, a2, a3, *(void (**)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))(v3 + 16));
}

void sub_1D42E33C8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  sub_1D43E6CBC(a1, a2, *(uint64_t (**)(uint64_t, _QWORD, _QWORD, _QWORD))(v3 + 16), a3);
}

uint64_t sub_1D42E33E0(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void sub_1D42E33F8(_QWORD *a1, uint64_t *a2)
{
  if (!*a1)
  {
    sub_1D42B8B10(a2);
    sub_1D42E3FC0();
  }
  sub_1D42B6E24();
}

uint64_t sub_1D42E3430()
{
  swift_unknownObjectRelease();
  sub_1D42E4010();
  sub_1D42E3F08();
  return swift_deallocObject();
}

void type metadata accessor for AnalysisServerEnvironmentError()
{
  sub_1D42CB35C();
}

void type metadata accessor for AnalysisServerEnvironmentSharedImpl.DomainError()
{
  sub_1D42CB35C();
}

uint64_t sub_1D42E346C(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D42E34AC + 4 * byte_1D4526360[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D42E34CC + 4 * byte_1D4526365[v4]))();
}

_BYTE *sub_1D42E34AC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D42E34CC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D42E34D4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D42E34DC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D42E34E4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D42E34EC(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for AnalysisClientEnvironment.DomainError()
{
  sub_1D42CB35C();
}

__n128 initializeWithTake for DetectSoundActionsRequest(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void type metadata accessor for AnalysisServerEnvironmentImpl()
{
  sub_1D42CB35C();
}

uint64_t sub_1D42E353C()
{
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1D42E356C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_retain();
  sub_1D42BE934();
  sub_1D42B8F24();
  sub_1D42CB15C();
}

void sub_1D42E35B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  sub_1D42CFC14();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  sub_1D42CFC14();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  sub_1D42BE93C();
  sub_1D42CB15C();
}

void sub_1D42E3618(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  sub_1D42B8F98();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  sub_1D42B6E24();
}

uint64_t getEnumTagSinglePayload for DetectSoundActionsRequest(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DetectSoundActionsRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for AnalysisServerEnvironment()
{
  sub_1D42CB35C();
}

unint64_t sub_1D42E36FC()
{
  unint64_t result;

  result = qword_1EFE4A3B8;
  if (!qword_1EFE4A3B8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4526ADC, &unk_1E979AB70);
    atomic_store(result, (unint64_t *)&qword_1EFE4A3B8);
  }
  return result;
}

unint64_t sub_1D42E373C()
{
  unint64_t result;

  result = qword_1EFE4A3C0;
  if (!qword_1EFE4A3C0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4526B44, &unk_1E979AF88);
    atomic_store(result, (unint64_t *)&qword_1EFE4A3C0);
  }
  return result;
}

unint64_t sub_1D42E377C()
{
  unint64_t result;

  result = qword_1EFE4A3C8;
  if (!qword_1EFE4A3C8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4526BAC, &unk_1E979AEF8);
    atomic_store(result, (unint64_t *)&qword_1EFE4A3C8);
  }
  return result;
}

uint64_t sub_1D42E380C()
{
  return swift_task_switch();
}

uint64_t sub_1D42E3818()
{
  return swift_task_switch();
}

uint64_t sub_1D42E3820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t sub_1D42E3834()
{
  return sub_1D4316BDC();
}

uint64_t sub_1D42E3848()
{
  return sub_1D43B3270();
}

uint64_t sub_1D42E385C(uint64_t a1, uint64_t a2)
{
  return sub_1D434B284(a1, a2);
}

uint64_t sub_1D42E3870(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_1D42E3894(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_1D42E38AC()
{
  return swift_retain_n();
}

uint64_t sub_1D42E38C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *v3;
  *(_QWORD *)(v4 - 8) = *v3;
  *(_QWORD *)(v4 - 8) = *v3;
  *(_QWORD *)(v5 + 288) = a1;
  *(_QWORD *)(v5 + 296) = a3;
  return swift_task_dealloc();
}

uint64_t sub_1D42E38F4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_1D42E3914()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 352) = v0;
  return swift_task_dealloc();
}

uint64_t sub_1D42E393C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_1D42E3948()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 408) = v0;
  return swift_task_dealloc();
}

uint64_t sub_1D42E3968()
{
  return swift_task_alloc();
}

uint64_t sub_1D42E397C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 392) = v0;
  return swift_task_dealloc();
}

uint64_t sub_1D42E399C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 312) = v0;
  return swift_task_dealloc();
}

uint64_t sub_1D42E39BC(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1D42E39D0()
{
  return swift_dynamicCast();
}

uint64_t sub_1D42E39E4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1D42E39F0()
{
  return swift_task_switch();
}

uint64_t sub_1D42E3A10(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_1D42E3A2C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1D42E3A3C(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1D42E3A4C()
{
  return swift_task_alloc();
}

id sub_1D42E3A60(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, (SEL)(v1 + 1892), 0x10000, 5);
}

uint64_t sub_1D42E3A70(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = v1;
  return v3;
}

uint64_t sub_1D42E3A88()
{
  return swift_release();
}

uint64_t sub_1D42E3AA0()
{
  uint64_t v0;

  return sub_1D42E2D8C(v0 + 104, v0 + 144);
}

uint64_t sub_1D42E3AB8(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1D42E3AD8@<X0>(uint64_t result@<X0>, char a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 64) = v3;
  *(_QWORD *)(v5 + 72) = result;
  *(_BYTE *)(v5 + 80) = a2 & 1;
  *(_QWORD *)(v5 + 88) = v4;
  *(_QWORD *)(v5 + 96) = v2;
  return result;
}

uint64_t sub_1D42E3AEC@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t sub_1D42E3B00()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D42E3B14()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t result;
  uint64_t v3;

  result = v0[1];
  v3 = v0[3];
  v1[31] = result;
  v1[32] = v3;
  v1[33] = v0[4];
  return result;
}

uint64_t sub_1D42E3B30()
{
  return swift_dynamicCast();
}

uint64_t sub_1D42E3B40()
{
  uint64_t v0;

  return v0;
}

id sub_1D42E3B50()
{
  void *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 224) = v0;
  return v0;
}

uint64_t sub_1D42E3B60()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D42B5400(v0);
  return *(_QWORD *)(v1 + 8);
}

uint64_t sub_1D42E3B7C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D42B5400(v0);
  return *(_QWORD *)(v1 + 232);
}

uint64_t sub_1D42E3BAC()
{
  return sub_1D451B208();
}

uint64_t sub_1D42E3BB8()
{
  return swift_willThrow();
}

uint64_t sub_1D42E3BC4()
{
  return swift_release_n();
}

uint64_t sub_1D42E3BD0()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1D42E2D8C(v1, v0);
}

uint64_t sub_1D42E3BDC()
{
  return objc_opt_self();
}

void sub_1D42E3BF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  *(_QWORD *)(v1 + 376) = a1;
  *(_QWORD *)(a1 + 16) = v2;
  *(_QWORD *)(a1 + 24) = v3;

}

uint64_t sub_1D42E3C08()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 288);
}

_QWORD *sub_1D42E3C1C(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v3 + 336) = result;
  result[2] = v1;
  result[3] = v4;
  result[4] = v2;
  return result;
}

uint64_t sub_1D42E3C30@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t *sub_1D42E3C5C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 416) = v0;
  return sub_1D42B8C84((uint64_t *)(v1 + 16));
}

uint64_t sub_1D42E3C68()
{
  return swift_release();
}

uint64_t sub_1D42E3C74()
{
  return swift_release();
}

uint64_t sub_1D42E3C80()
{
  return swift_task_alloc();
}

_QWORD *sub_1D42E3C94@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *result = v2;
  result[1] = a2;
  return result;
}

uint64_t sub_1D42E3CA4()
{
  return swift_retain();
}

uint64_t sub_1D42E3CAC()
{
  return swift_task_alloc();
}

uint64_t sub_1D42E3CB4()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1D42E3CBC()
{
  return swift_task_alloc();
}

uint64_t sub_1D42E3CC4()
{
  return swift_task_dealloc();
}

uint64_t sub_1D42E3CCC()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1D42E3CD4()
{
  return swift_willThrowTypedImpl();
}

uint64_t sub_1D42E3CDC()
{
  return swift_unknownObjectRetain();
}

id sub_1D42E3CE4()
{
  void *v0;

  return v0;
}

uint64_t sub_1D42E3CEC()
{
  return swift_task_alloc();
}

uint64_t sub_1D42E3CF4()
{
  return swift_task_alloc();
}

uint64_t sub_1D42E3CFC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

_QWORD *sub_1D42E3D08(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result[2] = v1;
  result[3] = v3;
  result[4] = v2;
  return result;
}

uint64_t sub_1D42E3D14()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 376) = v0;
  return swift_task_dealloc();
}

_QWORD *sub_1D42E3D3C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *result = v2;
  result[1] = a2;
  return result;
}

uint64_t sub_1D42E3D48()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 432) = v0;
  return swift_task_dealloc();
}

uint64_t sub_1D42E3D68()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 336) = v0;
  return swift_task_dealloc();
}

uint64_t sub_1D42E3D88()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 416) = v0;
  return swift_task_dealloc();
}

uint64_t sub_1D42E3DA8()
{
  return swift_release();
}

uint64_t sub_1D42E3DC4()
{
  return swift_release();
}

uint64_t sub_1D42E3DD0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

void sub_1D42E3DDC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 424) = *(_QWORD *)(v0 + 352);
}

void sub_1D42E3DE8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 328) = *(_QWORD *)(v0 + 216);
}

void sub_1D42E3DF4(int8x16_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int8x16_t a9)
{
  uint64_t v9;
  void *v10;

  *(_QWORD *)(v9 + 400) = a1;
  a1[1] = vextq_s8(a9, a9, 8uLL);

}

uint64_t sub_1D42E3E0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v1, v2, a1);
}

uint64_t sub_1D42E3E24()
{
  return swift_dynamicCast();
}

void sub_1D42E3E3C()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_1D42E3E4C()
{
  return swift_task_dealloc();
}

uint64_t sub_1D42E3E54()
{
  return swift_task_dealloc();
}

uint64_t sub_1D42E3E5C()
{
  return swift_task_dealloc();
}

uint64_t sub_1D42E3E64()
{
  return swift_task_dealloc();
}

uint64_t sub_1D42E3E6C(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 384) = result;
  return result;
}

uint64_t sub_1D42E3E78(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 304) = result;
  return result;
}

void sub_1D42E3E84(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_1D42E3E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v4, 0, 1, a4);
  return sub_1D42B5400(v5);
}

uint64_t sub_1D42E3EB4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t result;
  uint64_t v3;

  result = v0[1];
  v3 = v0[3];
  v1[34] = result;
  v1[35] = v3;
  v1[36] = v0[4];
  return result;
}

uint64_t sub_1D42E3ED0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1D42B28FC(a3);
}

void sub_1D42E3EE0()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_1D42E3EF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v4, 1, 1, a4);
}

uint64_t sub_1D42E3F08()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D42E3F18()
{
  return swift_release();
}

uint64_t sub_1D42E3F28(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 256);
}

void sub_1D42E3F40(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1D42E31D0(a1, a2, v2);
}

uint64_t sub_1D42E3F48()
{
  return swift_release();
}

uint64_t sub_1D42E3F50()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1D42E3F5C()
{
  return swift_release();
}

uint64_t sub_1D42E3F64()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 312);
}

uint64_t *sub_1D42E3F78()
{
  uint64_t v0;

  return sub_1D42B8C84((uint64_t *)(v0 + 16));
}

uint64_t sub_1D42E3F80()
{
  return swift_release();
}

void sub_1D42E3F8C(_QWORD *a1)
{
  uint64_t *v1;

  sub_1D42E33F8(a1, v1);
}

void sub_1D42E3F94()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_1D42E3FA8()
{
  return swift_release();
}

void sub_1D42E3FB4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_1D42E2E8C(v3, v4, a3);
}

void sub_1D42E3FC0()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t *sub_1D42E3FCC()
{
  uint64_t *v0;

  return sub_1D42B8C84(v0);
}

void sub_1D42E3FD4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_1D42E2E8C(v4, v3, a3);
}

uint64_t sub_1D42E3FE0()
{
  return sub_1D451A794();
}

uint64_t sub_1D42E3FEC()
{
  return sub_1D451A794();
}

uint64_t sub_1D42E3FF8()
{
  return swift_release();
}

uint64_t sub_1D42E4000()
{
  return sub_1D451B964();
}

uint64_t sub_1D42E4008()
{
  return swift_release();
}

uint64_t sub_1D42E4010()
{
  return swift_release();
}

uint64_t sub_1D42E4018()
{
  uint64_t v0;

  swift_beginAccess();
  nullsub_1(v0 + 16);
  swift_endAccess();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UnsafeNthSortedNode()
{
  return objc_opt_self();
}

uint64_t sub_1D42E4090(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (a1 >> 62)
    goto LABEL_14;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = sub_1D451B5A4())
  {
    v5 = 4;
    while (1)
    {
      v6 = (a1 & 0xC000000000000001) != 0 ? MEMORY[0x1D825CD78](v5 - 4, a1) : swift_unknownObjectRetain();
      v7 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      if (v6 == a2)
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        return a2;
      }
      swift_unknownObjectRelease();
      ++v5;
      if (v7 == v4)
        goto LABEL_10;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
  }
LABEL_10:
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

id sub_1D42E418C(uint64_t a1, uint64_t a2)
{
  return sub_1D42E41AC(a1, a2);
}

id sub_1D42E41AC(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v4;
  id v5[2];

  v5[1] = *(id *)MEMORY[0x1E0C80C00];
  v5[0] = 0;
  if (objc_msgSend(v2, sel_addRequest_withObserver_error_, a1, a2, v5))
    return v5[0];
  v4 = v5[0];
  sub_1D4519AA4();

  return (id)swift_willThrow();
}

id sub_1D42E4258(uint64_t a1)
{
  return sub_1D42E4278(a1);
}

id sub_1D42E4278(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_removeRequest_, a1);
}

id sub_1D42E428C()
{
  return sub_1D42E42AC();
}

id sub_1D42E42AC()
{
  void *v0;

  return objc_msgSend(v0, sel_removeAllRequests);
}

void sub_1D42E42BC()
{
  sub_1D451B964();
  sub_1D42B6E24();
}

unint64_t sub_1D42E42E0(unint64_t result, double a2, double a3)
{
  uint64_t v5;
  double v6;

  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1D451B5A4();
    result = sub_1D42BE8B4();
  }
  else
  {
    v5 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v5 < 1)
    return 0;
  v6 = a2 * a3;
  if ((~COERCE__INT64(a2 * a3) & 0x7FF0000000000000) != 0)
  {
    if (v6 > -9.22337204e18)
    {
      if (v6 < 9.22337204e18)
        return (uint64_t)v6;
      goto LABEL_12;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1D42E4398(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  objc_class *ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  void *v23;
  char v24[24];
  uint64_t v25;

  v3 = v2;
  v4 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v7 = sub_1D42B28B4(a1, (uint64_t)v24);
  if (!v25)
  {
    sub_1D42EA440(v7, &qword_1EFE47160, v8, v9);
LABEL_7:
    sub_1D42E9D4C();
    sub_1D42B6D0C();
    swift_willThrow();
    goto LABEL_8;
  }
  sub_1D42EA3E0(v7, &qword_1EFE47158);
  v10 = v4;
  sub_1D42EA358((uint64_t)v10, v11, v12, v13, v14, v15, v16, v17, v21, v22);
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_7;
  }

  v18 = objc_allocWithZone(ObjectType);
  v19 = sub_1D42E4588(v23);
  if (v2)
  {
LABEL_8:
    sub_1D42D7018(a1, &qword_1EFE47160);
    swift_getObjectType();
    sub_1D42EA200();
    return v3;
  }
  v3 = v19;
  sub_1D42D7018(a1, &qword_1EFE47160);
  swift_getObjectType();
  sub_1D42EA200();
  return v3;
}

uint64_t sub_1D42E4588(void *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  Float64 v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  int v23;
  Float64 v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)();
  uint64_t (**v46)();
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  objc_class *ObjectType;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  objc_super v58;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_1D451AFA4();
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v4);
  sub_1D42CB210();
  sub_1D451A470();
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v5);
  sub_1D42CB210();
  v6 = sub_1D451AFB0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  sub_1D42D7108();
  *(_QWORD *)&v1[OBJC_IVAR____SNAudioStreamAnalyzer_receivedBufferCount] = 0;
  v54 = OBJC_IVAR____SNAudioStreamAnalyzer_firstPassRecordingPredicate;
  *(_QWORD *)&v1[OBJC_IVAR____SNAudioStreamAnalyzer_firstPassRecordingPredicate] = 0;
  v8 = v1;
  v9 = v1;
  sub_1D446D7BC(a1);
  if (v52)
  {

    v27 = *(id *)&v1[v54];
    sub_1D42EA200();
    return (uint64_t)v27;
  }
  v50 = v6;
  if (qword_1EFE472D0 != -1)
    swift_once();
  v49 = v2;
  v10 = v9;
  v11 = v7;
  v12 = a1;
  if (byte_1EFEA7718 != 1)
    goto LABEL_12;
  if (qword_1EFE478B8 != -1)
    swift_once();
  if (byte_1EFEA7A60 == 1)
  {
    if (qword_1EFE47240 != -1)
      swift_once();
    v13 = objc_msgSend((id)qword_1EFE47238, sel_dictionaryRepresentation);
    sub_1D451A5CC();

    sub_1D4457750();
    v15 = v14;
    swift_bridgeObjectRelease();
    v16 = *(void **)&v8[v54];
    if (v15)
    {
      *(_QWORD *)&v8[v54] = v15;
      v17 = v15;

      sub_1D4456250();
      sub_1D42EA4BC(v18);
      v19 = v56;
      v20 = v57;

      v21 = &v9[OBJC_IVAR____SNAudioStreamAnalyzer_firstPassRecordingHistoryDuration];
      *(_QWORD *)&v9[OBJC_IVAR____SNAudioStreamAnalyzer_firstPassRecordingHistoryDuration] = v55;
    }
    else
    {
      *(_QWORD *)&v8[v54] = 0;

      v19 = *(_QWORD *)(MEMORY[0x1E0CA2E68] + 8);
      v20 = *(_QWORD *)(MEMORY[0x1E0CA2E68] + 16);
      v21 = &v9[OBJC_IVAR____SNAudioStreamAnalyzer_firstPassRecordingHistoryDuration];
      *(_QWORD *)&v9[OBJC_IVAR____SNAudioStreamAnalyzer_firstPassRecordingHistoryDuration] = *MEMORY[0x1E0CA2E68];
    }
    *((_QWORD *)v21 + 1) = v19;
    *((_QWORD *)v21 + 2) = v20;
    sub_1D445631C();
    sub_1D42EA4BC(v24);
    v12 = a1;
    v23 = v56;
  }
  else
  {
LABEL_12:
    v22 = *(void **)&v1[v54];
    *(_QWORD *)&v1[v54] = 0;

    sub_1D42EA460(*(_DWORD *)(MEMORY[0x1E0CA2E68] + 8));
  }
  sub_1D42EA460(v23);
  type metadata accessor for SNForwardPassAudioStreamAnalyzer();
  sub_1D42B6F40();
  v25 = v12;
  v26 = sub_1D430F91C(v25);
  v29 = v11;
  *(_QWORD *)&v9[OBJC_IVAR____SNAudioStreamAnalyzer_firstPassAnalyzer] = v26;
  sub_1D42EA3E0(v26, (unint64_t *)&qword_1EFE47310);
  sub_1D42E9570();
  v30 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v9[OBJC_IVAR____SNAudioStreamAnalyzer_firstPassUltronReportOps] = sub_1D42EA2FC();
  sub_1D42B28FC((uint64_t *)&unk_1EFE479E0);
  *(_QWORD *)&v9[OBJC_IVAR____SNAudioStreamAnalyzer_firstPassResultsHistory] = sub_1D42EA2FC();
  *(_QWORD *)&v9[OBJC_IVAR____SNAudioStreamAnalyzer_requests] = v30;
  *(_QWORD *)&v9[OBJC_IVAR____SNAudioStreamAnalyzer_currentFormat] = v25;
  v31 = objc_allocWithZone((Class)SNAudioRingBuffer);
  v32 = v25;
  *(_QWORD *)&v9[OBJC_IVAR____SNAudioStreamAnalyzer_ringBuffer] = sub_1D42E7A84(v32, 1);
  v33 = objc_msgSend(objc_allocWithZone((Class)SNAudioBufferList), sel_initWithFormat_, v32);
  *(_QWORD *)&v9[OBJC_IVAR____SNAudioStreamAnalyzer_ringBufferWriteBufferList] = v33;
  sub_1D42EA3E0((uint64_t)v33, (unint64_t *)&qword_1EFE47A20);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v29 + 104))(v49, *MEMORY[0x1E0DEF8D8], v50);
  sub_1D451A464();
  sub_1D42B4EF4((unint64_t *)&qword_1EFE47A18, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  sub_1D42B28FC(&qword_1EFE479F0);
  sub_1D42E9DC0((unint64_t *)&qword_1EFE479F8, &qword_1EFE479F0);
  sub_1D451B2EC();
  v34 = (void *)sub_1D451AFD4();
  *(_QWORD *)&v9[OBJC_IVAR____SNAudioStreamAnalyzer_analyzerQueue] = v34;
  result = sub_1D42B6F40();
  *(_QWORD *)(result + 16) = sub_1D42CB5B0;
  *(_QWORD *)(result + 24) = 0;
  if (!__OFADD__(qword_1EFEA7720, 1))
  {
    v35 = result;
    ++qword_1EFEA7720;
    v36 = v34;
    swift_retain();
    v37 = sub_1D451B7C0();
    v38 = (uint64_t *)&v10[OBJC_IVAR____SNAudioStreamAnalyzer_id];
    *v38 = v37;
    v38[1] = v39;
    swift_bridgeObjectRetain();
    v40 = sub_1D42EA30C();
    sub_1D42E4D44(v40);
    v53 = v41;
    v42 = sub_1D42EA30C();
    sub_1D42E4E5C(v42);
    v44 = v43;
    swift_bridgeObjectRelease();
    v45 = (uint64_t (*)())sub_1D42B6F40();
    *((_QWORD *)v45 + 2) = sub_1D42E9FD0;
    *((_QWORD *)v45 + 3) = v53;
    *((_QWORD *)v45 + 4) = sub_1D42E9EC8;
    *((_QWORD *)v45 + 5) = v44;
    v46 = (uint64_t (**)())&v10[OBJC_IVAR____SNAudioStreamAnalyzer_unregisterLogCollectHook];
    *v46 = sub_1D42E9E44;
    v46[1] = v45;
    type metadata accessor for AudioStreamAnalyzer();
    sub_1D42B6F40();
    v47 = v32;
    swift_retain();
    sub_1D42EA410();
    *(_QWORD *)&v10[OBJC_IVAR____SNAudioStreamAnalyzer_combineAnalyzer] = sub_1D4443AE0(v47);

    v58.receiver = v10;
    v58.super_class = ObjectType;
    v27 = objc_msgSendSuper2(&v58, sel_init);
    swift_release();
    swift_release();
    swift_release();

    v48 = sub_1D42B6F40();
    sub_1D42EA214();
    sub_1D42B8E84();
    *(_QWORD *)(v35 + 16) = sub_1D42E9E7C;
    *(_QWORD *)(v35 + 24) = v48;
    swift_release();
    sub_1D42EA1BC();
    return (uint64_t)v27;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D42E4CE4(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;

  swift_beginAccess();
  v2 = *(uint64_t (**)(uint64_t))(a1 + 16);
  v3 = swift_retain();
  v4 = v2(v3);
  swift_release();
  return v4;
}

#error "1D42E4DF8: call analysis failed (funcsize=60)"

#error "1D42E4F10: call analysis failed (funcsize=60)"

uint64_t sub_1D42E4F74(uint64_t a1)
{
  uint64_t v1;

  v1 = a1 + 16;
  swift_beginAccess();
  return MEMORY[0x1D825E608](v1);
}

void sub_1D42E4FB4(uint64_t (*a1)(void))
{
  uint64_t v1;
  char *v2;
  uint64_t inited;
  char *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  uint64_t v21;

  v1 = a1();
  if (!v1)
    goto LABEL_15;
  v2 = (char *)v1;
  if ((sub_1D42E53C0() & 1) == 0)
  {

LABEL_15:
    sub_1D451A5E4();
    return;
  }
  sub_1D42B28FC((uint64_t *)&unk_1EFE4A580);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D45261D0;
  sub_1D451B3B8();
  v4 = &v2[OBJC_IVAR____SNAudioStreamAnalyzer_requests];
  swift_beginAccess();
  v5 = *(_QWORD *)v4;
  if (!(v5 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
      goto LABEL_5;
LABEL_17:
    swift_bridgeObjectRelease();
    v8 = MEMORY[0x1E0DEE9D8];
LABEL_18:
    *(_QWORD *)(inited + 96) = sub_1D42B28FC((uint64_t *)&unk_1EFE51A80);
    *(_QWORD *)(inited + 72) = v8;
    sub_1D451A5E4();

    return;
  }
  swift_bridgeObjectRetain();
  v6 = sub_1D451B5A4();
  if (!v6)
    goto LABEL_17;
LABEL_5:
  v18 = inited;
  v19 = v2;
  v21 = MEMORY[0x1E0DEE9D8];
  sub_1D42C71F0();
  if ((v6 & 0x8000000000000000) == 0)
  {
    v7 = 0;
    v8 = v21;
    v20 = v5 & 0xC000000000000001;
    v9 = v5;
    v10 = v6;
    do
    {
      if (v20)
      {
        v11 = (void *)MEMORY[0x1D825CD78](v7, v5);
      }
      else
      {
        v11 = *(void **)(v5 + 8 * v7 + 32);
        swift_unknownObjectRetain();
      }
      v12 = objc_msgSend(v11, sel_description);
      v13 = sub_1D451A6EC();
      v15 = v14;
      swift_unknownObjectRelease();

      v16 = *(_QWORD *)(v21 + 16);
      if (v16 >= *(_QWORD *)(v21 + 24) >> 1)
        sub_1D42C71F0();
      ++v7;
      *(_QWORD *)(v21 + 16) = v16 + 1;
      v17 = v21 + 16 * v16;
      *(_QWORD *)(v17 + 32) = v13;
      *(_QWORD *)(v17 + 40) = v15;
      v5 = v9;
    }
    while (v10 != v7);
    swift_bridgeObjectRelease();
    v2 = v19;
    inited = v18;
    goto LABEL_18;
  }
  __break(1u);
}

uint64_t sub_1D42E5268(uint64_t (*a1)(void))
{
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  _OWORD v8[2];

  v2 = a1();
  if (!v2)
    return sub_1D451A5E4();
  v3 = (void *)v2;
  if ((sub_1D42E53C0() & 1) == 0)
  {

    return sub_1D451A5E4();
  }
  swift_beginAccess();
  v4 = swift_bridgeObjectRetain();
  sub_1D430DD50(v4, v8);
  if (v1)
  {

    swift_bridgeObjectRelease();
    memset(v8, 0, sizeof(v8));
    sub_1D42D7018((uint64_t)v8, &qword_1EFE47160);
LABEL_9:
    v6 = sub_1D451A5E4();
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  sub_1D42B28FC(&qword_1EFE4A590);
  if (!swift_dynamicCast())
    goto LABEL_9;
  v6 = v7;
LABEL_10:

  return v6;
}

uint64_t sub_1D42E53C0()
{
  if (qword_1EFE472D0 != -1)
    swift_once();
  if (byte_1EFEA7718 != 1)
    return 0;
  if (qword_1EFE478B8 != -1)
    swift_once();
  return byte_1EFEA7A60;
}

#error "1D42E5498: call analysis failed (funcsize=60)"

uint64_t sub_1D42E5614(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  _BYTE v8[24];
  uint64_t v9;

  v3 = sub_1D42B28B4(a1, (uint64_t)v8);
  if (!v9)
    goto LABEL_7;
  sub_1D42B28FC((uint64_t *)&unk_1EFE47320);
  if ((sub_1D42EA22C() & 1) == 0)
    goto LABEL_8;
  sub_1D42B28B4(a2, (uint64_t)v8);
  if (!v9)
  {
    v3 = sub_1D42B6EC4();
LABEL_7:
    sub_1D42EA440(v3, &qword_1EFE47160, v4, v5);
    goto LABEL_8;
  }
  sub_1D42B28FC(&qword_1EFE47A30);
  if ((sub_1D42EA22C() & 1) != 0)
  {
    sub_1D42E5708(v7);
    sub_1D42B6EC4();
    return swift_unknownObjectRelease();
  }
  sub_1D42B6EC4();
LABEL_8:
  sub_1D42E9D4C();
  sub_1D42B6D0C();
  return swift_willThrow();
}

uint64_t sub_1D42E5708(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v2 = sub_1D42B6F40();
  swift_unknownObjectWeakInit();
  v3 = sub_1D42B6F40();
  sub_1D42EA214();
  v4 = (_QWORD *)sub_1D42B6F40();
  v4[2] = v3;
  v4[3] = a1;
  v4[4] = v2;
  v5 = sub_1D42B6F40();
  *(_QWORD *)(v5 + 16) = v2;
  *(_QWORD *)(v5 + 24) = a1;
  sub_1D42EA484();
  swift_retain_n();
  sub_1D42EA340();
  sub_1D42E5C64();
  swift_release();
  sub_1D42EA1BC();
  sub_1D42E3F48();
  return sub_1D42EA438();
}

void *sub_1D42E5904(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *result;
  void *v11;
  id v12;
  void *v13;

  v6 = a2 + 16;
  v7 = a4 + 16;
  swift_beginAccess();
  v8 = MEMORY[0x1D825E608](v6);
  if (v8)
  {
    v9 = (void *)v8;
    sub_1D42E5A2C();

  }
  swift_beginAccess();
  result = (void *)MEMORY[0x1D825E608](v7);
  if (result)
  {
    v11 = result;
    if (a1)
    {
      if ((objc_msgSend(result, sel_respondsToSelector_, sel_request_didFailWithError_) & 1) != 0)
      {
        v12 = a1;
        swift_unknownObjectRetain();
        v13 = (void *)sub_1D4519A98();
        objc_msgSend(v11, sel_request_didFailWithError_, a3, v13);
        swift_unknownObjectRelease();

      }
    }
    else if ((objc_msgSend(result, sel_respondsToSelector_, sel_requestDidComplete_) & 1) != 0)
    {
      objc_msgSend(v11, sel_requestDidComplete_, a3);
    }
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

void sub_1D42E5A2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;

  sub_1D42CB740();
  v3 = v0;
  v5 = v4;
  sub_1D451A44C();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v7);
  v14 = sub_1D42EA154();
  v8 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  sub_1D42D7108();
  v9 = *(void **)(v3 + OBJC_IVAR____SNAudioStreamAnalyzer_analyzerQueue);
  v10 = sub_1D42B6F40();
  swift_unknownObjectWeakInit();
  v11 = sub_1D42B6F40();
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v5;
  v12 = sub_1D42EA51C((uint64_t)sub_1D444D4E8);
  v13 = v9;
  sub_1D42EA340();
  sub_1D42EA350();
  sub_1D451A464();
  sub_1D42B4EF4(qword_1EFE4A4B0, v6, MEMORY[0x1E0DEF510]);
  sub_1D42B28FC((uint64_t *)&unk_1EFE4B310);
  sub_1D42E9DC0((unint64_t *)&qword_1EFE4A4C0, (uint64_t *)&unk_1EFE4B310);
  sub_1D451B2EC();
  MEMORY[0x1D825C904](0, v2, v1, v12);
  _Block_release(v12);

  sub_1D42EA294();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v2, v14);
  sub_1D42EA1BC();
  swift_release();
  sub_1D42CB520();
}

void *sub_1D42E5BF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void *result;

  v5 = a2 + 16;
  swift_beginAccess();
  result = (void *)MEMORY[0x1D825E608](v5);
  if (result)
  {
    objc_msgSend(result, sel_request_didProduceResult_, a3, a1);
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

void sub_1D42E5C64()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + OBJC_IVAR____SNAudioStreamAnalyzer_analyzerQueue);
  sub_1D451AFBC();

}

id sub_1D42E5CD4(uint64_t a1, void (*a2)(void *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  sub_1D42B8E84();
  swift_unknownObjectRetain();
  v10 = sub_1D42CB6CC();
  v11 = sub_1D42E4090(v10, a1);
  sub_1D42B7204();
  swift_unknownObjectRelease();
  if (v11)
    sub_1D42E5FC8(a1);
  v26 = a1;
  swift_unknownObjectRetain();
  sub_1D42B28FC((uint64_t *)&unk_1EFE47320);
  sub_1D42B28FC(qword_1EFE47670);
  v12 = swift_dynamicCast();
  if ((_DWORD)v12)
  {
    v22 = a5;
    v15 = *((_QWORD *)&v24 + 1);
    v16 = v25;
    sub_1D42B5528(&v23, *((uint64_t *)&v24 + 1));
    v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v15, v16);
    v19 = v18;
    sub_1D42B5400((uint64_t)&v23);
    ObjectType = swift_getObjectType();
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v19 + 24))(ObjectType, v19) & 1) != 0)
    {
      sub_1D4444510(v17, v19, a2, a3, a4, v22);
      return (id)swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
    a5 = v22;
  }
  else
  {
    v25 = 0;
    v23 = 0u;
    v24 = 0u;
    sub_1D42EA440(v12, (uint64_t *)&unk_1EFE4A4C8, v13, v14);
  }
  return sub_1D42E613C(a1, (uint64_t)a2, a3, a4, a5);
}

void sub_1D42E5FC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21[3];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = (unint64_t *)(v1 + OBJC_IVAR____SNAudioStreamAnalyzer_requests);
  sub_1D42EA144();
  sub_1D42EA378();
  v5 = sub_1D42E8F40(v4, a1);
  sub_1D42EA324();
  if (v6)
  {
    sub_1D42D71EC();
    v2 = sub_1D42EA20C();
    sub_1D42CB5C8();
  }
  else
  {
    sub_1D42EA42C();
  }
  if (v2 < v5)
  {
    __break(1u);
  }
  else
  {
    sub_1D42E93C4();
    swift_endAccess();
    v20 = a1;
    sub_1D42EA378();
    sub_1D42B28FC((uint64_t *)&unk_1EFE47320);
    sub_1D42B28FC(qword_1EFE47670);
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_1D42E33E0(&v17, (uint64_t)v21);
      v7 = v22;
      v8 = v23;
      sub_1D42B5528(v21, v22);
      v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
      sub_1D444471C(v9);
      swift_unknownObjectRelease();
      sub_1D42B5400((uint64_t)v21);
    }
    else
    {
      v19 = 0;
      v17 = 0u;
      v18 = 0u;
      sub_1D42D7018((uint64_t)&v17, (uint64_t *)&unk_1EFE4A4C8);
    }
    sub_1D42E69E8(a1, v10, v11, v12, v13, v14, v15, v16, v17, *((uint64_t *)&v17 + 1), v18, *((uint64_t *)&v18 + 1), v19, v20, v21[0], v21[1], v21[2], v22, v23,
      v24,
      v25,
      v26,
      v27,
      v28);
  }
}

id sub_1D42E613C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  id result;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v18;

  v10 = sub_1D42B6F40();
  sub_1D42EA214();
  v11 = (_QWORD *)sub_1D42B6F40();
  v11[2] = v10;
  v11[3] = a1;
  v11[4] = a2;
  v11[5] = a3;
  v12 = sub_1D42B6F40();
  swift_unknownObjectWeakInit();
  v13 = (_QWORD *)sub_1D42B6F40();
  v13[2] = v12;
  v13[3] = a1;
  v13[4] = a4;
  v13[5] = a5;
  sub_1D42EA484();
  swift_retain();
  sub_1D42EA340();
  sub_1D42EA410();
  swift_retain();
  swift_retain();
  sub_1D430E830(a1, (uint64_t)sub_1D42E969C, (unint64_t)v11, (uint64_t)sub_1D42E96D8, (uint64_t)v13);
  sub_1D42E3F48();
  sub_1D42EA1BC();
  sub_1D42EA438();
  swift_release();
  result = (id)swift_release();
  if (!v18)
  {
    v15 = (_QWORD *)(v5 + OBJC_IVAR____SNAudioStreamAnalyzer_requests);
    sub_1D42B8E84();
    v16 = sub_1D42EA378();
    MEMORY[0x1D825C238](v16);
    sub_1D43A24D4(*(_QWORD *)((*v15 & 0xFFFFFFFFFFFFF8) + 0x10));
    sub_1D451A9E0();
    sub_1D451A950();
    swift_endAccess();
    return sub_1D42E62EC();
  }
  return result;
}

id sub_1D42E62EC()
{
  uint64_t v0;
  unint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  void *v4;
  double v5;
  double v6;
  CMTimeEpoch v7;
  double Seconds;
  unint64_t v9;
  void *v10;
  uint64_t v11;
  id result;
  id v13;
  CMTime time;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v1 = (unint64_t *)(v0 + OBJC_IVAR____SNAudioStreamAnalyzer_requests);
  sub_1D42B8E84();
  v2 = *v1;
  v3 = OBJC_IVAR____SNAudioStreamAnalyzer_currentFormat;
  v4 = *(void **)(v0 + OBJC_IVAR____SNAudioStreamAnalyzer_currentFormat);
  sub_1D42D71EC();
  objc_msgSend(v4, sel_sampleRate);
  v6 = v5;
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____SNAudioStreamAnalyzer_firstPassRecordingHistoryDuration + 16);
  time.value = *(_QWORD *)(v0 + OBJC_IVAR____SNAudioStreamAnalyzer_firstPassRecordingHistoryDuration);
  *(_QWORD *)&time.timescale = *(_QWORD *)(v0 + OBJC_IVAR____SNAudioStreamAnalyzer_firstPassRecordingHistoryDuration + 8);
  time.epoch = v7;
  Seconds = CMTimeGetSeconds(&time);
  v9 = sub_1D42E42E0(v2, v6, Seconds);
  swift_bridgeObjectRelease();
  if ((v9 & 0x8000000000000000) != 0 || HIDWORD(v9))
  {
    sub_1D42DCED4();
    result = (id)sub_1D451B550();
    __break(1u);
  }
  else
  {
    v10 = *(void **)(v0 + OBJC_IVAR____SNAudioStreamAnalyzer_ringBuffer);
    v11 = *(_QWORD *)(v0 + v3);
    time.value = 0;
    if (objc_msgSend(v10, sel_resizeWithFormat_newCapacityFrames_error_, v11, v9, &time))
    {
      return (id)time.value;
    }
    else
    {
      v13 = (id)time.value;
      sub_1D42EA4A4();

      return (id)swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_1D42E64AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  void *v12;
  CMTimeValue *v13;
  uint64_t v14;
  CMTimeEpoch v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  CMTimeValue v20;
  uint64_t v21;
  CMTimeEpoch v22;
  uint64_t v23;
  CMTimeValue v24;
  uint64_t v25;
  CMTimeEpoch v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  CMTimeValue v30;
  char v31;
  id v32;

  type metadata accessor for SNDetectionResult();
  result = swift_dynamicCastClass();
  if (result)
  {
    v5 = *(void **)(v2 + OBJC_IVAR____SNAudioStreamAnalyzer_firstPassRecordingPredicate);
    if (v5)
    {
      v6 = (void *)result;
      sub_1D42E3CDC();
      v32 = v5;
      v31 = objc_msgSend(v32, sel_evaluateWithObject_, v6);
      v7 = a2;
      v8 = *(void **)(v2 + OBJC_IVAR____SNAudioStreamAnalyzer_currentFormat);
      v28 = OBJC_IVAR____SNAudioStreamAnalyzer_firstPassUltronReportOps;
      v9 = *(_QWORD *)(v2 + OBJC_IVAR____SNAudioStreamAnalyzer_firstPassUltronReportOps);
      v10 = (uint64_t *)(v2 + OBJC_IVAR____SNAudioStreamAnalyzer_firstPassResultsHistory);
      swift_beginAccess();
      v11 = *v10;
      v12 = *(void **)(v2 + OBJC_IVAR____SNAudioStreamAnalyzer_ringBuffer);
      v13 = (CMTimeValue *)(v2 + OBJC_IVAR____SNAudioStreamAnalyzer_firstPassRecordingHistoryDuration);
      v29 = v10;
      v30 = *(_QWORD *)(v2 + OBJC_IVAR____SNAudioStreamAnalyzer_firstPassRecordingHistoryDuration);
      v14 = *(_QWORD *)(v2 + OBJC_IVAR____SNAudioStreamAnalyzer_firstPassRecordingHistoryDuration + 8);
      v15 = *(_QWORD *)(v2 + OBJC_IVAR____SNAudioStreamAnalyzer_firstPassRecordingHistoryDuration + 16);
      v16 = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v17 = v12;
      v18 = sub_1D448DB4C(v7, (uint64_t)v16, v9, v31, (uint64_t)v6, v11, v17, v30, v14, v15);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      *(_QWORD *)(v2 + v28) = v18;
      swift_bridgeObjectRelease();
      v19 = *v29;
      v20 = *v13;
      v21 = v13[1];
      v22 = v13[2];
      v23 = v2 + OBJC_IVAR____SNAudioStreamAnalyzer_sysdiagnoseHistoryDuration;
      v24 = *(_QWORD *)(v2 + OBJC_IVAR____SNAudioStreamAnalyzer_sysdiagnoseHistoryDuration);
      v25 = *(_QWORD *)(v23 + 8);
      v26 = *(_QWORD *)(v23 + 16);
      sub_1D42E3CDC();
      swift_bridgeObjectRetain();
      v27 = sub_1D42E98E0(v6, v7, v19, v20, v21, v22, v24, v25, v26);
      swift_bridgeObjectRelease();

      swift_unknownObjectRelease_n();
      *v29 = v27;
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_1D42E66CC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v6 = a2 + 16;
  swift_beginAccess();
  v7 = MEMORY[0x1D825E608](v6);
  if (v7)
  {
    v8 = (void *)v7;
    sub_1D42E5A2C();
    a4(a1);

  }
}

void sub_1D42E6750(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v7 = a2 + 16;
  swift_beginAccess();
  v8 = MEMORY[0x1D825E608](v7);
  if (v8)
  {
    v9 = (void *)v8;
    sub_1D42E64AC(a1, a3);
    a4(a1);

  }
}

void sub_1D42E67D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _BYTE v11[24];
  uint64_t v12;

  sub_1D42B28B4(a1, (uint64_t)v11);
  if (v12)
  {
    v1 = sub_1D42B28FC((uint64_t *)&unk_1EFE47320);
    sub_1D42EA358(v1, v2, v3, v1, v4, v5, v6, v7, v8, v9);
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_1D42E6858(v10);
      swift_unknownObjectRelease();
    }
  }
  else
  {
    sub_1D42D7018((uint64_t)v11, &qword_1EFE47160);
  }
}

#error "1D42E68E8: call analysis failed (funcsize=50)"

void sub_1D42E69B0(void (*a1)(void))
{
  a1();
  sub_1D42B6E24();
}

void sub_1D42E69CC(uint64_t a1)
{
  (*(void (**)(void))(a1 + 32))();
  sub_1D42B6E24();
}

void sub_1D42E69E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t ObjectType, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  unint64_t *v35;
  int64_t v36;
  uint64_t v37;
  id v38;

  sub_1D42EA1A4();
  a23 = v25;
  a24 = v26;
  v27 = v24;
  v29 = v28;
  sub_1D42BE934();
  sub_1D430EC9C(v29);
  sub_1D42B8F48();
  v30 = OBJC_IVAR____SNAudioStreamAnalyzer_firstPassUltronReportOps;
  v31 = *(_QWORD *)(v24 + OBJC_IVAR____SNAudioStreamAnalyzer_firstPassUltronReportOps);
  sub_1D42CB6CC();
  v32 = sub_1D448DEA4(v29, v31);
  sub_1D42B7204();
  *(_QWORD *)(v27 + v30) = v32;
  v33 = swift_bridgeObjectRelease();
  sub_1D42EA3E0(v33, (unint64_t *)&qword_1EFE47310);
  ObjectType = swift_getObjectType();
  a11 = v29;
  sub_1D42E3CDC();
  v34 = sub_1D42E6C50(&a11);
  v35 = (unint64_t *)(v27 + OBJC_IVAR____SNAudioStreamAnalyzer_requests);
  sub_1D42EA144();
  sub_1D42E3CDC();
  v36 = sub_1D42E8F40(v35, v29);
  if (*v35 >> 62)
  {
    swift_bridgeObjectRetain();
    v37 = sub_1D42EA348();
    swift_bridgeObjectRelease();
  }
  else
  {
    v37 = *(_QWORD *)((*v35 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v37 < v36)
  {
    __break(1u);
  }
  else
  {
    sub_1D42E93C4();
    swift_endAccess();
    sub_1D42EA144();
    v38 = v34;
    sub_1D42E7C54();
    swift_endAccess();

    sub_1D42B7204();
    sub_1D42E62EC();

    sub_1D42EA08C();
  }
}

void sub_1D42E6BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1D825E608](v3);
  if (v4)
  {
    v5 = (void *)v4;
    sub_1D42E5FC8(a2);

  }
}

id sub_1D42E6C50(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v2 = a1[3];
  if (v2)
  {
    v4 = sub_1D42B5528(a1, a1[3]);
    v5 = *(_QWORD *)(v2 - 8);
    MEMORY[0x1E0C80A78](v4);
    sub_1D42D7108();
    (*(void (**)(uint64_t))(v5 + 16))(v1);
    v6 = sub_1D451B814();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v2);
    sub_1D42B5400((uint64_t)a1);
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_valueWithNonretainedObject_, v6);
  swift_unknownObjectRelease();
  return v7;
}

void sub_1D42E6D30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  sub_1D42CB740();
  sub_1D451A44C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v6);
  sub_1D42EA154();
  sub_1D42EA490();
  MEMORY[0x1E0C80A78](v7);
  sub_1D42D7108();
  v8 = *(void **)(v0 + OBJC_IVAR____SNAudioStreamAnalyzer_analyzerQueue);
  *(_QWORD *)(sub_1D42B6F40() + 16) = v0;
  v9 = sub_1D42EA51C((uint64_t)sub_1D444D4E8);
  v10 = v8;
  sub_1D42EA47C();
  sub_1D451A464();
  sub_1D42B4EF4(qword_1EFE4A4B0, v5, MEMORY[0x1E0DEF510]);
  sub_1D42B28FC((uint64_t *)&unk_1EFE4B310);
  sub_1D42E9DC0((unint64_t *)&qword_1EFE4A4C0, (uint64_t *)&unk_1EFE4B310);
  sub_1D451B2EC();
  MEMORY[0x1D825C904](0, v3, v1, v9);
  _Block_release(v9);

  sub_1D42EA294();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
  swift_release();
  sub_1D42CB520();
}

uint64_t sub_1D42E6EB0(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  uint64_t v6;

  v1 = (unint64_t *)(a1 + OBJC_IVAR____SNAudioStreamAnalyzer_requests);
  swift_beginAccess();
  v2 = *v1;
  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
LABEL_9:
    swift_bridgeObjectRelease();
    return sub_1D44447F0();
  }
  swift_bridgeObjectRetain();
  result = sub_1D451B5A4();
  v3 = result;
  if (!result)
    goto LABEL_9;
LABEL_3:
  if (v3 >= 1)
  {
    for (i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        v6 = MEMORY[0x1D825CD78](i, v2);
      }
      else
      {
        v6 = *(_QWORD *)(v2 + 8 * i + 32);
        swift_unknownObjectRetain();
      }
      sub_1D42E5FC8(v6);
      swift_unknownObjectRelease();
    }
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

void sub_1D42E6FF0(void *a1)
{
  id v1;

  if (a1)
  {
    v1 = a1;
    sub_1D42E703C();

  }
}

void sub_1D42E703C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v2 = *(id *)(v0 + OBJC_IVAR____SNAudioStreamAnalyzer_analyzerQueue);
  sub_1D42EA4C8();

  if (v1)
  {
    sub_1D42E7208(v1);
    sub_1D42D71D8();
  }
}

void sub_1D42E7114(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;

  v3 = MEMORY[0x1D825DB34]();
  v4 = *(_QWORD *)&v1[OBJC_IVAR____SNAudioStreamAnalyzer_receivedBufferCount];
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
  {
    __break(1u);
  }
  else
  {
    v7 = (void *)v3;
    *(_QWORD *)&v1[OBJC_IVAR____SNAudioStreamAnalyzer_receivedBufferCount] = v6;
    sub_1D42B28FC(&qword_1EFE47330);
    v8 = sub_1D42B6F40();
    v9 = MEMORY[0x1E0DEB418];
    *(_OWORD *)(v8 + 16) = xmmword_1D45261D0;
    v10 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v8 + 56) = v9;
    *(_QWORD *)(v8 + 64) = v10;
    *(_QWORD *)(v8 + 32) = v1;
    sub_1D451A704();
    v11 = v1;
    v12 = a1;
    sub_1D43E7104();
    swift_bridgeObjectRelease();
    objc_autoreleasePoolPop(v7);
  }
}

#error "1D42E7298: call analysis failed (funcsize=51)"

#error "1D42E7380: call analysis failed (funcsize=157)"

void sub_1D42E7564()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  NSObject *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(void **)&v0[OBJC_IVAR____SNAudioStreamAnalyzer_analyzerQueue];
  v2 = sub_1D42B6F40();
  *(_QWORD *)(v2 + 16) = v0;
  v3 = sub_1D42B6F40();
  *(_QWORD *)(v3 + 16) = sub_1D42E9CEC;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = sub_1D42EA0BC((uint64_t)sub_1D42E69CC, MEMORY[0x1E0C809B0], 1107296256, v7, v8);
  v5 = v1;
  v6 = v0;
  sub_1D42B8F24();
  sub_1D42BE998();
  dispatch_sync(v5, v4);

  _Block_release(v4);
  sub_1D42EA254();
  sub_1D42EA240();
  sub_1D42CFC14();
  if ((v0 & 1) != 0)
    __break(1u);
  else
    sub_1D42EA500();
}

uint64_t sub_1D42E7668()
{
  swift_retain();
  sub_1D430F340();
  swift_release();
  return sub_1D444491C();
}

uint64_t sub_1D42E773C()
{
  uint64_t v0;
  id v1;
  uint64_t v3;

  v1 = *(id *)(v0 + OBJC_IVAR____SNAudioStreamAnalyzer_analyzerQueue);
  sub_1D42EA4C8();

  return v3;
}

uint64_t sub_1D42E779C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  swift_retain();
  v2 = sub_1D430F610();
  v4 = v3;
  result = swift_release();
  *a1 = v2;
  a1[1] = v4;
  return result;
}

uint64_t sub_1D42E77FC()
{
  swift_retain();
  sub_1D430F664();
  return swift_release();
}

void sub_1D42E7838()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for _SNAudioStreamAnalyzer()
{
  return objc_opt_self();
}

uint64_t sub_1D42E7890(uint64_t a1)
{
  return sub_1D42E5708(a1);
}

uint64_t sub_1D42E78B0(uint64_t a1)
{
  return sub_1D42E6858(a1);
}

void sub_1D42E78D0()
{
  sub_1D42E6D30();
}

uint64_t sub_1D42E78F0()
{
  uint64_t v0;

  sub_1D42EA3B0();
  return swift_deallocObject();
}

uint64_t sub_1D42E790C()
{
  uint64_t v0;

  return sub_1D42E6EB0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1D42E7914(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D42E7924()
{
  return swift_release();
}

uint64_t sub_1D42E792C()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t v12;

  v1 = objc_msgSend(v0, sel_impl);
  sub_1D451B208();
  swift_unknownObjectRelease();
  v2 = type metadata accessor for _SNAudioStreamAnalyzer();
  sub_1D42EA358(v2, v3, v4, v2, v5, v6, v7, v8, v10, v11);
  swift_dynamicCast();
  return v12;
}

uint64_t sub_1D42E7998(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (a1 >> 62)
  {
LABEL_13:
    sub_1D42DCE84();
    v4 = sub_1D42EA3D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v5 = 0;
  if (v4)
  {
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v6 = MEMORY[0x1D825CD78](v5, a1);
      }
      else
      {
        v6 = *(_QWORD *)(a1 + 8 * v5 + 32);
        sub_1D42EA350();
      }
      swift_unknownObjectRelease();
      if (v6 == a2)
        break;
      v7 = v5 + 1;
      if (__OFADD__(v5, 1))
      {
        __break(1u);
        goto LABEL_13;
      }
      ++v5;
      if (v7 == v4)
      {
        v5 = 0;
        break;
      }
    }
  }
  swift_unknownObjectRelease();
  return v5;
}

id sub_1D42E7A84(void *a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v5;
  id v6;
  id v7;
  id v9[2];

  v3 = v2;
  v9[1] = *(id *)MEMORY[0x1E0C80C00];
  v9[0] = 0;
  v5 = objc_msgSend(v3, sel_initWithFormat_capacityFrames_error_, a1, a2, v9);
  if (v5)
  {
    v6 = v9[0];
  }
  else
  {
    v7 = v9[0];
    sub_1D4519AA4();

    swift_willThrow();
  }

  return v5;
}

void sub_1D42E7B4C()
{
  unint64_t v0;
  char v1;
  char v2;
  uint64_t v3;
  uint64_t v4;

  sub_1D42EA078();
  sub_1D42DCE84();
  v0 = sub_1D4366C98();
  v2 = v1;
  swift_bridgeObjectRelease();
  if ((v2 & 1) != 0)
  {
    sub_1D42EA3D0();
    sub_1D42EA4D4();
    sub_1D42B28FC((uint64_t *)&unk_1EFE4A4E0);
    sub_1D451B52C();

    sub_1D42EA3E0(v3, (unint64_t *)&qword_1EFE47310);
    sub_1D42E9570();
    sub_1D451B544();
    sub_1D42EA4F4();
  }
  sub_1D42EA18C();
}

uint64_t sub_1D42E7C54()
{
  uint64_t *v0;
  uint64_t *v1;
  unint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v7;

  v1 = v0;
  swift_bridgeObjectRetain();
  v2 = sub_1D4366C98();
  v4 = v3;
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0)
    return 0;
  swift_isUniquelyReferenced_nonNull_native();
  v7 = *v1;
  *v1 = 0x8000000000000000;
  sub_1D42B28FC(&qword_1EFE4A4D8);
  sub_1D451B52C();

  v5 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v2);
  sub_1D42E9D88(0, (unint64_t *)&qword_1EFE47310);
  sub_1D42B28FC((uint64_t *)&unk_1EFE479E0);
  sub_1D42E9570();
  sub_1D451B544();
  *v1 = v7;
  swift_bridgeObjectRelease();
  return v5;
}

void sub_1D42E7D70(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  unint64_t v4;
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;

  v4 = sub_1D4366CC4(a1);
  if ((v5 & 1) != 0)
  {
    v6 = v4;
    swift_isUniquelyReferenced_nonNull_native();
    v14 = *v2;
    *v2 = 0x8000000000000000;
    sub_1D42B28FC(&qword_1EFE4A568);
    sub_1D42EA274();
    v7 = *(_QWORD *)(v14 + 56) + 48 * v6;
    v9 = *(_QWORD *)v7;
    v8 = *(_QWORD *)(v7 + 8);
    v10 = *(_QWORD *)(v7 + 16);
    v11 = *(_QWORD *)(v7 + 24);
    v12 = *(_QWORD *)(v7 + 32);
    v13 = *(_DWORD *)(v7 + 40);
    sub_1D42B28FC(&qword_1EFE4A570);
    sub_1D451B544();
    sub_1D42EA4B0();
  }
  else
  {
    v8 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    v9 = 1;
  }
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v8;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v11;
  *(_QWORD *)(a2 + 32) = v12;
  *(_DWORD *)(a2 + 40) = v13;
  sub_1D42EA500();
}

void sub_1D42E7E78()
{
  sub_1D42E7F98();
}

uint64_t sub_1D42E7E8C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v8;

  sub_1D42D71EC();
  v4 = sub_1D4366B34(a1, a2);
  LOBYTE(a1) = v5;
  sub_1D42CB5C8();
  if ((a1 & 1) == 0)
    return 0;
  sub_1D42EA3D0();
  sub_1D42EA4D4();
  sub_1D42B28FC(&qword_1EFE4A598);
  sub_1D42EA274();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v4);
  sub_1D451B544();
  sub_1D42EA4E8();
  return v6;
}

void sub_1D42E7F70()
{
  sub_1D42E7F98();
}

void sub_1D42E7F84()
{
  sub_1D42E7F98();
}

void sub_1D42E7F98()
{
  uint64_t *v0;
  uint64_t *v1;
  unint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;

  sub_1D42EA078();
  v1 = v0;
  swift_bridgeObjectRetain();
  v2 = sub_1D4366CF4();
  v4 = v3;
  swift_bridgeObjectRelease();
  if ((v4 & 1) != 0)
  {
    sub_1D42EA3D0();
    sub_1D42EA104();
    sub_1D42EA2C4();
    v5 = *(_QWORD *)(v8 + 48);
    v6 = sub_1D42EA2A8();
    v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5 + *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72) * v2, v6);
    sub_1D42B28FC(v1);
    sub_1D42B4EF4((unint64_t *)&qword_1EFE4A518, v7, MEMORY[0x1E0CB09C8]);
    sub_1D451B544();
    sub_1D42EA4F4();
  }
  sub_1D42EA18C();
}

void sub_1D42E809C()
{
  sub_1D42E80C4();
}

void sub_1D42E80B0()
{
  sub_1D42E80C4();
}

void sub_1D42E80C4()
{
  void (*v0)(_QWORD);
  void (*v1)(_QWORD);
  uint64_t v2;
  char v3;

  sub_1D42EA078();
  v1 = v0;
  sub_1D4366D80(v2);
  if ((v3 & 1) != 0)
  {
    sub_1D42EA3D0();
    sub_1D42EA104();
    sub_1D42EA2C4();
    swift_bridgeObjectRelease();
    v1(0);
    sub_1D42E9CB0();
    sub_1D451B544();
    sub_1D42EA4E8();
  }
  sub_1D42EA18C();
}

void sub_1D42E8160()
{
  uint64_t *v0;
  unint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;

  sub_1D42EA078();
  sub_1D42CB6CC();
  v1 = sub_1D4366CF4();
  v3 = v2;
  sub_1D42B7204();
  if ((v3 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    v7 = *v0;
    *v0 = 0x8000000000000000;
    sub_1D42B28FC(&qword_1EFE4A538);
    sub_1D42EA274();
    v4 = *(_QWORD *)(v7 + 48);
    v5 = sub_1D42EA2A8();
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4 + *(_QWORD *)(*(_QWORD *)(v5 - 8) + 72) * v1, v5);
    sub_1D42B4EF4((unint64_t *)&qword_1EFE4A518, v6, MEMORY[0x1E0CB09C8]);
    sub_1D451B544();
    sub_1D42EA4B0();
  }
  sub_1D42EA18C();
}

void sub_1D42E826C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD **v3;
  char v6;
  unint64_t v7;
  char v8;
  char v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  _QWORD *v14;
  uint64_t *v15;

  v6 = a3 & 1;
  sub_1D4366C68(a3 & 1);
  sub_1D42EA028();
  if (v9)
  {
    __break(1u);
    goto LABEL_9;
  }
  v10 = v7;
  v11 = v8;
  sub_1D42B28FC(&qword_1EFE40368);
  if ((sub_1D42EA0C8() & 1) == 0)
    goto LABEL_5;
  v12 = sub_1D4366C68(v6);
  if ((v11 & 1) != (v13 & 1))
  {
LABEL_9:
    sub_1D451B8BC();
    __break(1u);
    return;
  }
  v10 = v12;
LABEL_5:
  v14 = *v3;
  if ((v11 & 1) != 0)
  {
    v15 = (uint64_t *)(v14[7] + 16 * v10);
    swift_release();
    *v15 = a1;
    v15[1] = a2;
    sub_1D42CB0F8();
  }
  else
  {
    sub_1D42E8BE0(v10, v6, a1, a2, v14);
  }
}

id sub_1D42E8348(uint64_t a1, void *a2)
{
  _QWORD *v2;
  _QWORD **v3;
  _QWORD *v5;
  unint64_t v6;
  char v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  id result;

  v3 = (_QWORD **)v2;
  v5 = (_QWORD *)*v2;
  v6 = sub_1D4366C98();
  if (__OFADD__(v5[2], (v7 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v8 = v6;
  v9 = v7;
  sub_1D42B28FC(&qword_1EFE4A4D8);
  if ((sub_1D451B52C() & 1) == 0)
    goto LABEL_5;
  v10 = sub_1D4366C98();
  if ((v9 & 1) != (v11 & 1))
  {
LABEL_9:
    sub_1D42E9D88(0, (unint64_t *)&qword_1EFE47310);
    result = (id)sub_1D451B8BC();
    __break(1u);
    return result;
  }
  v8 = v10;
LABEL_5:
  v12 = *v3;
  if ((v9 & 1) != 0)
  {
    v13 = v12[7];
    result = (id)swift_bridgeObjectRelease();
    *(_QWORD *)(v13 + 8 * v8) = a1;
  }
  else
  {
    sub_1D42E8C2C(v8, (uint64_t)a2, a1, v12);
    return a2;
  }
  return result;
}

void sub_1D42E845C()
{
  _QWORD **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  unint64_t v11;
  char v12;
  char v13;
  _QWORD *v14;
  uint64_t *v15;
  id v16;
  id v17;
  uint64_t v18;

  sub_1D42EA078();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v18 = v7;
  sub_1D4366C98();
  sub_1D42EA028();
  if (v10)
  {
    __break(1u);
LABEL_10:
    sub_1D42EA3E0(v8, (unint64_t *)&qword_1EFE47310);
    sub_1D451B8BC();
    __break(1u);
    return;
  }
  v11 = v8;
  v12 = v9;
  sub_1D42B28FC((uint64_t *)&unk_1EFE4A4E0);
  if ((sub_1D42EA0C8() & 1) != 0)
  {
    sub_1D4366C98();
    sub_1D42EA1C4();
    if (!v13)
      goto LABEL_10;
    v11 = v8;
  }
  v14 = *v0;
  if ((v12 & 1) != 0)
  {
    v15 = (uint64_t *)(v14[7] + 24 * v11);
    swift_release();
    sub_1D42BE998();
    sub_1D42B8F48();
    *v15 = v6;
    v15[1] = v4;
    v15[2] = v2;
    sub_1D42EA18C();
  }
  else
  {
    sub_1D42E8C70(v11, v18, v6, v4, v2, v14);
    sub_1D42EA18C();
    v17 = v16;
  }
}

void sub_1D42E8568()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  char v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t *v17;

  sub_1D42CB740();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  sub_1D42EA390(v7, v5, v3, v1);
  sub_1D42EA028();
  if (v11)
  {
    __break(1u);
LABEL_10:
    sub_1D451B8BC();
    __break(1u);
    return;
  }
  v12 = v9;
  v13 = v10;
  sub_1D42B28FC(&qword_1EFE40370);
  if ((sub_1D42EA1D4() & 1) != 0)
  {
    sub_1D4366B34(v4, v2);
    sub_1D42EA1C4();
    if (!v15)
      goto LABEL_10;
    v12 = v14;
  }
  v16 = *v0;
  if ((v13 & 1) != 0)
  {
    v17 = (uint64_t *)(*(_QWORD *)(v16 + 56) + 16 * v12);
    swift_bridgeObjectRelease();
    *v17 = v8;
    v17[1] = v6;
    sub_1D42CB520();
  }
  else
  {
    sub_1D42E8CC0(v12, v4, v2, v8, v6, v16);
    sub_1D42EA0A4();
  }
}

void sub_1D42E863C()
{
  sub_1D42E8744();
}

uint64_t sub_1D42E8648()
{
  _QWORD **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  unint64_t v7;
  char v8;
  char v9;
  unint64_t v10;
  char v11;
  uint64_t result;
  char v13;
  _QWORD *v14;

  sub_1D42EA078();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  sub_1D4366B34(v3, v1);
  sub_1D42EA028();
  if (v9)
  {
    __break(1u);
    goto LABEL_9;
  }
  v10 = v7;
  v11 = v8;
  sub_1D42B28FC(&qword_1EFE4A598);
  result = sub_1D42EA2D8();
  if ((result & 1) == 0)
    goto LABEL_5;
  result = sub_1D4366B34(v4, v2);
  if ((v11 & 1) != (v13 & 1))
  {
LABEL_9:
    result = sub_1D451B8BC();
    __break(1u);
    return result;
  }
  v10 = result;
LABEL_5:
  v14 = *v0;
  if ((v11 & 1) != 0)
  {
    *(double *)(v14[7] + 8 * v10) = v6;
  }
  else
  {
    sub_1D42E8D04(v10, v4, v2, v14, v6);
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1D42E8738()
{
  sub_1D42E8744();
}

void sub_1D42E8744()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  char v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;

  sub_1D42CB740();
  v2 = v1;
  v4 = v3;
  v21 = v5;
  v22 = v6;
  v7 = sub_1D42EA2A8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  sub_1D42CB210();
  v11 = v10 - v9;
  sub_1D4366CF4();
  sub_1D42EA028();
  if (v14)
  {
    __break(1u);
    goto LABEL_10;
  }
  v15 = v12;
  v16 = v13;
  sub_1D42B28FC(v2);
  if ((sub_1D42EA1D4() & 1) != 0)
  {
    v17 = sub_1D4366CF4();
    if ((v16 & 1) == (v18 & 1))
    {
      v15 = v17;
      goto LABEL_5;
    }
LABEL_10:
    sub_1D451B8BC();
    __break(1u);
    return;
  }
LABEL_5:
  v19 = *v0;
  if ((v16 & 1) != 0)
  {
    v20 = (uint64_t *)(*(_QWORD *)(v19 + 56) + 16 * v15);
    swift_release();
    *v20 = v21;
    v20[1] = v22;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v11, v4, v7);
    sub_1D42E8D4C(v15, v11, v21, v22, v19);
  }
  sub_1D42CB520();
}

void sub_1D42E885C()
{
  sub_1D42E8744();
}

void sub_1D42E8868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D42E8880(a1, a2, a3, &qword_1EFE4A550);
}

void sub_1D42E8874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D42E8880(a1, a2, a3, &qword_1EFE4A540);
}

void sub_1D42E8880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t *v4;
  unint64_t v8;
  char v9;
  char v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D4366D80(a2);
  sub_1D42EA028();
  if (v10)
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v8;
  v12 = v9;
  sub_1D42B28FC(a4);
  if ((sub_1D42EA2D8() & 1) == 0)
    goto LABEL_5;
  v13 = sub_1D4366D80(a2);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    sub_1D451B8BC();
    __break(1u);
    return;
  }
  v11 = v13;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
  {
    v16 = *(_QWORD *)(v15 + 56);
    swift_release();
    *(_QWORD *)(v16 + 8 * v11) = a1;
    sub_1D42CB0F8();
  }
  else
  {
    sub_1D42E8DD8(v11, a2, a1, v15);
    sub_1D42EA124();
  }
}

void sub_1D42E8948()
{
  _QWORD **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  char v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;

  sub_1D42CB740();
  v4 = v3;
  v6 = v5;
  sub_1D42EA2A8();
  sub_1D42EA490();
  MEMORY[0x1E0C80A78](v7);
  sub_1D42CB210();
  v10 = v9 - v8;
  sub_1D4366CF4();
  sub_1D42EA028();
  if (v13)
  {
    __break(1u);
    goto LABEL_10;
  }
  v14 = v11;
  v15 = v12;
  sub_1D42B28FC(&qword_1EFE4A538);
  if ((sub_1D451B52C() & 1) != 0)
  {
    v16 = sub_1D4366CF4();
    if ((v15 & 1) == (v17 & 1))
    {
      v14 = v16;
      goto LABEL_5;
    }
LABEL_10:
    sub_1D451B8BC();
    __break(1u);
    return;
  }
LABEL_5:
  v18 = *v0;
  if ((v15 & 1) != 0)
  {
    *(_DWORD *)(v18[7] + 4 * v14) = v6;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v10, v4, v1);
    sub_1D42E8E14(v14, v10, v6, v18);
  }
  sub_1D42CB520();
}

void sub_1D42E8A44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD **v3;
  unint64_t v7;
  char v8;
  char v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  _QWORD *v14;
  uint64_t v15;

  sub_1D4366B34(a2, a3);
  sub_1D42EA028();
  if (v9)
  {
    __break(1u);
LABEL_10:
    sub_1D451B8BC();
    __break(1u);
    return;
  }
  v10 = v7;
  v11 = v8;
  sub_1D42B28FC(&qword_1EFE4A500);
  if ((sub_1D42EA0C8() & 1) != 0)
  {
    sub_1D4366B34(a2, a3);
    sub_1D42EA1C4();
    if (!v13)
      goto LABEL_10;
    v10 = v12;
  }
  v14 = *v3;
  if ((v11 & 1) != 0)
  {
    v15 = v14[7];
    swift_bridgeObjectRelease();
    *(_QWORD *)(v15 + 8 * v10) = a1;
    sub_1D42CB0F8();
  }
  else
  {
    sub_1D42E8EAC(v10, a2, a3, a1, v14);
    sub_1D42EA124();
  }
}

void sub_1D42E8B14()
{
  _QWORD **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  char v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  _QWORD *v16;
  uint64_t *v17;

  sub_1D42CB740();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  sub_1D42EA390(v7, v5, v3, v1);
  sub_1D42EA028();
  if (v11)
  {
    __break(1u);
LABEL_10:
    sub_1D451B8BC();
    __break(1u);
    return;
  }
  v12 = v9;
  v13 = v10;
  sub_1D42B28FC(&qword_1EFE4A530);
  if ((sub_1D42EA1D4() & 1) != 0)
  {
    sub_1D4366B34(v4, v2);
    sub_1D42EA1C4();
    if (!v15)
      goto LABEL_10;
    v12 = v14;
  }
  v16 = *v0;
  if ((v13 & 1) != 0)
  {
    v17 = (uint64_t *)(v16[7] + 16 * v12);
    *v17 = v8;
    v17[1] = v6;
    sub_1D42CB520();
  }
  else
  {
    sub_1D42E8EF4(v12, v4, v2, v8, v6, v16);
    sub_1D42EA0A4();
  }
}

unint64_t sub_1D42E8BE0(unint64_t result, char a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  *(_BYTE *)(a5[6] + result) = a2 & 1;
  v5 = (_QWORD *)(a5[7] + 16 * result);
  *v5 = a3;
  v5[1] = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

unint64_t sub_1D42E8C2C(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  a4[(result >> 6) + 8] |= 1 << result;
  *(_QWORD *)(a4[6] + 8 * result) = a2;
  *(_QWORD *)(a4[7] + 8 * result) = a3;
  v4 = a4[2];
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
    __break(1u);
  else
    a4[2] = v6;
  return result;
}

unint64_t sub_1D42E8C70(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  a6[(result >> 6) + 8] |= 1 << result;
  *(_QWORD *)(a6[6] + 8 * result) = a2;
  v6 = (_QWORD *)(a6[7] + 24 * result);
  *v6 = a3;
  v6[1] = a4;
  v6[2] = a5;
  v7 = a6[2];
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (v8)
    __break(1u);
  else
    a6[2] = v9;
  return result;
}

uint64_t sub_1D42E8CC0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  result = sub_1D42EA3E8(a1, a6 + 8 * (a1 >> 6));
  v8 = (_QWORD *)(v7[6] + 16 * result);
  *v8 = v9;
  v8[1] = v10;
  v11 = (_QWORD *)(v7[7] + 16 * result);
  *v11 = v12;
  v11[1] = v13;
  v14 = v7[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    v7[2] = v16;
  return result;
}

unint64_t sub_1D42E8D04(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4, double a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a4[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(double *)(a4[7] + 8 * result) = a5;
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

uint64_t sub_1D42E8D4C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  sub_1D42EA3E8(a1, a5 + 8 * (a1 >> 6));
  v11 = *(_QWORD *)(v10 + 48);
  v12 = sub_1D42EA2A8();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * a1, a2, v12);
  v14 = (_QWORD *)(*(_QWORD *)(a5 + 56) + 16 * a1);
  *v14 = a3;
  v14[1] = a4;
  v15 = *(_QWORD *)(a5 + 16);
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    *(_QWORD *)(a5 + 16) = v17;
  return result;
}

uint64_t sub_1D42E8DD8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  result = sub_1D42EA3E8(a1, a4 + 8 * (a1 >> 6));
  *(_QWORD *)(v5[6] + 8 * result) = v6;
  *(_QWORD *)(v5[7] + 8 * result) = v7;
  v8 = v5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    v5[2] = v10;
  return result;
}

uint64_t sub_1D42E8E14(unint64_t a1, uint64_t a2, int a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_1D4519D20();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_DWORD *)(a4[7] + 4 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

unint64_t sub_1D42E8EAC(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

unint64_t sub_1D42E8EF4(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a6[(result >> 6) + 8] |= 1 << result;
  v6 = (_QWORD *)(a6[6] + 16 * result);
  *v6 = a2;
  v6[1] = a3;
  v7 = (_QWORD *)(a6[7] + 16 * result);
  *v7 = a4;
  v7[1] = a5;
  v8 = a6[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a6[2] = v10;
  return result;
}

unint64_t sub_1D42E8F40(unint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int isUniquelyReferenced_nonNull_bridgeObject;
  int v19;
  uint64_t v21;
  unint64_t v22;

  swift_unknownObjectRetain();
  v6 = swift_bridgeObjectRetain();
  v7 = sub_1D42E7998(v6, a2);
  if (v2)
  {
    sub_1D42B6EC4();
    sub_1D42CB8F4();
  }
  else
  {
    v3 = v7;
    v9 = v8;
    sub_1D42CB8F4();
    if ((v9 & 1) != 0)
    {
      v22 = *a1;
      if (v22 >> 62)
      {
        sub_1D42CB6CC();
        v3 = sub_1D42EA3D8();
        sub_1D42B6EC4();
        sub_1D42B7204();
        return v3;
      }
      v3 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    else
    {
      v10 = v3 + 1;
      if (__OFADD__(v3, 1))
        goto LABEL_58;
      if (*a1 >> 62)
      {
LABEL_59:
        sub_1D42EA260();
        v11 = sub_1D42EA3D8();
        sub_1D42CB8F4();
      }
      else
      {
        v11 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      if (v10 != v11)
      {
        v12 = v3 + 5;
        do
        {
          v13 = v12 - 4;
          v14 = *a1;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            v15 = MEMORY[0x1D825CD78](v12 - 4);
          }
          else
          {
            if ((v13 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_49:
              __break(1u);
LABEL_50:
              __break(1u);
LABEL_51:
              __break(1u);
LABEL_52:
              __break(1u);
LABEL_53:
              __break(1u);
LABEL_54:
              __break(1u);
LABEL_55:
              __break(1u);
LABEL_56:
              __break(1u);
LABEL_57:
              __break(1u);
LABEL_58:
              __break(1u);
              goto LABEL_59;
            }
            if (v13 >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_49;
            v15 = *(_QWORD *)(v14 + 8 * v12);
            sub_1D42EA350();
          }
          swift_unknownObjectRelease();
          if (v15 != a2)
          {
            if (v13 != v3)
            {
              v10 = *a1;
              if ((*a1 & 0xC000000000000001) != 0)
              {
                v16 = MEMORY[0x1D825CD78](v3, *a1);
                v10 = *a1;
              }
              else
              {
                if ((v3 & 0x8000000000000000) != 0)
                  goto LABEL_52;
                if (v3 >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_53;
                v16 = *(_QWORD *)(v10 + 8 * v3 + 32);
                sub_1D42EA350();
              }
              if ((v10 & 0xC000000000000001) != 0)
              {
                v17 = MEMORY[0x1D825CD78](v12 - 4, v10);
                v10 = *a1;
              }
              else
              {
                if ((v13 & 0x8000000000000000) != 0)
                  goto LABEL_54;
                if (v13 >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_55;
                v17 = *(_QWORD *)(v10 + 8 * v12);
                swift_unknownObjectRetain();
              }
              isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
              *a1 = v10;
              if (!isUniquelyReferenced_nonNull_bridgeObject
                || (v10 & 0x8000000000000000) != 0
                || (v10 & 0x4000000000000000) != 0)
              {
                sub_1D43830E4(v10);
              }
              *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 8 * v3 + 0x20) = v17;
              swift_unknownObjectRelease();
              sub_1D451A950();
              v10 = *a1;
              v19 = swift_isUniquelyReferenced_nonNull_bridgeObject();
              *a1 = v10;
              if (!v19 || (v10 & 0x8000000000000000) != 0 || (v10 & 0x4000000000000000) != 0)
                sub_1D43830E4(v10);
              if ((v13 & 0x8000000000000000) != 0)
                goto LABEL_56;
              if (v13 >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_57;
              *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 8 * v12) = v16;
              swift_unknownObjectRelease();
              sub_1D451A950();
            }
            if (__OFADD__(v3++, 1))
              goto LABEL_51;
          }
          v10 = v12 - 3;
          if (__OFADD__(v13, 1))
            goto LABEL_50;
          if (*a1 >> 62)
          {
            sub_1D42EA260();
            v21 = sub_1D42EA3D8();
            sub_1D42CB8F4();
          }
          else
          {
            v21 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          ++v12;
        }
        while (v10 != v21);
      }
    }
    sub_1D42B6EC4();
  }
  return v3;
}

uint64_t sub_1D42E921C()
{
  uint64_t v0;
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  sub_1D42CB740();
  if (v6 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1D42EA418();
    if (!v7)
    {
      sub_1D42EA508();
      goto LABEL_4;
    }
  }
  sub_1D42EA064();
  sub_1D42EA338();
  sub_1D42EA138();
LABEL_4:
  if ((uint64_t)v3 < v0)
  {
    __break(1u);
    goto LABEL_28;
  }
  if (__OFSUB__(v0, v2))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v5 = v2 - v0;
  if (__OFSUB__(0, v0 - v2))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  sub_1D42EA324();
  if (!v8)
  {
    sub_1D42EA42C();
    goto LABEL_9;
  }
LABEL_30:
  sub_1D42D71EC();
  v4 = sub_1D42EA20C();
  sub_1D42CB5C8();
LABEL_9:
  if (__OFADD__(v4, v5))
  {
    __break(1u);
LABEL_32:
    sub_1D42D71EC();
    sub_1D42EA348();
    sub_1D42CB5C8();
LABEL_15:
    sub_1D42D71EC();
    sub_1D42EA1E0();
  }
  v9 = sub_1D42EA1F4();
  *v1 = v3;
  if (!v9
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0
    || (v10 = v3 & 0xFFFFFFFFFFFFFF8, v4 + v5 > *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v3 >> 62))
      goto LABEL_15;
    goto LABEL_32;
  }
  v11 = v10 + 32;
  v12 = v10 + 32 + 8 * v2;
  type metadata accessor for SNAnalyzerInfo();
  sub_1D42EA400();
  if (!v5)
    return sub_1D42EA03C();
  if (*v1 >> 62)
  {
    sub_1D42EA064();
    sub_1D42EA338();
    sub_1D42EA138();
  }
  else
  {
    sub_1D42EA508();
  }
  if (__OFSUB__(v3, v0))
  {
    __break(1u);
  }
  else
  {
    result = sub_1D42C6630(v11 + 8 * v0, v3 - v0, v12);
    if (!(*v1 >> 62))
    {
      v14 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_22;
    }
  }
  sub_1D42EA280();
  v14 = sub_1D42EA3D8();
  result = sub_1D42BE8B4();
LABEL_22:
  if (!__OFADD__(v14, v5))
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x10) = v14 + v5;
    return sub_1D42EA03C();
  }
  __break(1u);
  return result;
}

uint64_t sub_1D42E93C4()
{
  uint64_t v0;
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;

  sub_1D42CB740();
  if (v6 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1D42EA418();
    if (!v7)
    {
      sub_1D42EA508();
      goto LABEL_4;
    }
  }
  sub_1D42EA064();
  sub_1D42EA338();
  sub_1D42EA138();
LABEL_4:
  if ((uint64_t)v3 < v0)
  {
    __break(1u);
    goto LABEL_28;
  }
  if (__OFSUB__(v0, v2))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v5 = v2 - v0;
  if (__OFSUB__(0, v0 - v2))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  sub_1D42EA324();
  if (!v8)
  {
    sub_1D42EA42C();
    goto LABEL_9;
  }
LABEL_30:
  sub_1D42D71EC();
  v4 = sub_1D42EA20C();
  sub_1D42CB5C8();
LABEL_9:
  if (__OFADD__(v4, v5))
  {
    __break(1u);
LABEL_32:
    sub_1D42D71EC();
    sub_1D42EA348();
    sub_1D42CB5C8();
LABEL_15:
    sub_1D42D71EC();
    sub_1D42EA1E0();
  }
  v9 = sub_1D42EA1F4();
  *v1 = v3;
  if (!v9
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0
    || (v10 = v3 & 0xFFFFFFFFFFFFFF8, v4 + v5 > *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v3 >> 62))
      goto LABEL_15;
    goto LABEL_32;
  }
  v11 = v10 + 32;
  v12 = (char *)(v10 + 32 + 8 * v2);
  sub_1D42B28FC((uint64_t *)&unk_1EFE47320);
  sub_1D42EA400();
  if (!v5)
    return sub_1D42EA03C();
  if (*v1 >> 62)
  {
    sub_1D42EA064();
    sub_1D42EA338();
    sub_1D42EA138();
  }
  else
  {
    sub_1D42EA508();
  }
  if (__OFSUB__(v3, v0))
  {
    __break(1u);
  }
  else
  {
    result = (uint64_t)sub_1D42C6B7C((char *)(v11 + 8 * v0), v3 - v0, v12);
    if (!(*v1 >> 62))
    {
      v14 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_22;
    }
  }
  sub_1D42EA280();
  v14 = sub_1D42EA3D8();
  result = sub_1D42BE8B4();
LABEL_22:
  if (!__OFADD__(v14, v5))
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x10) = v14 + v5;
    return sub_1D42EA03C();
  }
  __break(1u);
  return result;
}

unint64_t sub_1D42E9570()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFE47318;
  if (!qword_1EFE47318)
  {
    v1 = sub_1D42E9D88(255, (unint64_t *)&qword_1EFE47310);
    result = MEMORY[0x1D825E41C](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EFE47318);
  }
  return result;
}

uint64_t sub_1D42E95C0()
{
  return sub_1D42E9C5C((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

void sub_1D42E95CC()
{
  uint64_t v0;

  sub_1D42E5FC8(*(_QWORD *)(v0 + 24));
  sub_1D42B6E24();
}

void sub_1D42E95F0()
{
  uint64_t v0;

  (*(void (**)(void))(v0 + 16))();
  sub_1D42B6E24();
}

uint64_t sub_1D42E960C()
{
  swift_unknownObjectWeakDestroy();
  sub_1D42EA3B0();
  return swift_deallocObject();
}

uint64_t sub_1D42E9628()
{
  sub_1D42EA528();
  sub_1D42EA514();
  swift_release();
  return swift_deallocObject();
}

void *sub_1D42E9654(void *a1)
{
  uint64_t *v1;

  return sub_1D42E5904(a1, v1[2], v1[3], v1[4]);
}

void *sub_1D42E9664(uint64_t a1)
{
  uint64_t v1;

  return sub_1D42E5BF0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

id sub_1D42E966C()
{
  uint64_t v0;

  return sub_1D42E5CD4(*(_QWORD *)(v0 + 24), *(void (**)(void *))(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

void sub_1D42E969C(uint64_t a1)
{
  uint64_t v1;

  sub_1D42E66CC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(uint64_t))(v1 + 32));
}

uint64_t sub_1D42E96AC()
{
  sub_1D42EA528();
  sub_1D42EA514();
  swift_release();
  return swift_deallocObject();
}

void sub_1D42E96D8(uint64_t a1)
{
  uint64_t v1;

  sub_1D42E6750(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(uint64_t))(v1 + 32));
}

uint64_t sub_1D42E96E4()
{
  uint64_t v0;
  unint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;

  sub_1D42CB740();
  if (v7 < 0)
  {
    __break(1u);
  }
  else
  {
    v0 = v9;
    v2 = v8;
    v3 = v7;
    sub_1D42EA324();
    if (!v10)
    {
      sub_1D42EA42C();
      goto LABEL_4;
    }
  }
  sub_1D42D71EC();
  v5 = sub_1D42EA20C();
  sub_1D42CB5C8();
LABEL_4:
  if (v5 < v2)
  {
    __break(1u);
    goto LABEL_32;
  }
  v11 = v2 - v3;
  if (__OFSUB__(v2, v3))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v6 = 1 - v11;
  if (__OFSUB__(1, v11))
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  sub_1D42EA324();
  if (!v12)
  {
    v13 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_9;
  }
LABEL_34:
  sub_1D42D71EC();
  v13 = sub_1D42EA348();
  sub_1D42CB5C8();
LABEL_9:
  v14 = v13 + v6;
  if (__OFADD__(v13, v6))
  {
    __break(1u);
LABEL_36:
    sub_1D42D71EC();
    v17 = sub_1D451B5A4();
    sub_1D42CB5C8();
    goto LABEL_17;
  }
  v15 = sub_1D42EA1F4();
  *v1 = v4;
  v13 = 0;
  if ((_DWORD)v15 && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v16 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v14 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_20;
    v13 = 1;
  }
  if (v4 >> 62)
    goto LABEL_36;
  v17 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_17:
  if (v17 <= v14)
    v17 = v14;
  sub_1D42D71EC();
  v4 = MEMORY[0x1D825CD84](v13, v17, 1, v4);
  v15 = swift_bridgeObjectRelease();
  *v1 = v4;
  v16 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_20:
  v18 = (_QWORD *)(v16 + 32 + 8 * v3);
  sub_1D42EA3E0(v15, (unint64_t *)&qword_1EFE404B0);
  swift_arrayDestroy();
  if (!v6)
  {
LABEL_28:
    *v18 = v0;
    return sub_1D42EA03C();
  }
  if (v4 >> 62)
  {
    sub_1D42D71EC();
    v19 = sub_1D42EA20C();
    sub_1D42CB5C8();
  }
  else
  {
    v19 = *(_QWORD *)(v16 + 16);
  }
  if (__OFSUB__(v19, v2))
  {
    __break(1u);
  }
  else
  {
    result = sub_1D42C6630(v16 + 32 + 8 * v2, v19 - v2, v18 + 1);
    if (!(v4 >> 62))
    {
      v21 = *(_QWORD *)(v16 + 16);
      goto LABEL_26;
    }
  }
  sub_1D42D71EC();
  v21 = sub_1D42EA3D8();
  result = sub_1D42CB5C8();
LABEL_26:
  if (!__OFADD__(v21, v6))
  {
    *(_QWORD *)(v16 + 16) = v21 + v6;
    goto LABEL_28;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D42E98E0(void *a1, uint64_t a2, uint64_t a3, CMTimeValue a4, uint64_t a5, CMTimeEpoch a6, CMTimeValue a7, uint64_t a8, CMTimeEpoch a9)
{
  uint64_t v13;
  CMTime time2;
  CMTime time1;

  time2.epoch = a6;
  time1.value = a7;
  *(_QWORD *)&time1.timescale = a8;
  time1.epoch = a9;
  time2.value = a4;
  *(_QWORD *)&time2.timescale = a5;
  CMTimeCompare(&time1, &time2);
  objc_msgSend(a1, sel_timeRange, a3);
  sub_1D451AEE4();
  sub_1D451B070();
  return sub_1D42E99F4(a1, a2, v13);
}

uint64_t sub_1D42E99F4(void *a1, uint64_t a2, uint64_t a3)
{
  id v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  _QWORD v13[4];

  sub_1D42E9D88(0, (unint64_t *)&qword_1EFE47310);
  v13[3] = swift_getObjectType();
  v13[0] = a2;
  swift_unknownObjectRetain();
  v6 = sub_1D42E6C50(v13);
  sub_1D4364944((uint64_t)v6, a3);
  v8 = v7;

  if (!v8)
    v8 = MEMORY[0x1E0DEE9D8];
  v9 = sub_1D42E9B14(a1, v8);
  swift_bridgeObjectRelease();
  v10 = v6;
  swift_bridgeObjectRetain();
  swift_isUniquelyReferenced_nonNull_native();
  v13[0] = a3;
  sub_1D42E8348(v9, v10);
  v11 = v13[0];

  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1D42E9B14(void *a1, unint64_t a2)
{
  unint64_t inited;
  uint64_t v5;

  sub_1D42B28FC(&qword_1EFE40410);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D4525300;
  objc_msgSend(a1, sel_copy);
  sub_1D451B208();
  swift_unknownObjectRelease();
  sub_1D42B28FC((uint64_t *)&unk_1EFE4A4F0);
  swift_dynamicCast();
  sub_1D451A950();
  swift_bridgeObjectRetain();
  sub_1D44B4EB8(inited);
  v5 = sub_1D430E15C(a2);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1D42E9C2C()
{
  sub_1D42EA528();
  sub_1D42EA514();
  sub_1D42EA3A0();
  return swift_deallocObject();
}

void sub_1D42E9C48()
{
  uint64_t v0;

  sub_1D42E6BF8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1D42E9C50()
{
  return sub_1D42E9C5C((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_1D42E9C5C(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 24));
  sub_1D42EA3A0();
  return swift_deallocObject();
}

uint64_t sub_1D42E9C8C()
{
  return sub_1D42E77FC();
}

uint64_t sub_1D42E9C98@<X0>(uint64_t *a1@<X8>)
{
  return sub_1D42E779C(a1);
}

unint64_t sub_1D42E9CB0()
{
  unint64_t result;

  result = qword_1EFE4A548;
  if (!qword_1EFE4A548)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452D470, &unk_1E97AC9A8);
    atomic_store(result, (unint64_t *)&qword_1EFE4A548);
  }
  return result;
}

uint64_t sub_1D42E9CEC()
{
  return sub_1D42E7668();
}

void sub_1D42E9CF8()
{
  uint64_t v0;

  sub_1D42E7114(*(void **)(v0 + 24));
}

uint64_t sub_1D42E9D20()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  sub_1D42EA3B0();
  return swift_deallocObject();
}

void sub_1D42E9D3C(uint64_t a1)
{
  uint64_t v1;

  sub_1D44C34D8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1D42E9D44(uint64_t a1)
{
  uint64_t v1;

  return sub_1D430C670(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1D42E9D4C()
{
  unint64_t result;

  result = qword_1EFE4A578;
  if (!qword_1EFE4A578)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4526DE4, &type metadata for _SNAudioStreamAnalyzer.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4A578);
  }
  return result;
}

uint64_t sub_1D42E9D88(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_1D42E9DC0(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = sub_1D42B8B10(a2);
    atomic_store(MEMORY[0x1D825E41C](MEMORY[0x1E0DEAF38], v3), a1);
  }
  sub_1D42B6E24();
}

uint64_t sub_1D42E9DFC()
{
  sub_1D42B8F98();
  sub_1D42EA3A0();
  return swift_deallocObject();
}

uint64_t sub_1D42E9E14()
{
  uint64_t v0;

  return sub_1D42E4CE4(v0);
}

uint64_t sub_1D42E9E1C()
{
  sub_1D42B8F98();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D42E9E44()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(uint64_t (**)(uint64_t))(v0 + 32);
  v2 = (*(uint64_t (**)(void))(v0 + 16))();
  return v1(v2);
}

uint64_t sub_1D42E9E7C()
{
  uint64_t v0;

  return sub_1D42E4F74(v0);
}

uint64_t sub_1D42E9E84()
{
  sub_1D42B8F98();
  return swift_deallocObject();
}

void sub_1D42E9EA4()
{
  uint64_t v0;

  sub_1D42E4FB4(*(uint64_t (**)(void))(v0 + 16));
}

void sub_1D42E9EC0()
{
  sub_1D43E7534();
}

uint64_t sub_1D42E9EC8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_1D42E9ED4()
{
  uint64_t v0;

  return sub_1D42E5268(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t storeEnumTagSinglePayload for _SNAudioStreamAnalyzer.DomainError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D42E9F30 + 4 * byte_1D4526CE0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D42E9F50 + 4 * byte_1D4526CE5[v4]))();
}

_BYTE *sub_1D42E9F30(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D42E9F50(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D42E9F58(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D42E9F60(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D42E9F68(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D42E9F70(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for _SNAudioStreamAnalyzer.DomainError()
{
  return &type metadata for _SNAudioStreamAnalyzer.DomainError;
}

unint64_t sub_1D42E9F90()
{
  unint64_t result;

  result = qword_1EFE4A5A0;
  if (!qword_1EFE4A5A0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4526DBC, &type metadata for _SNAudioStreamAnalyzer.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4A5A0);
  }
  return result;
}

uint64_t sub_1D42EA03C()
{
  return sub_1D451A950();
}

uint64_t sub_1D42EA054()
{
  return swift_deallocObject();
}

uint64_t sub_1D42EA064()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D42EA0A4()
{
  return swift_bridgeObjectRetain();
}

void *sub_1D42EA0BC@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  a4 = a1;
  a5 = v5;
  return _Block_copy(&a2);
}

uint64_t sub_1D42EA0C8()
{
  return sub_1D451B52C();
}

uint64_t sub_1D42EA104()
{
  _QWORD *v0;
  uint64_t *v1;

  *v0 = 0x8000000000000000;
  return sub_1D42B28FC(v1);
}

uint64_t sub_1D42EA124()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D42EA138()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42EA144()
{
  return swift_beginAccess();
}

uint64_t sub_1D42EA154()
{
  return sub_1D451A470();
}

uint64_t sub_1D42EA170()
{
  return sub_1D451A794();
}

uint64_t sub_1D42EA1BC()
{
  return swift_release();
}

uint64_t sub_1D42EA1D4()
{
  return sub_1D451B52C();
}

void sub_1D42EA1E0()
{
  JUMPOUT(0x1D825CD84);
}

uint64_t sub_1D42EA1F4()
{
  return swift_isUniquelyReferenced_nonNull_bridgeObject();
}

uint64_t sub_1D42EA200()
{
  return swift_deallocPartialClassInstance();
}

uint64_t sub_1D42EA20C()
{
  return sub_1D451B5A4();
}

uint64_t sub_1D42EA214()
{
  return swift_unknownObjectWeakInit();
}

id sub_1D42EA220()
{
  uint64_t v0;
  void *v1;

  return objc_msgSend(v1, (SEL)(v0 + 3862));
}

uint64_t sub_1D42EA22C()
{
  return swift_dynamicCast();
}

uint64_t sub_1D42EA240()
{
  return swift_release();
}

void sub_1D42EA24C(uint64_t a1@<X8>)
{
  uint64_t v1;

}

uint64_t sub_1D42EA254()
{
  return swift_isEscapingClosureAtFileLocation();
}

uint64_t sub_1D42EA260()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D42EA274()
{
  return sub_1D451B52C();
}

uint64_t sub_1D42EA280()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D42EA294()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 144) + 8))(v1, v0);
}

uint64_t sub_1D42EA2A8()
{
  return sub_1D4519D20();
}

uint64_t sub_1D42EA2B0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  a1[2] = v3;
  a1[3] = v1;
  a1[4] = v2;
  return swift_retain();
}

uint64_t sub_1D42EA2C4()
{
  return sub_1D451B52C();
}

uint64_t sub_1D42EA2D8()
{
  return sub_1D451B52C();
}

uint64_t sub_1D42EA2EC()
{
  return sub_1D451A794();
}

uint64_t sub_1D42EA2FC()
{
  return sub_1D451A5E4();
}

uint64_t sub_1D42EA30C()
{
  uint64_t v0;

  return v0;
}

void sub_1D42EA330()
{
  const void *v0;

  _Block_release(v0);
}

uint64_t sub_1D42EA338()
{
  return sub_1D451B5A4();
}

uint64_t sub_1D42EA340()
{
  return swift_retain();
}

uint64_t sub_1D42EA348()
{
  return sub_1D451B5A4();
}

uint64_t sub_1D42EA350()
{
  return swift_unknownObjectRetain();
}

char *sub_1D42EA358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  return &a10;
}

id sub_1D42EA368()
{
  void *v0;
  uint64_t v1;
  void *v2;

  return sub_1D45017F4(v1, v0, v2);
}

uint64_t sub_1D42EA378()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1D42EA380()
{
  return sub_1D451A6C8();
}

unint64_t sub_1D42EA390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D4366B34(a3, a4);
}

uint64_t sub_1D42EA3A0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D42EA3B0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D42EA3C0(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42EA3D0()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_1D42EA3D8()
{
  return sub_1D451B5A4();
}

uint64_t sub_1D42EA3E0(uint64_t a1, unint64_t *a2)
{
  return sub_1D42E9D88(0, a2);
}

uint64_t sub_1D42EA3E8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 + 64) |= 1 << result;
  return result;
}

uint64_t sub_1D42EA400()
{
  return swift_arrayDestroy();
}

uint64_t sub_1D42EA410()
{
  return swift_retain();
}

uint64_t sub_1D42EA438()
{
  return swift_release();
}

void sub_1D42EA440(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_1D42D7018((uint64_t)va, a2);
}

id sub_1D42EA448()
{
  void *v0;

  return v0;
}

void sub_1D42EA454()
{
  void *v0;
  NSObject *v1;

  dispatch_sync(v1, v0);
}

void sub_1D42EA460(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = v5 + v3;
  *(_QWORD *)v6 = v4;
  *(_DWORD *)(v6 + 8) = a1;
  *(_DWORD *)(v6 + 12) = v1;
  *(_QWORD *)(v6 + 16) = v2;
}

uint64_t sub_1D42EA474()
{
  return swift_bridgeObjectRelease();
}

id sub_1D42EA47C()
{
  void *v0;

  return v0;
}

uint64_t sub_1D42EA484()
{
  return swift_unknownObjectRetain_n();
}

uint64_t sub_1D42EA4A4()
{
  return sub_1D4519AA4();
}

uint64_t sub_1D42EA4B0()
{
  uint64_t v0;
  _QWORD *v1;

  *v1 = v0;
  return swift_bridgeObjectRelease();
}

CMTime *sub_1D42EA4BC(Float64 a1)
{
  uint64_t v1;

  return CMTimeMakeWithSeconds((CMTime *)(v1 - 120), a1, 10000);
}

uint64_t sub_1D42EA4C8()
{
  return sub_1D451AFBC();
}

void sub_1D42EA4D4()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
}

uint64_t sub_1D42EA4E8()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = v1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42EA4F4()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = v1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42EA514()
{
  return swift_unknownObjectRelease();
}

void *sub_1D42EA51C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 112) = a1;
  *(_QWORD *)(v2 - 104) = v1;
  return _Block_copy((const void *)(v2 - 128));
}

uint64_t sub_1D42EA528()
{
  return swift_release();
}

uint64_t sub_1D42EA530()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B988();
  sub_1D42D71EC();
  sub_1D451A74C();
  swift_bridgeObjectRelease();
  sub_1D451B970();
  if (!v1)
    return sub_1D451B970();
  sub_1D451B970();
  sub_1D42CB7B8();
  sub_1D451A74C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42EA65C(double *a1, double *a2)
{
  double v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t result;
  char v20;
  _QWORD v22[2];
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  __int128 v27;
  uint64_t v28;
  uint64_t v29;

  v2 = *a1;
  v3 = *((_QWORD *)a1 + 5);
  v4 = a1[6];
  v5 = *((_QWORD *)a1 + 7);
  v6 = *((_QWORD *)a1 + 8);
  v7 = *((unsigned __int8 *)a1 + 72);
  v8 = *((_QWORD *)a1 + 10);
  v9 = *((_QWORD *)a1 + 11);
  v10 = *a2;
  v11 = a2[6];
  v12 = *((_QWORD *)a2 + 7);
  v13 = *((_QWORD *)a2 + 8);
  v14 = *((unsigned __int8 *)a2 + 72);
  v16 = *((_QWORD *)a2 + 10);
  v15 = *((_QWORD *)a2 + 11);
  v25 = *((_QWORD *)a2 + 5);
  *(double *)v26 = v2;
  *(double *)&v26[1] = a1[1];
  v27 = *((_OWORD *)a1 + 1);
  v28 = *((_QWORD *)a1 + 4);
  v29 = v3;
  *(double *)v22 = v10;
  *(double *)&v22[1] = a2[1];
  v23 = *((_OWORD *)a2 + 1);
  v24 = *((_QWORD *)a2 + 4);
  v17 = static TimeRange.== infix(_:_:)((uint64_t)v26, (uint64_t)v22);
  result = 0;
  if (v17 && v4 == v11)
  {
    if (v5 == v12 && v6 == v13)
    {
      if (v7 != v14)
        return 0;
    }
    else
    {
      sub_1D42F20C0();
      v20 = sub_1D42F1F04();
      result = 0;
      if ((v20 & 1) == 0 || ((v7 ^ v14) & 1) != 0)
        return result;
    }
    if (v9)
    {
      if (v15)
      {
        if (v8 == v16 && v9 == v15)
          return 1;
        sub_1D42F1F54();
        if ((sub_1D42F1F04() & 1) != 0)
          return 1;
      }
    }
    else if (!v15)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1D42EA7A4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v9;

  v2 = a1 == 0x676E6152656D6974 && a2 == 0xE900000000000065;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6E656469666E6F63 && a2 == 0xEA00000000006563;
    if (v6 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
      if (v7 || (sub_1D451B820() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6465746365746564 && a2 == 0xE800000000000000;
        if (v8 || (sub_1D451B820() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000012 && a2 == 0x80000001D4551A80)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v9 = sub_1D451B820();
          swift_bridgeObjectRelease();
          if ((v9 & 1) != 0)
            return 4;
          else
            return 5;
        }
      }
    }
  }
}

uint64_t sub_1D42EA9CC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D42EAA04 + 4 * byte_1D4526E30[a1]))(0x676E6152656D6974, 0xE900000000000065);
}

uint64_t sub_1D42EAA04()
{
  return 0x6E656469666E6F63;
}

uint64_t sub_1D42EAA20()
{
  return 0x696669746E656469;
}

uint64_t sub_1D42EAA40()
{
  return 0x6465746365746564;
}

unint64_t sub_1D42EAA58()
{
  return 0xD000000000000012;
}

void sub_1D42EAA74(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(sub_1D42B28FC((uint64_t *)&unk_1EFE4A6F8) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v3);
  sub_1D42CB18C();
  sub_1D42B5528(a1, a1[3]);
  sub_1D42F0FF0();
  sub_1D42CB10C();
  sub_1D42CA408();
  sub_1D451B760();
  if (!v5)
  {
    sub_1D451B73C();
    sub_1D451B724();
    sub_1D451B730();
    sub_1D42F1F88();
    sub_1D451B700();
  }
  sub_1D42F1FA0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_1D42F1F94();
}

void sub_1D42EAC5C()
{
  sub_1D42F1D4C();
  sub_1D451B958();
  sub_1D42F20FC();
  sub_1D42CB230();
  sub_1D42BE928();
}

uint64_t sub_1D42EAC88@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v5 = sub_1D42B28FC(&qword_1EFE4A6E0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1D42CB210();
  v9 = v8 - v7;
  sub_1D42B5528(a1, a1[3]);
  sub_1D42F0FF0();
  sub_1D451BA0C();
  if (v2)
  {
    sub_1D42BE944();
  }
  else
  {
    sub_1D42CA3CC();
    sub_1D451B688();
    sub_1D42F1DCC();
    sub_1D451B664();
    v11 = v10;
    sub_1D42F1DCC();
    v13 = sub_1D451B64C();
    v15 = v14;
    swift_bridgeObjectRetain();
    sub_1D42F1DCC();
    v21 = sub_1D451B658();
    sub_1D42F1DCC();
    v16 = sub_1D451B628();
    v18 = v17;
    v19 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    v20 = v16;
    sub_1D42CB44C(v9, v19);
    sub_1D42CB6CC();
    swift_bridgeObjectRelease();
    *(_QWORD *)a2 = v22;
    *(_QWORD *)(a2 + 8) = v23;
    *(_QWORD *)(a2 + 16) = v24;
    *(_QWORD *)(a2 + 24) = v25;
    *(_QWORD *)(a2 + 32) = v26;
    *(_QWORD *)(a2 + 40) = v27;
    *(_QWORD *)(a2 + 48) = v11;
    *(_QWORD *)(a2 + 56) = v13;
    *(_QWORD *)(a2 + 64) = v15;
    *(_BYTE *)(a2 + 72) = v21 & 1;
    *(_QWORD *)(a2 + 80) = v20;
    *(_QWORD *)(a2 + 88) = v18;
    sub_1D42BE944();
    sub_1D42B7204();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42EAEF4()
{
  unsigned __int8 *v0;

  return sub_1D42EA9CC(*v0);
}

uint64_t sub_1D42EAEFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D42EA7A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D42EAF20()
{
  sub_1D42F0FF0();
  return sub_1D451BA3C();
}

uint64_t sub_1D42EAF48()
{
  sub_1D42F0FF0();
  return sub_1D451BA48();
}

void sub_1D42EAF78()
{
  sub_1D42F1D4C();
  sub_1D451B958();
  sub_1D42F20FC();
  sub_1D42CB230();
  sub_1D42BE928();
}

uint64_t sub_1D42EAFA0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D42EAC88(a1, a2);
}

void sub_1D42EAFB4(_QWORD *a1)
{
  sub_1D42EAA74(a1);
}

void sub_1D42EAFCC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  int v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v1 = *(void **)v0;
  v2 = *(void **)(v0 + 8);
  v3 = *(unsigned __int8 *)(v0 + 16);
  v4 = *(void **)(v0 + 40);
  if (*(_BYTE *)(v0 + 16))
  {
    sub_1D42F1E9C();
    if (v3 == 1)
    {
      sub_1D42D71EC();
      sub_1D451A74C();
    }
    else
    {
      sub_1D42F2040(v1);
      sub_1D451B964();
    }
  }
  else
  {
    sub_1D42F1E9C();
    v5 = v2;
    sub_1D451A74C();
    swift_bridgeObjectRelease();
    sub_1D42F2040(v5);
    sub_1D42F1E9C();
    v6 = (void *)sub_1D42F2034();
    sub_1D42B62C8(v6, v7, 0);
  }
  v8 = (void *)sub_1D42F2034();
  sub_1D42B62C8(v8, v9, v3);
  sub_1D42CB7B8();
  sub_1D451A74C();
  swift_bridgeObjectRelease();
  v10 = v4;
  sub_1D42F2040(v10);
  sub_1D42F1E9C();

}

id sub_1D42EB120(__int128 *a1, __int128 *a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  id result;
  __int128 v13;
  char v14;
  __int128 v15;
  char v16;

  v2 = *((_BYTE *)a1 + 16);
  v3 = *((_QWORD *)a1 + 3);
  v4 = *((_QWORD *)a1 + 4);
  v5 = (void *)*((_QWORD *)a1 + 5);
  v6 = *((_BYTE *)a2 + 16);
  v7 = *((_QWORD *)a2 + 3);
  v8 = *((_QWORD *)a2 + 4);
  v9 = *((_QWORD *)a2 + 5);
  v15 = *a1;
  v16 = v2;
  v13 = *a2;
  v14 = v6;
  if ((sub_1D4336790((uint64_t)&v15, (uint64_t)&v13) & 1) == 0)
    return 0;
  if (v3 == v7 && v4 == v8)
    return objc_msgSend(v5, sel_isEqual_, v9);
  v11 = sub_1D42F1F04();
  result = 0;
  if ((v11 & 1) != 0)
    return objc_msgSend(v5, sel_isEqual_, v9);
  return result;
}

uint64_t sub_1D42EB1D8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v7;

  v2 = a1 == 0x726F746365746564 && a2 == 0xEF746E6169726156;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x656449646E756F73 && a2 == 0xEF7265696669746ELL;
    if (v6 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x80000001D4551820)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = sub_1D451B820();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1D42EB36C(char a1)
{
  if (!a1)
    return 0x726F746365746564;
  if (a1 == 1)
    return 0x656449646E756F73;
  return 0xD000000000000012;
}

void sub_1D42EB3E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  sub_1D42BE910();
  v2 = sub_1D42B28FC(&qword_1EFE4A740);
  v6 = *(_QWORD *)(v2 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v3);
  sub_1D42CB18C();
  v4 = (_QWORD *)sub_1D42F1F88();
  sub_1D42B5528(v4, v5);
  sub_1D42F102C();
  sub_1D451BA24();
  sub_1D42F10A4();
  sub_1D451B760();
  if (!v0)
  {
    sub_1D42F1FA8();
    sub_1D42B28FC(&qword_1EFE4A720);
    sub_1D42F10E0(&qword_1EFE4A750, MEMORY[0x1E0DEA970], (uint64_t)&protocol conformance descriptor for <> RawRepresentableWrapper<A>);
    sub_1D42F1FBC();
    sub_1D42CB068();
    sub_1D42B28FC(&qword_1EFE4A730);
    sub_1D42F1168((unint64_t *)&unk_1EFE4A758, &qword_1EFE4A730, (uint64_t)&unk_1D45471DC);
    sub_1D42F1FBC();
    sub_1D42CB068();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v2);
  sub_1D42F1F94();
  sub_1D42BE844();
}

uint64_t sub_1D42EB57C()
{
  sub_1D42BE9A8();
  sub_1D42EAFCC();
  return sub_1D42CB230();
}

void sub_1D42EB5D0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  char v15;

  sub_1D42BE910();
  v2 = v1;
  v4 = v3;
  v5 = sub_1D42B28FC(&qword_1EFE4A708);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1D42CB210();
  v9 = v8 - v7;
  sub_1D42B5528(v2, v2[3]);
  sub_1D42F102C();
  sub_1D42F1FF8();
  if (v0)
  {
    sub_1D42BE944();
  }
  else
  {
    sub_1D42F1068();
    sub_1D42F2110();
    sub_1D42B28FC(&qword_1EFE4A720);
    sub_1D42F1FA8();
    sub_1D42B633C(v13, v14, v15);
    sub_1D42F10E0(&qword_1EFE4A728, MEMORY[0x1E0DEA9A0], (uint64_t)&protocol conformance descriptor for <> RawRepresentableWrapper<A>);
    sub_1D42F2110();
    sub_1D42B28FC(&qword_1EFE4A730);
    sub_1D42F1168(&qword_1EFE4A738, &qword_1EFE4A730, (uint64_t)&unk_1D4547204);
    sub_1D42CB6CC();
    sub_1D451B688();
    sub_1D42CB44C(v9, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    v10 = (void *)sub_1D42F1F88();
    sub_1D42B633C(v10, v11, v15);
    v12 = v13;
    sub_1D42F1DFC(v13);
    *(_QWORD *)v4 = v13;
    *(_QWORD *)(v4 + 8) = v14;
    *(_BYTE *)(v4 + 16) = v15;
    *(_QWORD *)(v4 + 24) = v13;
    *(_QWORD *)(v4 + 32) = v14;
    *(_QWORD *)(v4 + 40) = v12;
    sub_1D42BE944();
    sub_1D42F1DFC(v13);

    swift_bridgeObjectRelease();
  }
  sub_1D42F1F94();
  sub_1D42BE844();
}

uint64_t sub_1D42EB864()
{
  sub_1D42EAFCC();
  return AudioConfiguration.hash(into:)();
}

uint64_t sub_1D42EB94C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  char v10;
  __int128 v11;
  char v12;
  char v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;
  uint64_t v46;
  char v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  uint64_t v58;
  char v59;

  v2 = *(_QWORD *)(a1 + 24);
  v34 = *(_QWORD *)(a1 + 56);
  v35 = *(_QWORD *)(a1 + 48);
  v32 = *(_QWORD *)(a1 + 72);
  v33 = *(_QWORD *)(a1 + 64);
  v30 = *(_QWORD *)(a1 + 88);
  v31 = *(_QWORD *)(a1 + 80);
  v28 = *(_BYTE *)(a1 + 97);
  v29 = *(_BYTE *)(a1 + 96);
  v26 = *(_BYTE *)(a1 + 99);
  v27 = *(_BYTE *)(a1 + 98);
  v24 = *(_BYTE *)(a1 + 101);
  v25 = *(_BYTE *)(a1 + 100);
  v23 = *(_QWORD *)(a1 + 104);
  v22 = *(_BYTE *)(a1 + 112);
  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  v20 = *(_QWORD *)(a2 + 56);
  v21 = *(_QWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 80);
  v18 = *(_QWORD *)(a2 + 72);
  v19 = *(_QWORD *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 88);
  v7 = *(_BYTE *)(a2 + 96);
  v8 = *(_BYTE *)(a2 + 97);
  LOBYTE(v49) = *(_BYTE *)(a1 + 16);
  v9 = *(_BYTE *)(a2 + 98);
  v50 = v2;
  v10 = *(_BYTE *)(a2 + 99);
  v48 = *(_OWORD *)a1;
  v11 = *(_OWORD *)(a1 + 32);
  v12 = *(_BYTE *)(a2 + 100);
  LOBYTE(v37) = v3;
  v13 = *(_BYTE *)(a2 + 101);
  v38 = v4;
  v14 = *(_QWORD *)(a2 + 104);
  v51 = v11;
  v36 = *(_OWORD *)a2;
  v15 = *(_BYTE *)(a2 + 112);
  v39 = *(_OWORD *)(a2 + 32);
  if ((sub_1D42EB120(&v48, &v36) & 1) != 0)
  {
    *(_QWORD *)&v48 = v35;
    *((_QWORD *)&v48 + 1) = v34;
    v49 = v33;
    v50 = v32;
    *(_QWORD *)&v51 = v31;
    *((_QWORD *)&v51 + 1) = v30;
    v52 = v29;
    v53 = v28;
    v54 = v27;
    v55 = v26;
    v56 = v25;
    v57 = v24;
    v58 = v23;
    v59 = v22;
    *(_QWORD *)&v36 = v21;
    *((_QWORD *)&v36 + 1) = v20;
    v37 = v19;
    v38 = v18;
    *(_QWORD *)&v39 = v5;
    *((_QWORD *)&v39 + 1) = v6;
    v40 = v7;
    v41 = v8;
    v42 = v9;
    v43 = v10;
    v44 = v12;
    v45 = v13;
    v46 = v14;
    v47 = v15;
    v16 = static AudioConfiguration.== infix(_:_:)((uint64_t)&v48, (uint64_t)&v36);
  }
  else
  {
    v16 = 0;
  }
  return v16 & 1;
}

uint64_t sub_1D42EBB28(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D4551AA0 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D4551AC0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1D42EBC10(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000012;
  else
    return 0xD00000000000001ALL;
}

void sub_1D42EBC4C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D42BE910();
  v3 = v2;
  v5 = *(_QWORD *)(sub_1D42B28FC(&qword_1EFE4A7F8) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v4);
  sub_1D42CB18C();
  sub_1D42B5528(v3, v3[3]);
  sub_1D42F1B28();
  sub_1D42CB10C();
  sub_1D42B6254();
  sub_1D451B760();
  if (!v0)
  {
    sub_1D42F1FA8();
    sub_1D42B5ACC();
    sub_1D42CB068();
  }
  sub_1D42F1FA0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_1D42F1F94();
  sub_1D42BE844();
}

uint64_t sub_1D42EBE34()
{
  sub_1D451B958();
  sub_1D42EAFCC();
  AudioConfiguration.hash(into:)();
  return sub_1D451B994();
}

void sub_1D42EBF48()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  uint64_t v24;
  char v25;
  char v26;

  sub_1D42BE910();
  v2 = v1;
  v4 = v3;
  v5 = sub_1D42B28FC(&qword_1EFE4A808);
  MEMORY[0x1E0C80A78](v5);
  sub_1D42F1ED4();
  sub_1D42B5528(v2, v2[3]);
  sub_1D42F1B28();
  sub_1D42F1FF8();
  if (v0)
  {
    sub_1D42CB9B4();
  }
  else
  {
    sub_1D42B6368();
    sub_1D42F2080();
    sub_1D42F2068();
    sub_1D42F1FA8();
    v11 = v6;
    v26 = v7;
    sub_1D42B633C(v6, v8, v7);
    sub_1D42B5B80();
    swift_bridgeObjectRetain();
    v9 = v17;
    sub_1D42F2080();
    sub_1D42F2068();
    sub_1D42F1F70();
    sub_1D42B633C(v11, v13, v26);
    sub_1D42CB8FC();
    sub_1D42CB8FC();
    v10 = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D42F1F60();

    sub_1D42CB8F4();
    *(_QWORD *)v4 = v11;
    *(_QWORD *)(v4 + 8) = v13;
    *(_BYTE *)(v4 + 16) = v26;
    *(_QWORD *)(v4 + 24) = v15;
    *(_QWORD *)(v4 + 32) = v16;
    *(_QWORD *)(v4 + 40) = v10;
    *(_QWORD *)(v4 + 48) = v12;
    *(_QWORD *)(v4 + 56) = v13;
    *(_QWORD *)(v4 + 64) = v14;
    *(_QWORD *)(v4 + 72) = v15;
    *(_QWORD *)(v4 + 80) = v16;
    *(_QWORD *)(v4 + 88) = v17;
    *(_BYTE *)(v4 + 96) = v18;
    *(_BYTE *)(v4 + 97) = v19;
    *(_BYTE *)(v4 + 98) = v20;
    *(_BYTE *)(v4 + 99) = v21;
    *(_BYTE *)(v4 + 100) = v22;
    *(_BYTE *)(v4 + 101) = v23;
    *(_QWORD *)(v4 + 104) = v24;
    *(_BYTE *)(v4 + 112) = v25;
    sub_1D42CB9B4();
    sub_1D42F1F60();
    sub_1D42CB8F4();
    sub_1D42B7204();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
  sub_1D42BE844();
}

uint64_t sub_1D42EC208()
{
  char *v0;

  return sub_1D42EB36C(*v0);
}

uint64_t sub_1D42EC210@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D42EB1D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D42EC234()
{
  sub_1D42F102C();
  return sub_1D451BA3C();
}

uint64_t sub_1D42EC25C()
{
  sub_1D42F102C();
  return sub_1D451BA48();
}

uint64_t sub_1D42EC28C()
{
  sub_1D451B958();
  sub_1D42EAFCC();
  return sub_1D451B994();
}

void sub_1D42EC2E8()
{
  sub_1D42EB5D0();
}

void sub_1D42EC2FC()
{
  sub_1D42EB3E0();
}

unint64_t sub_1D42EC314()
{
  char *v0;

  return sub_1D42EBC10(*v0);
}

uint64_t sub_1D42EC31C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D42EBB28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D42EC340()
{
  sub_1D42F1B28();
  return sub_1D451BA3C();
}

uint64_t sub_1D42EC368()
{
  sub_1D42F1B28();
  return sub_1D451BA48();
}

uint64_t sub_1D42EC398()
{
  sub_1D451B958();
  sub_1D42EAFCC();
  AudioConfiguration.hash(into:)();
  return sub_1D451B994();
}

void sub_1D42EC4A8()
{
  sub_1D42EBF48();
}

void sub_1D42EC4BC()
{
  sub_1D42EBC4C();
}

uint64_t sub_1D42EC4D4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1D42EC520;
  return sub_1D43768A8();
}

uint64_t sub_1D42EC520()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t (*v6)(void);

  sub_1D42F1E44();
  v2[4] = v0;
  v2[5] = v1;
  swift_task_dealloc();
  if (v1)
    return sub_1D42F1DEC();
  v6 = (uint64_t (*)(void))((char *)&dword_1EFE4E2E8 + dword_1EFE4E2E8);
  v5 = (_QWORD *)swift_task_alloc();
  v2[6] = v5;
  *v5 = v3;
  v5[1] = sub_1D42EC5A0;
  return sub_1D42E3A2C(v6);
}

uint64_t sub_1D42EC5A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 56) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 64) = a1;
  return sub_1D42F1DEC();
}

uint64_t sub_1D42EC608()
{
  uint64_t v0;

  sub_1D42F1FB4();
  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 64));
}

uint64_t sub_1D42EC648()
{
  uint64_t v0;

  sub_1D42F1FB4();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D42EC670()
{
  uint64_t v0;

  swift_release();
  sub_1D42F1FB4();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D42EC6A0(uint64_t a1, uint64_t a2)
{
  _QWORD v4[5];

  sub_1D447DAC4();
  v4[3] = sub_1D42B28FC((uint64_t *)&unk_1EFE4A780);
  v4[4] = sub_1D42F1AC4();
  v4[0] = a2;
  swift_retain();
  sub_1D447DAE0(v4);
  swift_release();
  return sub_1D42B5400((uint64_t)v4);
}

uint64_t sub_1D42EC724(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  swift_retain();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1D42EC778;
  return sub_1D42EC4D4(a1);
}

uint64_t sub_1D42EC778(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_1D42EC7CC(uint64_t a1)
{
  uint64_t *v1;

  return sub_1D42EC6A0(a1, *v1);
}

uint64_t sub_1D42EC7E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_1D42EC834;
  return sub_1D42EC724(a2);
}

uint64_t sub_1D42EC834()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D42F1E44();
  swift_task_dealloc();
  if (!v1)
    **(_QWORD **)(v2 + 16) = v0;
  return sub_1D42E3A2C(*(uint64_t (**)(void))(v3 + 8));
}

void sub_1D42EC870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21[2];
  _BYTE v22[128];

  sub_1D42BE910();
  v2 = v1;
  v3 = sub_1D42B28FC(&qword_1EFE568A0);
  v17 = *(_QWORD *)(v3 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v4);
  sub_1D42CB210();
  v7 = v6 - v5;
  v19 = *(_QWORD *)(sub_1D42B28FC(&qword_1EFE4A690) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v8);
  sub_1D42CB210();
  v11 = v10 - v9;
  v18 = sub_1D42B28FC(&qword_1EFE4A698);
  v20 = *(_QWORD *)(v18 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v12);
  sub_1D42F1ED4();
  sub_1D42F2010(v22);
  v13 = sub_1D42B6F40();
  sub_1D42F2010((void *)(v13 + 16));
  sub_1D42E2D8C(v2, (uint64_t)v21);
  v14 = sub_1D42B6F40();
  sub_1D42E33E0(v21, v14 + 16);
  memcpy((void *)(v14 + 56), v22, 0x71uLL);
  v15 = (_QWORD *)sub_1D42B6F40();
  v15[2] = sub_1D42F0E60;
  v15[3] = v13;
  v15[4] = sub_1D42F0ED0;
  v15[5] = v14;
  v16 = sub_1D42B6F40();
  *(_QWORD *)(v16 + 16) = sub_1D42F0F18;
  *(_QWORD *)(v16 + 24) = v15;
  sub_1D42F0F50((uint64_t)v22);
  sub_1D42F0F50((uint64_t)v22);
  swift_retain();
  swift_retain();
  sub_1D42B28FC((uint64_t *)&unk_1EFE4A6A0);
  sub_1D42F1168((unint64_t *)&unk_1EFE568C0, (uint64_t *)&unk_1EFE4A6A0, (uint64_t)&unk_1D4532BA0);
  sub_1D451A2C0();
  type metadata accessor for SNDetectionResult();
  sub_1D42F1168(&qword_1EFE4A6B0, &qword_1EFE568A0, MEMORY[0x1E0C96148]);
  sub_1D451A3A4();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v7, v3);
  swift_release();
  swift_release();
  sub_1D42F1168(&qword_1EFE4A6B8, &qword_1EFE4A690, MEMORY[0x1E0C95B48]);
  sub_1D451A308();
  sub_1D42F1FA0(v11, *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
  sub_1D42F1168(&qword_1EFE4A6C0, &qword_1EFE4A698, MEMORY[0x1E0C95950]);
  sub_1D451A2E4();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v0, v18);
  sub_1D42BE844();
}

id sub_1D42ECB7C(_OWORD *a1)
{
  __int128 v2;
  _OWORD v4[3];

  type metadata accessor for SNDetectSoundRequest();
  v2 = a1[1];
  v4[0] = *a1;
  v4[1] = v2;
  v4[2] = a1[2];
  sub_1D42B62F4((uint64_t)v4);
  return sub_1D42ECBEC();
}

id sub_1D42ECBEC()
{
  uint64_t v0;
  objc_class *v1;
  char *v2;
  char v3;
  uint64_t v4;
  char *v5;
  objc_super v7;

  v2 = (char *)sub_1D42B7238();
  v3 = *(_BYTE *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = &v2[OBJC_IVAR___SNDetectSoundRequest_impl];
  *(_OWORD *)v5 = *(_OWORD *)v0;
  v5[16] = v3;
  *((_QWORD *)v5 + 3) = v4;
  *((_OWORD *)v5 + 2) = *(_OWORD *)(v0 + 32);
  v7.receiver = v2;
  v7.super_class = v1;
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t sub_1D42ECC50@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _BYTE __dst[72];

  v6 = a1[3];
  v7 = a1[4];
  sub_1D42B5528(a1, v6);
  memcpy(__dst, (const void *)(a2 + 48), 0x41uLL);
  result = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v7 + 8))(__dst, v6, v7);
  if (!v3)
    *a3 = result;
  return result;
}

uint64_t sub_1D42ECCD0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *a1 + OBJC_IVAR___SNDetectionResult_impl;
  v3 = *(_QWORD *)(v2 + 40);
  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 56);
  v6 = *(_QWORD *)(v2 + 64);
  v7 = *(_BYTE *)(v2 + 72);
  v9 = *(_QWORD *)(v2 + 80);
  v8 = *(_QWORD *)(v2 + 88);
  *(_QWORD *)a2 = *(_QWORD *)v2;
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(v2 + 8);
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(v2 + 16);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v2 + 32);
  *(_QWORD *)(a2 + 40) = v3;
  *(_QWORD *)(a2 + 48) = v4;
  *(_QWORD *)(a2 + 56) = v5;
  *(_QWORD *)(a2 + 64) = v6;
  *(_BYTE *)(a2 + 72) = v7;
  *(_QWORD *)(a2 + 80) = v9;
  *(_QWORD *)(a2 + 88) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_1D42ECD4C()
{
  sub_1D42BE9A8();
  sub_1D451B964();
  sub_1D42CB230();
  sub_1D42BE978();
}

uint64_t sub_1D42ECD90()
{
  uint64_t v0;
  __CFString *v1;
  __CFString *v2;
  __CFString *v3;
  __CFString *v4;
  __CFString *v5;
  __CFString *v6;
  __CFString *v7;

  sub_1D42B28FC(&qword_1EFE4A768);
  v0 = sub_1D42B6F40();
  *(_OWORD *)(v0 + 16) = xmmword_1D45276D0;
  *(_QWORD *)(v0 + 32) = CFSTR("Applause");
  *(_QWORD *)(v0 + 40) = CFSTR("Babble");
  *(_QWORD *)(v0 + 48) = CFSTR("Cheering");
  *(_QWORD *)(v0 + 56) = CFSTR("Laughter");
  *(_QWORD *)(v0 + 64) = CFSTR("Music");
  *(_QWORD *)(v0 + 72) = CFSTR("Speech");
  *(_QWORD *)(v0 + 80) = CFSTR("Smoke Alarm");
  v1 = CFSTR("Applause");
  v2 = CFSTR("Babble");
  v3 = CFSTR("Cheering");
  v4 = CFSTR("Laughter");
  v5 = CFSTR("Music");
  v6 = CFSTR("Speech");
  v7 = CFSTR("Smoke Alarm");
  return v0;
}

void (*sub_1D42ECE7C(uint64_t a1, uint64_t a2, void (*a3)(void), void (*a4)(_QWORD)))(_QWORD)
{
  a3();
  a4(0);
  sub_1D451A908();
  sub_1D42F2028();
  return a4;
}

uint64_t sub_1D42ECEBC()
{
  __CFString *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  id v4;
  char v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v0 = CFSTR("SNVGGishApplauseModel");
  sub_1D442FBA4();
  v2 = v1;
  v3 = *(_QWORD *)(v1 + 16);
  if (v3 >= *(_QWORD *)(v1 + 24) >> 1)
  {
    sub_1D442FBA4();
    v2 = v15;
  }
  *(_QWORD *)(v2 + 16) = v3 + 1;
  *(_QWORD *)(v2 + 8 * v3 + 32) = v0;

  v4 = sub_1D42F1D9C(CFSTR("SNVGGishBabbleModel"));
  sub_1D42F1DE0();
  if (v5)
  {
    sub_1D42F1CF4();
    v2 = v16;
  }
  sub_1D42F1D0C();
  v6 = sub_1D42F1D9C(CFSTR("SNVGGishCheeringModel"));
  sub_1D42F1DE0();
  if (v5)
  {
    sub_1D42F1CF4();
    v2 = v17;
  }
  sub_1D42F1D0C();
  v7 = sub_1D42F1D9C(CFSTR("SNVGGishLaughterModel"));
  sub_1D42F1DE0();
  if (v5)
  {
    sub_1D42F1CF4();
    v2 = v18;
  }
  sub_1D42F1D0C();
  v8 = sub_1D42F1D9C(CFSTR("SNVGGishMusicModel"));
  sub_1D42F1DE0();
  if (v5)
  {
    sub_1D42F1CF4();
    v2 = v19;
  }
  sub_1D42F1D0C();
  v9 = sub_1D42F1D9C(CFSTR("SNVGGishSpeechModel"));
  sub_1D42F1DE0();
  if (v5)
  {
    sub_1D42F1CF4();
    v2 = v20;
  }
  sub_1D42F1D0C();
  v10 = sub_1D42F1D9C(CFSTR("SNSoundPrintALaughterModel"));
  sub_1D42F1DE0();
  if (v5)
  {
    sub_1D42F1CF4();
    v2 = v21;
  }
  sub_1D42F1D0C();
  v11 = sub_1D42F1D9C(CFSTR("SNSoundPrintAShoutingModel"));
  sub_1D42F1DE0();
  if (v5)
  {
    sub_1D42F1CF4();
    v2 = v22;
  }
  sub_1D42F1D0C();
  v12 = sub_1D42F1D9C(CFSTR("SNSoundPrintASpeechModel"));
  sub_1D42F1DE0();
  if (v5)
  {
    sub_1D42F1CF4();
    v2 = v23;
  }
  sub_1D42F1D0C();
  v13 = sub_1D42F1D9C(CFSTR("SNSoundPrintASmokeAlarmModel"));
  sub_1D42F1DE0();
  if (v5)
  {
    sub_1D42F1CF4();
    v2 = v24;
  }
  sub_1D42F1D0C();
  return v2;
}

void sub_1D42ED118()
{
  sub_1D42CB6CC();
  sub_1D42F1F54();
  sub_1D451A6C8();
  sub_1D42F2028();
  sub_1D42B6E24();
}

uint64_t sub_1D42ED198(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = sub_1D451A6EC();
  v5 = v4;

  v6 = v1 + OBJC_IVAR___SNDetectSoundRequest_impl;
  *(_QWORD *)(v6 + 24) = v3;
  *(_QWORD *)(v6 + 32) = v5;
  return swift_bridgeObjectRelease();
}

id sub_1D42ED200()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___SNDetectSoundRequest_impl + 40);
}

void sub_1D42ED25C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___SNDetectSoundRequest_impl + 40);
  *(_QWORD *)(v1 + OBJC_IVAR___SNDetectSoundRequest_impl + 40) = a1;

}

double sub_1D42ED274@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  double result;
  __int128 v7;
  __int128 v8;
  char v9;
  uint64_t v10;
  __int128 v11;
  _OWORD v12[2];
  __int128 v13;
  uint64_t v14;

  v4 = *(_BYTE *)(v1 + OBJC_IVAR___SNDetectSoundRequest_impl + 16);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR___SNDetectSoundRequest_impl + 24);
  v8 = *(_OWORD *)(v1 + OBJC_IVAR___SNDetectSoundRequest_impl);
  v9 = v4;
  v10 = v5;
  v11 = *(_OWORD *)(v1 + OBJC_IVAR___SNDetectSoundRequest_impl + 32);
  result = sub_1D42ED2F0((uint64_t)&v8, (uint64_t)v12);
  if (!v2)
  {
    v7 = v12[1];
    *(_OWORD *)a1 = v12[0];
    *(_OWORD *)(a1 + 16) = v7;
    result = *(double *)&v13;
    *(_OWORD *)(a1 + 32) = v13;
    *(_QWORD *)(a1 + 48) = v14;
  }
  return result;
}

double sub_1D42ED2F0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v4;
  void *v5;
  void *v6;
  char v7;
  NSString *v8;
  double result;
  __int128 v10;
  _QWORD v11[2];
  char v12;
  _OWORD v13[2];
  __int128 v14;
  uint64_t v15;

  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  v6 = *(void **)(a1 + 40);
  v7 = *(_BYTE *)(a1 + 16);
  v11[0] = v4;
  v11[1] = v5;
  v12 = v7;
  sub_1D42B633C(v4, v5, v7);
  swift_bridgeObjectRetain();
  sub_1D42F1F88();
  v8 = (NSString *)sub_1D451A6C8();
  swift_bridgeObjectRelease();
  sub_1D4393174((uint64_t)v11, v8, v6, (uint64_t)v13);
  sub_1D42B62C8(v4, v5, v7);

  if (!v2)
  {
    v10 = v13[1];
    *(_OWORD *)a2 = v13[0];
    *(_OWORD *)(a2 + 16) = v10;
    result = *(double *)&v14;
    *(_OWORD *)(a2 + 32) = v14;
    *(_QWORD *)(a2 + 48) = v15;
  }
  return result;
}

uint64_t sub_1D42ED3C8()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[56];

  sub_1D42ED274((uint64_t)v3);
  if (!v1)
  {
    type metadata accessor for SNSoundDetector();
    v0 = sub_1D42B6F40();
    sub_1D42EF3A4((uint64_t)v3);
  }
  return v0;
}

void sub_1D42ED430()
{
  sub_1D451B55C();
  __break(1u);
}

void SNDetectSoundRequest.copy(with:)(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;

  v3 = sub_1D42B7104();
  v4 = *(void **)(v1 + OBJC_IVAR___SNDetectSoundRequest_impl + 40);
  sub_1D42B633C(*(id *)(v1 + OBJC_IVAR___SNDetectSoundRequest_impl), *(void **)(v1 + OBJC_IVAR___SNDetectSoundRequest_impl + 8), *(_BYTE *)(v1 + OBJC_IVAR___SNDetectSoundRequest_impl + 16));
  sub_1D42CB6CC();
  v5 = v4;
  v6 = sub_1D42ECBEC();
  a1[3] = v3;
  *a1 = v6;
  sub_1D42F1EB4();
}

uint64_t SNDetectSoundRequest.hash.getter()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  void *v4;
  void *v5;
  char v6;
  void *v7;

  v4 = *(void **)(v0 + OBJC_IVAR___SNDetectSoundRequest_impl);
  v5 = *(void **)(v0 + OBJC_IVAR___SNDetectSoundRequest_impl + 8);
  v6 = *(_BYTE *)(v0 + OBJC_IVAR___SNDetectSoundRequest_impl + 16);
  v7 = *(void **)(v0 + OBJC_IVAR___SNDetectSoundRequest_impl + 40);
  sub_1D42BE9A8();
  sub_1D42B633C(v4, v5, v6);
  swift_bridgeObjectRetain();
  v1 = v7;
  sub_1D42EAFCC();
  v2 = sub_1D42CB230();
  sub_1D42B62C8(v4, v5, v6);

  swift_bridgeObjectRelease();
  return v2;
}

id SNDetectSoundRequest.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  char v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  BOOL v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  _QWORD v43[2];
  char v44;
  _QWORD v45[2];
  char v46;
  _OWORD v47[2];
  __int128 v48;
  uint64_t v49;

  sub_1D42B7104();
  sub_1D42B28B4(a1, (uint64_t)&v48);
  if (v49)
  {
    sub_1D42B293C(&v48, v47);
    sub_1D42B294C((uint64_t)v47, (uint64_t)v45);
    if (swift_dynamicCast())
    {
      v3 = (void *)v43[0];
      if (v43[0])
      {
        v4 = v1 + OBJC_IVAR___SNDetectSoundRequest_impl;
        v5 = *(void **)(v1 + OBJC_IVAR___SNDetectSoundRequest_impl);
        v6 = *(void **)(v1 + OBJC_IVAR___SNDetectSoundRequest_impl + 8);
        v7 = *(_BYTE *)(v1 + OBJC_IVAR___SNDetectSoundRequest_impl + 16);
        v8 = *(_QWORD *)(v1 + OBJC_IVAR___SNDetectSoundRequest_impl + 24);
        v9 = *(_QWORD *)(v1 + OBJC_IVAR___SNDetectSoundRequest_impl + 32);
        v10 = *(void **)(v4 + 40);
        v12 = *(void **)(v43[0] + OBJC_IVAR___SNDetectSoundRequest_impl);
        v11 = *(void **)(v43[0] + OBJC_IVAR___SNDetectSoundRequest_impl + 8);
        v13 = *(_BYTE *)(v43[0] + OBJC_IVAR___SNDetectSoundRequest_impl + 16);
        v14 = *(_QWORD *)(v43[0] + OBJC_IVAR___SNDetectSoundRequest_impl + 32);
        v37 = *(_QWORD *)(v43[0] + OBJC_IVAR___SNDetectSoundRequest_impl + 24);
        v39 = v8;
        v15 = *(void **)(v43[0] + OBJC_IVAR___SNDetectSoundRequest_impl + 40);
        v45[0] = v5;
        v45[1] = v6;
        v46 = v7;
        v43[0] = v12;
        v43[1] = v11;
        v44 = v13;
        v41 = v3;
        sub_1D42B633C(v5, v6, v7);
        v42 = v9;
        sub_1D42CB6CC();
        v16 = v10;
        sub_1D42B633C(v12, v11, v13);
        sub_1D42CB8FC();
        v17 = v15;
        if ((sub_1D4336790((uint64_t)v45, (uint64_t)v43) & 1) != 0)
        {
          v18 = v39 == v37 && v42 == v14;
          if (v18 || (sub_1D42F1F04() & 1) != 0)
          {
            v19 = objc_msgSend(v16, sel_isEqual_, v17, v37, v39);
            sub_1D42F20CC();
            v20 = sub_1D42CB8F4();
            sub_1D42F1F34(v20, v21, v22, v23, v24, v25, v26, v27, v38, v40, v41);

            swift_bridgeObjectRelease();
LABEL_14:
            sub_1D42B5400((uint64_t)v47);
            return v19;
          }
        }
        sub_1D42F20CC();
        v28 = sub_1D42CB8F4();
        sub_1D42F1F34(v28, v29, v30, v31, v32, v33, v34, v35, v37, v39, v41);

        swift_bridgeObjectRelease();
      }
    }
    v19 = 0;
    goto LABEL_14;
  }
  return 0;
}

void SNDetectSoundRequest.__allocating_init(coder:)()
{
  void *v0;

  sub_1D42B7238();
  SNDetectSoundRequest.init(coder:)(v0);
  sub_1D42B6E24();
}

id SNDetectSoundRequest.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  void *v7;
  void *v8;
  char v9;
  void *v10;

  v3 = v1;
  sub_1D42B1400();
  sub_1D42CFC30();

  sub_1D42B633C(v7, v8, v9);
  sub_1D42CB8FC();
  v4 = v10;
  v5 = sub_1D42ECBEC();

  sub_1D42B62C8(v7, v8, v9);
  sub_1D42CB8F4();
  sub_1D42D83E0();
  return v5;
}

Swift::Void __swiftcall SNDetectSoundRequest.encode(with:)(NSCoder with)
{
  uint64_t v1;
  __int128 v3;
  _OWORD v4[3];

  v3 = *(_OWORD *)(v1 + OBJC_IVAR___SNDetectSoundRequest_impl + 16);
  v4[0] = *(_OWORD *)(v1 + OBJC_IVAR___SNDetectSoundRequest_impl);
  v4[1] = v3;
  v4[2] = *(_OWORD *)(v1 + OBJC_IVAR___SNDetectSoundRequest_impl + 32);
  sub_1D42B62F4((uint64_t)v4);
  sub_1D42AF620(v4, 1819307369, 0xE400000000000000, with.super.isa);
  sub_1D42F05E0((uint64_t)v4);
}

uint64_t static SNDetectSoundRequest.supportsSecureCoding.getter()
{
  return 1;
}

void sub_1D42EDACC(void *a1)
{
  void *v1;

  objc_msgSend(v1, sel_initWithSoundIdentifier_, a1);

  sub_1D42B6E24();
}

id sub_1D42EDB2C(void *a1)
{
  void *v1;
  id v3;
  __CFString *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD v10[2];
  char v11;

  v3 = v1;
  v4 = sub_1D439C5B8();
  v5 = sub_1D451A6EC();
  v7 = v6;
  sub_1D42CFC30();

  v10[0] = v5;
  v10[1] = v7;
  v11 = 1;
  swift_bridgeObjectRetain();
  v8 = sub_1D42EDD54((uint64_t)v10, a1);
  swift_bridgeObjectRelease();

  sub_1D42D83E0();
  return v8;
}

id sub_1D42EDD54(uint64_t a1, void *a2)
{
  objc_class *v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  id v7;
  id v8;
  uint64_t v10[2];
  char v11;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E958]), sel_init);
  v10[0] = v4;
  v10[1] = v5;
  v11 = v6;
  v8 = objc_allocWithZone(v2);
  return sub_1D42EDED0(v10, a2, (uint64_t)v7);
}

id sub_1D42EDDF4(void *a1)
{
  void *v1;
  uint64_t v2;
  id v3;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];
  char v14;

  v5 = v1;
  v6 = sub_1D439C864(a1);
  if (v2)
  {

    sub_1D42CFC30();
  }
  else
  {
    v8 = v7;

    v9 = sub_1D451A6EC();
    v11 = v10;
    sub_1D42CFC30();

    v13[0] = v9;
    v13[1] = v11;
    v14 = 1;
    swift_bridgeObjectRetain();
    v3 = sub_1D42EDD54((uint64_t)v13, v8);
    sub_1D42CB338();

  }
  sub_1D42F1F54();
  sub_1D42D83E0();
  return v3;
}

id sub_1D42EDED0(uint64_t *a1, void *a2, uint64_t a3)
{
  char *v3;
  objc_class *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  objc_super v15;

  v7 = (objc_class *)sub_1D42B7104();
  v8 = *a1;
  v9 = a1[1];
  LOBYTE(a1) = *((_BYTE *)a1 + 16);
  v10 = sub_1D451A6EC();
  v11 = &v3[OBJC_IVAR___SNDetectSoundRequest_impl];
  *(_QWORD *)v11 = v8;
  *((_QWORD *)v11 + 1) = v9;
  v11[16] = (char)a1;
  *((_QWORD *)v11 + 3) = v10;
  *((_QWORD *)v11 + 4) = v12;
  *((_QWORD *)v11 + 5) = a3;
  v15.receiver = v3;
  v15.super_class = v7;
  v13 = objc_msgSendSuper2(&v15, sel_init);

  return v13;
}

id sub_1D42EDF68(uint64_t a1, void *a2)
{
  id v4;
  _QWORD v6[2];
  char v7;

  sub_1D42CFC30();
  v6[0] = 0;
  v6[1] = a1;
  v7 = 0;
  v4 = sub_1D42EDD54((uint64_t)v6, a2);
  sub_1D42D83E0();
  return v4;
}

uint64_t sub_1D42EE010(void *a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v6;
  id v7;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char v12;
  char v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  char v18;
  uint64_t v19;

  v4 = v1;
  v6 = type metadata accessor for SNModelMetadataUtils();
  v7 = v4;
  sub_1D42F1F0C(a1);
  if (v2)
  {

    sub_1D42CFC30();
    sub_1D42D83E0();
  }
  else
  {
    swift_bridgeObjectRelease();
    if (BYTE1(v17) == 2)
    {
      swift_dynamicCastObjCProtocolUnconditional();
      swift_getObjectType();
      sub_1D42E9D88(0, (unint64_t *)&qword_1EFE404C0);
      v9 = sub_1D42F20C0();
      v10 = sub_1D42F1134(v9);
      v11 = 0;
      v12 = 2;
    }
    else
    {
      v13 = sub_1D4393E6C(v3);
      v11 = v14;

      v12 = 0;
      v10 = v13 & 1;
    }
    sub_1D42F1F0C(v3);

    if (v19)
    {
      sub_1D42F20E8();
      v15 = (void *)sub_1D451A6C8();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v15 = (void *)sub_1D451A6C8();
    }
    sub_1D42CFC30();

    v16 = v10;
    v17 = v11;
    v18 = v12;
    sub_1D42B633C((id)v10, v11, v12);
    v6 = (uint64_t)sub_1D42EDD54((uint64_t)&v16, v15);

    sub_1D42F1F24();
    sub_1D42D83E0();
  }
  return v6;
}

void sub_1D42EE21C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(void *))
{
  a5(a3);
  sub_1D42CB758();
}

uint64_t SNDetectSoundRequest.description.getter()
{
  void *v0;
  objc_class *v1;
  id v2;
  void *v3;
  void *v4;
  objc_super v6;
  uint64_t v7;
  unint64_t v8;

  v1 = (objc_class *)sub_1D42B7104();
  v7 = 0;
  v8 = 0xE000000000000000;
  sub_1D451B400();
  v6.receiver = v0;
  v6.super_class = v1;
  v2 = objc_msgSendSuper2(&v6, sel_description);
  sub_1D451A6EC();

  sub_1D451A794();
  swift_bridgeObjectRelease();
  sub_1D451A794();
  sub_1D42ED118();
  v4 = v3;
  type metadata accessor for SNSoundIdentifier(0);
  sub_1D451B514();

  return v7;
}

void sub_1D42EE3D8(uint64_t *a1@<X8>)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  _BYTE v5[56];

  v3 = (void *)MEMORY[0x1D825DB34]();
  sub_1D42ED274((uint64_t)v5);
  if (v1)
  {
    objc_autoreleasePoolPop(v3);
  }
  else
  {
    type metadata accessor for SNSoundDetector();
    v4 = sub_1D42B6F40();
    sub_1D42EF3A4((uint64_t)v5);
    objc_autoreleasePoolPop(v3);
    a1[3] = sub_1D42B7104();
    *a1 = v4;
  }
}

void sub_1D42EE51C()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  char v9;
  void (*v10)(_QWORD *__return_ptr, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  const void *v36;
  _QWORD v37[6];
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v46[9];
  _QWORD v47[4];
  char v48[40];
  uint64_t v49;
  _BYTE v50[16];
  __int128 v51[3];
  _QWORD v52[6];
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  uint64_t v59;
  char v60;
  uint64_t v61;

  sub_1D42BE910();
  v61 = v1;
  v36 = v2;
  sub_1D42B7104();
  v3 = sub_1D42B28FC((uint64_t *)&unk_1EFE4A770);
  v34 = *(_QWORD *)(v3 - 8);
  v35 = v3;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v4);
  sub_1D42CB210();
  v33 = v6 - v5;
  v7 = *(_OWORD *)(v0 + OBJC_IVAR___SNDetectSoundRequest_impl + 16);
  v51[0] = *(_OWORD *)(v0 + OBJC_IVAR___SNDetectSoundRequest_impl);
  v51[1] = v7;
  v51[2] = *(_OWORD *)(v0 + OBJC_IVAR___SNDetectSoundRequest_impl + 32);
  sub_1D42B62F4((uint64_t)v51);
  v8 = MGGetProductType();
  sub_1D4380880(v8, v46);
  sub_1D42F1208((uint64_t)v46, (uint64_t)v48, &qword_1EFE506B0);
  if (v49)
  {
    v9 = v48[0];
    sub_1D42F11A4(v46);
    sub_1D4380388(v9);
    v10 = (void (*)(_QWORD *__return_ptr, uint64_t))v47[2];
    sub_1D42F1208((uint64_t)v47, (uint64_t)v50, &qword_1EFE4A7A0);
    v11 = sub_1D42F1244((uint64_t)v50);
    v10(v37, v11);
    swift_release();
    v12 = v37[0];
    v13 = v37[1];
    v14 = v37[2];
    v15 = v37[3];
    v16 = v37[4];
    v17 = v37[5];
    v18 = v38;
    v19 = v39;
    v20 = v40;
    v21 = v41;
    v22 = v42;
    v23 = v43;
    v24 = v44;
    v25 = v45;
  }
  else
  {
    if (qword_1EFE48EF0 != -1)
      swift_once();
    v13 = *(_QWORD *)algn_1EFEA7998;
    v15 = qword_1EFEA79A8;
    v31 = qword_1EFEA79A0;
    v32 = qword_1EFEA7990;
    v17 = qword_1EFEA79B8;
    v30 = qword_1EFEA79B0;
    v28 = byte_1EFEA79C1;
    v29 = byte_1EFEA79C0;
    v20 = byte_1EFEA79C2;
    v21 = byte_1EFEA79C3;
    v22 = byte_1EFEA79C4;
    v23 = byte_1EFEA79C5;
    v24 = qword_1EFEA79C8;
    v25 = byte_1EFEA79D0;
    sub_1D42CB8FC();
    sub_1D42F20E8();
    swift_bridgeObjectRetain();
    v19 = v28;
    v18 = v29;
    v16 = v30;
    v14 = v31;
    v12 = v32;
  }
  v52[0] = v12;
  v52[1] = v13;
  v52[2] = v14;
  v52[3] = v15;
  v52[4] = v16;
  v52[5] = v17;
  v53 = v18;
  v54 = v19;
  v55 = v20;
  v56 = v21;
  v57 = v22;
  v58 = v23;
  v59 = v24;
  v60 = v25;
  sub_1D434D28C(v51, (uint64_t)v52, v36);
  v27 = v26;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D42CB8F4();
  sub_1D42F05E0((uint64_t)v51);
  if (!v61)
  {
    v37[0] = v27;
    sub_1D42B28FC((uint64_t *)&unk_1EFE4A780);
    sub_1D42B28FC(&qword_1EFE4C690);
    sub_1D42F1168((unint64_t *)&unk_1EFE4A790, (uint64_t *)&unk_1EFE4A780, MEMORY[0x1E0C95D90]);
    sub_1D451A308();
    swift_release();
    sub_1D42F1168(&qword_1EFE4FD40, (uint64_t *)&unk_1EFE4A770, MEMORY[0x1E0C95950]);
    sub_1D451A2E4();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
  }
  sub_1D42BE844();
}

id sub_1D42EE804@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  id result;
  _QWORD v15[9];
  char v16;
  uint64_t v17;
  uint64_t v18;

  v3 = *a1;
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[5];
  v7 = a1[6];
  v9 = a1[7];
  v8 = a1[8];
  v10 = *((_BYTE *)a1 + 72);
  v12 = a1[10];
  v11 = a1[11];
  type metadata accessor for SNDetectionResult();
  v15[0] = v3;
  v15[1] = a1[1];
  v15[2] = v4;
  v15[3] = v5;
  v15[4] = a1[4];
  v15[5] = v6;
  v15[6] = v7;
  v15[7] = v9;
  v15[8] = v8;
  v16 = v10;
  v17 = v12;
  v18 = v11;
  swift_bridgeObjectRetain();
  sub_1D42CB6CC();
  result = sub_1D4478F7C((uint64_t)v15);
  *a2 = result;
  return result;
}

uint64_t sub_1D42EE8C8()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;

  sub_1D42F2108();
  v0 = sub_1D42F2048();
  sub_1D44BE340(v0, 0);
  v2 = v1;

  if (*(_QWORD *)(v2 + 16) == 1)
  {
    sub_1D42CB5C8();
    v3 = sub_1D42F2048();
    sub_1D44BE340(v3, 1);
    v5 = v4;

    v6 = v5[2];
    if (v6 == 1)
      return swift_bridgeObjectRelease();
    if (v6 == 2)
    {
      v7 = sub_1D42F1E74();
      if ((sub_1D42EF190(v7, v8, v5) & 1) != 0)
      {
        v9 = sub_1D42F1EEC();
        if ((sub_1D42EF190(v9, v10, v5) & 1) != 0)
          return swift_bridgeObjectRelease();
      }
    }
    sub_1D42DCEE8();
    sub_1D451B400();
    sub_1D42F1E08();
    sub_1D42F1E74();
    sub_1D451A794();
    sub_1D451A794();
    sub_1D42F1EEC();
    sub_1D451A794();
    sub_1D42F1E08();
    MEMORY[0x1D825C280](v5, MEMORY[0x1E0DEA968]);
    sub_1D451A794();
    swift_bridgeObjectRelease();
    sub_1D42CB5C8();
    v12 = sub_1D42F1E24();
  }
  else
  {
    sub_1D42DCEE8();
    sub_1D451B400();
    sub_1D42F1E08();
    MEMORY[0x1D825C280](v2, MEMORY[0x1E0DEA968]);
    sub_1D451A794();
    sub_1D42CB5C8();
    swift_bridgeObjectRelease();
    v12 = sub_1D42F1E24();
  }
  sub_1D43EC59C(v12, v13, v14, v15, v16, v17);
  sub_1D42CB5C8();
  return swift_willThrow();
}

uint64_t sub_1D42EEAEC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  sub_1D42B28FC((uint64_t *)&unk_1EFE403A0);
  v2 = sub_1D42B6F40();
  *(_OWORD *)(v2 + 16) = xmmword_1D45261D0;
  *(_QWORD *)(v2 + 32) = *(_QWORD *)(v1 + 16);
  sub_1D42CB6CC();
  sub_1D42B28FC((uint64_t *)&unk_1EFE4A660);
  sub_1D42F1168(&qword_1EFE516B0, (uint64_t *)&unk_1EFE4A660, MEMORY[0x1E0DEAF38]);
  return sub_1D451A038();
}

uint64_t sub_1D42EEBA4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_1D42F0DD4();
  result = swift_allocError();
  *a1 = result;
  return result;
}

uint64_t sub_1D42EEBE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  return swift_bridgeObjectRetain();
}

void sub_1D42EEBF8(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  sub_1D42B28FC((uint64_t *)&unk_1EFE403A0);
  v3 = sub_1D42B6F40();
  *(_OWORD *)(v3 + 16) = xmmword_1D4526260;
  *(int64x2_t *)(v3 + 32) = vdupq_n_s64(1uLL);
  if (__OFSUB__(v2 >> 1, v1))
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 48) = (v2 >> 1) - v1;
    swift_unknownObjectRetain();
    sub_1D42B28FC(&qword_1EFE4C9D0);
    sub_1D42F1168((unint64_t *)&unk_1EFE4A680, &qword_1EFE4C9D0, (uint64_t)&unk_1D4547320);
    sub_1D451A038();
    sub_1D42F1EB4();
  }
}

void sub_1D42EECC8()
{
  CMTimeValue v0;
  uint64_t v1;
  CMTimeEpoch v2;
  double v3;
  char v4;
  CMTime v5;
  CMTime time;

  sub_1D42F1EA4();
  if (v4)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v3 <= -2147483650.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v3 < 2147483650.0)
  {
    time.value = v0;
    *(_QWORD *)&time.timescale = v1;
    time.epoch = v2;
    CMTimeConvertScale(&v5, &time, (int)v3, kCMTimeRoundingMethod_RoundTowardZero);
    return;
  }
LABEL_7:
  __break(1u);
}

void sub_1D42EED54(void **a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t, unint64_t, uint64_t), uint64_t a9, uint64_t a10)
{
  void *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  id v26;
  double v27;
  double v28;
  double v29;
  id v30;
  id v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;

  v11 = *a1;
  v12 = *a2;
  v13 = a2[2];
  v39 = *((unsigned int *)a2 + 2) | ((unint64_t)*((unsigned int *)a2 + 3) << 32);
  *a2 = sub_1D451B064();
  *((_DWORD *)a2 + 2) = v14;
  *((_DWORD *)a2 + 3) = v15;
  a2[2] = v16;
  v17 = (void *)sub_1D451A6C8();
  v18 = objc_msgSend(v11, sel_featureValueForName_, v17);

  if (!v18)
  {
    sub_1D42F2054();
    sub_1D42F201C();
LABEL_16:
    sub_1D42F1FD0();
    __break(1u);
    return;
  }
  v19 = v18;
  v48 = objc_msgSend(v19, sel_multiArrayValue);
  if (!v48)
  {
LABEL_15:
    sub_1D42F201C();
    sub_1D42F1FDC();
    goto LABEL_16;
  }
  v41 = v19;
  if (a4)
  {
    v20 = (void *)sub_1D451A6C8();
    v21 = objc_msgSend(v11, sel_featureValueForName_, v20);

    if (v21)
    {
      v22 = v21;
      v23 = objc_msgSend(v22, sel_multiArrayValue);
      if (v23)
      {
        v24 = v23;

        goto LABEL_8;
      }
      goto LABEL_15;
    }
  }
  v24 = 0;
LABEL_8:
  a8(v12, v39, v13);
  if (v40)
  {

  }
  else
  {
    v25 = sub_1D451AEE4();
    ((void (*)(uint64_t))a8)(v25);
    sub_1D451AEF0();
    v26 = sub_1D42F1ECC(v48, sel_objectAtIndexedSubscript_);
    objc_msgSend(v26, sel_doubleValue);
    v28 = v27;

    v29 = v28;
    if (v24)
    {
      v30 = v24;
      v31 = sub_1D42F1ECC(v30, sel_objectAtIndexedSubscript_);
      objc_msgSend(v31, sel_doubleValue);
      v29 = v32;

    }
    v34 = *(_QWORD *)(a10 + 16);
    v33 = *(_QWORD *)(a10 + 24);
    v35 = sub_1D451A6EC();
    v37 = v36;
    sub_1D42CB7B8();

    *(_QWORD *)a3 = v42;
    *(_QWORD *)(a3 + 8) = v43;
    *(_QWORD *)(a3 + 16) = v44;
    *(_QWORD *)(a3 + 24) = v45;
    *(_QWORD *)(a3 + 32) = v46;
    *(_QWORD *)(a3 + 40) = v47;
    *(double *)(a3 + 48) = v28;
    *(_QWORD *)(a3 + 56) = v34;
    *(_QWORD *)(a3 + 64) = v33;
    *(_BYTE *)(a3 + 72) = v29 > 0.5;
    *(_QWORD *)(a3 + 80) = v35;
    *(_QWORD *)(a3 + 88) = v37;
  }
}

double sub_1D42EF0D8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  double result;

  v1 = MEMORY[0x1E0CA2E68];
  v2 = *(_QWORD *)(MEMORY[0x1E0CA2E68] + 16);
  *(_QWORD *)a1 = *MEMORY[0x1E0CA2E68];
  result = *(double *)(v1 + 8);
  *(double *)(a1 + 8) = result;
  *(_QWORD *)(a1 + 16) = v2;
  return result;
}

id SNDetectSoundRequest.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_1D42B7104();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D42EF168()
{
  sub_1D42EE51C();
}

uint64_t sub_1D42EF17C()
{
  return sub_1D42ED3C8();
}

uint64_t sub_1D42EF190(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_1D451B820();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_1D451B820() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D42EF254(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  id v4;
  void *v5;
  char v6;
  char v7;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;

  if (a2 >> 62)
    goto LABEL_19;
  v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_1D42CB7B8();
  if (v3)
  {
    while (1)
    {
      v4 = (a2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1D825CD78](0, a2) : *(id *)(a2 + 32);
      v5 = v4;
      sub_1D42E9D88(0, (unint64_t *)&qword_1EFE404B0);
      v6 = sub_1D451B10C();

      if ((v6 & 1) != 0)
        break;
      if (v3 != 1)
      {
        v9 = 5;
        while (1)
        {
          v10 = (a2 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x1D825CD78](v9 - 4, a2)
              : *(id *)(a2 + 8 * v9);
          v11 = v10;
          v12 = v9 - 3;
          if (__OFADD__(v9 - 4, 1))
            break;
          v7 = sub_1D451B10C();

          if ((v7 & 1) == 0)
          {
            ++v9;
            if (v12 != v3)
              continue;
          }
          goto LABEL_9;
        }
        __break(1u);
LABEL_19:
        sub_1D42CB7B8();
        v3 = sub_1D451B5A4();
        if (v3)
          continue;
      }
      goto LABEL_8;
    }
    v7 = 1;
  }
  else
  {
LABEL_8:
    v7 = 0;
  }
LABEL_9:
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D42EF3A4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  void *v6;
  __int128 v7;
  __int128 v8;
  id v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  void *v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;

  v3 = v1;
  v5 = *v1;
  v3[16] = 0;
  v3[11] = 0;
  v3[17] = 0;
  v6 = *(void **)a1;
  sub_1D42EE8C8();
  if (v2)
  {
    sub_1D42F1EC4();

LABEL_3:
    swift_bridgeObjectRelease();
    sub_1D42F1F54();
    swift_deallocPartialClassInstance();
    return (uint64_t)v3;
  }
  v25 = v5;
  v7 = *(_OWORD *)(a1 + 16);
  *((_OWORD *)v3 + 1) = *(_OWORD *)a1;
  *((_OWORD *)v3 + 2) = v7;
  v8 = *(_OWORD *)(a1 + 16);
  *((_OWORD *)v3 + 3) = *(_OWORD *)(a1 + 32);
  v3[8] = *(_QWORD *)(a1 + 48);
  v23 = v8;
  v24 = v8;
  sub_1D42F0CE4(a1);
  sub_1D42DD1B0((uint64_t)&v24);
  sub_1D451A794();
  *(_OWORD *)(v3 + 9) = v23;
  sub_1D42F2108();
  v9 = objc_msgSend(v6, sel_modelDescription);
  sub_1D44BE340(v9, 0);
  v11 = v10;

  if (v11[2])
  {
    v12 = v11[4];
    v13 = v11[5];
    sub_1D42F20E8();
    sub_1D42CB338();
    v3[12] = v12;
    v3[13] = v13;
    v14 = objc_msgSend(v6, sel_modelDescription);
    sub_1D44BE340(v14, 1);
    v16 = v15;

    v17 = v16[2];
    if (v17 == 1)
    {
      v19 = v16[4];
      v18 = v16[5];
      sub_1D42D71EC();
      sub_1D42B7204();
      sub_1D42F1EC4();
      v3[14] = v19;
      v3[15] = v18;
      v3[16] = 0;
      v3[17] = 0;
    }
    else
    {
      sub_1D42B7204();
      if (v17 != 2)
      {
        sub_1D42DCEE8();
        sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 1, 0, 0xD00000000000001DLL, 0x80000001D4551A60);
        swift_willThrow();
        sub_1D42F1EC4();
        v21 = (void *)v3[3];
        v22 = v3[8];
        swift_bridgeObjectRelease();

        swift_unknownObjectRelease();
        sub_1D42F0D80(v22);
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        goto LABEL_3;
      }
      v3[14] = 0x6E656469666E6F43;
      v3[15] = 0xEA00000000006563;
      sub_1D42F1EC4();
      *((_OWORD *)v3 + 8) = xmmword_1D45276E0;
    }
    swift_bridgeObjectRelease();
    return (uint64_t)v3;
  }
  result = sub_1D42CB338();
  __break(1u);
  return result;
}

id sub_1D42EF624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  void *v39;
  id v40;
  unint64_t v41;
  uint64_t v42;
  id v43;
  int v44;
  int v45;
  uint64_t v46;
  void *v47;
  void *v48;
  uint64_t v49;
  id v50;
  id v51;
  double v52;
  char v53;
  unsigned int v54;
  id v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  __int128 *v60;
  uint64_t v61;
  id v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE *v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v94;
  _BYTE *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  double v105;
  unsigned int v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  __int128 *v113;
  uint64_t v114;
  id v115;
  unsigned int v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  __int128 *v123;
  uint64_t v124;
  id v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  id v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  id v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  id v160;
  id v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  void *v172;
  uint64_t v173;
  void *v174;
  void *v175;
  id v176[7];
  _BYTE v177[8];
  uint64_t v178;
  _QWORD v179[2];

  v179[1] = *MEMORY[0x1E0C80C00];
  v8 = objc_opt_self();
  v176[0] = 0;
  v9 = sub_1D45001AC(v8, (uint64_t)v176);
  if (v9)
  {
    v173 = a1;
    v10 = v176[0];
    v11 = (void *)sub_1D42F2094();
    sub_1D44F5D78((uint64_t)v9, v11);

    sub_1D451A6C8();
    v12 = sub_1D42F1DB0();
    v16 = sub_1D44FD014(v12, v13, v14, v15);

    v17 = v176[0];
    v174 = v16;
    if (v16)
    {
      v18 = v176[0];
      sub_1D42F2094();
      v19 = sub_1D42F1DB0();
      v23 = sub_1D44FF500(v19, v20, v21, v22);

      v24 = v176[0];
      if (v23)
      {
        v25 = *(void **)v173;
        v176[6] = &unk_1EFEAADC8;
        v26 = swift_dynamicCastObjCProtocolConditional();
        if (!v26)
        {
          sub_1D42CF6E8();
          sub_1D42B6D0C();
          *v74 = 7;
          v75 = v24;
          sub_1D42F1DA8();

          sub_1D42F1F1C(v76, v77, v78, v79, v80, v81, v82, v83, v170, v171, v173, v174);
          return v9;
        }
        v27 = (void *)v26;
        v176[0] = 0;
        v28 = v24;
        swift_unknownObjectRetain();
        if ((sub_1D44FF7D0(v8, v23, v27, (uint64_t)v176) & 1) == 0)
        {
          v84 = v176[0];
          sub_1D42F1E18();
          sub_1D42F1E64();
          sub_1D42F1DA8();

          sub_1D42F1F1C(v85, v86, v87, v88, v89, v90, v91, v92, v170, v171, v173, v174);
          swift_unknownObjectRelease();
          return v9;
        }
        v29 = v176[0];
        swift_unknownObjectRelease();
        v30 = (void *)sub_1D451A6C8();
        v176[0] = 0;
        v31 = sub_1D44FD534(v8, v9, v30, 1, (uint64_t)v176);

        if (v31)
        {
          v172 = v31;
          v32 = v176[0];
          v33 = objc_msgSend(v25, sel_modelDescription);
          v34 = objc_msgSend(v33, sel_inputDescriptionsByName);

          sub_1D42E9D88(0, (unint64_t *)&qword_1EFE40360);
          v35 = sub_1D451A5CC();

          sub_1D42CB6CC();
          sub_1D4364898(a4, a5, v35);
          v37 = v36;
          sub_1D42B7204();
          sub_1D42CB5C8();
          if (v37)
          {
            v38 = objc_msgSend(v37, sel_multiArrayConstraint);

            if (v38)
            {
              v39 = (void *)sub_1D42F2108();
              v40 = objc_msgSend(v38, sel_shape);

              sub_1D42E9D88(0, (unint64_t *)&qword_1EFE404B0);
              v41 = sub_1D451A92C();

              v42 = sub_1D44BBDCC(v41);
              swift_bridgeObjectRelease();
              v43 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInt_, v42);
              sub_1D44BD638(v43);
              v45 = v44;

              sub_1D42F1208(v173 + 48, (uint64_t)v177, (uint64_t *)&unk_1EFE40460);
              sub_1D42F1208((uint64_t)v177, (uint64_t)&v178, (uint64_t *)&unk_1EFE40460);
              if ((~v178 & 0xF000000000000007) == 0)
              {
                sub_1D451A6C8();
                v46 = sub_1D42F1DB0();
                v50 = sub_1D44FEE98(v46, v47, v48, v49);

                v51 = v176[0];
                if (v50)
                {
                  sub_1D42F1EA4();
                  if (v53)
                  {
LABEL_45:
                    __break(1u);
                    goto LABEL_46;
                  }
                  if (v52 <= -1.0)
                  {
LABEL_46:
                    __break(1u);
                    goto LABEL_47;
                  }
                  if (v52 >= 4294967300.0)
                  {
LABEL_47:
                    __break(1u);
                    goto LABEL_48;
                  }
                  v54 = v52;
                  v55 = v51;
                  sub_1D450053C(v54, 1, 1, (uint64_t)v176);
                  v56 = sub_1D42F1D1C();
                  if (sub_1D42F1E90(v56, v57, v174, v50, v58, v59, v60, v61))
                  {
                    v62 = v175;
                    goto LABEL_27;
                  }
                  v161 = v175;
                  sub_1D42F20F0();

                  sub_1D42F1DA8();
                  sub_1D42F1E6C(v162, v163, v164, v165, v166, v167, v168, v169, v170, v172);

                }
                else
                {
                  v151 = v176[0];
                  sub_1D42F1F80();
                  sub_1D42F1E64();
                  sub_1D42F1DA8();

                  sub_1D42F1E6C(v152, v153, v154, v155, v156, v157, v158, v159, v170, v172);
                }

                return v9;
              }
              sub_1D42F0D98(&v178, v179);
              v50 = v174;
LABEL_27:
              v105 = *(double *)(v173 + 32);
              if ((~*(_QWORD *)&v105 & 0x7FF0000000000000) != 0)
              {
                if (v105 > -1.0)
                {
                  if (v105 < 4294967300.0)
                  {
                    sub_1D42F20A0();
                    sub_1D4500620(v106, v107, v45, 1, v108);
                    v109 = sub_1D42F1D1C();
                    if (sub_1D42F1E90(v109, v110, v50, v23, v111, v112, v113, v114))
                    {
                      v115 = v175;
                      sub_1D42F20A0();
                      sub_1D4500620(v116, v117, 1, 1, v118);
                      v119 = sub_1D42F1D1C();
                      if (sub_1D42F1E90(v119, v120, v23, v172, v121, v122, v123, v124))
                      {
                        if (v105 > -9.22337204e18)
                        {
                          if (v105 < 9.22337204e18)
                          {
                            v125 = v175;
                            sub_1D44F3DE8((uint64_t)v9);
                            sub_1D44F44A0((uint64_t)v9);

                            sub_1D42F1E6C(v126, v127, v128, v129, v130, v131, v132, v133, v170, v172);
LABEL_39:
                            sub_1D42F1F1C(v134, v135, v136, v137, v138, v139, v140, v141, v170, (uint64_t)v172, v173, v174);

                            return v9;
                          }
LABEL_49:
                          __break(1u);
                        }
LABEL_48:
                        __break(1u);
                        goto LABEL_49;
                      }
                      v160 = v175;
                      sub_1D42F1F80();

                      sub_1D42F1DA8();
                    }
                    else
                    {
                      v142 = v175;
                      sub_1D42F20F0();

                      sub_1D42F1DA8();
                      sub_1D42F1E6C(v143, v144, v145, v146, v147, v148, v149, v150, v170, v172);
                    }

                    goto LABEL_39;
                  }
                  goto LABEL_44;
                }
              }
              else
              {
                __break(1u);
              }
              __break(1u);
LABEL_44:
              __break(1u);
              goto LABEL_45;
            }
          }
          sub_1D42B7F2C();
          v94 = sub_1D42B6D0C();
          sub_1D42F2074(v94, v95);

          sub_1D42F1E6C(v96, v97, v98, v99, v100, v101, v102, v103, v170, v172);
          goto LABEL_20;
        }
        v104 = v176[0];
        sub_1D42F1E18();
        sub_1D42F1E64();
        sub_1D42F1DA8();

      }
      else
      {
        v65 = v176[0];
        sub_1D42F1F80();
        sub_1D42F1E64();
        sub_1D42F1DA8();
      }

LABEL_20:
      sub_1D42F1F1C(v66, v67, v68, v69, v70, v71, v72, v73, v170, v171, v173, v174);
      return v9;
    }
    v64 = v176[0];
    sub_1D42F1E18();
    sub_1D42F1E64();
    sub_1D42F1DA8();

  }
  else
  {
    v63 = v176[0];
    sub_1D42F1E18();
    sub_1D42F1E64();
    sub_1D42F1DA8();
  }
  return v9;
}

id sub_1D42EFD00()
{
  uint64_t v0;
  void *v1;
  uint64_t v3;
  _BYTE *v4;

  v1 = *(void **)(v0 + 88);
  if (v1)
    return v1;
  sub_1D42F0C54();
  v3 = sub_1D42B6D0C();
  return (id)sub_1D42F2074(v3, v4);
}

void sub_1D42EFD4C(uint64_t a1, uint64_t a2, unsigned int a3, void *a4)
{
  uint64_t v4;
  unsigned int v8;
  double v9;
  char v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD v25[8];
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;

  v8 = sub_1D44F12F4((uint64_t)a4, 0);
  sub_1D44C87E0(a4, 0, (uint64_t)v25);
  if (!v4)
  {
    sub_1D42F1EA4();
    if (v10)
    {
      __break(1u);
    }
    else if (v9 > -9.22337204e18)
    {
      if (v9 < 9.22337204e18)
      {
        v11 = a3 >> 1;
        if (!__OFADD__((uint64_t)v9, v11))
        {
          if (!__OFSUB__((uint64_t)v9 + v11, v8 >> 1))
          {
            v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedInt_, sub_1D44F2078((uint64_t)a4));
            sub_1D42DC694(v12);

            v13 = sub_1D451B0A0();
            LODWORD(v12) = v14;
            v34 = v15;
            v24 = HIDWORD(v14);
            v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedInt_, sub_1D44F2078((uint64_t)a4));
            sub_1D42DC694(v16);

            v17 = sub_1D451B0A0();
            v19 = v18;
            v21 = v20;
            v22 = HIDWORD(v18);
            v23 = sub_1D42B7104();
            v26 = v13;
            v27 = (int)v12;
            v28 = v24;
            v29 = v34;
            v30 = v17;
            v31 = v19;
            v32 = v22;
            v33 = v21;
            (*(void (**)(uint64_t *, uint64_t, uint64_t))(a2 + 8))(&v26, v23, a2);
            return;
          }
LABEL_13:
          __break(1u);
          return;
        }
LABEL_12:
        __break(1u);
        goto LABEL_13;
      }
LABEL_11:
      __break(1u);
      goto LABEL_12;
    }
    __break(1u);
    goto LABEL_11;
  }
}

uint64_t sub_1D42EFF0C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  double v35;
  double v36;
  id v37;
  id v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t result;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  id v67;
  _QWORD v68[8];
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v6 = v4;
  v72 = *MEMORY[0x1E0C80C00];
  v10 = objc_opt_self();
  v67 = 0;
  v11 = sub_1D4500090(v10, a1, (uint64_t)&v67);
  v12 = v67;
  if (!v11)
  {
    v33 = v67;
    sub_1D4519AA4();

    swift_willThrow();
    return (uint64_t)v12;
  }
  v13 = v11;
  v64 = a4;
  v65 = a3;
  sub_1D42D71EC();
  v14 = v12;
  sub_1D42F2034();
  v15 = (void *)sub_1D451A6C8();
  sub_1D42CB5C8();
  v16 = objc_msgSend(v13, sel_featureValueForName_, v15);

  if (v16)
  {
    v17 = v16;
    v66 = objc_msgSend(v17, sel_multiArrayValue);
    if (v66)
    {
      if (!*(_QWORD *)(v6 + 136)
        || (sub_1D42CB6CC(),
            v18 = (void *)sub_1D42F2004(),
            sub_1D42B7204(),
            v19 = objc_msgSend(v13, sel_featureValueForName_, v18),
            v18,
            !v19))
      {
        v22 = 0;
LABEL_9:
        type metadata accessor for SNDetectionResult();
        sub_1D42D71EC();
        sub_1D447900C();
        v12 = (id)*(unsigned int *)(v6 + 56);
        v24 = (char *)v23;
        sub_1D42EFD4C((uint64_t)v24, (uint64_t)&off_1E97A24B0, v12, a1);
        if (v5)
        {
          sub_1D42E3CCC();

          sub_1D42F1FF0(v25, v26, v27, v28, v29, v30, v31, v32, v55, v56, v57, v58, v60, v62, v64, v65, v66);
        }
        else
        {

          v34 = sub_1D42F1ECC(v66, sel_objectAtIndexedSubscript_);
          objc_msgSend(v34, sel_doubleValue);
          v36 = v35;

          v63 = (uint64_t)&v24[OBJC_IVAR___SNDetectionResult_impl];
          *(double *)&v24[OBJC_IVAR___SNDetectionResult_impl + 48] = v36;
          if (v22)
          {
            v37 = v22;
            v38 = sub_1D42F1ECC(v37, sel_objectAtIndexedSubscript_);
            objc_msgSend(v38, sel_doubleValue);
            v36 = v39;

          }
          *(_BYTE *)(v63 + 72) = v36 > 0.5;
          v40 = sub_1D451A6EC();
          SNDetectionResult.detectorIdentifier.setter(v40, v41);
          SNDetectionResult.timeRange.getter((uint64_t)v68);
          sub_1D42F20B4();
          v59 = v43;
          v61 = v42;
          sub_1D451AEE4();
          sub_1D42F20B4();
          sub_1D451AEF0();
          v45 = v71;
          *(_QWORD *)v63 = v68[6];
          *(_QWORD *)(v63 + 8) = v68[7];
          *(_OWORD *)(v63 + 16) = v69;
          *(_QWORD *)(v63 + 32) = v70;
          *(_QWORD *)(v63 + 40) = v45;
          sub_1D42B28FC(&qword_1EFE40410);
          v46 = sub_1D42B6F40();
          *(_OWORD *)(v46 + 16) = xmmword_1D4525300;
          *(_QWORD *)(v46 + 32) = v24;
          v67 = (id)v46;
          sub_1D451A950();
          v12 = v67;
          v47 = sub_1D42E3CCC();
          sub_1D42F1FF0(v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v59, v61, v63, v64, v65, v66);

        }
        return (uint64_t)v12;
      }
      v20 = v19;
      v21 = objc_msgSend(v20, sel_multiArrayValue);
      if (v21)
      {
        v22 = v21;

        goto LABEL_9;
      }
    }
    sub_1D42F201C();
    sub_1D42F1FDC();
  }
  else
  {
    sub_1D42F2054();
    sub_1D42F201C();
  }
  result = sub_1D42F1FD0();
  __break(1u);
  return result;
}

void sub_1D42F0338()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = *v0;
  v3 = sub_1D42B6F40();
  *(_QWORD *)(v3 + 16) = v0;
  *(_QWORD *)(v3 + 24) = v2;
  swift_retain();
  v4 = sub_1D42CEEA4();
  swift_release();
  if (!v1)
  {
    v5 = (void *)v0[11];
    v0[11] = v4;

  }
}

uint64_t sub_1D42F03B8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t result;
  _OWORD v11[3];
  uint64_t v12;

  v4 = *(_OWORD *)(a1 + 32);
  v11[0] = *(_OWORD *)(a1 + 16);
  v11[1] = v4;
  v11[2] = *(_OWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 64);
  v6 = *(_QWORD *)(a1 + 80);
  v7 = *(_QWORD *)(a1 + 96);
  v8 = *(_QWORD *)(a1 + 104);
  sub_1D42F0CE4((uint64_t)v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = sub_1D42EF624((uint64_t)v11, v5, v6, v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = sub_1D42F0D34((uint64_t)v11);
  if (!v2)
    *a2 = v9;
  return result;
}

id sub_1D42F0470()
{
  uint64_t v0;
  id result;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  result = sub_1D42EFD00();
  if (!v0)
  {
    v2 = result;
    sub_1D42CB6CC();
    v3 = (void *)sub_1D42F2004();
    sub_1D42B7204();
    v4 = (void *)sub_1D42F2034();
    v6 = sub_1D44F590C(v4, v5);

    return v6;
  }
  return result;
}

void sub_1D42F04D8()
{
  uint64_t v0;

  sub_1D42F0C90(*(_QWORD *)(v0 + 64));
  sub_1D42B6E24();
}

uint64_t sub_1D42F04FC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  sub_1D42F0D80(v2);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D42F056C()
{
  sub_1D42F04FC();
  return swift_deallocClassInstance();
}

uint64_t sub_1D42F058C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42EFF0C(a1, a2, a3, a4);
}

id sub_1D42F05A4()
{
  return sub_1D42F0470();
}

void sub_1D42F05B8()
{
  sub_1D42F0338();
}

id sub_1D42F05CC()
{
  return sub_1D42EFD00();
}

uint64_t sub_1D42F05E0(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 40);
  sub_1D42B62C8(*(void **)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));

  swift_bridgeObjectRelease();
  return a1;
}

uint64_t type metadata accessor for SNDetectSoundRequest()
{
  return objc_opt_self();
}

uint64_t method lookup function for SNDetectSoundRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for SNSoundDetector()
{
  return objc_opt_self();
}

uint64_t sub_1D42F0674()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42F069C(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  __int128 v4;
  uint64_t v5;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v5 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D42F06F0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_1D42F07AC(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x60uLL);
}

uint64_t sub_1D42F07B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v5 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D42F0830(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 96))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 64);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1D42F0870(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 64) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for SoundDetection.Result()
{
  sub_1D42CB35C();
}

void type metadata accessor for SoundDetection()
{
  sub_1D42CB35C();
}

void sub_1D42F08E0(uint64_t a1)
{
  sub_1D42B62C8(*(void **)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRelease();

}

uint64_t sub_1D42F0918(uint64_t a1, uint64_t a2)
{
  id v4;
  void *v5;
  char v6;
  uint64_t v7;
  void *v8;
  id v9;

  v4 = *(id *)a2;
  v5 = *(void **)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_1D42B633C(*(id *)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  v8 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRetain();
  v9 = v8;
  return a1;
}

uint64_t sub_1D42F0984(uint64_t a1, uint64_t a2)
{
  id v4;
  void *v5;
  char v6;
  void *v7;
  void *v8;
  char v9;
  void *v10;
  void *v11;
  id v12;

  v4 = *(id *)a2;
  v5 = *(void **)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_1D42B633C(*(id *)a2, v5, v6);
  v7 = *(void **)a1;
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  v9 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v6;
  sub_1D42B62C8(v7, v8, v9);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(void **)(a2 + 40);
  v11 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v10;
  v12 = v10;

  return a1;
}

uint64_t sub_1D42F0A18(uint64_t a1, uint64_t a2)
{
  char v4;
  void *v5;
  void *v6;
  char v7;
  void *v8;

  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(void **)a1;
  v6 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v7 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v4;
  sub_1D42B62C8(v5, v6, v7);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v8 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  return a1;
}

uint64_t sub_1D42F0A7C(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 32);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1D42F0ABC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for SoundDetection.AudioSourceAgnosticRequest()
{
  sub_1D42CB35C();
}

unint64_t sub_1D42F0B18()
{
  unint64_t result;

  result = qword_1EFE4A5C0;
  if (!qword_1EFE4A5C0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4526F2C, &unk_1E979A700);
    atomic_store(result, (unint64_t *)&qword_1EFE4A5C0);
  }
  return result;
}

unint64_t sub_1D42F0B54(uint64_t a1)
{
  unint64_t result;

  result = sub_1D42F0B78();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1D42F0B78()
{
  unint64_t result;

  result = qword_1EFE4A5C8;
  if (!qword_1EFE4A5C8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45270CC, &unk_1E979A8C8);
    atomic_store(result, (unint64_t *)&qword_1EFE4A5C8);
  }
  return result;
}

unint64_t sub_1D42F0BB4(uint64_t a1)
{
  unint64_t result;

  result = sub_1D42F0BD8();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1D42F0BD8()
{
  unint64_t result;

  result = qword_1EFE4A5D0;
  if (!qword_1EFE4A5D0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45270A4, &unk_1E979A8C8);
    atomic_store(result, (unint64_t *)&qword_1EFE4A5D0);
  }
  return result;
}

unint64_t sub_1D42F0C18()
{
  unint64_t result;

  result = qword_1EFE4A5D8;
  if (!qword_1EFE4A5D8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4527044, &unk_1E979A8C8);
    atomic_store(result, (unint64_t *)&qword_1EFE4A5D8);
  }
  return result;
}

unint64_t sub_1D42F0C54()
{
  unint64_t result;

  result = qword_1EFE4A5E0;
  if (!qword_1EFE4A5E0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4527588, &unk_1E97A1020);
    atomic_store(result, (unint64_t *)&qword_1EFE4A5E0);
  }
  return result;
}

unint64_t sub_1D42F0C90(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return (unint64_t)(id)(result & 0x7FFFFFFFFFFFFFFFLL);
  return result;
}

uint64_t sub_1D42F0CA8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D42F0CCC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1D42F03B8(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1D42F0CE4(uint64_t a1)
{
  void *v2;
  unint64_t v3;
  id v4;

  v2 = *(void **)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 48);
  swift_unknownObjectRetain();
  v4 = v2;
  swift_bridgeObjectRetain();
  sub_1D42F0C90(v3);
  return a1;
}

uint64_t sub_1D42F0D34(uint64_t a1)
{
  void *v2;
  uint64_t v3;

  v2 = *(void **)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 48);
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  sub_1D42F0D80(v3);
  return a1;
}

void sub_1D42F0D80(uint64_t a1)
{
  if ((~a1 & 0xF000000000000007) != 0)

}

_QWORD *sub_1D42F0D98(_QWORD *a1, _QWORD *a2)
{
  initializeWithTake for FeatureExtractorConfiguration(a2, a1);
  return a2;
}

unint64_t sub_1D42F0DD4()
{
  unint64_t result;

  result = qword_1EFE4A670;
  if (!qword_1EFE4A670)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4527538, &unk_1E9799858);
    atomic_store(result, (unint64_t *)&qword_1EFE4A670);
  }
  return result;
}

uint64_t sub_1D42F0E10()
{
  uint64_t v0;

  sub_1D42B62C8(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_BYTE *)(v0 + 32));
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id sub_1D42F0E60()
{
  uint64_t v0;

  return sub_1D42ECB7C((_OWORD *)(v0 + 16));
}

uint64_t sub_1D42F0E78()
{
  uint64_t v0;

  sub_1D42B5400(v0 + 16);
  sub_1D42B62C8(*(void **)(v0 + 56), *(void **)(v0 + 64), *(_BYTE *)(v0 + 72));
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D42F0ED0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1D42ECC50((_QWORD *)(v1 + 16), v1 + 56, a1);
}

uint64_t sub_1D42F0EEC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D42F0F18(uint64_t a1)
{
  uint64_t v1;

  return sub_1D43ED15C(a1, *(uint64_t (**)(id, uint64_t, uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(uint64_t *__return_ptr))(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1D42F0F24()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1D42F0F48()
{
  sub_1D43EDA00();
}

uint64_t sub_1D42F0F50(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 40);
  sub_1D42B633C(*(id *)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v3 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D42F0FC4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1D43EF8F4(*a1);
  if (!v2)
    *a2 = result;
  return result;
}

unint64_t sub_1D42F0FF0()
{
  unint64_t result;

  result = qword_1EFE4A6E8;
  if (!qword_1EFE4A6E8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45274E8, &type metadata for SoundDetection.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4A6E8);
  }
  return result;
}

unint64_t sub_1D42F102C()
{
  unint64_t result;

  result = qword_1EFE4A710;
  if (!qword_1EFE4A710)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4527498, &type metadata for SoundDetection.AudioSourceAgnosticRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4A710);
  }
  return result;
}

unint64_t sub_1D42F1068()
{
  unint64_t result;

  result = qword_1EFE4A718;
  if (!qword_1EFE4A718)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452BB98, &type metadata for DetectorVariant);
    atomic_store(result, (unint64_t *)&qword_1EFE4A718);
  }
  return result;
}

unint64_t sub_1D42F10A4()
{
  unint64_t result;

  result = qword_1EFE4A748;
  if (!qword_1EFE4A748)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452BB70, &type metadata for DetectorVariant);
    atomic_store(result, (unint64_t *)&qword_1EFE4A748);
  }
  return result;
}

void sub_1D42F10E0(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (!*a1)
  {
    v6 = sub_1D42B8B10(&qword_1EFE4A720);
    v7 = a2;
    atomic_store(MEMORY[0x1D825E41C](a3, v6, &v7), a1);
  }
  sub_1D42CB758();
}

uint64_t sub_1D42F1134(uint64_t a1)
{
  uint64_t result;

  result = swift_dynamicCastMetatype();
  if (result)
    return a1;
  __break(1u);
  return result;
}

void sub_1D42F1168(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = sub_1D42B8B10(a2);
    atomic_store(MEMORY[0x1D825E41C](a3, v5), a1);
  }
  sub_1D42B6E24();
}

uint64_t *sub_1D42F11A4(uint64_t *a1)
{
  sub_1D42F11D8(*a1, a1[1], a1[2], a1[3], a1[4], a1[5]);
  return a1;
}

uint64_t sub_1D42F11D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a6)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1D42F1208(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  void (*v4)(uint64_t);

  sub_1D42B28FC(a3);
  v3 = sub_1D42F1F54();
  v4(v3);
  sub_1D42B6E24();
}

uint64_t sub_1D42F1244(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t storeEnumTagSinglePayload for SoundDetection.AudioSourceAgnosticRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D42F12B8 + 4 * byte_1D4526E3A[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D42F12EC + 4 * byte_1D4526E35[v4]))();
}

uint64_t sub_1D42F12EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D42F12F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D42F12FCLL);
  return result;
}

uint64_t sub_1D42F1308(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D42F1310);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D42F1314(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D42F131C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SoundDetection.AudioSourceAgnosticRequest.CodingKeys()
{
  return &type metadata for SoundDetection.AudioSourceAgnosticRequest.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for SoundDetection.Result.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D42F1384 + 4 * byte_1D4526E44[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D42F13B8 + 4 * byte_1D4526E3F[v4]))();
}

uint64_t sub_1D42F13B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D42F13C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D42F13C8);
  return result;
}

uint64_t sub_1D42F13D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D42F13DCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D42F13E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D42F13E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SoundDetection.Result.CodingKeys()
{
  return &type metadata for SoundDetection.Result.CodingKeys;
}

uint64_t sub_1D42F1404(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D42F1444 + 4 * byte_1D4526E49[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D42F1464 + 4 * byte_1D4526E4E[v4]))();
}

_BYTE *sub_1D42F1444(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D42F1464(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D42F146C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D42F1474(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D42F147C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D42F1484(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for SNDetectSoundRequest.DomainError()
{
  sub_1D42CB35C();
}

void type metadata accessor for SoundDetection.Session()
{
  sub_1D42CB35C();
}

void type metadata accessor for SNSoundDetector.DomainError()
{
  sub_1D42CB35C();
}

uint64_t sub_1D42F14BC(uint64_t a1)
{
  sub_1D42B62C8(*(void **)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42F150C(uint64_t a1, uint64_t a2)
{
  id v4;
  void *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  v4 = *(id *)a2;
  v5 = *(void **)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_1D42B633C(*(id *)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  v9 = *(void **)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v8;
  v10 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v10;
  v11 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v11;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_WORD *)(a1 + 100) = *(_WORD *)(a2 + 100);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  swift_bridgeObjectRetain();
  v12 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D42F15C8(uint64_t a1, uint64_t a2)
{
  id v4;
  void *v5;
  char v6;
  void *v7;
  void *v8;
  char v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;

  v4 = *(id *)a2;
  v5 = *(void **)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_1D42B633C(*(id *)a2, v5, v6);
  v7 = *(void **)a1;
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  v9 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v6;
  sub_1D42B62C8(v7, v8, v9);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(void **)(a2 + 40);
  v11 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v10;
  v12 = v10;

  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  *(_BYTE *)(a1 + 98) = *(_BYTE *)(a2 + 98);
  *(_BYTE *)(a1 + 99) = *(_BYTE *)(a2 + 99);
  *(_BYTE *)(a1 + 100) = *(_BYTE *)(a2 + 100);
  *(_BYTE *)(a1 + 101) = *(_BYTE *)(a2 + 101);
  v13 = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = v13;
  return a1;
}

void *sub_1D42F16FC(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x71uLL);
}

uint64_t sub_1D42F1704(uint64_t a1, uint64_t a2)
{
  char v4;
  void *v5;
  void *v6;
  char v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(void **)a1;
  v6 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v7 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v4;
  sub_1D42B62C8(v5, v6, v7);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v8 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  *(_BYTE *)(a1 + 98) = *(_BYTE *)(a2 + 98);
  *(_BYTE *)(a1 + 99) = *(_BYTE *)(a2 + 99);
  *(_BYTE *)(a1 + 100) = *(_BYTE *)(a2 + 100);
  *(_BYTE *)(a1 + 101) = *(_BYTE *)(a2 + 101);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  return a1;
}

uint64_t sub_1D42F17D8(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 113))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 32);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1D42F1818(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 112) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 113) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 113) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for SoundDetection.Request()
{
  sub_1D42CB35C();
}

unint64_t sub_1D42F1888()
{
  unint64_t result;

  result = qword_1EFE4A7A8;
  if (!qword_1EFE4A7A8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4527190, &unk_1E979A9E8);
    atomic_store(result, (unint64_t *)&qword_1EFE4A7A8);
  }
  return result;
}

unint64_t sub_1D42F18C8()
{
  unint64_t result;

  result = qword_1EFE4A7B0;
  if (!qword_1EFE4A7B0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4527238, &unk_1E97A1020);
    atomic_store(result, (unint64_t *)&qword_1EFE4A7B0);
  }
  return result;
}

unint64_t sub_1D42F1908()
{
  unint64_t result;

  result = qword_1EFE4A7B8;
  if (!qword_1EFE4A7B8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45272B0, &unk_1E9799858);
    atomic_store(result, (unint64_t *)&qword_1EFE4A7B8);
  }
  return result;
}

unint64_t sub_1D42F1948()
{
  unint64_t result;

  result = qword_1EFE4A7C0;
  if (!qword_1EFE4A7C0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4527368, &type metadata for SoundDetection.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4A7C0);
  }
  return result;
}

unint64_t sub_1D42F1988()
{
  unint64_t result;

  result = qword_1EFE4A7C8;
  if (!qword_1EFE4A7C8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4527420, &type metadata for SoundDetection.AudioSourceAgnosticRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4A7C8);
  }
  return result;
}

unint64_t sub_1D42F19C8()
{
  unint64_t result;

  result = qword_1EFE4A7D0;
  if (!qword_1EFE4A7D0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4527390, &type metadata for SoundDetection.AudioSourceAgnosticRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4A7D0);
  }
  return result;
}

unint64_t sub_1D42F1A08()
{
  unint64_t result;

  result = qword_1EFE4A7D8;
  if (!qword_1EFE4A7D8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45273B8, &type metadata for SoundDetection.AudioSourceAgnosticRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4A7D8);
  }
  return result;
}

unint64_t sub_1D42F1A48()
{
  unint64_t result;

  result = qword_1EFE4A7E0;
  if (!qword_1EFE4A7E0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45272D8, &type metadata for SoundDetection.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4A7E0);
  }
  return result;
}

unint64_t sub_1D42F1A88()
{
  unint64_t result;

  result = qword_1EFE4A7E8;
  if (!qword_1EFE4A7E8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4527300, &type metadata for SoundDetection.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4A7E8);
  }
  return result;
}

unint64_t sub_1D42F1AC4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFE4A7F0;
  if (!qword_1EFE4A7F0)
  {
    v1 = sub_1D42B8B10((uint64_t *)&unk_1EFE4A780);
    v2[0] = &off_1E979A808;
    v2[1] = &off_1E979A818;
    result = MEMORY[0x1D825E41C](&unk_1D45293A0, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFE4A7F0);
  }
  return result;
}

unint64_t sub_1D42F1B28()
{
  unint64_t result;

  result = qword_1EFE4A800;
  if (!qword_1EFE4A800)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4527680, &type metadata for SoundDetection.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4A800);
  }
  return result;
}

uint64_t _s13SoundAnalysis14SoundDetectionV7RequestV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D42F1BB0 + 4 * byte_1D4526E58[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D42F1BE4 + 4 * byte_1D4526E53[v4]))();
}

uint64_t sub_1D42F1BE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D42F1BEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D42F1BF4);
  return result;
}

uint64_t sub_1D42F1C00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D42F1C08);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D42F1C0C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D42F1C14(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SoundDetection.Request.CodingKeys()
{
  return &type metadata for SoundDetection.Request.CodingKeys;
}

unint64_t sub_1D42F1C34()
{
  unint64_t result;

  result = qword_1EFE4A820;
  if (!qword_1EFE4A820)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4527658, &type metadata for SoundDetection.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4A820);
  }
  return result;
}

unint64_t sub_1D42F1C74()
{
  unint64_t result;

  result = qword_1EFE4A828;
  if (!qword_1EFE4A828)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45275C8, &type metadata for SoundDetection.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4A828);
  }
  return result;
}

unint64_t sub_1D42F1CB4()
{
  unint64_t result;

  result = qword_1EFE4A830;
  if (!qword_1EFE4A830)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45275F0, &type metadata for SoundDetection.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4A830);
  }
  return result;
}

void sub_1D42F1CF4()
{
  sub_1D442FBA4();
}

void sub_1D42F1D0C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;

  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 8 * v3 + 32) = v2;

}

uint64_t sub_1D42F1D1C()
{
  uint64_t v0;

  return v0;
}

__n128 sub_1D42F1D4C()
{
  __n128 *v0;

  return v0[5];
}

id sub_1D42F1D9C@<X0>(void *a1@<X8>)
{
  return a1;
}

uint64_t sub_1D42F1DA8()
{
  return swift_willThrow();
}

uint64_t sub_1D42F1DB0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D42F1DCC()
{
  uint64_t v0;

  return v0 - 144;
}

uint64_t sub_1D42F1DEC()
{
  return swift_task_switch();
}

void sub_1D42F1DFC(void *a1)
{
  char v1;
  void *v2;

  sub_1D42B62C8(a1, v2, v1);
}

uint64_t sub_1D42F1E08()
{
  return sub_1D451A794();
}

uint64_t sub_1D42F1E18()
{
  return sub_1D4519AA4();
}

unint64_t sub_1D42F1E24()
{
  return 0xD000000000000017;
}

uint64_t sub_1D42F1E44()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t result;

  v2 = *v0;
  v3 = (uint64_t *)(v1 - 8);
  *v3 = *v0;
  result = *(_QWORD *)(v2 + 24);
  *v3 = *v0;
  return result;
}

void sub_1D42F1E64()
{
  void *v0;

}

void sub_1D42F1E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

}

uint64_t sub_1D42F1E74()
{
  return 0x6E656469666E6F43;
}

uint64_t sub_1D42F1E90(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6, __int128 *a7, uint64_t a8)
{
  return sub_1D45002DC(a1, a2, a3, a4, 0, 0, a7, a8);
}

uint64_t sub_1D42F1E9C()
{
  return sub_1D451B964();
}

uint64_t sub_1D42F1EC4()
{
  uint64_t v0;

  return sub_1D42F0D34(v0);
}

id sub_1D42F1ECC(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, 0);
}

uint64_t sub_1D42F1EEC()
{
  return 0x6465746365746544;
}

uint64_t sub_1D42F1F04()
{
  return sub_1D451B820();
}

void sub_1D42F1F0C(void *a1)
{
  sub_1D44C91CC(a1);
}

void sub_1D42F1F1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{

}

void sub_1D42F1F24()
{
  void *v0;
  char v1;
  void *v2;

  sub_1D42B62C8(v2, v0, v1);
}

void sub_1D42F1F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;
  char v12;
  void *v13;

  sub_1D42B62C8(v11, v13, v12);

}

uint64_t sub_1D42F1F54()
{
  uint64_t v0;

  return v0;
}

void sub_1D42F1F60()
{
  char v0;
  void *v1;
  void *v2;

  sub_1D42B62C8(v1, v2, v0);
}

uint64_t sub_1D42F1F70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t sub_1D42F1F80()
{
  return sub_1D4519AA4();
}

uint64_t sub_1D42F1F88()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D42F1FA0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

void sub_1D42F1FA8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
}

uint64_t sub_1D42F1FB4()
{
  return swift_release();
}

uint64_t sub_1D42F1FBC()
{
  uint64_t v0;

  return v0 - 104;
}

uint64_t sub_1D42F1FD0()
{
  return sub_1D451B55C();
}

void sub_1D42F1FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17)
{

}

uint64_t sub_1D42F1FF8()
{
  return sub_1D451BA0C();
}

uint64_t sub_1D42F2004()
{
  return sub_1D451A6C8();
}

void *sub_1D42F2010(void *a1)
{
  const void *v1;

  return memcpy(a1, v1, 0x71uLL);
}

uint64_t sub_1D42F2028()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42F2034()
{
  uint64_t v0;

  return v0;
}

id sub_1D42F2040(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, (SEL)(v1 + 1352));
}

id sub_1D42F2048()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, (SEL)(v1 + 2782));
}

uint64_t sub_1D42F2068()
{
  return sub_1D451B688();
}

uint64_t sub_1D42F2074(uint64_t a1, _BYTE *a2)
{
  *a2 = 0;
  return swift_willThrow();
}

uint64_t sub_1D42F2094()
{
  return sub_1D451A6C8();
}

uint64_t sub_1D42F20A0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D42F20B4()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_1D42F20C0()
{
  uint64_t v0;

  return v0;
}

void sub_1D42F20CC()
{
  void *v0;
  char v1;
  void *v2;
  void *v3;

  sub_1D42B62C8(v3, v2, v1);

}

uint64_t sub_1D42F20E8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D42F20F0()
{
  return sub_1D4519AA4();
}

uint64_t sub_1D42F20FC()
{
  return sub_1D42EA530();
}

uint64_t sub_1D42F2108()
{
  return type metadata accessor for SNUtils();
}

uint64_t sub_1D42F2110()
{
  return sub_1D451B688();
}

uint64_t sub_1D42F211C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  sub_1D4333C5C(a1, a2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42F2158(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000012 && a2 == 0x80000001D4551B20)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1D451B820();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_1D42F21DC()
{
  return 0xD000000000000012;
}

uint64_t sub_1D42F21F8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1D42B28FC(&qword_1EFE4A868);
  sub_1D42F29C8();
  MEMORY[0x1E0C80A78](v4);
  sub_1D42CB210();
  v7 = v6 - v5;
  sub_1D42B5528(a1, a1[3]);
  sub_1D42F276C();
  sub_1D451BA24();
  sub_1D42B28FC(&qword_1EFE4A858);
  sub_1D42F27A8(&qword_1EFE4A870, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEB420], MEMORY[0x1E0DEA0B8]);
  sub_1D451B760();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v7, v1);
}

uint64_t sub_1D42F2308(uint64_t a1)
{
  _BYTE v3[72];

  sub_1D451B958();
  swift_bridgeObjectRetain();
  sub_1D4333C5C((uint64_t)v3, a1);
  swift_bridgeObjectRelease();
  return sub_1D451B994();
}

_QWORD *sub_1D42F235C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v11;

  sub_1D42B28FC(&qword_1EFE4A848);
  sub_1D42F29C8();
  MEMORY[0x1E0C80A78](v5);
  sub_1D42CB210();
  v8 = v7 - v6;
  v9 = sub_1D42B5528(a1, a1[3]);
  sub_1D42F276C();
  sub_1D451BA0C();
  if (v1)
  {
    sub_1D42B5400((uint64_t)a1);
  }
  else
  {
    sub_1D42B28FC(&qword_1EFE4A858);
    sub_1D42F27A8(&qword_1EFE4A860, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEB448], MEMORY[0x1E0DEA0D8]);
    sub_1D451B688();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v8, v2);
    v9 = v11;
    sub_1D42B5400((uint64_t)a1);
  }
  return v9;
}

uint64_t sub_1D42F2498@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D42F2158(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D42F24C0()
{
  sub_1D42F276C();
  return sub_1D451BA3C();
}

uint64_t sub_1D42F24E8()
{
  sub_1D42F276C();
  return sub_1D451BA48();
}

_QWORD *sub_1D42F2510@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1D42F235C(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1D42F2538(_QWORD *a1)
{
  return sub_1D42F21F8(a1);
}

uint64_t sub_1D42F2550()
{
  uint64_t *v0;

  return sub_1D42F2308(*v0);
}

uint64_t sub_1D42F2558(uint64_t a1)
{
  uint64_t *v1;

  return sub_1D42F211C(a1, *v1);
}

uint64_t sub_1D42F2560()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1D451B958();
  swift_bridgeObjectRetain();
  sub_1D4333C5C((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_1D451B994();
}

uint64_t sub_1D42F25B0(_QWORD *a1, _QWORD *a2)
{
  return sub_1D42F2154(*a1, *a2);
}

uint64_t sub_1D42F25BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v1 = v0;
  v2 = sub_1D42B28FC(&qword_1EFE4A878);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1D42CB210();
  v6 = v5 - v4;
  v7 = *(_QWORD *)(v1 + 16);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = sub_1D42BE1BC;
  v8[3] = v1;
  v8[4] = v7;
  swift_retain();
  swift_retain();
  sub_1D42B28FC(&qword_1EFE55F10);
  sub_1D42BE210(&qword_1EFE55F20, &qword_1EFE55F10, MEMORY[0x1E0C95D90]);
  sub_1D451A2C0();
  sub_1D42BE210(&qword_1EFE4A880, &qword_1EFE4A878, MEMORY[0x1E0C96148]);
  v9 = sub_1D451A2E4();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
  return v9;
}

uint64_t type metadata accessor for SharedHIDReportStream.Instance()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for SharedHIDReportStream()
{
  return &type metadata for SharedHIDReportStream;
}

ValueMetadata *type metadata accessor for SharedHIDReportStream.Configuration()
{
  return &type metadata for SharedHIDReportStream.Configuration;
}

unint64_t sub_1D42F2730()
{
  unint64_t result;

  result = qword_1EFE4A840;
  if (!qword_1EFE4A840)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45277A4, &type metadata for SharedHIDReportStream.Configuration);
    atomic_store(result, (unint64_t *)&qword_1EFE4A840);
  }
  return result;
}

unint64_t sub_1D42F276C()
{
  unint64_t result;

  result = qword_1EFE4A850;
  if (!qword_1EFE4A850)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4527920, &type metadata for SharedHIDReportStream.Configuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4A850);
  }
  return result;
}

uint64_t sub_1D42F27A8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = sub_1D42B8B10(&qword_1EFE4A858);
    v10[0] = a2;
    v10[1] = a3;
    result = MEMORY[0x1D825E41C](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1D42F280C()
{
  sub_1D44A5F60();
}

uint64_t sub_1D42F2824(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t sub_1D42F2834()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1D42F2860()
{
  sub_1D42F280C();
}

uint64_t storeEnumTagSinglePayload for SharedHIDReportStream.Configuration.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D42F28AC + 4 * byte_1D4527700[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D42F28CC + 4 * byte_1D4527705[v4]))();
}

_BYTE *sub_1D42F28AC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D42F28CC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D42F28D4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D42F28DC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D42F28E4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D42F28EC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SharedHIDReportStream.Configuration.CodingKeys()
{
  return &type metadata for SharedHIDReportStream.Configuration.CodingKeys;
}

unint64_t sub_1D42F290C()
{
  unint64_t result;

  result = qword_1EFE4A888;
  if (!qword_1EFE4A888)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45278F8, &type metadata for SharedHIDReportStream.Configuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4A888);
  }
  return result;
}

unint64_t sub_1D42F294C()
{
  unint64_t result;

  result = qword_1EFE4A890;
  if (!qword_1EFE4A890)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4527868, &type metadata for SharedHIDReportStream.Configuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4A890);
  }
  return result;
}

unint64_t sub_1D42F298C()
{
  unint64_t result;

  result = qword_1EFE4A898;
  if (!qword_1EFE4A898)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4527890, &type metadata for SharedHIDReportStream.Configuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4A898);
  }
  return result;
}

uint64_t sub_1D42F29DC()
{
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1D42F29F8()
{
  return 0;
}

uint64_t sub_1D42F2A04(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = sub_1D42B28FC(&qword_1EFE4A970);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42B5528(a1, a1[3]);
  sub_1D42F388C();
  sub_1D451BA24();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_1D42F2AC8()
{
  sub_1D42BE9A8();
  sub_1D42CB230();
  sub_1D42BE978();
}

uint64_t sub_1D42F2AE8(uint64_t a1)
{
  return sub_1D42B5400(a1);
}

uint64_t sub_1D42F2B10@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D42F29DC();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D42F2B38()
{
  sub_1D42F388C();
  return sub_1D451BA3C();
}

uint64_t sub_1D42F2B60()
{
  sub_1D42F388C();
  return sub_1D451BA48();
}

uint64_t sub_1D42F2B8C()
{
  sub_1D451B958();
  return sub_1D451B994();
}

uint64_t sub_1D42F2BBC(uint64_t a1)
{
  return sub_1D42F2AE8(a1);
}

uint64_t sub_1D42F2BD0(_QWORD *a1)
{
  return sub_1D42F2A04(a1);
}

uint64_t sub_1D42F2BE4()
{
  uint64_t result;

  type metadata accessor for SNDistanceEstimator();
  result = sub_1D42B6F40();
  *(_QWORD *)(result + 16) = 0;
  return result;
}

id sub_1D42F2C1C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_1D42B7104();
  return objc_msgSendSuper2(&v2, sel_init);
}

id SNEstimateSpeechDistanceRequest.copy(with:)@<X0>(_QWORD *a1@<X8>)
{
  objc_class *ObjectType;
  id result;
  objc_super v4;

  ObjectType = (objc_class *)swift_getObjectType();
  v4.receiver = objc_allocWithZone(ObjectType);
  v4.super_class = ObjectType;
  result = objc_msgSendSuper2(&v4, sel_init);
  a1[3] = ObjectType;
  *a1 = result;
  return result;
}

void SNEstimateSpeechDistanceRequest.hash.getter()
{
  sub_1D42BE9A8();
  sub_1D42CB230();
  sub_1D42BE978();
}

uint64_t SNEstimateSpeechDistanceRequest.isEqual(_:)(uint64_t a1)
{
  uint64_t v2;
  void *v4;
  _BYTE v5[32];
  _OWORD v6[2];
  __int128 v7;
  uint64_t v8;

  sub_1D42B7104();
  sub_1D42B28B4(a1, (uint64_t)&v7);
  if (!v8)
    return 0;
  sub_1D42B293C(&v7, v6);
  sub_1D42B294C((uint64_t)v6, (uint64_t)v5);
  if (swift_dynamicCast() && v4)
  {

    v2 = 1;
  }
  else
  {
    v2 = 0;
  }
  sub_1D42B5400((uint64_t)v6);
  return v2;
}

id SNEstimateSpeechDistanceRequest.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return SNEstimateSpeechDistanceRequest.init(coder:)(a1);
}

id SNEstimateSpeechDistanceRequest.init(coder:)(void *a1)
{
  void *v1;
  void *v2;
  objc_class *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  objc_super v10;

  v2 = v1;
  v4 = (objc_class *)sub_1D42CFC30();
  v5 = v2;
  v6 = sub_1D42F3A74();
  sub_1D42B14E4(v6, v7, (uint64_t)a1);

  v10.receiver = objc_allocWithZone(v4);
  v10.super_class = v4;
  v8 = objc_msgSendSuper2(&v10, sel_init);

  sub_1D42CFC30();
  sub_1D42F3A54();
  return v8;
}

Swift::Void __swiftcall SNEstimateSpeechDistanceRequest.encode(with:)(NSCoder with)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1D42F3A74();
  sub_1D42AF774(v2, v3, v1);
}

uint64_t static SNEstimateSpeechDistanceRequest.supportsSecureCoding.getter()
{
  return 1;
}

id SNEstimateSpeechDistanceRequest.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_1D42B7104();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

_UNKNOWN **sub_1D42F3064()
{
  uint64_t v0;
  _UNKNOWN **result;

  result = (_UNKNOWN **)sub_1D42F2BE4();
  if (v0)
    return &off_1E97A34A8;
  return result;
}

uint64_t sub_1D42F308C()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;

  sub_1D42B28FC((uint64_t *)&unk_1EFE403F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D4526260;
  *(_QWORD *)(inited + 32) = sub_1D42F3A34();
  *(_QWORD *)(inited + 40) = sub_1D42F3A34();
  *(_QWORD *)(inited + 48) = sub_1D42F3A34();
  sub_1D448D2D0(inited);
  v2 = v1;
  swift_setDeallocating();
  sub_1D43476B8();
  v3 = objc_allocWithZone((Class)type metadata accessor for SNDSPConfiguration());
  swift_bridgeObjectRetain();
  v4 = sub_1D43A1230(v2);
  v5 = type metadata accessor for SNDSPGraphLoader();
  sub_1D439F93C((uint64_t)v4);
  if (v6)
  {
    v5 = v6;
    sub_1D44F3DE8(v6);
    sub_1D44F44A0(v5);
  }
  else
  {
    sub_1D42B7F2C();
    sub_1D42B6D0C();
    *v7 = 0;
    swift_willThrow();
  }

  return v5;
}

CMTimeValue sub_1D42F31DC(void *a1, int64_t a2)
{
  uint64_t v2;
  char *v5;
  uint64_t v6;
  id v7;
  CMTimeValue value;
  void *v9;
  id v10;
  int64_t v11;
  int32_t v12;
  uint64_t v13;
  CMTimeEpoch epoch;
  int32_t v15;
  id v16;
  uint64_t v18;
  char *v19;
  float v20;
  float v21;
  float v22;
  CMTimeValue v23;
  CMTimeRange v24;
  CMTime duration;
  CMTime start;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  CMTimeRange v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v5 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SNSpeechDistanceResult()), sel_init);
  v6 = objc_opt_self();
  v24.start.value = 0;
  v7 = sub_1D4500E1C(v6, a1, (uint64_t)&v24);
  value = v24.start.value;
  if (!v7)
  {
    v16 = (id)v24.start.value;
    sub_1D4519AA4();

    swift_willThrow();
    v9 = v5;
    goto LABEL_8;
  }
  v9 = v7;
  v10 = (id)v24.start.value;
  v11 = sub_1D451B928();
  v12 = sub_1D44F2078((uint64_t)a1);
  if (v12 < 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  CMTimeMake(&v24.start, v11, v12);
  value = v24.start.value;
  v13 = *(_QWORD *)&v24.start.timescale;
  epoch = v24.start.epoch;
  v15 = sub_1D44F2078((uint64_t)a1);
  if (v15 < 0)
    goto LABEL_11;
  CMTimeMake(&v24.start, a2, v15);
  duration = v24.start;
  start.value = value;
  *(_QWORD *)&start.timescale = v13;
  start.epoch = epoch;
  CMTimeRangeMake(&v24, &start, &duration);
  v32 = v24;
  sub_1D42F3A68();
  if (v2)
  {

LABEL_8:
    return value;
  }
  sub_1D451AEE4();
  sub_1D42F3A68();
  sub_1D451AEF0();
  v18 = v31;
  v19 = &v5[OBJC_IVAR___SNSpeechDistanceResult_impl];
  *(_QWORD *)v19 = v27;
  *((_QWORD *)v19 + 1) = v28;
  *((_OWORD *)v19 + 1) = v29;
  *((_QWORD *)v19 + 4) = v30;
  *((_QWORD *)v19 + 5) = v18;
  sub_1D42F3A44((uint64_t)a1, 4);
  *((double *)v19 + 6) = v20;
  sub_1D42F3A44((uint64_t)a1, 5);
  *((double *)v19 + 7) = v21;
  sub_1D42F3A44((uint64_t)a1, 6);
  *((double *)v19 + 8) = v22;
  sub_1D42B28FC(&qword_1EFE40410);
  v23 = sub_1D42B6F40();
  *(_OWORD *)(v23 + 16) = xmmword_1D4525300;
  *(_QWORD *)(v23 + 32) = v5;
  v24.start.value = v23;
  sub_1D451A950();
  value = v24.start.value;

  return value;
}

id sub_1D42F34CC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  if (v1)
    return v1;
  sub_1D42F3808();
  sub_1D42B6D0C();
  return (id)swift_willThrow();
}

void sub_1D42F351C(int a1, double a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;

  v4 = v2;
  v7 = *v2;
  v8 = sub_1D42B28FC(qword_1EFE47450);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SNFileUtils();
  sub_1D44D2CD0((uint64_t)v10);
  v11 = sub_1D4519BC4();
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v10, 1, v11) == 1)
  {
    __break(1u);
  }
  else
  {
    v12 = sub_1D4519B94();
    v14 = v13;
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
    v15 = sub_1D42B6F40();
    *(double *)(v15 + 16) = a2;
    *(_DWORD *)(v15 + 24) = a1;
    *(_QWORD *)(v15 + 32) = v12;
    *(_QWORD *)(v15 + 40) = v14;
    *(_QWORD *)(v15 + 48) = v7;
    v16 = sub_1D42CEEA4();
    swift_release();
    if (!v3)
    {
      v17 = (void *)v4[2];
      v4[2] = v16;

    }
  }
}

uint64_t sub_1D42F3664@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_1D42F308C();
  if (!v1)
    *a1 = result;
  return result;
}

id sub_1D42F368C()
{
  uint64_t v0;
  id result;
  void *v2;
  void *v3;
  id v4;

  result = sub_1D42F34CC();
  if (!v0)
  {
    v2 = result;
    v3 = (void *)sub_1D451A6C8();
    v4 = sub_1D44F590C(v2, v3);

    return v4;
  }
  return result;
}

uint64_t sub_1D42F36F8()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

CMTimeValue sub_1D42F371C(void *a1, int64_t a2)
{
  return sub_1D42F31DC(a1, a2);
}

id sub_1D42F3730()
{
  return sub_1D42F368C();
}

void sub_1D42F3744(int a1, double a2)
{
  sub_1D42F351C(a1, a2);
}

id sub_1D42F3758()
{
  return sub_1D42F34CC();
}

uint64_t type metadata accessor for SNEstimateSpeechDistanceRequest()
{
  return objc_opt_self();
}

uint64_t method lookup function for SNEstimateSpeechDistanceRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for SNDistanceEstimator()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for EstimateSpeechDistanceRequest()
{
  return &type metadata for EstimateSpeechDistanceRequest;
}

unint64_t sub_1D42F37CC()
{
  unint64_t result;

  result = qword_1EFE4A960;
  if (!qword_1EFE4A960)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4527A30, &type metadata for EstimateSpeechDistanceRequest);
    atomic_store(result, (unint64_t *)&qword_1EFE4A960);
  }
  return result;
}

unint64_t sub_1D42F3808()
{
  unint64_t result;

  result = qword_1EFE4A968;
  if (!qword_1EFE4A968)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4527C28, &type metadata for SNDistanceEstimator.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4A968);
  }
  return result;
}

uint64_t sub_1D42F3844()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D42F3868@<X0>(uint64_t *a1@<X8>)
{
  return sub_1D42F3664(a1);
}

unint64_t sub_1D42F388C()
{
  unint64_t result;

  result = qword_1EFE4A978;
  if (!qword_1EFE4A978)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4527BD8, &type metadata for EstimateSpeechDistanceRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4A978);
  }
  return result;
}

ValueMetadata *type metadata accessor for EstimateSpeechDistanceRequest.CodingKeys()
{
  return &type metadata for EstimateSpeechDistanceRequest.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for SNDistanceEstimator.DomainError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D42F3918 + 4 * byte_1D4527970[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D42F3938 + 4 * byte_1D4527975[v4]))();
}

_BYTE *sub_1D42F3918(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D42F3938(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D42F3940(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D42F3948(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D42F3950(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D42F3958(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SNDistanceEstimator.DomainError()
{
  return &type metadata for SNDistanceEstimator.DomainError;
}

unint64_t sub_1D42F3978()
{
  unint64_t result;

  result = qword_1EFE4A980;
  if (!qword_1EFE4A980)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4527B60, &type metadata for SNDistanceEstimator.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4A980);
  }
  return result;
}

unint64_t sub_1D42F39B8()
{
  unint64_t result;

  result = qword_1EFE4A988;
  if (!qword_1EFE4A988)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4527B88, &type metadata for EstimateSpeechDistanceRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4A988);
  }
  return result;
}

unint64_t sub_1D42F39F8()
{
  unint64_t result;

  result = qword_1EFE4A990;
  if (!qword_1EFE4A990)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4527BB0, &type metadata for EstimateSpeechDistanceRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4A990);
  }
  return result;
}

uint64_t sub_1D42F3A34()
{
  return sub_1D451A5E4();
}

uint64_t sub_1D42F3A44(uint64_t a1, uint64_t a2)
{
  return sub_1D44C88E8(a1, a2, 0, 0);
}

uint64_t sub_1D42F3A54()
{
  return swift_deallocPartialClassInstance();
}

uint64_t sub_1D42F3A68()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_1D42F3A74()
{
  return 1819307369;
}

void sub_1D42F3A88(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  int v29;
  uint64_t v30;

  v3 = v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v5 = a1;
    v30 = MEMORY[0x1E0DEE9D8];
    sub_1D42C7620();
    v6 = sub_1D4396C0C(v5);
    if ((v6 & 0x8000000000000000) == 0)
    {
      v8 = v6;
      if (v6 < 1 << *(_BYTE *)(v5 + 32))
      {
        v9 = v5 + 64;
        v25 = v5 + 64;
        v26 = v5;
        while ((*(_QWORD *)(v9 + 8 * (v8 >> 6)) & (1 << v8)) != 0)
        {
          if (v7 != *(_DWORD *)(v5 + 36))
            goto LABEL_20;
          v29 = v7;
          v28 = v4;
          v10 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v8);
          v11 = *v10;
          v12 = v10[1];
          v13 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v8);
          v14 = *v13;
          v15 = v13[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v16 = a2(v11, v12, v14, v15);
          if (v3)
          {
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return;
          }
          v19 = v16;
          v20 = v17;
          v21 = v18;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v22 = *(_QWORD *)(v30 + 16);
          if (v22 >= *(_QWORD *)(v30 + 24) >> 1)
            sub_1D42C7620();
          *(_QWORD *)(v30 + 16) = v22 + 1;
          v23 = (_QWORD *)(v30 + 24 * v22);
          v23[4] = v19;
          v23[5] = v20;
          v23[6] = v21;
          v5 = v26;
          if ((uint64_t)v8 >= -(-1 << *(_BYTE *)(v26 + 32)))
            goto LABEL_21;
          v9 = v25;
          if ((*(_QWORD *)(v25 + 8 * (v8 >> 6)) & (1 << v8)) == 0)
            goto LABEL_22;
          if (v29 != *(_DWORD *)(v26 + 36))
            goto LABEL_23;
          v24 = sub_1D451B304();
          v4 = v28 - 1;
          if (v28 == 1)
            return;
          v8 = v24;
          v3 = 0;
          if ((v24 & 0x8000000000000000) == 0)
          {
            v7 = *(_DWORD *)(v26 + 36);
            if (v24 < 1 << *(_BYTE *)(v26 + 32))
              continue;
          }
          goto LABEL_24;
        }
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
      }
    }
LABEL_24:
    __break(1u);
  }
}

uint64_t sub_1D42F3CCC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;

  swift_bridgeObjectRetain();
  v4 = sub_1D44C9228(a2);
  v5 = swift_bridgeObjectRetain();
  v35 = sub_1D44C9228(v5);
  v29 = *(_QWORD *)(a2 + 16);
  if (!v29)
  {
    v25 = MEMORY[0x1E0DEE9E0];
LABEL_31:
    v26 = *(_QWORD *)(v4 + 16);
    swift_bridgeObjectRelease();
    if (v26)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v27 = *(_QWORD *)(v35 + 16);
      swift_bridgeObjectRelease();
      if (!v27)
        return v25;
    }
    sub_1D42CB0C4();
    return 0;
  }
  v28 = a2 + 32;
  sub_1D42CB7F8();
  v6 = 0;
  v30 = MEMORY[0x1E0DEE9E0];
  while (2)
  {
    v7 = (uint64_t *)(v28 + 16 * v6);
    v9 = *v7;
    v8 = v7[1];
    v31 = v6 + 1;
    v10 = v35 + 56;
    v11 = 1 << *(_BYTE *)(v35 + 32);
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v35 + 56);
    v14 = (unint64_t)(v11 + 63) >> 6;
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    v32 = 0;
    v33 = 0;
    v16 = 0;
    while (v13)
    {
      v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v18 = v17 | (v16 << 6);
LABEL_23:
      v22 = (uint64_t *)(*(_QWORD *)(v35 + 48) + 16 * v18);
      v24 = *v22;
      v23 = v22[1];
      swift_bridgeObjectRetain();
      if ((a3(v9, v8, v24, v23) & 1) != 0)
      {
        result = swift_bridgeObjectRelease();
        v32 = v24;
        v33 = v23;
      }
      else
      {
        result = swift_bridgeObjectRelease();
      }
    }
    v19 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v14)
    {
LABEL_26:
      swift_release();
      if (v33)
      {
        swift_bridgeObjectRetain();
        sub_1D42CB7F8();
        swift_isUniquelyReferenced_nonNull_native();
        sub_1D42E8568();
        sub_1D42CB0C4();
        swift_bridgeObjectRelease();
        sub_1D42F43B8(v9, v8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1D42F43B8(v32, v33);
        sub_1D42CB0C4();
      }
      v6 = v31;
      swift_bridgeObjectRelease();
      if (v31 == v29)
      {
        swift_bridgeObjectRelease();
        v25 = v30;
        goto LABEL_31;
      }
      continue;
    }
    break;
  }
  v20 = *(_QWORD *)(v10 + 8 * v19);
  ++v16;
  if (v20)
    goto LABEL_22;
  v16 = v19 + 1;
  if (v19 + 1 >= v14)
    goto LABEL_26;
  v20 = *(_QWORD *)(v10 + 8 * v16);
  if (v20)
    goto LABEL_22;
  v16 = v19 + 2;
  if (v19 + 2 >= v14)
    goto LABEL_26;
  v20 = *(_QWORD *)(v10 + 8 * v16);
  if (v20)
  {
LABEL_22:
    v13 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v16 << 6);
    goto LABEL_23;
  }
  v21 = v19 + 3;
  if (v21 >= v14)
    goto LABEL_26;
  v20 = *(_QWORD *)(v10 + 8 * v21);
  if (v20)
  {
    v16 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    v16 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v16 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v10 + 8 * v16);
    ++v21;
    if (v20)
      goto LABEL_22;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D42F3FD0(void *a1, void *a2)
{
  return sub_1D42F3FE8(a1, a2, (SEL *)&selRef_inputDescriptionsByName);
}

uint64_t sub_1D42F3FDC(void *a1, void *a2)
{
  return sub_1D42F3FE8(a1, a2, (SEL *)&selRef_outputDescriptionsByName);
}

uint64_t sub_1D42F3FE8(void *a1, void *a2, SEL *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();
  uint64_t v12;

  v5 = objc_msgSend(a1, *a3);
  sub_1D42F40FC();
  sub_1D42F472C();

  v6 = objc_msgSend(a2, *a3);
  sub_1D42F472C();

  swift_bridgeObjectRetain();
  sub_1D44AD248();
  v8 = v7;
  swift_bridgeObjectRelease();
  sub_1D42CB7F8();
  sub_1D44AD248();
  v10 = v9;
  sub_1D42CB0C4();
  if (*(_QWORD *)(v10 + 16) == 1)
    v11 = _s13SoundAnalysis17_SNClassificationC20supportsSecureCodingSbvgZ_0;
  else
    v11 = sub_1D42F3FCC;
  v12 = sub_1D42F3CCC(v8, v10, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v11);
  swift_bridgeObjectRelease();
  sub_1D42CB0C4();
  swift_release();
  swift_release();
  return v12;
}

unint64_t sub_1D42F40FC()
{
  unint64_t result;

  result = qword_1EFE40360;
  if (!qword_1EFE40360)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFE40360);
  }
  return result;
}

void sub_1D42F4138(uint64_t a1, uint64_t a2)
{
  sub_1D42F424C(a1, a2, sub_1D42F4714);
}

uint64_t sub_1D42F4154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v7;
  id v8;

  v7 = (void *)sub_1D451A6C8();
  v8 = objc_msgSend(a5, sel_featureValueForName_, v7);

  if (v8)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    type metadata accessor for SNError();
    sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 2, 0, 0xD000000000000038, 0x80000001D4551B80);
    swift_willThrow();
  }
  return a3;
}

void sub_1D42F4230(uint64_t a1, uint64_t a2)
{
  sub_1D42F424C(a1, a2, sub_1D42F46FC);
}

void sub_1D42F424C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  id v5;

  sub_1D42F3A88(a2, a3);
  if (!v3)
  {
    sub_1D4459FB8(v4);
    sub_1D4364B70();
    swift_bridgeObjectRelease();
    v5 = objc_allocWithZone(MEMORY[0x1E0C9E8F8]);
    sub_1D4392954();
  }
}

uint64_t sub_1D42F42D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v7;
  id v8;

  v7 = (void *)sub_1D451A6C8();
  v8 = objc_msgSend(a5, sel_featureValueForName_, v7);

  if (v8)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    type metadata accessor for SNError();
    sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 2, 0, 0xD000000000000038, 0x80000001D4551B80);
    swift_willThrow();
  }
  return a1;
}

uint64_t sub_1D42F43B8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v19;

  v5 = *v2;
  sub_1D451B958();
  swift_bridgeObjectRetain();
  sub_1D451A74C();
  v6 = sub_1D451B994();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  v9 = *(_QWORD *)(v5 + 48);
  v10 = (_QWORD *)(v9 + 16 * v8);
  v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_1D451B820() & 1) == 0)
  {
    v15 = ~v7;
    do
    {
      v8 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_18;
      v16 = (_QWORD *)(v9 + 16 * v8);
      v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_1D451B820() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v2;
  v19 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1D44CC90C();
    v13 = v19;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v8);
  sub_1D42F4544(v8);
  *v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

unint64_t sub_1D42F4544(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  BOOL v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1D451B2F8();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_1D451B958();
        swift_bridgeObjectRetain();
        sub_1D451A74C();
        v10 = sub_1D451B994();
        swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 >= v9 && v2 >= (uint64_t)v11)
          {
LABEL_15:
            v14 = *(_QWORD *)(v3 + 48);
            v15 = (_OWORD *)(v14 + 16 * v2);
            v16 = (_OWORD *)(v14 + 16 * v6);
            v17 = v2 != v6 || v15 >= v16 + 1;
            v2 = v6;
            if (v17)
            {
              *v15 = *v16;
              v2 = v6;
            }
          }
        }
        else if (v11 >= v9 || v2 >= (uint64_t)v11)
        {
          goto LABEL_15;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_1D42F46FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1D42F42D4(a1, a2, a3, a4, *(void **)(v4 + 16));
}

uint64_t sub_1D42F4714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1D42F4154(a1, a2, a3, a4, *(void **)(v4 + 16));
}

uint64_t sub_1D42F472C()
{
  return sub_1D451A5CC();
}

uint64_t sub_1D42F473C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = sub_1D42B28FC(&qword_1EFE4A9A8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42B5528(a1, a1[3]);
  sub_1D42F4A54();
  sub_1D451BA24();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1D42F4800()
{
  sub_1D451B958();
  return sub_1D451B994();
}

uint64_t sub_1D42F4834()
{
  sub_1D42F4A54();
  return sub_1D451BA3C();
}

uint64_t sub_1D42F485C()
{
  sub_1D42F4A54();
  return sub_1D451BA48();
}

uint64_t sub_1D42F4884(_QWORD *a1)
{
  return sub_1D42F473C(a1);
}

uint64_t sub_1D42F489C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = v0;
  v2 = sub_1D42B28FC(&qword_1EFE4A9B8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = sub_1D42BE1BC;
  v7[3] = v1;
  v7[4] = v6;
  swift_retain();
  swift_retain();
  sub_1D42B28FC(&qword_1EFE4A9C0);
  sub_1D42BE210(&qword_1EFE4A9C8, &qword_1EFE4A9C0, MEMORY[0x1E0C95D90]);
  sub_1D451A2C0();
  sub_1D42BE210(&qword_1EFE4A9D0, &qword_1EFE4A9B8, MEMORY[0x1E0C96148]);
  v8 = sub_1D451A2E4();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v8;
}

uint64_t type metadata accessor for SharedAOPReportStream.Instance()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for SharedAOPReportStream()
{
  return &type metadata for SharedAOPReportStream;
}

ValueMetadata *type metadata accessor for SharedAOPReportStream.Configuration()
{
  return &type metadata for SharedAOPReportStream.Configuration;
}

unint64_t sub_1D42F4A18()
{
  unint64_t result;

  result = qword_1EFE4A9A0;
  if (!qword_1EFE4A9A0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4527D04, &type metadata for SharedAOPReportStream.Configuration);
    atomic_store(result, (unint64_t *)&qword_1EFE4A9A0);
  }
  return result;
}

unint64_t sub_1D42F4A54()
{
  unint64_t result;

  result = qword_1EFE4A9B0;
  if (!qword_1EFE4A9B0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4527E18, &type metadata for SharedAOPReportStream.Configuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4A9B0);
  }
  return result;
}

void sub_1D42F4A90()
{
  sub_1D44A605C();
}

uint64_t sub_1D42F4AA8(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t sub_1D42F4AB8()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1D42F4AE4()
{
  sub_1D42F4A90();
}

ValueMetadata *type metadata accessor for SharedAOPReportStream.Configuration.CodingKeys()
{
  return &type metadata for SharedAOPReportStream.Configuration.CodingKeys;
}

unint64_t sub_1D42F4B04()
{
  unint64_t result;

  result = qword_1EFE4A9D8;
  if (!qword_1EFE4A9D8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4527DC8, &type metadata for SharedAOPReportStream.Configuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4A9D8);
  }
  return result;
}

unint64_t sub_1D42F4B44()
{
  unint64_t result;

  result = qword_1EFE4A9E0;
  if (!qword_1EFE4A9E0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4527DF0, &type metadata for SharedAOPReportStream.Configuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4A9E0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for OptionalUtils.DomainError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D42F4BCC + 4 * byte_1D4527E6D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D42F4C00 + 4 * byte_1D4527E68[v4]))();
}

uint64_t sub_1D42F4C00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D42F4C08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D42F4C10);
  return result;
}

uint64_t sub_1D42F4C1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D42F4C24);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D42F4C28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D42F4C30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OptionalUtils.DomainError()
{
  return &type metadata for OptionalUtils.DomainError;
}

unint64_t sub_1D42F4C50()
{
  unint64_t result;

  result = qword_1EFE4A9E8;
  if (!qword_1EFE4A9E8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4527ED0, &type metadata for OptionalUtils.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4A9E8);
  }
  return result;
}

uint64_t sub_1D42F4C8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _BYTE *v10;
  _QWORD v12[2];

  v6 = sub_1D451B160();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v12 - v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)v12 - v8, a1, v6);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v9, 1, a2) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, v9, a2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1D42B7F2C();
  swift_allocError();
  *v10 = 0;
  return swift_willThrow();
}

uint64_t sub_1D42F4D8C()
{
  return sub_1D451B964();
}

BOOL sub_1D42F4DB4(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1D42F4DC8(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x5474736575716572 && a2 == 0xEB00000000657079)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1D451B820();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1D42F4E64()
{
  return 0x5474736575716572;
}

void sub_1D42F4E84()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_1D42BE910();
  v2 = v1;
  sub_1D42B28FC(&qword_1EFE4AAC8);
  sub_1D42F86A4();
  MEMORY[0x1E0C80A78](v3);
  sub_1D42F1ED4();
  sub_1D42B5528(v2, v2[3]);
  sub_1D42F7C64();
  sub_1D42F8684();
  sub_1D42B28FC(&qword_1EFE4AAB8);
  sub_1D42F7CA0(&qword_1EFE4AAD0, MEMORY[0x1E0DEB420], (uint64_t)&protocol conformance descriptor for <> RawRepresentableWrapper<A>);
  sub_1D451B760();
  sub_1D42F86E4(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_1D42BE844();
}

void sub_1D42F4F5C()
{
  sub_1D42BE9A8();
  sub_1D42F86C8();
  sub_1D42CB230();
  sub_1D42BE978();
}

void sub_1D42F4F88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  sub_1D42BE910();
  v14 = v13;
  v15 = sub_1D42B28FC(&qword_1EFE4AAA8);
  sub_1D42CB4F8();
  MEMORY[0x1E0C80A78](v16);
  sub_1D42F1ED4();
  sub_1D42F8628();
  sub_1D42F7C64();
  sub_1D42F8648();
  if (!v10)
  {
    sub_1D42B28FC(&qword_1EFE4AAB8);
    sub_1D42F7CA0(&qword_1EFE4AAC0, MEMORY[0x1E0DEB448], (uint64_t)&protocol conformance descriptor for <> RawRepresentableWrapper<A>);
    sub_1D451B688();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v15);
    *v14 = a10;
  }
  sub_1D42BE944();
  sub_1D42BE844();
}

uint64_t sub_1D42F5078()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  sub_1D42F85A8();
  v0 = sub_1D451B964();
  sub_1D42F8568(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10, v11);
  return AudioConfiguration.hash(into:)();
}

uint64_t sub_1D42F50DC(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  char v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  uint64_t v35;
  char v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;
  uint64_t v47;
  char v48;

  if (*(_QWORD *)a1 == *(_QWORD *)a2)
  {
    v2 = *(_BYTE *)(a2 + 72);
    v3 = *(_QWORD *)(a2 + 64);
    v4 = *(_BYTE *)(a2 + 61);
    v5 = *(_BYTE *)(a2 + 60);
    v6 = *(_BYTE *)(a2 + 59);
    v7 = *(_BYTE *)(a2 + 58);
    v8 = *(_BYTE *)(a2 + 57);
    v9 = *(_BYTE *)(a2 + 56);
    v11 = *(_QWORD *)(a2 + 24);
    v10 = *(_QWORD *)(a2 + 32);
    v12 = *(_OWORD *)(a2 + 8);
    v13 = *(_BYTE *)(a1 + 72);
    v14 = *(_QWORD *)(a1 + 64);
    v15 = *(_BYTE *)(a1 + 61);
    v16 = *(_BYTE *)(a1 + 60);
    v17 = *(_BYTE *)(a1 + 59);
    v18 = *(_BYTE *)(a1 + 58);
    v19 = *(_BYTE *)(a1 + 57);
    v20 = *(_BYTE *)(a1 + 56);
    v22 = *(_QWORD *)(a1 + 24);
    v21 = *(_QWORD *)(a1 + 32);
    v37 = *(_OWORD *)(a1 + 8);
    v38 = v22;
    v39 = v21;
    v40 = *(_OWORD *)(a1 + 40);
    v41 = v20;
    v42 = v19;
    v43 = v18;
    v44 = v17;
    v45 = v16;
    v46 = v15;
    v47 = v14;
    v48 = v13;
    v25 = v12;
    v26 = v11;
    v27 = v10;
    v28 = *(_OWORD *)(a2 + 40);
    v29 = v9;
    v30 = v8;
    v31 = v7;
    v32 = v6;
    v33 = v5;
    v34 = v4;
    v35 = v3;
    v36 = v2;
    v23 = static AudioConfiguration.== infix(_:_:)((uint64_t)&v37, (uint64_t)&v25);
  }
  else
  {
    v23 = 0;
  }
  return v23 & 1;
}

void sub_1D42F51DC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  sub_1D42BE910();
  v3 = v2;
  sub_1D42B28FC(&qword_1EFE4AB28);
  sub_1D42F86A4();
  MEMORY[0x1E0C80A78](v4);
  sub_1D42CB18C();
  sub_1D42B5528(v3, v3[3]);
  sub_1D42F83A0();
  sub_1D42F8684();
  sub_1D42B6164();
  sub_1D42F8610();
  if (!v0)
  {
    sub_1D42B5ACC();
    sub_1D42F8610();
  }
  sub_1D42BE98C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_1D42F1F94();
  sub_1D42BE844();
}

uint64_t sub_1D42F5364()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  sub_1D42F85A8();
  sub_1D451B958();
  v0 = sub_1D42F86C8();
  sub_1D42F8568(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10, v11);
  AudioConfiguration.hash(into:)();
  return sub_1D451B994();
}

void sub_1D42F53D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;
  char v15;

  sub_1D42BE910();
  v2 = v1;
  sub_1D42B28FC(&qword_1EFE4AB38);
  sub_1D42CB4F8();
  MEMORY[0x1E0C80A78](v3);
  sub_1D42F8628();
  sub_1D42F83A0();
  sub_1D42F8648();
  if (!v0)
  {
    sub_1D42B61A0();
    sub_1D42F85E4();
    sub_1D42B5B80();
    sub_1D42F85E4();
    sub_1D42F8674();
    *(_QWORD *)v2 = v4;
    *(_OWORD *)(v2 + 8) = v4;
    *(_QWORD *)(v2 + 24) = v5;
    *(_QWORD *)(v2 + 32) = v6;
    *(_OWORD *)(v2 + 40) = v7;
    *(_BYTE *)(v2 + 56) = v8;
    *(_BYTE *)(v2 + 57) = v9;
    *(_BYTE *)(v2 + 58) = v10;
    *(_BYTE *)(v2 + 59) = v11;
    *(_BYTE *)(v2 + 60) = v12;
    *(_BYTE *)(v2 + 61) = v13;
    *(_QWORD *)(v2 + 64) = v14;
    *(_BYTE *)(v2 + 72) = v15;
  }
  sub_1D42BE944();
  sub_1D42F1F94();
  sub_1D42BE844();
}

uint64_t sub_1D42F551C()
{
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B970();
  return sub_1D451B988();
}

BOOL sub_1D42F55C8(double *a1, double *a2)
{
  double v2;
  uint64_t v3;
  int v4;
  double v5;
  double v6;
  int v7;
  double v8;
  BOOL v9;
  _BOOL8 result;
  _QWORD v11[2];
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;

  v2 = *a1;
  v3 = *((_QWORD *)a1 + 5);
  v4 = *((unsigned __int8 *)a1 + 48);
  v5 = a1[7];
  v6 = *a2;
  v7 = *((unsigned __int8 *)a2 + 48);
  v8 = a2[7];
  v14 = *((_QWORD *)a2 + 5);
  *(double *)v15 = v2;
  *(double *)&v15[1] = a1[1];
  v16 = *((_OWORD *)a1 + 1);
  v17 = *((_QWORD *)a1 + 4);
  v18 = v3;
  *(double *)v11 = v6;
  *(double *)&v11[1] = a2[1];
  v12 = *((_OWORD *)a2 + 1);
  v13 = *((_QWORD *)a2 + 4);
  v9 = static TimeRange.== infix(_:_:)((uint64_t)v15, (uint64_t)v11);
  result = 0;
  if (v9 && ((v4 ^ v7) & 1) == 0)
    return v5 == v8;
  return result;
}

uint64_t sub_1D42F5674(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x676E6152656D6974 && a2 == 0xE900000000000065;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6465746365746564 && a2 == 0xE800000000000000;
    if (v6 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6E656469666E6F63 && a2 == 0xEA00000000006563)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1D451B820();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1D42F57D8(char a1)
{
  if (!a1)
    return 0x676E6152656D6974;
  if (a1 == 1)
    return 0x6465746365746564;
  return 0x6E656469666E6F63;
}

void sub_1D42F5838(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(sub_1D42B28FC((uint64_t *)&unk_1EFE4AA98) - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v2);
  sub_1D42CB18C();
  sub_1D42B5528(a1, a1[3]);
  sub_1D42F7C28();
  sub_1D451BA24();
  sub_1D42CA408();
  sub_1D451B760();
  if (!v4)
  {
    sub_1D451B730();
    sub_1D451B73C();
  }
  sub_1D42BE98C(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_1D42F1F94();
}

uint64_t sub_1D42F59C4()
{
  sub_1D42BE9A8();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B970();
  sub_1D451B988();
  return sub_1D42CB230();
}

uint64_t sub_1D42F5AA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1D42B28FC(&qword_1EFE4AA80);
  sub_1D42CB4F8();
  MEMORY[0x1E0C80A78](v3);
  sub_1D42F8628();
  sub_1D42F7C28();
  sub_1D42F8648();
  if (!v1)
  {
    sub_1D42CA3CC();
    sub_1D451B688();
    sub_1D42F865C(1);
    v7 = sub_1D451B658();
    sub_1D42F865C(2);
    sub_1D451B664();
    v6 = v5;
    sub_1D42CB3CC();
    *(_QWORD *)a1 = v8;
    *(_QWORD *)(a1 + 8) = v9;
    *(_QWORD *)(a1 + 16) = v10;
    *(_QWORD *)(a1 + 24) = v11;
    *(_QWORD *)(a1 + 32) = v12;
    *(_QWORD *)(a1 + 40) = v13;
    *(_BYTE *)(a1 + 48) = v7 & 1;
    *(_QWORD *)(a1 + 56) = v6;
  }
  return sub_1D42BE944();
}

uint64_t sub_1D42F5C34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D42F4DC8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D42F5C5C()
{
  sub_1D42F7C64();
  return sub_1D451BA3C();
}

uint64_t sub_1D42F5C84()
{
  sub_1D42F7C64();
  return sub_1D451BA48();
}

uint64_t sub_1D42F5CB4()
{
  sub_1D451B958();
  sub_1D451B964();
  return sub_1D451B994();
}

void sub_1D42F5CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  sub_1D42F4F88(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_1D42F5D08()
{
  sub_1D42F4E84();
}

uint64_t sub_1D42F5D20()
{
  sub_1D42F83A0();
  return sub_1D451BA3C();
}

uint64_t sub_1D42F5D48()
{
  sub_1D42F83A0();
  return sub_1D451BA48();
}

uint64_t sub_1D42F5D78()
{
  sub_1D451B958();
  sub_1D451B964();
  AudioConfiguration.hash(into:)();
  return sub_1D451B994();
}

void sub_1D42F5E58()
{
  sub_1D42F53D8();
}

void sub_1D42F5E6C()
{
  sub_1D42F51DC();
}

uint64_t sub_1D42F5E84()
{
  char *v0;

  return sub_1D42F57D8(*v0);
}

uint64_t sub_1D42F5E8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D42F5674(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D42F5EB0()
{
  sub_1D42F7C28();
  return sub_1D451BA3C();
}

uint64_t sub_1D42F5ED8()
{
  sub_1D42F7C28();
  return sub_1D451BA48();
}

uint64_t sub_1D42F5F08()
{
  sub_1D451B958();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B970();
  sub_1D451B988();
  return sub_1D451B994();
}

uint64_t sub_1D42F5FF4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D42F5AA8(a1);
}

void sub_1D42F6008(_QWORD *a1)
{
  sub_1D42F5838(a1);
}

uint64_t sub_1D42F6020(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1D42F606C;
  return sub_1D43768A8();
}

uint64_t sub_1D42F606C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t (*v6)(void);

  sub_1D42F1E44();
  v2[4] = v0;
  v2[5] = v1;
  swift_task_dealloc();
  if (v1)
    return sub_1D42F1DEC();
  v6 = (uint64_t (*)(void))((char *)&dword_1EFE4E208 + dword_1EFE4E208);
  v5 = (_QWORD *)swift_task_alloc();
  v2[6] = v5;
  *v5 = v3;
  v5[1] = sub_1D42EC5A0;
  return sub_1D42E3A2C(v6);
}

uint64_t sub_1D42F60EC(uint64_t a1, uint64_t a2)
{
  _QWORD v4[5];

  sub_1D447DAC4();
  v4[3] = sub_1D42B28FC(&qword_1EFE4FD90);
  v4[4] = sub_1D42F833C();
  v4[0] = a2;
  swift_retain();
  sub_1D447DAE0(v4);
  swift_release();
  return sub_1D42B5400((uint64_t)v4);
}

uint64_t sub_1D42F6170(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  swift_retain();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1D42EC778;
  return sub_1D42F6020(a1);
}

uint64_t sub_1D42F61C4(uint64_t a1)
{
  uint64_t *v1;

  return sub_1D42F60EC(a1, *v1);
}

uint64_t sub_1D42F61DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_1D42EC834;
  return sub_1D42F6170(a2);
}

id sub_1D42F622C@<X0>(_QWORD *a1@<X8>)
{
  id result;

  type metadata accessor for SNSpeechUtteranceResult();
  result = sub_1D439EB74();
  *a1 = result;
  return result;
}

void sub_1D42F62C4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  const void *v4;
  const void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  _BYTE v14[65];
  uint64_t v15;
  _BYTE v16[65];

  sub_1D42BE910();
  v3 = v2;
  v5 = v4;
  sub_1D42B28FC(&qword_1EFE4AA20);
  sub_1D42F86A4();
  MEMORY[0x1E0C80A78](v6);
  sub_1D42CB18C();
  sub_1D42F86B4(&v15, v5);
  v7 = v3[3];
  v8 = v3[4];
  v9 = sub_1D42B5528(v3, v7);
  memcpy(v14, v16, sizeof(v14));
  v10 = sub_1D42F86D0();
  v13[2] = &v15;
  sub_1D42F86FC();
  sub_1D43CC6C0((uint64_t)v9, (__int128 *)v14, v10, sub_1D42F7A68, (uint64_t)v13, v7, v10, v8);
  v12 = v11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v0)
  {
    *(_QWORD *)v14 = v12;
    sub_1D42B28FC(&qword_1EFE4AA28);
    sub_1D42BE210(&qword_1EFE4AA30, &qword_1EFE4AA28, MEMORY[0x1E0C95D90]);
    sub_1D451A308();
    swift_release();
    sub_1D42BE210(&qword_1EFE4AA38, &qword_1EFE4AA20, MEMORY[0x1E0C95950]);
    sub_1D451A2E4();
    sub_1D42BE98C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }
  sub_1D42F1F94();
  sub_1D42BE844();
}

void sub_1D42F6454()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  const void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23[2];
  _BYTE v24[88];

  sub_1D42BE910();
  v1 = v0;
  v3 = v2;
  v4 = sub_1D42B28FC(&qword_1EFE568A0);
  v18 = *(_QWORD *)(v4 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1D42B28FC(&qword_1EFE4AA40);
  v21 = *(_QWORD *)(v19 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1D42B28FC((uint64_t *)&unk_1EFE4AA48);
  v22 = *(_QWORD *)(v20 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v11);
  sub_1D42F1ED4();
  sub_1D42F86B4(v24, v3);
  v12 = sub_1D42B6F40();
  sub_1D42F86B4((void *)(v12 + 16), v3);
  sub_1D42E2D8C(v1, (uint64_t)v23);
  v13 = sub_1D42B6F40();
  sub_1D42E33E0(v23, v13 + 16);
  sub_1D42F86B4((void *)(v13 + 56), v24);
  v14 = (_QWORD *)sub_1D42B6F40();
  v14[2] = sub_1D42F7B3C;
  v14[3] = v12;
  v14[4] = sub_1D42F7B90;
  v14[5] = v13;
  v15 = sub_1D42B6F40();
  *(_QWORD *)(v15 + 16) = sub_1D42F0F18;
  *(_QWORD *)(v15 + 24) = v14;
  sub_1D42F86FC();
  sub_1D42F86FC();
  swift_retain();
  swift_retain();
  sub_1D42B28FC((uint64_t *)&unk_1EFE4A6A0);
  sub_1D42BE210((unint64_t *)&unk_1EFE568C0, (uint64_t *)&unk_1EFE4A6A0, (uint64_t)&unk_1D4532BA0);
  sub_1D451A2C0();
  sub_1D42F86D0();
  sub_1D42BE210(&qword_1EFE4A6B0, &qword_1EFE568A0, MEMORY[0x1E0C96148]);
  sub_1D451A3A4();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v4);
  swift_release();
  swift_release();
  sub_1D42BE210(&qword_1EFE4AA58, &qword_1EFE4AA40, MEMORY[0x1E0C95B48]);
  v16 = v19;
  sub_1D451A308();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v16);
  sub_1D42BE210(&qword_1EFE4AA60, (uint64_t *)&unk_1EFE4AA48, MEMORY[0x1E0C95950]);
  sub_1D451A2E4();
  sub_1D42F86E4(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
  sub_1D42BE844();
}

uint64_t sub_1D42F6744()
{
  void *v0;
  void *v1;
  uint64_t v2;

  type metadata accessor for SNDetectSpeechUtteranceRequest();
  sub_1D42F67B8();
  v1 = v0;
  v2 = sub_1D42F67F4();

  return v2;
}

void sub_1D42F67B8()
{
  _QWORD *v0;
  objc_class *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_super v9;

  v2 = (char *)sub_1D42B7238();
  *(_QWORD *)&v2[OBJC_IVAR___SNDetectSpeechUtteranceRequest_impl] = *v0;
  v9.receiver = v2;
  v9.super_class = v1;
  sub_1D42CB364((uint64_t)v2, sel_init, v3, v4, v5, v6, v7, v8, v9);
  sub_1D42CB964();
}

uint64_t sub_1D42F67F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (qword_1EFE403C0 != -1)
    swift_once();
  if (byte_1EFE403B0 == 1)
  {
    v1 = *(_QWORD *)(v0 + OBJC_IVAR___SNDetectSpeechUtteranceRequest_impl);
    type metadata accessor for SNSpeechUtteranceDetector();
    v2 = sub_1D42B6F40();
    sub_1D42F71C0(v1);
  }
  else
  {
    v2 = type metadata accessor for SNError();
    sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 1, 0, 0xD00000000000001ALL, 0x80000001D4551C80);
    sub_1D42E3BB8();
  }
  return v2;
}

void sub_1D42F68E8()
{
  type metadata accessor for SNDetectSpeechUtteranceRequest();
  sub_1D42F67B8();
}

uint64_t sub_1D42F6930@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _BYTE __dst[72];

  v6 = a1[3];
  v7 = a1[4];
  sub_1D42B5528(a1, v6);
  memcpy(__dst, (const void *)(a2 + 8), 0x41uLL);
  result = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v7 + 8))(__dst, v6, v7);
  if (!v3)
    *a3 = result;
  return result;
}

double sub_1D42F69B0@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  double result;

  v2 = *a1 + OBJC_IVAR___SNSpeechUtteranceResult_impl;
  v3 = *(_QWORD *)(v2 + 40);
  v4 = *(_BYTE *)(v2 + 48);
  result = *(double *)(v2 + 56);
  *(_QWORD *)a2 = *(_QWORD *)v2;
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(v2 + 8);
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(v2 + 16);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v2 + 32);
  *(_QWORD *)(a2 + 40) = v3;
  *(_BYTE *)(a2 + 48) = v4;
  *(double *)(a2 + 56) = result;
  return result;
}

double sub_1D42F6A38()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  double v3;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___SNDetectSpeechUtteranceRequest_impl);
  type metadata accessor for SNSpeechUtteranceDetector();
  swift_initStackObject();
  sub_1D42F71C0(v1);
  sub_1D42F6AD4();
  v3 = v2;
  swift_release();
  return v3;
}

void sub_1D42F6AD4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  _QWORD *v5;

  if (*(_QWORD *)(v0 + 16))
  {
    v2 = sub_1D42F8654();
    if (!v1)
    {
      v3 = v2;
      sub_1D42F8600((uint64_t)v2, 8);

      v4 = sub_1D42F8654();
      sub_1D44F0570((uint64_t)v4, 0);

      v5 = sub_1D42F8654();
      sub_1D44F09F0(v5, 0);

    }
  }
}

id sub_1D42F6B90()
{
  char *v0;
  objc_class *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  objc_super v9;

  v1 = (objc_class *)sub_1D42B7104();
  *(_QWORD *)&v0[OBJC_IVAR___SNDetectSpeechUtteranceRequest_impl] = 0;
  v9.receiver = v0;
  v9.super_class = v1;
  return sub_1D42CB364((uint64_t)v1, sel_init, v2, v3, v4, v5, v6, v7, v9);
}

void sub_1D42F6BE8(uint64_t a1)
{
  char *v1;
  objc_class *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_super v10;

  v3 = (objc_class *)sub_1D42B7104();
  *(_QWORD *)&v1[OBJC_IVAR___SNDetectSpeechUtteranceRequest_impl] = a1;
  v10.receiver = v1;
  v10.super_class = v3;
  sub_1D42CB364((uint64_t)v3, sel_init, v4, v5, v6, v7, v8, v9, v10);
  sub_1D42CB964();
}

void SNDetectSpeechUtteranceRequest.copy(with:)(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1D42B7104();
  sub_1D42F86D8();
  a1[3] = v2;
  *a1 = v3;
  sub_1D42CB758();
}

void SNDetectSpeechUtteranceRequest.hash.getter()
{
  sub_1D42BE9A8();
  sub_1D42F86C8();
  sub_1D42CB230();
  sub_1D42BE978();
}

BOOL SNDetectSpeechUtteranceRequest.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BOOL8 v5;
  char *v7;
  _BYTE v8[32];
  _OWORD v9[2];
  __int128 v10;
  uint64_t v11;

  sub_1D42B7104();
  sub_1D42B28B4(a1, (uint64_t)&v10);
  if (!v11)
    return 0;
  sub_1D42B293C(&v10, v9);
  sub_1D42B294C((uint64_t)v9, (uint64_t)v8);
  if (swift_dynamicCast() && v7)
  {
    v3 = *(_QWORD *)(v1 + OBJC_IVAR___SNDetectSpeechUtteranceRequest_impl);
    v4 = *(_QWORD *)&v7[OBJC_IVAR___SNDetectSpeechUtteranceRequest_impl];

    v5 = v3 == v4;
  }
  else
  {
    v5 = 0;
  }
  sub_1D42B5400((uint64_t)v9);
  return v5;
}

void SNDetectSpeechUtteranceRequest.__allocating_init(coder:)()
{
  void *v0;

  sub_1D42B7238();
  SNDetectSpeechUtteranceRequest.init(coder:)(v0);
}

void SNDetectSpeechUtteranceRequest.init(coder:)(void *a1)
{
  void *v1;
  id v3;

  v3 = v1;
  sub_1D42B1500();
  swift_getObjectType();

  sub_1D42F86D8();
  sub_1D42F86BC();
  sub_1D42CB758();
}

Swift::Void __swiftcall SNDetectSpeechUtteranceRequest.encode(with:)(NSCoder with)
{
  uint64_t v1;

  sub_1D42AF7C8(*(_QWORD *)(v1 + OBJC_IVAR___SNDetectSpeechUtteranceRequest_impl), 1819307369, 0xE400000000000000, (uint64_t)with.super.isa);
  sub_1D42CB758();
}

uint64_t static SNDetectSpeechUtteranceRequest.supportsSecureCoding.getter()
{
  return 1;
}

id SNDetectSpeechUtteranceRequest.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_1D42B7104();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D42F7080()
{
  return sub_1D42F67F4();
}

float sub_1D42F7094()
{
  uint64_t v0;
  uint64_t v1;
  float v2;
  id v3;

  if (!*(_QWORD *)(v0 + 16))
    return 0.0;
  v3 = sub_1D42F8654();
  if (!v1)
  {
    sub_1D42F8600((uint64_t)v3, 6);
    sub_1D42F86F0();
  }
  return v2;
}

id sub_1D42F70F0()
{
  uint64_t v0;
  id result;
  void *v2;
  void *v3;
  id v4;

  result = sub_1D42F77AC();
  if (!v0)
  {
    v2 = result;
    v3 = (void *)sub_1D451A6C8();
    v4 = sub_1D44F590C(v2, v3);

    return v4;
  }
  return result;
}

uint64_t sub_1D42F7160()
{
  uint64_t v0;
  uint64_t v1;
  float v2;
  uint64_t v3;
  id v4;

  v3 = *(_QWORD *)(v0 + 16);
  if (v3)
  {
    v4 = sub_1D42F8654();
    if (!v1)
    {
      sub_1D42F8600((uint64_t)v4, 5);
      sub_1D42F86F0();
      LOBYTE(v3) = v2 != 0.0;
    }
  }
  return v3 & 1;
}

uint64_t sub_1D42F71C0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;

  v3 = v1;
  v5 = *v1;
  sub_1D42B28FC(qword_1EFE47450);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[2] = 0;
  v1[3] = a1;
  type metadata accessor for SNFileUtils();
  sub_1D44D2CD0((uint64_t)v8);
  v9 = sub_1D4519BC4();
  result = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v8, 1, v9);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v11 = sub_1D4519B94();
    v13 = v12;
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    v14 = (_QWORD *)sub_1D42B6F40();
    v14[2] = v11;
    v14[3] = v13;
    v14[4] = a1;
    v14[5] = v5;
    v15 = sub_1D42CEEA4();
    swift_release();
    if (v2)
    {
      swift_release();
    }
    else
    {
      v16 = (void *)v3[2];
      v3[2] = v15;

    }
    return (uint64_t)v3;
  }
  return result;
}

uint64_t sub_1D42F7304@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;

  result = sub_1D42F7330(a1, a2, a3);
  if (!v4)
    *a4 = result;
  return result;
}

uint64_t sub_1D42F7330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;

  v3 = sub_1D42F741C(a3);
  sub_1D448D2D0(v3);
  v5 = v4;
  swift_bridgeObjectRelease();
  objc_allocWithZone((Class)type metadata accessor for SNDSPConfiguration());
  swift_bridgeObjectRetain();
  v6 = sub_1D43A1230(v5);
  v7 = type metadata accessor for SNDSPGraphLoader();
  sub_1D439F93C((uint64_t)v6);
  if (v8)
  {
    v7 = v8;
    sub_1D44F3DE8(v8);
    sub_1D44F44A0(v7);
  }
  else
  {
    sub_1D42B7F2C();
    sub_1D42B6D0C();
    *v9 = 0;
    swift_willThrow();
  }

  return v7;
}

uint64_t sub_1D42F741C(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;

  sub_1D42B28FC((uint64_t *)&unk_1EFE403F0);
  if (a1)
  {
    v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1D45261D0;
    v3 = (uint64_t *)(v2 + 32);
  }
  else
  {
    v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1D4526260;
    *(_QWORD *)(v2 + 32) = sub_1D42F8694();
    *(_QWORD *)(v2 + 40) = sub_1D42F8694();
    v3 = (uint64_t *)(v2 + 48);
  }
  *v3 = sub_1D451A5E4();
  return v2;
}

CMTimeValue sub_1D42F74F4(void *a1, int64_t a2)
{
  CMTimeValue v2;
  uint64_t v3;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  int64_t v10;
  int32_t v11;
  CMTimeValue value;
  uint64_t v13;
  CMTimeEpoch epoch;
  int32_t v15;
  CMTimeEpoch v16;
  objc_class *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  id v22;
  CMTimeValue v24;
  CMTimeRange v25;
  CMTime duration;
  CMTime start;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  CMTimeRange v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v6 = objc_opt_self();
  v25.start.value = 0;
  v7 = sub_1D4500E1C(v6, a1, (uint64_t)&v25);
  if (!v7)
  {
    v22 = (id)v25.start.value;
    sub_1D4519AA4();

    swift_willThrow();
    return v2;
  }
  v8 = v7;
  v9 = (id)v25.start.value;
  v10 = sub_1D451B928();
  v11 = sub_1D44F2078((uint64_t)a1);
  if (v11 < 0)
  {
    __break(1u);
LABEL_12:
    __break(1u);
  }
  CMTimeMake(&v25.start, v10, v11);
  value = v25.start.value;
  v13 = *(_QWORD *)&v25.start.timescale;
  epoch = v25.start.epoch;
  v15 = sub_1D44F2078((uint64_t)a1);
  if (v15 < 0)
    goto LABEL_12;
  CMTimeMake(&v25.start, a2, v15);
  v2 = v25.start.value;
  v16 = v25.start.epoch;
  v17 = (objc_class *)sub_1D42F86D0();
  v18 = *(_QWORD *)&v25.start.timescale;
  v19 = (char *)objc_msgSend(objc_allocWithZone(v17), sel_init);
  duration.epoch = v16;
  start.value = value;
  *(_QWORD *)&start.timescale = v13;
  start.epoch = epoch;
  duration.value = v2;
  *(_QWORD *)&duration.timescale = v18;
  CMTimeRangeMake(&v25, &start, &duration);
  v33 = v25;
  sub_1D42F3A68();
  if (v3)
  {

  }
  else
  {
    sub_1D451AEE4();
    sub_1D42F3A68();
    sub_1D451AEF0();
    v20 = v32;
    v21 = &v19[OBJC_IVAR___SNSpeechUtteranceResult_impl];
    *(_QWORD *)v21 = v28;
    *((_QWORD *)v21 + 1) = v29;
    *((_OWORD *)v21 + 1) = v30;
    *((_QWORD *)v21 + 4) = v31;
    *((_QWORD *)v21 + 5) = v20;
    *((double *)v21 + 7) = sub_1D42F7094();
    v21[48] = sub_1D42F7160() & 1;
    sub_1D42B28FC(&qword_1EFE40410);
    v24 = sub_1D42B6F40();
    *(_OWORD *)(v24 + 16) = xmmword_1D4525300;
    *(_QWORD *)(v24 + 32) = v19;
    v25.start.value = v24;
    sub_1D451A950();
    v2 = v25.start.value;

  }
  return v2;
}

id sub_1D42F77AC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  if (v1)
    return v1;
  sub_1D42F7A2C();
  sub_1D42B6D0C();
  return (id)sub_1D42E3BB8();
}

uint64_t sub_1D42F77F4()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

CMTimeValue sub_1D42F7818(void *a1, int64_t a2)
{
  return sub_1D42F74F4(a1, a2);
}

id sub_1D42F782C()
{
  return sub_1D42F70F0();
}

id sub_1D42F7840()
{
  return sub_1D42F77AC();
}

uint64_t type metadata accessor for SNDetectSpeechUtteranceRequest()
{
  return objc_opt_self();
}

uint64_t method lookup function for SNDetectSpeechUtteranceRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for SNSpeechUtteranceDetector()
{
  return objc_opt_self();
}

uint64_t sub_1D42F78A0(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 64))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 48);
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1D42F78EC(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = a2 + 1;
  }
  return result;
}

void type metadata accessor for DetectSpeechUtterance.Result()
{
  sub_1D42CB35C();
}

void type metadata accessor for DetectSpeechUtterance()
{
  sub_1D42CB35C();
}

void type metadata accessor for DetectSpeechUtterance.AudioSourceAgnosticRequest()
{
  sub_1D42CB35C();
}

unint64_t sub_1D42F7968()
{
  unint64_t result;

  result = qword_1EFE4AA00;
  if (!qword_1EFE4AA00)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452803C, &unk_1E97A4AB0);
    atomic_store(result, (unint64_t *)&qword_1EFE4AA00);
  }
  return result;
}

unint64_t sub_1D42F79A4(uint64_t a1)
{
  unint64_t result;

  result = sub_1D42B5E34();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1D42F79C8(uint64_t a1)
{
  unint64_t result;

  result = sub_1D42B5DF8();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1D42F79F0()
{
  unint64_t result;

  result = qword_1EFE4AA08;
  if (!qword_1EFE4AA08)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4528154, &unk_1E97A4C18);
    atomic_store(result, (unint64_t *)&qword_1EFE4AA08);
  }
  return result;
}

unint64_t sub_1D42F7A2C()
{
  unint64_t result;

  result = qword_1EFE4AA10;
  if (!qword_1EFE4AA10)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45285E0, &unk_1E97A9400);
    atomic_store(result, (unint64_t *)&qword_1EFE4AA10);
  }
  return result;
}

uint64_t sub_1D42F7A68()
{
  return sub_1D42F6744();
}

uint64_t sub_1D42F7A80(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D42F7AC8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D42F7AEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return sub_1D42F7304(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_1D42F7B08()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1D42F7B3C()
{
  sub_1D42F68E8();
}

uint64_t sub_1D42F7B54()
{
  uint64_t v0;

  sub_1D42B5400(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D42F7B90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1D42F6930((_QWORD *)(v1 + 16), v1 + 56, a1);
}

uint64_t sub_1D42F7BAC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D42F7BD8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D42F7BFC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1D43EF884(*a1);
  if (!v2)
    *a2 = result;
  return result;
}

unint64_t sub_1D42F7C28()
{
  unint64_t result;

  result = qword_1EFE4AA88;
  if (!qword_1EFE4AA88)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4528580, &type metadata for DetectSpeechUtterance.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4AA88);
  }
  return result;
}

unint64_t sub_1D42F7C64()
{
  unint64_t result;

  result = qword_1EFE4AAB0;
  if (!qword_1EFE4AAB0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4528530, &type metadata for DetectSpeechUtterance.AudioSourceAgnosticRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4AAB0);
  }
  return result;
}

void sub_1D42F7CA0(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (!*a1)
  {
    v6 = sub_1D42B8B10(&qword_1EFE4AAB8);
    v7 = a2;
    atomic_store(MEMORY[0x1D825E41C](a3, v6, &v7), a1);
  }
  sub_1D42CB758();
}

ValueMetadata *type metadata accessor for DetectSpeechUtterance.AudioSourceAgnosticRequest.CodingKeys()
{
  return &type metadata for DetectSpeechUtterance.AudioSourceAgnosticRequest.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for DetectSpeechUtterance.Result.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D42F7D54 + 4 * byte_1D4527F45[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D42F7D88 + 4 * byte_1D4527F40[v4]))();
}

uint64_t sub_1D42F7D88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D42F7D90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D42F7D98);
  return result;
}

uint64_t sub_1D42F7DA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D42F7DACLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D42F7DB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D42F7DB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DetectSpeechUtterance.Result.CodingKeys()
{
  return &type metadata for DetectSpeechUtterance.Result.CodingKeys;
}

void type metadata accessor for DetectSpeechUtterance.Session()
{
  sub_1D42CB35C();
}

uint64_t _s13SoundAnalysis21DetectSpeechUtteranceV26AudioSourceAgnosticRequestV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D42F7E20 + 4 * byte_1D4527F4A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D42F7E40 + 4 * byte_1D4527F4F[v4]))();
}

_BYTE *sub_1D42F7E20(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D42F7E40(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D42F7E48(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D42F7E50(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D42F7E58(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D42F7E60(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for SNSpeechUtteranceDetector.DomainError()
{
  sub_1D42CB35C();
}

uint64_t sub_1D42F7E78()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42F7EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_WORD *)(a1 + 60) = *(_WORD *)(a2 + 60);
  v5 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D42F7F24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_BYTE *)(a1 + 58) = *(_BYTE *)(a2 + 58);
  *(_BYTE *)(a1 + 59) = *(_BYTE *)(a2 + 59);
  *(_BYTE *)(a1 + 60) = *(_BYTE *)(a2 + 60);
  *(_BYTE *)(a1 + 61) = *(_BYTE *)(a2 + 61);
  v4 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v4;
  return a1;
}

void *sub_1D42F7FF8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x49uLL);
}

uint64_t sub_1D42F8000(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_BYTE *)(a1 + 58) = *(_BYTE *)(a2 + 58);
  *(_BYTE *)(a1 + 59) = *(_BYTE *)(a2 + 59);
  *(_BYTE *)(a1 + 60) = *(_BYTE *)(a2 + 60);
  *(_BYTE *)(a1 + 61) = *(_BYTE *)(a2 + 61);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

uint64_t sub_1D42F809C(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 73))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1D42F80DC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 73) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for DetectSpeechUtterance.Request()
{
  sub_1D42CB35C();
}

unint64_t sub_1D42F8140()
{
  unint64_t result;

  result = qword_1EFE4AAD8;
  if (!qword_1EFE4AAD8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4528290, &unk_1E97A4D30);
    atomic_store(result, (unint64_t *)&qword_1EFE4AAD8);
  }
  return result;
}

unint64_t sub_1D42F8180()
{
  unint64_t result;

  result = qword_1EFE4AAE0;
  if (!qword_1EFE4AAE0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4528338, &unk_1E97A9400);
    atomic_store(result, (unint64_t *)&qword_1EFE4AAE0);
  }
  return result;
}

unint64_t sub_1D42F81C0()
{
  unint64_t result;

  result = qword_1EFE4AAE8;
  if (!qword_1EFE4AAE8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4528400, &type metadata for DetectSpeechUtterance.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4AAE8);
  }
  return result;
}

unint64_t sub_1D42F8200()
{
  unint64_t result;

  result = qword_1EFE4AAF0;
  if (!qword_1EFE4AAF0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45284B8, &type metadata for DetectSpeechUtterance.AudioSourceAgnosticRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4AAF0);
  }
  return result;
}

unint64_t sub_1D42F8240()
{
  unint64_t result;

  result = qword_1EFE4AAF8;
  if (!qword_1EFE4AAF8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4528428, &type metadata for DetectSpeechUtterance.AudioSourceAgnosticRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4AAF8);
  }
  return result;
}

unint64_t sub_1D42F8280()
{
  unint64_t result;

  result = qword_1EFE4AB00;
  if (!qword_1EFE4AB00)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4528450, &type metadata for DetectSpeechUtterance.AudioSourceAgnosticRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4AB00);
  }
  return result;
}

unint64_t sub_1D42F82C0()
{
  unint64_t result;

  result = qword_1EFE4AB08;
  if (!qword_1EFE4AB08)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4528370, &type metadata for DetectSpeechUtterance.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4AB08);
  }
  return result;
}

unint64_t sub_1D42F8300()
{
  unint64_t result;

  result = qword_1EFE4AB10;
  if (!qword_1EFE4AB10)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4528398, &type metadata for DetectSpeechUtterance.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4AB10);
  }
  return result;
}

unint64_t sub_1D42F833C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFE4AB20;
  if (!qword_1EFE4AB20)
  {
    v1 = sub_1D42B8B10(&qword_1EFE4FD90);
    v2[0] = &off_1E97A4B58;
    v2[1] = &off_1E97A4B68;
    result = MEMORY[0x1D825E41C](&unk_1D45293A0, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFE4AB20);
  }
  return result;
}

unint64_t sub_1D42F83A0()
{
  unint64_t result;

  result = qword_1EFE4AB30;
  if (!qword_1EFE4AB30)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45286D8, &type metadata for DetectSpeechUtterance.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4AB30);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DetectSpeechUtterance.Request.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D42F8428 + 4 * byte_1D4527F59[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D42F845C + 4 * byte_1D4527F54[v4]))();
}

uint64_t sub_1D42F845C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D42F8464(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D42F846CLL);
  return result;
}

uint64_t sub_1D42F8478(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D42F8480);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D42F8484(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D42F848C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DetectSpeechUtterance.Request.CodingKeys()
{
  return &type metadata for DetectSpeechUtterance.Request.CodingKeys;
}

unint64_t sub_1D42F84AC()
{
  unint64_t result;

  result = qword_1EFE4AB50;
  if (!qword_1EFE4AB50)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45286B0, &type metadata for DetectSpeechUtterance.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4AB50);
  }
  return result;
}

unint64_t sub_1D42F84EC()
{
  unint64_t result;

  result = qword_1EFE4AB58;
  if (!qword_1EFE4AB58)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4528620, &type metadata for DetectSpeechUtterance.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4AB58);
  }
  return result;
}

unint64_t sub_1D42F852C()
{
  unint64_t result;

  result = qword_1EFE4AB60;
  if (!qword_1EFE4AB60)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4528648, &type metadata for DetectSpeechUtterance.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4AB60);
  }
  return result;
}

__n128 sub_1D42F8568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, __int128 a11)
{
  return (__n128)a11;
}

__n128 sub_1D42F85A8()
{
  uint64_t v0;

  return *(__n128 *)(v0 + 24);
}

uint64_t sub_1D42F85E4()
{
  return sub_1D451B688();
}

uint64_t sub_1D42F8600(uint64_t a1, uint64_t a2)
{
  return sub_1D44C88E8(a1, a2, 0, 0);
}

uint64_t sub_1D42F8610()
{
  return sub_1D451B760();
}

_QWORD *sub_1D42F8628()
{
  _QWORD *v0;

  return sub_1D42B5528(v0, v0[3]);
}

uint64_t sub_1D42F8648()
{
  return sub_1D451BA0C();
}

id sub_1D42F8654()
{
  return sub_1D42F70F0();
}

uint64_t sub_1D42F865C@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 144) = a1;
  return v1 - 144;
}

uint64_t sub_1D42F8674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1D42F8684()
{
  return sub_1D451BA24();
}

uint64_t sub_1D42F8694()
{
  return sub_1D451A5E4();
}

void *sub_1D42F86B4(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x49uLL);
}

uint64_t sub_1D42F86BC()
{
  return swift_deallocPartialClassInstance();
}

uint64_t sub_1D42F86C8()
{
  return sub_1D451B964();
}

uint64_t sub_1D42F86D0()
{
  return type metadata accessor for SNSpeechUtteranceResult();
}

void sub_1D42F86D8()
{
  sub_1D42F67B8();
}

uint64_t sub_1D42F86E4@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

float sub_1D42F86F0()
{
  void *v0;
  float result;

  return result;
}

uint64_t sub_1D42F86FC()
{
  uint64_t v0;

  return sub_1D42F7A80(v0 - 168);
}

void *sub_1D42F8704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v16;

  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a5;
  v16[3] = a6;
  v16[4] = a7;
  v16[5] = a8;
  v16[6] = a3;
  v16[7] = a4;
  v16[8] = a1;
  v16[9] = a2;
  swift_retain_n();
  swift_retain();
  return &unk_1EFE4AB80;
}

uint64_t sub_1D42F87B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v15;

  *(_QWORD *)(v8 + 64) = a1;
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 72) = v15;
  *v15 = v8;
  v15[1] = sub_1D42F886C;
  return sub_1D42F88AC(v8 + 16, a3, a4, a2, a5, a6, a7, a8);
}

uint64_t sub_1D42F886C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  sub_1D42B8F34(&v3);
  if (!v0)
    sub_1D42F9B40();
  return sub_1D42B8ED4((uint64_t (*)(void))v1[1]);
}

uint64_t sub_1D42F88AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;

  v8[14] = a8;
  v8[15] = v15;
  v8[12] = a6;
  v8[13] = a7;
  v8[10] = a3;
  v8[11] = a5;
  v8[8] = a1;
  v8[9] = a2;
  v8[16] = *(_QWORD *)(a8 - 8);
  v8[17] = sub_1D42F9B80();
  v8[18] = *(_QWORD *)(a7 - 8);
  v11 = sub_1D42F9B80();
  v8[19] = v11;
  v12 = (_QWORD *)swift_task_alloc();
  v8[20] = v12;
  *v12 = v8;
  v12[1] = sub_1D42F8954;
  return sub_1D4376698(v11, a7, a4, a7, v14);
}

uint64_t sub_1D42F8954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v6;
  uint64_t (*v7)(void);

  sub_1D42E3E3C();
  v3 = *v2;
  *v4 = v3;
  *(_QWORD *)(v0 + 168) = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_1D42B8EC8();
    return swift_task_switch();
  }
  else
  {
    v7 = (uint64_t (*)(void))(**(int **)(v0 + 72) + *(_QWORD *)(v0 + 72));
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 176) = v6;
    *v6 = v3;
    v6[1] = sub_1D42F89F0;
    return sub_1D42E3CFC(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 152), v7);
  }
}

uint64_t sub_1D42F89F0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D42F8A48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  __int128 v9;
  __int128 v10;

  v1 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  v6 = *(_QWORD *)(v0 + 112);
  v7 = *(_QWORD *)(v0 + 104);
  sub_1D447DD10(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), v6, *(_QWORD *)(v0 + 120), (uint64_t *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v7);
  if (!v1)
  {
    v8 = *(_OWORD **)(v0 + 64);
    v9 = *(_OWORD *)(v0 + 16);
    v10 = *(_OWORD *)(v0 + 48);
    v8[1] = *(_OWORD *)(v0 + 32);
    v8[2] = v10;
    *v8 = v9;
  }
  swift_task_dealloc();
  sub_1D42E3E54();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D42F8B1C()
{
  uint64_t v0;

  sub_1D42F9B9C();
  sub_1D42E3E54();
  return sub_1D42B8ED4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D42F8B4C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 104));
  sub_1D42F9B9C();
  sub_1D42E3E54();
  return sub_1D42B8ED4(*(uint64_t (**)(void))(v0 + 8));
}

void *sub_1D42F8B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  sub_1D42F8704(a1, a2, *v4, v4[1], *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), *(_QWORD *)(a4 - 8), *(_QWORD *)(a4 - 16));
  return &unk_1EFE4AB80;
}

uint64_t sub_1D42F8BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  sub_1D42B8EC8();
  return swift_task_switch();
}

uint64_t sub_1D42F8BF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  uint64_t (*v6)(void *, uint64_t);

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = sub_1D42B6F40();
  v4 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 48) = v2;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v3 + 72) = v1;
  v6 = *(uint64_t (**)(void *, uint64_t))(v0 + 8);
  swift_retain();
  sub_1D42BE934();
  return v6(&unk_1EFE4ABA0, v3);
}

uint64_t sub_1D42F8C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;

  v8[10] = v10;
  v8[11] = v11;
  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1D42F8CAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = sub_1D42B6F40();
  *(_QWORD *)(v0 + 96) = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_OWORD *)(v3 + 24) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v3 + 40) = v1;
  swift_retain();
  sub_1D42BE934();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v4;
  *v4 = v0;
  v4[1] = sub_1D42F8D64;
  return sub_1D42F8E40(*(_QWORD *)(v0 + 16), (uint64_t)&unk_1EFE4ABB0, v3, *(_QWORD *)(v0 + 24), v5, *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
}

uint64_t sub_1D42F8D64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;

  sub_1D42E3E3C();
  v3 = *v2;
  *v4 = v3;
  *(_QWORD *)(v0 + 112) = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_1D42B8EC8();
    return sub_1D42E3818();
  }
  else
  {
    swift_release();
    return sub_1D42B8ED4(*(uint64_t (**)(void))(v3 + 8));
  }
}

uint64_t sub_1D42F8DC4()
{
  uint64_t v0;

  swift_release();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D42F8DF0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v6)(void);

  *(_QWORD *)(v1 + 64) = a1;
  v2 = (_QWORD *)sub_1D42F9B5C();
  *(_QWORD *)(v1 + 72) = v2;
  v3 = sub_1D42F9B0C(v2);
  return sub_1D42E3CFC(v3, v4, v6);
}

uint64_t sub_1D42F8E40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __int128 v10;
  uint64_t v11;

  *(_QWORD *)(v8 + 184) = v11;
  *(_OWORD *)(v8 + 168) = v10;
  *(_QWORD *)(v8 + 152) = a7;
  *(_QWORD *)(v8 + 160) = a8;
  *(_QWORD *)(v8 + 136) = a4;
  *(_QWORD *)(v8 + 144) = a6;
  *(_QWORD *)(v8 + 120) = a2;
  *(_QWORD *)(v8 + 128) = a3;
  *(_QWORD *)(v8 + 112) = a1;
  sub_1D42B8EC8();
  return swift_task_switch();
}

uint64_t sub_1D42F8E7C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t);

  sub_1D447DD10(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 176), (uint64_t *)(v0 + 64));
  v3 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v0 + 120) + *(_QWORD *)(v0 + 120));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 192) = v1;
  *v1 = v0;
  v1[1] = sub_1D42F8F34;
  return v3(v0 + 16, v0 + 64);
}

uint64_t sub_1D42F8F34()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v6;

  sub_1D42E3E3C();
  v3 = *v2;
  *v4 = v3;
  v0[25] = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_1D42B8EC8();
    return sub_1D42E3818();
  }
  else
  {
    v6 = (_QWORD *)swift_task_alloc();
    v0[26] = (uint64_t)v6;
    *v6 = v3;
    v6[1] = sub_1D42F8FC8;
    return sub_1D4376698(v0[14], v0[21], (uint64_t)(v0 + 2), v0[21], v0[23]);
  }
}

uint64_t sub_1D42F8FC8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D42F9020()
{
  uint64_t *v0;
  uint64_t v1;

  sub_1D42F9B90();
  sub_1D42B8C84(v0);
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1D42F9050()
{
  uint64_t v0;

  sub_1D42B8C84((uint64_t *)(v0 + 64));
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D42F907C()
{
  uint64_t *v0;
  uint64_t v1;

  sub_1D42F9B90();
  sub_1D42B8C84(v0);
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1D42F90AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)(v7 + 16) = a1;
  v14 = *(_QWORD *)(a7 - 16);
  v13 = *(_QWORD *)(a7 - 8);
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 24) = v15;
  v16 = *(_QWORD *)(a6 + 16);
  v17 = *(_QWORD *)(a6 + 24);
  *v15 = v7;
  v15[1] = sub_1D42F9140;
  return sub_1D42F8BCC(a2, a3, a4, a5, v16, v17, v13, v14);
}

uint64_t sub_1D42F9140(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v7;

  sub_1D42F9AD8();
  if (!v2)
  {
    v7 = *(_QWORD **)(v4 + 16);
    *v7 = a1;
    v7[1] = a2;
  }
  return sub_1D42B8ED4(*(uint64_t (**)(void))(v3 + 8));
}

uint64_t sub_1D42F9184(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t result;
  __int128 v5;

  v5 = *a3;
  result = MEMORY[0x1D825E41C](&unk_1D452875C, a2, &v5);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D42F91C4(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t result;
  __int128 v5;

  v5 = *a3;
  result = MEMORY[0x1D825E41C](&unk_1D4528790, a2, &v5);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D42F9204(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t result;
  __int128 v5;

  v5 = *a3;
  result = MEMORY[0x1D825E41C](&unk_1D45287F8, a2, &v5);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D42F9244(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t result;
  __int128 v5;

  v5 = *a3;
  result = MEMORY[0x1D825E41C](&unk_1D452882C, a2, &v5);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D42F9288()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1D42F9B20();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D42F9A88(v1);
  return sub_1D42F87B8(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1D42F92EC()
{
  uint64_t v0;

  sub_1D42F9A68();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D42F9314()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D42F9340()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1D42F9B20();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D42F9A88(v1);
  return sub_1D42F8C7C(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1D42F93A4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D42F93D0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D42F9B0C(v1);
  return sub_1D42F8DF0(v2);
}

void sub_1D42F9440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;

  v6 = (_QWORD *)sub_1D42B6F40();
  v6[2] = a3;
  v6[3] = a1;
  v6[4] = a2;
  sub_1D42BE934();
  sub_1D42CB15C();
}

uint64_t sub_1D42F9494(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v7 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v5;
  *v5 = v3;
  v5[1] = sub_1D42F92EC;
  return v7(a1);
}

uint64_t sub_1D42F94F8(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;

  sub_1D42F9440(a3, a4, a5);
  v10 = v9;
  v12 = v11;
  v17 = type metadata accessor for XPCFunction(0, (uint64_t)&type metadata for XPCVoid, a5, v13);
  v15[0] = &off_1E97ACAD0;
  v15[1] = a6;
  v18 = MEMORY[0x1D825E41C](&unk_1D45287F8, v17, v15);
  v16[0] = v10;
  v16[1] = v12;
  swift_retain();
  a1(v16);
  swift_release();
  return sub_1D42B5400((uint64_t)v16);
}

void sub_1D42F95CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;

  v6 = (_QWORD *)sub_1D42B6F40();
  v6[2] = a3;
  v6[3] = a1;
  v6[4] = a2;
  sub_1D42BE934();
  sub_1D42CB15C();
}

uint64_t sub_1D42F9620(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1D42F9684;
  return v6(a1);
}

uint64_t sub_1D42F9684()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D42F9AB8();
  if (!v0)
    return sub_1D42B8DC0(*(uint64_t (**)(void))(v1 + 8));
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D42F96C0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D42F96CC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D42F96F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(int **)(v1 + 24);
  v5 = swift_task_alloc();
  v6 = (_QWORD *)sub_1D42B8F00(v5);
  *v6 = v2;
  v6[1] = sub_1D42F9A58;
  return sub_1D42F9620(a1, v4);
}

uint64_t type metadata accessor for XPCFunction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for XPCFunction);
}

uint64_t sub_1D42F9764()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(int **)(v0 + 24);
  v2 = swift_task_alloc();
  v3 = (_QWORD *)sub_1D42B8F00(v2);
  v4 = sub_1D42F9B0C(v3);
  return sub_1D42F9494(v4, v5, v1);
}

uint64_t sub_1D42F97D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v5)(void);
  uint64_t v7;

  *(_QWORD *)(v3 + 16) = a3;
  v4 = (_QWORD *)sub_1D42F9AF4();
  *(_QWORD *)(v3 + 24) = v4;
  v5 = (uint64_t (*)(void))sub_1D42F9B70(v4, (uint64_t)sub_1D42F9808, v7);
  return sub_1D42B8DC0(v5);
}

uint64_t sub_1D42F9808(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1D42F9AD8();
  if (v2)
    return (*(uint64_t (**)(void))(v3 + 8))();
  *(_QWORD *)(v4 + 32) = a2;
  *(_QWORD *)(v4 + 40) = a1;
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D42F9868()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D42F95CC(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 16));
  v2 = v1;
  swift_release();
  return (*(uint64_t (**)(void *, uint64_t))(v0 + 8))(&unk_1EFE4ABC8, v2);
}

uint64_t sub_1D42F98BC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  v1 = (_QWORD *)sub_1D42F9B5C();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = (uint64_t (*)(void))sub_1D42F9B70(v1, (uint64_t)sub_1D42F98F0, v4);
  return sub_1D42B8DC0(v2);
}

uint64_t sub_1D42F98F0()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D42F9A68();
  if (v0)
    return sub_1D42B8DC0(*(uint64_t (**)(void))(v1 + 8));
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D42F992C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D42F9938()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  v1 = (_QWORD *)sub_1D42F9AF4();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = (uint64_t (*)(void))sub_1D42F9B70(v1, (uint64_t)sub_1D42F9974, v4);
  return v2();
}

uint64_t sub_1D42F9974()
{
  sub_1D42F9AB8();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D42F99B0()
{
  return swift_allocateGenericValueMetadata();
}

_QWORD *initializeBufferWithCopyOfBuffer for XPCPublisher(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for XPCPublisher()
{
  return swift_release();
}

_QWORD *assignWithCopy for XPCPublisher(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for XPCPublisher(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t sub_1D42F9A68()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

uint64_t sub_1D42F9A88(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = v3;
  a1[1] = v1;
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  return v2;
}

uint64_t sub_1D42F9AB8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 24) = v0;
  return swift_task_dealloc();
}

uint64_t sub_1D42F9AD8()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)(v1 - 8);
  *v2 = *v0;
  *v2 = *v0;
  return swift_task_dealloc();
}

uint64_t sub_1D42F9AF4()
{
  return swift_task_alloc();
}

uint64_t sub_1D42F9B0C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

__n128 sub_1D42F9B40()
{
  uint64_t v0;
  uint64_t v1;
  __n128 result;
  __int128 v3;

  v1 = *(_QWORD *)(v0 + 64);
  result = *(__n128 *)(v0 + 16);
  v3 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v1 + 32) = v3;
  *(__n128 *)v1 = result;
  return result;
}

uint64_t sub_1D42F9B5C()
{
  return swift_task_alloc();
}

uint64_t sub_1D42F9B70@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>, uint64_t a3)
{
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return a3;
}

uint64_t sub_1D42F9B80()
{
  return swift_task_alloc();
}

uint64_t *sub_1D42F9B90()
{
  uint64_t v0;

  return sub_1D42B8C84((uint64_t *)(v0 + 16));
}

uint64_t sub_1D42F9B9C()
{
  return swift_task_dealloc();
}

void type metadata accessor for DirectionOfArrival()
{
  sub_1D42CB35C();
}

uint64_t destroy for DetectorHeadModelMetadata()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D42F9BBC(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D42F9C00(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D42F9C88(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeaturePrint(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 56);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeaturePrint(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for DirectionOfArrival.Result()
{
  sub_1D42CB35C();
}

void sub_1D42F9D84()
{
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D42D6154();
}

uint64_t sub_1D42F9E48(float *a1, float *a2)
{
  uint64_t v2;
  uint64_t v3;
  float v4;
  float v5;
  uint64_t v6;
  uint64_t v7;
  float v8;
  float v9;
  uint64_t v10;
  BOOL v11;
  _QWORD v13[2];
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[2];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;

  v2 = *(_QWORD *)a1;
  v3 = *((_QWORD *)a1 + 5);
  v4 = a1[12];
  v5 = a1[13];
  v6 = *((_QWORD *)a1 + 7);
  v7 = *(_QWORD *)a2;
  v8 = a2[12];
  v9 = a2[13];
  v10 = *((_QWORD *)a2 + 7);
  v16 = *((_QWORD *)a2 + 5);
  v17[0] = v2;
  v17[1] = *((_QWORD *)a1 + 1);
  v18 = *((_OWORD *)a1 + 1);
  v19 = *((_QWORD *)a1 + 4);
  v20 = v3;
  v13[0] = v7;
  v13[1] = *((_QWORD *)a2 + 1);
  v14 = *((_OWORD *)a2 + 1);
  v15 = *((_QWORD *)a2 + 4);
  if (static TimeRange.== infix(_:_:)((uint64_t)v17, (uint64_t)v13) && (v4 == v8 ? (v11 = v5 == v9) : (v11 = 0), v11))
    return sub_1D42FE1FC(v6, v10);
  else
    return 0;
}

uint64_t sub_1D42F9F14(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x676E6152656D6974 && a2 == 0xE900000000000065;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6874756D697A61 && a2 == 0xE700000000000000;
    if (v6 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6F69746176656C65 && a2 == 0xE90000000000006ELL;
      if (v7 || (sub_1D451B820() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x536C616974617073 && a2 == 0xEF6D757274636570)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_1D451B820();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_1D42FA0F4()
{
  return 4;
}

uint64_t sub_1D42FA0FC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D42FA134 + 4 * byte_1D45288B0[a1]))(0x676E6152656D6974, 0xE900000000000065);
}

uint64_t sub_1D42FA134()
{
  return 0x6874756D697A61;
}

uint64_t sub_1D42FA14C()
{
  return 0x6F69746176656C65;
}

uint64_t sub_1D42FA164()
{
  return 0x536C616974617073;
}

uint64_t sub_1D42FA188(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v2 = sub_1D42B28FC((uint64_t *)&unk_1EFE4AD18);
  v8 = *(_QWORD *)(v2 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v3);
  sub_1D42CB210();
  v6 = v5 - v4;
  sub_1D42B5528(a1, a1[3]);
  sub_1D42FBF28();
  sub_1D451BA24();
  sub_1D42CA408();
  sub_1D451B760();
  if (!v9)
  {
    sub_1D42FC490();
    sub_1D42FC490();
    sub_1D42B28FC(&qword_1EFE4CC80);
    sub_1D42FBF64(&qword_1EFE4AD28, MEMORY[0x1E0DEB080], MEMORY[0x1E0DEAF10]);
    sub_1D451B760();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v6, v2);
}

uint64_t sub_1D42FA36C()
{
  sub_1D451B958();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D42D6154();
  return sub_1D451B994();
}

uint64_t sub_1D42FA46C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = sub_1D42B28FC(&qword_1EFE4AD00);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1D42CB210();
  sub_1D42B5528(a1, a1[3]);
  sub_1D42FBF28();
  sub_1D451BA0C();
  if (!v2)
  {
    sub_1D42CA3CC();
    sub_1D42FC460();
    sub_1D42FC424(1);
    v8 = v7;
    sub_1D42FC424(2);
    v11 = v10;
    sub_1D42B28FC(&qword_1EFE4CC80);
    sub_1D42FBF64(&qword_1EFE4AD10, MEMORY[0x1E0DEB0A8], MEMORY[0x1E0DEAF40]);
    sub_1D42FC460();
    sub_1D42FC43C(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    *(_QWORD *)a2 = v12;
    *(_QWORD *)(a2 + 8) = v13;
    *(_QWORD *)(a2 + 16) = v14;
    *(_QWORD *)(a2 + 24) = v15;
    *(_QWORD *)(a2 + 32) = v16;
    *(_QWORD *)(a2 + 40) = v17;
    *(_DWORD *)(a2 + 48) = v8;
    *(_DWORD *)(a2 + 52) = v11;
    *(_QWORD *)(a2 + 56) = v12;
  }
  return sub_1D42B5400((uint64_t)a1);
}

uint64_t sub_1D42FA658()
{
  unsigned __int8 *v0;

  return sub_1D42FA0FC(*v0);
}

uint64_t sub_1D42FA660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D42F9F14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D42FA684@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D42FA0F4();
  *a1 = result;
  return result;
}

uint64_t sub_1D42FA6A8()
{
  sub_1D42FBF28();
  return sub_1D451BA3C();
}

uint64_t sub_1D42FA6D0()
{
  sub_1D42FBF28();
  return sub_1D451BA48();
}

uint64_t sub_1D42FA700()
{
  sub_1D451B958();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D42D6154();
  return sub_1D451B994();
}

uint64_t sub_1D42FA7FC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D42FA46C(a1, a2);
}

uint64_t sub_1D42FA810(_QWORD *a1)
{
  return sub_1D42FA188(a1);
}

unint64_t sub_1D42FA82C()
{
  unint64_t result;

  result = qword_1EFE4AC80;
  if (!qword_1EFE4AC80)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45288EC, &unk_1E97A2BF0);
    atomic_store(result, (unint64_t *)&qword_1EFE4AC80);
  }
  return result;
}

void sub_1D42FA868(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  id v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  id v23[2];

  v23[1] = *(id *)MEMORY[0x1E0C80C00];
  v7 = objc_opt_self();
  v23[0] = 0;
  v8 = sub_1D4500E1C(v7, a1, (uint64_t)v23);
  if (!v8)
  {
    v18 = v23[0];
    sub_1D4519AA4();

    swift_willThrow();
    return;
  }
  v9 = v8;
  v10 = v23[0];
  v11 = sub_1D451B928();
  v12 = sub_1D44F2078((uint64_t)a1);
  if (v12 < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
  }
  v13 = v12;
  v14 = sub_1D44F2078((uint64_t)a1);
  if (v14 < 0)
    goto LABEL_9;
  v15 = v14;
  sub_1D42FC450((uint64_t)a1, 12);
  if (v3)
  {

  }
  else
  {
    v17 = v16;
    sub_1D42FC450((uint64_t)a1, 13);
    v20 = v19;
    sub_1D42FA9E8(a1);
    v22 = v21;

    *(_QWORD *)a3 = v11;
    *(_DWORD *)(a3 + 8) = v13;
    *(_DWORD *)(a3 + 12) = 1;
    *(_QWORD *)(a3 + 16) = 0;
    *(_QWORD *)(a3 + 24) = a2;
    *(_DWORD *)(a3 + 32) = v15;
    *(_DWORD *)(a3 + 36) = 1;
    *(_QWORD *)(a3 + 40) = 0;
    *(_DWORD *)(a3 + 48) = v17;
    *(_DWORD *)(a3 + 52) = v20;
    *(_QWORD *)(a3 + 56) = v22;
  }
}

void sub_1D42FA9E8(void *a1)
{
  uint64_t v1;
  uint32_t *v2;
  uint32_t *p_ivar_base_size;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  double v9;
  id v10;
  id v11;
  double v12;
  double v13;
  double v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  uint32_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;

  v2 = (uint32_t *)sub_1D42FBAEC(a1, 104640, 0, 0);
  if (!v1)
  {
    p_ivar_base_size = v2;
    v4 = sub_1D42FAD48(v2);
    if (v4 >> 62)
      goto LABEL_21;
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
      while (1)
      {
        v20 = p_ivar_base_size;
        v23 = MEMORY[0x1E0DEE9D8];
        sub_1D42C7654();
        if (v5 < 0)
          break;
        v6 = 0;
        v21 = v4;
        v22 = v4 & 0xC000000000000001;
        p_ivar_base_size = &SNVGGishMusicModel__metaData.ivar_base_size;
        while (v5 != v6)
        {
          if (v22)
            v7 = (id)MEMORY[0x1D825CD78](v6, v4);
          else
            v7 = *(id *)(v4 + 8 * v6 + 32);
          v8 = v7;
          objc_msgSend(v8, sel_doubleValue);
          v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v9);
          v11 = objc_msgSend(v8, sel_longLongValue);
          if (v11 != objc_msgSend(v10, sel_longLongValue)
            || (sub_1D42FC46C(), v13 = v12, objc_msgSend(v10, sel_doubleValue), v13 != v14))
          {

LABEL_18:
            type metadata accessor for SNError();
            sub_1D451B400();
            swift_bridgeObjectRelease();
            v19 = objc_msgSend(v8, sel_description);
            sub_1D451A6EC();

            sub_1D451A794();
            swift_bridgeObjectRelease();
            sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 1, 0, 0xD000000000000015, 0x80000001D4551CC0);
            sub_1D42D3258();
            swift_willThrow();
            sub_1D42CB208();
            sub_1D42EA1BC();

            return;
          }
          v15 = objc_msgSend(v8, sel_isEqual_, v10);

          v4 = v21;
          if ((v15 & 1) == 0)
            goto LABEL_18;
          sub_1D42FC46C();
          v17 = v16;

          v18 = *(_QWORD *)(v23 + 16);
          if (v18 >= *(_QWORD *)(v23 + 24) >> 1)
            sub_1D42C7654();
          ++v6;
          *(_QWORD *)(v23 + 16) = v18 + 1;
          *(_QWORD *)(v23 + 8 * v18 + 32) = v17;
          if (v5 == v6)
          {
            sub_1D42CB208();

            return;
          }
        }
        __break(1u);
LABEL_21:
        swift_bridgeObjectRetain();
        v5 = sub_1D451B5A4();
        sub_1D42CB208();
        if (!v5)
          goto LABEL_22;
      }
      __break(1u);
    }
    else
    {
LABEL_22:
      sub_1D42CB208();

    }
  }
}

uint64_t sub_1D42FAD24(uint64_t a1)
{
  return sub_1D42FAF04(a1, (unint64_t *)&qword_1EFE403E0);
}

uint64_t sub_1D42FAD48(void *a1)
{
  id v1;
  uint64_t v3;

  v1 = a1;
  sub_1D42B28FC(&qword_1EFE4AC88);
  sub_1D42B28FC((uint64_t *)&unk_1EFE4AC90);
  if ((swift_dynamicCast() & 1) != 0)
    return v3;
  sub_1D42FBCD0();
  swift_allocError();
  return swift_willThrow();
}

uint64_t sub_1D42FADE0(uint64_t a1)
{
  uint64_t v2;
  _BYTE v3[32];

  sub_1D42FC068(a1, (uint64_t)v3, &qword_1EFE47160);
  sub_1D42B28FC(&qword_1EFE47160);
  sub_1D42B28FC((uint64_t *)&unk_1EFE47320);
  if ((sub_1D42B6E2C() & 1) != 0)
    return v2;
  sub_1D42FBCD0();
  sub_1D42B6D0C();
  return sub_1D42E3BB8();
}

uint64_t sub_1D42FAE6C(uint64_t a1)
{
  uint64_t v2;
  _BYTE v3[32];

  sub_1D42B294C(a1, (uint64_t)v3);
  if ((sub_1D42B6E2C() & 1) != 0)
    return v2;
  sub_1D42FBCD0();
  sub_1D42B6D0C();
  return sub_1D42E3BB8();
}

uint64_t sub_1D42FAEE0(uint64_t a1)
{
  return sub_1D42FAF04(a1, (unint64_t *)&qword_1EFE404B0);
}

uint64_t sub_1D42FAF04(uint64_t a1, unint64_t *a2)
{
  _QWORD v4[6];

  sub_1D42B294C(a1, (uint64_t)v4);
  sub_1D42E9D88(0, a2);
  if ((sub_1D42B6E2C() & 1) != 0)
    return v4[5];
  sub_1D42FBCD0();
  sub_1D42B6D0C();
  return sub_1D42E3BB8();
}

uint64_t sub_1D42FAF94()
{
  uint64_t v1;

  swift_bridgeObjectRetain();
  sub_1D42B28FC((uint64_t *)&unk_1EFE4AD30);
  sub_1D42B28FC(&qword_1EFE4BE50);
  if ((sub_1D42B6E2C() & 1) != 0)
    return v1;
  sub_1D42FBCD0();
  sub_1D42B6D0C();
  return sub_1D42E3BB8();
}

void *sub_1D42FB018(void (*a1)(_QWORD, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (**v8)@<X0>(uint64_t *@<X8>);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  _QWORD *v34;
  void *v35;
  unsigned int v36;
  _BYTE *v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (**v42)@<X0>(uint64_t *@<X8>);
  uint64_t (**v43)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (**v48)@<X0>(uint64_t *@<X8>);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v60;
  uint64_t v61;

  v6 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F7C0);
  v57 = *(_QWORD *)(v6 - 8);
  v58 = v6;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v7);
  sub_1D42BE768();
  v48 = v8;
  v9 = sub_1D451A0B0();
  v55 = *(_QWORD *)(v9 - 8);
  v56 = v9;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v10);
  sub_1D42BE768();
  v46 = v11;
  v54 = sub_1D42B28FC(&qword_1EFE4ACA0);
  v52 = *(_QWORD *)(v54 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v12);
  sub_1D42BE768();
  v50 = v13;
  v53 = sub_1D42B28FC(&qword_1EFE4ACA8);
  v51 = *(_QWORD *)(v53 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v14);
  sub_1D42BE768();
  v49 = v15;
  v47 = sub_1D42B28FC((uint64_t *)&unk_1EFE4ACB0);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v16);
  sub_1D42CB210();
  v19 = v18 - v17;
  v20 = sub_1D42B28FC(&qword_1EFE4FBA0);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v21);
  sub_1D42CB210();
  v24 = v23 - v22;
  v25 = sub_1D42B28FC(&qword_1EFE4ACC0);
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  sub_1D42CB210();
  v29 = v28 - v27;
  v30 = sub_1D42B8DB4();
  *(_QWORD *)(v30 + 16) = a3;
  *(_QWORD *)(v30 + 24) = a4;
  v31 = type metadata accessor for SNDirectionOfArrivalEstimator();
  swift_bridgeObjectRetain();
  v32 = (void *)v31;
  v33 = sub_1D438AAA8();
  if (!v61)
  {
    v32 = (void *)v33;
    v45 = v24;
    if (sub_1D44F5EF4(v33) == 1)
    {
      v34 = sub_1D44F65F4((uint64_t)v32);
      if (v34)
      {
        v35 = v34;
        if (sub_1D44EF6C4((uint64_t)v34) == 1)
        {
          v36 = sub_1D44F1BF8((uint64_t)v35, 0);
          a1(v36, 16000);
          sub_1D4398FE0();
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v55 + 104))(v46, *MEMORY[0x1E0C958B0], v56);
          *v48 = sub_1D42FB5D8;
          v48[1] = 0;
          (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), _QWORD, uint64_t))(v57 + 104))(v48, *MEMORY[0x1E0C958F0], v58);
          sub_1D42B28FC((uint64_t *)&unk_1EFE4ACD0);
          sub_1D42F1168(&qword_1EFE496A0, (uint64_t *)&unk_1EFE4ACD0, MEMORY[0x1E0C95D90]);
          sub_1D451A380();
          (*(void (**)(uint64_t (**)@<X0>(uint64_t *@<X8>), uint64_t))(v57 + 8))(v48, v58);
          (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v46, v56);
          swift_release();
          sub_1D42B28FC(&qword_1EFE4ACE0);
          sub_1D42F1168(&qword_1EFE4ACE8, &qword_1EFE4ACA0, MEMORY[0x1E0C95AB8]);
          sub_1D451A308();
          (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v50, v54);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 16))(v19, v49, v53);
          *(_QWORD *)(v19 + *(int *)(v47 + 44)) = 512;
          (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v49, v53);
          v39 = swift_allocObject();
          *(_QWORD *)(v39 + 16) = 0;
          v60 = v35;
          v40 = sub_1D42B8DB4();
          *(_QWORD *)(v40 + 16) = sub_1D42FBD84;
          *(_QWORD *)(v40 + 24) = 0;
          v41 = sub_1D42B8DB4();
          *(_QWORD *)(v41 + 16) = sub_1D42FBE04;
          *(_QWORD *)(v41 + 24) = v39;
          sub_1D42FC068(v19, v45, (uint64_t *)&unk_1EFE4ACB0);
          v42 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v45 + *(int *)(v20 + 52));
          *v42 = sub_1D42FBE4C;
          v42[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v41;
          v43 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))(v45 + *(int *)(v20 + 56));
          *v43 = sub_1D42FBE44;
          v43[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v40;
          sub_1D42D7018(v19, (uint64_t *)&unk_1EFE4ACB0);
          v44 = sub_1D42B8DB4();
          *(_QWORD *)(v44 + 16) = sub_1D42FBD30;
          *(_QWORD *)(v44 + 24) = v30;
          swift_retain();
          sub_1D42FB798((uint64_t)sub_1D42FBE98, v44, (uint64_t)sub_1D42FB680, 0, (uint64_t)sub_1D42FBEB0, 0, v29);
          sub_1D42EA1BC();
          sub_1D42D7018(v45, &qword_1EFE4FBA0);
          sub_1D42F1168(&qword_1EFE4ACF0, &qword_1EFE4ACC0, MEMORY[0x1E0C95B48]);
          v32 = (void *)sub_1D451A2E4();
          sub_1D42FC484();

          swift_release();
          sub_1D42FC43C(*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8));
          swift_bridgeObjectRelease();
          sub_1D42FC448();
          return v32;
        }

      }
    }
    sub_1D42FBD48();
    sub_1D42B6D0C();
    *v37 = 0;
    swift_willThrow();
    sub_1D42D3258();
    sub_1D42FC448();

    return v32;
  }
  sub_1D42D3258();
  sub_1D42FC448();
  return v32;
}

uint64_t sub_1D42FB5D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  _BYTE *v3;

  sub_1D42FBD48();
  result = swift_allocError();
  *a1 = result;
  *v3 = 1;
  return result;
}

_QWORD *sub_1D42FB61C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v3 = result[1];
  v2 = result[2];
  if ((v2 | v3) < 0)
  {
    __break(1u);
  }
  else
  {
    *a2 = *result;
    a2[1] = v3;
    a2[2] = v2;
    a2[3] = 0;
    a2[4] = v3;
    a2[5] = 0;
    a2[6] = v2;
    return (_QWORD *)swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1D42FB644(uint64_t (*a1)(void))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = a1();
  v3 = v2;
  if (!v1)
    sub_1D44F4884(v2);
  return v3;
}

id sub_1D42FB680(void *a1)
{
  void *v2;
  id v3;

  v2 = (void *)sub_1D451A6C8();
  v3 = sub_1D44F590C(a1, v2);

  return v3;
}

void sub_1D42FB6DC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[8];

  sub_1D42FA868(a2, a3, (uint64_t)v13);
  if (!v3)
  {
    v4 = v13[0];
    v5 = v13[2];
    v6 = v13[3];
    v7 = v13[5];
    v8 = v13[7];
    v9 = v13[6];
    v10 = v13[1];
    v11 = v13[4];
    sub_1D42B28FC(&qword_1EFE4ACF8);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1D45261D0;
    *(_QWORD *)(v12 + 32) = v4;
    *(_QWORD *)(v12 + 40) = v10;
    *(_QWORD *)(v12 + 48) = v5;
    *(_QWORD *)(v12 + 56) = v6;
    *(_QWORD *)(v12 + 64) = v11;
    *(_QWORD *)(v12 + 72) = v7;
    *(_QWORD *)(v12 + 80) = v9;
    *(_QWORD *)(v12 + 88) = v8;
  }
}

uint64_t sub_1D42FB798@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a3;
  *(_QWORD *)(v15 + 24) = a4;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a5;
  *(_QWORD *)(v16 + 24) = a6;
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = sub_1D42FBEC4;
  v17[3] = v14;
  v17[4] = sub_1D42FBEDC;
  v17[5] = v15;
  v17[6] = sub_1D42FBEF4;
  v17[7] = v16;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1D43D44FC(a7);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1D42FB8E4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v14 = sub_1D42B8DB4();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  v15 = sub_1D42B8DB4();
  *(_QWORD *)(v15 + 16) = a3;
  *(_QWORD *)(v15 + 24) = a4;
  v16 = sub_1D42B8DB4();
  *(_QWORD *)(v16 + 16) = a5;
  *(_QWORD *)(v16 + 24) = a6;
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = sub_1D42FC404;
  v17[3] = v14;
  v17[4] = sub_1D42FC3F0;
  v17[5] = v15;
  v17[6] = sub_1D42FBEF4;
  v17[7] = v16;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1D42EA340();
  swift_retain();
  sub_1D43D46B4(a7);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1D42FBA14@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t *__return_ptr, _OWORD *)@<X2>, uint64_t a3@<X8>)
{
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v9;
  _OWORD v10[3];
  uint64_t v11;

  v5 = *(_OWORD *)(a1 + 16);
  v10[0] = *(_OWORD *)a1;
  v10[1] = v5;
  v10[2] = *(_OWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 48);
  a2(&v9, v10);
  v6 = v9;
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 16) = v7;
  *(_OWORD *)(a3 + 32) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(a3 + 48) = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a3 + 56) = v6;
  return sub_1D42BE0D0(a1);
}

uint64_t sub_1D42FBA8C(void (*a1)(uint64_t *__return_ptr))
{
  uint64_t v2;

  a1(&v2);
  return v2;
}

uint64_t sub_1D42FBABC(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;

  v2 = *(_QWORD *)(result + 40);
  v3 = *(_QWORD *)(result + 48);
  v4 = __OFSUB__(v3, v2);
  v5 = v3 - v2;
  if (v5 < 0 != v4)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v4)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  result = *a2 + v5;
  if (!__OFADD__(*a2, v5))
  {
    *a2 = result;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1D42FBAEC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  sub_1D44C8B50(a1, a2, a3, a4, 8);
  if (!v5)
    __asm { BR              X10 }
  return v4;
}

void sub_1D42FBB50()
{
  sub_1D42FC418();
  JUMPOUT(0x1D42FBB10);
}

uint64_t sub_1D42FBBF0(uint64_t a1)
{
  _BYTE *v2;

  if (a1)
    return *(_QWORD *)a1;
  sub_1D42B7F2C();
  swift_allocError();
  *v2 = 0;
  return swift_willThrow();
}

uint64_t sub_1D42FBC48(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = sub_1D4519A14();
  v5 = result;
  if (result)
  {
    result = sub_1D4519A38();
    if (__OFSUB__(a1, result))
      goto LABEL_7;
    v5 += a1 - result;
  }
  if (!__OFSUB__(a2, a1))
  {
    sub_1D4519A2C();
    return sub_1D42FBBF0(v5);
  }
  __break(1u);
LABEL_7:
  __break(1u);
  return result;
}

unint64_t sub_1D42FBCD0()
{
  unint64_t result;

  result = qword_1EFE4B380;
  if (!qword_1EFE4B380)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45379E4, &type metadata for CoerceUtils.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4B380);
  }
  return result;
}

uint64_t sub_1D42FBD0C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D42FBD30()
{
  return sub_1D438AA68();
}

unint64_t sub_1D42FBD48()
{
  unint64_t result;

  result = qword_1EFE4ACC8;
  if (!qword_1EFE4ACC8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4528B40, &unk_1E97A2A20);
    atomic_store(result, (unint64_t *)&qword_1EFE4ACC8);
  }
  return result;
}

uint64_t sub_1D42FBD84@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  __int128 v4;
  uint64_t result;
  _OWORD v6[3];
  uint64_t v7;

  v4 = *(_OWORD *)(a1 + 16);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v4;
  v6[2] = *(_OWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 48);
  result = sub_1D42FBABC((uint64_t)v6, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D42FBDCC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = nullsub_1(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1D42FBDF4()
{
  return swift_deallocObject();
}

uint64_t sub_1D42FBE04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1D42FBDCC((_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1D42FBE0C@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t *__return_ptr, _OWORD *)@<X2>, uint64_t a3@<X8>)
{
  __int128 v3;
  _OWORD v5[3];
  uint64_t v6;

  v3 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v3;
  v5[2] = *(_OWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 48);
  return sub_1D42FBA14((uint64_t)v5, a2, a3);
}

uint64_t sub_1D42FBE44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1D42FBE0C(a1, *(void (**)(uint64_t *__return_ptr, _OWORD *))(v2 + 16), a2);
}

uint64_t sub_1D42FBE4C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_1D42FBA8C(*(void (**)(uint64_t *__return_ptr))(v1 + 16));
  *a1 = result;
  return result;
}

uint64_t sub_1D42FBE74()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D42FBE98()
{
  uint64_t v0;

  return sub_1D42FB644(*(uint64_t (**)(void))(v0 + 16));
}

void sub_1D42FBEB0(uint64_t a1, void *a2, uint64_t a3)
{
  sub_1D42FB6DC(a1, a2, a3);
}

uint64_t sub_1D42FBEC4(uint64_t a1)
{
  uint64_t v1;

  return sub_1D4396AA4(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1D42FBEDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1D447E7CC(a1, a2, *(uint64_t (**)(void))(v2 + 16));
}

uint64_t sub_1D42FBEF4()
{
  return sub_1D42FBFC4();
}

uint64_t sub_1D42FBF0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D42FC038(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D43D56A8);
}

unint64_t sub_1D42FBF28()
{
  unint64_t result;

  result = qword_1EFE4AD08;
  if (!qword_1EFE4AD08)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4528AF0, &type metadata for DirectionOfArrival.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4AD08);
  }
  return result;
}

uint64_t sub_1D42FBF64(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = sub_1D42B8B10(&qword_1EFE4CC80);
    v8 = a2;
    result = MEMORY[0x1D825E41C](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D42FBFC4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1D42FBFE8()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D42FC01C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D42FC038(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D43D5714);
}

uint64_t sub_1D42FC038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v4;

  return a4(a1, a2, a3, v4[2], v4[3], v4[4], v4[5], v4[6], v4[7]);
}

void sub_1D42FC068(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_1D42B28FC(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  sub_1D42B6E24();
}

uint64_t getEnumTagSinglePayload for DirectionOfArrival.Result.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 3) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v5 = v6 - 4;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for DirectionOfArrival.Result.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D42FC17C + 4 * byte_1D45288B9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D42FC1B0 + 4 * byte_1D45288B4[v4]))();
}

uint64_t sub_1D42FC1B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D42FC1B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D42FC1C0);
  return result;
}

uint64_t sub_1D42FC1CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D42FC1D4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D42FC1D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D42FC1E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DirectionOfArrival.Result.CodingKeys()
{
  return &type metadata for DirectionOfArrival.Result.CodingKeys;
}

uint64_t sub_1D42FC1FC(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D42FC248 + 4 * byte_1D45288C3[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D42FC27C + 4 * byte_1D45288BE[v4]))();
}

uint64_t sub_1D42FC27C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D42FC284(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D42FC28CLL);
  return result;
}

uint64_t sub_1D42FC298(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D42FC2A0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D42FC2A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D42FC2AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for DirectionOfArrival.DomainError()
{
  sub_1D42CB35C();
}

void type metadata accessor for DirectionOfArrival.Session()
{
  sub_1D42CB35C();
}

unint64_t sub_1D42FC2D4()
{
  unint64_t result;

  result = qword_1EFE4AD40;
  if (!qword_1EFE4AD40)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4528A10, &unk_1E97A2A20);
    atomic_store(result, (unint64_t *)&qword_1EFE4AD40);
  }
  return result;
}

unint64_t sub_1D42FC314()
{
  unint64_t result;

  result = qword_1EFE4AD48;
  if (!qword_1EFE4AD48)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4528AC8, &type metadata for DirectionOfArrival.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4AD48);
  }
  return result;
}

unint64_t sub_1D42FC354()
{
  unint64_t result;

  result = qword_1EFE4AD50;
  if (!qword_1EFE4AD50)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4528A38, &type metadata for DirectionOfArrival.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4AD50);
  }
  return result;
}

unint64_t sub_1D42FC394()
{
  unint64_t result;

  result = qword_1EFE4AD58;
  if (!qword_1EFE4AD58)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4528A60, &type metadata for DirectionOfArrival.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4AD58);
  }
  return result;
}

uint64_t sub_1D42FC3F0(uint64_t a1, uint64_t a2)
{
  return sub_1D42FBEDC(a1, a2);
}

uint64_t sub_1D42FC404(uint64_t a1)
{
  return sub_1D42FBEC4(a1);
}

uint64_t sub_1D42FC418()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1D42B5420(v0, v1);
}

uint64_t sub_1D42FC424@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 160) = a1;
  return sub_1D451B670();
}

uint64_t sub_1D42FC43C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_1D42FC448()
{
  return swift_release();
}

uint64_t sub_1D42FC450(uint64_t a1, uint64_t a2)
{
  return sub_1D44C88E8(a1, a2, 0, 0);
}

uint64_t sub_1D42FC460()
{
  return sub_1D451B688();
}

id sub_1D42FC46C()
{
  uint64_t v0;
  void *v1;

  return objc_msgSend(v1, (SEL)(v0 + 3144));
}

uint64_t sub_1D42FC478(uint64_t a1, uint64_t a2)
{
  return sub_1D42FBC48(a1, a2);
}

void sub_1D42FC484()
{
  uint64_t v0;

}

uint64_t sub_1D42FC490()
{
  return sub_1D451B748();
}

void sub_1D42FC49C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int *v8;
  int *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int v13;
  int v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  if (v5 >= v4)
    v6 = *(_QWORD *)(a1 + 16);
  else
    v6 = *(_QWORD *)(a2 + 16);
  v27 = MEMORY[0x1E0DEE9D8];
  sub_1D42C76F0();
  v7 = v6;
  v25 = a2;
  v26 = a1;
  if (v6)
  {
    v8 = (int *)(a1 + 32);
    v9 = (int *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = v4;
    v11 = v5;
    v12 = v5;
    while (v4)
    {
      if (!v11)
        goto LABEL_22;
      v13 = *v8;
      v14 = *v9;
      v15 = *(_QWORD *)(v27 + 16);
      if (v15 >= *(_QWORD *)(v27 + 24) >> 1)
      {
        v22 = v10;
        v23 = v12;
        sub_1D42C76F0();
        v12 = v23;
        v10 = v22;
      }
      *(_QWORD *)(v27 + 16) = v15 + 1;
      v16 = v27 + 8 * v15;
      --v11;
      *(_DWORD *)(v16 + 32) = v13;
      *(_DWORD *)(v16 + 36) = v14;
      --v4;
      ++v9;
      ++v8;
      if (!--v6)
        goto LABEL_13;
    }
    __break(1u);
LABEL_22:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = v4;
    v12 = v5;
LABEL_13:
    if (v10 <= v12)
    {
LABEL_20:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    while (v7 < v10)
    {
      if (v12 == v7)
        goto LABEL_20;
      if (v7 >= v12)
        goto LABEL_24;
      v17 = *(_DWORD *)(v26 + 32 + 4 * v7);
      v18 = *(_DWORD *)(v25 + 32 + 4 * v7);
      v19 = *(_QWORD *)(v27 + 16);
      if (v19 >= *(_QWORD *)(v27 + 24) >> 1)
      {
        v21 = v10;
        v24 = v12;
        sub_1D42C76F0();
        v12 = v24;
        v10 = v21;
      }
      ++v7;
      *(_QWORD *)(v27 + 16) = v19 + 1;
      v20 = v27 + 8 * v19;
      *(_DWORD *)(v20 + 32) = v17;
      *(_DWORD *)(v20 + 36) = v18;
      if (v10 == v7)
        goto LABEL_20;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
}

uint64_t sub_1D42FC6B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  char v4;
  _QWORD v6[5];

  v6[3] = &unk_1E979AD08;
  v6[4] = &off_1E979AC68;
  v2 = sub_1D42B6F40();
  v6[0] = v2;
  v3 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v0;
  *(_OWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 48) = *(_QWORD *)(v0 + 32);
  sub_1D42BE984();
  sub_1D42BE9A0();
  sub_1D42EA340();
  v4 = sub_1D444BFE4(v6, 0xD000000000000022, 0x80000001D4551EF0);
  if (!v1)
    LOBYTE(v0) = v4 & 1;
  sub_1D42B5400((uint64_t)v6);
  return v0 & 1;
}

uint64_t sub_1D42FC784()
{
  return sub_1D42FC6B8() & 1;
}

void sub_1D42FC79C()
{
  sub_1D451B964();
  sub_1D42B6E24();
}

void sub_1D42FC7BC()
{
  sub_1D42FC79C();
}

SoundAnalysis::MovieRemix::Request __swiftcall MovieRemix.Request.init(inputChannelCount:inputSampleRate:)(Swift::Int inputChannelCount, Swift::Int inputSampleRate)
{
  Swift::Int *v2;
  SoundAnalysis::MovieRemix::Request result;

  *v2 = inputChannelCount;
  v2[1] = inputSampleRate;
  result.inputSampleRate = inputSampleRate;
  result.inputChannelCount = inputChannelCount;
  return result;
}

void MovieRemix.Request.hash(into:)()
{
  sub_1D451B964();
  sub_1D451B964();
  sub_1D42CB15C();
}

BOOL static MovieRemix.Request.== infix(_:_:)(const void *a1, const void *a2)
{
  return memcmp(a1, a2, 0x10uLL) == 0;
}

uint64_t sub_1D42FC81C(uint64_t a1, uint64_t a2)
{
  char v6;

  if (a1 == 0xD000000000000011 && a2 == 0x80000001D4551ED0 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D61537475706E69 && a2 == 0xEF65746152656C70)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D42FC928(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6D61537475706E69;
  else
    return 0xD000000000000011;
}

uint64_t sub_1D42FC970()
{
  char *v0;

  return sub_1D42FC928(*v0);
}

uint64_t sub_1D42FC978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D42FC81C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D42FC99C()
{
  sub_1D42FCAC0();
  return sub_1D451BA3C();
}

uint64_t sub_1D42FC9C4()
{
  sub_1D42FCAC0();
  return sub_1D451BA48();
}

void MovieRemix.Request.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_1D42BE910();
  v2 = v1;
  sub_1D42B28FC(&qword_1EFE4AD60);
  sub_1D4307534();
  MEMORY[0x1E0C80A78](v3);
  sub_1D42B5528(v2, v2[3]);
  sub_1D42FCAC0();
  sub_1D451BA24();
  sub_1D4307388();
  if (!v0)
    sub_1D4307388();
  sub_1D4306FCC();
  sub_1D42BE844();
}

unint64_t sub_1D42FCAC0()
{
  unint64_t result;

  result = qword_1EFE4AD68;
  if (!qword_1EFE4AD68)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4529270, &type metadata for MovieRemix.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4AD68);
  }
  return result;
}

void MovieRemix.Request.hashValue.getter()
{
  sub_1D42BE9A8();
  sub_1D42CB3DC();
  sub_1D451B964();
  sub_1D42CB230();
  sub_1D42CB708();
}

void MovieRemix.Request.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;

  sub_1D42BE910();
  a22 = v25;
  a23 = v26;
  v28 = v27;
  v30 = v29;
  sub_1D42B28FC(&qword_1EFE4AD70);
  sub_1D42CB4F8();
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&a9 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D42F8628();
  sub_1D42FCAC0();
  sub_1D43070F4();
  if (!v23)
  {
    a13 = 0;
    v34 = sub_1D4307314();
    a12 = 1;
    v35 = sub_1D4307314();
    sub_1D4306F6C((uint64_t)v33, *(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
    *v30 = v34;
    v30[1] = v35;
  }
  sub_1D42B5400(v28);
  sub_1D42BE844();
}

uint64_t sub_1D42FCC1C()
{
  sub_1D451B958();
  sub_1D451B964();
  sub_1D451B964();
  return sub_1D451B994();
}

#error "1D42FCC78: call analysis failed (funcsize=5)"

void sub_1D42FCC84()
{
  MovieRemix.Request.encode(to:)();
}

uint64_t MovieRemix.Session.finalResultPublisher.getter()
{
  return swift_retain();
}

Swift::Void __swiftcall MovieRemix.Session.yield(buffer:)(AVAudioPCMBuffer buffer)
{
  uint64_t v1;

  (*(void (**)(Class, void *))(v1 + 16))(buffer.super.super.isa, buffer.super._impl);
  sub_1D42B6E24();
}

Swift::Void __swiftcall MovieRemix.Session.finish()()
{
  uint64_t v0;

  (*(void (**)(_QWORD))(v0 + 32))(0);
  sub_1D42B6E24();
}

void MovieRemix.Session.finish(throwing:)()
{
  uint64_t v0;

  (*(void (**)(void))(v0 + 32))();
  sub_1D42B6E24();
}

uint64_t MovieRemix.DSPParameterTuple.key.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t MovieRemix.DSPParameterTuple.key.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*MovieRemix.DSPParameterTuple.key.modify())(_QWORD)
{
  return nullsub_1;
}

float MovieRemix.DSPParameterTuple.value.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 4);
}

void MovieRemix.DSPParameterTuple.value.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 4) = a1;
}

uint64_t (*MovieRemix.DSPParameterTuple.value.modify())(_QWORD)
{
  return nullsub_1;
}

void MovieRemix.DSPParameterTuple.hash(into:)()
{
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D42CB15C();
}

uint64_t static MovieRemix.DSPParameterTuple.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a1 == *(_DWORD *)a2)
    return *(float *)(a1 + 4) == *(float *)(a2 + 4);
  else
    return sub_1D42BE554();
}

uint64_t sub_1D42FCD98(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 7955819 && a2 == 0xE300000000000000;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1D451B820();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D42FCE6C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x65756C6176;
  else
    return 7955819;
}

uint64_t sub_1D42FCE98()
{
  char *v0;

  return sub_1D42FCE6C(*v0);
}

uint64_t sub_1D42FCEA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D42FCD98(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D42FCEC4()
{
  sub_1D42FCFE4();
  return sub_1D451BA3C();
}

uint64_t sub_1D42FCEEC()
{
  sub_1D42FCFE4();
  return sub_1D451BA48();
}

void MovieRemix.DSPParameterTuple.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  sub_1D43072F8();
  v4 = v3;
  v5 = sub_1D42B28FC(&qword_1EFE4AD78);
  sub_1D42CB4F8();
  MEMORY[0x1E0C80A78](v6);
  sub_1D4307234();
  sub_1D42B5528(v4, v4[3]);
  sub_1D42FCFE4();
  sub_1D4307204();
  sub_1D43074B0();
  if (!v0)
    sub_1D451B748();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v5);
  sub_1D42CB3F8();
}

unint64_t sub_1D42FCFE4()
{
  unint64_t result;

  result = qword_1EFE4AD80;
  if (!qword_1EFE4AD80)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4529220, &type metadata for MovieRemix.DSPParameterTuple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4AD80);
  }
  return result;
}

void MovieRemix.DSPParameterTuple.hashValue.getter()
{
  sub_1D42BE9A8();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D42CB230();
  sub_1D42CB708();
}

void MovieRemix.DSPParameterTuple.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _DWORD *v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  int v9;
  int v10;
  int v11;
  _BYTE v12[16];

  sub_1D43072F8();
  v3 = v2;
  v5 = v4;
  sub_1D42B28FC(&qword_1EFE4AD88);
  sub_1D42CB4F8();
  MEMORY[0x1E0C80A78](v6);
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D42F8628();
  sub_1D42FCFE4();
  sub_1D43070F4();
  if (!v0)
  {
    v12[15] = 0;
    v9 = sub_1D451B6B8();
    v12[14] = 1;
    sub_1D451B670();
    v11 = v10;
    sub_1D4306F6C((uint64_t)v8, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    *v5 = v9;
    v5[1] = v11;
  }
  sub_1D42B5400(v3);
  sub_1D42CB3F8();
}

uint64_t sub_1D42FD16C()
{
  sub_1D451B958();
  sub_1D451B97C();
  sub_1D451B97C();
  return sub_1D451B994();
}

void sub_1D42FD1C4()
{
  MovieRemix.DSPParameterTuple.init(from:)();
}

void sub_1D42FD1D8()
{
  MovieRemix.DSPParameterTuple.encode(to:)();
}

uint64_t MovieRemix.FinalResult.algorithmVersion.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t MovieRemix.FinalResult.algorithmVersion.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*MovieRemix.FinalResult.algorithmVersion.modify())(_QWORD)
{
  return nullsub_1;
}

float MovieRemix.FinalResult.dialogueGain.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 4);
}

void MovieRemix.FinalResult.dialogueGain.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 4) = a1;
}

uint64_t (*MovieRemix.FinalResult.dialogueGain.modify())(_QWORD)
{
  return nullsub_1;
}

float MovieRemix.FinalResult.ambienceGain.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 8);
}

void MovieRemix.FinalResult.ambienceGain.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 8) = a1;
}

uint64_t (*MovieRemix.FinalResult.ambienceGain.modify())(_QWORD)
{
  return nullsub_1;
}

float MovieRemix.FinalResult.dialogueLoudness.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 12);
}

void MovieRemix.FinalResult.dialogueLoudness.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 12) = a1;
}

uint64_t (*MovieRemix.FinalResult.dialogueLoudness.modify())(_QWORD)
{
  return nullsub_1;
}

float MovieRemix.FinalResult.ambienceLoudness.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 16);
}

void MovieRemix.FinalResult.ambienceLoudness.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 16) = a1;
}

uint64_t (*MovieRemix.FinalResult.ambienceLoudness.modify())(_QWORD)
{
  return nullsub_1;
}

float MovieRemix.FinalResult.recordingLoudness.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 20);
}

void MovieRemix.FinalResult.recordingLoudness.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 20) = a1;
}

uint64_t (*MovieRemix.FinalResult.recordingLoudness.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MovieRemix.FinalResult.dspParameters.getter()
{
  return swift_bridgeObjectRetain();
}

void MovieRemix.FinalResult.dspParameters.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  sub_1D42B6E24();
}

uint64_t (*MovieRemix.FinalResult.dspParameters.modify())(_QWORD)
{
  return nullsub_1;
}

void MovieRemix.FinalResult.hash(into:)()
{
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D42D6A9C();
}

uint64_t static MovieRemix.FinalResult.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL v2;

  if (*(_DWORD *)a1 == *(_DWORD *)a2
    && ((~vaddvq_s32((int32x4_t)vandq_s8((int8x16_t)vcltzq_s32(vshlq_n_s32(vceqq_f32(*(float32x4_t *)(a1 + 4), *(float32x4_t *)(a2 + 4)), 0x1FuLL)), (int8x16_t)xmmword_1D4528B80)) & 0xF) == 0? (v2 = *(float *)(a1 + 20) == *(float *)(a2 + 20)): (v2 = 0), v2))
  {
    return sub_1D42FE4E4(*(_QWORD *)(a1 + 24), *(_QWORD *)(a2 + 24));
  }
  else
  {
    return sub_1D42BE554();
  }
}

uint64_t sub_1D42FD3E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  uint64_t v5;
  uint64_t result;
  int v7;
  int v8;
  int v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return sub_1D42BE554();
  if (!v2 || a1 == a2)
    return _s13SoundAnalysis17_SNClassificationC20supportsSecureCodingSbvgZ_0();
  if (*(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32))
    return sub_1D42BE554();
  v3 = (unsigned __int8 *)(a1 + 33);
  v4 = (unsigned __int8 *)(a2 + 33);
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v8 = *v3++;
    v7 = v8;
    v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

void sub_1D42FD444(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(char *, uint64_t);
  BOOL v20;
  uint64_t v21;
  uint64_t v22;

  v4 = sub_1D4519BC4();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v21 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16) && v11 && a1 != a2)
  {
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v21 = *(_QWORD *)(v8 + 72);
    v22 = v8;
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
    v14 = v11 - 1;
    do
    {
      v15 = a1;
      v13(v10, a1 + v12, v4);
      v16 = a2;
      v13(v7, a2 + v12, v4);
      sub_1D4306C10((uint64_t)&unk_1EFE4AE68);
      v17 = sub_1D451A698();
      v18 = *(void (**)(char *, uint64_t))(v22 + 8);
      v18(v7, v4);
      v18(v10, v4);
      v20 = v14-- != 0;
      if ((v17 & 1) == 0)
        break;
      v12 += v21;
      a2 = v16;
      a1 = v15;
    }
    while (v20);
  }
  sub_1D42CB520();
}

uint64_t sub_1D42FD5B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  char v10;
  void **v11;
  void **v12;
  uint64_t v13;
  _BOOL8 v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  char v20;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v4)
    return 1;
  sub_1D4307354();
  if (v5 == v6)
    return 1;
  sub_1D42E9D88(0, (unint64_t *)&qword_1EFE404C0);
  v7 = *(void **)(v2 + 32);
  v8 = *(id *)(v3 + 32);
  v9 = v7;
  v10 = sub_1D451B10C();

  if ((v10 & 1) == 0)
    return 0;
  v11 = (void **)(v3 + 40);
  v12 = (void **)(v2 + 40);
  v13 = v4 - 1;
  do
  {
    v14 = v13 == 0;
    if (!v13)
      break;
    v16 = *v11++;
    v15 = v16;
    v17 = *v12++;
    v18 = v15;
    v19 = v17;
    v20 = sub_1D451B10C();

    --v13;
  }
  while ((v20 & 1) != 0);
  return v14;
}

uint64_t sub_1D42FD6B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v8 = 1;
    }
    else
    {
      v3 = (_BYTE *)(a1 + 32);
      v4 = (_BYTE *)(a2 + 32);
      v5 = v2 - 1;
      do
      {
        v6 = v5;
        v7 = *v3 ^ *v4;
        if ((v7 & 1) != 0)
          break;
        --v5;
        ++v3;
        ++v4;
      }
      while (v6);
      v8 = v7 ^ 1;
    }
  }
  else
  {
    v8 = 0;
  }
  return v8 & 1;
}

void sub_1D42FD720()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int32x4_t v13;
  int32x4_t v14;
  char v15;
  BOOL v17;
  uint64_t v18;

  sub_1D43071BC();
  v2 = type metadata accessor for KShotSegment(0);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v3);
  v8 = (uint64_t *)((char *)&v18 - v7);
  v9 = *(_QWORD *)(v1 + 16);
  if (v9 == *(_QWORD *)(v0 + 16) && v9 && v1 != v0)
  {
    v10 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v11 = *(_QWORD *)(v6 + 72);
    v12 = v9 - 1;
    while (1)
    {
      sub_1D42C13D8(v1 + v10, (uint64_t)v8);
      sub_1D42C13D8(v0 + v10, (uint64_t)v5);
      v13.i64[0] = v5[1];
      v14.i64[1] = v8[4];
      v13.i64[1] = v5[4];
      v14.i64[0] = v8[1];
      if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_s32(v14, v13)), 0xFuLL))) & 1) == 0
        || *v8 != *v5
        || v8[2] != v5[2]
        || v8[3] != v5[3]
        || v8[5] != v5[5])
      {
        break;
      }
      v15 = MEMORY[0x1D825B4AC]((char *)v8 + *(int *)(v2 + 20), (char *)v5 + *(int *)(v2 + 20));
      sub_1D42C87B8((uint64_t)v5);
      sub_1D42C87B8((uint64_t)v8);
      v17 = v12-- != 0;
      if ((v15 & 1) != 0)
      {
        v10 += v11;
        if (v17)
          continue;
      }
      goto LABEL_18;
    }
    sub_1D42C87B8((uint64_t)v5);
    sub_1D42C87B8((uint64_t)v8);
  }
LABEL_18:
  sub_1D42CB520();
}

uint64_t sub_1D42FD8BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    if (a1 != a2)
      __asm { BR              X9 }
  }
  return 1;
}

void sub_1D42FE00C(_QWORD *a1, _QWORD *a2)
{
  unint64_t v2;
  BOOL v5;
  char v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  BOOL v10;

  v2 = a1[2];
  if (v2 == a2[2]
    && v2
    && a1 != a2
    && (a1[4] == a2[4] ? (v5 = a1[5] == a2[5]) : (v5 = 0),
        (v5 || (sub_1D42F1F04(), sub_1D43073F0(), (v6 & 1) != 0)) && v2 != 1))
  {
    v7 = a2 + 7;
    v8 = a1 + 7;
    v9 = 1;
    while (v9 < v2)
    {
      v10 = *(v8 - 1) == *(v7 - 1) && *v8 == *v7;
      if (v10 || (sub_1D42F1F04() & 1) != 0)
      {
        ++v9;
        v7 += 2;
        v8 += 2;
        if (v2 != v9)
          continue;
      }
      goto LABEL_18;
    }
    __break(1u);
  }
  else
  {
LABEL_18:
    sub_1D42CB15C();
  }
}

uint64_t sub_1D42FE0C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  double v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char v13;
  uint64_t v16;
  unint64_t v17;
  double v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char v23;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v4)
    return 1;
  sub_1D43071BC();
  if (v5 == v6)
    return 1;
  result = *(_QWORD *)(v3 + 32);
  v8 = *(double *)(v3 + 48);
  v9 = *(_QWORD *)(v3 + 56);
  v10 = *(double *)(v2 + 48);
  v11 = *(_QWORD *)(v2 + 56);
  if (result == *(_QWORD *)(v2 + 32) && *(_QWORD *)(v3 + 40) == *(_QWORD *)(v2 + 40))
  {
    if (v8 == v10 && v9 == v11)
      goto LABEL_19;
    return 0;
  }
  sub_1D42F1F04();
  result = sub_1D43073F0();
  if ((v13 & 1) == 0)
    return result;
  if (v8 != v10 || v9 != v11)
    return result;
LABEL_19:
  if (v4 == 1)
    return 1;
  v16 = 0;
  v17 = 1;
  while (v17 < v4)
  {
    v18 = *(double *)(v3 + v16 + 80);
    v19 = *(_QWORD *)(v3 + v16 + 88);
    v20 = *(double *)(v2 + v16 + 80);
    v21 = *(_QWORD *)(v2 + v16 + 88);
    if (*(_QWORD *)(v3 + v16 + 64) == *(_QWORD *)(v2 + v16 + 64)
      && *(_QWORD *)(v3 + v16 + 72) == *(_QWORD *)(v2 + v16 + 72))
    {
      if (v18 != v20 || v19 != v21)
        return 0;
    }
    else
    {
      sub_1D42F1F04();
      result = sub_1D43073F0();
      if ((v23 & 1) == 0)
        return result;
      if (v18 != v20 || v19 != v21)
        return result;
    }
    ++v17;
    v16 += 32;
    result = 1;
    if (v4 == v17)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D42FE1FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double *v3;
  double *v4;
  uint64_t v5;
  uint64_t result;
  double v7;
  double v8;
  double v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return sub_1D42BE554();
  if (!v2 || a1 == a2)
    return _s13SoundAnalysis17_SNClassificationC20supportsSecureCodingSbvgZ_0();
  if (*(double *)(a1 + 32) != *(double *)(a2 + 32))
    return sub_1D42BE554();
  v3 = (double *)(a1 + 40);
  v4 = (double *)(a2 + 40);
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v7 = *v3++;
    v8 = v7;
    v9 = *v4++;
    --v5;
  }
  while (v8 == v9);
  return result;
}

int32x2_t sub_1D42FE260(int64x2_t *a1, int64x2_t *a2)
{
  uint64_t v2;
  int32x2_t result;
  int64x2_t *v5;
  int64x2_t *v6;
  uint64_t v7;
  int64x2_t v8;
  int64x2_t v9;
  int64x2_t v10;

  v2 = a1[1].i64[0];
  if (v2 != a2[1].i64[0])
  {
LABEL_8:
    sub_1D42BE554();
    return result;
  }
  if (v2 && a1 != a2)
  {
    if (a1[2].i64[0] != a2[2].i64[0] || a1[2].i64[1] != a2[2].i64[1])
      goto LABEL_8;
    v5 = a1 + 3;
    v6 = a2 + 3;
    v7 = v2 - 1;
    do
    {
      if (!v7)
        break;
      v8 = *v5++;
      v9 = v8;
      v10 = *v6++;
      result = vmovn_s64(vceqq_s64(v9, v10));
      --v7;
    }
    while ((result.i32[0] & result.i32[1] & 1) != 0);
  }
  return result;
}

void sub_1D42FE2DC(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16)
    && v2
    && a1 != a2
    && (v3 = a1 + 32, v4 = a2 + 32, (sub_1D42FE3B8(*(_QWORD **)(a1 + 32), *(_QWORD **)(a2 + 32)) & 1) != 0)
    && v2 != 1)
  {
    v5 = 1;
    while (v5 < v2)
    {
      v6 = *(_QWORD **)(v3 + 8 * v5);
      v7 = *(_QWORD **)(v4 + 8 * v5);
      v8 = v6[2];
      if (v8 != v7[2])
        goto LABEL_21;
      if (v8)
        v9 = v6 == v7;
      else
        v9 = 1;
      if (!v9)
      {
        if (v6[4] != v7[4])
          goto LABEL_21;
        v10 = v6 + 5;
        v11 = v7 + 5;
        v12 = v8 - 1;
        while (v12)
        {
          v14 = *v10++;
          v13 = v14;
          v15 = *v11++;
          --v12;
          if (v13 != v15)
            goto LABEL_21;
        }
      }
      if (++v5 == v2)
        goto LABEL_21;
    }
    __break(1u);
  }
  else
  {
LABEL_21:
    sub_1D42CB15C();
  }
}

uint64_t sub_1D42FE3B8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1[2];
  if (v2 != a2[2])
    return sub_1D42BE554();
  if (!v2 || a1 == a2)
    return _s13SoundAnalysis17_SNClassificationC20supportsSecureCodingSbvgZ_0();
  if (a1[4] != a2[4])
    return sub_1D42BE554();
  v3 = a1 + 5;
  v4 = a2 + 5;
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v8 = *v3++;
    v7 = v8;
    v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_1D42FE41C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  float *v3;
  float *v4;
  uint64_t v5;
  uint64_t result;
  float v7;
  float v8;
  float v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return sub_1D42BE554();
  if (!v2 || a1 == a2)
    return _s13SoundAnalysis17_SNClassificationC20supportsSecureCodingSbvgZ_0();
  if (*(float *)(a1 + 32) != *(float *)(a2 + 32))
    return sub_1D42BE554();
  v3 = (float *)(a1 + 36);
  v4 = (float *)(a2 + 36);
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v7 = *v3++;
    v8 = v7;
    v9 = *v4++;
    --v5;
  }
  while (v8 == v9);
  return result;
}

uint64_t sub_1D42FE480(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  int *v4;
  uint64_t v5;
  uint64_t result;
  int v7;
  int v8;
  int v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return sub_1D42BE554();
  if (!v2 || a1 == a2)
    return _s13SoundAnalysis17_SNClassificationC20supportsSecureCodingSbvgZ_0();
  if (*(_DWORD *)(a1 + 32) != *(_DWORD *)(a2 + 32))
    return sub_1D42BE554();
  v3 = (int *)(a1 + 36);
  v4 = (int *)(a2 + 36);
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v8 = *v3++;
    v7 = v8;
    v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

BOOL sub_1D42FE4E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  float *v4;
  float *v5;
  _BOOL8 result;
  BOOL v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = v2 - 1;
  v4 = (float *)(a2 + 36);
  v5 = (float *)(a1 + 36);
  do
  {
    result = *v5 == *v4 && *((_DWORD *)v5 - 1) == *((_DWORD *)v4 - 1);
    v9 = v3-- != 0;
    if (!result)
      break;
    v4 += 2;
    v5 += 2;
  }
  while (v9);
  return result;
}

uint64_t sub_1D42FE558(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t result;
  BOOL v11;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return sub_1D42BE554();
  if (!v2 || a1 == a2)
    return _s13SoundAnalysis17_SNClassificationC20supportsSecureCodingSbvgZ_0();
  v3 = v2 - 1;
  v4 = (_QWORD *)(a2 + 48);
  v5 = (_QWORD *)(a1 + 48);
  do
  {
    result = *(v5 - 2) == *(v4 - 2)
          && *((_DWORD *)v5 - 2) == *((_DWORD *)v4 - 2)
          && *((_DWORD *)v5 - 1) == *((_DWORD *)v4 - 1)
          && *v5 == *v4;
    v11 = v3-- != 0;
    if ((_DWORD)result != 1)
      break;
    v4 += 3;
    v5 += 3;
  }
  while (v11);
  return result;
}

uint64_t sub_1D42FE5D4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  char v12;
  char v13;
  uint64_t v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;

  sub_1D4307354();
  v3 = (void *)(v2 >> 62);
  if (v2 >> 62)
  {
LABEL_39:
    swift_bridgeObjectRetain();
    v4 = sub_1D451B5A4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)v0 >> 62)
  {
    sub_1D42CB7B8();
    v5 = sub_1D451B5A4();
    sub_1D42BE8B4();
  }
  else
  {
    v5 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v4 != v5)
    goto LABEL_24;
  if (v4)
  {
    v6 = v1 & 0xFFFFFFFFFFFFFF8;
    if (v1 < 0)
      v6 = v1;
    if (!v3)
      v6 = (v1 & 0xFFFFFFFFFFFFFF8) + 32;
    v7 = v0 & 0xFFFFFFFFFFFFFF8;
    v8 = (v0 & 0xFFFFFFFFFFFFFF8) + 32;
    if (v0 < 0)
      v7 = v0;
    if ((unint64_t)v0 >> 62)
      v8 = v7;
    if (v6 != v8)
    {
      if (v4 < 0)
        goto LABEL_42;
      v20 = v1 & 0xC000000000000001;
      if ((v1 & 0xC000000000000001) != 0)
LABEL_43:
        v9 = (id)MEMORY[0x1D825CD78](0, v1);
      else
        v9 = *(id *)(v1 + 32);
      v3 = v9;
      sub_1D42D2E5C(0, (v0 & 0xC000000000000001) == 0, v0);
      if ((v0 & 0xC000000000000001) != 0)
        v10 = (id)MEMORY[0x1D825CD78](0, v0);
      else
        v10 = *(id *)(v0 + 32);
      v11 = v10;
      sub_1D42E9D88(0, (unint64_t *)&qword_1EFE404B0);
      v12 = sub_1D451B10C();

      if ((v12 & 1) != 0)
      {
        if (v4 != 1)
        {
          v15 = 5;
          while (1)
          {
            if (v15 - 4 >= v4)
            {
              __break(1u);
              goto LABEL_39;
            }
            if (v20)
              v16 = (id)MEMORY[0x1D825CD78](v15 - 4, v1);
            else
              v16 = *(id *)(v1 + 8 * v15);
            v3 = v16;
            if ((v0 & 0xC000000000000001) != 0)
            {
              v17 = (id)MEMORY[0x1D825CD78](v15 - 4, v0);
            }
            else
            {
              if ((unint64_t)(v15 - 4) >= *(_QWORD *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
LABEL_42:
                __break(1u);
                goto LABEL_43;
              }
              v17 = *(id *)(v0 + 8 * v15);
            }
            v18 = v17;
            v13 = sub_1D451B10C();

            if ((v13 & 1) != 0)
            {
              v19 = 2 - v4 + v15++;
              if (v19 != 5)
                continue;
            }
            return v13 & 1;
          }
        }
        goto LABEL_23;
      }
LABEL_24:
      v13 = 0;
      return v13 & 1;
    }
  }
LABEL_23:
  v13 = 1;
  return v13 & 1;
}

uint64_t sub_1D42FE828(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  BOOL v6;
  char v8;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001D4551DE0 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v5 = a1 == 0x6575676F6C616964 && a2 == 0xEC0000006E696147;
    if (v5 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v6 = a1 == 0x65636E6569626D61 && a2 == 0xEC0000006E696147;
      if (v6 || (sub_1D451B820() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000010 && a2 == 0x80000001D4551E20 || (sub_1D451B820() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000010 && a2 == 0x80000001D4551E40 || (sub_1D451B820() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else if (a1 == 0xD000000000000011 && a2 == 0x80000001D4551E60 || (sub_1D451B820() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else if (a1 == 0x6D61726150707364 && a2 == 0xED00007372657465)
      {
        swift_bridgeObjectRelease();
        return 6;
      }
      else
      {
        v8 = sub_1D451B820();
        swift_bridgeObjectRelease();
        if ((v8 & 1) != 0)
          return 6;
        else
          return 7;
      }
    }
  }
}

uint64_t sub_1D42FEB20()
{
  return 7;
}

uint64_t sub_1D42FEB28(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1D42FEB60 + 4 * byte_1D4528BA0[a1]))(0xD000000000000010, 0x80000001D4551DE0);
}

uint64_t sub_1D42FEB60()
{
  return 0x6575676F6C616964;
}

uint64_t sub_1D42FEBC4()
{
  return 0x6D61726150707364;
}

uint64_t sub_1D42FEBE8()
{
  unsigned __int8 *v0;

  return sub_1D42FEB28(*v0);
}

uint64_t sub_1D42FEBF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D42FE828(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D42FEC14@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D42FEB20();
  *a1 = result;
  return result;
}

uint64_t sub_1D42FEC38()
{
  sub_1D4305A64();
  return sub_1D451BA3C();
}

uint64_t sub_1D42FEC60()
{
  sub_1D4305A64();
  return sub_1D451BA48();
}

void MovieRemix.FinalResult.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D430743C();
  v3 = v2;
  v4 = sub_1D42B28FC(&qword_1EFE4AD90);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1D4307234();
  sub_1D42B5528(v3, v3[3]);
  sub_1D4305A64();
  sub_1D4307204();
  sub_1D43074B0();
  if (!v0)
  {
    sub_1D4306F5C();
    sub_1D4306F5C();
    sub_1D4306F5C();
    sub_1D4306F5C();
    sub_1D4306F5C();
    sub_1D42B28FC(&qword_1EFE4ADA0);
    sub_1D4305ADC((uint64_t)&unk_1EFE4ADA8);
    sub_1D451B760();
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v4);
  sub_1D42CB2AC();
}

uint64_t MovieRemix.FinalResult.hashValue.getter()
{
  sub_1D42BE9A8();
  MovieRemix.FinalResult.hash(into:)();
  return sub_1D42CB230();
}

void MovieRemix.FinalResult.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  _BYTE v23[16];
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;

  sub_1D430743C();
  v31 = v2;
  v32 = v3;
  v5 = v4;
  v7 = v6;
  sub_1D42B28FC(&qword_1EFE4ADB8);
  sub_1D42CB4F8();
  MEMORY[0x1E0C80A78](v8);
  v10 = &v23[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D42F8628();
  sub_1D4305A64();
  sub_1D451BA0C();
  if (!v0)
  {
    v30 = 0;
    v11 = sub_1D451B6B8();
    v29 = 1;
    sub_1D4306F3C();
    v13 = v12;
    v28 = 2;
    sub_1D4306F3C();
    v15 = v14;
    v27 = 3;
    sub_1D4306F3C();
    v17 = v16;
    v26 = 4;
    sub_1D4306F3C();
    v19 = v18;
    v25 = 5;
    sub_1D4306F3C();
    v21 = v20;
    sub_1D42B28FC(&qword_1EFE4ADA0);
    v23[15] = 6;
    sub_1D4305ADC((uint64_t)&unk_1EFE4ADC0);
    sub_1D451B688();
    sub_1D4306F6C((uint64_t)v10, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    v22 = v24;
    *(_DWORD *)v7 = v11;
    *(_DWORD *)(v7 + 4) = v13;
    *(_DWORD *)(v7 + 8) = v15;
    *(_DWORD *)(v7 + 12) = v17;
    *(_DWORD *)(v7 + 16) = v19;
    *(_DWORD *)(v7 + 20) = v21;
    *(_QWORD *)(v7 + 24) = v22;
  }
  sub_1D42B5400(v5);
  sub_1D42CB2AC();
}

uint64_t sub_1D42FF094()
{
  sub_1D451B958();
  MovieRemix.FinalResult.hash(into:)();
  return sub_1D451B994();
}

void sub_1D42FF0F0()
{
  MovieRemix.FinalResult.init(from:)();
}

void sub_1D42FF104()
{
  MovieRemix.FinalResult.encode(to:)();
}

void *sub_1D42FF11C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t ObjCClassFromMetadata;
  id v15;
  void *v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  _QWORD v38[16];
  uint64_t v39;
  uint64_t v40;

  sub_1D42BE910();
  v39 = v3;
  v40 = v4;
  v6 = v5;
  v38[5] = *MEMORY[0x1E0C80C00];
  sub_1D42CB348();
  sub_1D4307534();
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v34 - v11;
  v13 = v6;
  if (!v6)
  {
    type metadata accessor for SoundAnalysisBundleMarker();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v15 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1D43059F8(v15);
    if (!v16)
    {
      sub_1D4306894();
      sub_1D42B6D0C();
      sub_1D4306EF8(v32, 6);
      return v13;
    }
    v13 = v16;
  }
  v35 = v1;
  sub_1D42B28FC((uint64_t *)&unk_1EFE403F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D45261D0;
  sub_1D42CB6CC();
  *(_QWORD *)(inited + 32) = sub_1D451A5E4();
  sub_1D448D2D0(inited);
  v19 = v18;
  swift_setDeallocating();
  sub_1D43476B8();
  v20 = objc_allocWithZone((Class)type metadata accessor for SNDSPConfiguration());
  v21 = sub_1D43A1230(v19);
  type metadata accessor for SNDSPGraphLoader();
  sub_1D439F93C((uint64_t)v21);
  if (v22)
  {
    v13 = (void *)v22;
    sub_1D44F3DE8(v22);
    v23 = (void *)sub_1D451A6C8();
    v24 = sub_1D44F590C(v13, v23);

    sub_1D430740C();
    v25 = sub_1D4519B10();
    sub_1D42EA3E0(v25, (unint64_t *)&qword_1EFE403E0);
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v10, v12, v0);
    v26 = sub_1D42FF474((uint64_t)v10);
    if (v26)
    {
      v27 = v26;
      v37 = v26;
      v28 = v24;
      v29 = v35;
      sub_1D42FF4F0((uint64_t)&v37, (uint64_t)v38, (uint64_t)v28, &v36);
      if (v29)
      {

        sub_1D4306FCC();
      }
      else
      {

        sub_1D44F44A0((uint64_t)v13);
        sub_1D44F4884((uint64_t)v13);

        sub_1D4306FCC();
      }
    }
    else
    {
      sub_1D4306894();
      sub_1D42B6D0C();
      sub_1D4306EF8(v31, 8);

      sub_1D4306FCC();
    }
  }
  else
  {
    sub_1D4306894();
    sub_1D42B6D0C();
    sub_1D4306EF8(v30, 7);

  }
  return v13;
}

id sub_1D42FF474(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;

  v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v3 = (void *)sub_1D4519B28();
  v4 = objc_msgSend(v2, sel_initWithContentsOfURL_, v3);

  v5 = sub_1D4519BC4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return v4;
}

uint64_t sub_1D42FF4F0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t result;
  id v6;

  if (!a1)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (a2 - a1 >= 0x100000000)
  {
LABEL_7:
    result = sub_1D451B550();
    __break(1u);
    return result;
  }
  result = sub_1D44EFA9C(a3, a1, a2 - a1, 3697, 0, 0);
  if (!(_DWORD)result)
  {
    type metadata accessor for SNError();
    v6 = sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 1, 0, 0xD000000000000025, 0x80000001D4552020);
    result = swift_willThrow();
    *a4 = v6;
  }
  return result;
}

void sub_1D42FF608()
{
  void *v0;
  void *v1;
  id v2;
  _BYTE *v3;

  v1 = (void *)sub_1D4306EBC();
  v2 = sub_1D4307344(v1);

  if (!sub_1D43072C8((uint64_t)v2))
  {
    sub_1D42CF6E8();
    sub_1D42B6D0C();
    sub_1D4306EF8(v3, 5);
  }

  sub_1D43073C8();
}

void sub_1D42FF684()
{
  void *v0;
  void *v1;
  id v2;
  _BYTE *v3;

  v1 = (void *)sub_1D4306EBC();
  v2 = sub_1D4307344(v1);

  if (!sub_1D43072C8((uint64_t)v2))
  {
    sub_1D42CF6E8();
    sub_1D42B6D0C();
    *v3 = 5;
    swift_willThrow();
  }

  sub_1D43073C8();
}

void sub_1D42FF708()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  _BYTE *v10;
  _BYTE *v11;

  sub_1D430743C();
  v3 = v2;
  v4 = (void *)sub_1D4306EBC();
  v5 = sub_1D4306FBC(v4);
  sub_1D42B70A0();
  v6 = sub_1D4306FAC(v3, 23777);
  if (v0)
  {

  }
  else
  {
    v7 = (void *)v6;

    if (v7)
    {
      sub_1D42EA3E0(v8, (unint64_t *)&qword_1EFE404B0);
      v9 = v7;
      sub_1D4307360();

      sub_1D4306894();
      sub_1D42B6D0C();
      sub_1D4306EF8(v11, 9);

    }
    else
    {
      sub_1D4306894();
      sub_1D42B6D0C();
      sub_1D4306EF8(v10, 9);
    }
  }
  sub_1D4307180();
  sub_1D4307038();
}

void sub_1D42FF8D0(void *a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  _BYTE *v9;
  _BYTE *v10;

  v3 = (void *)sub_1D4306EBC();
  v4 = sub_1D4306FBC(v3);
  sub_1D42B70A0();
  v5 = sub_1D4306FAC(a1, 23778);
  if (v1)
  {

  }
  else
  {
    v6 = (void *)v5;

    if (v6)
    {
      sub_1D42EA3E0(v7, (unint64_t *)&qword_1EFE404B0);
      v8 = v6;
      sub_1D4307334();

      sub_1D4306894();
      sub_1D42B6D0C();
      sub_1D4306EF8(v10, 10);

    }
    else
    {
      sub_1D4306894();
      sub_1D42B6D0C();
      sub_1D4306EF8(v9, 10);
    }
  }
  sub_1D4307180();
  sub_1D430709C();
}

void sub_1D42FFAE0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  os_log_type_t v11;
  _WORD *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;

  sub_1D430743C();
  v3 = v2;
  v4 = (void *)sub_1D4306EBC();
  v5 = sub_1D4306FBC(v4);
  sub_1D42B70A0();
  v6 = sub_1D4306FAC(v3, 23779);
  if (!v0)
  {
    v7 = (void *)v6;

    if (v7)
    {
      sub_1D42EA3E0(v8, (unint64_t *)&qword_1EFE404B0);
      v9 = v7;
      sub_1D4307360();

    }
    if (qword_1EFE40338 != -1)
      swift_once();
    v10 = sub_1D430710C();
    sub_1D4307218(v10, (uint64_t)qword_1EFEA7700);
    v11 = sub_1D43073E8();
    if (sub_1D4306FDC(v11))
    {
      v12 = (_WORD *)sub_1D42CC940();
      sub_1D4307498(v12);
      sub_1D4306FFC(&dword_1D42A7000, v13, v14, "Movie Remix: Getting Statistics from AUAmbienceLeveler failed.");
      sub_1D42CC934();
    }

    sub_1D4306894();
    sub_1D42B6D0C();
    sub_1D4306EF8(v15, 9);
    v3 = v7;
  }

  sub_1D4307180();
  sub_1D4307038();
}

void sub_1D42FFCF0(void *a1)
{
  uint64_t v1;
  void *v2;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  os_log_type_t v11;
  _WORD *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;

  v4 = (void *)sub_1D4306EBC();
  v5 = sub_1D4306FBC(v4);
  sub_1D42B70A0();
  v6 = sub_1D4306FAC(a1, 23780);
  if (!v1)
  {
    v7 = (void *)v6;

    if (v7)
    {
      sub_1D42EA3E0(v8, (unint64_t *)&qword_1EFE404B0);
      v9 = v7;
      sub_1D4307334();

    }
    if (qword_1EFE40338 != -1)
      swift_once();
    v10 = sub_1D430710C();
    sub_1D4307218(v10, (uint64_t)qword_1EFEA7700);
    v11 = sub_1D43073E8();
    if (sub_1D4306FDC(v11))
    {
      v12 = (_WORD *)sub_1D42CC940();
      sub_1D4307498(v12);
      sub_1D4306FFC(&dword_1D42A7000, v13, v14, "Movie Remix: Getting Statistics 4ccs from AUAmbienceLeveler failed.");
      sub_1D42CC934();
    }

    sub_1D4306894();
    sub_1D42B6D0C();
    sub_1D4306EF8(v15, 10);
    a1 = v7;
  }

  sub_1D4307180();
  sub_1D430709C();
}

unint64_t sub_1D42FFF48()
{
  unint64_t result;
  __int16 v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  int v5;
  int v6;
  int v7;

  result = sub_1D4300024();
  v2 = 0;
  if ((v1 & 0x100) != 0)
  {
LABEL_14:
    sub_1D42CB7B8();
    sub_1D42B7204();
    return v2;
  }
  else
  {
    while (!__OFSUB__(3, result))
    {
      if ((0xF000000000000003 - result) >> 61 != 7)
        goto LABEL_16;
      v3 = 8 * (3 - result);
      v4 = v3 - 33;
      v5 = v1 << (v3 & 0x18);
      if (v3 >= 0x20)
        v5 = 0;
      v6 = v1 >> ((-8 * (3 - result)) & 0x18);
      if (v3 <= 0xFFFFFFFFFFFFFFE0)
        v6 = 0;
      if (((3 - result) & 0x1000000000000000) != 0)
        v7 = v6;
      else
        v7 = v5;
      if (v4 < 0xFFFFFFFFFFFFFFBFLL)
        v7 = 0;
      v2 = v7 | v2;
      result = sub_1D4300024();
      if ((v1 & 0x100) != 0)
        goto LABEL_14;
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  return result;
}

unint64_t sub_1D4300024()
{
  uint64_t *v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v2 = v0[1];
  v1 = v0[2];
  v3 = *v0;
  if ((v2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(v2) & 0xF;
  else
    v4 = *v0 & 0xFFFFFFFFFFFFLL;
  if (v1 >> 14 == 4 * v4)
    return 0;
  v6 = (v3 >> 59) & 1;
  if ((v2 & 0x1000000000000000) == 0)
    LOBYTE(v6) = 1;
  if ((v0[2] & 0xC) == 4 << v6)
    v1 = sub_1D43D7838(v1, *v0, v0[1]);
  if (v1 >> 16 >= v4)
  {
    __break(1u);
    goto LABEL_22;
  }
  if ((v2 & 0x1000000000000000) != 0)
  {
LABEL_22:
    sub_1D451A7D0();
    goto LABEL_14;
  }
  if ((v2 & 0x2000000000000000) == 0 && (v3 & 0x1000000000000000) == 0)
    goto LABEL_29;
  while (1)
  {
LABEL_14:
    v7 = *v0;
    v8 = v0[1];
    result = v0[2];
    v9 = ((unint64_t)*v0 >> 59) & 1;
    if ((v8 & 0x1000000000000000) == 0)
      LOBYTE(v9) = 1;
    if ((v0[2] & 0xC) == 4 << v9)
    {
      result = sub_1D43D7838(result, *v0, v0[1]);
      if ((v8 & 0x1000000000000000) == 0)
      {
LABEL_18:
        v10 = (result & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_19;
      }
    }
    else if ((v8 & 0x1000000000000000) == 0)
    {
      goto LABEL_18;
    }
    v11 = HIBYTE(v8) & 0xF;
    if ((v8 & 0x2000000000000000) == 0)
      v11 = v7 & 0xFFFFFFFFFFFFLL;
    if (v11 <= result >> 16)
      break;
    v10 = sub_1D451A7B8();
LABEL_19:
    v0[2] = v10;
    result = v0[3];
    if (!__OFADD__(result, 1))
    {
      v0[3] = result + 1;
      return result;
    }
    __break(1u);
LABEL_29:
    sub_1D451B46C();
  }
  __break(1u);
  return result;
}

float sub_1D43001B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v6;
  unint64_t v7;
  char v8;
  uint64_t v10;
  void *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_1D42FFF48();
  v7 = sub_1D4300290(v6, a3);
  if ((v8 & 1) == 0)
  {
    if ((v7 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v7 < *(_QWORD *)(a4 + 16))
    {
      return *(float *)(a4 + 4 * v7 + 32);
    }
    __break(1u);
    goto LABEL_11;
  }
  if (qword_1EFE40338 != -1)
LABEL_11:
    swift_once();
  v10 = sub_1D451A014();
  sub_1D42CC880(v10, (uint64_t)qword_1EFEA7700);
  v11 = (void *)sub_1D4519FFC();
  v12 = sub_1D451AF5C();
  if (sub_1D4306FDC(v12))
  {
    *(_WORD *)sub_1D43074C8() = 0;
    sub_1D43071C8(&dword_1D42A7000, v13, v14, "ERROR couldn't find value for key. Returning -1");
    sub_1D43073D8();
  }

  return -1.0;
}

uint64_t sub_1D4300290(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  int v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_DWORD *)(a2 + 32) == a1)
    return 0;
  result = 0;
  v5 = v2 - 1;
  while (v5 != result)
  {
    v6 = *(_DWORD *)(a2 + 36 + 4 * result++);
    if (v6 == a1)
      return result;
  }
  return 0;
}

uint64_t sub_1D43002F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  uint64_t result;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char v14;

  v5 = *(_QWORD *)(a3 + 16);
  if (!v5)
    return 0;
  sub_1D43071BC();
  v8 = *(_QWORD *)(v7 + 32) == v4 && *(_QWORD *)(v7 + 40) == v3;
  if (v8 || (sub_1D42F1F04() & 1) != 0)
    return 0;
  v10 = 0;
  v11 = (_QWORD *)(a3 + 56);
  v12 = 1;
  while (1)
  {
    if (v5 == v12)
      return 0;
    ++v10;
    if (*(v11 - 1) == v4 && *v11 == v3)
      break;
    v14 = sub_1D42F1F04();
    result = v12++;
    v11 += 2;
    if ((v14 & 1) != 0)
      return result;
  }
  return v10;
}

void sub_1D43003CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v4;
  char v5;
  uint64_t v6;
  void *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = sub_1D42FFF48();
  sub_1D4300290(v4, a3);
  if ((v5 & 1) != 0)
  {
    if (qword_1EFE40338 != -1)
      swift_once();
    v6 = sub_1D451A014();
    sub_1D42CC880(v6, (uint64_t)qword_1EFEA7700);
    v7 = (void *)sub_1D4519FFC();
    v8 = sub_1D451AF5C();
    if (sub_1D4306FDC(v8))
    {
      *(_WORD *)sub_1D43074C8() = 0;
      sub_1D43071C8(&dword_1D42A7000, v9, v10, "ERROR couldn't find index for key. Returning 0");
      sub_1D43073D8();
    }

  }
  sub_1D42CB15C();
}

float sub_1D4300478(float a1, float a2)
{
  float result;
  float v4;

  result = 0.0;
  if (a1 > -80.0)
  {
    if (a1 >= a2)
      v4 = a2 - a1;
    else
      v4 = (float)((float)(0.0 / (float)(a2 + 80.0)) * a1) + (float)((float)(0.0 / (float)(a2 + 80.0)) * 80.0);
    if (v4 <= 0.0)
      return v4;
  }
  return result;
}

void sub_1D43004C8()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1D4307354();
  v7 = *v6;
  sub_1D42CB6CC();
  sub_1D4306EE0(1718642785);
  sub_1D4306EEC();
  if ((sub_1D4306F10() & 1) != 0)
  {
    if ((v2 & 0x8000000000000000) == 0)
      goto LABEL_3;
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  sub_1D4306F18();
  v7 = v10;
  if (v2 < 0)
    goto LABEL_33;
LABEL_3:
  sub_1D4306F30();
  if (v8)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v3 = 1714512484;
  sub_1D4306F04(v7 + 4 * v2);
  sub_1D4306EE0(1714512484);
  sub_1D4306EEC();
  if ((sub_1D4306F10() & 1) != 0)
  {
    if ((v2 & 0x8000000000000000) == 0)
      goto LABEL_6;
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
LABEL_35:
  sub_1D4306F18();
  v7 = v11;
  if (v2 < 0)
    goto LABEL_36;
LABEL_6:
  sub_1D4306F30();
  if (v8)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v4 = 1194418788;
  sub_1D4306F04(v7 + 4 * v2);
  sub_1D4306EE0(1194418788);
  sub_1D4306EEC();
  if ((sub_1D4306F10() & 1) != 0)
  {
    if ((v2 & 0x8000000000000000) == 0)
      goto LABEL_9;
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
LABEL_38:
  sub_1D4306F18();
  v7 = v12;
  if (v2 < 0)
    goto LABEL_39;
LABEL_9:
  sub_1D4306F30();
  if (v8)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v5 = 1362190948;
  sub_1D4306F04(v7 + 4 * v2);
  sub_1D4306EE0(1362190948);
  sub_1D4306EEC();
  if ((sub_1D4306F10() & 1) != 0)
  {
    if ((v2 & 0x8000000000000000) == 0)
      goto LABEL_12;
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
LABEL_41:
  sub_1D4306F18();
  v7 = v13;
  if (v2 < 0)
    goto LABEL_42;
LABEL_12:
  sub_1D4306F30();
  if (v8)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  sub_1D4306F04(v7 + 4 * v2);
  sub_1D4306EE0(v3 + 0x10000);
  sub_1D4306EEC();
  if ((sub_1D4306F10() & 1) != 0)
  {
    if ((v2 & 0x8000000000000000) == 0)
      goto LABEL_15;
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
LABEL_44:
  sub_1D4306F18();
  v7 = v14;
  if (v2 < 0)
    goto LABEL_45;
LABEL_15:
  sub_1D4306F30();
  if (v8)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  sub_1D4306F04(v7 + 4 * v2);
  sub_1D4306EE0(v4 + 0x10000);
  sub_1D4306EEC();
  if ((sub_1D4306F10() & 1) != 0)
  {
    if ((v2 & 0x8000000000000000) == 0)
      goto LABEL_18;
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
LABEL_47:
  sub_1D4306F18();
  v7 = v15;
  if (v2 < 0)
    goto LABEL_48;
LABEL_18:
  sub_1D4306F30();
  if (v8)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  sub_1D4306F04(v7 + 4 * v2);
  sub_1D4306EE0(v5 + 0x10000);
  sub_1D4306EEC();
  if ((sub_1D4306F10() & 1) != 0)
  {
    if ((v2 & 0x8000000000000000) == 0)
      goto LABEL_21;
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
LABEL_50:
  sub_1D4306F18();
  v7 = v16;
  if (v2 < 0)
    goto LABEL_51;
LABEL_21:
  sub_1D4306F30();
  if (v8)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  sub_1D4306F04(v7 + 4 * v2);
  sub_1D4306EE0(v3 + 0x20000);
  sub_1D4306EEC();
  if ((sub_1D4306F10() & 1) != 0)
  {
    if ((v2 & 0x8000000000000000) == 0)
      goto LABEL_24;
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
LABEL_53:
  sub_1D4306F18();
  v7 = v17;
  if (v2 < 0)
    goto LABEL_54;
LABEL_24:
  sub_1D4306F30();
  if (v8)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  sub_1D4306F04(v7 + 4 * v2);
  sub_1D4306EE0(v4 + 0x20000);
  sub_1D4306EEC();
  if ((sub_1D4306F10() & 1) != 0)
  {
    if ((v2 & 0x8000000000000000) == 0)
      goto LABEL_27;
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
LABEL_56:
  sub_1D4306F18();
  v7 = v18;
  if (v2 < 0)
    goto LABEL_57;
LABEL_27:
  sub_1D4306F30();
  if (v8)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  sub_1D4306F04(v7 + 4 * v2);
  sub_1D4306EE0(v5 + 0x20000);
  v1 = v9;
  sub_1D42B7204();
  if ((sub_1D4306F10() & 1) != 0)
  {
    if ((v1 & 0x8000000000000000) == 0)
      goto LABEL_30;
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
LABEL_59:
  sub_1D4306F18();
  v7 = v19;
  if ((v1 & 0x8000000000000000) != 0)
    goto LABEL_60;
LABEL_30:
  if (v1 < *(_QWORD *)(v7 + 16))
  {
    *(_DWORD *)(v7 + 4 * v1 + 32) = 1058642330;
    *v0 = v7;
    return;
  }
LABEL_61:
  __break(1u);
}

void sub_1D43007CC()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1D4307354();
  v5 = *v4;
  sub_1D42CB6CC();
  sub_1D4306EE0(1718642788);
  sub_1D4306EEC();
  if ((sub_1D4306F10() & 1) == 0)
  {
    sub_1D4306F18();
    v5 = v8;
  }
  sub_1D4306F30();
  if (v6)
  {
    __break(1u);
  }
  else
  {
    v2 = 1194418785;
    sub_1D4306F04(v5 + 0x199C1A184);
    sub_1D4306EE0(1194418788);
    sub_1D4306EEC();
    if ((sub_1D4306F10() & 1) != 0)
      goto LABEL_5;
  }
  sub_1D4306F18();
  v5 = v9;
LABEL_5:
  sub_1D4306F30();
  if (v6)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v5 + 0x199C1A1A4) = 0;
    sub_1D42CB6CC();
    sub_1D4306EE0(1194484324);
    sub_1D4306EEC();
    if ((sub_1D4306F10() & 1) != 0)
      goto LABEL_7;
  }
  sub_1D4306F18();
  v5 = v10;
LABEL_7:
  sub_1D4306F30();
  if (v6)
  {
    __break(1u);
  }
  else
  {
    v3 = 1194549857;
    *(_DWORD *)(v5 + 0x199C1A1A4) = 0;
    sub_1D42CB6CC();
    sub_1D4306EE0(1194549860);
    sub_1D4306EEC();
    if ((sub_1D4306F10() & 1) != 0)
      goto LABEL_9;
  }
  sub_1D4306F18();
  v5 = v11;
LABEL_9:
  sub_1D4306F30();
  if (v6)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v5 + 0x199C1A1A4) = 0;
    sub_1D42CB6CC();
    sub_1D4306EE0(1718642785);
    sub_1D4306EEC();
    if ((sub_1D4306F10() & 1) != 0)
      goto LABEL_11;
  }
  sub_1D4306F18();
  v5 = v12;
LABEL_11:
  sub_1D4306F30();
  if (v6)
  {
    __break(1u);
  }
  else
  {
    sub_1D4306F04(v5 + 0x199C1A184);
    sub_1D4306EE0(1194418785);
    sub_1D4306EEC();
    if ((sub_1D4306F10() & 1) != 0)
      goto LABEL_13;
  }
  sub_1D4306F18();
  v5 = v13;
LABEL_13:
  sub_1D4306F30();
  if (v6)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v5 + 0x199C1A1A4) = 0;
    sub_1D42CB6CC();
    sub_1D4306EE0(v2 + 0x10000);
    sub_1D4306EEC();
    if ((sub_1D4306F10() & 1) != 0)
      goto LABEL_15;
  }
  sub_1D4306F18();
  v5 = v14;
LABEL_15:
  sub_1D4306F30();
  if (v6)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v5 + 0x199C1A1A4) = 0;
    sub_1D42CB6CC();
    sub_1D4306EE0(1194549857);
    sub_1D4306EEC();
    if ((sub_1D4306F10() & 1) != 0)
      goto LABEL_17;
  }
  sub_1D4306F18();
  v5 = v15;
LABEL_17:
  sub_1D4306F30();
  if (v6)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v5 + 0x199C1A1A4) = 0;
    sub_1D42CB6CC();
    sub_1D4306EE0(v3 + 0x10000);
    sub_1D4306EEC();
    if ((sub_1D4306F10() & 1) != 0)
      goto LABEL_19;
  }
  sub_1D4306F18();
  v5 = v16;
LABEL_19:
  sub_1D4306F30();
  if (v6)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v5 + 0x199C1A1A4) = 0;
    sub_1D42CB6CC();
    sub_1D4306EE0(1363506785);
    v1 = v7;
    sub_1D42B7204();
    if ((sub_1D4306F10() & 1) != 0)
    {
      if ((v1 & 0x8000000000000000) == 0)
        goto LABEL_22;
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
  }
  sub_1D4306F18();
  v5 = v17;
  if ((v1 & 0x8000000000000000) != 0)
    goto LABEL_42;
LABEL_22:
  if (v1 < *(_QWORD *)(v5 + 16))
  {
    *(_DWORD *)(v5 + 4 * v1 + 32) = 0;
    *v0 = v5;
    return;
  }
LABEL_43:
  __break(1u);
}

void sub_1D4300AB4(void *a1@<X0>, _DWORD *a2@<X8>, double a3@<D0>)
{
  uint64_t v3;
  void *v4;
  void *v8;
  id v9;
  float v10;
  float v11;
  void *v12;
  id v13;
  float v14;
  float v15;
  void *v16;
  id v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  float v24;
  float v25;
  float v26;
  float v27;
  uint64_t v28;
  os_log_type_t v29;
  _WORD *v30;
  uint64_t v31;
  uint64_t v32;
  const char *v33;
  _BYTE *v34;
  float v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  float v42;
  float v43;
  _BOOL4 v44;
  float v45;
  float v46;
  float v47;
  float v48;
  uint64_t v49;
  os_log_type_t v50;
  _WORD *v51;
  float v52;
  float v53;
  uint64_t v54;
  uint64_t v55;
  float v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v8 = (void *)sub_1D4307288();
  v9 = sub_1D43072E8(v8);

  sub_1D4307024((uint64_t)v9);
  if (v3)
  {

    return;
  }
  v11 = v10;

  v12 = (void *)sub_1D4307288();
  v13 = sub_1D43072E8(v12);

  sub_1D4307024((uint64_t)v13);
  v15 = v14;

  sub_1D430740C();
  v16 = (void *)sub_1D451A6C8();
  v17 = sub_1D44F590C(a1, v16);

  sub_1D4307024((uint64_t)v17);
  v19 = v18;

  sub_1D4307418();
  sub_1D42FFAE0();
  v21 = v20;
  v22 = (void *)sub_1D4307418();
  sub_1D42FFCF0(v22);
  if (*(_QWORD *)(v21 + 16) != *(_QWORD *)(v23 + 16))
  {
    sub_1D42CB8F4();
    sub_1D42CB5C8();
    if (qword_1EFE40338 != -1)
      swift_once();
    v28 = sub_1D430710C();
    sub_1D4307218(v28, (uint64_t)qword_1EFEA7700);
    v29 = sub_1D43073E8();
    if (sub_1D4306FDC(v29))
    {
      v30 = (_WORD *)sub_1D42CC940();
      sub_1D4307498(v30);
      v33 = "Movie Remix: Statistics count mismatch";
      goto LABEL_13;
    }
LABEL_14:

    sub_1D4306894();
    sub_1D42B6D0C();
    sub_1D4306EF8(v34, 11);
    return;
  }
  v24 = sub_1D43072D8(1702256967);
  v25 = sub_1D43072D8(1702256979);
  sub_1D42CB8F4();
  sub_1D42CB5C8();
  v26 = (float)((float)((float)((float)(v11 - v15) + (float)(v24 + v25)) / 3.0) * 0.26) + -8.23;
  v27 = -6.0;
  if (v26 > -6.0)
  {
    if (v25 >= 0.0)
      goto LABEL_44;
    v26 = -6.0;
    if (v25 <= -9.0)
      goto LABEL_36;
    goto LABEL_26;
  }
  v27 = -9.0;
  if (v26 <= -9.0)
  {
    if (v25 >= 0.0)
      goto LABEL_44;
    v26 = -9.0;
    if (v25 <= -9.0)
      goto LABEL_36;
    goto LABEL_26;
  }
  if (v25 >= 0.0)
  {
    if (v26 > 0.0)
    {
      v27 = 0.0;
      goto LABEL_44;
    }
    v35 = -2.0;
    goto LABEL_30;
  }
  if (v25 > 0.0)
  {
    if (v26 > 0.0)
    {
      v27 = 0.0;
      goto LABEL_44;
    }
    v36 = v26 < -12.0;
    goto LABEL_39;
  }
  if (v25 <= -9.0)
  {
    v26 = v26 + 9.0;
    if (v26 > 0.0)
    {
LABEL_36:
      v27 = 0.0;
      goto LABEL_44;
    }
    if (v26 <= -9.0)
      goto LABEL_44;
    v35 = -4.0;
LABEL_30:
    v36 = (float)(v26 + v35) < -12.0;
    goto LABEL_39;
  }
LABEL_26:
  v26 = v26 - v25;
  v35 = -4.0;
  if (v25 <= -4.0)
  {
    v27 = 0.0;
    if (v26 > 0.0)
      goto LABEL_44;
    v27 = -9.0;
    if (v26 <= -9.0)
      goto LABEL_44;
    goto LABEL_30;
  }
  if (v26 > 0.0)
  {
    v27 = 0.0;
    goto LABEL_44;
  }
  v27 = -9.0;
  if (v26 > -9.0)
  {
    v36 = (float)(v25 + v26) < -12.0;
LABEL_39:
    v27 = v26;
    if (v36)
      v27 = v26;
  }
LABEL_44:
  sub_1D4307418();
  sub_1D42FF608();
  sub_1D42FF684();
  sub_1D4307418();
  sub_1D42FF708();
  v38 = v37;
  v74 = v37;
  swift_bridgeObjectRetain();
  v39 = (void *)sub_1D4307418();
  sub_1D42FF8D0(v39);
  if (*(_QWORD *)(v38 + 16) != *(_QWORD *)(v40 + 16))
  {
    swift_bridgeObjectRelease();
    sub_1D430729C();
    if (qword_1EFE40338 != -1)
      swift_once();
    v49 = sub_1D430710C();
    sub_1D4307218(v49, (uint64_t)qword_1EFEA7700);
    v50 = sub_1D43073E8();
    if (sub_1D4306FDC(v50))
    {
      v51 = (_WORD *)sub_1D42CC940();
      sub_1D4307498(v51);
      v33 = "Movie Remix: filter parameters count mismatch.";
LABEL_13:
      sub_1D4306FFC(&dword_1D42A7000, v31, v32, v33);
      sub_1D42CC934();
    }
    goto LABEL_14;
  }
  v41 = v40;
  v42 = sub_1D43001B4(1363506785, 0xE400000000000000, v40, v38);
  sub_1D42CB5C8();
  v43 = v27 - v42;
  v44 = v11 > -45.0;
  if (a3 >= 0.93)
    v44 = 0;
  v45 = -3.0;
  if (v43 <= -3.0)
  {
    if (v43 > -9.0)
      v45 = v43;
    else
      v45 = -9.0;
    if (!v44)
      goto LABEL_49;
  }
  else if (!v44)
  {
LABEL_49:
    sub_1D43007CC();
    if (v11 > v15)
      v46 = v11;
    else
      v46 = v15;
    v47 = sub_1D4300478(v46, -21.0);
    v48 = v47;
    goto LABEL_62;
  }
  v48 = sub_1D4300478(v11, -21.0);
  v47 = v45 + v48;
  sub_1D43004C8();
LABEL_62:
  v52 = v47 - (float)(-21.0 - v15);
  if ((float)(v15 + v47) <= -21.0)
  {
    v53 = 0.0;
  }
  else
  {
    v47 = -21.0 - v15;
    v53 = v52;
  }
  swift_bridgeObjectRetain();
  sub_1D42FC49C(v41, v74);
  v55 = v54;
  sub_1D430729C();
  sub_1D42CB8F4();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1D4306FA0();
    v55 = v68;
  }
  v56 = v48 - v53;
  v57 = *(_QWORD *)(v55 + 16);
  v58 = *(_QWORD *)(v55 + 24) >> 1;
  v59 = v57 + 1;
  if (v58 <= v57)
  {
    sub_1D4306FA0();
    v55 = v69;
    v58 = *(_QWORD *)(v69 + 24) >> 1;
  }
  *(_QWORD *)(v55 + 16) = v59;
  v60 = v55 + 8 * v57;
  *(_DWORD *)(v60 + 32) = 1145861740;
  *(float *)(v60 + 36) = v56;
  v61 = v57 + 2;
  if ((uint64_t)v58 < (uint64_t)(v57 + 2))
  {
    sub_1D4306FA0();
    v55 = v70;
  }
  *(_QWORD *)(v55 + 16) = v61;
  v62 = v55 + 8 * v59;
  *(_DWORD *)(v62 + 32) = 1095530092;
  *(float *)(v62 + 36) = v47;
  v63 = v57 + 3;
  if ((int64_t)(v57 + 3) > *(_QWORD *)(v55 + 24) >> 1)
  {
    sub_1D4306FA0();
    v55 = v71;
  }
  *(_QWORD *)(v55 + 16) = v63;
  v64 = v55 + 8 * v61;
  *(_DWORD *)(v64 + 32) = 1145857139;
  *(float *)(v64 + 36) = v11;
  v65 = v57 + 4;
  if ((int64_t)(v57 + 4) > *(_QWORD *)(v55 + 24) >> 1)
  {
    sub_1D4306FA0();
    v55 = v72;
  }
  *(_QWORD *)(v55 + 16) = v65;
  v66 = v55 + 8 * v63;
  *(_DWORD *)(v66 + 32) = 1095525491;
  *(float *)(v66 + 36) = v15;
  if ((int64_t)(v57 + 5) > *(_QWORD *)(v55 + 24) >> 1)
  {
    sub_1D4306FA0();
    v55 = v73;
  }
  *(_QWORD *)(v55 + 16) = v57 + 5;
  v67 = v55 + 8 * v65;
  *(_DWORD *)(v67 + 32) = 1380738163;
  *(_DWORD *)(v67 + 36) = v19;
  *a2 = 17104896;
  *((float *)a2 + 1) = v56;
  *((float *)a2 + 2) = v47;
  *((float *)a2 + 3) = v11;
  *((float *)a2 + 4) = v15;
  a2[5] = v19;
  *((_QWORD *)a2 + 3) = v55;
}

BOOL sub_1D4301230(double *a1)
{
  return *a1 != 0.5;
}

uint64_t sub_1D4301244@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  void *v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[24];
  void *v41;
  _UNKNOWN **v42;
  uint64_t v43[3];
  uint64_t v44;
  uint64_t v45;

  sub_1D43066DC();
  if (v38)
  {
    v5 = sub_1D42E33E0(&v36, (uint64_t)v40);
    sub_1D430746C(v5, v6, v7, v8, v9, v10);
  }
  else
  {
    sub_1D42D7018((uint64_t)&v36, &qword_1EFE4ADD8);
    if (qword_1EFE48E58 != -1)
      swift_once();
    v11 = (void *)qword_1EFEA7770;
    v12 = qword_1EFEA7778;
    v14 = qword_1EFEA7780;
    v13 = qword_1EFEA7788;
    v15 = qword_1EFEA7790;
    v16 = byte_1EFEA7798;
    v41 = &unk_1E979AD08;
    v42 = &off_1E979AC20;
    v17 = sub_1D42B6F40();
    *(_QWORD *)v40 = v17;
    if ((v16 & 1) != 0)
    {
      *(_QWORD *)&v36 = v11;
      v23 = v11;
      sub_1D42B28FC(&qword_1EFE49BB0);
      swift_willThrowTypedImpl();
      return sub_1D4306718((uint64_t)v40);
    }
    *(_QWORD *)(v17 + 16) = v11;
    *(_QWORD *)(v17 + 24) = v12;
    *(_BYTE *)(v17 + 32) = v14 & 1;
    *(_QWORD *)(v17 + 40) = v13;
    *(_QWORD *)(v17 + 48) = v15;
    sub_1D430746C(v17, v18, v19, v20, v21, v22);
    sub_1D4307398();
    swift_retain();
    sub_1D42EA340();
  }
  v25 = v44;
  v26 = v45;
  v27 = sub_1D42B5528(v43, v44);
  sub_1D43013FC(a1, (uint64_t)v27, v25, v26, v28, v29, v30, v31, v35, v36, *((uint64_t *)&v36 + 1), v37, v38, v39, *(uint64_t *)v40, *(uint64_t *)&v40[8], *(uint64_t *)&v40[16], (uint64_t)v41, (uint64_t)v42,
    v43[0]);
  result = sub_1D42B5400((uint64_t)v43);
  if (!v2)
  {
    v32 = *(_DWORD *)&v40[20];
    v33 = v41;
    v34 = *(_OWORD *)&v40[4];
    *(_DWORD *)a2 = *(_DWORD *)v40;
    *(_OWORD *)(a2 + 4) = v34;
    *(_DWORD *)(a2 + 20) = v32;
    *(_QWORD *)(a2 + 24) = v33;
  }
  return result;
}

void sub_1D43013FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _DWORD *v28;
  _DWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  unsigned int v39;
  double v40;
  char *v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  id v45;
  int v46;
  uint64_t v47;
  __int128 v48;
  _DWORD *v49;
  uint64_t v50;
  _DWORD *v51;
  void (*v52)(char *, uint64_t, uint64_t);
  char *v53;
  uint64_t v54;
  void *v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  _BYTE v59[20];
  int v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  _OWORD v65[4];

  sub_1D42BE910();
  a19 = v21;
  a20 = v22;
  *(_QWORD *)&v58 = v23;
  *(_QWORD *)&v57 = v24;
  *(_QWORD *)&v56 = v25;
  v27 = v26;
  v29 = v28;
  v30 = sub_1D42CB348();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(_QWORD *)(v31 + 64);
  v33 = MEMORY[0x1E0C80A78](v30);
  MEMORY[0x1E0C80A78](v33);
  v34 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 16);
  v34((char *)&v50 - v35, v27, v30);
  v36 = objc_allocWithZone(MEMORY[0x1E0C89A98]);
  sub_1D42E3B40();
  sub_1D446B0DC();
  if (v20)
    goto LABEL_6;
  v52 = v34;
  v53 = (char *)&v50 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = v27;
  v51 = v29;
  v55 = v37;
  v38 = objc_msgSend(v37, sel_processingFormat);
  v39 = objc_msgSend(v38, sel_channelCount);
  objc_msgSend(v38, sel_sampleRate);
  if ((~*(_QWORD *)&v40 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v40 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v40 < 9.22337204e18)
  {
    *(_QWORD *)v59 = v39;
    *(_QWORD *)&v59[8] = (uint64_t)v40;
    sub_1D43016EC();
    v57 = v63;
    v58 = v62;
    v56 = v64;
    v41 = v53;
    v52(v53, v54, v30);
    v42 = (*(unsigned __int8 *)(v31 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    v43 = (v32 + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
    v44 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v31 + 32))(v44 + v42, v41, v30);
    *(_QWORD *)(v44 + v43) = v38;
    a10 = *((_QWORD *)&v62 + 1);
    v65[0] = v58;
    v65[1] = v57;
    v65[2] = v56;
    v45 = v38;
    sub_1D42EA340();
    sub_1D43067EC((uint64_t)&a10);
    sub_1D42BE984();
    sub_1D42BE9A0();
    sub_1D4303364((uint64_t (*)(uint64_t))sub_1D430679C, 1024, v65, v59);
    sub_1D42EA1BC();

    sub_1D4306814((uint64_t)&a10);
    sub_1D42EA1BC();
    sub_1D4307570();
    sub_1D42BE998();
    sub_1D42FC448();
    sub_1D4306814((uint64_t)&a10);
    sub_1D42EA438();
    sub_1D42BE998();
    sub_1D42FC448();
    v46 = v60;
    v47 = v61;
    v48 = *(_OWORD *)&v59[4];
    v49 = v51;
    *v51 = *(_DWORD *)v59;
    *(_OWORD *)(v49 + 1) = v48;
    v49[5] = v46;
    *((_QWORD *)v49 + 3) = v47;
LABEL_6:
    sub_1D42BE844();
    return;
  }
LABEL_9:
  __break(1u);
}

void sub_1D43016EC()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (**v37)@<X0>(uint64_t *@<X8>);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  _BOOL4 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  void (*v82)(_BYTE *, uint64_t);
  uint64_t v83;
  _BYTE *v84;
  char v85;
  void *v86;
  _QWORD *v87;
  void *v88;
  double v89;
  double v90;
  _QWORD *v91;
  void *v92;
  _BYTE *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(uint64_t, _BYTE *, uint64_t);
  void (*v101)(uint64_t, _BYTE *, uint64_t);
  uint64_t v102;
  void (*v103)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _BYTE *v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  uint64_t v122;
  void *v123;
  uint64_t v124;
  void *v125;
  uint64_t v126;
  void *v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  uint64_t v131;
  uint64_t v132;
  void *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _BYTE *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _BYTE *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  void *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t (**v158)@<X0>(uint64_t *@<X8>);
  uint64_t v159;
  id v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  id v165;
  id v166;
  char v167;
  void *v168;
  os_log_type_t v169;
  uint64_t v170;
  uint64_t v171;
  id v172;
  char v173;
  void *v174;
  os_log_type_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  _BYTE *v194;
  NSObject *v195;
  os_log_type_t v196;
  uint8_t *v197;
  uint64_t v198;
  uint64_t v199;
  unint64_t v200;
  uint64_t v201;
  uint64_t *v202;
  uint64_t v203;
  _BYTE v204[12];
  unsigned int v205;
  void *v206;
  void (*v207)(uint64_t, _BYTE *, uint64_t);
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t *v239;
  uint64_t v240;
  _BYTE *v241;
  uint64_t v242;
  uint64_t (**v243)@<X0>(uint64_t *@<X8>);
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  id v265;
  uint64_t v266;
  _BYTE *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  _BYTE *v272;
  void (*v273)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  _BYTE *v277;
  uint64_t v278;
  _BYTE *v279;
  uint64_t v280;
  uint64_t v281;
  __int128 v282;
  __int128 v283;
  _BYTE *v284;
  uint64_t (*v285)@<X0>(_QWORD *@<X8>);
  uint64_t v286;
  uint64_t (*v287)(uint64_t, uint64_t);
  _QWORD *v288;
  uint64_t (*v289)@<X0>(_QWORD *@<X8>);
  uint64_t v290;
  uint64_t (*v291)(uint64_t, uint64_t);
  _QWORD *v292;
  _QWORD v293[19];

  sub_1D43072F8();
  v277 = v0;
  v278 = v1;
  v276 = v2;
  v275 = v3;
  v5 = v4;
  v7 = v6;
  v8 = sub_1D42B28FC(&qword_1EFE4AE90);
  v237 = *(_QWORD *)(v8 - 8);
  v238 = v8;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v9);
  sub_1D42BE768();
  v236 = v10;
  v11 = sub_1D42B28FC(&qword_1EFE4AE98);
  v228 = *(_QWORD *)(v11 - 8);
  v229 = v11;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v12);
  sub_1D42BE768();
  v227 = v13;
  v14 = sub_1D42B28FC(&qword_1EFE4AEA0);
  v231 = *(_QWORD *)(v14 - 8);
  v232 = v14;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v15);
  sub_1D42BE768();
  v230 = v16;
  v17 = sub_1D42B28FC(&qword_1EFE4AEA8);
  v234 = *(_QWORD *)(v17 - 8);
  v235 = v17;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v18);
  sub_1D42BE768();
  v233 = v19;
  v220 = sub_1D42B28FC(&qword_1EFE4AEB0);
  v217 = *(_QWORD *)(v220 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v20);
  sub_1D42BE768();
  v216 = v21;
  v22 = sub_1D42B28FC(&qword_1EFE4AEB8);
  v223 = *(_QWORD *)(v22 - 8);
  v224 = v22;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v23);
  sub_1D42BE768();
  v218 = v24;
  v25 = sub_1D42B28FC(&qword_1EFE4AEC0);
  v225 = *(_QWORD *)(v25 - 8);
  v226 = v25;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v26);
  sub_1D42BE768();
  v222 = v27;
  v221 = sub_1D42B28FC(&qword_1EFE4AEC8);
  v219 = *(_QWORD *)(v221 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v28);
  sub_1D42BE768();
  v240 = v29;
  v213 = sub_1D42B28FC(&qword_1EFE4AED0);
  v211 = *(_QWORD *)(v213 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v30);
  sub_1D42BE768();
  v210 = v31;
  v32 = sub_1D42B28FC(&qword_1EFE4AED8);
  v214 = *(_QWORD *)(v32 - 8);
  v215 = v32;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v33);
  sub_1D42BE768();
  v212 = v34;
  v35 = sub_1D42B28FC((uint64_t *)&unk_1EFE4F7C0);
  v244 = *(_QWORD *)(v35 - 8);
  v245 = v35;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v36);
  sub_1D42BE768();
  v243 = v37;
  v38 = sub_1D451A0B0();
  v264 = *(_QWORD *)(v38 - 8);
  v265 = (id)v38;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v39);
  sub_1D42BE768();
  v242 = v40;
  v249 = sub_1D42B28FC(&qword_1EFE4ACA0);
  v247 = *(_QWORD *)(v249 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v41);
  sub_1D42BE768();
  v246 = v42;
  v43 = sub_1D42B28FC((uint64_t *)&unk_1EFE4FB00);
  v251 = *(_QWORD *)(v43 - 8);
  v252 = v43;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v44);
  sub_1D42BE768();
  v250 = v45;
  v248 = sub_1D42B28FC(&qword_1EFE4AEE0);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v46);
  sub_1D42BE768();
  v253 = v47;
  v48 = sub_1D42B28FC(&qword_1EFE4AEE8);
  v256 = *(_QWORD *)(v48 - 8);
  v257 = v48;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v49);
  sub_1D42BE768();
  v254 = v50;
  v51 = sub_1D42B28FC(&qword_1EFE4AEF0);
  v259 = *(_QWORD *)(v51 - 8);
  v260 = v51;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v52);
  sub_1D42BE768();
  v255 = v53;
  v54 = sub_1D42B28FC(&qword_1EFE4AEF8);
  v261 = *(_QWORD *)(v54 - 8);
  v262 = v54;
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v55);
  sub_1D42BE768();
  v258 = v56;
  v270 = sub_1D42B28FC(&qword_1EFE4AF00);
  v269 = *(_QWORD *)(v270 - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v57);
  sub_1D42BE768();
  v268 = v58;
  v59 = sub_1D42EA2A8();
  v60 = *(_QWORD *)(v59 - 8);
  v61 = MEMORY[0x1E0C80A78](v59);
  v241 = &v204[-((v62 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v63 = MEMORY[0x1E0C80A78](v61);
  v267 = &v204[-v64];
  v65 = MEMORY[0x1E0C80A78](v63);
  v67 = &v204[-v66];
  v266 = v68;
  MEMORY[0x1E0C80A78](v65);
  v70 = &v204[-v69];
  v274 = *v5;
  v279 = (_BYTE *)v5[1];
  sub_1D4519D14();
  if (qword_1EFE40338 != -1)
    swift_once();
  v71 = sub_1D430710C();
  v72 = sub_1D42CC880(v71, (uint64_t)qword_1EFEA7700);
  v273 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v60 + 16);
  v273(v67, v70, v59);
  v263 = v72;
  v73 = sub_1D4519FFC();
  v74 = sub_1D451AF74();
  v75 = os_log_type_enabled(v73, v74);
  v239 = v7;
  v271 = v60;
  if (v75)
  {
    v76 = sub_1D42CC940();
    v280 = v59;
    v77 = v76;
    v209 = sub_1D42CC940();
    v281 = v209;
    *(_DWORD *)v77 = 136446466;
    v272 = v70;
    sub_1D4306C10((uint64_t)&qword_1EFE4CB00);
    v78 = sub_1D451B7C0();
    *(_QWORD *)&v282 = sub_1D43D72EC(v78, v79, &v281);
    sub_1D451B1A8();
    sub_1D42B7204();
    (*(void (**)(_BYTE *, uint64_t))(v60 + 8))(v67, v280);
    *(_WORD *)(v77 + 12) = 2080;
    *(_QWORD *)&v282 = v274;
    *((_QWORD *)&v282 + 1) = v279;
    v80 = sub_1D451A728();
    *(_QWORD *)&v282 = sub_1D43D72EC(v80, v81, &v281);
    sub_1D451B1A8();
    sub_1D42CB208();
    _os_log_impl(&dword_1D42A7000, v73, v74, "Trying to run movie remix %{public}s; request: %s", (uint8_t *)v77, 0x16u);
    swift_arrayDestroy();
    sub_1D42CC934();
  }
  v82 = *(void (**)(_BYTE *, uint64_t))(v60 + 8);
  v82(v67, v59);

  v83 = (uint64_t)v279;
  v84 = v277;
  v85 = (*(uint64_t (**)(uint64_t))(v278 + 8))(v276);
  if (v84)
    goto LABEL_20;
  if ((v85 & 1) == 0)
  {
    sub_1D4306894();
    sub_1D42B6D0C();
    *v139 = 0;
LABEL_19:
    swift_willThrow();
LABEL_20:
    v82(v70, v59);
    goto LABEL_21;
  }
  if (qword_1EFE403C0 != -1)
    swift_once();
  if (byte_1EFE403B0 != 1)
  {
    type metadata accessor for SNError();
    sub_1D430740C();
    sub_1D43EC59C(v140, v141, 1, 0, v142, 0x80000001D4551C80);
    goto LABEL_19;
  }
  v86 = sub_1D42FF11C();
  v87 = sub_1D44F65F4((uint64_t)v86);
  if (!v87
    || (v88 = v87,
        sub_1D44F1774(v87, 0),
        v90 = v89,
        v88,
        (v91 = sub_1D44F65F4((uint64_t)v86)) == 0))
  {
    sub_1D4306894();
    sub_1D42B6D0C();
    sub_1D4306EF8(v143, 1);

    goto LABEL_20;
  }
  v92 = v91;
  v206 = v86;
  v205 = sub_1D44F1BF8((uint64_t)v91, 0);

  sub_1D42B28FC(&qword_1EFE4AF08);
  sub_1D42B6D94();
  v278 = sub_1D451A230();
  v209 = 60 * v83;
  if ((unsigned __int128)(v83 * (__int128)60) >> 64 != (60 * v83) >> 63)
  {
    __break(1u);
    goto LABEL_37;
  }
  v208 = 2 * v83;
  v93 = v267;
  v273(v267, v70, v59);
  v94 = v271;
  v95 = *(unsigned __int8 *)(v271 + 80);
  v96 = (v95 + 16) & ~v95;
  v275 = v96 + v266;
  v266 = v95 | 7;
  v97 = swift_allocObject();
  v98 = v97 + v96;
  v99 = v96;
  v100 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v94 + 32);
  v100(v98, v93, v59);
  v101 = v100;
  v207 = v100;
  v102 = sub_1D42B6F40();
  v277 = (_BYTE *)v102;
  *(_QWORD *)(v102 + 16) = sub_1D43068EC;
  *(_QWORD *)(v102 + 24) = v97;
  v276 = sub_1D42B6F40();
  *(_QWORD *)(v276 + 16) = 1;
  v103 = v273;
  v273(v93, v70, v59);
  v104 = sub_1D4307548();
  v101(v104 + v99, v93, v59);
  v105 = v59;
  v106 = sub_1D42B6F40();
  *(_QWORD *)(v106 + 16) = sub_1D43069CC;
  *(_QWORD *)(v106 + 24) = v104;
  v107 = v70;
  v108 = (_QWORD *)sub_1D42B6F40();
  v108[2] = sub_1D4306928;
  v108[3] = 0;
  v108[4] = v208;
  v108[5] = sub_1D42FBEC4;
  v108[6] = v106;
  v109 = sub_1D42B6F40();
  *(_QWORD *)(v109 + 16) = 0;
  v110 = v109;
  v208 = v109;
  v272 = v107;
  v103(v93, v107, v105);
  v111 = sub_1D4307548();
  v280 = v105;
  v207(v111 + v99, v93, v105);
  v112 = sub_1D42B6F40();
  *(_QWORD *)(v112 + 16) = sub_1D4306A6C;
  *(_QWORD *)(v112 + 24) = v111;
  v113 = (_QWORD *)sub_1D42B6F40();
  v113[2] = sub_1D4306E68;
  v113[3] = 0;
  v113[4] = v209;
  v113[5] = sub_1D42FC404;
  v113[6] = v112;
  v114 = sub_1D42B6F40();
  *(_QWORD *)&v282 = v278;
  *((_QWORD *)&v282 + 1) = sub_1D43069C0;
  *(_QWORD *)&v283 = v276;
  *((_QWORD *)&v283 + 1) = sub_1D43069B4;
  v284 = v277;
  v285 = sub_1D4306A14;
  *(_QWORD *)(v114 + 16) = 0;
  v286 = v110;
  v287 = sub_1D43069F4;
  v288 = v108;
  v289 = sub_1D4306E54;
  v290 = v114;
  v291 = sub_1D4306B08;
  v292 = v113;
  swift_retain();
  sub_1D42CB9F8();
  sub_1D42B28FC(&qword_1EFE4AF18);
  sub_1D43071A0((uint64_t)&unk_1EFE4AF20);
  v115 = v268;
  sub_1D451A3A4();
  sub_1D42BE998();
  sub_1D43070B8();
  sub_1D42B6F8C();
  swift_release();
  sub_1D430722C();
  sub_1D43072B4();
  sub_1D43074E0();
  sub_1D4306C60((uint64_t)&unk_1EFE4AF28);
  v116 = sub_1D451A2E4();
  sub_1D4307058(v115, *(uint64_t (**)(uint64_t, uint64_t))(v269 + 8));
  *(_QWORD *)&v282 = v116;
  *((_QWORD *)&v282 + 1) = sub_1D43CC188;
  *(_QWORD *)&v283 = 0;
  *((_QWORD *)&v283 + 1) = sub_1D4478108;
  v284 = 0;
  swift_retain();
  sub_1D42CB9F8();
  sub_1D43071A0((uint64_t)&unk_1EFE4AF38);
  sub_1D451A374();
  sub_1D42B28FC(&qword_1EFE4AF40);
  sub_1D42B6F40();
  v117 = sub_1D42E3B40();
  v118 = sub_1D43AEFD8(v117);
  v268 = v116;
  sub_1D42B6F8C();
  *(_QWORD *)&v282 = v118;
  sub_1D4306C60((uint64_t)&unk_1EFE4AF48);
  v119 = sub_1D451A2E4();
  sub_1D42EA1BC();
  sub_1D42B28FC(&qword_1EFE47798);
  v120 = sub_1D42B6F40();
  v121 = (void *)objc_opt_self();
  *(_QWORD *)(v120 + 16) = sub_1D4306F4C(v121);
  sub_1D42B28FC(&qword_1EFE47990);
  sub_1D42B6F40();
  v122 = sub_1D42E3B40();
  v275 = sub_1D4312B70(v122);
  sub_1D42B28FC(&qword_1EFE47790);
  sub_1D42B6F40();
  v123 = (void *)sub_1D4307018();
  *(_QWORD *)(v120 + 16) = sub_1D4306F4C(v123);
  sub_1D42B28FC((uint64_t *)&unk_1EFE47980);
  sub_1D42B6F40();
  v124 = sub_1D42E3B40();
  v270 = sub_1D4312B70(v124);
  sub_1D42B28FC(qword_1EFE47248);
  sub_1D42B6F40();
  v125 = (void *)sub_1D4307018();
  *(_QWORD *)(v120 + 16) = sub_1D4306F4C(v125);
  sub_1D42B28FC((uint64_t *)&unk_1EFE47940);
  sub_1D42B6F40();
  v126 = sub_1D42E3B40();
  v70 = (_BYTE *)sub_1D4312B70(v126);
  sub_1D42B28FC(&qword_1EFE47780);
  sub_1D42B6F40();
  v127 = (void *)sub_1D4307018();
  *(_QWORD *)(v120 + 16) = sub_1D4306F4C(v127);
  sub_1D42B28FC((uint64_t *)&unk_1EFE47960);
  sub_1D42B6F40();
  v128 = sub_1D42E3B40();
  v129 = sub_1D4312B70(v128);
  sub_1D42B28FC(&qword_1EFE47778);
  sub_1D42B6F40();
  v130 = (void *)sub_1D4307018();
  *(_QWORD *)(v120 + 16) = sub_1D4306F4C(v130);
  sub_1D42B28FC((uint64_t *)&unk_1EFE47950);
  sub_1D42B6F40();
  v131 = sub_1D42E3B40();
  v132 = sub_1D4312B70(v131);
  sub_1D42B28FC(&qword_1EFE47788);
  sub_1D42B6F40();
  v133 = (void *)sub_1D4307018();
  v134 = v275;
  *(_QWORD *)(v120 + 16) = objc_msgSend(v133, sel_mapTableWithKeyOptions_valueOptions_, 0x10000, 5);
  sub_1D42B28FC((uint64_t *)&unk_1EFE47970);
  sub_1D42B6F40();
  v135 = sub_1D42E3B40();
  v136 = sub_1D4312B70(v135);
  v293[9] = v119;
  v293[10] = v274;
  v293[11] = v279;
  v293[12] = v134;
  v293[13] = v270;
  v293[14] = v70;
  v293[15] = v129;
  v293[16] = v132;
  v293[17] = v136;
  v293[0] = v119;
  v293[1] = v274;
  v293[2] = v279;
  v293[3] = v134;
  v293[4] = v270;
  v293[5] = v70;
  v277 = v70;
  v279 = (_BYTE *)v129;
  v293[6] = v129;
  v293[7] = v132;
  v274 = v132;
  v293[8] = v136;
  if ((~*(_QWORD *)&v90 & 0x7FF0000000000000) == 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if (v90 <= -9.22337204e18)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v269 = v136;
  v70 = v279;
  if (v90 < 9.22337204e18)
  {
    v137 = v205;
    sub_1D4307398();
    sub_1D42BE9A0();
    sub_1D42BE934();
    swift_retain();
    swift_retain();
    sub_1D42EA340();
    v276 = v119;
    sub_1D4307398();
    sub_1D43994BC(v137, (uint64_t)v90);
    v144 = v138;
    sub_1D42EA438();
    sub_1D42EA1BC();
    sub_1D42B6F8C();
    sub_1D430722C();
    sub_1D43070B8();
    sub_1D42BE998();
    sub_1D43072B4();
    v266 = v144;
    *(_QWORD *)&v282 = sub_1D4398FE0();
    v145 = v242;
    (*(void (**)(uint64_t, _QWORD, id))(v264 + 104))(v242, *MEMORY[0x1E0C958B0], v265);
    v147 = (uint64_t)v243;
    v146 = v244;
    *v243 = sub_1D4303CE8;
    *(_QWORD *)(v147 + 8) = 0;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v146 + 104))(v147, *MEMORY[0x1E0C958F0], v245);
    sub_1D42CB9F8();
    sub_1D43071A0((uint64_t)&qword_1EFE496A0);
    v148 = v246;
    sub_1D451A380();
    sub_1D4306F6C(v147, *(uint64_t (**)(uint64_t, uint64_t))(v146 + 8));
    (*(void (**)(uint64_t, id))(v264 + 8))(v145, v265);
    swift_release();
    v149 = sub_1D42B6F40();
    *(_QWORD *)(v149 + 16) = sub_1D42FB61C;
    *(_QWORD *)(v149 + 24) = 0;
    sub_1D42B28FC((uint64_t *)&unk_1EFE4FB10);
    sub_1D4306C60((uint64_t)&qword_1EFE4ACE8);
    v150 = v250;
    sub_1D451A308();
    sub_1D42FC448();
    sub_1D4306F6C(v148, *(uint64_t (**)(uint64_t, uint64_t))(v247 + 8));
    v151 = v206;
    v152 = sub_1D44F41CC((uint64_t)v206);
    v153 = sub_1D42B6F40();
    *(_QWORD *)(v153 + 16) = v152;
    v154 = v251;
    v155 = v253;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v251 + 16))(v253, v150, v252);
    v156 = v248;
    v157 = v155 + *(int *)(v248 + 84);
    *(_QWORD *)v157 = 0;
    *(_QWORD *)(v157 + 8) = 0;
    *(_BYTE *)(v157 + 16) = 2;
    v158 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v155 + *(int *)(v156 + 88));
    *v158 = sub_1D4306B58;
    v158[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v153;
    sub_1D4306F6C(v150, *(uint64_t (**)(uint64_t, uint64_t))(v154 + 8));
    v159 = sub_1D42B6F40();
    *(_QWORD *)(v159 + 16) = v151;
    v160 = v151;
    v161 = v254;
    sub_1D42FB8E4((uint64_t)sub_1D4306B84, v159, (uint64_t)sub_1D4306BAC, 0, (uint64_t)sub_1D4303D98, 0, v254);
    sub_1D42BE998();
    sub_1D42D7018(v155, &qword_1EFE4AEE0);
    sub_1D42B28FC(&qword_1EFE40410);
    v162 = sub_1D42B6F40();
    *(_OWORD *)(v162 + 16) = xmmword_1D4525300;
    *(_QWORD *)(v162 + 32) = v160;
    *(_QWORD *)&v282 = v162;
    sub_1D451A950();
    v265 = v160;
    sub_1D42CB9F8();
    sub_1D4306C60((uint64_t)&unk_1EFE4AF58);
    sub_1D43071A0((uint64_t)&unk_1EFE4AF60);
    v163 = v255;
    v164 = v257;
    sub_1D451A3E0();
    sub_1D42CB5C8();
    (*(void (**)(uint64_t, uint64_t))(v256 + 8))(v161, v164);
    sub_1D4306C60((uint64_t)&unk_1EFE4AF68);
    sub_1D451A338();
    sub_1D4307058(v163, *(uint64_t (**)(uint64_t, uint64_t))(v259 + 8));
    sub_1D4306C60((uint64_t)&unk_1EFE4AF70);
    v70 = (_BYTE *)sub_1D43072A8();
    sub_1D4306FEC(v261);
    if (qword_1EFE47240 == -1)
      goto LABEL_24;
    goto LABEL_40;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  swift_once();
LABEL_24:
  v165 = objc_msgSend((id)qword_1EFE47238, sel_dictionaryRepresentation);
  sub_1D451A5CC();
  sub_1D42B70A0();
  sub_1D430740C();
  v166 = sub_1D4457124();
  v267 = v70;
  v172 = v166;
  v173 = v167;
  sub_1D42B7204();
  if ((v173 & 1) != 0 || !v172)
  {
    v168 = (void *)sub_1D43075A8();
    v169 = sub_1D451AF74();
    if (sub_1D4307454(v169))
    {
      *(_WORD *)sub_1D42CC940() = 0;
      sub_1D430718C(&dword_1D42A7000, v170, v171, "Movie Remix: Music Detection is enabled.");
      sub_1D42CC934();
    }

    sub_1D4307010();
    sub_1D4307010();
    sub_1D4307010();
    sub_1D4307010();
    sub_1D4307010();
    sub_1D4307010();
    sub_1D4307010();
    sub_1D4362194(v293);
    *(_QWORD *)&v282 = v179;
    v264 = v179;
    v180 = sub_1D42B6F40();
    *(_QWORD *)(v180 + 16) = 0x636973756DLL;
    *(_QWORD *)(v180 + 24) = 0xE500000000000000;
    sub_1D42CB9F8();
    sub_1D43071A0((uint64_t)&qword_1EFE4AF80);
    sub_1D451A3A4();
    sub_1D42FC448();
    sub_1D43070B8();
    sub_1D42B6F8C();
    sub_1D430722C();
    sub_1D4307568();
    sub_1D42BE998();
    sub_1D43072B4();
    sub_1D4307560();
    sub_1D42EA1BC();
    sub_1D4306C60((uint64_t)&unk_1EFE4AF88);
    v181 = v216;
    v182 = v221;
    v183 = v240;
    sub_1D451A38C();
    sub_1D4306C60((uint64_t)&unk_1EFE4AF90);
    v184 = v218;
    sub_1D451A3D4();
    sub_1D4306F6C(v181, *(uint64_t (**)(uint64_t, uint64_t))(v217 + 8));
    sub_1D4306C60((uint64_t)&unk_1EFE4AF98);
    sub_1D451A404();
    sub_1D4306F6C(v184, *(uint64_t (**)(uint64_t, uint64_t))(v223 + 8));
    sub_1D4306C60((uint64_t)&unk_1EFE4AFA0);
    v185 = sub_1D451A2E4();
    sub_1D43071DC(*(uint64_t (**)(uint64_t, uint64_t))(v225 + 8));
    (*(void (**)(uint64_t, uint64_t))(v219 + 8))(v183, v182);
    *(_QWORD *)&v282 = v185;
    sub_1D42CB9F8();
    sub_1D4306C60((uint64_t)&unk_1EFE4AFB0);
    v186 = sub_1D451A2E4();
    sub_1D42BE998();
    v70 = v267;
  }
  else
  {
    v174 = (void *)sub_1D43075A8();
    v175 = sub_1D451AF74();
    if (sub_1D4307454(v175))
    {
      *(_WORD *)sub_1D42CC940() = 0;
      sub_1D430718C(&dword_1D42A7000, v176, v177, "Movie Remix: Music Detection is disabled.");
      sub_1D42CC934();
    }

    *(_QWORD *)&v282 = 0;
    v178 = v210;
    sub_1D451A284();
    sub_1D42B28FC(&qword_1EFE49BB0);
    sub_1D451A26C();
    sub_1D4307058(v178, *(uint64_t (**)(uint64_t, uint64_t))(v211 + 8));
    sub_1D4306C60((uint64_t)&unk_1EFE4AFF8);
    v186 = sub_1D43072A8();
    sub_1D4306FEC(v214);
  }
  v282 = 0u;
  v283 = 0u;
  v261 = sub_1D42B28FC(&qword_1EFE4AFB8);
  sub_1D42B6D94();
  v187 = sub_1D451A260();
  *(_QWORD *)&v282 = v70;
  v264 = v186;
  v281 = v186;
  sub_1D42CB9F8();
  sub_1D4307478((uint64_t)&unk_1EFE4AFB0);
  v281 = sub_1D451A2E4();
  sub_1D42CB9F8();
  sub_1D4307478((uint64_t)&unk_1EFE4AFC8);
  v188 = v227;
  sub_1D451A314();
  sub_1D42FC448();
  sub_1D42B28FC(&qword_1EFE4AFD0);
  sub_1D4306C60((uint64_t)&unk_1EFE4AFD8);
  v189 = v230;
  sub_1D451A3A4();
  sub_1D4307058(v188, *(uint64_t (**)(uint64_t, uint64_t))(v228 + 8));
  *(_QWORD *)&v282 = 0;
  *((_QWORD *)&v282 + 1) = 0xE000000000000000;
  sub_1D451B400();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v282 = 0xD000000000000012;
  *((_QWORD *)&v282 + 1) = 0x80000001D4551F40;
  sub_1D4306C10((uint64_t)&qword_1EFE4CB00);
  v190 = (uint64_t)v272;
  v191 = v280;
  v260 = v192;
  sub_1D451B7C0();
  sub_1D451A794();
  sub_1D42CB208();
  sub_1D451A794();
  sub_1D4406F50();
  sub_1D42CB208();
  (*(void (**)(uint64_t, uint64_t))(v231 + 8))(v189, v232);
  sub_1D4306C60((uint64_t)&unk_1EFE4AFE0);
  sub_1D4307010();
  v193 = sub_1D451A344();
  swift_release_n();
  sub_1D4306FEC(v234);
  v262 = v187;
  *(_QWORD *)&v282 = v187;
  sub_1D4306C60((uint64_t)&unk_1EFE4AFE8);
  sub_1D4307398();
  sub_1D451A2F0();
  sub_1D4306C60((uint64_t)&unk_1EFE4AFF0);
  v261 = sub_1D43072A8();
  sub_1D4306FEC(v237);
  v194 = v241;
  v273(v241, (_BYTE *)v190, v191);
  sub_1D4307010();
  v195 = sub_1D43075A8();
  v196 = sub_1D451AF74();
  if (os_log_type_enabled(v195, v196))
  {
    v197 = (uint8_t *)sub_1D42CC940();
    v198 = sub_1D42CC940();
    v273 = (void (*)(_BYTE *, _BYTE *, uint64_t))v193;
    *(_QWORD *)&v282 = v198;
    *(_DWORD *)v197 = 136446210;
    v199 = sub_1D451B7C0();
    v281 = sub_1D43D72EC(v199, v200, (uint64_t *)&v282);
    sub_1D451B1A8();
    sub_1D42B7204();
    sub_1D4307464((uint64_t)v241);
    _os_log_impl(&dword_1D42A7000, v195, v196, "Successfully run movie remix %{public}s", v197, 0xCu);
    swift_arrayDestroy();
    sub_1D42CC934();
  }

  sub_1D4307324();
  swift_release();
  swift_release();
  swift_release();
  sub_1D430722C();
  sub_1D4307568();
  swift_release();
  sub_1D43072B4();
  sub_1D430758C();
  sub_1D4307584();
  sub_1D4307464((uint64_t)v194);
  sub_1D430757C();
  sub_1D4307560();
  swift_release();
  sub_1D42EA438();
  v201 = v278;
  sub_1D42BE998();
  sub_1D4307464(v190);
  v202 = v239;
  v203 = v261;
  *v239 = v193;
  v202[1] = v203;
  v202[2] = (uint64_t)sub_1D4306C50;
  v202[3] = v201;
  v202[4] = (uint64_t)sub_1D4306C58;
  v202[5] = v201;
LABEL_21:
  sub_1D42CB3F8();
}

uint64_t sub_1D4303364@<X0>(uint64_t (*a1)(uint64_t)@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X3>, _QWORD *a4@<X8>)
{
  void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void *);
  uint64_t v12;
  void (*v13)(_QWORD);
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void **v19;
  int v20;
  _BYTE *v21;
  uint64_t result;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  _QWORD v29[3];
  void *v30;
  void *v31;
  uint64_t v32;

  v8 = swift_retain();
  v9 = a1(v8);
  if (v4)
  {

    sub_1D42B28FC(&qword_1EFE4A090);
    swift_allocObject();
    v10 = sub_1D446AF74();
  }
  else
  {
    v10 = v9;
  }
  swift_release();
  v12 = a3[1];
  v11 = (void (*)(void *))a3[2];
  v13 = (void (*)(_QWORD))a3[4];
  v29[0] = v10;
  v29[1] = a2;
  while (1)
  {
    v14 = swift_retain();
    v15 = (void *)MEMORY[0x1D825DB34](v14);
    if (!*(_QWORD *)(v10 + 16))
      break;
    v30 = *(void **)(v10 + 16);
    sub_1D4468C20(&v30, (uint64_t)v29, &v31);
    v16 = v31;
    objc_autoreleasePoolPop(v15);
    swift_release();
    if (!v16)
      goto LABEL_9;
    v11(v16);

  }
  sub_1D42B28FC(&qword_1EFE4A098);
  sub_1D4306C60((uint64_t)&qword_1EFE4A0A0);
  v17 = (void *)swift_allocError();
  swift_willThrow();
  objc_autoreleasePoolPop(v15);
  swift_release();

LABEL_9:
  v32 = v12;
  sub_1D446AF80();
  swift_release();
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 32) = 0u;
  *(_OWORD *)(v18 + 16) = 0u;
  v19 = (void **)(v18 + 16);
  *(_BYTE *)(v18 + 48) = -1;
  v29[0] = v12;
  swift_retain_n();
  sub_1D43067EC((uint64_t)&v32);
  sub_1D42B28FC(&qword_1EFE4AE78);
  sub_1D4306C60((uint64_t)&unk_1EFE4AE80);
  sub_1D451A344();
  swift_release_n();
  swift_release();
  v13(0);
  sub_1D451A1F4();
  swift_beginAccess();
  v20 = *(unsigned __int8 *)(v18 + 48);
  if (v20 == 255)
  {
    sub_1D4306894();
    swift_allocError();
    *v21 = 3;
    swift_willThrow();
    swift_release();
    return swift_release();
  }
  else
  {
    v23 = *v19;
    if ((v20 & 1) != 0)
    {
      v31 = *v19;
      v27 = v23;
      sub_1D42B28FC(&qword_1EFE49BB0);
      swift_willThrowTypedImpl();
      swift_release();
      return swift_release();
    }
    else
    {
      v24 = *(_QWORD *)(v18 + 24);
      v25 = *(_QWORD *)(v18 + 32);
      v26 = *(_QWORD *)(v18 + 40);
      swift_bridgeObjectRetain();
      swift_release();
      result = swift_release();
      *a4 = v23;
      a4[1] = v24;
      a4[2] = v25;
      a4[3] = v26;
    }
  }
  return result;
}

void sub_1D43036C0(void **a1, uint64_t a2)
{
  void *v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  id v9;

  v2 = *a1;
  if (*a1)
  {
    swift_beginAccess();
    v4 = *(void **)(a2 + 16);
    v5 = *(_QWORD *)(a2 + 24);
    v6 = *(_QWORD *)(a2 + 32);
    v7 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a2 + 16) = v2;
    *(_QWORD *)(a2 + 24) = 0;
    *(_QWORD *)(a2 + 32) = 0;
    *(_QWORD *)(a2 + 40) = 0;
    v8 = *(_BYTE *)(a2 + 48);
    *(_BYTE *)(a2 + 48) = 1;
    v9 = v2;
    sub_1D43068D0(v4, v5, v6, v7, v8);
  }
}

void sub_1D4303754(__int128 *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v9 = *a1;
  v4 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  swift_beginAccess();
  v5 = *(void **)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 32) = v4;
  *(_QWORD *)(a2 + 40) = v3;
  LOBYTE(v4) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a2 + 48) = 0;
  swift_bridgeObjectRetain();
  sub_1D43068D0(v5, v6, v7, v8, v4);
}

id sub_1D43037EC@<X0>(void **a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unsigned int v18;
  id v19;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_1D4519D20();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  if (qword_1EFE40338 != -1)
    swift_once();
  v11 = sub_1D451A014();
  sub_1D42CC880(v11, (uint64_t)qword_1EFEA7700);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  v22 = v10;
  v12 = sub_1D4519FFC();
  v13 = sub_1D451AF74();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v15 = swift_slowAlloc();
    v24 = v15;
    *(_DWORD *)v14 = 136446466;
    sub_1D4306C10((uint64_t)&qword_1EFE4CB00);
    v16 = sub_1D451B7C0();
    v23 = sub_1D43D72EC(v16, v17, &v24);
    sub_1D451B1A8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(_WORD *)(v14 + 12) = 1026;
    v18 = objc_msgSend(v22, sel_frameLength);

    LODWORD(v23) = v18;
    sub_1D451B1A8();

    _os_log_impl(&dword_1D42A7000, v12, v13, "[PUB] movie remix %{public}s: received first buffer with frame count %{public}u", (uint8_t *)v14, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1D825E524](v15, -1, -1);
    MEMORY[0x1D825E524](v14, -1, -1);

  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  v19 = v22;
  *a3 = v22;
  return v19;
}

void sub_1D4303A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  const char *v23;
  uint64_t (*v24)(void);
  uint64_t (*v25)(void);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  _QWORD v40[2];
  uint64_t v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;

  sub_1D42BE910();
  a19 = v20;
  a20 = v21;
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v43 = v28;
  v29 = sub_1D42EA2A8();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v32 = (char *)v40 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFE40338 != -1)
    swift_once();
  v33 = sub_1D430710C();
  sub_1D42CC880(v33, (uint64_t)qword_1EFEA7700);
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v32, v27, v29);
  v34 = sub_1D4519FFC();
  v35 = v25();
  if (os_log_type_enabled(v34, v35))
  {
    v36 = sub_1D42CC940();
    v42 = v23;
    v37 = v36;
    v41 = sub_1D42CC940();
    a10 = v41;
    *(_DWORD *)v37 = 136446466;
    v40[1] = v37 + 4;
    sub_1D4306C10((uint64_t)&qword_1EFE4CB00);
    v38 = sub_1D451B7C0();
    v44 = sub_1D43D72EC(v38, v39, &a10);
    sub_1D451B1A8();
    sub_1D42B7204();
    sub_1D43071DC(*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
    *(_WORD *)(v37 + 12) = 2050;
    v44 = v43;
    sub_1D451B1A8();
    _os_log_impl(&dword_1D42A7000, v34, v35, v42, (uint8_t *)v37, 0x16u);
    swift_arrayDestroy();
    sub_1D42CC934();
  }
  sub_1D43071DC(*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));

  sub_1D42BE844();
}

void sub_1D4303C78(void **a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1D44AA2D4(*a1);
  if (!v2)
  {
    v8 = v4;
    v9 = v5;
    v10 = v6;
    if ((v7 & 1) != 0)
    {
      if ((unsigned __int128)(v5 * (__int128)v6) >> 64 != (v5 * v6) >> 63)
      {
        __break(1u);
        return;
      }
      v8 = sub_1D44AB1B0(v5 * v6, v4, v5, v6);
    }
    *a2 = v8;
    a2[1] = v9;
    a2[2] = v10;
  }
}

uint64_t sub_1D4303CE8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  _BYTE *v3;

  sub_1D4306894();
  result = swift_allocError();
  *a1 = result;
  *v3 = 5;
  return result;
}

id sub_1D4303D2C(void *a1)
{
  void *v2;
  id v3;

  v2 = (void *)sub_1D451A6C8();
  v3 = sub_1D44F590C(a1, v2);

  return v3;
}

uint64_t sub_1D4303D98(void *a1)
{
  uint64_t v2;
  id v3;
  uint64_t v5;

  sub_1D42B28FC(&qword_1EFE40410);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1D4525300;
  *(_QWORD *)(v2 + 32) = a1;
  v5 = v2;
  sub_1D451A950();
  v3 = a1;
  return v5;
}

void sub_1D4303E04(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(double *)(a1 + 8);
  v5 = qword_1EFE40338;
  v6 = *(id *)a1;
  if (v5 != -1)
    swift_once();
  v7 = sub_1D451A014();
  sub_1D42CC880(v7, (uint64_t)qword_1EFEA7700);
  v8 = sub_1D4519FFC();
  v9 = sub_1D451AF74();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v10 = 134349056;
    *(double *)&v13 = v4;
    sub_1D451B1A8();
    _os_log_impl(&dword_1D42A7000, v8, v9, "Movie remix, generating final result. Music detected? %{public}f", v10, 0xCu);
    MEMORY[0x1D825E524](v10, -1, -1);
  }

  sub_1D4300AB4(v6, &v13, v4);
  if (!v2)
  {
    v11 = v14;
    v12 = v15;
    *(_OWORD *)a2 = v13;
    *(_QWORD *)(a2 + 16) = v11;
    *(_QWORD *)(a2 + 24) = v12;
  }
}

uint64_t sub_1D4303F64()
{
  return sub_1D451A248();
}

uint64_t sub_1D4303F98()
{
  return sub_1D451A254();
}

uint64_t sub_1D4303FCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_QWORD *)(a2 + 16) = v3;
  *(_QWORD *)(a2 + 24) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D4303FE4()
{
  return sub_1D451A218();
}

void sub_1D4304014(void *a1)
{
  id v2;

  if (a1)
  {
    v2 = a1;
    sub_1D451A20C();

  }
  else
  {
    sub_1D451A20C();
  }
}

uint64_t sub_1D4304068@<X0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t result;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  _QWORD v34[5];
  _QWORD v35[4];
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;

  v4 = *a1;
  v5 = a1[1];
  sub_1D43066DC();
  if (v33)
  {
    v13 = sub_1D42E33E0(&v32, (uint64_t)v34);
    sub_1D4307484(v13, v14, v15, v16, v17);
  }
  else
  {
    sub_1D4307490(v6, &qword_1EFE4ADD8, v7, v8, v9, v10, v11, v12, v32);
    if (qword_1EFE48E58 != -1)
      swift_once();
    v18 = (void *)qword_1EFEA7770;
    v19 = qword_1EFEA7778;
    v20 = qword_1EFEA7788;
    v39 = qword_1EFEA7780;
    v21 = qword_1EFEA7790;
    v22 = byte_1EFEA7798;
    v34[3] = &unk_1E979AD08;
    v34[4] = &off_1E979AC20;
    v23 = sub_1D42B6F40();
    v34[0] = v23;
    if ((v22 & 1) != 0)
    {
      *(_QWORD *)&v32 = v18;
      v28 = v18;
      sub_1D42B28FC(&qword_1EFE49BB0);
      swift_willThrowTypedImpl();
      return sub_1D4306718((uint64_t)v34);
    }
    *(_QWORD *)(v23 + 16) = v18;
    *(_QWORD *)(v23 + 24) = v19;
    *(_BYTE *)(v23 + 32) = v39 & 1;
    *(_QWORD *)(v23 + 40) = v20;
    *(_QWORD *)(v23 + 48) = v21;
    sub_1D4307484(v23, v24, v25, v26, v27);
    swift_retain();
    sub_1D42EA340();
    sub_1D42BE9A0();
  }
  sub_1D42B5528(v35, v35[3]);
  v34[0] = v4;
  v34[1] = v5;
  sub_1D43016EC();
  result = sub_1D42B5400((uint64_t)v35);
  if (!v2)
  {
    v30 = v37;
    v31 = v38;
    *a2 = v36;
    a2[1] = v30;
    a2[2] = v31;
  }
  return result;
}

uint64_t run(_:)(uint64_t a1, _OWORD *a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 104) = a1;
  *(_OWORD *)(v2 + 112) = *a2;
  return swift_task_switch();
}

uint64_t sub_1D430423C()
{
  uint64_t v0;
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6[3];

  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)v6 = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 80) = 0u;
  *(_QWORD *)(v0 + 96) = 0;
  sub_1D4304068(v6, (_OWORD *)(v0 + 16));
  v1 = *(_OWORD **)(v0 + 104);
  v4 = *(_OWORD *)(v0 + 32);
  v5 = *(_OWORD *)(v0 + 16);
  v3 = *(_OWORD *)(v0 + 48);
  sub_1D42D7018(v0 + 64, &qword_1EFE4ADD8);
  *v1 = v5;
  v1[1] = v4;
  v1[2] = v3;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D430431C()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + OBJC_IVAR___SNMovieRemixDSPParameter_key);
}

uint64_t sub_1D4304350(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + OBJC_IVAR___SNMovieRemixDSPParameter_key) = result;
  return result;
}

float sub_1D4304380()
{
  uint64_t v0;

  return *(float *)(v0 + OBJC_IVAR___SNMovieRemixDSPParameter_value);
}

void sub_1D43043B0(float a1)
{
  uint64_t v1;

  *(float *)(v1 + OBJC_IVAR___SNMovieRemixDSPParameter_value) = a1;
}

id sub_1D43043C0(int a1, float a2)
{
  char *v2;
  objc_class *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  objc_super v13;

  v5 = (objc_class *)sub_1D42B7104();
  *(_DWORD *)&v2[OBJC_IVAR___SNMovieRemixDSPParameter_key] = a1;
  *(float *)&v2[OBJC_IVAR___SNMovieRemixDSPParameter_value] = a2;
  v13.receiver = v2;
  v13.super_class = v5;
  return sub_1D42CB364((uint64_t)v5, sel_init, v6, v7, v8, v9, v10, v11, v13);
}

void SNMovieRemixDSPParameter.init()()
{
  sub_1D43070D0();
  __break(1u);
}

uint64_t SNMovieRemixFinalResult.algorithmVersion.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + OBJC_IVAR___SNMovieRemixFinalResult_impl);
}

uint64_t SNMovieRemixFinalResult.algorithmVersion.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + OBJC_IVAR___SNMovieRemixFinalResult_impl) = result;
  return result;
}

uint64_t (*SNMovieRemixFinalResult.algorithmVersion.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR___SNMovieRemixFinalResult_impl;
  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(v1 + v2);
  return sub_1D43044D8;
}

uint64_t sub_1D43044D8(uint64_t result)
{
  *(_DWORD *)(*(_QWORD *)result + *(_QWORD *)(result + 8)) = *(_DWORD *)(result + 16);
  return result;
}

float SNMovieRemixFinalResult.dialogueGain.getter()
{
  uint64_t v0;

  return *(float *)(v0 + OBJC_IVAR___SNMovieRemixFinalResult_impl + 4);
}

void SNMovieRemixFinalResult.dialogueGain.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + OBJC_IVAR___SNMovieRemixFinalResult_impl + 4) = a1;
}

float (*SNMovieRemixFinalResult.dialogueGain.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR___SNMovieRemixFinalResult_impl;
  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(v1 + v2 + 4);
  return sub_1D4304578;
}

float sub_1D4304578(uint64_t a1)
{
  float result;

  result = *(float *)(a1 + 16);
  *(float *)(*(_QWORD *)a1 + *(_QWORD *)(a1 + 8) + 4) = result;
  return result;
}

float SNMovieRemixFinalResult.ambienceGain.getter()
{
  uint64_t v0;

  return *(float *)(v0 + OBJC_IVAR___SNMovieRemixFinalResult_impl + 8);
}

void SNMovieRemixFinalResult.ambienceGain.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + OBJC_IVAR___SNMovieRemixFinalResult_impl + 8) = a1;
}

float (*SNMovieRemixFinalResult.ambienceGain.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR___SNMovieRemixFinalResult_impl;
  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(v1 + v2 + 8);
  return sub_1D430461C;
}

float sub_1D430461C(uint64_t a1)
{
  float result;

  result = *(float *)(a1 + 16);
  *(float *)(*(_QWORD *)a1 + *(_QWORD *)(a1 + 8) + 8) = result;
  return result;
}

float SNMovieRemixFinalResult.dialogueLoudness.getter()
{
  uint64_t v0;

  return *(float *)(v0 + OBJC_IVAR___SNMovieRemixFinalResult_impl + 12);
}

void SNMovieRemixFinalResult.dialogueLoudness.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + OBJC_IVAR___SNMovieRemixFinalResult_impl + 12) = a1;
}

float (*SNMovieRemixFinalResult.dialogueLoudness.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR___SNMovieRemixFinalResult_impl;
  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(v1 + v2 + 12);
  return sub_1D43046C0;
}

float sub_1D43046C0(uint64_t a1)
{
  float result;

  result = *(float *)(a1 + 16);
  *(float *)(*(_QWORD *)a1 + *(_QWORD *)(a1 + 8) + 12) = result;
  return result;
}

float SNMovieRemixFinalResult.ambienceLoudness.getter()
{
  uint64_t v0;

  return *(float *)(v0 + OBJC_IVAR___SNMovieRemixFinalResult_impl + 16);
}

void SNMovieRemixFinalResult.ambienceLoudness.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + OBJC_IVAR___SNMovieRemixFinalResult_impl + 16) = a1;
}

float (*SNMovieRemixFinalResult.ambienceLoudness.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR___SNMovieRemixFinalResult_impl;
  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(v1 + v2 + 16);
  return sub_1D4304764;
}

float sub_1D4304764(uint64_t a1)
{
  float result;

  result = *(float *)(a1 + 16);
  *(float *)(*(_QWORD *)a1 + *(_QWORD *)(a1 + 8) + 16) = result;
  return result;
}

float SNMovieRemixFinalResult.recordingLoudness.getter()
{
  uint64_t v0;

  return *(float *)(v0 + OBJC_IVAR___SNMovieRemixFinalResult_impl + 20);
}

void SNMovieRemixFinalResult.recordingLoudness.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + OBJC_IVAR___SNMovieRemixFinalResult_impl + 20) = a1;
}

float (*SNMovieRemixFinalResult.recordingLoudness.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR___SNMovieRemixFinalResult_impl;
  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(v1 + v2 + 20);
  return sub_1D4304808;
}

float sub_1D4304808(uint64_t a1)
{
  float result;

  result = *(float *)(a1 + 16);
  *(float *)(*(_QWORD *)a1 + *(_QWORD *)(a1 + 8) + 20) = result;
  return result;
}

uint64_t SNMovieRemixFinalResult.dspParameters.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  objc_class *v4;
  float *v5;
  int v6;
  float v7;
  id v8;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___SNMovieRemixFinalResult_impl + 24);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v10 = MEMORY[0x1E0DEE9D8];
    sub_1D42CB7B8();
    sub_1D451B49C();
    v4 = (objc_class *)type metadata accessor for SNMovieRemixDSPParameter();
    v5 = (float *)(v1 + 36);
    do
    {
      v6 = *((_DWORD *)v5 - 1);
      v7 = *v5;
      v5 += 2;
      v8 = objc_allocWithZone(v4);
      sub_1D43043C0(v6, v7);
      sub_1D451B484();
      sub_1D451B4A8();
      sub_1D451B4B4();
      sub_1D451B490();
      --v2;
    }
    while (v2);
    v3 = v10;
    sub_1D42BE8B4();
  }
  return v3;
}

void sub_1D4304958()
{
  uint64_t v0;
  objc_class *v1;
  char *v2;
  int v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  objc_super v12;

  v2 = (char *)sub_1D42B7238();
  v3 = *(_DWORD *)(v0 + 20);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = &v2[OBJC_IVAR___SNMovieRemixFinalResult_impl];
  *(_DWORD *)v5 = *(_DWORD *)v0;
  *(_OWORD *)(v5 + 4) = *(_OWORD *)(v0 + 4);
  *((_DWORD *)v5 + 5) = v3;
  *((_QWORD *)v5 + 3) = v4;
  v12.receiver = v2;
  v12.super_class = v1;
  sub_1D42CB364((uint64_t)v2, sel_init, v6, v7, v8, v9, v10, v11, v12);
  sub_1D42CB964();
}

void SNMovieRemixFinalResult.init()()
{
  sub_1D43070D0();
  __break(1u);
}

void sub_1D43049F8()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  objc_class *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  objc_super v11;

  sub_1D4307354();
  v3 = (objc_class *)sub_1D42B7104();
  v4 = &v1[OBJC_IVAR___SNMovieRemixRequest_impl];
  *(_QWORD *)v4 = v0;
  *((_QWORD *)v4 + 1) = v2;
  v11.receiver = v1;
  v11.super_class = v3;
  sub_1D42CB364((uint64_t)v3, sel_init, v5, v6, v7, v8, v9, v10, v11);
  sub_1D42CB758();
}

void SNMovieRemixRequest.init()()
{
  sub_1D43070D0();
  __break(1u);
}

void sub_1D4304A98()
{
  _OWORD *v0;
  objc_class *v1;
  char *v2;
  char *v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  objc_super v11;

  v2 = (char *)sub_1D42B7238();
  v3 = &v2[OBJC_IVAR___SNMovieRemixSession_impl];
  v4 = v0[1];
  *(_OWORD *)v3 = *v0;
  *((_OWORD *)v3 + 1) = v4;
  *((_OWORD *)v3 + 2) = v0[2];
  v11.receiver = v2;
  v11.super_class = v1;
  sub_1D42CB364((uint64_t)v2, sel_init, v5, v6, v7, v8, v9, v10, v11);
  sub_1D42CB964();
}

id sub_1D4304AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  objc_class *v12;
  char *v13;
  objc_super v15;
  uint64_t v16;

  v16 = *(_QWORD *)(v4 + OBJC_IVAR___SNMovieRemixSession_impl + 8);
  v9 = sub_1D42B8DB4();
  *(_QWORD *)(v9 + 16) = a3;
  *(_QWORD *)(v9 + 24) = a4;
  v10 = sub_1D42B8DB4();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  sub_1D42BE934();
  sub_1D42E3CA4();
  sub_1D42BE984();
  sub_1D42B28FC(&qword_1EFE4AE78);
  sub_1D4306C60((uint64_t)&unk_1EFE4AE80);
  v11 = sub_1D451A344();
  swift_release();
  sub_1D42CFC14();
  swift_release();
  v12 = (objc_class *)type metadata accessor for AnyCancellableWrapper();
  v13 = (char *)objc_allocWithZone(v12);
  *(_QWORD *)&v13[OBJC_IVAR____TtC13SoundAnalysis21AnyCancellableWrapper_wrapped] = v11;
  v15.receiver = v13;
  v15.super_class = v12;
  return objc_msgSendSuper2(&v15, sel_init);
}

void sub_1D4304C08(void **a1, void (*a2)(void *))
{
  void *v3;
  id v4;

  v3 = *a1;
  if (*a1)
  {
    v4 = v3;
    a2(v3);

  }
  else
  {
    a2(0);
  }
}

void sub_1D4304C64(uint64_t a1, void (*a2)(void))
{
  void *v3;
  id v4;

  type metadata accessor for SNMovieRemixFinalResult();
  swift_bridgeObjectRetain();
  sub_1D4304958();
  v4 = v3;
  a2();

}

uint64_t sub_1D4304DAC(uint64_t a1)
{
  uint64_t v1;
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(v1 + OBJC_IVAR___SNMovieRemixSession_impl + 16);
  sub_1D42B8F24();
  sub_1D42BE984();
  sub_1D42BE934();
  sub_1D42BE9A0();
  v3(a1);
  swift_release();
  sub_1D42B8F48();
  swift_release();
  return sub_1D43070C0();
}

uint64_t sub_1D4304E68(void *a1)
{
  uint64_t v1;
  void (*v2)(void *);
  id v4;

  v2 = *(void (**)(void *))(v1 + OBJC_IVAR___SNMovieRemixSession_impl + 32);
  if (a1)
  {
    v4 = a1;
    sub_1D42E3CA4();
    sub_1D42B8F24();
    sub_1D42BE984();
    sub_1D42BE934();
    v2(a1);

  }
  else
  {
    sub_1D42E3CA4();
    sub_1D42B8F24();
    sub_1D42BE984();
    sub_1D42BE934();
    v2(0);
  }
  sub_1D42B8F48();
  swift_release();
  sub_1D42CFC14();
  return sub_1D43070C0();
}

void SNMovieRemixSession.init()()
{
  sub_1D43070D0();
  __break(1u);
}

void sub_1D4304FB8(uint64_t a1)
{
  uint64_t v1;
  _OWORD v2[3];
  _OWORD v3[3];

  v2[0] = *(_OWORD *)(a1 + OBJC_IVAR___SNMovieRemixRequest_impl);
  sub_1D4304068((uint64_t *)v2, v3);
  if (!v1)
  {
    type metadata accessor for SNMovieRemixSession();
    v2[0] = v3[0];
    v2[1] = v3[1];
    v2[2] = v3[2];
    sub_1D4304A98();
  }
}

void sub_1D4305024(uint64_t a1, void *aBlock)
{
  void *v3;
  _OWORD v4[2];

  v3 = _Block_copy(aBlock);
  memset(v4, 0, sizeof(v4));
  sub_1D4305084(a1, (int)v4, v3);
  _Block_release(v3);
  sub_1D42D7018((uint64_t)v4, &qword_1EFE47160);
}

void sub_1D4305084(uint64_t a1, int a2, void *aBlock)
{
  void (**v4)(void *, void *, _QWORD);
  void *v5;
  void *v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  _OWORD v10[2];
  uint64_t v11;

  v4 = (void (**)(void *, void *, _QWORD))_Block_copy(aBlock);
  sub_1D43066DC();
  if (v8)
  {
    sub_1D42B293C(&v7, &v9);
    sub_1D42B28FC(&qword_1EFE4AE70);
    swift_dynamicCast();
  }
  else
  {
    sub_1D42D7018((uint64_t)&v7, &qword_1EFE47160);
    memset(v10, 0, sizeof(v10));
    v11 = 0;
  }
  sub_1D4304FB8(a1);
  v6 = v5;
  sub_1D42D7018((uint64_t)v10, &qword_1EFE4ADD8);
  v4[2](v4, v6, 0);
  _Block_release(v4);

}

uint64_t sub_1D43052B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1D4304FB8(a1);
  v2 = v1;
  sub_1D4307490(v1, &qword_1EFE4ADD8, v3, v4, v5, v6, v7, v8, 0);
  return v2;
}

void sub_1D4305384(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[32];
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  v14 = 0;
  v12 = 0u;
  v13 = 0u;
  v2 = sub_1D4301244(a1, (uint64_t)v11);
  if (!v1)
  {
    type metadata accessor for SNMovieRemixFinalResult();
    sub_1D4306F74();
  }
  sub_1D430732C(v2, &qword_1EFE4ADD8, v3, v4, v5, v6, v7, v8, v9, v10);
  sub_1D4307180();
  sub_1D4307500();
}

void sub_1D43054D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  _OWORD v19[4];
  uint64_t v20;

  sub_1D43066DC();
  if (v18)
  {
    sub_1D42B293C(&v17, v19);
    sub_1D42B28FC(&qword_1EFE4AE70);
    swift_dynamicCast();
  }
  else
  {
    sub_1D4307490(v1, &qword_1EFE47160, v2, v3, v4, v5, v6, v7, v17);
    memset(&v19[2], 0, 32);
    v20 = 0;
  }
  v8 = sub_1D4307180();
  v10 = sub_1D4301244(v8, v9);
  if (!v0)
  {
    type metadata accessor for SNMovieRemixFinalResult();
    sub_1D4306F74();
  }
  sub_1D430732C(v10, &qword_1EFE4ADD8, v11, v12, v13, v14, v15, v16, v17, *((uint64_t *)&v17 + 1));
  sub_1D4307180();
  sub_1D4307500();
}

id SNMovieRemix.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id SNMovieRemix.init()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v8;

  v8.receiver = v0;
  v8.super_class = (Class)sub_1D42B7104();
  return sub_1D42CB364((uint64_t)v8.super_class, sel_init, v1, v2, v3, v4, v5, v6, v8);
}

id _s13SoundAnalysis24SNMovieRemixDSPParameterCfD_0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_1D42B7104();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D4305790(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  unint64_t v8;
  char v9;
  _OWORD v10[5];
  _OWORD __src[6];

  v4 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v4)
  {
    v5 = 0;
    v6 = 32;
    while (1)
    {
      result = sub_1D42D6F5C(a1 + v6, (uint64_t)v10);
      v8 = *(_QWORD *)(a2 + 16);
      if (v5 == v8)
      {
        sub_1D42D6F98((uint64_t)v10);
        goto LABEL_9;
      }
      if (v5 >= v8)
        break;
      __src[0] = v10[0];
      __src[1] = v10[1];
      *(_QWORD *)&__src[2] = *(_QWORD *)&v10[2];
      sub_1D42D6F5C(a2 + v6, (uint64_t)&__src[2] + 8);
      memcpy(v10, __src, sizeof(v10));
      v9 = MEMORY[0x1D825CCDC](v10, (char *)&v10[2] + 8);
      sub_1D42D7018((uint64_t)v10, qword_1EFE4B008);
      if ((v9 & 1) == 0)
      {
        sub_1D42CB208();
        sub_1D42B7204();
        return 0;
      }
      ++v5;
      v6 += 40;
      if (v4 == v5)
        goto LABEL_9;
    }
    __break(1u);
  }
  else
  {
LABEL_9:
    sub_1D42CB208();
    sub_1D42B7204();
    return 1;
  }
  return result;
}

_QWORD *sub_1D43058C0(void *a1, uint64_t *a2, _QWORD *(*a3)(void **__return_ptr, void **))
{
  uint64_t v4;
  _QWORD *result;
  void *v6;
  void *v7;

  v7 = a1;
  v4 = *a2;
  if (*a2 < 1)
  {
    v6 = a1;
    result = a1;
  }
  else
  {
    result = a3(&v6, &v7);
  }
  if (__OFSUB__(v4, 1))
  {
    __break(1u);
  }
  else
  {
    *a2 = v4 - 1;
    return v6;
  }
  return result;
}

void *sub_1D430592C(void *a1, _QWORD *a2, uint64_t (*a3)(void **), uint64_t a4, uint64_t a5, void (*a6)(void))
{
  uint64_t v6;
  uint64_t v11;
  BOOL v12;
  void *result;
  id v14;
  void *v15;

  v15 = a1;
  v11 = a3(&v15);
  if (v6)
    return a1;
  v12 = __OFADD__(*a2, v11);
  result = (void *)(*a2 + v11);
  if (!v12)
  {
    *a2 = result;
    if ((uint64_t)result >= a5)
    {
      a6();
      *a2 = 0;
    }
    v14 = a1;
    return a1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D43059C8(void *a1)
{
  return objc_msgSend(a1, sel_frameLength);
}

uint64_t sub_1D43059F8(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_resourcePath);

  if (!v2)
    return 0;
  v3 = sub_1D451A6EC();

  return v3;
}

unint64_t sub_1D4305A64()
{
  unint64_t result;

  result = qword_1EFE4AD98;
  if (!qword_1EFE4AD98)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45291D0, &type metadata for MovieRemix.FinalResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4AD98);
  }
  return result;
}

unint64_t sub_1D4305AA0()
{
  unint64_t result;

  result = qword_1EFE4ADB0;
  if (!qword_1EFE4ADB0)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for MovieRemix.DSPParameterTuple, &type metadata for MovieRemix.DSPParameterTuple);
    atomic_store(result, (unint64_t *)&qword_1EFE4ADB0);
  }
  return result;
}

void sub_1D4305ADC(uint64_t a1)
{
  unint64_t *v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t v7;

  if (!sub_1D42CBA5C(a1))
  {
    v4 = v3;
    v5 = v2;
    v6 = sub_1D42B8B10(&qword_1EFE4ADA0);
    v7 = v5();
    atomic_store(MEMORY[0x1D825E41C](v4, v6, &v7), v1);
  }
  sub_1D42CB758();
}

unint64_t sub_1D4305B34()
{
  unint64_t result;

  result = qword_1EFE4ADC8;
  if (!qword_1EFE4ADC8)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for MovieRemix.DSPParameterTuple, &type metadata for MovieRemix.DSPParameterTuple);
    atomic_store(result, (unint64_t *)&qword_1EFE4ADC8);
  }
  return result;
}

uint64_t type metadata accessor for SNMovieRemixDSPParameter()
{
  return objc_opt_self();
}

unint64_t sub_1D4305B94()
{
  unint64_t result;

  result = qword_1EFE4ADE8;
  if (!qword_1EFE4ADE8)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for MovieRemix.Request, &type metadata for MovieRemix.Request);
    atomic_store(result, (unint64_t *)&qword_1EFE4ADE8);
  }
  return result;
}

unint64_t sub_1D4305BD4()
{
  unint64_t result;

  result = qword_1EFE4ADF0;
  if (!qword_1EFE4ADF0)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for MovieRemix.DSPParameterTuple, &type metadata for MovieRemix.DSPParameterTuple);
    atomic_store(result, (unint64_t *)&qword_1EFE4ADF0);
  }
  return result;
}

unint64_t sub_1D4305C14()
{
  unint64_t result;

  result = qword_1EFE4ADF8;
  if (!qword_1EFE4ADF8)
  {
    result = MEMORY[0x1D825E41C](&protocol conformance descriptor for MovieRemix.FinalResult, &type metadata for MovieRemix.FinalResult);
    atomic_store(result, (unint64_t *)&qword_1EFE4ADF8);
  }
  return result;
}

void sub_1D4305C50()
{
  _DWORD *v0;

  sub_1D42CB12C();
  *v0 = SNMovieRemixFinalResult.algorithmVersion.getter();
  sub_1D42B6E24();
}

void sub_1D4305C70(unsigned int *a1)
{
  SNMovieRemixFinalResult.algorithmVersion.setter(*a1);
  sub_1D42B6E24();
}

void sub_1D4305C90()
{
  float *v0;

  sub_1D42CB12C();
  *v0 = SNMovieRemixFinalResult.dialogueGain.getter();
  sub_1D42B6E24();
}

void sub_1D4305CB0(uint64_t a1)
{
  float v1;

  v1 = sub_1D43072BC(a1);
  SNMovieRemixFinalResult.dialogueGain.setter(v1);
  sub_1D42B6E24();
}

void sub_1D4305CCC()
{
  float *v0;

  sub_1D42CB12C();
  *v0 = SNMovieRemixFinalResult.ambienceGain.getter();
  sub_1D42B6E24();
}

void sub_1D4305CEC(uint64_t a1)
{
  float v1;

  v1 = sub_1D43072BC(a1);
  SNMovieRemixFinalResult.ambienceGain.setter(v1);
  sub_1D42B6E24();
}

void sub_1D4305D08()
{
  float *v0;

  sub_1D42CB12C();
  *v0 = SNMovieRemixFinalResult.dialogueLoudness.getter();
  sub_1D42B6E24();
}

void sub_1D4305D28(uint64_t a1)
{
  float v1;

  v1 = sub_1D43072BC(a1);
  SNMovieRemixFinalResult.dialogueLoudness.setter(v1);
  sub_1D42B6E24();
}

void sub_1D4305D44()
{
  float *v0;

  sub_1D42CB12C();
  *v0 = SNMovieRemixFinalResult.ambienceLoudness.getter();
  sub_1D42B6E24();
}

void sub_1D4305D64(uint64_t a1)
{
  float v1;

  v1 = sub_1D43072BC(a1);
  SNMovieRemixFinalResult.ambienceLoudness.setter(v1);
  sub_1D42B6E24();
}

void sub_1D4305D80()
{
  float *v0;

  sub_1D42CB12C();
  *v0 = SNMovieRemixFinalResult.recordingLoudness.getter();
  sub_1D42B6E24();
}

void sub_1D4305DA0(uint64_t a1)
{
  float v1;

  v1 = sub_1D43072BC(a1);
  SNMovieRemixFinalResult.recordingLoudness.setter(v1);
  sub_1D42B6E24();
}

void type metadata accessor for MovieRemix()
{
  sub_1D42CB35C();
}

void type metadata accessor for MovieRemix.Request()
{
  sub_1D42CB35C();
}

void type metadata accessor for MovieRemix.Session()
{
  sub_1D42CB35C();
}

void type metadata accessor for MovieRemix.DSPParameterTuple()
{
  sub_1D42CB35C();
}

uint64_t destroy for MovieRemix.FinalResult()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MovieRemix.FinalResult(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MovieRemix.FinalResult(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MovieRemix.FinalResult(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 4) = *(_OWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MovieRemix.FinalResult(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MovieRemix.FinalResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for MovieRemix.FinalResult()
{
  sub_1D42CB35C();
}

uint64_t method lookup function for SNMovieRemixDSPParameter()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for SNMovieRemixFinalResult()
{
  return objc_opt_self();
}

uint64_t method lookup function for SNMovieRemixFinalResult()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for SNMovieRemixRequest()
{
  return objc_opt_self();
}

uint64_t method lookup function for SNMovieRemixRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for SNMovieRemixSession()
{
  return objc_opt_self();
}

uint64_t method lookup function for SNMovieRemixSession()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for SNMovieRemix()
{
  return objc_opt_self();
}

uint64_t _s13SoundAnalysis10MovieRemixV7SessionVwxx_0(uint64_t a1)
{
  sub_1D42CBA5C(a1);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t _s13SoundAnalysis10MovieRemixV7SessionVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1D42BE934();
  return a1;
}

void _s13SoundAnalysis10MovieRemixV7SessionVwca_0()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_1D43071BC();
  *v1 = *v2;
  swift_retain();
  sub_1D42CFC14();
  v1[1] = v0[1];
  swift_retain();
  sub_1D42CFC14();
  v3 = v0[3];
  v1[2] = v0[2];
  v1[3] = v3;
  swift_retain();
  sub_1D42CFC14();
  v4 = v0[5];
  v1[4] = v0[4];
  v1[5] = v4;
  swift_retain();
  swift_release();
  sub_1D42CB15C();
}

void _s13SoundAnalysis10MovieRemixV7SessionVwta_0()
{
  _OWORD *v0;
  _OWORD *v1;

  sub_1D43071BC();
  swift_release();
  *v1 = *v0;
  swift_release();
  v1[1] = v0[1];
  swift_release();
  v1[2] = v0[2];
  swift_release();
  sub_1D42B6E24();
}

uint64_t getEnumTagSinglePayload for XPCSubscription(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCSubscription(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for MovieRemix.Session.Impl()
{
  sub_1D42CB35C();
}

uint64_t getEnumTagSinglePayload for MovieRemix.FinalResult.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 6) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v5 = v6 - 7;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for MovieRemix.FinalResult.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1D430630C + 4 * byte_1D4528BAC[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1D4306340 + 4 * byte_1D4528BA7[v4]))();
}

uint64_t sub_1D4306340(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4306348(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D4306350);
  return result;
}

uint64_t sub_1D430635C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D4306364);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1D4306368(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4306370(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MovieRemix.FinalResult.CodingKeys()
{
  return &type metadata for MovieRemix.FinalResult.CodingKeys;
}

ValueMetadata *type metadata accessor for MovieRemix.DSPParameterTuple.CodingKeys()
{
  return &type metadata for MovieRemix.DSPParameterTuple.CodingKeys;
}

uint64_t _s13SoundAnalysis10MovieRemixV17DSPParameterTupleV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D43063EC + 4 * byte_1D4528BB6[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D4306420 + 4 * byte_1D4528BB1[v4]))();
}

uint64_t sub_1D4306420(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4306428(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D4306430);
  return result;
}

uint64_t sub_1D430643C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D4306444);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D4306448(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4306450(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MovieRemix.Request.CodingKeys()
{
  return &type metadata for MovieRemix.Request.CodingKeys;
}

unint64_t sub_1D4306470()
{
  unint64_t result;

  result = qword_1EFE4AE20;
  if (!qword_1EFE4AE20)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4529018, &type metadata for MovieRemix.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4AE20);
  }
  return result;
}

unint64_t sub_1D43064B0()
{
  unint64_t result;

  result = qword_1EFE4AE28;
  if (!qword_1EFE4AE28)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45290D0, &type metadata for MovieRemix.DSPParameterTuple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4AE28);
  }
  return result;
}

unint64_t sub_1D43064F0()
{
  unint64_t result;

  result = qword_1EFE4AE30;
  if (!qword_1EFE4AE30)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4529188, &type metadata for MovieRemix.FinalResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4AE30);
  }
  return result;
}

unint64_t sub_1D4306530()
{
  unint64_t result;

  result = qword_1EFE4AE38;
  if (!qword_1EFE4AE38)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45290F8, &type metadata for MovieRemix.FinalResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4AE38);
  }
  return result;
}

unint64_t sub_1D4306570()
{
  unint64_t result;

  result = qword_1EFE4AE40;
  if (!qword_1EFE4AE40)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4529120, &type metadata for MovieRemix.FinalResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4AE40);
  }
  return result;
}

unint64_t sub_1D43065B0()
{
  unint64_t result;

  result = qword_1EFE4AE48;
  if (!qword_1EFE4AE48)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4529040, &type metadata for MovieRemix.DSPParameterTuple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4AE48);
  }
  return result;
}

unint64_t sub_1D43065F0()
{
  unint64_t result;

  result = qword_1EFE4AE50;
  if (!qword_1EFE4AE50)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4529068, &type metadata for MovieRemix.DSPParameterTuple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4AE50);
  }
  return result;
}

unint64_t sub_1D4306630()
{
  unint64_t result;

  result = qword_1EFE4AE58;
  if (!qword_1EFE4AE58)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4528F88, &type metadata for MovieRemix.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4AE58);
  }
  return result;
}

unint64_t sub_1D4306670()
{
  unint64_t result;

  result = qword_1EFE4AE60;
  if (!qword_1EFE4AE60)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4528FB0, &type metadata for MovieRemix.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4AE60);
  }
  return result;
}

uint64_t sub_1D43066AC()
{
  sub_1D42B8F98();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1D43066DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  sub_1D43071BC();
  v3 = sub_1D42B28FC(v2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v0, v1, v3);
  sub_1D42B6E24();
}

uint64_t sub_1D4306718(uint64_t result)
{
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(result + 24) - 8) + 80) & 0x20000) != 0)
    JUMPOUT(0x1D825E524);
  return result;
}

uint64_t sub_1D430674C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_1D4519BC4();
  sub_1D43071E8();
  v3 = (v2 + v1 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1D43074F4(v4);

  return sub_1D4307114();
}

void sub_1D430679C()
{
  sub_1D42CB348();
  sub_1D4468F08();
}

uint64_t sub_1D43067EC(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_1D4306814(uint64_t a1)
{
  swift_release();
  return a1;
}

uint64_t sub_1D430683C()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 48);
  if (v1 != 255)
    sub_1D4306874(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), v1 & 1);
  return swift_deallocObject();
}

void sub_1D4306874(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

void sub_1D4306884(void **a1)
{
  uint64_t v1;

  sub_1D43036C0(a1, v1);
}

void sub_1D430688C(__int128 *a1)
{
  uint64_t v1;

  sub_1D4303754(a1, v1);
}

unint64_t sub_1D4306894()
{
  unint64_t result;

  result = qword_1EFE4AE88;
  if (!qword_1EFE4AE88)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4529334, &unk_1E979B990);
    atomic_store(result, (unint64_t *)&qword_1EFE4AE88);
  }
  return result;
}

void sub_1D43068D0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 != 255)
    sub_1D4306874(a1, a2, a3, a4, a5 & 1);
}

id sub_1D43068EC@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;

  sub_1D4519D20();
  sub_1D4307370();
  return sub_1D43037EC(a1, v4, a2);
}

uint64_t sub_1D4306928(void **a1)
{
  return sub_1D43059C8(*a1);
}

void *sub_1D4306940@<X0>(void **a1@<X0>, _QWORD *a2@<X1>, uint64_t (*a3)(void **)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void (*a6)(void)@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v7;
  void *result;

  result = sub_1D430592C(*a1, a2, a3, a4, a5, a6);
  if (!v7)
    *a7 = result;
  return result;
}

_QWORD *sub_1D430696C@<X0>(void **a1@<X0>, uint64_t *a2@<X1>, _QWORD *(*a3)(void **__return_ptr, void **)@<X2>, _QWORD *a4@<X8>)
{
  _QWORD *result;

  result = sub_1D43058C0(*a1, a2, a3);
  *a4 = result;
  return result;
}

uint64_t sub_1D4306994()
{
  sub_1D42B8F98();
  return swift_deallocObject();
}

_QWORD *sub_1D43069B4@<X0>(void **a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  return sub_1D430696C(a1, a2, *(_QWORD *(**)(void **__return_ptr, void **))(v3 + 16), a3);
}

uint64_t sub_1D43069C0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1D43D6FA4(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1D43069CC(uint64_t a1)
{
  return sub_1D4306A90(a1, MEMORY[0x1E0DF2278], "[PUB] movie remix %{public}s: fast heartbeat received %{public}ld audio frames");
}

uint64_t sub_1D43069F4(uint64_t a1, uint64_t a2)
{
  return sub_1D4306B24(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D4306940);
}

uint64_t sub_1D4306A14@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1D43D6FA4(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1D4306A30()
{
  uint64_t v0;

  sub_1D4519D20();
  sub_1D43071E8();
  sub_1D43074F4(v0);
  return sub_1D4307114();
}

uint64_t sub_1D4306A6C(uint64_t a1)
{
  return sub_1D4306A90(a1, MEMORY[0x1E0DF2290], "[PUB] movie remix %{public}s: slow heartbeat received %{public}ld audio frames");
}

#error "1D4306AC8: call analysis failed (funcsize=19)"

uint64_t sub_1D4306AE0()
{
  sub_1D42B8F98();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D4306B08(uint64_t a1, uint64_t a2)
{
  return sub_1D4306B24(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D4306EA4);
}

uint64_t sub_1D4306B24(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v3;

  return a3(a1, a2, v3[2], v3[3], v3[4], v3[5], v3[6]);
}

uint64_t sub_1D4306B4C(_QWORD *a1)
{
  uint64_t v1;

  return sub_1D43D5EC0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1D4306B58@<X0>(uint64_t *a1@<X8>)
{
  return sub_1D43D5E9C(a1);
}

uint64_t sub_1D4306B60()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1D4306B84()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

id sub_1D4306BAC(void *a1)
{
  return sub_1D4303D2C(a1);
}

uint64_t sub_1D4306BC0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D4306BE4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1D43623C4(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

void sub_1D4306BFC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1D4303E04(a1, a2);
}

void sub_1D4306C10(uint64_t a1)
{
  void (*v1)(uint64_t);

  if (!sub_1D42CBA5C(a1))
  {
    v1(255);
    sub_1D42E3FC0();
  }
  sub_1D42B6E24();
}

uint64_t sub_1D4306C40()
{
  return sub_1D4303F64();
}

uint64_t sub_1D4306C48()
{
  return sub_1D4303F98();
}

uint64_t sub_1D4306C50()
{
  return sub_1D4303FE4();
}

void sub_1D4306C58(void *a1)
{
  sub_1D4304014(a1);
}

void sub_1D4306C60(uint64_t a1)
{
  uint64_t *v1;

  if (!sub_1D42CBA5C(a1))
  {
    sub_1D42B8B10(v1);
    sub_1D42E3FC0();
  }
  sub_1D42B6E24();
}

uint64_t sub_1D4306C90()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1D4306CB4(void **a1)
{
  uint64_t v1;

  sub_1D4304C08(a1, *(void (**)(void *))(v1 + 16));
}

void sub_1D4306CBC(uint64_t a1)
{
  uint64_t v1;

  sub_1D4304C64(a1, *(void (**)(void))(v1 + 16));
}

uint64_t getEnumTagSinglePayload for CollectionUtils.DomainError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF5)
  {
    if (a2 + 11 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 11) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 12;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v5 = v6 - 12;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_1D4306D4C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1D4306D98 + 4 * byte_1D4528BC0[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1D4306DCC + 4 * byte_1D4528BBB[v4]))();
}

uint64_t sub_1D4306DCC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4306DD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D4306DDCLL);
  return result;
}

uint64_t sub_1D4306DE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D4306DF0);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1D4306DF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4306DFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for MovieRemix.DomainError()
{
  sub_1D42CB35C();
}

unint64_t sub_1D4306E18()
{
  unint64_t result;

  result = qword_1EFE4B000;
  if (!qword_1EFE4B000)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452930C, &unk_1E979B990);
    atomic_store(result, (unint64_t *)&qword_1EFE4B000);
  }
  return result;
}

uint64_t sub_1D4306E54@<X0>(_QWORD *a1@<X8>)
{
  return sub_1D4306A14(a1);
}

uint64_t sub_1D4306E68(void **a1)
{
  return sub_1D4306928(a1);
}

void *sub_1D4306EA4@<X0>(void **a1@<X0>, _QWORD *a2@<X1>, uint64_t (*a3)(void **)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void (*a6)(void)@<X5>, _QWORD *a7@<X8>)
{
  return sub_1D4306940(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1D4306EBC()
{
  return sub_1D451A6C8();
}

void sub_1D4306EE0(uint64_t a1)
{
  uint64_t v1;

  sub_1D43003CC(a1, 0xE400000000000000, v1);
}

uint64_t sub_1D4306EEC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4306EF8@<X0>(_BYTE *a1@<X1>, char a2@<W8>)
{
  *a1 = a2;
  return swift_willThrow();
}

uint64_t sub_1D4306F04@<X0>(uint64_t a1@<X8>)
{
  int v1;

  *(_DWORD *)(a1 + 32) = v1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D4306F10()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void sub_1D4306F18()
{
  sub_1D43830A4();
}

uint64_t sub_1D4306F20()
{
  return swift_deallocObject();
}

uint64_t sub_1D4306F3C()
{
  return sub_1D451B670();
}

id sub_1D4306F4C(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, (SEL)(v1 + 1892), 0x10000, 5);
}

uint64_t sub_1D4306F5C()
{
  return sub_1D451B748();
}

uint64_t sub_1D4306F6C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

void sub_1D4306F74()
{
  sub_1D4304958();
}

void sub_1D4306FA0()
{
  sub_1D442FBC0();
}

uint64_t sub_1D4306FAC(void *a1, uint64_t a2)
{
  return sub_1D42FBAEC(a1, a2, 0, 0);
}

id sub_1D4306FBC(void *a1)
{
  void *v1;

  return sub_1D44F590C(v1, a1);
}

uint64_t sub_1D4306FCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

BOOL sub_1D4306FDC(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_1D4306FEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

void sub_1D4306FFC(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t sub_1D4307010()
{
  return swift_retain_n();
}

uint64_t sub_1D4307018()
{
  return objc_opt_self();
}

uint64_t sub_1D4307024(uint64_t a1)
{
  return sub_1D44C88E8(a1, 100, 0, 0);
}

uint64_t sub_1D4307058@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_1D4307060()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_1D42D6EFC(v1, v2, v3, v0);
}

void sub_1D4307080()
{
  sub_1D42C7688();
}

uint64_t sub_1D43070B8()
{
  return swift_release();
}

uint64_t sub_1D43070C0()
{
  return swift_release();
}

uint64_t sub_1D43070D0()
{
  return _swift_stdlib_reportUnimplementedInitializer();
}

void sub_1D43070DC()
{
  sub_1D42C7688();
}

uint64_t sub_1D43070F4()
{
  return sub_1D451BA0C();
}

uint64_t sub_1D430710C()
{
  return sub_1D451A014();
}

uint64_t sub_1D4307114()
{
  return swift_deallocObject();
}

void sub_1D4307120()
{
  sub_1D42C76BC();
}

void sub_1D4307138()
{
  sub_1D42C76BC();
}

void sub_1D4307150()
{
  sub_1D42C7688();
}

void sub_1D4307168()
{
  sub_1D42C7688();
}

uint64_t sub_1D4307180()
{
  uint64_t v0;

  return v0;
}

void sub_1D430718C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

void sub_1D43071A0(uint64_t a1)
{
  sub_1D4306C60(a1);
}

uint64_t sub_1D43071A8()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[67] + 8))(v0[68], v0[76]);
}

void sub_1D43071C8(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t sub_1D43071DC@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_1D4307204()
{
  return sub_1D451BA24();
}

uint64_t sub_1D4307218(uint64_t a1, uint64_t a2)
{
  sub_1D42CC880(a1, a2);
  return sub_1D4519FFC();
}

uint64_t sub_1D430722C()
{
  return swift_release();
}

void sub_1D4307250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;

  *(_QWORD *)(v0 + 16) = v1;
  *(_DWORD *)(v0 + 4 * v2 + 32) = v3;
}

uint64_t sub_1D4307288()
{
  return sub_1D451A6C8();
}

uint64_t sub_1D430729C()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1D43072A8()
{
  return sub_1D451A2E4();
}

uint64_t sub_1D43072B4()
{
  return swift_release();
}

float sub_1D43072BC(uint64_t a1)
{
  return *(float *)a1;
}

uint64_t sub_1D43072C8(uint64_t a1)
{
  return sub_1D44F01E8(a1);
}

float sub_1D43072D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return sub_1D43001B4(a1, 0xE400000000000000, v2, v1);
}

id sub_1D43072E8(void *a1)
{
  void *v1;

  return sub_1D44F590C(v1, a1);
}

uint64_t sub_1D4307314()
{
  return sub_1D451B67C();
}

uint64_t sub_1D4307324()
{
  return swift_release();
}

void sub_1D430732C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_1D42D7018((uint64_t)va, a2);
}

uint64_t sub_1D4307334()
{
  return sub_1D451A920();
}

id sub_1D4307344(void *a1)
{
  void *v1;

  return sub_1D44F590C(v1, a1);
}

uint64_t sub_1D4307360()
{
  return sub_1D451A920();
}

uint64_t sub_1D4307388()
{
  return sub_1D451B754();
}

uint64_t sub_1D4307398()
{
  return swift_retain();
}

uint64_t sub_1D43073A0()
{
  return swift_bridgeObjectRetain();
}

void sub_1D43073B0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  *(_QWORD *)(v1 + 16) = v3;
  *(_DWORD *)(v1 + 4 * v0 + 32) = v2;
}

void sub_1D43073D8()
{
  JUMPOUT(0x1D825E524);
}

uint64_t sub_1D43073E8()
{
  return sub_1D451AF5C();
}

uint64_t sub_1D43073F0()
{
  return 0;
}

uint64_t sub_1D43073FC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D4307418()
{
  uint64_t v0;

  return v0;
}

void sub_1D4307424()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;

  *(_QWORD *)(v1 + 16) = v2;
  *(_DWORD *)(v1 + 4 * v0 + 32) = v3;
}

BOOL sub_1D4307454(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_1D4307464(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_1D430746C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  __int128 v7;
  va_list va;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  va_list va1;

  va_start(va1, a6);
  va_start(va, a6);
  v7 = va_arg(va1, __int128);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  return sub_1D42E33E0((__int128 *)va, (uint64_t)va1);
}

void sub_1D4307478(uint64_t a1)
{
  sub_1D4306C60(a1);
}

uint64_t sub_1D4307484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  __int128 v6;
  va_list va;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  va_list va1;

  va_start(va1, a5);
  va_start(va, a5);
  v6 = va_arg(va1, __int128);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  return sub_1D42E33E0((__int128 *)va, (uint64_t)va1);
}

void sub_1D4307490(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1D42D7018((uint64_t)&a9, a2);
}

_WORD *sub_1D4307498(_WORD *result)
{
  *result = 0;
  return result;
}

id sub_1D43074A4(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, (SEL)(v1 + 840));
}

uint64_t sub_1D43074B0()
{
  return sub_1D451B790();
}

void sub_1D43074BC()
{
  JUMPOUT(0x1D825CD78);
}

uint64_t sub_1D43074C8()
{
  return swift_slowAlloc();
}

void sub_1D43074D4()
{
  JUMPOUT(0x1D825CD78);
}

uint64_t sub_1D43074E0()
{
  return swift_release();
}

uint64_t sub_1D43074E8()
{
  return sub_1D451B550();
}

uint64_t sub_1D43074F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v2 + v1);
}

uint64_t sub_1D4307548()
{
  return swift_allocObject();
}

id sub_1D4307554(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, (SEL)(v1 + 2770));
}

uint64_t sub_1D4307560()
{
  return swift_release();
}

uint64_t sub_1D4307568()
{
  return swift_release();
}

void sub_1D4307570()
{
  uint64_t v0;

}

void sub_1D430757C()
{
  uint64_t v0;

}

uint64_t sub_1D4307584()
{
  return swift_release();
}

uint64_t sub_1D430758C()
{
  return swift_release();
}

uint64_t sub_1D43075A8()
{
  return sub_1D4519FFC();
}

void sub_1D43075C4(uint64_t a1)
{
  sub_1D430761C(a1, (uint64_t)&type metadata for XPCSubscription, (uint64_t)&off_1E97A12D8);
}

void sub_1D43075F0(uint64_t a1)
{
  sub_1D430761C(a1, (uint64_t)&type metadata for XPCSubscriber, (uint64_t)&off_1E979F820);
}

void sub_1D430761C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v3;
  _OWORD *v6;
  __int128 v7;
  _QWORD v8[5];

  sub_1D447DAC4();
  v8[3] = a2;
  v8[4] = a3;
  v6 = (_OWORD *)sub_1D42B6F40();
  v8[0] = v6;
  v7 = v3[1];
  v6[1] = *v3;
  v6[2] = v7;
  v6[3] = v3[2];
  sub_1D42BE934();
  sub_1D42B8F24();
  sub_1D42E3CA4();
  sub_1D42BE984();
  sub_1D42B7B80();
  sub_1D42EA438();
  sub_1D42B8F48();
  sub_1D42B5400((uint64_t)v8);
  sub_1D430C424();
}

void sub_1D43076C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD v5[5];

  sub_1D447DAC4();
  v5[3] = &type metadata for XPCPublisher;
  v5[4] = &off_1E979E580;
  v5[0] = a2;
  v5[1] = a3;
  sub_1D42BE984();
  sub_1D42BE934();
  sub_1D430C63C();
  sub_1D42EA1BC();
  sub_1D42B8F48();
  sub_1D42B5400((uint64_t)v5);
  sub_1D430C580();
}

void sub_1D4307740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v9;
  _QWORD v10[5];

  sub_1D430C594();
  v10[3] = &type metadata for OptionalProxy;
  v10[4] = &off_1E979EA50;
  v9 = (_QWORD *)sub_1D42B6F40();
  v10[0] = v9;
  v9[2] = v6;
  v9[3] = v5;
  v9[4] = a4;
  v9[5] = a5;
  sub_1D42B7FE4(v6);
  sub_1D42BE934();
  sub_1D430C63C();
  sub_1D42EA438();
  sub_1D42B8F48();
  sub_1D42B5400((uint64_t)v10);
  sub_1D430C424();
}

uint64_t sub_1D43077E0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1D43077F8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v7;
  _BYTE *v8;
  uint64_t (*v9)(void);

  sub_1D42E39FC();
  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
  sub_1D430C160();
  sub_1D430C160();
  if (v1)
  {
    v2 = (_QWORD *)sub_1D430C350();
    sub_1D430C1CC(v2);
    sub_1D430C4E8();
    return sub_1D430C1A0(v3, v4, v5);
  }
  else
  {
    sub_1D42B7F2C();
    v7 = sub_1D42B6D0C();
    sub_1D430C2E4(v7, v8);
    sub_1D430C21C(0);
    v9 = (uint64_t (*)(void))sub_1D430C51C();
    return sub_1D42E39BC(v9);
  }
}

uint64_t sub_1D430787C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1D4307894()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v7;
  _BYTE *v8;
  uint64_t (*v9)(void);

  sub_1D42E39FC();
  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
  sub_1D430C160();
  sub_1D430C160();
  if (v1)
  {
    v2 = (_QWORD *)sub_1D430C350();
    sub_1D430C1CC(v2);
    sub_1D430C4E8();
    return sub_1D430C1A0(v3, v4, v5);
  }
  else
  {
    sub_1D42B7F2C();
    v7 = sub_1D42B6D0C();
    sub_1D430C2E4(v7, v8);
    sub_1D430C21C(0);
    v9 = (uint64_t (*)(void))sub_1D430C51C();
    return sub_1D42E39BC(v9);
  }
}

uint64_t sub_1D4307918(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1D4307930()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v7;
  _BYTE *v8;
  uint64_t (*v9)(void);

  sub_1D42E39FC();
  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
  sub_1D430C160();
  sub_1D430C160();
  if (v1)
  {
    v2 = (_QWORD *)sub_1D430C350();
    sub_1D430C1CC(v2);
    sub_1D430C4E8();
    return sub_1D430C1A0(v3, v4, v5);
  }
  else
  {
    sub_1D42B7F2C();
    v7 = sub_1D42B6D0C();
    sub_1D430C2E4(v7, v8);
    sub_1D430C21C(0);
    v9 = (uint64_t (*)(void))sub_1D430C51C();
    return sub_1D42E39BC(v9);
  }
}

uint64_t sub_1D43079B4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1D43079CC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v7;
  _BYTE *v8;
  uint64_t (*v9)(void);

  sub_1D42E39FC();
  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
  sub_1D430C160();
  sub_1D430C160();
  if (v1)
  {
    v2 = (_QWORD *)sub_1D430C350();
    sub_1D430C1CC(v2);
    sub_1D430C4E8();
    return sub_1D430C1A0(v3, v4, v5);
  }
  else
  {
    sub_1D42B7F2C();
    v7 = sub_1D42B6D0C();
    sub_1D430C2E4(v7, v8);
    sub_1D430C21C(0);
    v9 = (uint64_t (*)(void))sub_1D430C51C();
    return sub_1D42E39BC(v9);
  }
}

uint64_t sub_1D4307A50(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1D4307A68()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v7;
  _BYTE *v8;
  uint64_t (*v9)(void);

  sub_1D42E39FC();
  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
  sub_1D430C160();
  sub_1D430C160();
  if (v1)
  {
    v2 = (_QWORD *)sub_1D430C350();
    sub_1D430C1CC(v2);
    sub_1D430C4E8();
    return sub_1D430C1A0(v3, v4, v5);
  }
  else
  {
    sub_1D42B7F2C();
    v7 = sub_1D42B6D0C();
    sub_1D430C2E4(v7, v8);
    sub_1D430C21C(0);
    v9 = (uint64_t (*)(void))sub_1D430C51C();
    return sub_1D42E39BC(v9);
  }
}

uint64_t sub_1D4307AEC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return sub_1D42E39F0();
}

uint64_t sub_1D4307AFC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v7;
  _BYTE *v8;
  uint64_t (*v9)(void);

  sub_1D42E39FC();
  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
  sub_1D430C160();
  sub_1D430C160();
  if (v1)
  {
    v2 = (_QWORD *)sub_1D430C350();
    sub_1D430C1CC(v2);
    sub_1D430C4E8();
    return sub_1D430C1A0(v3, v4, v5);
  }
  else
  {
    sub_1D42B7F2C();
    v7 = sub_1D42B6D0C();
    sub_1D430C2E4(v7, v8);
    sub_1D430C21C(0);
    v9 = (uint64_t (*)(void))sub_1D430C51C();
    return sub_1D42E39BC(v9);
  }
}

uint64_t sub_1D4307B80(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1D4307B98()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v7;
  _BYTE *v8;
  uint64_t (*v9)(void);

  sub_1D42E39FC();
  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
  sub_1D430C160();
  sub_1D430C160();
  if (v1)
  {
    v2 = (_QWORD *)sub_1D430C350();
    sub_1D430C1CC(v2);
    sub_1D430C4E8();
    return sub_1D430C1A0(v3, v4, v5);
  }
  else
  {
    sub_1D42B7F2C();
    v7 = sub_1D42B6D0C();
    sub_1D430C2E4(v7, v8);
    sub_1D430C21C(0);
    v9 = (uint64_t (*)(void))sub_1D430C51C();
    return sub_1D42E39BC(v9);
  }
}

uint64_t sub_1D4307C1C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return sub_1D42E39F0();
}

uint64_t sub_1D4307C2C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v7;
  _BYTE *v8;
  uint64_t (*v9)(void);

  sub_1D42E39FC();
  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
  sub_1D430C160();
  sub_1D430C160();
  if (v1)
  {
    v2 = (_QWORD *)sub_1D430C350();
    sub_1D430C1CC(v2);
    sub_1D430C4E8();
    return sub_1D430C1A0(v3, v4, v5);
  }
  else
  {
    sub_1D42B7F2C();
    v7 = sub_1D42B6D0C();
    sub_1D430C2E4(v7, v8);
    sub_1D430C21C(0);
    v9 = (uint64_t (*)(void))sub_1D430C51C();
    return sub_1D42E39BC(v9);
  }
}

uint64_t sub_1D4307CB0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return sub_1D42E39F0();
}

uint64_t sub_1D4307CC0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v7;
  _BYTE *v8;
  uint64_t (*v9)(void);

  sub_1D42E39FC();
  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
  sub_1D430C160();
  sub_1D430C160();
  if (v1)
  {
    v2 = (_QWORD *)sub_1D430C350();
    sub_1D430C1CC(v2);
    sub_1D430C4E8();
    return sub_1D430C1A0(v3, v4, v5);
  }
  else
  {
    sub_1D42B7F2C();
    v7 = sub_1D42B6D0C();
    sub_1D430C2E4(v7, v8);
    sub_1D430C21C(0);
    v9 = (uint64_t (*)(void))sub_1D430C51C();
    return sub_1D42E39BC(v9);
  }
}

uint64_t sub_1D4307D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[16] = a3;
  v4[17] = a4;
  v4[14] = a1;
  v4[15] = a2;
  return swift_task_switch();
}

uint64_t sub_1D4307D60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  sub_1D430C544();
  sub_1D42E3CA4();
  sub_1D430C4CC();
  if (v0)
  {
    sub_1D430C4E0();
    sub_1D42B8F48();
    v2 = (uint64_t (*)(void))sub_1D430C528();
    return v2();
  }
  else
  {
    v4 = (_QWORD *)sub_1D42E3968();
    *(_QWORD *)(v1 + 144) = v4;
    v5 = sub_1D430C454(v4);
    return sub_1D430C368(v5, v6, v7);
  }
}

uint64_t sub_1D4307DDC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1D430C3B0();
  if (v1)
  {
    sub_1D42B8EC8();
    return sub_1D42E380C();
  }
  else
  {
    v3 = (_QWORD *)sub_1D42E3A4C();
    *(_QWORD *)(v0 + 160) = v3;
    v4 = sub_1D42E3C30(v3, (uint64_t)sub_1D4307E3C);
    return sub_1D42E3AB8(v4, v5);
  }
}

uint64_t sub_1D4307E3C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D42B8E20();
  sub_1D430C630();
  *(_QWORD *)(v1 + 168) = v0;
  swift_task_dealloc();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4307E88()
{
  uint64_t v0;

  sub_1D430C5A4();
  sub_1D430C418();
  sub_1D42BE93C();
  return sub_1D42B8ED4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4307EBC()
{
  uint64_t (*v0)(void);

  sub_1D430C47C();
  sub_1D42E3FCC();
  sub_1D42CFC14();
  sub_1D42BE93C();
  v0 = (uint64_t (*)(void))sub_1D42E3DD0();
  return sub_1D42E3A2C(v0);
}

uint64_t sub_1D4307EF0()
{
  uint64_t v0;

  sub_1D42F9B90();
  sub_1D42E3FCC();
  sub_1D430C418();
  sub_1D42BE93C();
  return sub_1D42B8ED4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4307F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[17] = a4;
  v5[18] = a5;
  v5[15] = a2;
  v5[16] = a3;
  v5[14] = a1;
  return swift_task_switch();
}

uint64_t sub_1D4307F48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t (*v5)(void);
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  sub_1D430C5F4();
  sub_1D430C33C();
  sub_1D42E3CA4();
  v1 = sub_1D430C3E0();
  sub_1D4308CC0(v1, v2, v3, v4);
  if (v0)
  {
    sub_1D430C470();
    sub_1D42B8F48();
    v5 = (uint64_t (*)(void))sub_1D430C528();
    return sub_1D430C27C(v5);
  }
  else
  {
    v7 = sub_1D42E3A4C();
    v8 = (_QWORD *)sub_1D430C5DC(v7);
    v9 = sub_1D430C308(v8);
    return sub_1D430C290(v9, v10, v11);
  }
}

uint64_t sub_1D4307FAC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1D430C2C4();
  if (v1)
  {
    sub_1D42B8EC8();
    return sub_1D42E380C();
  }
  else
  {
    v3 = (_QWORD *)sub_1D42E3A4C();
    *(_QWORD *)(v0 + 168) = v3;
    v4 = sub_1D42E3C30(v3, (uint64_t)sub_1D430800C);
    return sub_1D42E3AB8(v4, v5);
  }
}

uint64_t sub_1D430800C()
{
  sub_1D430C2A4();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4308048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[17] = a4;
  v5[18] = a5;
  v5[15] = a2;
  v5[16] = a3;
  v5[14] = a1;
  return swift_task_switch();
}

uint64_t sub_1D4308068()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t (*v5)(void);
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  sub_1D430C5F4();
  sub_1D430C33C();
  sub_1D42E3CA4();
  v1 = (void *)sub_1D430C3E0();
  sub_1D4308E90(v1, v2, v3, v4);
  if (v0)
  {
    sub_1D430C470();
    sub_1D42B8F48();
    v5 = (uint64_t (*)(void))sub_1D430C528();
    return sub_1D430C27C(v5);
  }
  else
  {
    v7 = sub_1D42E3A4C();
    v8 = (_QWORD *)sub_1D430C5DC(v7);
    v9 = sub_1D430C308(v8);
    return sub_1D430C290(v9, v10, v11);
  }
}

uint64_t sub_1D43080CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[17] = a4;
  v5[18] = a5;
  v5[15] = a2;
  v5[16] = a3;
  v5[14] = a1;
  return swift_task_switch();
}

uint64_t sub_1D43080EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);

  sub_1D430C5F4();
  sub_1D430C33C();
  v1 = sub_1D42E3CA4();
  sub_1D430C55C(v1, v2, v3, (uint64_t)&type metadata for XPCSubscription, (uint64_t)&off_1E97A12D8);
  if (v0)
  {
    sub_1D430C470();
    sub_1D42B8F48();
    v4 = (uint64_t (*)(void))sub_1D430C528();
    return sub_1D430C27C(v4);
  }
  else
  {
    v6 = sub_1D42E3A4C();
    v7 = (_QWORD *)sub_1D430C5DC(v6);
    v8 = sub_1D430C308(v7);
    return sub_1D430C290(v8, v9, v10);
  }
}

uint64_t sub_1D4308164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[17] = a4;
  v5[18] = a5;
  v5[15] = a2;
  v5[16] = a3;
  v5[14] = a1;
  return swift_task_switch();
}

uint64_t sub_1D4308184()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t (*v5)(void);
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  sub_1D430C5F4();
  sub_1D430C33C();
  sub_1D42E3CA4();
  v1 = (uint64_t *)sub_1D430C3E0();
  sub_1D430901C(v1, v2, v3, v4);
  if (v0)
  {
    sub_1D430C470();
    sub_1D42B8F48();
    v5 = (uint64_t (*)(void))sub_1D430C528();
    return sub_1D430C27C(v5);
  }
  else
  {
    v7 = sub_1D42E3A4C();
    v8 = (_QWORD *)sub_1D430C5DC(v7);
    v9 = sub_1D430C308(v8);
    return sub_1D430C290(v9, v10, v11);
  }
}

uint64_t sub_1D43081E8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1D430C2C4();
  if (v1)
  {
    sub_1D42B8EC8();
    return sub_1D42E380C();
  }
  else
  {
    v3 = (_QWORD *)sub_1D42E3A4C();
    *(_QWORD *)(v0 + 168) = v3;
    v4 = sub_1D42E3C30(v3, (uint64_t)sub_1D4308248);
    return sub_1D42E3AB8(v4, v5);
  }
}

uint64_t sub_1D4308248()
{
  sub_1D430C2A4();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4308284()
{
  uint64_t v0;

  sub_1D430C5A4();
  sub_1D430C664();
  sub_1D42BE93C();
  return sub_1D42B8ED4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43082B8()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_1D42B8C84((uint64_t *)(v0 + 16));
  sub_1D42E3FCC();
  sub_1D42CFC14();
  sub_1D42BE93C();
  v1 = (uint64_t (*)(void))sub_1D42E3DD0();
  return sub_1D42E3A2C(v1);
}

uint64_t sub_1D43082FC()
{
  uint64_t v0;

  sub_1D42F9B90();
  sub_1D42E3FCC();
  sub_1D430C664();
  sub_1D42BE93C();
  return sub_1D42B8ED4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4308334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[16] = a3;
  v4[17] = a4;
  v4[14] = a1;
  v4[15] = a2;
  return swift_task_switch();
}

uint64_t sub_1D4308350()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  sub_1D430C544();
  sub_1D42E3CA4();
  sub_1D430C4CC();
  if (v0)
  {
    sub_1D430C4E0();
    sub_1D42B8F48();
    v2 = (uint64_t (*)(void))sub_1D430C528();
    return v2();
  }
  else
  {
    v4 = (_QWORD *)sub_1D42E3968();
    *(_QWORD *)(v1 + 144) = v4;
    v5 = sub_1D430C454(v4);
    return sub_1D430C368(v5, v6, v7);
  }
}

uint64_t sub_1D43083CC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1D430C3B0();
  if (v1)
  {
    sub_1D42B8EC8();
    return sub_1D42E380C();
  }
  else
  {
    v3 = (_QWORD *)sub_1D42E3A4C();
    *(_QWORD *)(v0 + 160) = v3;
    v4 = sub_1D42E3C30(v3, (uint64_t)sub_1D430842C);
    return sub_1D42E3AB8(v4, v5);
  }
}

uint64_t sub_1D430842C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v10;

  sub_1D430C61C();
  sub_1D42E3E84(v10);
  v6[21] = v4;
  swift_task_dealloc();
  if (!v4)
  {
    v6[22] = a4;
    v6[23] = a3;
    v6[24] = a2;
    v6[25] = v5;
  }
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D43084A0()
{
  uint64_t v0;

  sub_1D430C5A4();
  sub_1D430C418();
  sub_1D42BE93C();
  return sub_1D42E39E4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43084D0()
{
  uint64_t v0;

  sub_1D430C47C();
  sub_1D42E3FCC();
  sub_1D42CFC14();
  sub_1D42BE93C();
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 176));
}

uint64_t sub_1D430851C()
{
  uint64_t v0;

  sub_1D42F9B90();
  sub_1D42E3FCC();
  sub_1D430C418();
  sub_1D42BE93C();
  return sub_1D42E39E4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4308550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[17] = a4;
  v5[18] = a5;
  v5[15] = a2;
  v5[16] = a3;
  v5[14] = a1;
  return swift_task_switch();
}

uint64_t sub_1D4308570()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);

  sub_1D430C5F4();
  sub_1D430C33C();
  v1 = sub_1D42E3CA4();
  sub_1D430C55C(v1, v2, v3, (uint64_t)&type metadata for XPCSubscriber, (uint64_t)&off_1E979F820);
  if (v0)
  {
    sub_1D430C470();
    sub_1D42B8F48();
    v4 = (uint64_t (*)(void))sub_1D430C528();
    return sub_1D430C27C(v4);
  }
  else
  {
    v6 = sub_1D42E3A4C();
    v7 = (_QWORD *)sub_1D430C5DC(v6);
    v8 = sub_1D430C308(v7);
    return sub_1D430C290(v8, v9, v10);
  }
}

uint64_t sub_1D43085E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[38] = a5;
  v6[39] = a6;
  v6[36] = a3;
  v6[37] = a4;
  v6[34] = a1;
  v6[35] = a2;
  return swift_task_switch();
}

uint64_t sub_1D4308608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t (*v16)(void);
  _QWORD *v18;

  sub_1D430C5F4();
  v11 = *(_QWORD *)(v10 + 304);
  swift_retain();
  sub_1D42E3CA4();
  v12 = sub_1D430C3E0();
  sub_1D43093D0(v12, v13, v14, v15);
  if (v11)
  {
    swift_release();
    sub_1D42B8F48();
    v16 = (uint64_t (*)(void))sub_1D430C528();
    return sub_1D430C27C(v16);
  }
  else
  {
    v18 = (_QWORD *)sub_1D42E3A4C();
    *(_QWORD *)(v10 + 320) = v18;
    *v18 = v10;
    v18[1] = sub_1D430869C;
    return sub_1D430C290(v10 + 112, v10 + 16, a10);
  }
}

uint64_t sub_1D430869C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D42B8E20();
  sub_1D430C630();
  *(_QWORD *)(v1 + 328) = v0;
  swift_task_dealloc();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D43086E8()
{
  uint64_t *v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  sub_1D430C5D4((uint64_t)(v0 + 14), (uint64_t)(v0 + 32));
  type metadata accessor for XPCDataDecoder();
  inited = swift_initStackObject();
  v0[42] = inited;
  sub_1D430C5D4((uint64_t)(v0 + 32), inited + 16);
  sub_1D430C5D4((uint64_t)(v0 + 16), (uint64_t)(v0 + 28));
  type metadata accessor for XPCProxyDecoder();
  v2 = swift_initStackObject();
  v0[43] = v2;
  sub_1D430C5D4((uint64_t)(v0 + 28), v2 + 16);
  type metadata accessor for XPCDecoder();
  v3 = swift_initStackObject();
  v0[44] = v3;
  *(_QWORD *)(v3 + 16) = inited;
  *(_QWORD *)(v3 + 24) = v2;
  sub_1D42E2EBC((uint64_t)(v0 + 32));
  sub_1D42E2EFC(v0 + 28);
  v4 = (_QWORD *)swift_task_alloc();
  v0[45] = (uint64_t)v4;
  sub_1D42E3D3C(v4, (uint64_t)sub_1D43087EC);
  return sub_1D43768A8();
}

uint64_t sub_1D43087EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  sub_1D430C4B8();
  sub_1D42E3E84(v3);
  *(_QWORD *)(v2 + 368) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 376) = v0;
  sub_1D42B8EC8();
  return sub_1D42E380C();
}

uint64_t sub_1D4308844()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  unint64_t v13;

  v1 = v0[47];
  v2 = (uint64_t *)v0[34];
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD **)(v1 + 24);
  v5 = *(_QWORD *)(v3 + 16);
  v13 = *(_QWORD *)(v3 + 24);
  sub_1D42E2EE8(v5, v13);
  v6 = v4[2];
  v7 = v4[3];
  v9 = v4[4];
  v8 = v4[5];
  sub_1D42EA340();
  sub_1D42B7FE4(v6);
  swift_release();
  sub_1D42B8F48();
  v10 = swift_setDeallocating();
  sub_1D4376FD4(v10);
  sub_1D42E3F50();
  sub_1D42B8C84(v0 + 14);
  sub_1D42B8C84(v0 + 2);
  swift_release();
  swift_release();
  *v2 = v5;
  v2[1] = v13;
  v2[2] = v6;
  v2[3] = v7;
  v2[4] = v9;
  v2[5] = v8;
  v11 = (uint64_t (*)(void))sub_1D42E3DD0();
  return v11();
}

uint64_t sub_1D4308934()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1D430C648();
  sub_1D4376FD4(v1);
  sub_1D42E3F50();
  sub_1D42B8C84((uint64_t *)(v0 + 112));
  sub_1D42B8C84((uint64_t *)(v0 + 16));
  sub_1D430C5E8();
  sub_1D42BE93C();
  return sub_1D42E3A2C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D430898C()
{
  uint64_t v0;

  sub_1D42B8C84((uint64_t *)(v0 + 16));
  sub_1D430C5E8();
  sub_1D42BE93C();
  return sub_1D42B8ED4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D43089C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[16] = a3;
  v4[17] = a4;
  v4[14] = a1;
  v4[15] = a2;
  return swift_task_switch();
}

uint64_t sub_1D43089E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  sub_1D430C544();
  sub_1D42E3CA4();
  sub_1D430C4CC();
  if (v0)
  {
    sub_1D430C4E0();
    sub_1D42B8F48();
    v2 = (uint64_t (*)(void))sub_1D430C528();
    return v2();
  }
  else
  {
    v4 = (_QWORD *)sub_1D42E3968();
    *(_QWORD *)(v1 + 144) = v4;
    v5 = sub_1D430C454(v4);
    return sub_1D430C368(v5, v6, v7);
  }
}

uint64_t sub_1D4308A5C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1D430C3B0();
  if (v1)
  {
    sub_1D42B8EC8();
    return sub_1D42E380C();
  }
  else
  {
    v3 = (_QWORD *)sub_1D42E3A4C();
    *(_QWORD *)(v0 + 160) = v3;
    v4 = sub_1D42E3C30(v3, (uint64_t)sub_1D4308ABC);
    return sub_1D42E3AB8(v4, v5);
  }
}

uint64_t sub_1D4308ABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  sub_1D430C4B8();
  sub_1D42E3E84(v3);
  *(_QWORD *)(v2 + 168) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 176) = v0;
  sub_1D42B8EC8();
  return sub_1D42E380C();
}

uint64_t sub_1D4308B14()
{
  uint64_t v0;

  sub_1D430C47C();
  sub_1D42E3FCC();
  sub_1D42CFC14();
  sub_1D42BE93C();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 176));
}

uint64_t sub_1D4308B5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t inited;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;

  type metadata accessor for XPCDataEncoder();
  inited = swift_initStackObject();
  type metadata accessor for XPCProxyEncoder();
  *(_QWORD *)(inited + 16) = 0;
  *(_QWORD *)(inited + 24) = 0;
  v8 = (_QWORD *)swift_initStackObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = a1;
  v8[5] = a2;
  type metadata accessor for XPCEncoder();
  v9 = swift_initStackObject();
  *(_QWORD *)(v9 + 16) = inited;
  *(_QWORD *)(v9 + 24) = v8;
  swift_retain();
  swift_retain();
  v10 = sub_1D42B738C();
  if (v3)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    v14 = v10;
    v15 = v11;
    v16 = v12;
    v17 = v13;
    swift_release();
    swift_retain();
    v18 = sub_1D439E26C();
    v22 = v19;
    swift_release();
    v21 = swift_setDeallocating();
    sub_1D4376FD4(v21);
    result = swift_deallocClassInstance();
    *a3 = v18;
    a3[1] = v22;
    a3[2] = v14;
    a3[3] = v15;
    a3[4] = v16;
    a3[5] = v17;
  }
  return result;
}

uint64_t sub_1D4308CC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  _QWORD *v10;
  uint64_t inited;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  _QWORD v24[5];
  uint64_t v25;

  type metadata accessor for XPCDataEncoder();
  v9 = swift_allocObject();
  type metadata accessor for XPCProxyEncoder();
  *(_QWORD *)(v9 + 16) = 0;
  *(_QWORD *)(v9 + 24) = 0;
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = a2;
  v10[5] = a3;
  type metadata accessor for XPCEncoder();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v9;
  *(_QWORD *)(inited + 24) = v10;
  swift_retain();
  sub_1D447DAC4();
  v24[3] = MEMORY[0x1E0DEBB98];
  v24[4] = &off_1E97AEF58;
  v24[0] = a1;
  swift_retain();
  sub_1D439E75C(v24);
  swift_release();
  swift_release();
  sub_1D42B5400((uint64_t)v24);
  if (v4)
    return swift_release();
  swift_retain();
  v12 = sub_1D42B738C();
  v14 = v13;
  v16 = v15;
  v18 = v17;
  swift_release();
  swift_retain();
  v19 = sub_1D439E26C();
  v25 = v20;
  swift_release();
  v21 = swift_setDeallocating();
  sub_1D4376FD4(v21);
  result = swift_deallocClassInstance();
  v23 = v25;
  *a4 = v19;
  a4[1] = v23;
  a4[2] = v12;
  a4[3] = v14;
  a4[4] = v16;
  a4[5] = v18;
  return result;
}

uint64_t sub_1D4308E90@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  _QWORD *v10;
  uint64_t inited;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;

  type metadata accessor for XPCDataEncoder();
  v9 = swift_allocObject();
  type metadata accessor for XPCProxyEncoder();
  *(_QWORD *)(v9 + 16) = 0;
  *(_QWORD *)(v9 + 24) = 0;
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = a2;
  v10[5] = a3;
  type metadata accessor for XPCEncoder();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v9;
  *(_QWORD *)(inited + 24) = v10;
  swift_retain();
  sub_1D430B480(inited, a1);
  if (v4)
    return swift_release();
  swift_retain();
  v12 = sub_1D42B738C();
  v14 = v13;
  v16 = v15;
  v18 = v17;
  swift_release();
  swift_retain();
  v19 = sub_1D439E26C();
  v23 = v20;
  swift_release();
  v21 = swift_setDeallocating();
  sub_1D4376FD4(v21);
  result = swift_deallocClassInstance();
  *a4 = v19;
  a4[1] = v23;
  a4[2] = v12;
  a4[3] = v14;
  a4[4] = v16;
  a4[5] = v18;
  return result;
}

uint64_t sub_1D430901C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  _QWORD *v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t *v31;

  v5 = v4;
  type metadata accessor for XPCDataEncoder();
  v10 = sub_1D42B6F40();
  type metadata accessor for XPCProxyEncoder();
  *(_QWORD *)(v10 + 16) = 0;
  *(_QWORD *)(v10 + 24) = 0;
  v11 = (_QWORD *)sub_1D42B6F40();
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = a2;
  v11[5] = a3;
  type metadata accessor for XPCEncoder();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v10;
  *(_QWORD *)(inited + 24) = v11;
  sub_1D42BE934();
  sub_1D447DAC4();
  v13 = *a1;
  v14 = a1[1];
  sub_1D42BE934();
  sub_1D439E174(v13, v14);
  if (v5)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    v31 = a4;
    sub_1D42B8F48();
    v15 = a1[2];
    v16 = a1[3];
    v17 = a1[4];
    v18 = a1[5];
    sub_1D42BE934();
    sub_1D42B7C80(v15, v16, v17, v18);
    swift_release();
    sub_1D42B8F48();
    sub_1D430C608();
    v19 = sub_1D42B738C();
    v21 = v20;
    v23 = v22;
    v25 = v24;
    swift_release();
    sub_1D42EA340();
    v26 = sub_1D439E26C();
    v28 = v27;
    sub_1D42EA1BC();
    v29 = swift_setDeallocating();
    sub_1D4376FD4(v29);
    result = sub_1D42E3F50();
    *v31 = v26;
    v31[1] = v28;
    v31[2] = v19;
    v31[3] = v21;
    v31[4] = v23;
    v31[5] = v25;
  }
  return result;
}

uint64_t sub_1D43091FC@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v6;
  uint64_t v12;
  _QWORD *v13;
  uint64_t inited;
  _OWORD *v15;
  __int128 v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  _QWORD v30[5];
  uint64_t *v31;

  v31 = a6;
  type metadata accessor for XPCDataEncoder();
  v12 = sub_1D42B6F40();
  type metadata accessor for XPCProxyEncoder();
  *(_QWORD *)(v12 + 16) = 0;
  *(_QWORD *)(v12 + 24) = 0;
  v13 = (_QWORD *)sub_1D42B6F40();
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = a2;
  v13[5] = a3;
  type metadata accessor for XPCEncoder();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v12;
  *(_QWORD *)(inited + 24) = v13;
  sub_1D42BE934();
  sub_1D447DAC4();
  v30[3] = a4;
  v30[4] = a5;
  v15 = (_OWORD *)sub_1D42B6F40();
  v30[0] = v15;
  v16 = a1[1];
  v15[1] = *a1;
  v15[2] = v16;
  v15[3] = a1[2];
  sub_1D42BE934();
  sub_1D42B8F24();
  sub_1D430C608();
  sub_1D42EA340();
  sub_1D42B7B80();
  swift_release();
  sub_1D42B8F48();
  sub_1D42B5400((uint64_t)v30);
  if (v6)
    return swift_release();
  v17 = v31;
  sub_1D42BE934();
  v18 = sub_1D42B738C();
  v20 = v19;
  v22 = v21;
  v24 = v23;
  sub_1D42B8F48();
  sub_1D42BE934();
  v25 = sub_1D439E26C();
  v29 = v26;
  sub_1D42B8F48();
  v27 = swift_setDeallocating();
  sub_1D4376FD4(v27);
  result = sub_1D42E3F50();
  *v17 = v25;
  v17[1] = v29;
  v17[2] = v18;
  v17[3] = v20;
  v17[4] = v22;
  v17[5] = v24;
  return result;
}

uint64_t sub_1D43093D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  _QWORD *v10;
  uint64_t inited;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25[5];
  uint64_t v26;

  type metadata accessor for XPCDataEncoder();
  v9 = swift_allocObject();
  type metadata accessor for XPCProxyEncoder();
  *(_QWORD *)(v9 + 16) = 0;
  *(_QWORD *)(v9 + 24) = 0;
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = a2;
  v10[5] = a3;
  type metadata accessor for XPCEncoder();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v9;
  *(_QWORD *)(inited + 24) = v10;
  swift_retain();
  sub_1D447DAC4();
  v25[3] = type metadata accessor for RemoteRequest();
  v25[4] = (uint64_t)&off_1E979F300;
  v12 = sub_1D430BBF0(v25);
  sub_1D430BC2C(a1, (uint64_t)v12);
  swift_retain();
  sub_1D439E75C(v25);
  swift_release();
  swift_release();
  sub_1D42B5400((uint64_t)v25);
  if (v4)
    return swift_release();
  swift_retain();
  v13 = sub_1D42B738C();
  v15 = v14;
  v17 = v16;
  v19 = v18;
  swift_release();
  swift_retain();
  v20 = sub_1D439E26C();
  v26 = v21;
  swift_release();
  v22 = swift_setDeallocating();
  sub_1D4376FD4(v22);
  result = swift_deallocClassInstance();
  v24 = v26;
  *a4 = v20;
  a4[1] = v24;
  a4[2] = v13;
  a4[3] = v15;
  a4[4] = v17;
  a4[5] = v19;
  return result;
}

uint64_t sub_1D43095B0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v3)(void);
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)sub_1D430C334();
  *(_QWORD *)(v1 + 24) = v2;
  v3 = (uint64_t (*)(void))sub_1D430C4A4(v2, (uint64_t)sub_1D43095FC, v5, v6);
  return sub_1D430C35C(v3);
}

uint64_t sub_1D43095FC()
{
  sub_1D430C4F4();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4309638(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v3)(void);
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)sub_1D430C334();
  *(_QWORD *)(v1 + 24) = v2;
  v3 = (uint64_t (*)(void))sub_1D430C4A4(v2, (uint64_t)sub_1D4309684, v5, v6);
  return sub_1D430C35C(v3);
}

uint64_t sub_1D4309684()
{
  sub_1D430C4F4();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D43096C0(_OWORD *a1)
{
  uint64_t v1;
  __int128 v2;
  _QWORD *v3;
  uint64_t (*v4)(void);
  uint64_t v6;
  uint64_t v7;

  v2 = a1[1];
  *(_OWORD *)(v1 + 16) = *a1;
  *(_OWORD *)(v1 + 32) = v2;
  *(_OWORD *)(v1 + 48) = a1[2];
  v3 = (_QWORD *)sub_1D430C334();
  *(_QWORD *)(v1 + 64) = v3;
  v4 = (uint64_t (*)(void))sub_1D430C4A4(v3, (uint64_t)sub_1D4309718, v6, v7);
  return sub_1D430C35C(v4);
}

uint64_t sub_1D4309718()
{
  sub_1D430C37C();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4309754(_OWORD *a1)
{
  uint64_t v1;
  __int128 v2;
  _QWORD *v3;
  uint64_t (*v4)(void);
  uint64_t v6;
  uint64_t v7;

  v2 = a1[1];
  *(_OWORD *)(v1 + 16) = *a1;
  *(_OWORD *)(v1 + 32) = v2;
  *(_OWORD *)(v1 + 48) = a1[2];
  v3 = (_QWORD *)sub_1D430C334();
  *(_QWORD *)(v1 + 64) = v3;
  v4 = (uint64_t (*)(void))sub_1D430C4A4(v3, (uint64_t)sub_1D43097AC, v6, v7);
  return sub_1D430C35C(v4);
}

uint64_t sub_1D43097AC()
{
  sub_1D430C37C();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D43097E8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D43097F4(_OWORD *a1, int *a2)
{
  uint64_t v2;
  __int128 v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v3 = a1[1];
  *(_OWORD *)(v2 + 16) = *a1;
  *(_OWORD *)(v2 + 32) = v3;
  *(_OWORD *)(v2 + 48) = a1[2];
  v6 = (uint64_t (*)(void))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 64) = v4;
  *v4 = v2;
  v4[1] = sub_1D4309718;
  return v6();
}

void sub_1D4309864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[5];

  sub_1D42B740C();
  v5 = sub_1D42B6F40();
  *(_QWORD *)(v5 + 16) = a2;
  *(_QWORD *)(v5 + 24) = a3;
  v6 = sub_1D42B6F40();
  *(_QWORD *)(v6 + 16) = &unk_1EFE4B290;
  *(_QWORD *)(v6 + 24) = v5;
  v7[3] = sub_1D42B28FC(&qword_1EFE4B2A8);
  v7[4] = sub_1D430BEC0();
  v7[0] = &unk_1EFE4B2A0;
  v7[1] = v6;
  sub_1D42BE934();
  swift_retain();
  sub_1D42BE984();
  sub_1D42EA340();
  sub_1D42B7A94();
  sub_1D42EA1BC();
  sub_1D42B5400((uint64_t)v7);
  swift_release_n();
  sub_1D42FC448();
  sub_1D430C580();
}

uint64_t sub_1D430993C(_OWORD *a1, int *a2)
{
  uint64_t v2;
  __int128 v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v3 = a1[1];
  *(_OWORD *)(v2 + 16) = *a1;
  *(_OWORD *)(v2 + 32) = v3;
  *(_OWORD *)(v2 + 48) = a1[2];
  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 64) = v4;
  *v4 = v2;
  v4[1] = sub_1D430C140;
  return v6(v2 + 16);
}

uint64_t sub_1D43099AC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  swift_retain();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1D4309A00;
  return sub_1D4309A3C(a1);
}

uint64_t sub_1D4309A00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1D42F9A68();
  if (!v2)
  {
    v6 = a1;
    v7 = a2;
  }
  return sub_1D430C534(v6, v7, *(uint64_t (**)(void))(v3 + 8));
}

uint64_t sub_1D4309A3C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  sub_1D42E3D3C(v2, (uint64_t)sub_1D4309A84);
  return sub_1D4367B88();
}

uint64_t sub_1D4309A84(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 32) = a1;
  *(_QWORD *)(v3 + 40) = v1;
  swift_task_dealloc();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4309AE4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  v3 = (uint64_t (*)(void))((char *)&dword_1EFE4B110 + dword_1EFE4B110);
  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_1D4309B44;
  return sub_1D42B8DC0(v3);
}

uint64_t sub_1D4309B44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_1D42E3EE0();
  sub_1D42E3E84(v4);
  v3[7] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v3[8] = v0;
    v3[9] = v2;
  }
  sub_1D42B8EC8();
  return sub_1D42E3818();
}

uint64_t sub_1D4309BA0()
{
  uint64_t v0;
  int8x16_t *v1;
  uint64_t v2;

  v1 = (int8x16_t *)sub_1D42B6F40();
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 64), *(int8x16_t *)(v0 + 64), 8uLL);
  swift_release_n();
  sub_1D42BE93C();
  v2 = sub_1D42B6F40();
  *(_QWORD *)(v2 + 16) = &unk_1EFE4B120;
  *(_QWORD *)(v2 + 24) = v1;
  return sub_1D430C534((uint64_t)&unk_1EFE4B130, v2, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4309C28()
{
  uint64_t v0;

  swift_release_n();
  swift_release();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4309C60()
{
  uint64_t v0;

  swift_release();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4309C8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_1D4309CDC;
  return sub_1D43099AC(a2);
}

uint64_t sub_1D4309CDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  sub_1D42E3EE0();
  v5 = *v3;
  sub_1D430C44C(v6);
  if (!v1)
  {
    v7 = *(_QWORD **)(v4 + 16);
    *v7 = v2;
    v7[1] = v0;
  }
  return sub_1D42B8ED4(*(uint64_t (**)(void))(v5 + 8));
}

void sub_1D4309D24(uint64_t a1)
{
  uint64_t *v1;

  sub_1D4309864(a1, *v1, v1[1]);
}

uint64_t sub_1D4309D3C()
{
  uint64_t v0;

  sub_1D430C5AC();
  v0 = swift_allocObject();
  sub_1D4309D88();
  return v0;
}

uint64_t *sub_1D4309D88()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  sub_1D430C5AC();
  v4 = *v1;
  swift_defaultActor_initialize();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v4 + 80) - 8) + 32))((uint64_t)v1 + *(_QWORD *)(*v1 + 104), v3);
  v5 = (uint64_t *)((char *)v1 + *(_QWORD *)(*v1 + 112));
  *v5 = v2;
  v5[1] = v0;
  return v1;
}

uint64_t sub_1D4309DF4(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[3] = a1;
  v2[4] = v1;
  v2[5] = *v1;
  return swift_task_switch();
}

uint64_t sub_1D4309E14()
{
  _QWORD *v0;
  _OWORD *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v6;

  v1 = (_OWORD *)v0[3];
  v2 = (uint64_t *)(v0[4] + *(_QWORD *)(*(_QWORD *)v0[4] + 112));
  v3 = v2[1];
  v6 = *v2;
  type metadata accessor for CombineSubscriberFromXPCAdapter();
  sub_1D42B6F40();
  sub_1D42E3CA4();
  sub_1D42B8F24();
  swift_retain();
  sub_1D430C608();
  v0[2] = sub_1D4454F00(v1, v6, v3);
  sub_1D430BF24(&qword_1EFE4B2B8, 255, (uint64_t (*)(uint64_t))type metadata accessor for CombineSubscriberFromXPCAdapter, (uint64_t)&unk_1D4540CA8);
  sub_1D451A2CC();
  sub_1D42BE93C();
  v4 = (uint64_t (*)(void))sub_1D42E3DD0();
  return v4();
}

uint64_t sub_1D4309F1C()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 104));
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_1D4309F68()
{
  sub_1D4309F1C();
  return swift_defaultActor_deallocate();
}

uint64_t sub_1D4309F80()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D4309F8C()
{
  return sub_1D4309F80();
}

void sub_1D4309FA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[2] = a1;
  v4[3] = a2;
  v4[4] = a3;
  v4[5] = a4;
  type metadata accessor for AsyncDispatchQueue();
  swift_allocObject();
  v4[6] = sub_1D43EBA48();
  sub_1D42B6E24();
}

uint64_t sub_1D4309FE8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v3 = v2;
  v6 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  sub_1D42CB210();
  v9 = v8 - v7;
  type metadata accessor for CombineSubscriberToXPCAdapterImpl(0, v10, v11, v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v9, a1, a2);
  v13 = v3[4];
  v14 = v3[5];
  sub_1D42B8F24();
  sub_1D44541E8(v9, v13, v14);
  v16 = v15;
  v18 = v3[2];
  v17 = v3[3];
  v19 = (_QWORD *)sub_1D42B6F40();
  v19[2] = v18;
  v19[3] = v17;
  v19[4] = &unk_1EFE4B0B0;
  v19[5] = v16;
  v19[6] = &unk_1EFE4B0C0;
  v19[7] = v16;
  v19[8] = &unk_1EFE4B0D0;
  v19[9] = v16;
  swift_retain_n();
  sub_1D42BE984();
  sub_1D43EB978((uint64_t)&unk_1EFE4B0E0, (uint64_t)v19);
  swift_release_n();
  return sub_1D42BE93C();
}

uint64_t sub_1D430A0F8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1D42F9A58;
  return sub_1D4454ADC(a1);
}

uint64_t sub_1D430A148(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1D42F9A58;
  return sub_1D4454B78(a1);
}

uint64_t sub_1D430A198(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1D42F9A58;
  return sub_1D4454E2C(a1);
}

uint64_t sub_1D430A1E8(int *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v7 = (uint64_t (*)(uint64_t))((char *)a1 + *a1);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v5;
  *v5 = v3;
  v5[1] = sub_1D430A250;
  return v7(a3);
}

uint64_t sub_1D430A250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D430C630();
  *(_QWORD *)(v2 + 24) = v0;
  swift_task_dealloc();
  if (!v0)
    return sub_1D42B8DC0(*(uint64_t (**)(void))(v1 + 8));
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D430A2A4()
{
  uint64_t v0;

  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D430A2CC()
{
  uint64_t v0;

  sub_1D42B8F98();
  sub_1D42B8F2C();
  swift_release();
  return v0;
}

uint64_t sub_1D430A2F0()
{
  sub_1D430A2CC();
  return swift_deallocClassInstance();
}

uint64_t sub_1D430A310(uint64_t a1, uint64_t a2)
{
  return sub_1D4309FE8(a1, a2);
}

void *sub_1D430A330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v16;

  v10 = sub_1D451A11C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v16 - v12;
  v14 = (_QWORD *)sub_1D42B6F40();
  v14[2] = a3;
  v14[3] = a4;
  v14[4] = a5;
  v14[5] = a1;
  v14[6] = a2;
  sub_1D42E3CA4();
  sub_1D451A3A4();
  swift_release();
  MEMORY[0x1D825E41C](MEMORY[0x1E0C95B48], v10);
  sub_1D430A4FC();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return &unk_1EFE4B2F8;
}

double sub_1D430A458@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X5>, _OWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  double result;
  __int128 v11;
  _OWORD v12[2];
  __int128 v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1D447DD10(a1, a2, AssociatedTypeWitness, a3, (uint64_t *)v12);
  if (!v4)
  {
    v11 = v12[1];
    *a4 = v12[0];
    a4[1] = v11;
    result = *(double *)&v13;
    a4[2] = v13;
  }
  return result;
}

void *sub_1D430A4FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1D430C5AC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1D42CB210();
  v7 = v6 - v5;
  type metadata accessor for CombinePublisherToXPCAdapterImpl(0, v8, v9, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v7, v1, v0);
  sub_1D42B8F24();
  sub_1D4309D3C();
  return &unk_1EFE4B2F8;
}

uint64_t sub_1D430A5A4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1D42F9A58;
  return sub_1D4309DF4(a1);
}

uint64_t sub_1D430A5F4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v24 = a6;
  v25 = a7;
  v21 = a3;
  v22 = a1;
  v10 = sub_1D42B28FC((uint64_t *)&unk_1EFE4E150);
  MEMORY[0x1E0C80A78](v10);
  sub_1D42CB210();
  sub_1D430B3D4();
  v11 = sub_1D451B7E4();
  v23 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v21 - v12;
  v14 = type metadata accessor for CombinePublisherFromXPCAdapter();
  v15 = sub_1D42B6F40();
  swift_retain();
  sub_1D42BE934();
  sub_1D4309FA4(v21, a4, v22, a2);
  v26 = v15;
  sub_1D430BF24(&qword_1EFE4B0F0, v16, (uint64_t (*)(uint64_t))type metadata accessor for CombinePublisherFromXPCAdapter, (uint64_t)&unk_1D452950C);
  MEMORY[0x1D825BCEC](v14, v17);
  swift_release();
  v18 = sub_1D42B6F40();
  v19 = v24;
  *(_QWORD *)(v18 + 16) = a5;
  *(_QWORD *)(v18 + 24) = v19;
  sub_1D451AB78();
  sub_1D42BE93C();
  MEMORY[0x1D825E41C](MEMORY[0x1E0DF0E68], v11);
  sub_1D438C7BC(v11, v25);
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v13, v11);
}

uint64_t sub_1D430A7B4(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  __int128 v8;
  _QWORD *v9;

  v8 = a2[1];
  *(_OWORD *)(v4 + 16) = *a2;
  *(_OWORD *)(v4 + 32) = v8;
  *(_OWORD *)(v4 + 48) = a2[2];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 64) = v9;
  *v9 = v4;
  v9[1] = sub_1D430A838;
  return sub_1D4376698(a1, a3, v4 + 16, a3, a4);
}

uint64_t sub_1D430A838()
{
  uint64_t v0;

  sub_1D430C324();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D430A86C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  sub_1D42B8B10((uint64_t *)&unk_1EFE4E150);
  sub_1D430B3D4();
  v4 = sub_1D451B7E4();
  v5 = MEMORY[0x1D825E41C](MEMORY[0x1E0DF0E68], v4);
  v7 = type metadata accessor for AsyncSequencePublisher(0, v4, v5, v6);
  v3[9] = v7;
  v3[10] = *(_QWORD *)(v7 - 8);
  v3[11] = swift_task_alloc();
  v8 = (_QWORD *)swift_task_alloc();
  v3[12] = v8;
  sub_1D42E3D3C(v8, (uint64_t)sub_1D430A930);
  return sub_1D43768A8();
}

uint64_t sub_1D430A930()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v5;
  uint64_t (*v6)(void);

  sub_1D430C4B8();
  sub_1D42E3E84(v3);
  v2[13] = v0;
  v2[14] = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_1D42B8EC8();
    return sub_1D42E380C();
  }
  else
  {
    v5 = (_QWORD *)sub_1D42E3968();
    v2[15] = v5;
    sub_1D42E3D3C(v5, (uint64_t)sub_1D430A9A4);
    return sub_1D42E3A2C(v6);
  }
}

uint64_t sub_1D430A9A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D42B8E20();
  v3[2] = v1;
  v3[3] = v2;
  v3[4] = v4;
  v3[5] = v0;
  sub_1D430C630();
  *(_QWORD *)(v5 + 128) = v0;
  swift_task_dealloc();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

void sub_1D430A9F8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD **)(*(_QWORD *)(v0 + 104) + 24);
  if (v1[2])
  {
    v2 = *(_QWORD *)(v0 + 24);
    v3 = *(_QWORD *)(v0 + 32);
    v4 = *(_QWORD *)(v0 + 88);
    v6 = *(_QWORD *)(v0 + 64);
    v5 = *(_QWORD *)(v0 + 72);
    v7 = *(_QWORD *)(v0 + 56);
    v11 = *(_QWORD *)(v0 + 80);
    v8 = v1[4];
    v9 = v1[5];
    swift_retain();
    sub_1D430A5F4(v8, v9, v2, v3, v7, v6, v4);
    swift_release();
    swift_release();
    MEMORY[0x1D825E41C](&unk_1D4532BA0, v5);
    v10 = sub_1D451A2E4();
    swift_release();
    sub_1D42BE93C();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v4, v5);
    swift_task_dealloc();
    (*(void (**)(uint64_t))(v0 + 8))(v10);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1D430AAF4()
{
  uint64_t v0;

  sub_1D430C610();
  swift_task_dealloc();
  return sub_1D42E39E4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D430AB24()
{
  uint64_t v0;

  swift_release();
  sub_1D430C610();
  swift_task_dealloc();
  return sub_1D42E39E4(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1D430AB5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[5];

  v14[0] = v5;
  v7 = *(_QWORD *)(sub_1D430C594() + 24);
  v8 = *(_QWORD *)(v7 + 32);
  v9 = *(_QWORD *)(v7 + 40);
  swift_retain();
  sub_1D42B8B10(&qword_1EFE49BB0);
  v10 = sub_1D451A1D0();
  v11 = MEMORY[0x1D825E41C](MEMORY[0x1E0C95D90], v10);
  sub_1D430A330(v8, v9, v10, v11, a5);
  v13 = v12;
  sub_1D42EA438();
  v14[3] = &type metadata for XPCPublisher;
  v14[4] = &off_1E979E558;
  v14[0] = &unk_1EFE4B2F8;
  v14[1] = v13;
  sub_1D447DAE0(v14);
  sub_1D42FC448();
  sub_1D42B5400((uint64_t)v14);
  sub_1D430C424();
}

uint64_t sub_1D430AC44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  swift_retain();
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  sub_1D42E3D3C(v7, (uint64_t)sub_1D430ACAC);
  return sub_1D430A86C(a1, a2, a3);
}

uint64_t sub_1D430ACAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = sub_1D42F9A68();
  if (!v1)
    v4 = a1;
  return (*(uint64_t (**)(uint64_t))(v2 + 8))(v4);
}

void sub_1D430ACE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  sub_1D430AB5C(a1, *v4, *(_QWORD *)(a2 + 16), a4, *(_QWORD *)(a3 - 16));
}

uint64_t sub_1D430AD08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  *(_QWORD *)(v4 + 16) = a1;
  v7 = *(_QWORD *)(a4 - 8);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v8;
  v9 = *(_QWORD *)(a3 + 16);
  *v8 = v4;
  v8[1] = sub_1D430C144;
  return sub_1D430AC44(a2, v9, v7);
}

uint64_t sub_1D430AD70()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for CombinePublisherToXPCAdapterImpl(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CombinePublisherToXPCAdapterImpl);
}

uint64_t type metadata accessor for CombinePublisherFromXPCAdapter()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for XPCPublisher()
{
  return &type metadata for XPCPublisher;
}

uint64_t sub_1D430AE34()
{
  return MEMORY[0x1E0DEDB38];
}

uint64_t sub_1D430AE40()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1D430C490(v1, (uint64_t)sub_1D42F9A58);
  return sub_1D430A0F8(v2);
}

uint64_t sub_1D430AE84()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1D430C490(v1, (uint64_t)sub_1D42F9A58);
  return sub_1D430A148(v2);
}

uint64_t sub_1D430AEC8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1D430C490(v1, (uint64_t)sub_1D42F9A58);
  return sub_1D430A198(v2);
}

uint64_t sub_1D430AF0C()
{
  sub_1D42B8F98();
  sub_1D42B8F2C();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D430AF40()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(int **)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1D42F92EC;
  return sub_1D430A1E8(v2, v3, v0 + 32);
}

uint64_t sub_1D430AFA0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 96) = v0;
  return sub_1D42E39F0();
}

void sub_1D430AFB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  sub_1D42E39FC();
  sub_1D430C574();
  if (v5 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1D430C43C();
    if (!v7)
    {
      sub_1D430C1EC(v6);
      v8 = (_QWORD *)sub_1D430C554();
      *(_QWORD *)(v2 + 136) = v8;
      v8[2] = v0;
      v8[3] = v1;
      v8[4] = v3;
      v8[5] = v4;
      sub_1D430C254();
      sub_1D430C254();
      v9 = (_QWORD *)sub_1D42E3968();
      *(_QWORD *)(v2 + 144) = v9;
      v10 = sub_1D430C39C(v9, (uint64_t)sub_1D430B024);
      sub_1D430C268(v10, v11);
      return;
    }
  }
  __break(1u);
}

uint64_t sub_1D430B024(uint64_t a1, uint64_t a2)
{
  sub_1D430C22C(a1, a2);
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D430B060()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 96) = v0;
  return sub_1D42E39F0();
}

void sub_1D430B070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  sub_1D42E39FC();
  sub_1D430C574();
  if (v5 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1D430C43C();
    if (!v7)
    {
      sub_1D430C1EC(v6);
      v8 = (_QWORD *)sub_1D430C554();
      *(_QWORD *)(v2 + 136) = v8;
      v8[2] = v0;
      v8[3] = v1;
      v8[4] = v3;
      v8[5] = v4;
      sub_1D430C254();
      sub_1D430C254();
      v9 = (_QWORD *)sub_1D42E3968();
      *(_QWORD *)(v2 + 144) = v9;
      v10 = sub_1D430C39C(v9, (uint64_t)sub_1D430B024);
      sub_1D430C268(v10, v11);
      return;
    }
  }
  __break(1u);
}

uint64_t sub_1D430B0E4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 96) = v0;
  return sub_1D42E39F0();
}

void sub_1D430B0F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  sub_1D42E39FC();
  sub_1D430C574();
  if (v5 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1D430C43C();
    if (!v7)
    {
      sub_1D430C1EC(v6);
      v8 = (_QWORD *)sub_1D430C554();
      *(_QWORD *)(v2 + 136) = v8;
      v8[2] = v0;
      v8[3] = v1;
      v8[4] = v3;
      v8[5] = v4;
      sub_1D430C254();
      sub_1D430C254();
      v9 = (_QWORD *)sub_1D42E3968();
      *(_QWORD *)(v2 + 144) = v9;
      v10 = sub_1D430C39C(v9, (uint64_t)sub_1D430B024);
      sub_1D430C268(v10, v11);
      return;
    }
  }
  __break(1u);
}

uint64_t sub_1D430B168()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 96) = v0;
  return sub_1D42E39F0();
}

void sub_1D430B178()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  sub_1D42E39FC();
  sub_1D430C574();
  if (v5 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1D430C43C();
    if (!v7)
    {
      sub_1D430C1EC(v6);
      v8 = (_QWORD *)sub_1D430C554();
      *(_QWORD *)(v2 + 136) = v8;
      v8[2] = v0;
      v8[3] = v1;
      v8[4] = v3;
      v8[5] = v4;
      sub_1D430C254();
      sub_1D430C254();
      v9 = (_QWORD *)sub_1D42E3968();
      *(_QWORD *)(v2 + 144) = v9;
      v10 = sub_1D430C39C(v9, (uint64_t)sub_1D430B024);
      sub_1D430C268(v10, v11);
      return;
    }
  }
  __break(1u);
}

uint64_t sub_1D430B1EC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 96) = v0;
  return sub_1D42E39F0();
}

void sub_1D430B1FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  sub_1D42E39FC();
  sub_1D430C574();
  if (v5 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1D430C43C();
    if (!v7)
    {
      sub_1D430C1EC(v6);
      v8 = (_QWORD *)sub_1D430C554();
      *(_QWORD *)(v2 + 136) = v8;
      v8[2] = v0;
      v8[3] = v1;
      v8[4] = v3;
      v8[5] = v4;
      sub_1D430C254();
      sub_1D430C254();
      v9 = (_QWORD *)sub_1D42E3968();
      *(_QWORD *)(v2 + 144) = v9;
      v10 = sub_1D430C39C(v9, (uint64_t)sub_1D430B270);
      sub_1D430C268(v10, v11);
      return;
    }
  }
  __break(1u);
}

uint64_t sub_1D430B270(uint64_t a1, uint64_t a2)
{
  sub_1D430C22C(a1, a2);
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D430B2AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 96);
  sub_1D42B8CF0(*(_QWORD *)(v0 + 104));
  sub_1D430C648();
  result = sub_1D430C658();
  v3 = *(_QWORD *)(v1 + 24);
  v4 = __OFADD__(v3, 1);
  v5 = v3 + 1;
  if (v4)
  {
    __break(1u);
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 72);
    v7 = *(_QWORD *)(v0 + 80);
    *(_QWORD *)(*(_QWORD *)(v0 + 96) + 24) = v5;
    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v6, v7);
  }
  return result;
}

uint64_t sub_1D430B30C()
{
  uint64_t v0;

  sub_1D42B8CF0(*(_QWORD *)(v0 + 104));
  sub_1D430C648();
  sub_1D430C658();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D430B348()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 96) = v0;
  return swift_task_switch();
}

void sub_1D430B360()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  sub_1D42E39FC();
  sub_1D430C574();
  if (v5 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1D430C43C();
    if (!v7)
    {
      sub_1D430C1EC(v6);
      v8 = (_QWORD *)sub_1D430C554();
      *(_QWORD *)(v2 + 136) = v8;
      v8[2] = v0;
      v8[3] = v1;
      v8[4] = v3;
      v8[5] = v4;
      sub_1D430C254();
      sub_1D430C254();
      v9 = (_QWORD *)sub_1D42E3968();
      *(_QWORD *)(v2 + 144) = v9;
      v10 = sub_1D430C39C(v9, (uint64_t)sub_1D430B024);
      sub_1D430C268(v10, v11);
      return;
    }
  }
  __break(1u);
}

unint64_t sub_1D430B3D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFE4B0E8;
  if (!qword_1EFE4B0E8)
  {
    v1 = sub_1D42B8B10((uint64_t *)&unk_1EFE4E150);
    result = MEMORY[0x1D825E41C](MEMORY[0x1E0C96010], v1);
    atomic_store(result, (unint64_t *)&qword_1EFE4B0E8);
  }
  return result;
}

uint64_t sub_1D430B418()
{
  return swift_deallocObject();
}

uint64_t sub_1D430B428()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = swift_task_alloc();
  v2 = (_QWORD *)sub_1D42B8F00(v1);
  *v2 = v0;
  v2[1] = sub_1D42F9A58;
  v3 = sub_1D430C5BC();
  return sub_1D430A7B4(v3, v4, v5, v6);
}

uint64_t sub_1D430B480(uint64_t a1, void *a2)
{
  uint64_t v2;
  id v4;
  id v5;
  _QWORD v7[3];
  ValueMetadata *v8;
  _UNKNOWN **v9;

  sub_1D447DE84();
  if (a2)
  {
    v8 = (ValueMetadata *)MEMORY[0x1E0DEAFA0];
    v9 = &off_1E97AD880;
    LOBYTE(v7[0]) = 1;
    v4 = a2;
    sub_1D447DF1C(v7);
    if (!v2)
    {
      sub_1D42B5400((uint64_t)v7);
      v8 = &type metadata for XPCError;
      v9 = &off_1E97ACF30;
      v7[0] = a2;
      v5 = a2;
      sub_1D447DF1C(v7);
    }

  }
  else
  {
    v8 = (ValueMetadata *)MEMORY[0x1E0DEAFA0];
    v9 = &off_1E97AD880;
    LOBYTE(v7[0]) = 0;
    sub_1D447DF1C(v7);
  }
  swift_release();
  return sub_1D42B5400((uint64_t)v7);
}

uint64_t sub_1D430B568(uint64_t a1, _OWORD *a2)
{
  uint64_t v2;
  __int128 v3;
  _QWORD *v4;

  v3 = a2[1];
  *(_OWORD *)(v2 + 16) = *a2;
  *(_OWORD *)(v2 + 32) = v3;
  *(_OWORD *)(v2 + 48) = a2[2];
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 64) = v4;
  *v4 = v2;
  v4[1] = sub_1D430C140;
  return sub_1D4454018((_OWORD *)(v2 + 16));
}

uint64_t sub_1D430B5DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v11;
  *v11 = v6;
  v11[1] = sub_1D42F92EC;
  return sub_1D4307D44(a3, a4, a5, a6);
}

uint64_t sub_1D430B648(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v11;
  _QWORD *v12;

  v11 = *a2;
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v12;
  *v12 = v6;
  v12[1] = sub_1D42F9A58;
  return sub_1D4307F28(v11, a3, a4, a5, a6);
}

uint64_t sub_1D430B6C4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v11;
  _QWORD *v12;

  v11 = *a2;
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v12;
  *v12 = v6;
  v12[1] = sub_1D42F9A58;
  return sub_1D4308048(v11, a3, a4, a5, a6);
}

uint64_t sub_1D430B740(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  __int128 v11;
  _QWORD *v12;

  v11 = a2[1];
  *(_OWORD *)(v6 + 16) = *a2;
  *(_OWORD *)(v6 + 32) = v11;
  *(_OWORD *)(v6 + 48) = a2[2];
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 64) = v12;
  *v12 = v6;
  v12[1] = sub_1D430C140;
  return sub_1D43080CC(v6 + 16, a3, a4, a5, a6);
}

uint64_t sub_1D430B7CC(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  __int128 v11;
  _QWORD *v12;

  v11 = a2[1];
  *(_OWORD *)(v6 + 16) = *a2;
  *(_OWORD *)(v6 + 32) = v11;
  *(_OWORD *)(v6 + 48) = a2[2];
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 64) = v12;
  *v12 = v6;
  v12[1] = sub_1D430A838;
  return sub_1D4308164(v6 + 16, a3, a4, a5, a6);
}

uint64_t sub_1D430B858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v11;

  *(_QWORD *)(v6 + 16) = a1;
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 24) = v11;
  *v11 = v6;
  v11[1] = sub_1D430B8C8;
  return sub_1D4308334(a3, a4, a5, a6);
}

uint64_t sub_1D430B8C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  sub_1D430C61C();
  v11 = *v5;
  sub_1D430C44C(v12);
  if (!v4)
  {
    v13 = *(_QWORD **)(v7 + 16);
    *v13 = v6;
    v13[1] = a2;
    v13[2] = a3;
    v13[3] = a4;
  }
  return sub_1D42B8ED4(*(uint64_t (**)(void))(v11 + 8));
}

uint64_t sub_1D430B928(_OWORD *a1, int *a2)
{
  uint64_t v2;
  __int128 v4;
  _QWORD *v5;

  v4 = a1[1];
  *(_OWORD *)(v2 + 16) = *a1;
  *(_OWORD *)(v2 + 32) = v4;
  *(_OWORD *)(v2 + 48) = a1[2];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 64) = v5;
  *v5 = v2;
  v5[1] = sub_1D430C140;
  return sub_1D43097F4((_OWORD *)(v2 + 16), a2);
}

uint64_t sub_1D430B99C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = (_QWORD *)sub_1D430C650();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1D430C3F8(v1, (uint64_t)sub_1D42F9A58);
  return sub_1D430C3D0(v2, v3, v4, v5);
}

uint64_t sub_1D430B9E0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = (_QWORD *)sub_1D430C650();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1D430C3F8(v1, (uint64_t)sub_1D42F9A58);
  return sub_1D430C3D0(v2, v3, v4, v5);
}

uint64_t sub_1D430BA24(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  __int128 v11;
  _QWORD *v12;

  v11 = a2[1];
  *(_OWORD *)(v6 + 16) = *a2;
  *(_OWORD *)(v6 + 32) = v11;
  *(_OWORD *)(v6 + 48) = a2[2];
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 64) = v12;
  *v12 = v6;
  v12[1] = sub_1D430C140;
  return sub_1D4308550(v6 + 16, a3, a4, a5, a6);
}

uint64_t sub_1D430BAB4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  sub_1D42E3C44();
  sub_1D430C2F4();
  v0 = sub_1D430C514();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D430C174(v1);
  return sub_1D430C1B4(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1D430BAFC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  sub_1D42E3C44();
  sub_1D430C2F4();
  v0 = sub_1D430C514();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D430C174(v1);
  return sub_1D430C1B4(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1D430BB40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  sub_1D430C2F4();
  v7 = swift_task_alloc();
  v8 = (_QWORD *)sub_1D42B8F00(v7);
  *v8 = v3;
  v8[1] = sub_1D42F9A58;
  return sub_1D43085E8(v2, v0, v4, v5, v6, v1);
}

void sub_1D430BBB0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_1D42B28FC(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  sub_1D42B6E24();
}

uint64_t *sub_1D430BBF0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_1D430BC2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RemoteRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D430BC74()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  sub_1D42E3C44();
  sub_1D430C2F4();
  v0 = sub_1D430C514();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D430C174(v1);
  return sub_1D430C1B4(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1D430BCB8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  sub_1D42E3C44();
  sub_1D430C2F4();
  v0 = sub_1D430C514();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D430C174(v1);
  return sub_1D430C1B4(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1D430BCFC()
{
  sub_1D42B8F98();
  sub_1D42B8F2C();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D430BD2C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  sub_1D42E3C44();
  sub_1D430C2F4();
  v0 = sub_1D430C514();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D430C174(v1);
  return sub_1D430C1B4(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1D430BD70()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  sub_1D42E3C44();
  sub_1D430C2F4();
  v0 = sub_1D430C514();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D430C174(v1);
  return sub_1D430C1B4(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1D430BDB4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  sub_1D42E3C44();
  sub_1D430C2F4();
  v0 = sub_1D430C514();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D430C174(v1);
  return sub_1D430C1B4(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1D430BDF4()
{
  sub_1D42B8F98();
  return swift_deallocObject();
}

uint64_t sub_1D430BE14()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = (_QWORD *)sub_1D430C650();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1D430C3F8(v1, (uint64_t)sub_1D42F9A58);
  return sub_1D430C3D0(v2, v3, v4, v5);
}

uint64_t sub_1D430BE58()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);

  sub_1D42E39FC();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)sub_1D42B8F00(v1);
  *v2 = v0;
  v2[1] = sub_1D42F9A58;
  v3 = sub_1D430C5BC();
  return v4(v3);
}

unint64_t sub_1D430BEC0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFE4B2B0;
  if (!qword_1EFE4B2B0)
  {
    v1 = sub_1D42B8B10(&qword_1EFE4B2A8);
    v2[0] = &off_1E979F7E8;
    v2[1] = &off_1E97ACAE0;
    result = MEMORY[0x1D825E41C](&unk_1D45287F8, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFE4B2B0);
  }
  return result;
}

void sub_1D430BF24(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v6;

  if (!*a1)
  {
    v6 = a3(a2);
    atomic_store(MEMORY[0x1D825E41C](a4, v6), a1);
  }
  sub_1D42B6E24();
}

uint64_t sub_1D430BF60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v11;

  *(_QWORD *)(v6 + 16) = a1;
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 24) = v11;
  *v11 = v6;
  v11[1] = sub_1D430BFD0;
  return sub_1D43089C4(a3, a4, a5, a6);
}

uint64_t sub_1D430BFD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _QWORD *v5;

  sub_1D430C4B8();
  v4 = *v3;
  sub_1D430C44C(v5);
  if (!v1)
    **(_QWORD **)(v2 + 16) = v0;
  return sub_1D42E3A2C(*(uint64_t (**)(void))(v4 + 8));
}

uint64_t sub_1D430C014()
{
  sub_1D42B8F98();
  sub_1D42B8F2C();
  return swift_deallocObject();
}

uint64_t sub_1D430C038()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  sub_1D42E3C44();
  sub_1D430C2F4();
  v0 = sub_1D430C514();
  v1 = (_QWORD *)sub_1D42B8F00(v0);
  v2 = sub_1D430C174(v1);
  return sub_1D430C1B4(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1D430C078()
{
  swift_release();
  return swift_deallocObject();
}

double sub_1D430C09C@<D0>(_OWORD *a1@<X8>)
{
  uint64_t *v1;

  return sub_1D430A458(v1[5], v1[6], v1[4], a1);
}

uint64_t sub_1D430C0BC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1D430C490(v1, (uint64_t)sub_1D42F9A58);
  return sub_1D430A5A4(v2);
}

uint64_t sub_1D430C100()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
  {
    sub_1D42B8F98();
    sub_1D42B8F2C();
  }
  return swift_deallocObject();
}

uint64_t sub_1D430C160()
{
  uint64_t v0;

  return sub_1D42B7FE4(v0);
}

uint64_t sub_1D430C174(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_1D430C1A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_1D430C1B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void))
{
  return a7();
}

uint64_t sub_1D430C1CC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  a1[2] = v3;
  a1[3] = v2;
  a1[4] = v1;
  a1[5] = v4;
  return sub_1D42B8CF0(v3);
}

uint64_t sub_1D430C1EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + 32 * a1);
  v2[13] = v3[4];
  v2[14] = v3[5];
  v2[15] = v3[6];
  v2[16] = v3[7];
  return type metadata accessor for XPCProxyDecoder();
}

uint64_t sub_1D430C21C(uint64_t result)
{
  return sub_1D42B8CF0(result);
}

uint64_t sub_1D430C22C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  v5 = (_QWORD *)*v3;
  v6 = (_QWORD *)(v4 - 8);
  *v6 = *v3;
  v5[8] = v3;
  v5[9] = a1;
  v5[10] = a2;
  v5[11] = v2;
  *v6 = *v3;
  v5[19] = v2;
  return swift_task_dealloc();
}

uint64_t sub_1D430C254()
{
  uint64_t v0;

  return sub_1D42B7FE4(v0);
}

uint64_t sub_1D430C268(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1D430C27C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1D430C290(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_1D430C2A4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 176) = v0;
  return swift_task_dealloc();
}

uint64_t sub_1D430C2C4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 160) = v0;
  return swift_task_dealloc();
}

uint64_t sub_1D430C2E4(uint64_t a1, _BYTE *a2)
{
  *a2 = 0;
  return swift_willThrow();
}

uint64_t sub_1D430C308(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_1D430C324()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

uint64_t sub_1D430C334()
{
  return swift_task_alloc();
}

uint64_t sub_1D430C33C()
{
  return swift_retain();
}

uint64_t sub_1D430C350()
{
  return swift_allocObject();
}

uint64_t sub_1D430C35C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1D430C368(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_1D430C37C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 72) = v0;
  return swift_task_dealloc();
}

uint64_t sub_1D430C39C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t sub_1D430C3B0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 152) = v0;
  return swift_task_dealloc();
}

uint64_t sub_1D430C3D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t sub_1D430C3E0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D430C3F8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t sub_1D430C418()
{
  return swift_release();
}

uint64_t sub_1D430C44C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
  return swift_task_dealloc();
}

uint64_t sub_1D430C454(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_1D430C470()
{
  return swift_release();
}

uint64_t *sub_1D430C47C()
{
  uint64_t v0;

  return sub_1D42B8C84((uint64_t *)(v0 + 16));
}

uint64_t sub_1D430C490@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t sub_1D430C4A4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *a1 = v4;
  a1[1] = a2;
  return a4;
}

void sub_1D430C4B8()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_1D430C4CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  return sub_1D4308B5C(v1, v0, v2);
}

uint64_t sub_1D430C4E0()
{
  return swift_release();
}

uint64_t sub_1D430C4F4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 32) = v0;
  return swift_task_dealloc();
}

uint64_t sub_1D430C514()
{
  return swift_task_alloc();
}

uint64_t sub_1D430C51C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_1D430C528()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_1D430C534(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_1D430C544()
{
  return swift_retain();
}

uint64_t sub_1D430C554()
{
  return swift_initStackObject();
}

uint64_t sub_1D430C55C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t *v8;

  return sub_1D43091FC(v7, v6, v5, a4, a5, v8);
}

uint64_t sub_1D430C594()
{
  return sub_1D447DAC4();
}

uint64_t *sub_1D430C5A4()
{
  uint64_t v0;

  return sub_1D42B8C84((uint64_t *)(v0 + 64));
}

uint64_t sub_1D430C5BC()
{
  uint64_t v0;

  return v0;
}

void sub_1D430C5D4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1D430BBB0(a1, a2, v2);
}

uint64_t sub_1D430C5DC(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 152) = result;
  return result;
}

uint64_t sub_1D430C5E8()
{
  return swift_release();
}

uint64_t sub_1D430C608()
{
  return swift_retain();
}

uint64_t sub_1D430C610()
{
  return swift_release();
}

void sub_1D430C61C()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

void sub_1D430C630()
{
  _QWORD *v0;
  _QWORD *v1;

  *v0 = *v1;
}

void sub_1D430C63C()
{
  sub_1D42B7B80();
}

uint64_t sub_1D430C648()
{
  return swift_setDeallocating();
}

uint64_t sub_1D430C650()
{
  return swift_task_alloc();
}

uint64_t sub_1D430C658()
{
  uint64_t v0;

  return sub_1D42B8CF0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1D430C664()
{
  return swift_release();
}

uint64_t sub_1D430C670(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a2, a1);
}

uint64_t sub_1D430C684(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR___SNFileSystem_inflightTasks) = a1;
  return swift_bridgeObjectRelease();
}

void sub_1D430C69C()
{
  char *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  objc_class *v9;
  objc_super v10;
  uint64_t v11;

  sub_1D42CB740();
  sub_1D451AFA4();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v3);
  sub_1D451A470();
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1D451AFB0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1D42D7108();
  v7 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v0[OBJC_IVAR___SNFileSystem_inflightTasks] = MEMORY[0x1E0DEE9D8];
  sub_1D42E9D88(0, (unint64_t *)&qword_1EFE47A20);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v1, *MEMORY[0x1E0DEF8D8], v5);
  v8 = v0;
  sub_1D451A464();
  v11 = v7;
  sub_1D430DBE8((unint64_t *)&qword_1EFE47A18, v2, MEMORY[0x1E0DEF828]);
  sub_1D42CB9F8();
  sub_1D430DC88((unint64_t *)&qword_1EFE479F8);
  sub_1D451B2EC();
  *(_QWORD *)&v8[OBJC_IVAR___SNFileSystem_queue] = sub_1D451AFD4();

  v9 = (objc_class *)type metadata accessor for SNFileSystem();
  v10.receiver = v8;
  v10.super_class = v9;
  objc_msgSendSuper2(&v10, sel_init);
  sub_1D42CB520();
}

void *sub_1D430C884(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;

  ObjectType = swift_getObjectType();
  v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 8))(a3, a4, a5, a6, a7, ObjectType, a2);
  v17 = v16;
  v18 = (_QWORD *)sub_1D42B6F40();
  v18[2] = v15;
  v18[3] = v17;
  v18[4] = a4;
  v18[5] = a5;
  swift_retain();
  v19 = a1;
  return a1;
}

void sub_1D430C950()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)();
  uint64_t v46;

  sub_1D42CB740();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v41 = v11;
  v13 = v12;
  v15 = v14;
  v40 = *(_QWORD *)(sub_1D430DCC4() - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v16);
  sub_1D42D7108();
  v17 = sub_1D451A470();
  v18 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_QWORD *)(v2 + 16);
  if (v22)
  {
    v23 = 32;
    while (*(void **)(v2 + v23) != v15)
    {
      v23 += 32;
      if (!--v22)
        goto LABEL_5;
    }
    v33 = v18;
    v34 = v19;
    v35 = swift_allocObject();
    *(_QWORD *)(v35 + 16) = v10;
    *(_QWORD *)(v35 + 24) = v8;
    v45 = sub_1D430DB54;
    v46 = v35;
    v43 = MEMORY[0x1E0C809B0];
    v44 = 1107296256;
    v36 = sub_1D42EA51C((uint64_t)sub_1D444D4E8);
    swift_retain();
    sub_1D451A464();
    v42 = MEMORY[0x1E0DEE9D8];
    sub_1D430DBE8(qword_1EFE4A4B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1D42CB9F8();
    sub_1D430DC88((unint64_t *)&qword_1EFE4A4C0);
    sub_1D451B2EC();
    MEMORY[0x1D825C904](0, v21, v0, v36);
    _Block_release(v36);
    sub_1D430DC90(*(uint64_t (**)(uint64_t, uint64_t))(v40 + 8));
    (*(void (**)(char *, uint64_t))(v34 + 8))(v21, v33);
    sub_1D430DCA8();
    swift_bridgeObjectRetain();
  }
  else
  {
LABEL_5:
    v24 = sub_1D430C884(v15, v13, v41, v10, v8, v6, v4);
    v26 = v25;
    v28 = v27;
    swift_bridgeObjectRetain();
    v29 = v24;
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1D430DC9C(0, *(_QWORD *)(v2 + 16) + 1);
      v2 = v37;
    }
    v31 = *(_QWORD *)(v2 + 16);
    v30 = *(_QWORD *)(v2 + 24);
    if (v31 >= v30 >> 1)
    {
      sub_1D430DC9C(v30 > 1, v31 + 1);
      v2 = v38;
    }
    *(_QWORD *)(v2 + 16) = v31 + 1;
    v32 = (_QWORD *)(v2 + 32 * v31);
    v32[4] = v29;
    v32[5] = v26;
    v32[6] = sub_1D430DB84;
    v32[7] = v28;
    swift_release();

  }
  sub_1D42CB520();
}

void sub_1D430CBE8(void (*a1)(void))
{
  id v2;

  type metadata accessor for SNError();
  v2 = sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 2, 0, 0xD000000000000018, 0x80000001D4552130);
  a1();

}

void sub_1D430CC74(uint64_t a1, void *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  __int128 v15;
  uint64_t v16;

  v4 = 0;
  v5 = *(_QWORD *)(a1 + 16);
  v6 = a1 + 24;
  v7 = MEMORY[0x1E0DEE9D8];
LABEL_2:
  v8 = v6 + 32 * v4;
  while (1)
  {
    if (v5 == v4)
    {

      swift_bridgeObjectRelease();
      return;
    }
    if (v4 >= *(_QWORD *)(a1 + 16))
      break;
    v9 = (_QWORD *)(v8 + 32);
    ++v4;
    v10 = *(void **)(v8 + 8);
    v8 += 32;
    if (v10 != a2)
    {
      v16 = v6;
      v15 = *((_OWORD *)v9 - 1);
      v11 = *v9;
      v14 = v10;
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_1D42C7758();
      v12 = *(_QWORD *)(v7 + 16);
      if (v12 >= *(_QWORD *)(v7 + 24) >> 1)
        sub_1D42C7758();
      *(_QWORD *)(v7 + 16) = v12 + 1;
      v13 = v7 + 32 * v12;
      *(_QWORD *)(v13 + 32) = v14;
      *(_OWORD *)(v13 + 40) = v15;
      *(_QWORD *)(v13 + 56) = v11;
      v6 = v16;
      goto LABEL_2;
    }
  }
  __break(1u);
}

void sub_1D430CDBC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1D42CB740();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v19 = *(_QWORD *)(sub_1D430DCC4() - 8);
  sub_1D42BE838();
  MEMORY[0x1E0C80A78](v12);
  v18 = sub_1D42EA154();
  v13 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  sub_1D42D7108();
  v14 = (_QWORD *)sub_1D42B6F40();
  v14[2] = v11;
  v14[3] = v0;
  v14[4] = v9;
  v14[5] = v7;
  v14[6] = v5;
  v14[7] = v3;
  v15 = sub_1D42EA51C((uint64_t)sub_1D444D4E8);
  swift_unknownObjectRetain();
  v16 = v0;
  swift_retain();
  swift_retain();
  sub_1D451A464();
  sub_1D430DBE8(qword_1EFE4A4B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1D42CB9F8();
  sub_1D430DC88((unint64_t *)&qword_1EFE4A4C0);
  sub_1D451B2EC();
  v17 = sub_1D430DCB0();
  MEMORY[0x1D825C904](v17);
  _Block_release(v15);
  sub_1D430DCCC(*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v1, v18);
  sub_1D430DCA8();
  sub_1D42CB520();
}

uint64_t sub_1D430CF60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  _QWORD *v26;
  void *v27;
  id v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t aBlock;
  unint64_t v36;
  uint64_t (*v37)(uint64_t);
  void *v38;
  uint64_t (*v39)();
  _QWORD *v40;
  void *v41;

  v30 = a5;
  v31 = a3;
  v8 = sub_1D451A44C();
  v33 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_1D451A470();
  v11 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = &unk_1EFEA9B28;
  v14 = swift_dynamicCastObjCProtocolConditional();
  if (v14
    && (v15 = v14,
        swift_getObjectType(),
        sub_1D42E9D88(0, (unint64_t *)&qword_1EFE404C0),
        (v16 = sub_1D430D9B4(v15)) != 0))
  {
    v18 = v16;
    v19 = v17;
    v20 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = v20;
    v21[3] = v18;
    v21[4] = v19;
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = v30;
    *(_QWORD *)(v22 + 24) = a6;
    type metadata accessor for SNFileSystem();
    swift_unknownObjectRetain_n();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1D430C950();
    v24 = v23;
    swift_bridgeObjectRelease();
    sub_1D430C684(v24);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    type metadata accessor for SNError();
    aBlock = 0;
    v36 = 0xE000000000000000;
    sub_1D451B400();
    swift_bridgeObjectRelease();
    aBlock = 0xD000000000000018;
    v36 = 0x80000001D4552110;
    swift_getObjectType();
    sub_1D451BA54();
    sub_1D451A794();
    swift_bridgeObjectRelease();
    v25 = sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 2, 0, aBlock, v36);
    swift_bridgeObjectRelease();
    v26 = (_QWORD *)swift_allocObject();
    v26[2] = v31;
    v26[3] = a4;
    v26[4] = v25;
    v39 = sub_1D430DA88;
    v40 = v26;
    aBlock = MEMORY[0x1E0C809B0];
    v36 = 1107296256;
    v37 = sub_1D444D4E8;
    v38 = &unk_1E97B6E68;
    v27 = _Block_copy(&aBlock);
    swift_retain();
    v28 = v25;
    sub_1D451A464();
    v34 = MEMORY[0x1E0DEE9D8];
    sub_1D430DBE8(qword_1EFE4A4B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1D42B28FC((uint64_t *)&unk_1EFE4B310);
    sub_1D430DC28((unint64_t *)&qword_1EFE4A4C0, (uint64_t *)&unk_1EFE4B310);
    sub_1D451B2EC();
    MEMORY[0x1D825C904](0, v13, v10, v27);
    _Block_release(v27);

    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v8);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v32);
  }
  return swift_release();
}

void sub_1D430D378(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2 + 16;
  swift_beginAccess();
  v5 = MEMORY[0x1D825E608](v4);
  if (v5)
  {
    v6 = (void *)v5;
    v7 = a3;
    v8 = swift_bridgeObjectRetain();
    sub_1D430CC74(v8, v7);
    sub_1D430C684(v9);

  }
}

uint64_t sub_1D430D404(uint64_t a1, void (*a2)())
{
  _BYTE v4[32];

  sub_1D42B294C(a1, (uint64_t)v4);
  sub_1D42B28FC(&qword_1EFE4C690);
  swift_dynamicCast();
  a2();
  return swift_unknownObjectRelease();
}

void sub_1D430D548()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;

  sub_1D42CB740();
  v2 = v1;
  v3 = sub_1D430DCC4();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = sub_1D42EA154();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  sub_1D42D7108();
  v8 = sub_1D42B6F40();
  *(_QWORD *)(v8 + 16) = v2;
  *(_QWORD *)(v8 + 24) = v0;
  v9 = sub_1D42EA51C((uint64_t)sub_1D444D4E8);
  swift_unknownObjectRetain();
  v10 = v0;
  sub_1D451A464();
  sub_1D430DBE8(qword_1EFE4A4B0, v4, MEMORY[0x1E0DEF510]);
  sub_1D42CB9F8();
  sub_1D430DC88((unint64_t *)&qword_1EFE4A4C0);
  sub_1D451B2EC();
  v11 = sub_1D430DCB0();
  MEMORY[0x1D825C904](v11);
  _Block_release(v9);
  sub_1D430DCCC(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_1D430DC90(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  sub_1D430DCA8();
  sub_1D42CB520();
}

uint64_t sub_1D430D6BC()
{
  uint64_t result;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  result = swift_dynamicCastObjCProtocolConditional();
  if (result)
  {
    v1 = result;
    swift_getObjectType();
    sub_1D42E9D88(0, (unint64_t *)&qword_1EFE404C0);
    result = sub_1D430D9B4(v1);
    if (result)
    {
      v2 = (void *)result;
      swift_unknownObjectRetain();
      v3 = swift_bridgeObjectRetain();
      sub_1D430CC74(v3, v2);
      return sub_1D430C684(v4);
    }
  }
  return result;
}

id SNFileSystem.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SNFileSystem();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SNFileSystem()
{
  return objc_opt_self();
}

uint64_t method lookup function for SNFileSystem()
{
  return swift_lookUpClassMethod();
}

uint64_t destroy for SNFileSystem.InflightTask(id *a1)
{

  return swift_release();
}

uint64_t initializeWithCopy for SNFileSystem.InflightTask(uint64_t a1, __int128 *a2)
{
  __int128 v3;
  uint64_t v4;
  id v5;

  v3 = *a2;
  *(_OWORD *)a1 = *a2;
  v4 = *((_QWORD *)a2 + 3);
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = (id)v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SNFileSystem.InflightTask(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v7 = v4;

  *(_QWORD *)(a1 + 8) = v5;
  v8 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v8;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SNFileSystem.InflightTask(uint64_t a1, _OWORD *a2)
{
  __int128 v4;

  v4 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for SNFileSystem.InflightTask()
{
  return &type metadata for SNFileSystem.InflightTask;
}

uint64_t sub_1D430D984()
{
  return sub_1D430DAE4((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1D430D994()
{
  return sub_1D430D6BC();
}

uint64_t sub_1D430D99C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D430D9AC()
{
  return swift_release();
}

uint64_t sub_1D430D9B4(uint64_t a1)
{
  uint64_t result;

  result = swift_dynamicCastMetatype();
  if (result)
  {
    if (swift_conformsToProtocol2())
      return a1;
    else
      return 0;
  }
  return result;
}

uint64_t sub_1D430DA14()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D430DA50()
{
  uint64_t *v0;

  return sub_1D430CF60(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7]);
}

uint64_t sub_1D430DA60()
{
  uint64_t v0;

  sub_1D42B8F98();

  return swift_deallocObject();
}

uint64_t sub_1D430DA88()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32));
}

uint64_t sub_1D430DAB0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D430DAD4()
{
  return sub_1D430DAE4((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1D430DAE4(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));

  return swift_deallocObject();
}

void sub_1D430DB20(uint64_t a1)
{
  uint64_t v1;

  sub_1D430D378(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1D430DB2C()
{
  sub_1D42B8F98();
  return swift_deallocObject();
}

uint64_t sub_1D430DB4C(uint64_t a1)
{
  uint64_t v1;

  return sub_1D430D404(a1, *(void (**)())(v1 + 16));
}

void sub_1D430DB54()
{
  uint64_t v0;

  sub_1D430CBE8(*(void (**)(void))(v0 + 16));
}

uint64_t sub_1D430DB5C()
{
  sub_1D42B8F98();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D430DB84(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t);

  v3 = *(uint64_t (**)(uint64_t))(v1 + 32);
  (*(void (**)(void))(v1 + 16))();
  return v3(a1);
}

uint64_t sub_1D430DBC4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1D430DBE8(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1D825E41C](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D430DC28(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_1D42B8B10(a2);
    result = MEMORY[0x1D825E41C](MEMORY[0x1E0DEAF38], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D430DC88(unint64_t *a1)
{
  uint64_t *v1;

  return sub_1D430DC28(a1, v1);
}

uint64_t sub_1D430DC90@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

void sub_1D430DC9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1D442FBF8(a1, a2, 1, v2);
}

uint64_t sub_1D430DCA8()
{
  return swift_release();
}

uint64_t sub_1D430DCB0()
{
  return 0;
}

uint64_t sub_1D430DCC4()
{
  return sub_1D451A44C();
}

uint64_t sub_1D430DCCC@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_1D430DCD8()
{
  uint64_t v0;

  swift_beginAccess();
  nullsub_1(v0 + 16);
  swift_endAccess();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UnsafeSDFNodeView()
{
  return objc_opt_self();
}

void sub_1D430DD50(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  void *v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v20;
  id v21[2];
  uint64_t v22[4];
  uint64_t v23;

  v3 = v2;
  v4 = a2;
  v5 = *(_QWORD *)(a1 + 16);
  v6 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v23 = MEMORY[0x1E0DEE9D8];
    sub_1D42C7550();
    v6 = v23;
    v8 = sub_1D4396C0C(a1);
    v10 = v9;
    v12 = v11 & 1;
    while ((v8 & 0x8000000000000000) == 0 && v8 < 1 << *(_BYTE *)(a1 + 32))
    {
      if (((*(_QWORD *)(a1 + 64 + (((unint64_t)v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_15;
      if (*(_DWORD *)(a1 + 36) != (_DWORD)v10)
        goto LABEL_16;
      v13 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v8);
      v21[0] = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v8);
      v21[1] = v13;
      v14 = v21[0];
      swift_bridgeObjectRetain();
      sub_1D430DF2C((uint64_t)v21, &v20, v22);
      if (v3)
      {
        swift_release();
        sub_1D42CB208();

        return;
      }
      v3 = 0;
      sub_1D42CB208();

      v23 = v6;
      v15 = *(_QWORD *)(v6 + 16);
      if (v15 >= *(_QWORD *)(v6 + 24) >> 1)
      {
        sub_1D42C7550();
        v6 = v23;
      }
      *(_QWORD *)(v6 + 16) = v15 + 1;
      sub_1D42B293C(v22, (_OWORD *)(v6 + 32 * v15 + 32));
      v16 = sub_1D437CC90(v8, v10, v12 & 1, a1);
      v8 = v16;
      v10 = v17;
      v12 = v18 & 1;
      if (!--v5)
      {
        sub_1D430E804(v16, v17, v18 & 1);
        v4 = a2;
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
  else
  {
LABEL_13:
    v4[3] = sub_1D42B28FC(&qword_1EFE4CC90);
    *v4 = v6;
  }
}

uint64_t sub_1D430DF2C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t inited;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _OWORD v46[2];

  v6 = *(_QWORD *)(a1 + 8);
  if (objc_msgSend(*(id *)a1, sel_nonretainedObjectValue))
  {
    sub_1D451B208();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v46, 0, sizeof(v46));
  }
  sub_1D42FADE0((uint64_t)v46);
  v7 = v3;
  result = sub_1D42B5464((uint64_t)v46);
  if (!v3)
  {
    type metadata accessor for SNDetectSoundRequest();
    if (swift_dynamicCastClass())
    {
      swift_unknownObjectRetain();
      sub_1D448D4EC(v6, v9, v10, v11, v12, v13, v14, v15, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41,
        v42,
        v43,
        v44,
        v45,
        *(uint64_t *)&v46[0],
        *((uint64_t *)&v46[0] + 1));
      v17 = v16;
      sub_1D444B958(v16);
      v25 = sub_1D444BA70(v17, v18, v19, v20, v21, v22, v23, v24);
      swift_bridgeObjectRelease();
      sub_1D42B28FC((uint64_t *)&unk_1EFE498B0);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1D45295F0;
      *(_QWORD *)(inited + 32) = 0x656449646E756F73;
      *(_QWORD *)(inited + 40) = 0xEF7265696669746ELL;
      sub_1D42ED118();
      v28 = v27;
      type metadata accessor for SNSoundIdentifier(0);
      *(_QWORD *)(inited + 48) = v28;
      *(_QWORD *)(inited + 72) = v29;
      *(_QWORD *)(inited + 80) = 0x73746C75736572;
      *(_QWORD *)(inited + 88) = 0xE700000000000000;
      *(_QWORD *)(inited + 120) = sub_1D42B28FC(&qword_1EFE4CC90);
      *(_QWORD *)(inited + 96) = v25;
      v30 = sub_1D451A5E4();
      a3[3] = sub_1D42B28FC((uint64_t *)&unk_1EFE403D0);
      result = swift_unknownObjectRelease_n();
      *a3 = v30;
      return result;
    }
    sub_1D42FBCD0();
    v7 = swift_allocError();
    swift_willThrow();
    result = swift_unknownObjectRelease();
  }
  *a2 = v7;
  return result;
}

uint64_t sub_1D430E15C(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v8 = MEMORY[0x1E0DEE9D8];
  if (!(a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRetain();
  result = sub_1D451B5A4();
  v2 = result;
  if (!result)
    goto LABEL_14;
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
  }
  else
  {
    v4 = 0;
    v7 = v2;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = (id)MEMORY[0x1D825CD78](v4, a1);
      else
        v5 = *(id *)(a1 + 8 * v4 + 32);
      v6 = v5;
      objc_msgSend(v5, sel_timeRange, v7);
      if ((sub_1D451B07C() & 1) != 0)
      {
        sub_1D451B484();
        sub_1D451B4A8();
        sub_1D451B4B4();
        sub_1D451B490();
        v2 = v7;
      }
      else
      {

      }
      ++v4;
    }
    while (v2 != v4);
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

double sub_1D430E2F4(void *a1)
{
  double v1;
  id v2;
  void *v3;
  id v4;
  double v5;
  id v6;
  id v8[2];

  v8[1] = *(id *)MEMORY[0x1E0C80C00];
  v8[0] = 0;
  v2 = objc_msgSend(a1, sel_formatWithError_, v8);
  if (v2)
  {
    v3 = v2;
    v4 = v8[0];
    objc_msgSend(v3, sel_sampleRate);
    v1 = v5;

  }
  else
  {
    v6 = v8[0];
    sub_1D4519AA4();

    swift_willThrow();
  }
  return v1;
}

void sub_1D430E3C4(void *a1)
{
  id v1;
  uint64_t v2;
  _QWORD v3[2];

  v3[1] = *MEMORY[0x1E0C80C00];
  v2 = 0;
  v3[0] = 0;
  if (!objc_msgSend(a1, sel_getTimeBoundsWithStartTime_endTime_, v3, &v2))
    goto LABEL_5;
  if (__OFSUB__(v2, v3[0]))
  {
    __break(1u);
LABEL_5:
    type metadata accessor for SNError();
    v1 = sub_1D430E810(0xD000000000000025, (uint64_t)"BOOL success status indicates failure");
    swift_willThrow();
    sub_1D430E810(0xD000000000000020, (uint64_t)"error getting ring buffer bounds");
    swift_willThrow();

  }
}

void sub_1D430E4AC(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;

  sub_1D430E3C4(a1);
  if (!v2)
  {
    v5 = sub_1D430E2F4(a1);
    if (floor(v5) == v5)
    {
      if ((~*(_QWORD *)&v5 & 0x7FF0000000000000) != 0)
      {
        if (v5 > -2147483650.0)
        {
          if (v5 < 2147483650.0)
          {
            v6 = sub_1D451B0A0();
            v8 = v7;
            v10 = v9;
            v11 = HIDWORD(v7);
            v12 = sub_1D451B0A0();
            *(_QWORD *)a2 = v6;
            *(_DWORD *)(a2 + 8) = v8;
            *(_DWORD *)(a2 + 12) = v11;
            *(_QWORD *)(a2 + 16) = v10;
            *(_QWORD *)(a2 + 24) = v12;
            *(_DWORD *)(a2 + 32) = v13;
            *(_DWORD *)(a2 + 36) = v14;
            *(_QWORD *)(a2 + 40) = v15;
            return;
          }
          goto LABEL_11;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_11:
      __break(1u);
      return;
    }
    type metadata accessor for SNError();
    sub_1D451B400();
    sub_1D451A794();
    sub_1D451ABD8();
    sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 1, 0, 0, 0xE000000000000000);
    sub_1D42CB208();
    swift_willThrow();
  }
}

void sub_1D430E65C(CMTimeValue a1, unint64_t a2, CMTimeEpoch a3, void *a4)
{
  uint64_t v4;
  CMTimeValue v8;
  uint64_t v9;
  CMTimeEpoch v10;
  CMTimeValue v11;
  uint64_t v12;
  CMTimeEpoch v13;
  CMTimeEpoch epoch;
  CMTime v15;
  CMTime rhs;
  CMTimeRange range;
  CMTimeValue v18;
  int32_t newTimescale[2];
  CMTimeEpoch v20;
  CMTimeValue v21;
  uint64_t v22;
  CMTimeEpoch v23;

  sub_1D430E4AC(a4, (uint64_t)&v18);
  if (!v4)
  {
    v8 = v18;
    v9 = *(_QWORD *)newTimescale;
    v10 = v20;
    v11 = v21;
    v12 = v22;
    v13 = v23;
    type metadata accessor for SNTimeUtils();
    sub_1D42DB2A0((uint64_t)&v18, a1, a2, a3);
    range.start.value = v8;
    *(_QWORD *)&range.start.timescale = v9;
    range.start.epoch = v10;
    range.duration.value = v11;
    *(_QWORD *)&range.duration.timescale = v12;
    range.duration.epoch = v13;
    CMTimeRangeGetEnd(&rhs, &range);
    epoch = rhs.epoch;
    rhs.epoch = a3;
    range.start.value = rhs.value;
    *(_QWORD *)&range.start.timescale = *(_QWORD *)&rhs.timescale;
    range.start.epoch = epoch;
    rhs.value = a1;
    *(_QWORD *)&rhs.timescale = a2;
    CMTimeSubtract(&v15, &range.start, &rhs);
    range.start = v15;
    CMTimeConvertScale(&rhs, &range.start, newTimescale[0], kCMTimeRoundingMethod_RoundTowardPositiveInfinity);
    if (rhs.value < 0 || HIDWORD(rhs.value))
    {
      sub_1D42DCED4();
      sub_1D451B550();
      __break(1u);
    }
  }
}

uint64_t sub_1D430E804(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

id sub_1D430E810@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1D43EC59C(0xD000000000000017, v2, 1, 0, a1, (a2 - 32) | 0x8000000000000000);
}

void sub_1D430E830(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  unint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v7 = v5;
  swift_getObjectType();
  v13 = sub_1D4311308(a1);
  if (v13)
  {
    v15 = v13;
    v16 = v14;
    v42 = a2;
    v43 = a4;
    sub_1D42B8E84();
    sub_1D4311FD0();
    v17 = sub_1D42CB7F8();
    v18 = sub_1D430F758(v17, v15);
    if (v18 >> 62)
      goto LABEL_18;
    v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_1D42BE984();
    swift_bridgeObjectRetain();
    while (1)
    {
      v44 = v16;
      if (!v19)
        break;
      v40 = a3;
      v41 = a5;
      a3 = v18 & 0xC000000000000001;
      v20 = 4;
      while (1)
      {
        v16 = v20 - 4;
        if (a3)
        {
          a5 = MEMORY[0x1D825CD78](v20 - 4, v18);
        }
        else
        {
          a5 = *(_QWORD *)(v18 + 8 * v20);
          swift_unknownObjectRetain();
        }
        v21 = v20 - 3;
        if (__OFADD__(v16, 1))
          break;
        sub_1D430EC9C(a5);
        swift_unknownObjectRelease();
        ++v20;
        if (v21 == v19)
        {
          sub_1D42FC448();
          a5 = v41;
          a3 = v40;
          goto LABEL_14;
        }
      }
      __break(1u);
LABEL_18:
      sub_1D42BE984();
      swift_bridgeObjectRetain();
      v19 = sub_1D451B5A4();
    }
    sub_1D42FC448();
LABEL_14:
    swift_bridgeObjectRelease_n();
    v27 = sub_1D42B6F40();
    sub_1D4312054();
    v28 = (_QWORD *)sub_1D42B6F40();
    v28[2] = v27;
    v28[3] = v15;
    v28[4] = v44;
    v28[5] = v42;
    v28[6] = a3;
    v29 = sub_1D42B6F40();
    sub_1D4312054();
    v30 = (_QWORD *)sub_1D42B6F40();
    v30[2] = v29;
    v30[3] = v15;
    v30[4] = v44;
    v30[5] = v43;
    v30[6] = a5;
    sub_1D4311FD0();
    swift_retain();
    sub_1D430C608();
    sub_1D430FCEC(v15, v44, (uint64_t)sub_1D4311D3C, (uint64_t)v28, (uint64_t)sub_1D4311D7C, (uint64_t)v30);
    swift_release();
    sub_1D42EA1BC();
    if (v6)
    {
      sub_1D42DCEE8();
      sub_1D430740C();
      v31 = sub_1D4311F54();
      sub_1D43EC59C(v31, v32, v33, v34, 0xD000000000000017, v35);
      sub_1D4312028();
      sub_1D42E3CCC();

    }
    else
    {
      v36 = *(void **)(v7 + 40);
      v37 = sub_1D430C608();
      sub_1D431084C(v37, v36);
      sub_1D42EA144();
      v38 = swift_unknownObjectRetain();
      MEMORY[0x1D825C238](v38);
      sub_1D43A24D4(*(_QWORD *)((*(_QWORD *)(v7 + 48) & 0xFFFFFFFFFFFFF8) + 0x10));
      sub_1D451A9E0();
      sub_1D451A950();
      swift_endAccess();
      sub_1D42E3CCC();
      sub_1D42EA144();
      v39 = sub_1D430C608();
      MEMORY[0x1D825C238](v39);
      sub_1D43A24D4(*(_QWORD *)((*(_QWORD *)(v7 + 56) & 0xFFFFFFFFFFFFF8) + 0x10));
      sub_1D451A9E0();
      sub_1D451A950();
      swift_endAccess();
      swift_release_n();
      *(_BYTE *)(v7 + 64) = 1;
    }
  }
  else
  {
    type metadata accessor for SNError();
    sub_1D451B400();
    swift_bridgeObjectRelease();
    swift_getObjectType();
    sub_1D451BA54();
    sub_1D451A794();
    swift_bridgeObjectRelease();
    v22 = sub_1D4311F54();
    sub_1D43EC59C(v22, v23, v24, v25, v26, 0x80000001D45523A0);
    swift_bridgeObjectRelease();
    swift_willThrow();
  }
}

void sub_1D430EC9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  unint64_t v6;
  uint64_t v7;

  swift_getObjectType();
  v3 = sub_1D4311308(a1);
  if (!v3)
    goto LABEL_6;
  v4 = v3;
  sub_1D4312004();
  swift_unknownObjectRetain();
  v5 = sub_1D43119D8((unint64_t *)(v1 + 48), v4);
  v6 = *(_QWORD *)(v1 + 48);
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1D451B5A4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v7 >= v5)
  {
    sub_1D42E93C4();
    swift_endAccess();
    sub_1D430FE14(v4);
    *(_BYTE *)(v1 + 64) = 1;
LABEL_6:
    sub_1D42CB6B8();
    return;
  }
  __break(1u);
}

void sub_1D430ED8C(void *a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  unint64_t v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  double v19;
  double v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  unint64_t v39;
  uint64_t i;
  uint64_t v41;
  id v42;
  uint64_t v43;
  id v44;
  unsigned int v45;
  BOOL v46;
  id v47;
  id v48;
  void *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  id v57;
  id v58[4];

  v4 = v2;
  v58[3] = *(id *)MEMORY[0x1E0C80C00];
  objc_opt_self();
  v7 = swift_dynamicCastObjCClass();
  if (v7)
  {
    v8 = (void *)v7;
    v57 = a1;
    if (!objc_msgSend(v8, sel_frameLength))
    {

      return;
    }
    v9 = sub_1D4311F48();
    v10 = *(void **)(v4 + 40);
    v11 = objc_msgSend(v9, sel_isEqual_, v10);

    if ((_DWORD)v11)
    {
      v12 = (unint64_t)sub_1D4311F48();
      objc_msgSend((id)v12, sel_sampleRate);
      v14 = v13;

      if ((~*(_QWORD *)&v14 & 0x7FF0000000000000) == 0)
        goto LABEL_35;
      if (v14 <= -2147483650.0)
        goto LABEL_36;
      if (v14 >= 2147483650.0)
        goto LABEL_37;
      v11 = (id)sub_1D4312010();
      v16 = v15;
      v12 = v17;
      v18 = sub_1D4311F48();
      objc_msgSend(v18, sel_sampleRate);
      v20 = v19;

      if ((~*(_QWORD *)&v20 & 0x7FF0000000000000) == 0)
        goto LABEL_38;
      if (v20 <= -2147483650.0)
        goto LABEL_39;
      v56 = v12;
      if (v20 >= 2147483650.0)
        goto LABEL_40;
      v21 = sub_1D4312010();
      v23 = v22;
      v25 = v24;
      v26 = HIDWORD(v22);
      *(_QWORD *)(v4 + 68) = sub_1D451B064();
      *(_DWORD *)(v4 + 76) = v27;
      *(_DWORD *)(v4 + 80) = v28;
      *(_QWORD *)(v4 + 84) = v29;
      *(_QWORD *)(v4 + 92) = v11;
      *(_QWORD *)(v4 + 100) = v16;
      *(_QWORD *)(v4 + 108) = v56;
      *(_QWORD *)(v4 + 116) = v21;
      *(_DWORD *)(v4 + 124) = v23;
      *(_DWORD *)(v4 + 128) = v26;
      *(_QWORD *)(v4 + 132) = v25;
      if (*(_BYTE *)(v4 + 64) == 1)
      {
        sub_1D4311014();
        *(_BYTE *)(v4 + 64) = 0;
      }
      v11 = *(id *)(v4 + 32);
      v58[0] = 0;
      v34 = objc_msgSend(v11, sel_maxFramesPerSliceWithError_, v58, v56);
      v35 = v58[0];
      if (v34)
      {
        v36 = v34;
        type metadata accessor for SNUtils();
        v37 = v35;
        v38 = objc_msgSend(v36, sel_unsignedIntValue);

        sub_1D44BC040(v8, (uint64_t)v38);
        v12 = v39;
        if (v39 >> 62)
          goto LABEL_41;
        for (i = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10); i; i = sub_1D451B5A4())
        {
          v41 = 4;
          while (1)
          {
            v42 = (v12 & 0xC000000000000001) != 0
                ? (id)MEMORY[0x1D825CD78](v41 - 4, v12)
                : *(id *)(v12 + 8 * v41);
            v3 = v42;
            v43 = v41 - 3;
            if (__OFADD__(v41 - 4, 1))
              break;
            v58[0] = 0;
            if (!objc_msgSend(v11, sel_processBuffer_framePosition_error_, v42, a2, v58))
            {
              v48 = v58[0];
              sub_1D42B7204();
              v49 = (void *)sub_1D4519AA4();

              swift_willThrow();
              type metadata accessor for SNError();
              sub_1D4311F68();
              sub_1D430740C();
              v50 = sub_1D4311F54();
              sub_1D43EC59C(v50, v51, v52, v53, v54, v55);
              sub_1D4311FF8();

              goto LABEL_29;
            }
            v44 = v58[0];
            v45 = objc_msgSend(v3, sel_frameLength);

            v46 = __OFADD__(a2, v45);
            a2 += v45;
            if (v46)
              goto LABEL_34;
            ++v41;
            if (v43 == i)
              goto LABEL_26;
          }
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
LABEL_41:
          ;
        }
LABEL_26:

        sub_1D42B7204();
        goto LABEL_31;
      }
      v47 = v58[0];
      v3 = (void *)sub_1D4519AA4();

    }
    else
    {
      type metadata accessor for SNError();
      v58[0] = 0;
      v58[1] = (id)0xE000000000000000;
      sub_1D451B400();
      sub_1D4311FA8();
      v30 = v10;
      v31 = objc_msgSend(v30, sel_description);
      sub_1D451A6EC();

      sub_1D451A794();
      swift_bridgeObjectRelease();
      sub_1D451A794();
      v32 = sub_1D4311F48();
      v33 = objc_msgSend(v32, sel_description);
      sub_1D451A6EC();

      sub_1D451A794();
      swift_bridgeObjectRelease();
      sub_1D4311FA8();
      v3 = sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 3, 0, 0, 0xE000000000000000);
      swift_bridgeObjectRelease();
    }
    swift_willThrow();
LABEL_29:

  }
  else
  {
    sub_1D42FBCD0();
    swift_allocError();
    sub_1D4311FF8();
  }
  sub_1D430F664();

LABEL_31:
  sub_1D4311F00();
}

void sub_1D430F340()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;

  v2 = v0;
  if (qword_1EFE40338 != -1)
    swift_once();
  v3 = sub_1D451A014();
  sub_1D42CC880(v3, (uint64_t)qword_1EFEA7700);
  sub_1D42E3CA4();
  v4 = sub_1D4519FFC();
  v5 = sub_1D451AF74();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc();
    v7 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v6 = 138412802;
    v8 = *(_QWORD *)(v2 + 84);
    v9 = *(_QWORD *)(v2 + 76);
    v31 = *(_QWORD *)(v2 + 68);
    v32 = v9;
    *(_QWORD *)&v33 = v8;
    v10 = objc_msgSend((id)objc_opt_self(), sel_valueWithCMTime_, &v31);
    v31 = (uint64_t)v10;
    v11 = sub_1D4311F8C();
    *v7 = v10;
    *(_WORD *)(v6 + 12) = 2112;
    v12 = *(_QWORD *)(v2 + 132);
    v31 = *(_QWORD *)(v2 + 92);
    v32 = *(_QWORD *)(v2 + 100);
    v33 = *(_OWORD *)(v2 + 108);
    v34 = *(_QWORD *)(v2 + 124);
    v35 = v12;
    v19 = sub_1D4311FEC(v11, sel_valueWithCMTimeRange_, v13, v14, v15, v16, v17, v18, v31);
    v31 = (uint64_t)v19;
    v20 = sub_1D4311F8C();
    v7[1] = v19;
    *(_WORD *)(v6 + 22) = 2112;
    v21 = *(_QWORD *)(v2 + 156);
    v31 = *(_QWORD *)(v2 + 140);
    v32 = *(_QWORD *)(v2 + 148);
    *(_QWORD *)&v33 = v21;
    v28 = sub_1D4311FEC(v20, sel_valueWithCMTime_, v22, v23, v24, v25, v26, v27, v31);
    v31 = (uint64_t)v28;
    sub_1D4311F8C();
    v7[2] = v28;
    sub_1D42BE93C();
    _os_log_impl(&dword_1D42A7000, v4, v5, "analysis completed for analyzer; total received frames %@; most recent analyzed time range %@; latest produced result time %@",
      (uint8_t *)v6,
      0x20u);
    sub_1D42B28FC((uint64_t *)&unk_1EFE50850);
    swift_arrayDestroy();
    sub_1D42CC934();
  }

  sub_1D42BE93C();
  sub_1D4311F3C();
  v29 = *(_QWORD *)(v2 + 56);
  if (!(v29 >> 62))
  {
    sub_1D4311F98();
    if (v1)
      goto LABEL_7;
LABEL_12:
    sub_1D42BE8B4();
    sub_1D4311F00();
    return;
  }
  swift_bridgeObjectRetain();
  v1 = sub_1D431204C();
  if (!v1)
    goto LABEL_12;
LABEL_7:
  if (v1 >= 1)
  {
    v30 = 0;
    do
    {
      if ((v29 & 0xC000000000000001) != 0)
        sub_1D4311FE0();
      swift_retain();
      ++v30;
      sub_1D42BE934();
      sub_1D43FEBD8();
      swift_release();
      swift_release();
    }
    while (v1 != v30);
    goto LABEL_12;
  }
  __break(1u);
}

uint64_t sub_1D430F610()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*(id *)(v0 + 32), sel_description);
  v2 = sub_1D451A6EC();

  return v2;
}

uint64_t sub_1D430F664()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  sub_1D4311F3C();
  v1 = *(_QWORD *)(v0 + 56);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = sub_1D42CB7F8();
    if (v2)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  sub_1D42CB7F8();
  result = sub_1D431204C();
  v2 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v2 >= 1)
  {
    v4 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
        MEMORY[0x1D825CD78](v4, v1);
      else
        swift_retain();
      ++v4;
      sub_1D42BE934();
      sub_1D43FEC08();
      swift_release();
      swift_release();
    }
    while (v2 != v4);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1D430F758(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v10 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_16;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v5 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v6 = MEMORY[0x1D825CD78](v5, a1);
LABEL_7:
        v7 = v5 + 1;
        if (__OFADD__(v5, 1))
          goto LABEL_15;
        if (v6 == a2)
        {
          sub_1D451B484();
          sub_1D451B4A8();
          sub_1D451B4B4();
          sub_1D451B490();
        }
        else
        {
          swift_unknownObjectRelease();
        }
        ++v5;
        if (v7 == v4)
        {
          v8 = v10;
          goto LABEL_18;
        }
      }
      if (v5 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      v4 = sub_1D451B5A4();
      if (!v4)
        goto LABEL_17;
    }
    v6 = swift_unknownObjectRetain();
    goto LABEL_7;
  }
LABEL_17:
  v8 = MEMORY[0x1E0DEE9D8];
LABEL_18:
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1D430F8A8()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();

  return v0;
}

uint64_t sub_1D430F8DC()
{
  sub_1D430F8A8();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SNAnalyzerInfo()
{
  return objc_opt_self();
}

uint64_t sub_1D430F91C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = v1;
  sub_1D446D7BC(a1);
  if (v2)
  {

    swift_deallocPartialClassInstance();
  }
  else
  {
    objc_opt_self();
    sub_1D45006B4();
    type metadata accessor for SNAudioProcessorCache();
    v5 = sub_1D42B6F40();
    v6 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v5 + 16) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v3 + 48) = v6;
    *(_QWORD *)(v3 + 56) = v6;
    *(_BYTE *)(v3 + 64) = 1;
    *(_QWORD *)(v3 + 40) = a1;
    *(_QWORD *)(v3 + 16) = v5;
    *(_QWORD *)(v3 + 24) = v6;
    objc_allocWithZone((Class)SNProcessingTree);
    v7 = a1;
    *(_QWORD *)(v3 + 32) = sub_1D431152C();
    v9 = MEMORY[0x1E0CA2E68];
    v10 = *(_QWORD *)(MEMORY[0x1E0CA2E68] + 16);
    *(_QWORD *)(v3 + 68) = *MEMORY[0x1E0CA2E68];
    *(_QWORD *)(v3 + 76) = *(_QWORD *)(v9 + 8);
    *(_QWORD *)(v3 + 84) = v10;
    v11 = MEMORY[0x1E0CA2E50];
    v12 = *(_QWORD *)(MEMORY[0x1E0CA2E50] + 40);
    *(_QWORD *)(v3 + 92) = *MEMORY[0x1E0CA2E50];
    *(_QWORD *)(v3 + 100) = *(_QWORD *)(v11 + 8);
    *(_OWORD *)(v3 + 108) = *(_OWORD *)(v11 + 16);
    *(_QWORD *)(v3 + 124) = *(_QWORD *)(v11 + 32);
    *(_QWORD *)(v3 + 132) = v12;
    v13 = MEMORY[0x1E0CA2E18];
    v14 = *(_QWORD *)(MEMORY[0x1E0CA2E18] + 16);
    *(_QWORD *)(v3 + 140) = *MEMORY[0x1E0CA2E18];
    *(_QWORD *)(v3 + 148) = *(_QWORD *)(v13 + 8);
    *(_QWORD *)(v3 + 156) = v14;
    sub_1D430FAB4(v7);

  }
  return v3;
}

void sub_1D430FAB4(void *a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  void *v4;
  __int128 v5;
  __int128 v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  int v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v2 = (char *)objc_msgSend(a1, sel_streamDescription);
  v3 = *(_QWORD *)v2;
  v4 = *(void **)(v1 + 32);
  v16 = 0;
  v5 = *(_OWORD *)(v2 + 8);
  v6 = *(_OWORD *)(v2 + 24);
  v17 = v3;
  v18 = v5;
  v19 = v6;
  v20 = 1;
  if (objc_msgSend(v4, sel_setFormat_error_, &v17, &v16))
  {
    v7 = v16;
  }
  else
  {
    v8 = v16;
    v9 = (void *)sub_1D4519AA4();

    swift_willThrow();
    sub_1D42DCEE8();
    v10 = (void *)sub_1D4519A98();
    sub_1D430740C();
    v11 = sub_1D4311FB8();
    sub_1D43EC59C(v11, v12, v13, v10, v14, v15);

    swift_willThrow();
  }
}

uint64_t sub_1D430FBE0(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1D4311F3C();
  v3 = *(_QWORD *)(v1 + 56);
  if (v3 >> 62)
    goto LABEL_14;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_1D431201C();
  sub_1D4312030();
  for (; v4; v4 = sub_1D431204C())
  {
    v5 = 4;
    while (1)
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        v6 = MEMORY[0x1D825CD78](v5 - 4, v3);
      }
      else
      {
        v6 = *(_QWORD *)(v3 + 8 * v5);
        sub_1D42BE984();
      }
      v7 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      if (*(_QWORD *)(v6 + 16) == a1)
      {
        swift_unknownObjectRelease();
        sub_1D42BE8B4();
        goto LABEL_12;
      }
      swift_release();
      ++v5;
      if (v7 == v4)
        goto LABEL_10;
    }
    __break(1u);
LABEL_14:
    sub_1D431201C();
    sub_1D4312030();
  }
LABEL_10:
  swift_unknownObjectRelease();
  sub_1D42BE8B4();
  v6 = 0;
LABEL_12:
  sub_1D42BE8B4();
  return v6;
}

uint64_t sub_1D430FCEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;

  v8 = v6;
  swift_getObjectType();
  result = (*(uint64_t (**)(void))(a2 + 8))();
  if (!v7)
  {
    v15 = result;
    v16 = v14;
    v20 = *(void **)(v8 + 32);
    type metadata accessor for SNAnalyzerHost();
    sub_1D42B6F40();
    sub_1D4312030();
    swift_retain();
    sub_1D430C608();
    v17 = sub_1D43FECA8(v15, v16, a3, a4, a5, a6, (uint64_t)v20);
    type metadata accessor for SNAnalyzerInfo();
    v18 = swift_unknownObjectRetain();
    v19 = sub_1D4311D9C(v18, v17, 0, 0, 0, 0);
    swift_unknownObjectRelease();
    return v19;
  }
  return result;
}

void sub_1D430FE14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  uint64_t v6;

  v2 = sub_1D430FBE0(a1);
  if (!v2)
    goto LABEL_6;
  v3 = v2;
  sub_1D4312004();
  sub_1D42E3CA4();
  v4 = sub_1D43116A8((unint64_t *)(v1 + 56), v3);
  v5 = *(_QWORD *)(v1 + 56);
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_1D451B5A4();
    sub_1D42B7204();
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v6 >= v4)
  {
    sub_1D42E921C();
    swift_endAccess();
    sub_1D42BE93C();
LABEL_6:
    sub_1D42CB6B8();
    return;
  }
  __break(1u);
}

uint64_t sub_1D430FECC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_1D42B6F40();
  swift_unknownObjectWeakInit();
  v3 = sub_1D42B6F40();
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = a1;
  v4 = sub_1D42B6F40();
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = a1;
  swift_retain_n();
  v5 = sub_1D4311FD0();
  sub_1D430E830(v5, (uint64_t)sub_1D4311E78, v3, (uint64_t)sub_1D42E9664, v4);
  sub_1D42EA1BC();
  sub_1D42FC448();
  return sub_1D42E3F48();
}

void *sub_1D430FF98(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void *result;
  void *v7;
  id v8;
  void *v9;

  v5 = a2 + 16;
  swift_beginAccess();
  result = (void *)MEMORY[0x1D825E608](v5);
  if (result)
  {
    v7 = result;
    if (a1)
    {
      if ((objc_msgSend(result, sel_respondsToSelector_, sel_request_didFailWithError_) & 1) != 0)
      {
        v8 = a1;
        swift_unknownObjectRetain();
        v9 = (void *)sub_1D4519A98();
        objc_msgSend(v7, sel_request_didFailWithError_, a3, v9);
        swift_unknownObjectRelease();

      }
    }
    else if ((objc_msgSend(result, sel_respondsToSelector_, sel_requestDidComplete_) & 1) != 0)
    {
      objc_msgSend(v7, sel_requestDidComplete_, a3);
    }
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1D431008C(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t (*v20)(_QWORD);
  char v21;
  BOOL v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  void *v33;
  unint64_t v34;
  unint64_t v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v41;
  uint64_t v42;
  os_log_type_t type[8];
  os_log_type_t typea;
  void *v45;
  void *v46;
  uint64_t v47[2];

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v9 = Strong;
    v47[1] = (uint64_t)&unk_1EFEA8940;
    v10 = swift_dynamicCastObjCProtocolConditional();
    if (v10)
    {
      v11 = (void *)v10;
      swift_unknownObjectRetain();
      if ((sub_1D451B0AC() & 1) != 0)
      {
        objc_msgSend(v11, sel_timeRange);
        v12 = sub_1D451AEE4();
        LODWORD(v14) = v13;
        v41 = v15;
        *(_QWORD *)type = HIDWORD(v13);
        v16 = *(_QWORD *)(v9 + 140);
        v45 = a1;
        v46 = a3;
        v18 = *(_DWORD *)(v9 + 148);
        v17 = *(_DWORD *)(v9 + 152);
        v19 = *(_QWORD *)(v9 + 156);
        v20 = a5;
        v21 = sub_1D451B07C();
        swift_unknownObjectRelease();
        v22 = (v21 & 1) == 0;
        a5 = v20;
        if (v22)
        {
          LODWORD(v23) = *(_DWORD *)type;
        }
        else
        {
          v12 = v16;
          LODWORD(v14) = v18;
          LODWORD(v23) = v17;
        }
        a1 = v45;
        a3 = v46;
        if (v22)
          v24 = v41;
        else
          v24 = v19;
      }
      else
      {
        objc_msgSend(v11, sel_timeRange);
        v12 = sub_1D451AEE4();
        v14 = v25;
        v24 = v26;
        swift_unknownObjectRelease();
        v23 = HIDWORD(v14);
      }
      *(_QWORD *)(v9 + 140) = v12;
      *(_DWORD *)(v9 + 148) = v14;
      *(_DWORD *)(v9 + 152) = v23;
      *(_QWORD *)(v9 + 156) = v24;
    }
    if (qword_1EFE478B8 != -1)
      swift_once();
    if (byte_1EFEA7A60 == 1)
    {
      if (qword_1EFE40338 != -1)
        swift_once();
      v27 = sub_1D451A014();
      sub_1D42CC880(v27, (uint64_t)qword_1EFEA7700);
      swift_unknownObjectRetain_n();
      swift_unknownObjectRetain_n();
      v28 = sub_1D4519FFC();
      v29 = sub_1D451AF50();
      if (os_log_type_enabled(v28, v29))
      {
        typea = v29;
        v30 = swift_slowAlloc();
        v42 = swift_slowAlloc();
        v47[0] = v42;
        *(_DWORD *)v30 = 136315394;
        v31 = objc_msgSend(a1, sel_description);
        v32 = sub_1D451A6EC();
        v33 = a1;
        v35 = v34;

        sub_1D43D72EC(v32, v35, v47);
        sub_1D451B1A8();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 12) = 2080;
        v36 = objc_msgSend(a3, sel_description);
        v37 = sub_1D451A6EC();
        v39 = v38;

        a1 = v33;
        sub_1D43D72EC(v37, v39, v47);
        sub_1D451B1A8();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D42A7000, v28, typea, "for handler: result (%s) produced by request %s", (uint8_t *)v30, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1D825E524](v42, -1, -1);
        MEMORY[0x1D825E524](v30, -1, -1);
        swift_release();

      }
      else
      {

        swift_release();
        swift_unknownObjectRelease_n();
        swift_unknownObjectRelease_n();
      }
    }
    else
    {
      swift_release();
    }
  }
  return a5(a1);
}

uint64_t sub_1D43104F0(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(void *))
{
  uint64_t Strong;
  uint64_t v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;
  id v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  os_log_type_t v24;
  NSObject *log;
  uint64_t v26;
  uint64_t v27[5];

  v27[4] = *MEMORY[0x1E0C80C00];
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  swift_release();
  if (Strong)
  {
    if (qword_1EFE478B8 != -1)
      swift_once();
    if (byte_1EFEA7A60 == 1)
    {
      if (qword_1EFE40338 != -1)
        swift_once();
      v9 = sub_1D451A014();
      sub_1D42CC880(v9, (uint64_t)qword_1EFEA7700);
      v10 = a1;
      swift_unknownObjectRetain();
      v11 = a1;
      swift_unknownObjectRetain();
      v12 = sub_1D4519FFC();
      v13 = sub_1D451AF50();
      if (os_log_type_enabled(v12, v13))
      {
        v24 = v13;
        v14 = swift_slowAlloc();
        v15 = (_QWORD *)swift_slowAlloc();
        v26 = swift_slowAlloc();
        v27[0] = v26;
        *(_DWORD *)v14 = 138412546;
        log = v12;
        if (a1)
        {
          v16 = a1;
          v17 = _swift_stdlib_bridgeErrorToNSError();
          sub_1D451B1A8();
        }
        else
        {
          sub_1D451B1A8();
          v17 = 0;
        }
        *v15 = v17;

        *(_WORD *)(v14 + 12) = 2080;
        v18 = objc_msgSend(a3, sel_description);
        v19 = v15;
        v20 = sub_1D451A6EC();
        v22 = v21;

        sub_1D43D72EC(v20, v22, v27);
        sub_1D451B1A8();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D42A7000, log, v24, "for handler: termination (%@) received from request %s", (uint8_t *)v14, 0x16u);
        sub_1D42B28FC((uint64_t *)&unk_1EFE50850);
        swift_arrayDestroy();
        MEMORY[0x1D825E524](v19, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x1D825E524](v26, -1, -1);
        MEMORY[0x1D825E524](v14, -1, -1);

      }
      else
      {

        swift_unknownObjectRelease_n();
      }
    }
  }
  return a5(a1);
}

void sub_1D431084C(uint64_t a1, id a2)
{
  uint64_t v2;
  double v5;
  double v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  void *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;

  objc_msgSend(a2, sel_sampleRate);
  v6 = v5;
  v7 = objc_msgSend(a2, sel_channelCount);
  sub_1D42BE934();
  sub_1D43FE938((uint64_t)v7, v6);
  if (v2)
  {
    swift_release();
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 40) = 0;
    swift_unknownObjectRelease();
    *(_BYTE *)(a1 + 48) = 0;
    v16 = *(void **)(a1 + 56);
    *(_QWORD *)(a1 + 56) = v2;
    sub_1D4311FD8();

    if (qword_1EFE40338 != -1)
      swift_once();
    v17 = sub_1D451A014();
    sub_1D42CC880(v17, (uint64_t)qword_1EFEA7700);
    sub_1D4311FD8();
    sub_1D4311FD8();
    v18 = sub_1D4519FFC();
    v19 = sub_1D451AF5C();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = sub_1D42CC940();
      v21 = (_QWORD *)sub_1D42CC940();
      v26 = sub_1D42CC940();
      *(_DWORD *)v20 = 136315394;
      v22 = sub_1D451A728();
      sub_1D43D72EC(v22, v23, &v26);
      sub_1D451B1A8();
      sub_1D42CB208();
      *(_WORD *)(v20 + 12) = 2112;
      sub_1D4311FD8();
      v25 = _swift_stdlib_bridgeErrorToNSError();
      sub_1D451B1A8();
      *v21 = v25;
      sub_1D4311F78();
      sub_1D4311F78();
      _os_log_impl(&dword_1D42A7000, v18, v19, "request failed to adapt to system configuration %s with error %@", (uint8_t *)v20, 0x16u);
      sub_1D42B28FC((uint64_t *)&unk_1EFE50850);
      swift_arrayDestroy();
      sub_1D42CC934();
    }
    sub_1D4311F78();
    sub_1D4311F78();

    swift_willThrow();
  }
  else
  {
    swift_release();
    v8 = *(_QWORD *)(*(_QWORD *)(a1 + 24) + 24);
    v9 = sub_1D42B7104();
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 24))(v9, v8);
    if ((~v10 & 0xF000000000000007) != 0)
    {
      v11 = v10;
      v12 = sub_1D44BB170(v10);
      v14 = v13;
      ObjectType = swift_getObjectType();
      (*(void (**)(id, uint64_t, uint64_t, double))(v14 + 8))(v7, ObjectType, v14, v6);
      sub_1D42F0D80(v11);
      *(_QWORD *)(a1 + 32) = v12;
      *(_QWORD *)(a1 + 40) = v14;
      swift_unknownObjectRelease();
      *(_BYTE *)(a1 + 48) = 1;
      v24 = *(void **)(a1 + 56);
      *(_QWORD *)(a1 + 56) = 0;

    }
  }
}

void sub_1D4310B7C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t i;
  uint64_t v4;

  sub_1D4311F3C();
  v2 = *(_QWORD *)(v0 + 48);
  if (!(v2 >> 62))
  {
    sub_1D4311F98();
    if (v1)
      goto LABEL_3;
LABEL_8:
    sub_1D42BE8B4();
    sub_1D42CB6B8();
    return;
  }
  swift_bridgeObjectRetain();
  v1 = sub_1D451B5A4();
  if (!v1)
    goto LABEL_8;
LABEL_3:
  if (v1 >= 1)
  {
    for (i = 0; i != v1; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0)
        sub_1D4311FE0();
      v4 = *(_QWORD *)(v2 + 8 * i + 32);
      swift_unknownObjectRetain();
      sub_1D430EC9C(v4);
      swift_unknownObjectRelease();
    }
    goto LABEL_8;
  }
  __break(1u);
}

void sub_1D4310C38()
{
  uint64_t v0;
  void *v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  void *v19;
  id v20;
  unint64_t v21;
  void *v22;
  void *v23;
  unsigned int v24;
  id v25;
  id v26;
  void *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  id v37[16];

  v2 = v1;
  v37[14] = *(id *)MEMORY[0x1E0C80C00];
  sub_1D42B8E84();
  *(_QWORD *)(v0 + 24) = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  sub_1D42B8E84();
  v33 = v0;
  v3 = *(_QWORD *)(v0 + 56);
  if (v3 >> 62)
    goto LABEL_19;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = sub_1D451B5A4())
  {
    v35 = v3 & 0xC000000000000001;
    v5 = 4;
    v34 = v4;
    while (1)
    {
      v6 = v5 - 4;
      if (v35)
      {
        v7 = (_QWORD *)MEMORY[0x1D825CD78](v5 - 4, v3);
      }
      else
      {
        v7 = *(_QWORD **)(v3 + 8 * v5);
        sub_1D42E3CA4();
      }
      if (__OFADD__(v6, 1))
        break;
      v36 = v5;
      v8 = v3;
      sub_1D42B28FC(&qword_1EFE40410);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1D4525300;
      v10 = *(_QWORD *)(v7[3] + 24);
      v11 = sub_1D42B7104();
      v12 = *(_QWORD *)(v10 + 8);
      v13 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 16);
      sub_1D42BE984();
      v14 = v13(v11, v12);
      if (v1)
      {
        swift_bridgeObjectRelease();
        sub_1D42FC448();
        sub_1D4311F80();
        sub_1D4312038();
        swift_release();
        goto LABEL_17;
      }
      v15 = (void *)v14;
      sub_1D42FC448();
      if (v7[4])
      {
        v16 = v7[5];
        v17 = sub_1D42B7104();
        v18 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 16);
        sub_1D4311FD0();
        v19 = (void *)v18(v17, v16);
        sub_1D4312040();
      }
      else
      {
        v19 = 0;
      }
      v3 = v8;
      v20 = objc_allocWithZone((Class)SNProcessingContext);
      *(_QWORD *)(inited + 32) = sub_1D43115D8(v15, v19);
      v37[0] = (id)inited;
      sub_1D451A950();
      sub_1D42EA144();
      v21 = swift_bridgeObjectRetain();
      sub_1D44B505C(v21);
      swift_endAccess();
      sub_1D42CB208();
      swift_release();
      v5 = v36 + 1;
      if (v6 + 1 == v34)
        goto LABEL_13;
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
  }
LABEL_13:
  swift_bridgeObjectRelease();
  v22 = *(void **)(v33 + 32);
  sub_1D4311EC4();
  swift_bridgeObjectRetain();
  v23 = (void *)sub_1D451A908();
  sub_1D42CB208();
  v37[0] = 0;
  v24 = objc_msgSend(v22, sel_setProcessingContexts_error_, v23, v37);

  if (v24)
  {
    v25 = v37[0];
  }
  else
  {
    v26 = v37[0];
    v2 = (void *)sub_1D4519AA4();

    swift_willThrow();
LABEL_17:
    sub_1D42DCEE8();
    v27 = (void *)sub_1D4519A98();
    sub_1D430740C();
    v28 = sub_1D4311FB8();
    sub_1D43EC59C(v28, v29, v30, v27, v31, v32);

    swift_willThrow();
  }
}

void sub_1D4311014()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D4310C38();
  if (v0)
  {
    sub_1D42DCEE8();
    sub_1D4311F68();
    sub_1D430740C();
    sub_1D4311F20(v1, v2, (uint64_t)"Error configuring analysis tree");
    sub_1D4312028();
    sub_1D4311F78();
  }
  else
  {
    sub_1D42BE934();
    sub_1D42CF184();
    swift_release();
  }
}

uint64_t sub_1D43110C4(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;

  swift_beginAccess();
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >> 62)
    goto LABEL_13;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; v3 = sub_1D451B5A4())
  {
    for (i = 4; ; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        v5 = MEMORY[0x1D825CD78](i - 4, v2);
      }
      else
      {
        v5 = *(_QWORD *)(v2 + 8 * i);
        swift_retain();
      }
      v6 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v7 = *(_QWORD *)(*(_QWORD *)(v5 + 24) + 24);
      ObjectType = swift_getObjectType();
      v10 = *(void (**)(uint64_t, uint64_t))(v7 + 32);
      swift_retain();
      v10(ObjectType, v7);
      if (v11)
      {
        swift_bridgeObjectRelease();
        swift_release();
        return swift_release();
      }
      swift_release();
      swift_release();
      if (v6 == v3)
        return swift_bridgeObjectRelease();
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4311228()
{
  uint64_t v0;

  sub_1D42EA528();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D4311268()
{
  sub_1D4311228();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SNForwardPassAudioStreamAnalyzer()
{
  return objc_opt_self();
}

uint64_t sub_1D43112A8(uint64_t a1)
{
  return sub_1D430FECC(a1);
}

void sub_1D43112C8(uint64_t a1)
{
  sub_1D430EC9C(a1);
}

void sub_1D43112E8()
{
  sub_1D4310B7C();
}

uint64_t sub_1D4311308(uint64_t a1)
{
  if (swift_conformsToProtocol2())
    return a1;
  else
    return 0;
}

uint64_t sub_1D431133C(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a1 >> 62)
    goto LABEL_13;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    v5 = 0;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v6 = MEMORY[0x1D825CD78](v5, a1);
        swift_unknownObjectRelease();
        if (v6 == a2)
          goto LABEL_11;
      }
      else if (*(_QWORD *)(a1 + 8 * v5 + 32) == a2)
      {
        goto LABEL_11;
      }
      if (__OFADD__(v5, 1))
        break;
      if (++v5 == v4)
        goto LABEL_10;
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
    v4 = sub_1D451B5A4();
    swift_bridgeObjectRelease();
  }
LABEL_10:
  v5 = 0;
LABEL_11:
  swift_release();
  return v5;
}

uint64_t sub_1D4311434(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (a1 >> 62)
  {
LABEL_13:
    swift_bridgeObjectRetain();
    v4 = sub_1D451B5A4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v5 = 0;
  if (v4)
  {
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v6 = MEMORY[0x1D825CD78](v5, a1);
      }
      else
      {
        v6 = *(_QWORD *)(a1 + 8 * v5 + 32);
        swift_unknownObjectRetain();
      }
      swift_unknownObjectRelease();
      if (v6 == a2)
        break;
      v7 = v5 + 1;
      if (__OFADD__(v5, 1))
      {
        __break(1u);
        goto LABEL_13;
      }
      ++v5;
      if (v7 == v4)
      {
        v5 = 0;
        break;
      }
    }
  }
  swift_unknownObjectRelease();
  return v5;
}

id sub_1D431152C()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v5[2];

  v5[1] = *(id *)MEMORY[0x1E0C80C00];
  v5[0] = 0;
  v1 = objc_msgSend(v0, sel_initWithError_, v5);
  if (v1)
  {
    v2 = v5[0];
  }
  else
  {
    v3 = v5[0];
    sub_1D4519AA4();

    swift_willThrow();
  }
  return v1;
}

id sub_1D43115D8(void *a1, void *a2)
{
  void *v2;
  void *v3;
  id v6;
  id v7;
  id v8;
  id v10[2];

  v3 = v2;
  v10[1] = *(id *)MEMORY[0x1E0C80C00];
  v10[0] = 0;
  v6 = objc_msgSend(v3, sel_initWithGraph_sharedProcessingGraph_error_, a1, a2, v10);
  if (v6)
  {
    v7 = v10[0];
  }
  else
  {
    v8 = v10[0];
    sub_1D4519AA4();

    swift_willThrow();
  }

  return v6;
}

unint64_t sub_1D43116A8(unint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int isUniquelyReferenced_nonNull_bridgeObject;
  int v18;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  swift_retain();
  v6 = swift_bridgeObjectRetain();
  v7 = sub_1D431133C(v6, a2);
  if (!v2)
  {
    v3 = v7;
    v9 = v8;
    swift_bridgeObjectRelease();
    if ((v9 & 1) != 0)
    {
      v22 = *a1;
      if (v22 >> 62)
      {
        swift_bridgeObjectRetain();
        v3 = sub_1D451B5A4();
        swift_release();
        swift_bridgeObjectRelease();
        return v3;
      }
      v3 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    else
    {
      v10 = v3 + 1;
      if (__OFADD__(v3, 1))
        goto LABEL_58;
      if (*a1 >> 62)
      {
LABEL_59:
        swift_bridgeObjectRetain();
        v11 = sub_1D451B5A4();
        swift_bridgeObjectRelease();
      }
      else
      {
        v11 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      if (v10 != v11)
      {
        v12 = v3 + 5;
        while (1)
        {
          v13 = v12 - 4;
          v14 = *a1;
          if ((*a1 & 0xC000000000000001) != 0)
            break;
          if ((v13 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
            goto LABEL_59;
          }
          if (v13 >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_49;
          if (*(_QWORD *)(v14 + 8 * v12) != a2)
            goto LABEL_13;
LABEL_34:
          v10 = v12 - 3;
          if (__OFADD__(v13, 1))
            goto LABEL_50;
          if (*a1 >> 62)
          {
            swift_bridgeObjectRetain();
            v20 = sub_1D451B5A4();
            swift_bridgeObjectRelease();
          }
          else
          {
            v20 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          ++v12;
          if (v10 == v20)
            goto LABEL_46;
        }
        v21 = MEMORY[0x1D825CD78](v12 - 4);
        swift_unknownObjectRelease();
        if (v21 == a2)
          goto LABEL_34;
LABEL_13:
        if (v13 != v3)
        {
          v10 = *a1;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            v15 = MEMORY[0x1D825CD78](v3, *a1);
            v10 = *a1;
          }
          else
          {
            if ((v3 & 0x8000000000000000) != 0)
              goto LABEL_52;
            if (v3 >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_53;
            v15 = *(_QWORD *)(v10 + 8 * v3 + 32);
            swift_retain();
          }
          if ((v10 & 0xC000000000000001) != 0)
          {
            v16 = MEMORY[0x1D825CD78](v12 - 4, v10);
            v10 = *a1;
          }
          else
          {
            if ((v13 & 0x8000000000000000) != 0)
              goto LABEL_54;
            if (v13 >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_55;
            v16 = *(_QWORD *)(v10 + 8 * v12);
            swift_retain();
          }
          isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
          *a1 = v10;
          if (!isUniquelyReferenced_nonNull_bridgeObject
            || (v10 & 0x8000000000000000) != 0
            || (v10 & 0x4000000000000000) != 0)
          {
            sub_1D43830E4(v10);
          }
          *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 8 * v3 + 0x20) = v16;
          swift_release();
          sub_1D451A950();
          v10 = *a1;
          v18 = swift_isUniquelyReferenced_nonNull_bridgeObject();
          *a1 = v10;
          if (!v18 || (v10 & 0x8000000000000000) != 0 || (v10 & 0x4000000000000000) != 0)
            sub_1D43830E4(v10);
          if ((v13 & 0x8000000000000000) != 0)
            goto LABEL_56;
          if (v13 >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_57;
          *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 8 * v12) = v15;
          swift_release();
          sub_1D451A950();
        }
        if (__OFADD__(v3++, 1))
          goto LABEL_51;
        goto LABEL_34;
      }
    }
LABEL_46:
    swift_release();
    return v3;
  }
  swift_release();
  swift_bridgeObjectRelease();
  return v3;
}

unint64_t sub_1D43119D8(unint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int isUniquelyReferenced_nonNull_bridgeObject;
  int v19;
  uint64_t v21;
  unint64_t v22;

  swift_unknownObjectRetain();
  v6 = swift_bridgeObjectRetain();
  v7 = sub_1D4311434(v6, a2);
  if (v2)
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = v7;
    v9 = v8;
    swift_bridgeObjectRelease();
    if ((v9 & 1) != 0)
    {
      v22 = *a1;
      if (v22 >> 62)
      {
        swift_bridgeObjectRetain();
        v3 = sub_1D451B5A4();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        return v3;
      }
      v3 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    else
    {
      v10 = v3 + 1;
      if (__OFADD__(v3, 1))
        goto LABEL_58;
      if (*a1 >> 62)
      {
LABEL_59:
        swift_bridgeObjectRetain();
        v11 = sub_1D451B5A4();
        swift_bridgeObjectRelease();
      }
      else
      {
        v11 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      if (v10 != v11)
      {
        v12 = v3 + 5;
        do
        {
          v13 = v12 - 4;
          v14 = *a1;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            v15 = MEMORY[0x1D825CD78](v12 - 4);
          }
          else
          {
            if ((v13 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_49:
              __break(1u);
LABEL_50:
              __break(1u);
LABEL_51:
              __break(1u);
LABEL_52:
              __break(1u);
LABEL_53:
              __break(1u);
LABEL_54:
              __break(1u);
LABEL_55:
              __break(1u);
LABEL_56:
              __break(1u);
LABEL_57:
              __break(1u);
LABEL_58:
              __break(1u);
              goto LABEL_59;
            }
            if (v13 >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_49;
            v15 = *(_QWORD *)(v14 + 8 * v12);
            swift_unknownObjectRetain();
          }
          swift_unknownObjectRelease();
          if (v15 != a2)
          {
            if (v13 != v3)
            {
              v10 = *a1;
              if ((*a1 & 0xC000000000000001) != 0)
              {
                v16 = MEMORY[0x1D825CD78](v3, *a1);
                v10 = *a1;
              }
              else
              {
                if ((v3 & 0x8000000000000000) != 0)
                  goto LABEL_52;
                if (v3 >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_53;
                v16 = *(_QWORD *)(v10 + 8 * v3 + 32);
                swift_unknownObjectRetain();
              }
              if ((v10 & 0xC000000000000001) != 0)
              {
                v17 = MEMORY[0x1D825CD78](v12 - 4, v10);
                v10 = *a1;
              }
              else
              {
                if ((v13 & 0x8000000000000000) != 0)
                  goto LABEL_54;
                if (v13 >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_55;
                v17 = *(_QWORD *)(v10 + 8 * v12);
                swift_unknownObjectRetain();
              }
              isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
              *a1 = v10;
              if (!isUniquelyReferenced_nonNull_bridgeObject
                || (v10 & 0x8000000000000000) != 0
                || (v10 & 0x4000000000000000) != 0)
              {
                sub_1D43830E4(v10);
              }
              *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 8 * v3 + 0x20) = v17;
              swift_unknownObjectRelease();
              sub_1D451A950();
              v10 = *a1;
              v19 = swift_isUniquelyReferenced_nonNull_bridgeObject();
              *a1 = v10;
              if (!v19 || (v10 & 0x8000000000000000) != 0 || (v10 & 0x4000000000000000) != 0)
                sub_1D43830E4(v10);
              if ((v13 & 0x8000000000000000) != 0)
                goto LABEL_56;
              if (v13 >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_57;
              *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 8 * v12) = v16;
              swift_unknownObjectRelease();
              sub_1D451A950();
            }
            if (__OFADD__(v3++, 1))
              goto LABEL_51;
          }
          v10 = v12 - 3;
          if (__OFADD__(v13, 1))
            goto LABEL_50;
          if (*a1 >> 62)
          {
            swift_bridgeObjectRetain();
            v21 = sub_1D451B5A4();
            swift_bridgeObjectRelease();
          }
          else
          {
            v21 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          ++v12;
        }
        while (v10 != v21);
      }
    }
    swift_unknownObjectRelease();
  }
  return v3;
}

uint64_t sub_1D4311D14()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D4311D3C(uint64_t a1)
{
  return sub_1D4311D88(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D43104F0);
}

uint64_t sub_1D4311D4C()
{
  sub_1D42EA528();
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D4311D7C(uint64_t a1)
{
  return sub_1D4311D88(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D431008C);
}

uint64_t sub_1D4311D88(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_1D4311D9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v12;

  v12 = swift_allocObject();
  return sub_1D4311E18(a1, a2, a3, a4, a5, a6, v12);
}

uint64_t sub_1D4311E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  *(_QWORD *)(a7 + 16) = a1;
  *(_QWORD *)(a7 + 24) = a2;
  *(_QWORD *)(a7 + 32) = a3;
  *(_QWORD *)(a7 + 40) = a4;
  *(_BYTE *)(a7 + 48) = a5;
  *(_QWORD *)(a7 + 56) = a6;

  return a7;
}

uint64_t sub_1D4311E50()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void *sub_1D4311E78(void *a1)
{
  uint64_t v1;

  return sub_1D430FF98(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1D4311E84()
{
  sub_1D42EA528();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D4311EAC()
{
  uint64_t v0;

  return sub_1D43110C4(v0);
}

unint64_t sub_1D4311EC4()
{
  unint64_t result;

  result = qword_1EFE47300;
  if (!qword_1EFE47300)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFE47300);
  }
  return result;
}

id sub_1D4311F20@<X0>(uint64_t a1@<X1>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  return sub_1D43EC59C(0xD000000000000017, a1, 2, 0, a2, (a3 - 32) | 0x8000000000000000);
}

uint64_t sub_1D4311F3C()
{
  return swift_beginAccess();
}

id sub_1D4311F48()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, (SEL)(v1 + 3830));
}

unint64_t sub_1D4311F54()
{
  return 0xD000000000000017;
}

void sub_1D4311F78()
{
  void *v0;

}

uint64_t sub_1D4311F80()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = 0;
  return swift_setDeallocating();
}

uint64_t sub_1D4311F8C()
{
  return sub_1D451B1A8();
}

uint64_t sub_1D4311F98()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D4311FA8()
{
  return sub_1D451A794();
}

unint64_t sub_1D4311FB8()
{
  return 0xD000000000000017;
}

uint64_t sub_1D4311FD0()
{
  return swift_unknownObjectRetain_n();
}

id sub_1D4311FD8()
{
  void *v0;

  return v0;
}

void sub_1D4311FE0()
{
  JUMPOUT(0x1D825CD78);
}

id sub_1D4311FEC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;

  return objc_msgSend(v9, a2, &a9);
}

uint64_t sub_1D4311FF8()
{
  return swift_willThrow();
}

uint64_t sub_1D4312004()
{
  return swift_beginAccess();
}

uint64_t sub_1D4312010()
{
  return sub_1D451B0A0();
}

uint64_t sub_1D431201C()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_1D4312028()
{
  return swift_willThrow();
}

uint64_t sub_1D4312030()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1D4312038()
{
  return sub_1D43476D0();
}

uint64_t sub_1D4312040()
{
  return swift_unknownObjectRelease_n();
}

uint64_t sub_1D431204C()
{
  return sub_1D451B5A4();
}

uint64_t sub_1D4312054()
{
  return swift_weakInit();
}

uint64_t sub_1D4312060()
{
  sub_1D451B964();
  return sub_1D451A74C();
}

uint64_t sub_1D43120A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_1D451B820();
}

uint64_t sub_1D43120BC()
{
  sub_1D451B958();
  sub_1D451B964();
  sub_1D451A74C();
  return sub_1D451B994();
}

uint64_t sub_1D431211C()
{
  return sub_1D43120BC();
}

uint64_t sub_1D4312124()
{
  return sub_1D4312060();
}

uint64_t sub_1D431212C()
{
  sub_1D451B958();
  sub_1D451B964();
  sub_1D451A74C();
  return sub_1D451B994();
}

uint64_t sub_1D4312184(uint64_t *a1, uint64_t *a2)
{
  return sub_1D43120A0(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_1D43121D0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___SNFileDeletionResult_impl);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1D431224C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___SNFileDeletionResult_impl + 24);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR___SNFileDeletionResult_impl + 16);
    sub_1D4312548();
    v3 = swift_allocError();
    *v4 = v2;
    v4[1] = v1;
  }
  else
  {
    v3 = 0;
  }
  swift_bridgeObjectRetain();
  return v3;
}

id SNFileDeletionResult.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SNFileDeletionResult.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SNFileDeletionResult.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SNFileDeletionResult();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SNFileDeletionResult()
{
  return objc_opt_self();
}

uint64_t method lookup function for SNFileDeletionResult()
{
  return swift_lookUpClassMethod();
}

uint64_t destroy for FileDeletionResult()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for FileDeletionResult(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for FileDeletionResult(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for FileDeletionResult(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FileDeletionResult(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FileDeletionResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FileDeletionResult()
{
  return &type metadata for FileDeletionResult;
}

unint64_t sub_1D4312548()
{
  unint64_t result;

  result = qword_1EFE4B3A0;
  if (!qword_1EFE4B3A0)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4529808, &type metadata for FileDeletionResult.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4B3A0);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for FileDeletionResult.DomainError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for FileDeletionResult.DomainError()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for FileDeletionResult.DomainError(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for FileDeletionResult.DomainError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ComposedDetector(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ComposedDetector(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FileDeletionResult.DomainError()
{
  return &type metadata for FileDeletionResult.DomainError;
}

unint64_t sub_1D43126B8()
{
  unint64_t result;

  result = qword_1EFE4B3A8;
  if (!qword_1EFE4B3A8)
  {
    result = MEMORY[0x1D825E41C](&unk_1D45297A0, &type metadata for FileDeletionResult.DomainError);
    atomic_store(result, (unint64_t *)&qword_1EFE4B3A8);
  }
  return result;
}

uint64_t sub_1D43126F8()
{
  uint64_t result;

  sub_1D42B28FC(qword_1EFE4B3B0);
  swift_allocObject();
  result = sub_1D4312B74(MEMORY[0x1E0DEE9E0]);
  qword_1EFEA7760 = result;
  return result;
}

uint64_t sub_1D4312740()
{
  uint64_t v0;

  sub_1D4312778(*(_QWORD *)(v0 + 16));

  swift_release();
  return v0;
}

uint64_t sub_1D4312778(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD v7[6];

  if (qword_1EFE40338 != -1)
    swift_once();
  v2 = sub_1D451A014();
  sub_1D42CC880(v2, (uint64_t)qword_1EFEA7700);
  v3 = sub_1D4519FFC();
  v4 = sub_1D451AF74();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v5 = 134217984;
    v7[0] = a1;
    sub_1D451B1A8();
    _os_log_impl(&dword_1D42A7000, v3, v4, "Unregister from System Power Updates, id: %ld", v5, 0xCu);
    MEMORY[0x1D825E524](v5, -1, -1);
  }

  if (qword_1EFE48E48 != -1)
    swift_once();
  sub_1D447831C(a1, qword_1EFEA7760, (uint64_t)v7);
  return sub_1D4312AFC((uint64_t)v7);
}

uint64_t sub_1D43128C8()
{
  sub_1D4312740();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PowerStateUtils.SystemPowerCallbackRegistration()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for PowerStateUtils()
{
  return &type metadata for PowerStateUtils;
}

void destroy for PowerStateUtils.UnsafeSystemPowerCallbackRegistration(uint64_t a1)
{
  swift_release();

}

uint64_t initializeWithCopy for PowerStateUtils.UnsafeSystemPowerCallbackRegistration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v4 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  swift_retain();
  v5 = v4;
  return a1;
}

uint64_t assignWithCopy for PowerStateUtils.UnsafeSystemPowerCallbackRegistration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v5 = *(void **)(a2 + 32);
  v6 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v5;
  v7 = v5;

  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  return a1;
}

__n128 initializeWithTake for PowerStateUtils.UnsafeSystemPowerCallbackRegistration(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 28) = *(_OWORD *)(a2 + 28);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for PowerStateUtils.UnsafeSystemPowerCallbackRegistration(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v4 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for PowerStateUtils.UnsafeSystemPowerCallbackRegistration(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 44))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PowerStateUtils.UnsafeSystemPowerCallbackRegistration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 44) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 44) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PowerStateUtils.UnsafeSystemPowerCallbackRegistration()
{
  return &type metadata for PowerStateUtils.UnsafeSystemPowerCallbackRegistration;
}

uint64_t sub_1D4312AFC(uint64_t a1)
{
  sub_1D4312B30(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(void **)(a1 + 32));
  return a1;
}

void sub_1D4312B30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a1 != 1)
    sub_1D4312B40(a1, a2, a3, a4, a5);
}

void sub_1D4312B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a1)
  {
    swift_release();

  }
}

uint64_t sub_1D4312B74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _DWORD *v4;

  type metadata accessor for SafeLock();
  v3 = swift_allocObject();
  v4 = (_DWORD *)swift_slowAlloc();
  *v4 = 0;
  *(_QWORD *)(v3 + 16) = v4;
  *(_QWORD *)(v1 + 16) = a1;
  *(_QWORD *)(v1 + 24) = v3;
  return v1;
}

uint64_t type metadata accessor for AOPUnsafeUnitValueStatusErrorContinuationView()
{
  return objc_opt_self();
}

uint64_t sub_1D4312BEC()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1D4312BF4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1D4312C4C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  if (*(_DWORD *)(v6 + 84))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  if (*(_DWORD *)(v6 + 80) > 7u || (v7 & 0x100000) != 0 || v8 > 0x18)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v7 + 16) & ~(unint64_t)v7));
    swift_retain();
  }
  else if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a2, 1, *(_QWORD *)(a3 + 16)))
  {
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, 0, 1, v5);
  }
  return a1;
}

uint64_t sub_1D4312D1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 16);
  result = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return result;
}

void *sub_1D4312D68(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  size_t v9;
  size_t v10;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a2, 1, v5);
  v7 = *(_QWORD *)(v5 - 8);
  if (v6)
  {
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
    if (v8)
      v10 = v9;
    else
      v10 = v9 + 1;
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v5);
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, 0, 1, v5);
  }
  return a1;
}

void *sub_1D4312DF8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  size_t v9;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, 1, v5);
  v7 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a2, 1, v5);
  v8 = *(_QWORD *)(v5 - 8);
  if (v6)
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(a1, a2, v5);
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, 0, 1, v5);
      return a1;
    }
  }
  else
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 24))(a1, a2, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v8 + 84))
    v9 = *(_QWORD *)(v8 + 64);
  else
    v9 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(a1, a2, v9);
  return a1;
}

void *sub_1D4312ED0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  size_t v9;
  size_t v10;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a2, 1, v5);
  v7 = *(_QWORD *)(v5 - 8);
  if (v6)
  {
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
    if (v8)
      v10 = v9;
    else
      v10 = v9 + 1;
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v5);
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, 0, 1, v5);
  }
  return a1;
}

void *sub_1D4312F60(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  size_t v9;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a1, 1, v5);
  v7 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)a2, 1, v5);
  v8 = *(_QWORD *)(v5 - 8);
  if (v6)
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(a1, a2, v5);
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)a1, 0, 1, v5);
      return a1;
    }
  }
  else
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 40))(a1, a2, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v8 + 84))
    v9 = *(_QWORD *)(v8 + 64);
  else
    v9 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(a1, a2, v9);
  return a1;
}

uint64_t sub_1D4313038(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  char v10;
  int v11;
  unsigned int v12;
  int v13;
  unsigned int v15;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = v6 - 1;
  if (!(_DWORD)v6)
    v7 = 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (!(_DWORD)v6)
    ++v8;
  if (!a2)
    return 0;
  v9 = a2 - v7;
  if (a2 > v7)
  {
    v10 = 8 * v8;
    if (v8 > 3)
      goto LABEL_8;
    v12 = ((v9 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v12))
    {
      v11 = *(_DWORD *)(a1 + v8);
      if (v11)
        goto LABEL_15;
    }
    else
    {
      if (v12 <= 0xFF)
      {
        if (v12 < 2)
          goto LABEL_22;
LABEL_8:
        v11 = *(unsigned __int8 *)(a1 + v8);
        if (!*(_BYTE *)(a1 + v8))
          goto LABEL_22;
LABEL_15:
        v13 = (v11 - 1) << v10;
        if (v8 > 3)
          v13 = 0;
        if ((_DWORD)v8)
        {
          if (v8 > 3)
            LODWORD(v8) = 4;
          __asm { BR              X12 }
        }
        return v7 + v13 + 1;
      }
      v11 = *(unsigned __int16 *)(a1 + v8);
      if (*(_WORD *)(a1 + v8))
        goto LABEL_15;
    }
  }
LABEL_22:
  if (v6 < 2)
    return 0;
  v15 = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, v6, v4);
  if (v15 >= 2)
    return v15 - 1;
  else
    return 0;
}

void sub_1D4313164(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  size_t v10;
  size_t v11;
  char v12;
  BOOL v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;

  v6 = 0u;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (!v8)
    v9 = 0;
  v10 = *(_QWORD *)(v7 + 64);
  if (v8)
    v11 = v10;
  else
    v11 = v10 + 1;
  v12 = 8 * v11;
  v13 = a3 >= v9;
  v14 = a3 - v9;
  if (v14 != 0 && v13)
  {
    if (v11 <= 3)
    {
      v15 = ((v14 + ~(-1 << v12)) >> v12) + 1;
      if (HIWORD(v15))
      {
        v6 = 4u;
      }
      else if (v15 >= 0x100)
      {
        v6 = 2;
      }
      else
      {
        v6 = v15 > 1;
      }
    }
    else
    {
      v6 = 1u;
    }
  }
  if (v9 < a2)
  {
    v16 = ~v9 + a2;
    if (v11 < 4)
    {
      if ((_DWORD)v11)
      {
        v17 = v16 & ~(-1 << v12);
        bzero(a1, v11);
        if ((_DWORD)v11 == 3)
        {
          *a1 = v17;
          *((_BYTE *)a1 + 2) = BYTE2(v17);
        }
        else if ((_DWORD)v11 == 2)
        {
          *a1 = v17;
        }
        else
        {
          *(_BYTE *)a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v16;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

void sub_1D43132F8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1D4313300()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

uint64_t sub_1D4313324(uint64_t a1, uint64_t a2)
{
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, 1, *(_QWORD *)(a2 + 16));
}

uint64_t sub_1D4313330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(a1, a2, 1, *(_QWORD *)(a3 + 16));
}

uint64_t type metadata accessor for ReservableSlot(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ReservableSlot);
}

uint64_t sub_1D4313348()
{
  uint64_t v1;

  sub_1D431374C();
  sub_1D431374C();
  sub_1D451A59C();
  sub_1D451AA1C();
  sub_1D451A878();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1D4313410()
{
  uint64_t v0;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  v0 = sub_1D451AA1C();
  swift_checkMetadataState();
  MEMORY[0x1D825E41C](MEMORY[0x1E0DEAF58], v0);
  return sub_1D451AE30();
}

uint64_t sub_1D43134F8()
{
  return sub_1D4313410();
}

uint64_t sub_1D4313514(uint64_t a1, int64_t a2, int64_t a3)
{
  vDSP_Length v3;
  vDSP_Length v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t result;
  uint64_t v9;

  if ((unsigned __int128)(a2 * (__int128)a3) >> 64 == (a2 * a3) >> 63)
  {
    v5 = a1;
    if (*(_QWORD *)(a1 + 16) != a2 * a3)
    {
      sub_1D42BE058();
      swift_allocError();
      *v7 = 10;
      swift_willThrow();
      return v6;
    }
    v4 = a3;
    v3 = a2;
    swift_bridgeObjectRetain();
    v6 = v5;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
      if ((v4 & 0x8000000000000000) != 0)
        goto LABEL_11;
      goto LABEL_5;
    }
  }
  else
  {
    __break(1u);
  }
  sub_1D43830A4();
  v6 = v9;
  if ((v4 & 0x8000000000000000) != 0)
    goto LABEL_11;
LABEL_5:
  if ((v3 & 0x8000000000000000) == 0)
  {
    vDSP_mtrans((const float *)(v5 + 32), 1, (float *)(v6 + 32), 1, v4, v3);
    return v6;
  }
LABEL_11:
  result = sub_1D451B550();
  __break(1u);
  return result;
}

uint64_t storeEnumTagSinglePayload for CollectionUtils.DomainError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1D431368C + 4 * byte_1D4529933[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1D43136C0 + 4 * byte_1D452992E[v4]))();
}

uint64_t sub_1D43136C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43136C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D43136D0);
  return result;
}

uint64_t sub_1D43136DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D43136E4);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1D43136E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43136F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CollectionUtils.DomainError()
{
  return &type metadata for CollectionUtils.DomainError;
}

unint64_t sub_1D4313710()
{
  unint64_t result;

  result = qword_1EFE4B438[0];
  if (!qword_1EFE4B438[0])
  {
    result = MEMORY[0x1D825E41C](&unk_1D45299BC, &type metadata for CollectionUtils.DomainError);
    atomic_store(result, qword_1EFE4B438);
  }
  return result;
}

uint64_t sub_1D431374C()
{
  return swift_getAssociatedTypeWitness();
}

void RawRepresentableWrapper.value.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;

  v3 = v2;
  v5 = *(_QWORD *)(a1 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  sub_1D42BE8BC();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v14 - v9;
  sub_1D451B160();
  sub_1D42BE8BC();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v14 - v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v3, AssociatedTypeWitness);
  sub_1D451A8C0();
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v13, 1, v5) == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, v13, v5);
    sub_1D42CB0F8();
  }
}

void RawRepresentableWrapper.init(_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  sub_1D42BE8BC();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v11 - v9;
  sub_1D451A8B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a3, v10, AssociatedTypeWitness);
  sub_1D42CB0F8();
}

uint64_t RawRepresentableWrapper.rawValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, v1, AssociatedTypeWitness);
}

uint64_t sub_1D431395C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x65756C6156776172 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1D451B820();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1D43139E0()
{
  return 0x65756C6156776172;
}

uint64_t sub_1D43139F8()
{
  return _s13SoundAnalysis17_SNClassificationC20supportsSecureCodingSbvgZ_0();
}

uint64_t sub_1D4313A00()
{
  return sub_1D42CCA04();
}

uint64_t sub_1D4313A0C()
{
  return sub_1D42BA2F0();
}

uint64_t sub_1D4313A18()
{
  sub_1D451B958();
  sub_1D42BA2F0();
  return sub_1D451B994();
}

uint64_t sub_1D4313A58()
{
  return sub_1D43139E0();
}

uint64_t sub_1D4313A64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D431395C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D4313A94()
{
  return sub_1D42BA688();
}

uint64_t sub_1D4313AB4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s13SoundAnalysis17_SNClassificationC20supportsSecureCodingSbvgZ_0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D4313AE4(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D4529C40, a1);
  return sub_1D451BA3C();
}

uint64_t sub_1D4313B18(uint64_t a1)
{
  MEMORY[0x1D825E41C](&unk_1D4529C40, a1);
  return sub_1D451BA48();
}

uint64_t static RawRepresentableWrapper<>.== infix(_:_:)()
{
  sub_1D43146DC();
  return sub_1D451A698() & 1;
}

uint64_t sub_1D4313BAC()
{
  return static RawRepresentableWrapper<>.== infix(_:_:)();
}

uint64_t RawRepresentableWrapper<>.hash(into:)()
{
  sub_1D43146DC();
  return sub_1D451A614();
}

uint64_t RawRepresentableWrapper<>.hashValue.getter()
{
  sub_1D451B958();
  RawRepresentableWrapper<>.hash(into:)();
  return sub_1D451B994();
}

uint64_t sub_1D4313C5C()
{
  return RawRepresentableWrapper<>.hashValue.getter();
}

uint64_t sub_1D4313C64()
{
  return RawRepresentableWrapper<>.hash(into:)();
}

uint64_t sub_1D4313C6C()
{
  sub_1D451B958();
  RawRepresentableWrapper<>.hash(into:)();
  return sub_1D451B994();
}

void RawRepresentableWrapper<>.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v14 = a3;
  v5 = *(_QWORD *)(a2 + 24);
  v13 = *(_QWORD *)(a2 + 16);
  v6 = type metadata accessor for RawRepresentableWrapper.CodingKeys(255, v13, v5, a4);
  MEMORY[0x1D825E41C](&unk_1D4529C40, v6);
  v7 = sub_1D451B7A8();
  v8 = *(_QWORD *)(v7 - 8);
  sub_1D42BE8BC();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v12 - v10;
  sub_1D42B5528(a1, a1[3]);
  sub_1D451BA24();
  swift_getAssociatedTypeWitness();
  sub_1D451B760();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  sub_1D42BE844();
}

uint64_t type metadata accessor for RawRepresentableWrapper.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RawRepresentableWrapper.CodingKeys);
}

void sub_1D4313DE8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  RawRepresentableWrapper<>.encode(to:)(a1, a2, *(_QWORD *)(a3 - 8), a4);
}

void RawRepresentableWrapper<>.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t AssociatedTypeWitness;
  char *v32;
  uint64_t v33;
  uint64_t v34;

  v29 = a5;
  v30 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v28 = *(_QWORD *)(AssociatedTypeWitness - 8);
  sub_1D42BE8BC();
  MEMORY[0x1E0C80A78](v8);
  v32 = (char *)&v24 - v9;
  v11 = type metadata accessor for RawRepresentableWrapper.CodingKeys(255, a2, a3, v10);
  MEMORY[0x1D825E41C](&unk_1D4529C40, v11);
  v33 = sub_1D451B6E8();
  v26 = *(_QWORD *)(v33 - 8);
  sub_1D42BE8BC();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v24 - v13;
  v25 = type metadata accessor for RawRepresentableWrapper(0, a2, a3, v15);
  v16 = *(_QWORD *)(v25 - 8);
  sub_1D42BE8BC();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v24 - v18;
  sub_1D42B5528(a1, a1[3]);
  v27 = v14;
  v20 = v34;
  sub_1D451BA0C();
  if (!v20)
  {
    v34 = v16;
    v22 = v28;
    v21 = v29;
    v23 = AssociatedTypeWitness;
    sub_1D451B688();
    sub_1D43146CC();
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v32, v23);
    (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v21, v19, v25);
  }
  sub_1D42B5400((uint64_t)a1);
  sub_1D42BE844();
}

uint64_t type metadata accessor for RawRepresentableWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RawRepresentableWrapper);
}

uint64_t sub_1D4313FEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x1D825E41C](&protocol conformance descriptor for <> RawRepresentableWrapper<A>, a1, &v4);
}

void sub_1D4314024(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  RawRepresentableWrapper<>.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), *(_QWORD *)(a3 - 8), a4);
}

uint64_t sub_1D4314044()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1D43140C0(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (v6 <= 7 && *(_QWORD *)(v5 + 64) <= 0x18uLL && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  }
  else
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~v6));
    swift_retain();
  }
  return a1;
}

uint64_t sub_1D4314154(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
}

uint64_t sub_1D43141A0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1D43141F8(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 24))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1D4314250(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1D43142A8(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 40))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1D4314300(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (!a2)
    return 0;
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (a2 <= v6)
    goto LABEL_18;
  v7 = *(_QWORD *)(v5 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((a2 - v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(a1, v6, AssociatedTypeWitness);
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if ((_DWORD)v7)
  {
    if (v7 > 3)
      LODWORD(v7) = 4;
    __asm { BR              X11 }
  }
  return (v6 + v11 + 1);
}

void sub_1D431443C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 <= v7)
  {
    v10 = 0u;
  }
  else if (v8 <= 3)
  {
    v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v12))
    {
      v10 = 4u;
    }
    else if (v12 >= 0x100)
    {
      v10 = 2;
    }
    else
    {
      v10 = v12 > 1;
    }
  }
  else
  {
    v10 = 1u;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *(_WORD *)a1 = v13;
          a1[2] = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *(_WORD *)a1 = v13;
        }
        else
        {
          *a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t sub_1D4314608()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1D4314610(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D4314650 + 4 * byte_1D4529A3E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D4314670 + 4 * byte_1D4529A43[v4]))();
}

_BYTE *sub_1D4314650(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D4314670(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D4314678(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D4314680(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D4314688(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D4314690(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_1D431469C()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D43146AC()
{
  JUMPOUT(0x1D825E41CLL);
}

void sub_1D43146BC()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D43146CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8))(v1, *(_QWORD *)(v2 - 88));
}

uint64_t sub_1D43146DC()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1D43146E8()
{
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B988();
  sub_1D42CB7B8();
  sub_1D451A74C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D43147AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  double v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t result;

  v8 = *(double *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(double *)(a2 + 48);
  v12 = *(_QWORD *)(a2 + 56);
  v13 = *(_QWORD *)(a2 + 64);
  v14 = sub_1D42D83FC(a1, a2, a3, a4, a5, a6, a7, a8, *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), *(_QWORD *)(a2 + 32), *(_QWORD *)(a2 + 40), *(_QWORD *)a1);
  result = 0;
  if (v14 && v8 == v11)
  {
    if (v9 == v12 && v10 == v13)
    {
      return 1;
    }
    else
    {
      sub_1D43161AC();
      return sub_1D451B820();
    }
  }
  return result;
}

uint64_t sub_1D431487C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x676E6152656D6974 && a2 == 0xE900000000000065;
  if (v2 || (sub_1D451B820() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6E656469666E6F63 && a2 == 0xEA00000000006563;
    if (v6 || (sub_1D451B820() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 1701667182 && a2 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1D451B820();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1D43149D0(char a1)
{
  if (!a1)
    return 0x676E6152656D6974;
  if (a1 == 1)
    return 0x6E656469666E6F63;
  return 1701667182;
}

uint64_t sub_1D4314A28(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  _QWORD v14[2];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = v1;
  v4 = sub_1D42B28FC((uint64_t *)&unk_1EFE4B568);
  v16 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  v9 = v2[2];
  v8 = v2[3];
  v10 = v2[5];
  v14[1] = v2[7];
  v15 = v10;
  v14[0] = v2[8];
  sub_1D42B5528(a1, a1[3]);
  sub_1D4315FBC();
  sub_1D451BA24();
  v19 = v7;
  v20 = v2[1];
  v21 = v9;
  v22 = v8;
  v23 = v2[4];
  v24 = v15;
  v18 = 0;
  sub_1D42CA408();
  v11 = v17;
  sub_1D451B760();
  if (v11)
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v6, v4);
  v13 = v16;
  LOBYTE(v19) = 1;
  sub_1D451B73C();
  LOBYTE(v19) = 2;
  sub_1D451B724();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v6, v4);
}

uint64_t sub_1D4314BE0()
{
  sub_1D451B958();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B988();
  sub_1D42CB7B8();
  sub_1D451A74C();
  swift_bridgeObjectRelease();
  return sub_1D451B994();
}

uint64_t sub_1D4314CDC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = sub_1D42B28FC(&qword_1EFE4B550);
  MEMORY[0x1E0C80A78](v5);
  sub_1D42B5528(a1, a1[3]);
  sub_1D4315FBC();
  sub_1D451BA0C();
  if (!v2)
  {
    sub_1D42CA3CC();
    sub_1D451B688();
    sub_1D42F865C(1);
    sub_1D451B664();
    v7 = v6;
    sub_1D42F865C(2);
    v9 = sub_1D451B64C();
    v11 = v10;
    sub_1D42CB3CC();
    *a2 = v12;
    a2[1] = v13;
    a2[2] = v14;
    a2[3] = v15;
    a2[4] = v16;
    a2[5] = v17;
    a2[6] = v7;
    a2[7] = v9;
    a2[8] = v11;
  }
  return sub_1D42B5400((uint64_t)a1);
}

uint64_t sub_1D4314E84()
{
  char *v0;

  return sub_1D43149D0(*v0);
}

uint64_t sub_1D4314E8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D431487C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D4314EB0()
{
  sub_1D4315FBC();
  return sub_1D451BA3C();
}

uint64_t sub_1D4314ED8()
{
  sub_1D4315FBC();
  return sub_1D451BA48();
}

uint64_t sub_1D4314F08()
{
  sub_1D451B958();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B988();
  sub_1D451B97C();
  sub_1D451B97C();
  sub_1D451B988();
  sub_1D451B988();
  swift_bridgeObjectRetain();
  sub_1D451A74C();
  swift_bridgeObjectRelease();
  return sub_1D451B994();
}

uint64_t sub_1D4315004@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1D4314CDC(a1, a2);
}

uint64_t sub_1D4315018(_QWORD *a1)
{
  return sub_1D4314A28(a1);
}

double SNSoundActionsResult.timeRange.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = v1 + OBJC_IVAR___SNSoundActionsResult_impl;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR___SNSoundActionsResult_impl + 40);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___SNSoundActionsResult_impl);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(v2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v2 + 16);
  result = *(double *)(v2 + 32);
  *(double *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 40) = v3;
  return result;
}

double SNSoundActionsResult.timeRange.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = v1 + OBJC_IVAR___SNSoundActionsResult_impl;
  *(_QWORD *)v3 = *(_QWORD *)a1;
  *(_QWORD *)(v3 + 8) = *(_QWORD *)(a1 + 8);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(a1 + 16);
  result = *(double *)(a1 + 32);
  *(double *)(v3 + 32) = result;
  *(_QWORD *)(v3 + 40) = v2;
  return result;
}

double (*SNSoundActionsResult.timeRange.modify(_QWORD *a1))(void **a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[6] = v1;
  SNSoundActionsResult.timeRange.getter((uint64_t)v3);
  return sub_1D4315198;
}

double sub_1D4315198(void **a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  double result;

  v1 = *a1;
  v2 = v1[5];
  v3 = v1[6] + OBJC_IVAR___SNSoundActionsResult_impl;
  v4 = v1[1];
  v5 = v1[4];
  v6 = *((_OWORD *)v1 + 1);
  *(_QWORD *)v3 = *v1;
  *(_QWORD *)(v3 + 8) = v4;
  *(_OWORD *)(v3 + 16) = v6;
  *(_QWORD *)(v3 + 32) = v5;
  *(_QWORD *)(v3 + 40) = v2;
  free(v1);
  return result;
}

double SNSoundActionsResult.confidence.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR___SNSoundActionsResult_impl + 48);
}

void SNSoundActionsResult.confidence.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + OBJC_IVAR___SNSoundActionsResult_impl + 48) = a1;
}

double (*SNSoundActionsResult.confidence.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR___SNSoundActionsResult_impl;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = *(_QWORD *)(v1 + v2 + 48);
  return sub_1D4315264;
}

double sub_1D4315264(uint64_t a1)
{
  double result;

  result = *(double *)a1;
  *(_QWORD *)(*(_QWORD *)(a1 + 8) + *(_QWORD *)(a1 + 16) + 48) = *(_QWORD *)a1;
  return result;
}

uint64_t SNSoundActionsResult.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___SNSoundActionsResult_impl + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SNSoundActionsResult.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR___SNSoundActionsResult_impl;
  *(_QWORD *)(v3 + 56) = a1;
  *(_QWORD *)(v3 + 64) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D4315360(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return SNSoundActionsResult.name.setter(v1, v2);
}

uint64_t (*SNSoundActionsResult.name.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR___SNSoundActionsResult_impl + 64);
  *a1 = *(_QWORD *)(v1 + OBJC_IVAR___SNSoundActionsResult_impl + 56);
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return sub_1D43153E4;
}

uint64_t sub_1D43153E4(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
    return sub_1D43161F4();
  sub_1D42CB7B8();
  sub_1D43161F4();
  return swift_bridgeObjectRelease();
}

id sub_1D4315430()
{
  char *v0;
  objc_class *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  objc_super v6;

  v1 = (objc_class *)sub_1D42B7104();
  v2 = MEMORY[0x1E0CA2E40];
  v3 = *(_QWORD *)(MEMORY[0x1E0CA2E40] + 40);
  v4 = &v0[OBJC_IVAR___SNSoundActionsResult_impl];
  *(_QWORD *)v4 = *MEMORY[0x1E0CA2E40];
  *((_QWORD *)v4 + 1) = *(_QWORD *)(v2 + 8);
  *((_OWORD *)v4 + 1) = *(_OWORD *)(v2 + 16);
  *((_QWORD *)v4 + 4) = *(_QWORD *)(v2 + 32);
  *((_QWORD *)v4 + 5) = v3;
  *((_QWORD *)v4 + 6) = 0;
  *((_QWORD *)v4 + 7) = 0;
  *((_QWORD *)v4 + 8) = 0xE000000000000000;
  v6.receiver = v0;
  v6.super_class = v1;
  return objc_msgSendSuper2(&v6, sel_init);
}

id sub_1D43154C4()
{
  uint64_t v0;
  objc_class *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  objc_super v9;

  v2 = (char *)sub_1D42B7238();
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 64);
  v7 = &v2[OBJC_IVAR___SNSoundActionsResult_impl];
  *(_QWORD *)v7 = *(_QWORD *)v0;
  *((_QWORD *)v7 + 1) = *(_QWORD *)(v0 + 8);
  *((_OWORD *)v7 + 1) = *(_OWORD *)(v0 + 16);
  *((_QWORD *)v7 + 4) = *(_QWORD *)(v0 + 32);
  *((_QWORD *)v7 + 5) = v3;
  *((_QWORD *)v7 + 6) = v4;
  *((_QWORD *)v7 + 7) = v5;
  *((_QWORD *)v7 + 8) = v6;
  v9.receiver = v2;
  v9.super_class = v1;
  return objc_msgSendSuper2(&v9, sel_init);
}

void SNSoundActionsResult.copy(with:)(_QWORD *a1@<X8>)
{
  uint64_t v2;
  id v3;

  v2 = sub_1D42B7104();
  sub_1D43161D4(OBJC_IVAR___SNSoundActionsResult_impl);
  sub_1D4316184();
  swift_bridgeObjectRetain();
  v3 = sub_1D4316200();
  a1[3] = v2;
  *a1 = v3;
  sub_1D42CB708();
}

uint64_t SNSoundActionsResult.hash.getter()
{
  sub_1D43161D4(OBJC_IVAR___SNSoundActionsResult_impl);
  sub_1D4316184();
  return sub_1D4314BE0();
}

uint64_t SNSoundActionsResult.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  char *v26;
  _QWORD v27[2];
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD v31[2];
  __int128 v32;
  uint64_t v33;

  sub_1D42B7104();
  sub_1D42B28B4(a1, (uint64_t)&v32);
  if (v33)
  {
    sub_1D42B293C(&v32, v31);
    sub_1D42B294C((uint64_t)v31, (uint64_t)v27);
    v3 = swift_dynamicCast();
    if ((_DWORD)v3)
    {
      v11 = v26;
      if (v26)
      {
        v12 = v1 + OBJC_IVAR___SNSoundActionsResult_impl;
        v13 = *(_QWORD *)(v1 + OBJC_IVAR___SNSoundActionsResult_impl);
        v14 = *(_QWORD *)(v1 + OBJC_IVAR___SNSoundActionsResult_impl + 40);
        v15 = *(double *)(v1 + OBJC_IVAR___SNSoundActionsResult_impl + 48);
        v16 = *(_QWORD *)(v1 + OBJC_IVAR___SNSoundActionsResult_impl + 56);
        v17 = *(_QWORD *)(v1 + OBJC_IVAR___SNSoundActionsResult_impl + 64);
        v18 = *(_QWORD *)&v26[OBJC_IVAR___SNSoundActionsResult_impl];
        v19 = *(_QWORD *)&v26[OBJC_IVAR___SNSoundActionsResult_impl + 40];
        v20 = *(double *)&v26[OBJC_IVAR___SNSoundActionsResult_impl + 48];
        v21 = *(_QWORD *)&v26[OBJC_IVAR___SNSoundActionsResult_impl + 56];
        v22 = *(_QWORD *)&v26[OBJC_IVAR___SNSoundActionsResult_impl + 64];
        v27[0] = v13;
        v27[1] = *(_QWORD *)(v12 + 8);
        v28 = *(_OWORD *)(v12 + 16);
        v29 = *(_QWORD *)(v12 + 32);
        v30 = v14;
        if (sub_1D42D83FC(v3, v4, v5, v6, v7, v8, v9, v10, v18, *(_QWORD *)&v26[OBJC_IVAR___SNSoundActionsResult_impl + 8], *(_QWORD *)&v26[OBJC_IVAR___SNSoundActionsResult_impl + 16], *(_QWORD *)&v26[OBJC_IVAR___SNSoundActionsResult_impl + 24], *(_QWORD *)&v26[OBJC_IVAR___SNSoundActionsResult_impl + 32], v19, v13)&& v15 == v20)
        {
          if (v16 == v21 && v17 == v22)
          {

            v24 = 1;
          }
          else
          {
            sub_1D43161AC();
            v24 = sub_1D451B820();

          }
          goto LABEL_14;
        }

      }
    }
    v24 = 0;
LABEL_14:
    sub_1D42B5400((uint64_t)v31);
    return v24 & 1;
  }
  v24 = 0;
  return v24 & 1;
}

id SNSoundActionsResult.__allocating_init(coder:)()
{
  void *v0;

  sub_1D42B7238();
  return SNSoundActionsResult.init(coder:)(v0);
}

id SNSoundActionsResult.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  id v4;

  v3 = v1;
  sub_1D42B15F4();
  swift_getObjectType();

  v4 = sub_1D4316200();
  sub_1D43161E8();
  return v4;
}

Swift::Void __swiftcall SNSoundActionsResult.encode(with:)(NSCoder with)
{
  uint64_t v1;
  _BYTE __dst[72];

  memcpy(__dst, (const void *)(v1 + OBJC_IVAR___SNSoundActionsResult_impl), sizeof(__dst));
  sub_1D42B6100((uint64_t)__dst);
  sub_1D42AF81C(__dst, 1819307369, 0xE400000000000000, with.super.isa);
  sub_1D4315CB0((uint64_t)__dst);
  sub_1D42CB708();
}

uint64_t static SNSoundActionsResult.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t SNSoundActionsResult.description.getter()
{
  void *v0;
  objc_class *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  _QWORD v11[6];
  objc_super v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = (objc_class *)sub_1D42B7104();
  v15 = 0;
  v16 = 0xE000000000000000;
  sub_1D451B400();
  v13 = 0;
  v14 = 0xE000000000000000;
  v12.receiver = v0;
  v12.super_class = v1;
  v2 = objc_msgSendSuper2(&v12, sel_description);
  sub_1D451A6EC();
  sub_1D42B722C();
  sub_1D42B7190();
  sub_1D42CB208();
  sub_1D43161C4();
  swift_bridgeObjectRetain();
  sub_1D42B7190();
  sub_1D42CB208();
  sub_1D451A794();
  sub_1D451ABD8();
  sub_1D43161C4();
  SNSoundActionsResult.timeRange.getter((uint64_t)&v15);
  v3 = v15;
  v4 = v17;
  v5 = v18;
  v6 = v20;
  v7 = (void *)objc_opt_self();
  v11[0] = v3;
  v11[1] = v16;
  v11[2] = v4;
  v11[3] = v5;
  v11[4] = v19;
  v11[5] = v6;
  v8 = objc_msgSend(v7, sel_valueWithCMTimeRange_, v11);
  v9 = objc_msgSend(v8, sel_description);
  sub_1D451A6EC();
  sub_1D42B722C();
  sub_1D42B7190();

  sub_1D42CB208();
  return v13;
}

id SNSoundActionsResult.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_1D42B7104();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D4315CB0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1D4315CD8(uint64_t a1@<X8>)
{
  SNSoundActionsResult.timeRange.getter(a1);
  sub_1D42B6E24();
}

void sub_1D4315CF4(uint64_t a1)
{
  SNSoundActionsResult.timeRange.setter(a1);
  sub_1D42B6E24();
}

void sub_1D4315D10(double *a1@<X8>)
{
  *a1 = SNSoundActionsResult.confidence.getter();
  sub_1D42B6E24();
}

void sub_1D4315D34(double *a1)
{
  SNSoundActionsResult.confidence.setter(*a1);
  sub_1D42B6E24();
}

void sub_1D4315D54(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = SNSoundActionsResult.name.getter();
  a1[1] = v2;
  sub_1D42B6E24();
}

uint64_t type metadata accessor for SNSoundActionsResult()
{
  return objc_opt_self();
}

uint64_t method lookup function for SNSoundActionsResult()
{
  return swift_lookUpClassMethod();
}

uint64_t destroy for SoundActionsResult()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SoundActionsResult(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  __int128 v4;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SoundActionsResult(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for SoundActionsResult(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x48uLL);
}

uint64_t assignWithTake for SoundActionsResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v3 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SoundActionsResult(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 72))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 64);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SoundActionsResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 64) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SoundActionsResult()
{
  return &type metadata for SoundActionsResult;
}

unint64_t sub_1D4315F80()
{
  unint64_t result;

  result = qword_1EFE4B548;
  if (!qword_1EFE4B548)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4529CF4, &type metadata for SoundActionsResult);
    atomic_store(result, (unint64_t *)&qword_1EFE4B548);
  }
  return result;
}

unint64_t sub_1D4315FBC()
{
  unint64_t result;

  result = qword_1EFE4B558;
  if (!qword_1EFE4B558)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4529E70, &type metadata for SoundActionsResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4B558);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SoundActionsResult.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D4316044 + 4 * byte_1D4529C95[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D4316078 + 4 * byte_1D4529C90[v4]))();
}

uint64_t sub_1D4316078(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4316080(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D4316088);
  return result;
}

uint64_t sub_1D4316094(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D431609CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D43160A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43160A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SoundActionsResult.CodingKeys()
{
  return &type metadata for SoundActionsResult.CodingKeys;
}

unint64_t sub_1D43160C8()
{
  unint64_t result;

  result = qword_1EFE4B578;
  if (!qword_1EFE4B578)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4529E48, &type metadata for SoundActionsResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4B578);
  }
  return result;
}

unint64_t sub_1D4316108()
{
  unint64_t result;

  result = qword_1EFE4B580;
  if (!qword_1EFE4B580)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4529DB8, &type metadata for SoundActionsResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4B580);
  }
  return result;
}

unint64_t sub_1D4316148()
{
  unint64_t result;

  result = qword_1EFE4B588;
  if (!qword_1EFE4B588)
  {
    result = MEMORY[0x1D825E41C](&unk_1D4529DE0, &type metadata for SoundActionsResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFE4B588);
  }
  return result;
}

uint64_t sub_1D43161AC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D43161C4()
{
  return sub_1D451A794();
}

double sub_1D43161D4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(double *)(v1 + a1 + 48);
}

uint64_t sub_1D43161E8()
{
  return swift_deallocPartialClassInstance();
}

uint64_t sub_1D43161F4()
{
  uint64_t v0;
  uint64_t v1;

  return SNSoundActionsResult.name.setter(v1, v0);
}

id sub_1D4316200()
{
  return sub_1D43154C4();
}

uint64_t storeEnumTagSinglePayload for RuntimeFeatureFlags.SoundAnalysis(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D431624C + 4 * byte_1D4529EC0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D431626C + 4 * byte_1D4529EC5[v4]))();
}

_BYTE *sub_1D431624C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D431626C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D4316274(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D431627C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D4316284(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D431628C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for RuntimeFeatureFlags.SoundAnalysis()
{
  return &type metadata for RuntimeFeatureFlags.SoundAnalysis;
}

unint64_t sub_1D43162AC()
{
  unint64_t result;

  result = qword_1EFE4B590[0];
  if (!qword_1EFE4B590[0])
  {
    result = MEMORY[0x1D825E41C](&unk_1D4529F34, &type metadata for RuntimeFeatureFlags.SoundAnalysis);
    atomic_store(result, qword_1EFE4B590);
  }
  return result;
}

const char *sub_1D43162E8()
{
  return "SoundAnalysis";
}

const char *sub_1D43162FC()
{
  return "systemCombinePipes";
}

uint64_t sub_1D4316310()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1D431635C(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1D4316398(a1);
  return v2;
}

uint64_t sub_1D4316398(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  *(_QWORD *)(v1 + 16) = a1;
  swift_unknownObjectRetain();
  sub_1D44728C8();
  v3 = sub_1D451A0EC();
  v4 = MEMORY[0x1D825E41C](MEMORY[0x1E0C95AA0], v3);
  v6 = type metadata accessor for SubscriptionSerializer(0, v3, v4, v5);
  MEMORY[0x1D825E41C](&unk_1D4537AC0, v6);
  v7 = sub_1D451A2E4();
  swift_release();
  swift_unknownObjectRelease();
  *(_QWORD *)(v2 + 24) = v7;
  return v2;
}

uint64_t sub_1D4316474(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD))
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(*(_QWORD *)v2 + 80), *(_QWORD *)(*(_QWORD *)v2 + 88));
}

uint64_t sub_1D43164A0()
{
  return sub_1D451A29C();
}

uint64_t sub_1D43164C8()
{
  sub_1D4316668();
  sub_1D4316668();
  return sub_1D451A1C4();
}

uint64_t sub_1D4316550()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_1D4316574()
{
  sub_1D4316550();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SharedSubject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D42B8D20(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SharedSubject);
}

uint64_t sub_1D43165A0()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1D43165C0(uint64_t a1)
{
  return sub_1D4316474(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C96120]);
}

uint64_t sub_1D43165DC(uint64_t a1)
{
  return sub_1D4316474(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C96110]);
}

uint64_t sub_1D43165FC()
{
  return sub_1D43164C8();
}

void sub_1D431661C()
{
  JUMPOUT(0x1D825E41CLL);
}

uint64_t sub_1D431662C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for SharedSubject(0, a1, a2, a4);
  v4 = swift_unknownObjectRetain();
  return sub_1D431635C(v4);
}

uint64_t sub_1D4316668()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1D431667C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return sub_1D4316834(*(_QWORD *)(v5 + OBJC_IVAR____TtC13SoundAnalysis15XPCProxyXPCHost_hosted), *(_QWORD *)(v5 + OBJC_IVAR____TtC13SoundAnalysis15XPCProxyXPCHost_hosted + 8), *(_QWORD *)(v5 + OBJC_IVAR____TtC13SoundAnalysis15XPCProxyXPCHost_hosted + 16), *(_QWORD *)(v5 + OBJC_IVAR____TtC13SoundAnalysis15XPCProxyXPCHost_hosted + 24), a1, a2, a3, a4, a5);
}

void sub_1D4316794(char a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v10;
  uint64_t v11;
  id v12;

  if (a3 >> 60 != 15)
  {
    v10 = (void *)sub_1D4519C3C();
    if (a5)
      goto LABEL_3;
LABEL_5:
    v11 = 0;
    goto LABEL_6;
  }
  v10 = 0;
  if (!a5)
    goto LABEL_5;
LABEL_3:
  v11 = sub_1D4519A98();
LABEL_6:
  v12 = (id)v11;
  (*(void (**)(uint64_t, _QWORD, void *, uint64_t))(a6 + 16))(a6, a1 & 1, v10, a4);

}

uint64_t sub_1D4316834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v24 = a8;
  v16 = sub_1D42B28FC(&qword_1EFE4DC70);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1D451AAC4();
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)v18, 1, 1, v19);
  v20 = (_QWORD *)sub_1D42B6F40();
  v20[2] = 0;
  v20[3] = 0;
  v20[4] = a7;
  v20[5] = a1;
  v20[6] = a2;
  v20[7] = a3;
  v20[8] = a4;
  v20[9] = a5;
  v21 = v24;
  v20[10] = a6;
  v20[11] = v21;
  v20[12] = a9;
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  sub_1D42E2EE8(a5, a6);
  sub_1D42B8F24();
  sub_1D444D358();
  return swift_release();
}

void sub_1D431695C()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_1D4316994()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for XPCProxyXPCHost()
{
  return objc_opt_self();
}

void type metadata accessor for XPCConnectionState()
{
  sub_1D42CB35C();
}

uint64_t sub_1D4316A28()
{
  swift_release();
  return swift_release();
}

uint64_t sub_1D4316A50(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_1D4316A98(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1D4316AF4(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

void type metadata accessor for XPCProxy()
{
  sub_1D42CB35C();
}

id sub_1D4316B44()
{
  id v0;
  id result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_1EFEAA620);
  objc_msgSend(v0, sel_setInterface_forSelector_argumentIndex_ofReply_, v0, sel_xpcUnsafeSendMessageWithData_proxy_completionHandler_, 1, 0);
  result = objc_msgSend(v0, sel_setInterface_forSelector_argumentIndex_ofReply_, v0, sel_xpcUnsafeSendMessageWithData_proxy_completionHandler_, 2, 1);
  qword_1EFEA7768 = (uint64_t)v0;
  return result;
}

uint64_t sub_1D4316BDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  sub_1D42E39FC();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  *(_QWORD *)(v0 + 64) = v9;
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v10;
  *v10 = v0;
  v10[1] = sub_1D4316C5C;
  return sub_1D4316CA8(v0 + 16, v6, v8, v4, v2);
}

uint64_t sub_1D4316C5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;

  sub_1D42E3E3C();
  v3 = *v2;
  sub_1D430C44C(v4);
  if (!v1)
  {
    v5 = *(_OWORD **)(v0 + 64);
    v6 = *(_OWORD *)(v0 + 16);
    v7 = *(_OWORD *)(v0 + 48);
    v5[1] = *(_OWORD *)(v0 + 32);
    v5[2] = v7;
    *v5 = v6;
  }
  return sub_1D42E39E4(*(uint64_t (**)(void))(v3 + 8));
}

uint64_t sub_1D4316CA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[23] = a4;
  v5[24] = a5;
  v5[21] = a2;
  v5[22] = a3;
  v5[20] = a1;
  sub_1D42B8EC8();
  return swift_task_switch();
}

uint64_t sub_1D4316CCC()
{
  objc_super *v0;
  uint64_t receiver;
  uint64_t v2;
  void *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_class *v9;
  char *v10;
  uint64_t *v11;
  id v12;
  id v13;
  Class super_class;
  Class v15;
  objc_class *v16;
  void *v17;
  _QWORD *v18;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  receiver = (uint64_t)v0[11].receiver;
  sub_1D42B28FC(&qword_1EFE4B630);
  sub_1D42B6F40();
  v2 = sub_1D4319258();
  v0[12].super_class = (Class)v2;
  sub_1D431AC40(receiver, (uint64_t)&v0[8], (uint64_t *)&unk_1EFE4E130);
  sub_1D431AC40((uint64_t)&v0[8], (uint64_t)&v0[7], (uint64_t *)&unk_1EFE4E130);
  if ((unint64_t)v0[7].super_class >> 60 == 15)
    v3 = 0;
  else
    v3 = (void *)sub_1D4519C3C();
  v4 = v0[11].receiver;
  v5 = v4[2];
  if (v5)
  {
    v7 = v4[4];
    v6 = v4[5];
    v8 = v4[3];
    v9 = (objc_class *)type metadata accessor for XPCProxyXPCHost();
    v10 = (char *)objc_allocWithZone(v9);
    v11 = (uint64_t *)&v10[OBJC_IVAR____TtC13SoundAnalysis15XPCProxyXPCHost_hosted];
    *v11 = v5;
    v11[1] = v8;
    v11[2] = v7;
    v11[3] = v6;
    sub_1D431B404();
    sub_1D431B404();
    v0[9].receiver = v10;
    v0[9].super_class = v9;
    swift_retain();
    sub_1D42EA340();
    v12 = objc_msgSendSuper2(v0 + 9, sel_init);
    sub_1D42EA1BC();
    swift_release();
    sub_1D42B8CF0(v5);
  }
  else
  {
    v12 = 0;
  }
  super_class = v0[11].super_class;
  v13 = v0[12].receiver;
  v15 = v0[10].super_class;
  v16 = (objc_class *)sub_1D42B6F40();
  *((_QWORD *)v16 + 2) = super_class;
  *((_QWORD *)v16 + 3) = v13;
  *((_QWORD *)v16 + 4) = v2;
  v0[3].receiver = sub_1D4319320;
  v0[3].super_class = v16;
  v0[1].receiver = (id)MEMORY[0x1E0C809B0];
  v0[1].super_class = (Class)1107296256;
  v0[2].receiver = sub_1D43177EC;
  v0[2].super_class = (Class)&unk_1E97B3478;
  v17 = _Block_copy(&v0[1]);
  sub_1D42EA340();
  sub_1D42BE934();
  swift_release();
  -[objc_class xpcUnsafeSendMessageWithData:proxy:completionHandler:](v15, sel_xpcUnsafeSendMessageWithData_proxy_completionHandler_, v3, v12, v17);

  _Block_release(v17);
  swift_unknownObjectRelease();
  v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EFE4B648 + dword_1EFE4B648);
  sub_1D42BE934();
  v18 = (_QWORD *)swift_task_alloc();
  v0[13].receiver = v18;
  *v18 = v0;
  v18[1] = sub_1D4316F20;
  return v20((uint64_t)&v0[4], (uint64_t)v0[11].super_class, (uint64_t)v0[12].receiver, (uint64_t)&unk_1EFE4B640, v2);
}

uint64_t sub_1D4316F20()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  sub_1D42E3E3C();
  *v3 = *v2;
  *(_QWORD *)(v0 + 216) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_release();
  sub_1D42B8EC8();
  return sub_1D431B32C();
}

uint64_t sub_1D4316F78()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = v0[10];
  if ((unint64_t)(v1 - 1) >= 2)
  {
    v3 = v0[8];
    v4 = v0[9];
    v5 = v0[11];
    v6 = v0[12];
    v7 = v0[13];
    v8 = (_QWORD *)v0[20];
    sub_1D42B8F48();
    *v8 = v3;
    v8[1] = v4;
    v8[2] = v1;
    v8[3] = v5;
    v8[4] = v6;
    v8[5] = v7;
    v2 = (uint64_t (*)(void))sub_1D42E3DD0();
  }
  else
  {
    sub_1D43193C4();
    swift_allocError();
    swift_willThrow();
    sub_1D42B8F48();
    v2 = (uint64_t (*)(void))v0[1];
  }
  return v2();
}

uint64_t sub_1D431702C()
{
  uint64_t v0;

  swift_release_n();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1D431705C(char a1, uint64_t a2, unint64_t a3, uint64_t a4, id a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  char v21;

  if ((a1 & 1) != 0)
  {
    if (a4)
    {
      v12 = (_QWORD *)swift_allocObject();
      v12[2] = a4;
      v12[3] = a6;
      v12[4] = a7;
      swift_retain_n();
      v13 = &unk_1EFE4A130;
    }
    else
    {
      v13 = 0;
      v12 = 0;
      a6 = 0;
      a7 = 0;
    }
    v17 = a2;
    *(_QWORD *)&v18 = a3;
    *((_QWORD *)&v18 + 1) = v13;
    *(_QWORD *)&v19 = v12;
    *((_QWORD *)&v19 + 1) = a6;
    v20 = a7;
    v21 = 0;
    swift_unknownObjectRetain();
    sub_1D42E2EE8(a2, a3);
    sub_1D42E2EE8(a2, a3);
    sub_1D42B7FE4((uint64_t)v13);
    sub_1D4317274((uint64_t)&v17);
    sub_1D42B8CDC(a2, a3);
    sub_1D42B8CF0((uint64_t)v13);
    sub_1D42B8CDC(a2, a3);
    sub_1D42B8CF0((uint64_t)v13);
  }
  else
  {
    if (a5)
    {
      v14 = a5;
    }
    else
    {
      type metadata accessor for SNError();
      v14 = sub_1D43EC59C(0xD000000000000017, 0x80000001D4551120, 1, 0, 0x206E776F6E6B6E75, 0xED0000726F727265);
      a5 = 0;
    }
    v17 = (uint64_t)v14;
    v18 = 0u;
    v19 = 0u;
    v20 = 0;
    v21 = 1;
    v15 = a5;
    v16 = v14;
    sub_1D4317274((uint64_t)&v17);

  }
}

void sub_1D4317274(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  os_unfair_lock_s *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t i;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  void (*v34)(_QWORD *);
  char v35;
  uint64_t v36;
  os_unfair_lock_t lock;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[6];
  char v43;
  _QWORD v44[6];
  char v45;
  uint64_t v46;

  sub_1D431AC40(a1, (uint64_t)v44, &qword_1EFE4B720);
  v3 = v44[0];
  v4 = v44[1];
  v5 = v44[2];
  v6 = v44[3];
  v7 = v44[4];
  v8 = v44[5];
  v9 = v45;
  v10 = *(os_unfair_lock_s **)(*(_QWORD *)(v1 + 16) + 16);
  swift_retain();
  os_unfair_lock_lock(v10);
  if ((*(_BYTE *)(v1 + 73) & 1) != 0)
  {
    sub_1D42B28FC(&qword_1EFE4B728);
    sub_1D431AEF8(&qword_1EFE4B730, &qword_1EFE4B728);
    swift_allocError();
    swift_willThrow();
    os_unfair_lock_unlock(v10);
    swift_release();
    return;
  }
  v12 = *(_QWORD *)(v1 + 56);
  v11 = *(_QWORD *)(v1 + 64);
  v13 = *(_QWORD *)(v1 + 40);
  v14 = *(_QWORD *)(v1 + 48);
  v36 = v13;
  v15 = v5;
  v17 = *(_QWORD *)(v1 + 24);
  v16 = *(_QWORD *)(v1 + 32);
  v46 = v3;
  *(_QWORD *)(v1 + 24) = v3;
  *(_QWORD *)(v1 + 32) = v4;
  v40 = v15;
  v41 = v4;
  *(_QWORD *)(v1 + 40) = v15;
  *(_QWORD *)(v1 + 48) = v6;
  v39 = v6;
  *(_QWORD *)(v1 + 56) = v7;
  *(_QWORD *)(v1 + 64) = v8;
  v18 = *(_BYTE *)(v1 + 72);
  v35 = v18;
  v19 = v9;
  *(_BYTE *)(v1 + 72) = v9;
  *(_BYTE *)(v1 + 73) = 1;
  v20 = v16;
  v21 = v14;
  v22 = v12;
  v23 = v11;
  sub_1D431AA98((void *)v17, v16, v13, v14, v12, v11, v18, 0);
  sub_1D42D65E8(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D431AAA8);
  sub_1D431AAF4((void *)v17, v20, v36, v21, v22, v23, v35, 0);
  os_unfair_lock_unlock(v10);
  swift_release();
  v24 = 0;
  v25 = *(_QWORD *)(v17 + 64);
  lock = (os_unfair_lock_t)(v17 + 64);
  v26 = 1 << *(_BYTE *)(v17 + 32);
  v27 = -1;
  if (v26 < 64)
    v27 = ~(-1 << v26);
  v28 = v27 & v25;
  v38 = (unint64_t)(v26 + 63) >> 6;
  if ((v27 & v25) == 0)
    goto LABEL_7;
LABEL_6:
  v29 = __clz(__rbit64(v28));
  v28 &= v28 - 1;
  for (i = v29 | (v24 << 6); ; i = __clz(__rbit64(v32)) + (v24 << 6))
  {
    v34 = *(void (**)(_QWORD *))(*(_QWORD *)(v17 + 56) + 16 * i);
    v42[0] = v46;
    v42[1] = v41;
    v42[2] = v40;
    v42[3] = v39;
    v42[4] = v7;
    v42[5] = v8;
    v43 = v19;
    sub_1D42D65E8(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D431AAA8);
    swift_retain();
    v34(v42);
    swift_release();
    sub_1D42D65E8(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D431AB04);
    if (v28)
      goto LABEL_6;
LABEL_7:
    v31 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v31 >= v38)
      goto LABEL_25;
    v32 = *(_QWORD *)&lock[2 * v31]._os_unfair_lock_opaque;
    ++v24;
    if (!v32)
    {
      v24 = v31 + 1;
      if (v31 + 1 >= v38)
        goto LABEL_25;
      v32 = *(_QWORD *)&lock[2 * v24]._os_unfair_lock_opaque;
      if (!v32)
      {
        v24 = v31 + 2;
        if (v31 + 2 >= v38)
          goto LABEL_25;
        v32 = *(_QWORD *)&lock[2 * v24]._os_unfair_lock_opaque;
        if (!v32)
        {
          v24 = v31 + 3;
          if (v31 + 3 >= v38)
            goto LABEL_25;
          v32 = *(_QWORD *)&lock[2 * v24]._os_unfair_lock_opaque;
          if (!v32)
            break;
        }
      }
    }
LABEL_22:
    v28 = (v32 - 1) & v32;
  }
  v33 = v31 + 4;
  if (v33 >= v38)
  {
LABEL_25:
    swift_release();
    return;
  }
  v32 = *(_QWORD *)&lock[2 * v33]._os_unfair_lock_opaque;
  if (v32)
  {
    v24 = v33;
    goto LABEL_22;
  }
  while (1)
  {
    v24 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v24 >= v38)
      goto LABEL_25;
    v32 = *(_QWORD *)&lock[2 * v24]._os_unfair_lock_opaque;
    ++v33;
    if (v32)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
}

void sub_1D43175B8(void *a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  id v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  void (*v17)(void **);
  id v18;
  void *v19;

  v3 = *(os_unfair_lock_s **)(*(_QWORD *)(v1 + 16) + 16);
  swift_retain();
  os_unfair_lock_lock(v3);
  if ((*(_BYTE *)(v1 + 32) & 1) != 0)
  {
    sub_1D42B28FC(&qword_1EFE4B768);
    sub_1D431AEF8(&qword_1EFE4B770, &qword_1EFE4B768);
    swift_allocError();
    swift_willThrow();
    os_unfair_lock_unlock(v3);
LABEL_25:
    swift_release();
    return;
  }
  v4 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v1 + 24) = a1;
  *(_BYTE *)(v1 + 32) = 1;
  sub_1D431AE6C((id)v4, 0);
  v5 = a1;
  sub_1D431AE78((id)v4, 0);
  os_unfair_lock_unlock(v3);
  swift_release();
  v6 = 0;
  v7 = v4 + 64;
  v8 = 1 << *(_BYTE *)(v4 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v4 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  if (!v10)
    goto LABEL_7;
LABEL_6:
  v12 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v12 | (v6 << 6); ; i = __clz(__rbit64(v15)) + (v6 << 6))
  {
    v17 = *(void (**)(void **))(*(_QWORD *)(v4 + 56) + 16 * i);
    v19 = a1;
    v18 = a1;
    sub_1D42BE934();
    v17(&v19);
    swift_release();

    if (v10)
      goto LABEL_6;
LABEL_7:
    v14 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v14 >= v11)
      goto LABEL_25;
    v15 = *(_QWORD *)(v7 + 8 * v14);
    ++v6;
    if (!v15)
    {
      v6 = v14 + 1;
      if (v14 + 1 >= v11)
        goto LABEL_25;
      v15 = *(_QWORD *)(v7 + 8 * v6);
      if (!v15)
      {
        v6 = v14 + 2;
        if (v14 + 2 >= v11)
          goto LABEL_25;
        v15 = *(_QWORD *)(v7 + 8 * v6);
        if (!v15)
        {
          v6 = v14 + 3;
          if (v14 + 3 >= v11)
            goto LABEL_25;
          v15 = *(_QWORD *)(v7 + 8 * v6);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v10 = (v15 - 1) & v15;
  }
  v16 = v14 + 4;
  if (v16 >= v11)
    goto LABEL_25;
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
  {
    v6 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v6 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v6 >= v11)
      goto LABEL_25;
    v15 = *(_QWORD *)(v7 + 8 * v6);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
}

uint64_t sub_1D43177EC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  void *v7;
  void (*v9)(uint64_t, void *, unint64_t, uint64_t, void *);
  id v10;
  unint64_t v11;
  unint64_t v12;
  id v13;

  v7 = a3;
  v9 = *(void (**)(uint64_t, void *, unint64_t, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    swift_retain();
    v10 = v7;
    v7 = (void *)sub_1D4519C54();
    v12 = v11;

  }
  else
  {
    swift_retain();
    v12 = 0xF000000000000000;
  }
  swift_unknownObjectRetain();
  v13 = a5;
  v9(a2, v7, v12, a4, a5);

  swift_unknownObjectRelease();
  sub_1D42B8CDC((uint64_t)v7, v12);
  return swift_release();
}

uint64_t sub_1D43178A8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  *(_QWORD *)(v1 + 80) = a1;
  v4 = (uint64_t (*)(uint64_t))((char *)&dword_1EFE4B6F8 + dword_1EFE4B6F8);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 88) = v2;
  *v2 = v1;
  v2[1] = sub_1D4317918;
  return v4(v1 + 16);
}

uint64_t sub_1D4317918()
{
  sub_1D42B8E20();
  sub_1D430C324();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D431794C()
{
  uint64_t v0;
  __int128 v1;
  int v2;
  _QWORD *v3;
  __int128 v4;
  __int128 v5;
  _OWORD *v6;
  uint64_t (*v7)(void);

  v1 = *(_OWORD *)(v0 + 16);
  v2 = *(unsigned __int8 *)(v0 + 64);
  if (v2 == 255)
  {
    v3 = *(_QWORD **)(v0 + 80);
    *v3 = 0;
    v3[1] = 0;
    v3[2] = 1;
    v3[3] = 0;
    v3[4] = 0;
    v3[5] = 0;
  }
  else
  {
    if ((v2 & 1) != 0)
    {
      *(_QWORD *)(v0 + 72) = v1;
      sub_1D42B28FC(&qword_1EFE49BB0);
      swift_willThrowTypedImpl();
      v7 = *(uint64_t (**)(void))(v0 + 8);
      return sub_1D42E39E4(v7);
    }
    v4 = *(_OWORD *)(v0 + 32);
    v5 = *(_OWORD *)(v0 + 48);
    v6 = *(_OWORD **)(v0 + 80);
    *v6 = v1;
    v6[1] = v4;
    v6[2] = v5;
  }
  v7 = (uint64_t (*)(void))sub_1D42E3DD0();
  return sub_1D42E39E4(v7);
}

uint64_t sub_1D43179E0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[9] = a1;
  v2[10] = v1;
  v3 = sub_1D4519D20();
  v2[11] = v3;
  v2[12] = *(_QWORD *)(v3 - 8);
  v2[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1D4317A40()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  sub_1D42E39FC();
  v1 = v0[13];
  v2 = v0[10];
  sub_1D431B498();
  v3 = sub_1D431B3A4();
  v0[14] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = sub_1D431B3A4();
  v0[15] = v4;
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  v0[16] = v5;
  sub_1D42B28FC(&qword_1EFE4B710);
  *v5 = v0;
  v5[1] = sub_1D4317AD8;
  sub_1D431B388();
  return sub_1D431B34C();
}

uint64_t sub_1D4317AD8()
{
  sub_1D42B8E20();
  sub_1D430C324();
  sub_1D42E3E5C();
  sub_1D42E3E54();
  sub_1D42B8EC8();
  return sub_1D431B32C();
}

uint64_t sub_1D4317B18()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  __int128 v3;
  __int128 v4;

  v1 = *(_QWORD *)(v0 + 72);
  sub_1D431B42C(*(_QWORD *)(v0 + 96));
  v2 = *(_BYTE *)(v0 + 64);
  v3 = *(_OWORD *)(v0 + 32);
  v4 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)v1 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 16) = v3;
  *(_OWORD *)(v1 + 32) = v4;
  *(_BYTE *)(v1 + 48) = v2;
  sub_1D42E3E5C();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D4317B6C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[2] = v0;
  v2 = sub_1D42EA2A8();
  v1[3] = v2;
  v1[4] = *(_QWORD *)(v2 - 8);
  v1[5] = sub_1D42F9B80();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4317BB0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  sub_1D42E39FC();
  v1 = v0[5];
  v2 = v0[2];
  sub_1D431B498();
  v3 = sub_1D431B3A4();
  v0[6] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = sub_1D431B3A4();
  v0[7] = v4;
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  v0[8] = v5;
  sub_1D42B28FC(&qword_1EFE4B790);
  *v5 = v0;
  v5[1] = sub_1D4317C48;
  sub_1D431B388();
  return sub_1D431B34C();
}

uint64_t sub_1D4317C48()
{
  sub_1D42B8E20();
  sub_1D430C324();
  sub_1D42E3E5C();
  sub_1D42E3E54();
  sub_1D42B8EC8();
  return sub_1D431B32C();
}

uint64_t sub_1D4317C88()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D431B42C(*(_QWORD *)(v0 + 32));
  v1 = *(unsigned __int8 *)(v0 + 72);
  sub_1D42E3E5C();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1D4317CC8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[3] = v0;
  v2 = sub_1D42EA2A8();
  v1[4] = v2;
  v1[5] = *(_QWORD *)(v2 - 8);
  v1[6] = sub_1D42F9B80();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4317D0C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  sub_1D42E39FC();
  v1 = v0[6];
  v2 = v0[3];
  sub_1D431B498();
  v3 = sub_1D431B3A4();
  v0[7] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = sub_1D431B3A4();
  v0[8] = v4;
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  v0[9] = v5;
  sub_1D42B28FC(&qword_1EFE4B750);
  *v5 = v0;
  v5[1] = sub_1D4317DA4;
  sub_1D431B388();
  return sub_1D431B34C();
}

uint64_t sub_1D4317DA4()
{
  sub_1D42B8E20();
  sub_1D430C324();
  sub_1D42E3E5C();
  sub_1D42E3E54();
  sub_1D42B8EC8();
  return sub_1D431B32C();
}

uint64_t sub_1D4317DE4()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D431B42C(*(_QWORD *)(v0 + 40));
  v1 = *(_QWORD *)(v0 + 16);
  sub_1D42E3E5C();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1D4317E24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[15] = a4;
  v5[16] = a5;
  v5[13] = a2;
  v5[14] = a3;
  v5[12] = a1;
  return swift_task_switch();
}

uint64_t sub_1D4317E44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  __int128 v12;
  uint64_t (*v13)(uint64_t);
  _QWORD *v14;
  uint64_t v15;
  uint64_t (*v17)(uint64_t);
  _QWORD v18[2];

  v2 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  sub_1D42B28FC(&qword_1EFE4B658);
  v5 = sub_1D42B6F40();
  *(_QWORD *)(v0 + 136) = v5;
  *(_OWORD *)(v5 + 16) = xmmword_1D45295F0;
  v6 = sub_1D42B6F40();
  *(_QWORD *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v3;
  *(_QWORD *)(v5 + 32) = &unk_1EFE4B668;
  *(_QWORD *)(v5 + 40) = v6;
  v7 = sub_1D42B6F40();
  *(_QWORD *)(v7 + 16) = v2;
  *(_QWORD *)(v7 + 24) = v1;
  *(_QWORD *)(v5 + 48) = &unk_1EFE4B678;
  *(_QWORD *)(v5 + 56) = v7;
  swift_retain();
  sub_1D42B8F24();
  v8 = sub_1D43185B4(v18, v5);
  v10 = (void (*)(uint64_t))v18[0];
  v9 = v18[1];
  *(_QWORD *)(v0 + 144) = v8;
  *(_QWORD *)(v0 + 152) = v9;
  v11 = sub_1D42B8F24();
  v10(v11);
  sub_1D42CFC14();
  v12 = *(_OWORD *)(v0 + 72);
  *(_OWORD *)(v0 + 160) = v12;
  sub_1D431B470(v12);
  v17 = v13;
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v14;
  *v14 = v0;
  v14[1] = sub_1D4317F64;
  v15 = sub_1D431B480();
  return v17(v15);
}

uint64_t sub_1D4317F64()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_1D42B8E20();
  *v2 = *v1;
  *(_QWORD *)(v3 + 184) = v0;
  swift_task_dealloc();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4317FB4()
{
  uint64_t v0;
  int v1;
  uint64_t (*v2)(uint64_t);
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v6;
  _OWORD *v7;
  uint64_t (*v8)(void);
  __int128 v9;
  __int128 v10;
  uint64_t (*v11)(uint64_t);
  __int128 v12;

  v1 = *(unsigned __int8 *)(v0 + 64);
  if (v1 == 255)
  {
    sub_1D431B470(*(_QWORD *)(v0 + 160));
    v11 = v2;
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 176) = v3;
    *v3 = v0;
    v3[1] = sub_1D4317F64;
    v4 = sub_1D431B480();
    return v11(v4);
  }
  v12 = *(_OWORD *)(v0 + 16);
  v9 = *(_OWORD *)(v0 + 48);
  v10 = *(_OWORD *)(v0 + 32);
  swift_release();
  sub_1D451AB3C();
  sub_1D42B8F48();
  sub_1D42CFC14();
  swift_bridgeObjectRelease();
  if (v1 == 254)
  {
    v6 = *(_QWORD **)(v0 + 96);
    *v6 = 0;
    v6[1] = 0;
    v6[2] = 2;
    v6[3] = 0;
    v6[4] = 0;
    v6[5] = 0;
  }
  else
  {
    if ((v1 & 1) != 0)
    {
      *(_QWORD *)(v0 + 88) = v12;
      sub_1D42B28FC(&qword_1EFE49BB0);
      swift_willThrowTypedImpl();
      v8 = *(uint64_t (**)(void))(v0 + 8);
      return v8();
    }
    v7 = *(_OWORD **)(v0 + 96);
    *v7 = v12;
    v7[1] = v10;
    v7[2] = v9;
  }
  v8 = (uint64_t (*)(void))sub_1D42E3DD0();
  return v8();
}

uint64_t sub_1D4318110()
{
  swift_release();
  return swift_unexpectedError();
}

uint64_t sub_1D4318158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v8 + 184) = v11;
  *(_QWORD *)(v8 + 192) = v12;
  *(_OWORD *)(v8 + 168) = v10;
  *(_QWORD *)(v8 + 152) = a7;
  *(_QWORD *)(v8 + 160) = a8;
  *(_QWORD *)(v8 + 136) = a5;
  *(_QWORD *)(v8 + 144) = a6;
  *(_QWORD *)(v8 + 128) = a4;
  return swift_task_switch();
}

uint64_t sub_1D431818C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  int *v8;
  _QWORD *v9;
  int *v11;

  v1 = v0[16];
  if (v1)
  {
    v2 = v0[19];
    v3 = v0[20];
    v4 = (_QWORD *)sub_1D42B6F40();
    v4[2] = v1;
    v4[3] = v2;
    v4[4] = v3;
    swift_retain_n();
    v5 = &unk_1EFE4B7B8;
  }
  else
  {
    v5 = 0;
    v4 = 0;
    v2 = 0;
    v3 = 0;
  }
  v0[27] = v2;
  v0[28] = v3;
  v0[25] = v5;
  v0[26] = v4;
  v7 = v0[21];
  v6 = v0[22];
  v0[2] = v7;
  v8 = (int *)v0[17];
  v0[3] = v6;
  v0[4] = v5;
  v0[5] = v4;
  v0[6] = v2;
  v0[7] = v3;
  swift_unknownObjectRetain();
  sub_1D42E2EE8(v7, v6);
  sub_1D42B7FE4((uint64_t)v5);
  v11 = (int *)((char *)v8 + *v8);
  v9 = (_QWORD *)swift_task_alloc();
  v0[29] = v9;
  *v9 = v0;
  v9[1] = sub_1D43182AC;
  return ((uint64_t (*)(_QWORD *, _QWORD *))v11)(v0 + 8, v0 + 2);
}

uint64_t sub_1D43182AC()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_1D42B8E20();
  *v2 = *v1;
  *(_QWORD *)(v3 + 240) = v0;
  swift_task_dealloc();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D43182FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  char *v6;
  uint64_t *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 80);
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 96);
    v2 = *(_QWORD *)(v0 + 104);
    v4 = *(_QWORD *)(v0 + 88);
    v5 = (objc_class *)type metadata accessor for XPCProxyXPCHost();
    v6 = (char *)objc_allocWithZone(v5);
    v7 = (uint64_t *)&v6[OBJC_IVAR____TtC13SoundAnalysis15XPCProxyXPCHost_hosted];
    *v7 = v1;
    v7[1] = v4;
    v7[2] = v3;
    v7[3] = v2;
    sub_1D431B418();
    sub_1D431B418();
    *(_QWORD *)(v0 + 112) = v6;
    *(_QWORD *)(v0 + 120) = v5;
    sub_1D42EA340();
    sub_1D42B8F24();
    v8 = objc_msgSendSuper2((objc_super *)(v0 + 112), sel_init);
    sub_1D42CFC14();
    sub_1D42EA1BC();
    sub_1D431B3E4(v1);
  }
  else
  {
    v8 = 0;
  }
  v9 = *(_QWORD *)(v0 + 200);
  v11 = *(_QWORD *)(v0 + 168);
  v10 = *(_QWORD *)(v0 + 176);
  (*(void (**)(uint64_t, _QWORD, _QWORD, id, _QWORD))(v0 + 184))(1, *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), v8, 0);
  sub_1D42B8C84((uint64_t *)(v0 + 64));
  sub_1D431B3E4(v9);
  sub_1D42B8CDC(v11, v10);
  sub_1D431B3E4(v9);
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D4318418()
{
  uint64_t v0;
  void *v1;
  void (*v2)(_QWORD, _QWORD, unint64_t, _QWORD, void *);
  id v3;

  v1 = *(void **)(v0 + 240);
  v2 = *(void (**)(_QWORD, _QWORD, unint64_t, _QWORD, void *))(v0 + 184);
  sub_1D42B8CDC(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176));
  sub_1D431B438();
  sub_1D431B438();
  v3 = v1;
  v2(0, 0, 0xF000000000000000, 0, v1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D43184A8(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 72) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 80) = v3;
  *v3 = v2;
  v3[1] = sub_1D4318510;
  return v5(v2 + 16);
}

uint64_t sub_1D4318510()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_1D42B8E20();
  *v2 = *v1;
  *(_QWORD *)(v3 + 88) = v0;
  swift_task_dealloc();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4318560()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  __int128 v3;
  __int128 v4;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 88) != 0;
  v3 = *(_OWORD *)(v0 + 32);
  v4 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)v1 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 16) = v3;
  *(_OWORD *)(v1 + 32) = v4;
  *(_BYTE *)(v1 + 48) = v2;
  return sub_1D431B360();
}

uint64_t sub_1D4318588()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)v2 = v1;
  *(_OWORD *)(v2 + 8) = 0u;
  *(_OWORD *)(v2 + 24) = 0u;
  *(_QWORD *)(v2 + 40) = 0;
  *(_BYTE *)(v2 + 48) = v1 != 0;
  return sub_1D431B360();
}

uint64_t sub_1D43185B4(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t result;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  _QWORD *v49;
  char *v50;

  v46 = a2;
  v49 = a1;
  v2 = sub_1D42B28FC(&qword_1EFE4DC70);
  MEMORY[0x1E0C80A78](v2);
  v44 = (uint64_t)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1D42B28FC(&qword_1EFE4B680);
  v48 = *(_QWORD *)(v4 - 8);
  v5 = *(_QWORD *)(v48 + 64);
  v6 = MEMORY[0x1E0C80A78](v4);
  v39 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v47 = (char *)&v38 - v7;
  v8 = sub_1D42B28FC(&qword_1EFE4B688);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_1D42B28FC(&qword_1EFE4B690);
  v42 = *(_QWORD *)(v45 - 8);
  v12 = MEMORY[0x1E0C80A78](v45);
  v40 = v13;
  v41 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v38 - v14;
  v16 = sub_1D42B28FC(&qword_1EFE4B698);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v38 - v20;
  _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0((uint64_t)&v38 - v20, 1, 1, v4);
  v50 = v21;
  sub_1D42B28FC(&qword_1EFE4B6A0);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DF07B8], v8);
  v43 = v15;
  sub_1D451AB30();
  sub_1D431A96C((uint64_t)v21, (uint64_t)v19, &qword_1EFE4B698);
  if (_s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0((uint64_t)v19, 1, v4) == 1)
  {
    sub_1D42D7018((uint64_t)v19, &qword_1EFE4B698);
    result = sub_1D451B55C();
    __break(1u);
  }
  else
  {
    v23 = v47;
    v22 = v48;
    v24 = *(void (**)(char *, char *, uint64_t))(v48 + 32);
    v24(v47, v19, v4);
    v25 = sub_1D451AAC4();
    _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v44, 1, 1, v25);
    v26 = v39;
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v39, v23, v4);
    v27 = (*(unsigned __int8 *)(v22 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    v28 = (char *)swift_allocObject();
    *((_QWORD *)v28 + 2) = 0;
    *((_QWORD *)v28 + 3) = 0;
    *((_QWORD *)v28 + 4) = v46;
    v24(&v28[v27], v26, v4);
    swift_bridgeObjectRetain();
    sub_1D444D358();
    v46 = v29;
    v30 = v41;
    v31 = v42;
    v32 = v43;
    v33 = v45;
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v41, v43, v45);
    v34 = (*(unsigned __int8 *)(v31 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    v35 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v31 + 32))(v35 + v34, v30, v33);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v4);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v33);
    v36 = v49;
    *v49 = sub_1D43195D0;
    v36[1] = v35;
    sub_1D42D7018((uint64_t)v21, &qword_1EFE4B698);
    return v46;
  }
  return result;
}

uint64_t sub_1D43189D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D42D7018(a2, &qword_1EFE4B698);
  v4 = sub_1D42B28FC(&qword_1EFE4B680);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(a2, 0, 1, v4);
}

uint64_t sub_1D4318A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch();
}

uint64_t sub_1D4318A5C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = sub_1D431B3A4();
  *(_QWORD *)(v0 + 32) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 16);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v2;
  *v2 = v0;
  v2[1] = sub_1D4318AE4;
  return sub_1D451B478();
}

uint64_t sub_1D4318AE4()
{
  sub_1D42B8E20();
  sub_1D430C324();
  sub_1D42E3E5C();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4318B1C()
{
  uint64_t v0;

  sub_1D42B28FC(&qword_1EFE4B680);
  sub_1D451AAF4();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4318B50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[10] = a3;
  v4[11] = a4;
  v4[9] = a2;
  return swift_task_switch();
}

uint64_t sub_1D4318B6C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void (*v13)(unint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t (*v24)(_QWORD, _QWORD);
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t (*v31)(_QWORD, _QWORD);

  v1 = v0[10];
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v26 = v0 + 2;
    v3 = (__int128 *)(v1 + 32);
    swift_bridgeObjectRetain();
    v27 = v0;
    do
    {
      v28 = v2;
      v4 = v0[11];
      sub_1D42B28FC(&qword_1EFE4DC70);
      v5 = swift_task_alloc();
      v6 = sub_1D451AAC4();
      v30 = *v3;
      _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwst_0(v5, 1, 1, v6);
      v7 = sub_1D42B28FC(&qword_1EFE4B680);
      v8 = *(_QWORD *)(v7 - 8);
      v9 = *(_QWORD *)(v8 + 64);
      v10 = swift_task_alloc();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v10, v4, v7);
      v11 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v12 = swift_allocObject();
      *(_QWORD *)(v12 + 16) = 0;
      *(_QWORD *)(v12 + 24) = 0;
      v13 = *(void (**)(unint64_t, uint64_t, uint64_t))(v8 + 32);
      v14 = v6;
      v13(v12 + v11, v10, v7);
      *(_OWORD *)(v12 + ((v9 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v30;
      swift_task_dealloc();
      v15 = swift_task_alloc();
      v29 = v5;
      sub_1D431A96C(v5, v15, &qword_1EFE4DC70);
      LODWORD(v10) = _s13SoundAnalysis11SNAOPReportV14SuccessPayloadOwet_0(v15, 1, v14);
      swift_retain_n();
      if ((_DWORD)v10 == 1)
      {
        sub_1D42D7018(v15, &qword_1EFE4DC70);
      }
      else
      {
        sub_1D451AAB8();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v15, v14);
      }
      sub_1D42E3E5C();
      if (*(_QWORD *)(v12 + 16))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        v16 = sub_1D451AA70();
        v18 = v17;
        swift_unknownObjectRelease();
      }
      else
      {
        v16 = 0;
        v18 = 0;
      }
      v0 = v27;
      v19 = *(_QWORD *)v27[9];
      v20 = sub_1D42B6F40();
      *(_QWORD *)(v20 + 16) = &unk_1EFE4B6D0;
      *(_QWORD *)(v20 + 24) = v12;
      v21 = (_QWORD *)(v18 | v16);
      if (v18 | v16)
      {
        v21 = v26;
        *v26 = 0;
        v26[1] = 0;
        v27[4] = v16;
        v27[5] = v18;
      }
      v27[6] = 1;
      v27[7] = v21;
      v27[8] = v19;
      swift_task_create();
      sub_1D42EA1BC();
      sub_1D42B8F48();
      sub_1D42D7018(v29, &qword_1EFE4DC70);
      swift_task_dealloc();
      ++v3;
      v2 = v28 - 1;
    }
    while (v28 != 1);
    swift_bridgeObjectRelease();
  }
  if (sub_1D44D982C(2, 18, 0, 0))
  {
    v22 = (_QWORD *)swift_task_alloc();
    v0[12] = v22;
    sub_1D42B28FC(&qword_1EFE4B6E0);
    *v22 = v0;
    v22[1] = sub_1D4318F0C;
    return sub_1D451AA88();
  }
  else
  {
    sub_1D431B470((uint64_t)&dword_1EFE52208);
    v31 = v24;
    v25 = (_QWORD *)swift_task_alloc();
    v0[13] = v25;
    *v25 = v0;
    v25[1] = sub_1D4318F38;
    return v31(0, 0);
  }
}

uint64_t sub_1D4318F0C()
{
  uint64_t v0;

  sub_1D42B8E20();
  sub_1D430C324();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4318F38()
{
  uint64_t v0;

  sub_1D430C324();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1D4318F6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5)
{
  _QWORD *v5;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(_QWORD *);

  v5[9] = a4;
  v7 = sub_1D42B28FC(&qword_1EFE4B6E8);
  v5[10] = v7;
  v5[11] = *(_QWORD *)(v7 - 8);
  v5[12] = swift_task_alloc();
  v10 = (uint64_t (*)(_QWORD *))((char *)a5 + *a5);
  v8 = (_QWORD *)swift_task_alloc();
  v5[13] = v8;
  *v8 = v5;
  v8[1] = sub_1D4319008;
  return v10(v5 + 2);
}

uint64_t sub_1D4319008()
{
  sub_1D430C324();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4319044()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1D42E39FC();
  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 80);
  sub_1D42B28FC(&qword_1EFE4B680);
  sub_1D451AAE8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_1D42E3E54();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D43190B4(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_1D431910C;
  return v5();
}

uint64_t sub_1D431910C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 32) = a1;
  swift_task_dealloc();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D431915C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    *(_QWORD *)v2 = v1;
    *(_OWORD *)(v2 + 8) = 0u;
    *(_OWORD *)(v2 + 24) = 0u;
    *(_QWORD *)(v2 + 40) = 0;
    v3 = 1;
  }
  else
  {
    *(_OWORD *)(v2 + 16) = 0u;
    *(_OWORD *)(v2 + 32) = 0u;
    *(_OWORD *)v2 = 0u;
    v3 = -1;
  }
  *(_BYTE *)(v2 + 48) = v3;
  return sub_1D431B360();
}

uint64_t sub_1D431919C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, int *);

  v7 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EFE4B6F0 + dword_1EFE4B6F0);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1D4319218;
  return v7(a1, a2);
}

uint64_t sub_1D4319218()
{
  sub_1D430C324();
  sub_1D42B8EC8();
  return sub_1D42B8DA8();
}

uint64_t sub_1D4319258()
{
  uint64_t v0;
  uint64_t v1;
  _DWORD *v2;

  type metadata accessor for SafeLock();
  v1 = swift_allocObject();
  v2 = (_DWORD *)swift_slowAlloc();
  *v2 = 0;
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v0 + 16) = v1;
  sub_1D4519D20();
  sub_1D42B28FC(&qword_1EFE4A510);
  sub_1D431AC6C();
  *(_QWORD *)(v0 + 24) = sub_1D451A5E4();
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 58) = 0u;
  return v0;
}

uint64_t sub_1D43192F4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1D4319320(char a1, uint64_t a2, unint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;

  sub_1D431705C(a1, a2, a3, a4, a5, *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24));
}

uint64_t sub_1D431932C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D431933C()
{
  return swift_release();
}

uint64_t sub_1D4319344()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = swift_task_alloc();
  v2 = (_QWORD *)sub_1D42B8F00(v1);
  *v2 = v0;
  v2[1] = sub_1D4319390;
  v3 = sub_1D431B480();
  return sub_1D43178A8(v3);
}

uint64_t sub_1D4319390()
{
  uint64_t v0;

  sub_1D430C324();
  return sub_1D42B8DC0(*(uint64_t (**)(void))(v0 + 8));
}

unint64_t sub_1D43193C4()
{
  unint64_t result;

  result = qword_1EFE4B650;
  if (!qword_1EFE4B650)
  {
    result = MEMORY[0x1D825E41C](&unk_1D452A19C, &unk_1E979F768);
    atomic_store(result, (unint64_t *)&qword_1EFE4B650);
  }
  return result;
}

uint64_t sub_1D4319400()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  int *v4;

  sub_1D431B44C();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)sub_1D42B8F00(v1);
  *v2 = v0;
  v2[1] = sub_1D431B308;
  v3 = sub_1D431B338();
  return sub_1D43190B4(v3, v4);
}

uint64_t sub_1D4319450()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D4319474()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  int *v4;

  sub_1D431B44C();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)sub_1D42B8F00(v1);
  *v2 = v0;
  v2[1] = sub_1D431B308;
  v3 = sub_1D431B338();
  return sub_1D431919C(v3, v4);
}

uint64_t sub_1D43194C4(uint64_t a1)
{
  uint64_t v1;

  return sub_1D43189D4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1D43194CC()
{
  sub_1D42B28FC(&qword_1EFE4B680);
  sub_1D431B468();
  swift_bridgeObjectRelease();
  sub_1D431B458();
  return swift_deallocObject();
}

uint64_t sub_1D431953C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1D42E39FC();
  sub_1D42B28FC(&qword_1EFE4B680);
  v1 = swift_task_alloc();
  v2 = (_QWORD *)sub_1D42B8F00(v1);
  *v2 = v0;
  v2[1] = sub_1D4319390;
  sub_1D431B3F4();
  return sub_1D4318A44(v3, v4, v5, v6, v7);
}

uint64_t sub_1D43195C4()
{
  return sub_1D431AFEC(&qword_1EFE4B690);
}

void sub_1D43195D0(_QWORD *a1@<X8>)
{
  sub_1D42B28FC(&qword_1EFE4B690);
  sub_1D43C1284(a1);
}

uint64_t sub_1D4319610(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = swift_task_alloc();
  v9 = (_QWORD *)sub_1D42B8F00(v8);
  *v9 = v3;
  v9[1] = sub_1D431B308;
  return sub_1D4318B50(a1, a2, v7, v6);
}

uint64_t sub_1D4319678()
{
  return sub_1D4319690(&qword_1EFE4A560);
}

uint64_t sub_1D4319684()
{
  return sub_1D4319690(&qword_1EFE4A528);
}

uint64_t sub_1D4319690(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  _DWORD *v4;

  type metadata accessor for SafeLock();
  v3 = sub_1D42B6F40();
  v4 = (_DWORD *)swift_slowAlloc();
  *v4 = 0;
  *(_QWORD *)(v3 + 16) = v4;
  *(_QWORD *)(v1 + 16) = v3;
  sub_1D42EA2A8();
  sub_1D42B28FC(a1);
  sub_1D431AC6C();
  *(_QWORD *)(v1 + 24) = sub_1D451A5E4();
  *(_BYTE *)(v1 + 32) = 0;
  return v1;
}

uint64_t sub_1D431971C(uint64_t a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t (*v4)(uint64_t);
  uint64_t result;
  _OWORD v6[3];
  char v7;

  v3 = *(os_unfair_lock_s **)(*(_QWORD *)(v1 + 16) + 16);
  swift_retain();
  os_unfair_lock_lock(v3);
  v4 = sub_1D431991C(v1, a1);
  os_unfair_lock_unlock(v3);
  result = swift_release();
  if (v4)
  {
    memset(v6, 0, sizeof(v6));
    v7 = -1;
    swift_retain();
    v4((uint64_t)v6);
    sub_1D42B7F68((uint64_t)v4);
    return sub_1D42B7F68((uint64_t)v4);
  }
  return result;
}

uint64_t sub_1D43197D0(uint64_t a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  void (*v4)();
  uint64_t result;
  char v6[9];

  v3 = *(os_unfair_lock_s **)(*(_QWORD *)(v1 + 16) + 16);
  swift_retain();
  os_unfair_lock_lock(v3);
  v4 = sub_1D4319AAC(v1, a1);
  os_unfair_lock_unlock(v3);
  result = swift_release();
  if (v4)
  {
    v6[0] = 1;
    swift_retain();
    ((void (*)(char *))v4)(v6);
    sub_1D42B7F68((uint64_t)v4);
    return sub_1D42B7F68((uint64_t)v4);
  }
  return result;
}

uint64_t sub_1D4319878(uint64_t a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  void (*v4)();
  uint64_t result;
  uint64_t v6;

  v3 = *(os_unfair_lock_s **)(*(_QWORD *)(v1 + 16) + 16);
  swift_retain();
  os_unfair_lock_lock(v3);
  v4 = sub_1D4319BC0(v1, a1);
  os_unfair_lock_unlock(v3);
  result = swift_release();
  if (v4)
  {
    v6 = 0;
    swift_retain();
    ((void (*)(uint64_t *))v4)(&v6);
    sub_1D42B7F68((uint64_t)v4);
    return sub_1D42B7F68((uint64_t)v4);
  }
  return result;
}

uint64_t (*sub_1D431991C(uint64_t a1, uint64_t a2))(uint64_t a1)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  void *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  void *v29;

  if ((*(_BYTE *)(a1 + 73) & 1) != 0)
    return 0;
  v28 = (_OWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_BYTE *)(a1 + 72);
  v29 = *(void **)(a1 + 24);
  sub_1D431AA98(v29, v9, v8, v7, v6, v5, v10, 0);
  swift_bridgeObjectRetain();
  v11 = sub_1D4364A2C(a2, v29);
  v27 = v12;
  v13 = v10;
  v14 = v11;
  sub_1D431AAF4(v29, v9, v8, v7, v6, v5, v13, 0);
  if (v14)
  {
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = v14;
    *(_QWORD *)(v15 + 24) = v27;
    v16 = sub_1D431AB50;
  }
  else
  {
    v16 = 0;
    v15 = 0;
  }
  sub_1D42E7E78();
  sub_1D42B7F68(v17);
  v18 = *(void **)(a1 + 24);
  v19 = *(_QWORD *)(a1 + 32);
  v20 = *(_QWORD *)(a1 + 40);
  v21 = *(_QWORD *)(a1 + 48);
  v22 = *(_QWORD *)(a1 + 56);
  v23 = *(_QWORD *)(a1 + 64);
  v24 = *(_BYTE *)(a1 + 73);
  *(_QWORD *)(a1 + 24) = v29;
  *v28 = 0u;
  v28[1] = 0u;
  v25 = *(_BYTE *)(a1 + 72);
  *(_OWORD *)((char *)v28 + 26) = 0u;
  sub_1D431AAF4(v18, v19, v20, v21, v22, v23, v25, v24);
  if (!v14)
    return 0;
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = v16;
  *(_QWORD *)(v26 + 24) = v15;
  return sub_1D431AB50;
}

void (*sub_1D4319AAC(uint64_t a1, uint64_t a2))()
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)();
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v14;

  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
    return 0;
  v14 = *(_QWORD *)(a1 + 24);
  sub_1D431AFA0(v14, 0);
  swift_bridgeObjectRetain();
  v4 = sub_1D4364A2C(a2, v14);
  v6 = v5;
  sub_1D431AFAC(v14, 0);
  if (v4)
  {
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v4;
    *(_QWORD *)(v7 + 24) = v6;
    v8 = sub_1D431AFB8;
  }
  else
  {
    v8 = 0;
    v7 = 0;
  }
  sub_1D42E7F70();
  sub_1D42B7F68(v9);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v14;
  *(_BYTE *)(a1 + 32) = 0;
  sub_1D431AFAC(v10, v11);
  if (!v4)
    return 0;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v8;
  *(_QWORD *)(v12 + 24) = v7;
  return sub_1D431AFB8;
}

void (*sub_1D4319BC0(uint64_t a1, uint64_t a2))()
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)();
  uint64_t v9;
  void *v10;
  char v11;
  uint64_t v12;
  void *v14;

  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
    return 0;
  v14 = *(void **)(a1 + 24);
  sub_1D431AE6C(v14, 0);
  swift_bridgeObjectRetain();
  v4 = sub_1D4364A2C(a2, v14);
  v6 = v5;
  sub_1D431AE78(v14, 0);
  if (v4)
  {
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v4;
    *(_QWORD *)(v7 + 24) = v6;
    v8 = sub_1D431AE84;
  }
  else
  {
    v8 = 0;
    v7 = 0;
  }
  sub_1D42E7F84();
  sub_1D42B7F68(v9);
  v10 = *(void **)(a1 + 24);
  v11 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v14;
  *(_BYTE *)(a1 + 32) = 0;
  sub_1D431AE78(v10, v11);
  if (!v4)
    return 0;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v8;
  *(_QWORD *)(v12 + 24) = v7;
  return sub_1D431AE84;
}

uint64_t sub_1D4319CD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1D4319CF0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = sub_1D431B3A4();
  *(_QWORD *)(v0 + 40) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  sub_1D42B28FC(&qword_1EFE4B710);
  *v2 = v0;
  v2[1] = sub_1D4319D88;
  return sub_1D451B7D8();
}

uint64_t sub_1D4319D88()
{
  uint64_t (*v0)(void);

  sub_1D42B8E20();
  sub_1D430C324();
  sub_1D42E3E5C();
  v0 = (uint64_t (*)(void))sub_1D42E3DD0();
  return sub_1D42B8DC0(v0);
}

uint64_t sub_1D4319DB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_1D4319DD0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = sub_1D431B3A4();
  *(_QWORD *)(v0 + 32) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 16);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v2;
  sub_1D42B28FC(&qword_1EFE4B790);
  *v2 = v0;
  v2[1] = sub_1D4319E48;
  sub_1D431B3AC();
  return sub_1D431B3D4();
}

uint64_t sub_1D4319E48()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;

  sub_1D42E3E3C();
  v2 = *v1;
  sub_1D430C44C(v3);
  sub_1D42E3E5C();
  return (*(uint64_t (**)(_QWORD))(v2 + 8))(*(unsigned __int8 *)(v0 + 48));
}

uint64_t sub_1D4319E8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return swift_task_switch();
}

uint64_t sub_1D4319EA4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = sub_1D431B3A4();
  *(_QWORD *)(v0 + 40) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  sub_1D42B28FC(&qword_1EFE4B750);
  *v2 = v0;
  v2[1] = sub_1D4319F1C;
  sub_1D431B3AC();
  return sub_1D431B3D4();
}

uint64_t sub_1D4319F1C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;

  sub_1D42E3E3C();
  v2 = *v1;
  sub_1D430C44C(v3);
  sub_1D42E3E5C();
  return (*(uint64_t (**)(_QWORD))(v2 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1D4319F60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_unfair_lock_s *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;

  v6 = *(os_unfair_lock_s **)(*(_QWORD *)(a2 + 16) + 16);
  swift_retain();
  os_unfair_lock_lock(v6);
  v15 = a3;
  sub_1D431A1DC(a2, a3, a1, (uint64_t)&v16);
  v7 = v16;
  v8 = v17;
  v9 = v18;
  v10 = v19;
  v12 = v20;
  v11 = v21;
  v13 = v22;
  os_unfair_lock_unlock(v6);
  swift_release();
  if (v13 == 255)
  {
    result = sub_1D451AB54();
    if ((result & 1) != 0)
      return sub_1D431971C(v15);
  }
  else
  {
    v16 = v7;
    v17 = v8;
    v18 = v9;
    v19 = v10;
    v20 = v12;
    v21 = v11;
    v22 = v13;
    sub_1D42B28FC(&qword_1EFE4B718);
    return sub_1D451AA7C();
  }
  return result;
}

uint64_t sub_1D431A05C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_unfair_lock_s *v6;
  char v7;
  uint64_t result;

  v6 = *(os_unfair_lock_s **)(*(_QWORD *)(a2 + 16) + 16);
  swift_retain();
  os_unfair_lock_lock(v6);
  v7 = sub_1D431A404(a2, a3, a1);
  os_unfair_lock_unlock(v6);
  swift_release();
  if ((v7 & 1) != 0)
  {
    result = sub_1D451AB54();
    if ((result & 1) != 0)
      return sub_1D43197D0(a3);
  }
  else
  {
    sub_1D42B28FC(&qword_1EFE4B7A0);
    return sub_1D451AA7C();
  }
  return result;
}

uint64_t sub_1D431A128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_unfair_lock_s *v6;
  void *v7;
  uint64_t result;

  v6 = *(os_unfair_lock_s **)(*(_QWORD *)(a2 + 16) + 16);
  swift_retain();
  os_unfair_lock_lock(v6);
  v7 = sub_1D431A5AC(a2, a3, a1);
  os_unfair_lock_unlock(v6);
  swift_release();
  if (v7)
  {
    sub_1D42B28FC(&qword_1EFE4B760);
    return sub_1D451AA7C();
  }
  else
  {
    result = sub_1D451AB54();
    if ((result & 1) != 0)
      return sub_1D4319878(a3);
  }
  return result;
}

void sub_1D431A1DC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  _OWORD *v35;
  char v36;
  uint64_t v37;
  _OWORD *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;

  v39 = a2;
  v40 = a3;
  v7 = sub_1D42B28FC(&qword_1EFE4B718);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v10 = sub_1D4519D20();
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(void **)(a1 + 24);
  if (*(_BYTE *)(a1 + 73) == 1)
  {
    v16 = *(_BYTE *)(a1 + 72);
    v18 = *(_QWORD *)(a1 + 56);
    v17 = *(_QWORD *)(a1 + 64);
    v20 = *(_QWORD *)(a1 + 40);
    v19 = *(_QWORD *)(a1 + 48);
    v21 = *(_QWORD *)(a1 + 32);
    v22 = v16 & 1;
    sub_1D431AAA8(v15, v21, v20, v19, v18, v17, v16 & 1);
  }
  else
  {
    v37 = v11;
    v38 = (_OWORD *)(a1 + 32);
    v23 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    v24 = v39;
    v39 = v12;
    v23(v14, v24, v11);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v40, v7);
    v25 = *(unsigned __int8 *)(v8 + 80);
    v40 = v4;
    v26 = swift_allocObject() + ((v25 + 16) & ~v25);
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v26, (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
    swift_bridgeObjectRetain();
    swift_isUniquelyReferenced_nonNull_native();
    v41 = v15;
    sub_1D42E863C();
    v27 = v41;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v14, v37);
    v28 = *(void **)(a1 + 24);
    v29 = *(_QWORD *)(a1 + 32);
    v30 = *(_QWORD *)(a1 + 40);
    v31 = *(_QWORD *)(a1 + 48);
    v32 = *(_QWORD *)(a1 + 56);
    v33 = *(_QWORD *)(a1 + 64);
    v34 = *(_BYTE *)(a1 + 73);
    *(_QWORD *)(a1 + 24) = v27;
    v35 = v38;
    *v38 = 0u;
    v35[1] = 0u;
    v36 = *(_BYTE *)(a1 + 72);
    *(_OWORD *)((char *)v35 + 26) = 0u;
    sub_1D431AAF4(v28, v29, v30, v31, v32, v33, v36, v34);
    v15 = 0;
    v21 = 0;
    v20 = 0;
    v19 = 0;
    v18 = 0;
    v17 = 0;
    v22 = -1;
  }
  *(_QWORD *)a4 = v15;
  *(_QWORD *)(a4 + 8) = v21;
  *(_QWORD *)(a4 + 16) = v20;
  *(_QWORD *)(a4 + 24) = v19;
  *(_QWORD *)(a4 + 32) = v18;
  *(_QWORD *)(a4 + 40) = v17;
  *(_BYTE *)(a4 + 48) = v22;
}

uint64_t sub_1D431A404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;

  v7 = sub_1D42B28FC(&qword_1EFE4B7A0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v10 = sub_1D4519D20();
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(unsigned __int8 *)(a1 + 32);
  if ((v15 & 1) == 0)
  {
    v27 = v3;
    v16 = *(_QWORD *)(a1 + 24);
    v26 = v15;
    v17 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    v24 = v12;
    v25 = v11;
    v17(v14, a2, v11);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v7);
    v18 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v19 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v19 + v18, (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
    swift_bridgeObjectRetain();
    swift_isUniquelyReferenced_nonNull_native();
    v28 = v16;
    sub_1D42E8738();
    v20 = v28;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v14, v25);
    v21 = *(_QWORD *)(a1 + 24);
    v22 = *(_BYTE *)(a1 + 32);
    *(_QWORD *)(a1 + 24) = v20;
    *(_BYTE *)(a1 + 32) = 0;
    sub_1D431AFAC(v21, v22);
    v15 = v26;
  }
  return v15 ^ 1u;
}

void *sub_1D431A5AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  char v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;

  v26 = a3;
  v6 = sub_1D42B28FC(&qword_1EFE4B760);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = sub_1D4519D20();
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void **)(a1 + 24);
  if (*(_BYTE *)(a1 + 32) == 1)
  {
    v15 = v14;
  }
  else
  {
    v16 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v24 = v11;
    v25 = v10;
    v16(v13, a2, v10);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v26, v6);
    v17 = *(unsigned __int8 *)(v7 + 80);
    v26 = v3;
    v18 = swift_allocObject() + ((v17 + 16) & ~v17);
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v18, (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
    swift_bridgeObjectRetain();
    swift_isUniquelyReferenced_nonNull_native();
    v27 = v14;
    sub_1D42E885C();
    v19 = v27;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v25);
    v20 = *(void **)(a1 + 24);
    v21 = *(_BYTE *)(a1 + 32);
    *(_QWORD *)(a1 + 24) = v19;
    *(_BYTE *)(a1 + 32) = 0;
    sub_1D431AE78(v20, v21);
    return 0;
  }
  return v14;
}

uint64_t sub_1D431A760(uint64_t a1)
{
  _BYTE v3[56];

  sub_1D431AC40(a1, (uint64_t)v3, &qword_1EFE4B710);
  sub_1D431ABEC(a1);
  sub_1D42B28FC(&qword_1EFE4B718);
  return sub_1D451AA7C();
}

uint64_t sub_1D431A7B8()
{
  sub_1D42B28FC(&qword_1EFE4B7A0);
  return sub_1D451AA7C();
}

uint64_t sub_1D431A7FC(void *a1)
{
  id v1;

  v1 = a1;
  sub_1D42B28FC(&qword_1EFE4B760);
  return sub_1D451AA7C();
}

uint64_t sub_1D431A840()
{
  sub_1D42B28FC(&qword_1EFE4B680);
  sub_1D431B468();
  sub_1D431B458();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D431A8C8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;

  sub_1D42B28FC(&qword_1EFE4B680);
  v1 = swift_task_alloc();
  v2 = (_QWORD *)sub_1D42B8F00(v1);
  *v2 = v0;
  v2[1] = sub_1D431B308;
  sub_1D431B3F4();
  return sub_1D4318F6C(v3, v4, v5, v6, v7);
}

void sub_1D431A96C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_1D42E3ED0(a1, a2, a3);
  sub_1D431B48C(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_1D42B6E24();
}

uint64_t sub_1D431A998()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  sub_1D431B44C();
  v1 = sub_1D430C650();
  v2 = (_QWORD *)sub_1D42B8F00(v1);
  *v2 = v0;
  v2[1] = sub_1D431B308;
  v3 = sub_1D431B338();
  return sub_1D430C3D0(v3, v4, v5, v6);
}

uint64_t sub_1D431A9E4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D431B44C();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)sub_1D42B8F00(v1);
  *v2 = v0;
  v2[1] = sub_1D431B308;
  v3 = sub_1D431B338();
  return sub_1D4319CD4(v3, v4, v5);
}

void sub_1D431AA34()
{
  uint64_t v0;

  sub_1D431971C(*(_QWORD *)(v0 + 24));
  sub_1D42B6E24();
}

uint64_t sub_1D431AA54(uint64_t a1, uint64_t (*a2)(_OWORD *))
{
  char v2;
  __int128 v3;
  _OWORD v5[3];
  char v6;

  v2 = *(_BYTE *)(a1 + 48);
  v3 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v3;
  v5[2] = *(_OWORD *)(a1 + 32);
  v6 = v2;
  return a2(v5);
}

id sub_1D431AA98(void *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8)
{
  if ((a8 & 1) != 0)
    return sub_1D431AAA8(a1, a2, a3, a4, a5, a6, a7 & 1);
  else
    return (id)swift_bridgeObjectRetain();
}

id sub_1D431AAA8(void *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if ((a7 & 1) != 0)
    return a1;
  sub_1D42E2EE8((uint64_t)a1, a2);
  return (id)sub_1D42B7FE4(a3);
}

void sub_1D431AAF4(void *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8)
{
  if ((a8 & 1) != 0)
    sub_1D431AB04(a1, a2, a3, a4, a5, a6, a7 & 1);
  else
    swift_bridgeObjectRelease();
}

void sub_1D431AB04(void *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if ((a7 & 1) != 0)
  {

  }
  else
  {
    sub_1D42B8CDC((uint64_t)a1, a2);
    sub_1D42B8CF0(a3);
  }
}

uint64_t sub_1D431AB50(uint64_t a1)
{
  uint64_t v1;

  return sub_1D431AA54(a1, *(uint64_t (**)(_OWORD *))(v1 + 16));
}

uint64_t sub_1D431AB58(uint64_t a1)
{
  uint64_t v1;

  return sub_1D4319F60(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1D431AB60(uint64_t a1)
{
  _BYTE v2[56];

  sub_1D431AC40(a1, (uint64_t)v2, &qword_1EFE4B710);
  return sub_1D431A760((uint64_t)v2);
}

uint64_t sub_1D431ABA8()
{
  return sub_1D431AFEC(&qword_1EFE4B718);
}

uint64_t sub_1D431ABB4()
{
  uint64_t v0;

  sub_1D42B28FC(&qword_1EFE4B718);
  v0 = sub_1D431B368();
  return sub_1D431AB60(v0);
}

uint64_t sub_1D431ABEC(uint64_t a1)
{
  sub_1D431AC24(*(id *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
  return a1;
}

id sub_1D431AC24(id result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  if (a7 != 255)
    return sub_1D431AAA8(result, a2, a3, a4, a5, a6, a7 & 1);
  return result;
}

void sub_1D431AC40(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_1D42E3ED0(a1, a2, a3);
  sub_1D431B48C(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_1D42B6E24();
}

unint64_t sub_1D431AC6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFE4A518;
  if (!qword_1EFE4A518)
  {
    v1 = sub_1D4519D20();
    result = MEMORY[0x1D825E41C](MEMORY[0x1E0CB09C8], v1);
    atomic_store(result, (unint64_t *)&qword_1EFE4A518);
  }
  return result;
}

uint64_t sub_1D431ACAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;

  *(_QWORD *)(v3 + 16) = a1;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v6;
  *v6 = v3;
  v6[1] = sub_1D431AD04;
  return sub_1D4319DB8(a2, a3);
}

uint64_t sub_1D431AD04(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = *v2;
  v7 = *v2;
  v5 = *v2;
  sub_1D430C44C(&v7);
  if (!v1)
    **(_BYTE **)(v4 + 16) = a1 & 1;
  return sub_1D42E3A2C(*(uint64_t (**)(void))(v5 + 8));
}

uint64_t sub_1D431AD54()
{
  return sub_1D431A7B8();
}

uint64_t sub_1D431AD5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;

  *(_QWORD *)(v3 + 16) = a1;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v6;
  *v6 = v3;
  v6[1] = sub_1D431ADB4;
  return sub_1D4319E8C(a2, a3);
}

uint64_t sub_1D431ADB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = *v2;
  v7 = *v2;
  v5 = *v2;
  sub_1D430C44C(&v7);
  if (!v1)
    **(_QWORD **)(v4 + 16) = a1;
  return sub_1D42E3A2C(*(uint64_t (**)(void))(v5 + 8));
}

uint64_t sub_1D431AE00()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  sub_1D431B44C();
  v1 = sub_1D430C650();
  v2 = (_QWORD *)sub_1D42B8F00(v1);
  *v2 = v0;
  v2[1] = sub_1D431B308;
  v3 = sub_1D431B338();
  return sub_1D430C3D0(v3, v4, v5, v6);
}

void sub_1D431AE4C()
{
  uint64_t v0;

  sub_1D4319878(*(_QWORD *)(v0 + 24));
  sub_1D42B6E24();
}

id sub_1D431AE6C(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)swift_bridgeObjectRetain();
}

void sub_1D431AE78(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

void sub_1D431AE84()
{
  void (*v0)(void);

  sub_1D431B4A0();
  v0();
  sub_1D42CB964();
}

uint64_t sub_1D431AEA4(uint64_t a1)
{
  uint64_t v1;

  return sub_1D431A128(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1D431AEAC(void **a1)
{
  return sub_1D431A7FC(*a1);
}

uint64_t sub_1D431AEB4()
{
  return sub_1D431AFEC(&qword_1EFE4B760);
}

uint64_t sub_1D431AEC0()
{
  void **v0;

  sub_1D42B28FC(&qword_1EFE4B760);
  v0 = (void **)sub_1D431B368();
  return sub_1D431AEAC(v0);
}

void sub_1D431AEF8(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = sub_1D42B8B10(a2);
    atomic_store(MEMORY[0x1D825E41C](&unk_1D4545CF8, v3), a1);
  }
  sub_1D42B6E24();
}

uint64_t sub_1D431AF34()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  sub_1D431B44C();
  v1 = sub_1D430C650();
  v2 = (_QWORD *)sub_1D42B8F00(v1);
  *v2 = v0;
  v2[1] = sub_1D431B308;
  v3 = sub_1D431B338();
  return sub_1D430C3D0(v3, v4, v5, v6);
}

void sub_1D431AF80()
{
  uint64_t v0;

  sub_1D43197D0(*(_QWORD *)(v0 + 24));
  sub_1D42B6E24();
}

uint64_t sub_1D431AFA0(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1D431AFAC(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_bridgeObjectRelease();
  return result;
}

void sub_1D431AFB8()
{
  void (*v0)(void);

  sub_1D431B4B4();
  v0();
  sub_1D42CB964();
}

uint64_t sub_1D431AFD8(uint64_t a1)
{
  uint64_t v1;

  return sub_1D431A05C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1D431AFE0()
{
  return sub_1D431AFEC(&qword_1EFE4B7A0);
}

uint64_t sub_1D431AFEC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1D42B28FC(a1);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  return swift_deallocObject();
}

uint64_t sub_1D431B048()
{
  sub_1D42B28FC(&qword_1EFE4B7A0);
  sub_1D431B368();
  return sub_1D431AD54();
}

uint64_t sub_1D431B080()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1D431B0A4(char a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  sub_1D4316794(a1, a2, a3, a4, a5, *(_QWORD *)(v5 + 16));
}

uint64_t sub_1D431B0AC()
{
  uint64_t v0;
  unint64_t v1;

  sub_1D431B468();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  v1 = *(_QWORD *)(v0 + 80);
  if (v1 >> 60 != 15)
    sub_1D42B5420(*(_QWORD *)(v0 + 72), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D431B104()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v0[3];
  v12 = v0[2];
  v3 = v0[4];
  v4 = v0[5];
  v5 = v0[6];
  v6 = v0[7];
  v7 = v0[8];
  v8 = swift_task_alloc();
  v9 = (_QWORD *)sub_1D42B8F00(v8);
  *v9 = v1;
  v9[1] = sub_1D431B308;
  v10 = sub_1D431B480();
  return sub_1D4318158(v10, v12, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1D431B1B8()
{
  sub_1D431B468();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D431B1E0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_1D42E39FC();
  sub_1D42E3AC4();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)sub_1D42B8F00(v1);
  *v2 = v0;
  v2[1] = sub_1D431B308;
  sub_1D431B3F4();
  return sub_1D42E3834();
}

uint64_t sub_1D431B230(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D431B270 + 4 * asc_1D452A0A0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D431B290 + 4 * byte_1D452A0A5[v4]))();
}

_BYTE *sub_1D431B270(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D431B290(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D431B298(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D431B2A0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D431B2A8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D431B2B0(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for XPCProxyUtils.DomainError()
{
  sub_1D42CB35C();
}

unint64_t sub_1D431B2CC()
{
  unint64_t result;

  result = qword_1EFE4B7C0[0];
  if (!qword_1EFE4B7C0[0])
  {
    result = MEMORY[0x1D825E41C](&unk_1D452A174, &unk_1E979F768);
    atomic_store(result, qword_1EFE4B7C0);
  }
  return result;
}

uint64_t sub_1D431B32C()
{
  return swift_task_switch();
}

uint64_t sub_1D431B338()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D431B34C()
{
  return sub_1D451B82C();
}

uint64_t sub_1D431B360()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D431B368()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D431B388()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D431B3A4()
{
  return swift_task_alloc();
}

uint64_t sub_1D431B3AC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D431B3D4()
{
  return sub_1D451B7D8();
}

uint64_t sub_1D431B3E4(uint64_t result)
{
  return sub_1D42B8CF0(result);
}

uint64_t sub_1D431B404()
{
  uint64_t v0;

  return sub_1D42B7FE4(v0);
}

uint64_t sub_1D431B418()
{
  uint64_t v0;

  return sub_1D42B7FE4(v0);
}

uint64_t sub_1D431B42C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t sub_1D431B438()
{
  uint64_t v0;

  return sub_1D42B8CF0(v0);
}

uint64_t sub_1D431B458()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1 + v3, v0);
}

uint64_t sub_1D431B468()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1D431B470@<X0>(uint64_t a1@<X8>)
{
  return *(unsigned int *)(a1 + 4);
}

uint64_t sub_1D431B480()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D431B48C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_1D431B498()
{
  return sub_1D4519D14();
}

uint64_t sub_1D431B4C8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1D431B558(uint64_t a1, const void *a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  sub_1D431B5A4(a1, a2);
  return v4;
}

uint64_t *sub_1D431B5A4(uint64_t a1, const void *a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _DWORD *v9;
  _OWORD v11[2];
  uint64_t v12;

  v5 = *v2;
  *((_OWORD *)v2 + 2) = 0u;
  v2[6] = 0;
  *((_OWORD *)v2 + 1) = 0u;
  v12 = 0;
  memset(v11, 0, sizeof(v11));
  swift_beginAccess();
  sub_1D431CC80((uint64_t)v11, (uint64_t)(v2 + 2));
  swift_endAccess();
  v6 = *(_QWORD *)(v5 + 88);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))((uint64_t)v2 + *(_QWORD *)(*v2 + 128), a1, v6);
  type metadata accessor for SafeLock();
  v8 = swift_allocObject();
  v9 = (_DWORD *)swift_slowAlloc();
  *v9 = 0;
  *(_QWORD *)(v8 + 16) = v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  v2[7] = v8;
  sub_1D431E028((char *)v2 + *(_QWORD *)(*v2 + 136), a2);
  return v2;
}

uint64_t sub_1D431B6A0(uint64_t a1)
{
  uint64_t **v1;
  uint64_t **v2;
  uint64_t *v4;
  os_unfair_lock_s *v5;
  char *v6;
  void (*v7)(_QWORD *);
  void (*v8)(_QWORD *);
  uint64_t (*v9)();
  _QWORD v11[6];

  v2 = v1;
  v4 = *v1;
  v5 = (os_unfair_lock_s *)v1[7][2];
  swift_retain();
  os_unfair_lock_lock(v5);
  sub_1D431B7AC((uint64_t)v1, a1);
  os_unfair_lock_unlock(v5);
  swift_release();
  v6 = (char *)v2 + (*v2)[17];
  v7 = *(void (**)(_QWORD *))v6;
  v8 = (void (*)(_QWORD *))*((_QWORD *)v6 + 2);
  v9 = sub_1D431B814((uint64_t)v2 + (*v2)[16], v4[10], v4[11], v4[12], v4[13]);
  v11[3] = v4;
  v11[4] = MEMORY[0x1D825E41C](&unk_1D452A300, v4);
  v11[0] = v1;
  swift_retain();
  if (v7)
    v7(v11);
  ((void (*)(_QWORD *))v9)(v11);
  if (v8)
    v8(v11);
  sub_1D42B5400((uint64_t)v11);
  return swift_release();
}

uint64_t sub_1D431B7AC(uint64_t a1, uint64_t a2)
{
  _BYTE v4[40];

  sub_1D42E2D8C(a2, (uint64_t)v4);
  swift_beginAccess();
  sub_1D431CC80((uint64_t)v4, a1 + 16);
  return swift_endAccess();
}

uint64_t (*sub_1D431B814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  char *v13;
  uint64_t v15;

  v9 = *(_QWORD *)(a3 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](a1);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v9 + 16))(v11);
  v12 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v13 = (char *)swift_allocObject();
  *((_QWORD *)v13 + 2) = a2;
  *((_QWORD *)v13 + 3) = a3;
  *((_QWORD *)v13 + 4) = a4;
  *((_QWORD *)v13 + 5) = a5;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v13[v12], v11, a3);
  return sub_1D431CD70;
}

uint64_t sub_1D431B8E0(uint64_t a1)
{
  uint64_t v1;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v10;

  sub_1D431B9C0(v1 + *(_QWORD *)(*(_QWORD *)v1 + 128), *(_QWORD *)(*(_QWORD *)v1 + 80), *(_QWORD *)(*(_QWORD *)v1 + 88), *(_QWORD *)(*(_QWORD *)v1 + 96), *(_QWORD *)(*(_QWORD *)v1 + 104));
  swift_getAssociatedTypeWitness();
  v3 = (void (*)(uint64_t))sub_1D431E014();
  sub_1D4347A34(v3, v4, v5, v6, v7, v8, a1);
  swift_release();
  return v10;
}

uint64_t (*sub_1D431B9C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  char *v13;
  uint64_t v15;

  v9 = *(_QWORD *)(a3 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](a1);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v9 + 16))(v11);
  v12 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v13 = (char *)swift_allocObject();
  *((_QWORD *)v13 + 2) = a2;
  *((_QWORD *)v13 + 3) = a3;
  *((_QWORD *)v13 + 4) = a4;
  *((_QWORD *)v13 + 5) = a5;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v13[v12], v11, a3);
  return sub_1D431CCF4;
}

uint64_t sub_1D431BA8C(uint64_t a1)
{
  uint64_t v1;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t (*v7)(uint64_t);

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1D451A188();
  v3 = (void (*)(uint64_t))sub_1D431E014();
  return sub_1D4347A34(v3, v4, v5, v6, v7, v1, a1);
}

uint64_t sub_1D431BB6C(uint64_t a1, uint64_t a2)
{
  os_unfair_lock_s *v3;

  v3 = *(os_unfair_lock_s **)(*(_QWORD *)(a2 + 56) + 16);
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_1D431BC00(a2);
  os_unfair_lock_unlock(v3);
  swift_release();
  return sub_1D451A158();
}

uint64_t sub_1D431BC00(uint64_t a1)
{
  uint64_t v1;
  _OWORD v3[2];
  uint64_t v4;

  v1 = a1 + 16;
  v4 = 0;
  memset(v3, 0, sizeof(v3));
  swift_beginAccess();
  sub_1D431CC80((uint64_t)v3, v1);
  return swift_endAccess();
}

uint64_t sub_1D431BC60()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t *);
  uint64_t (*v3)(uint64_t *);
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  sub_1D431E030();
  v2 = *(void (**)(uint64_t *))(v1 + 96);
  v3 = *(uint64_t (**)(uint64_t *))(v1 + 112);
  v6 = v4;
  if (v2)
    v2(&v6);
  result = sub_1D431BCC0((uint64_t)&v6, v0);
  if (v3)
    return v3(&v6);
  return result;
}

uint64_t sub_1D431BCC0(uint64_t a1, uint64_t a2)
{
  os_unfair_lock_s *v3;
  _QWORD v5[3];
  uint64_t v6;
  _BYTE v7[40];

  v3 = *(os_unfair_lock_s **)(*(_QWORD *)(a2 + 56) + 16);
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_1D431BDA0(a2, (uint64_t)v5);
  sub_1D431CD90((uint64_t)v5, (uint64_t)v7);
  os_unfair_lock_unlock(v3);
  swift_release();
  sub_1D431CDD8((uint64_t)v7, (uint64_t)v5);
  if (v6)
  {
    sub_1D42B5528(v5, v6);
    sub_1D451A1DC();
    sub_1D431CE20((uint64_t)v7);
    return sub_1D42B5400((uint64_t)v5);
  }
  else
  {
    sub_1D431CE20((uint64_t)v7);
    return sub_1D431CE20((uint64_t)v5);
  }
}

uint64_t sub_1D431BDA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = a1 + 16;
  swift_beginAccess();
  return sub_1D431CDD8(v3, a2);
}

uint64_t sub_1D431BDF8()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  uint64_t (*v3)(uint64_t);
  uint64_t result;

  sub_1D431E030();
  v2 = *(void (**)(void))(v1 + 128);
  v3 = *(uint64_t (**)(uint64_t))(v1 + 144);
  if (v2)
    v2();
  result = sub_1D431BE44(v0);
  if (v3)
    return v3(result);
  return result;
}

uint64_t sub_1D431BE44(uint64_t a1)
{
  os_unfair_lock_s *v2;
  _QWORD v4[3];
  uint64_t v5;
  _BYTE v6[40];

  v2 = *(os_unfair_lock_s **)(*(_QWORD *)(a1 + 56) + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  sub_1D431BF1C(a1, (uint64_t)v4);
  sub_1D431CD90((uint64_t)v4, (uint64_t)v6);
  os_unfair_lock_unlock(v2);
  swift_release();
  sub_1D431CDD8((uint64_t)v6, (uint64_t)v4);
  if (v5)
  {
    sub_1D42B5528(v4, v5);
    sub_1D451A17C();
    sub_1D431CE20((uint64_t)v6);
    return sub_1D42B5400((uint64_t)v4);
  }
  else
  {
    sub_1D431CE20((uint64_t)v6);
    return sub_1D431CE20((uint64_t)v4);
  }
}

uint64_t sub_1D431BF1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _OWORD v5[2];
  uint64_t v6;

  v3 = a1 + 16;
  swift_beginAccess();
  sub_1D431CDD8(v3, a2);
  v6 = 0;
  memset(v5, 0, sizeof(v5));
  swift_beginAccess();
  sub_1D431CC80((uint64_t)v5, v3);
  return swift_endAccess();
}

uint64_t *sub_1D431BFA8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3[20];

  v1 = *v0;
  sub_1D431CE20((uint64_t)(v0 + 2));
  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 88) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 128));
  sub_1D431E028(v3, (char *)v0 + *(_QWORD *)(*v0 + 136));
  sub_1D431CE60(v3);
  return v0;
}

uint64_t sub_1D431C018()
{
  sub_1D431BFA8();
  return swift_deallocClassInstance();
}

void type metadata accessor for SnoopPublisher.Instance()
{
  JUMPOUT(0x1D825E3A4);
}

uint64_t sub_1D431C048()
{
  return swift_allocateGenericValueMetadata();
}

_QWORD *sub_1D431C050(_QWORD *result)
{
  _QWORD *v1;

  v1 = result;
  if (*result)
    result = (_QWORD *)swift_release();
  if (v1[2])
    result = (_QWORD *)swift_release();
  if (v1[4])
    result = (_QWORD *)swift_release();
  if (v1[6])
    result = (_QWORD *)swift_release();
  if (v1[8])
    result = (_QWORD *)swift_release();
  if (v1[10])
    result = (_QWORD *)swift_release();
  if (v1[12])
    result = (_QWORD *)swift_release();
  if (v1[14])
    result = (_QWORD *)swift_release();
  if (v1[16])
    result = (_QWORD *)swift_release();
  if (v1[18])
    return (_QWORD *)swift_release();
  return result;
}

_QWORD *sub_1D431C114(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if (*a2)
  {
    v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v5 = a2[2];
  if (v5)
  {
    v6 = a2[3];
    a1[2] = v5;
    a1[3] = v6;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
  }
  v7 = a2[4];
  if (v7)
  {
    v8 = a2[5];
    a1[4] = v7;
    a1[5] = v8;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  }
  v9 = a2[6];
  if (v9)
  {
    v10 = a2[7];
    a1[6] = v9;
    a1[7] = v10;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
  }
  v11 = a2[8];
  if (v11)
  {
    v12 = a2[9];
    a1[8] = v11;
    a1[9] = v12;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
  }
  v13 = a2[10];
  if (v13)
  {
    v14 = a2[11];
    a1[10] = v13;
    a1[11] = v14;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
  }
  v15 = a2[12];
  if (v15)
  {
    v16 = a2[13];
    a1[12] = v15;
    a1[13] = v16;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
  }
  v17 = a2[14];
  if (v17)
  {
    v18 = a2[15];
    a1[14] = v17;
    a1[15] = v18;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
  }
  v19 = a2[16];
  if (v19)
  {
    v20 = a2[17];
    a1[16] = v19;
    a1[17] = v20;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
  }
  v21 = a2[18];
  if (v21)
  {
    v22 = a2[19];
    a1[18] = v21;
    a1[19] = v22;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
  }
  return a1;
}

_QWORD *sub_1D431C2C0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      v5 = a2[1];
      *a1 = v4;
      a1[1] = v5;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    v6 = a2[1];
    *a1 = v4;
    a1[1] = v6;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  v7 = a2[2];
  if (a1[2])
  {
    if (v7)
    {
      v8 = a2[3];
      a1[2] = v7;
      a1[3] = v8;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v7)
  {
    v9 = a2[3];
    a1[2] = v7;
    a1[3] = v9;
    swift_retain();
    goto LABEL_15;
  }
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
LABEL_15:
  v10 = a2[4];
  if (a1[4])
  {
    if (v10)
    {
      v11 = a2[5];
      a1[4] = v10;
      a1[5] = v11;
      swift_retain();
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v10)
  {
    v12 = a2[5];
    a1[4] = v10;
    a1[5] = v12;
    swift_retain();
    goto LABEL_22;
  }
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
LABEL_22:
  v13 = a2[6];
  if (a1[6])
  {
    if (v13)
    {
      v14 = a2[7];
      a1[6] = v13;
      a1[7] = v14;
      swift_retain();
      swift_release();
      goto LABEL_29;
    }
    swift_release();
  }
  else if (v13)
  {
    v15 = a2[7];
    a1[6] = v13;
    a1[7] = v15;
    swift_retain();
    goto LABEL_29;
  }
  *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
LABEL_29:
  v16 = a2[8];
  if (a1[8])
  {
    if (v16)
    {
      v17 = a2[9];
      a1[8] = v16;
      a1[9] = v17;
      swift_retain();
      swift_release();
      goto LABEL_36;
    }
    swift_release();
  }
  else if (v16)
  {
    v18 = a2[9];
    a1[8] = v16;
    a1[9] = v18;
    swift_retain();
    goto LABEL_36;
  }
  *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
LABEL_36:
  v19 = a2[10];
  if (a1[10])
  {
    if (v19)
    {
      v20 = a2[11];
      a1[10] = v19;
      a1[11] = v20;
      swift_retain();
      swift_release();
      goto LABEL_43;
    }
    swift_release();
  }
  else if (v19)
  {
    v21 = a2[11];
    a1[10] = v19;
    a1[11] = v21;
    swift_retain();
    goto LABEL_43;
  }
  *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
LABEL_43:
  v22 = a2[12];
  if (a1[12])
  {
    if (v22)
    {
      v23 = a2[13];
      a1[12] = v22;
      a1[13] = v23;
      swift_retain();
      swift_release();
      goto LABEL_50;
    }
    swift_release();
  }
  else if (v22)
  {
    v24 = a2[13];
    a1[12] = v22;
    a1[13] = v24;
    swift_retain();
    goto LABEL_50;
  }
  *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
LABEL_50:
  v25 = a2[14];
  if (a1[14])
  {
    if (v25)
    {
      v26 = a2[15];
      a1[14] = v25;
      a1[15] = v26;
      swift_retain();
      swift_release();
      goto LABEL_57;
    }
    swift_release();
  }
  else if (v25)
  {
    v27 = a2[15];
    a1[14] = v25;
    a1[15] = v27;
    swift_retain();
    goto LABEL_57;
  }
  *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
LABEL_57:
  v28 = a2[16];
  if (a1[16])
  {
    if (v28)
    {
      v29 = a2[17];
      a1[16] = v28;
      a1[17] = v29;
      swift_retain();
      swift_release();
      goto LABEL_64;
    }
    swift_release();
  }
  else if (v28)
  {
    v30 = a2[17];
    a1[16] = v28;
    a1[17] = v30;
    swift_retain();
    goto LABEL_64;
  }
  *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
LABEL_64:
  v31 = a2[18];
  if (!a1[18])
  {
    if (v31)
    {
      v33 = a2[19];
      a1[18] = v31;
      a1[19] = v33;
      swift_retain();
      return a1;
    }
LABEL_70:
    *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
    return a1;
  }
  if (!v31)
  {
    swift_release();
    goto LABEL_70;
  }
  v32 = a2[19];
  a1[18] = v31;
  a1[19] = v32;
  swift_retain();
  swift_release();
  return a1;
}

